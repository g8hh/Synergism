{
  "version": 3,
  "sources": ["../node_modules/pad-end/index.js", "../node_modules/lz-string/libs/lz-string.js", "../node_modules/eventemitter3/index.js", "../node_modules/fast-unique-numbers/build/es5/bundle.js", "../node_modules/localforage/dist/localforage.js", "../node_modules/clipboard/dist/clipboard.js", "../node_modules/break_infinity.js/dist/break_infinity.esm.js", "../src/Synergism.ts", "../src/Cache/DOM.ts", "../src/Utility.ts", "../src/Variables.ts", "../src/Events.ts", "../node_modules/@babel/runtime/helpers/esm/typeof.js", "../node_modules/@babel/runtime/helpers/esm/classCallCheck.js", "../node_modules/@babel/runtime/helpers/esm/toPrimitive.js", "../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js", "../node_modules/@babel/runtime/helpers/esm/createClass.js", "../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js", "../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js", "../node_modules/@babel/runtime/helpers/esm/inherits.js", "../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js", "../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js", "../node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js", "../node_modules/@babel/runtime/helpers/esm/iterableToArray.js", "../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js", "../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js", "../node_modules/@babel/runtime/helpers/esm/toArray.js", "../node_modules/i18next/dist/esm/i18next.js", "../src/Achievements.ts", "../src/Talismans.ts", "../src/Runes.ts", "../src/Tesseracts.ts", "../src/Buy.ts", "../src/Automation.ts", "../src/Upgrades.ts", "../src/DynamicUpgrade.ts", "../src/singularity.ts", "../src/Research.ts", "../src/Hypercubes.ts", "../src/Themes.ts", "../src/Corruptions.ts", "../src/PlatonicCubes.ts", "../src/Quark.ts", "../src/CubeExperimental.ts", "../src/Config.ts", "../src/ImportExport.ts", "../src/Shop.ts", "../node_modules/worker-timers-broker/src/module.ts", "../node_modules/worker-timers-broker/src/guards/call-notification.ts", "../node_modules/worker-timers-broker/src/guards/clear-response.ts", "../node_modules/worker-timers/src/factories/load-worker-timers.ts", "../node_modules/worker-timers/src/worker/worker.ts", "../node_modules/worker-timers/src/module.ts", "../src/Timers.ts", "../src/Ants.ts", "../src/Hepteracts.ts", "../src/Statistics.ts", "../src/UpdateVisuals.ts", "../src/Helper.ts", "../src/Event.ts", "../src/Tabs.ts", "../src/Cubes.ts", "../src/Platonic.ts", "../src/Reset.ts", "../src/Hotkeys.ts", "../src/Calculate.ts", "../src/UpdateHTML.ts", "../src/Toggles.ts", "../src/Challenges.ts", "../src/History.ts", "../src/Tax.ts", "../src/Summary.ts", "../src/BlueberryUpgrades.ts", "../src/EventListeners.ts", "../src/Octeracts.ts", "../src/SingularityChallenges.ts", "../src/StatCache.ts", "../src/CheckVariables.ts", "../src/Plugins/ColorText.ts", "../src/i18n.ts"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = function (string, maxLength, fillString) {\n\n  if (string == null || maxLength == null) {\n    return string;\n  }\n\n  var result    = String(string);\n  var targetLen = typeof maxLength === 'number'\n    ? maxLength\n    : parseInt(maxLength, 10);\n\n  if (isNaN(targetLen) || !isFinite(targetLen)) {\n    return result;\n  }\n\n\n  var length = result.length;\n  if (length >= targetLen) {\n    return result;\n  }\n\n\n  var filled = fillString == null ? '' : String(fillString);\n  if (filled === '') {\n    filled = ' ';\n  }\n\n\n  var fillLen = targetLen - length;\n\n  while (filled.length < fillLen) {\n    filled += filled;\n  }\n\n  var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;\n\n  return result + truncated;\n};\n", "// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n\n\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n\n          return cache(collection, nextNumber);\n        } // Quickly check if there is a theoretical chance to generate a new number.\n\n\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        } // Otherwise use the full scale of safely usable integers.\n\n\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n", "/*!\n * clipboard.js v2.0.11\n * https://clipboardjs.com/\n *\n * Licensed MIT \u00A9 Zeno Rocha\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClipboardJS\"] = factory();\n\telse\n\t\troot[\"ClipboardJS\"] = factory();\n})(this, function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 686:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ clipboard; }\n});\n\n// EXTERNAL MODULE: ./node_modules/tiny-emitter/index.js\nvar tiny_emitter = __webpack_require__(279);\nvar tiny_emitter_default = /*#__PURE__*/__webpack_require__.n(tiny_emitter);\n// EXTERNAL MODULE: ./node_modules/good-listener/src/listen.js\nvar listen = __webpack_require__(370);\nvar listen_default = /*#__PURE__*/__webpack_require__.n(listen);\n// EXTERNAL MODULE: ./node_modules/select/src/select.js\nvar src_select = __webpack_require__(817);\nvar select_default = /*#__PURE__*/__webpack_require__.n(src_select);\n;// CONCATENATED MODULE: ./src/common/command.js\n/**\n * Executes a given operation type.\n * @param {String} type\n * @return {Boolean}\n */\nfunction command(type) {\n  try {\n    return document.execCommand(type);\n  } catch (err) {\n    return false;\n  }\n}\n;// CONCATENATED MODULE: ./src/actions/cut.js\n\n\n/**\n * Cut action wrapper.\n * @param {String|HTMLElement} target\n * @return {String}\n */\n\nvar ClipboardActionCut = function ClipboardActionCut(target) {\n  var selectedText = select_default()(target);\n  command('cut');\n  return selectedText;\n};\n\n/* harmony default export */ var actions_cut = (ClipboardActionCut);\n;// CONCATENATED MODULE: ./src/common/create-fake-element.js\n/**\n * Creates a fake textarea element with a value.\n * @param {String} value\n * @return {HTMLElement}\n */\nfunction createFakeElement(value) {\n  var isRTL = document.documentElement.getAttribute('dir') === 'rtl';\n  var fakeElement = document.createElement('textarea'); // Prevent zooming on iOS\n\n  fakeElement.style.fontSize = '12pt'; // Reset box model\n\n  fakeElement.style.border = '0';\n  fakeElement.style.padding = '0';\n  fakeElement.style.margin = '0'; // Move element out of screen horizontally\n\n  fakeElement.style.position = 'absolute';\n  fakeElement.style[isRTL ? 'right' : 'left'] = '-9999px'; // Move element to the same position vertically\n\n  var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  fakeElement.style.top = \"\".concat(yPosition, \"px\");\n  fakeElement.setAttribute('readonly', '');\n  fakeElement.value = value;\n  return fakeElement;\n}\n;// CONCATENATED MODULE: ./src/actions/copy.js\n\n\n\n/**\n * Create fake copy action wrapper using a fake element.\n * @param {String} target\n * @param {Object} options\n * @return {String}\n */\n\nvar fakeCopyAction = function fakeCopyAction(value, options) {\n  var fakeElement = createFakeElement(value);\n  options.container.appendChild(fakeElement);\n  var selectedText = select_default()(fakeElement);\n  command('copy');\n  fakeElement.remove();\n  return selectedText;\n};\n/**\n * Copy action wrapper.\n * @param {String|HTMLElement} target\n * @param {Object} options\n * @return {String}\n */\n\n\nvar ClipboardActionCopy = function ClipboardActionCopy(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    container: document.body\n  };\n  var selectedText = '';\n\n  if (typeof target === 'string') {\n    selectedText = fakeCopyAction(target, options);\n  } else if (target instanceof HTMLInputElement && !['text', 'search', 'url', 'tel', 'password'].includes(target === null || target === void 0 ? void 0 : target.type)) {\n    // If input type doesn't support `setSelectionRange`. Simulate it. https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n    selectedText = fakeCopyAction(target.value, options);\n  } else {\n    selectedText = select_default()(target);\n    command('copy');\n  }\n\n  return selectedText;\n};\n\n/* harmony default export */ var actions_copy = (ClipboardActionCopy);\n;// CONCATENATED MODULE: ./src/actions/default.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\n/**\n * Inner function which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n * @param {Object} options\n */\n\nvar ClipboardActionDefault = function ClipboardActionDefault() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // Defines base properties passed from constructor.\n  var _options$action = options.action,\n      action = _options$action === void 0 ? 'copy' : _options$action,\n      container = options.container,\n      target = options.target,\n      text = options.text; // Sets the `action` to be performed which can be either 'copy' or 'cut'.\n\n  if (action !== 'copy' && action !== 'cut') {\n    throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n  } // Sets the `target` property using an element that will be have its content copied.\n\n\n  if (target !== undefined) {\n    if (target && _typeof(target) === 'object' && target.nodeType === 1) {\n      if (action === 'copy' && target.hasAttribute('disabled')) {\n        throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n      }\n\n      if (action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n        throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n      }\n    } else {\n      throw new Error('Invalid \"target\" value, use a valid Element');\n    }\n  } // Define selection strategy based on `text` property.\n\n\n  if (text) {\n    return actions_copy(text, {\n      container: container\n    });\n  } // Defines which selection strategy based on `target` property.\n\n\n  if (target) {\n    return action === 'cut' ? actions_cut(target) : actions_copy(target, {\n      container: container\n    });\n  }\n};\n\n/* harmony default export */ var actions_default = (ClipboardActionDefault);\n;// CONCATENATED MODULE: ./src/clipboard.js\nfunction clipboard_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { clipboard_typeof = function _typeof(obj) { return typeof obj; }; } else { clipboard_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return clipboard_typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (clipboard_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n/**\n * Helper function to retrieve attribute value.\n * @param {String} suffix\n * @param {Element} element\n */\n\nfunction getAttributeValue(suffix, element) {\n  var attribute = \"data-clipboard-\".concat(suffix);\n\n  if (!element.hasAttribute(attribute)) {\n    return;\n  }\n\n  return element.getAttribute(attribute);\n}\n/**\n * Base class which takes one or more elements, adds event listeners to them,\n * and instantiates a new `ClipboardAction` on each click.\n */\n\n\nvar Clipboard = /*#__PURE__*/function (_Emitter) {\n  _inherits(Clipboard, _Emitter);\n\n  var _super = _createSuper(Clipboard);\n\n  /**\n   * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n   * @param {Object} options\n   */\n  function Clipboard(trigger, options) {\n    var _this;\n\n    _classCallCheck(this, Clipboard);\n\n    _this = _super.call(this);\n\n    _this.resolveOptions(options);\n\n    _this.listenClick(trigger);\n\n    return _this;\n  }\n  /**\n   * Defines if attributes would be resolved using internal setter functions\n   * or custom functions that were passed in the constructor.\n   * @param {Object} options\n   */\n\n\n  _createClass(Clipboard, [{\n    key: \"resolveOptions\",\n    value: function resolveOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n      this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n      this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n      this.container = clipboard_typeof(options.container) === 'object' ? options.container : document.body;\n    }\n    /**\n     * Adds a click event listener to the passed trigger.\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n     */\n\n  }, {\n    key: \"listenClick\",\n    value: function listenClick(trigger) {\n      var _this2 = this;\n\n      this.listener = listen_default()(trigger, 'click', function (e) {\n        return _this2.onClick(e);\n      });\n    }\n    /**\n     * Defines a new `ClipboardAction` on each click event.\n     * @param {Event} e\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      var trigger = e.delegateTarget || e.currentTarget;\n      var action = this.action(trigger) || 'copy';\n      var text = actions_default({\n        action: action,\n        container: this.container,\n        target: this.target(trigger),\n        text: this.text(trigger)\n      }); // Fires an event based on the copy operation result.\n\n      this.emit(text ? 'success' : 'error', {\n        action: action,\n        text: text,\n        trigger: trigger,\n        clearSelection: function clearSelection() {\n          if (trigger) {\n            trigger.focus();\n          }\n\n          window.getSelection().removeAllRanges();\n        }\n      });\n    }\n    /**\n     * Default `action` lookup function.\n     * @param {Element} trigger\n     */\n\n  }, {\n    key: \"defaultAction\",\n    value: function defaultAction(trigger) {\n      return getAttributeValue('action', trigger);\n    }\n    /**\n     * Default `target` lookup function.\n     * @param {Element} trigger\n     */\n\n  }, {\n    key: \"defaultTarget\",\n    value: function defaultTarget(trigger) {\n      var selector = getAttributeValue('target', trigger);\n\n      if (selector) {\n        return document.querySelector(selector);\n      }\n    }\n    /**\n     * Allow fire programmatically a copy action\n     * @param {String|HTMLElement} target\n     * @param {Object} options\n     * @returns Text copied.\n     */\n\n  }, {\n    key: \"defaultText\",\n\n    /**\n     * Default `text` lookup function.\n     * @param {Element} trigger\n     */\n    value: function defaultText(trigger) {\n      return getAttributeValue('text', trigger);\n    }\n    /**\n     * Destroy lifecycle.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.listener.destroy();\n    }\n  }], [{\n    key: \"copy\",\n    value: function copy(target) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        container: document.body\n      };\n      return actions_copy(target, options);\n    }\n    /**\n     * Allow fire programmatically a cut action\n     * @param {String|HTMLElement} target\n     * @returns Text cutted.\n     */\n\n  }, {\n    key: \"cut\",\n    value: function cut(target) {\n      return actions_cut(target);\n    }\n    /**\n     * Returns the support of the given action, or all actions if no action is\n     * given.\n     * @param {String} [action]\n     */\n\n  }, {\n    key: \"isSupported\",\n    value: function isSupported() {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n      var actions = typeof action === 'string' ? [action] : action;\n      var support = !!document.queryCommandSupported;\n      actions.forEach(function (action) {\n        support = support && !!document.queryCommandSupported(action);\n      });\n      return support;\n    }\n  }]);\n\n  return Clipboard;\n}((tiny_emitter_default()));\n\n/* harmony default export */ var clipboard = (Clipboard);\n\n/***/ }),\n\n/***/ 828:\n/***/ (function(module) {\n\nvar DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar closest = __webpack_require__(828);\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n\n\n/***/ }),\n\n/***/ 879:\n/***/ (function(__unused_webpack_module, exports) {\n\n/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n\n\n/***/ }),\n\n/***/ 370:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar is = __webpack_require__(879);\nvar delegate = __webpack_require__(438);\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n\n\n/***/ }),\n\n/***/ 817:\n/***/ (function(module) {\n\nfunction select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n\n\n/***/ }),\n\n/***/ 279:\n/***/ (function(module) {\n\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(686);\n/******/ })()\n.default;\n});", "import t from\"pad-end\";var n=9e15,e=function(){for(var t=[],n=-323;n<=308;n++)t.push(Number(\"1e\"+n));return function(n){return t[n+323]}}(),r=function(t){return t instanceof a?t:new a(t)},i=function(t,n){return(new a).fromMantissaExponent(t,n)},o=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)};function u(t,n,e,r){var i=n.mul(e.pow(r));return a.floor(t.div(i).mul(e.sub(1)).add(1).log10()/e.log10())}function s(t,n,e,r){return n.mul(e.pow(r)).mul(a.sub(1,e.pow(t))).div(a.sub(1,e))}var a=function(){function a(t){this.mantissa=NaN,this.exponent=NaN,void 0===t?(this.m=0,this.e=0):t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):this.fromString(t)}return Object.defineProperty(a.prototype,\"m\",{get:function(){return this.mantissa},set:function(t){this.mantissa=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"e\",{get:function(){return this.exponent},set:function(t){this.exponent=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"s\",{get:function(){return this.sign()},set:function(t){if(0===t)return this.e=0,void(this.m=0);this.sgn()!==t&&(this.m=-this.m)},enumerable:!1,configurable:!0}),a.fromMantissaExponent=function(t,n){return(new a).fromMantissaExponent(t,n)},a.fromMantissaExponent_noNormalize=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)},a.fromDecimal=function(t){return(new a).fromDecimal(t)},a.fromNumber=function(t){return(new a).fromNumber(t)},a.fromString=function(t){return(new a).fromString(t)},a.fromValue=function(t){return(new a).fromValue(t)},a.fromValue_noAlloc=function(t){return t instanceof a?t:new a(t)},a.abs=function(t){return r(t).abs()},a.neg=function(t){return r(t).neg()},a.negate=function(t){return r(t).neg()},a.negated=function(t){return r(t).neg()},a.sign=function(t){return r(t).sign()},a.sgn=function(t){return r(t).sign()},a.round=function(t){return r(t).round()},a.floor=function(t){return r(t).floor()},a.ceil=function(t){return r(t).ceil()},a.trunc=function(t){return r(t).trunc()},a.add=function(t,n){return r(t).add(n)},a.plus=function(t,n){return r(t).add(n)},a.sub=function(t,n){return r(t).sub(n)},a.subtract=function(t,n){return r(t).sub(n)},a.minus=function(t,n){return r(t).sub(n)},a.mul=function(t,n){return r(t).mul(n)},a.multiply=function(t,n){return r(t).mul(n)},a.times=function(t,n){return r(t).mul(n)},a.div=function(t,n){return r(t).div(n)},a.divide=function(t,n){return r(t).div(n)},a.recip=function(t){return r(t).recip()},a.reciprocal=function(t){return r(t).recip()},a.reciprocate=function(t){return r(t).reciprocate()},a.cmp=function(t,n){return r(t).cmp(n)},a.compare=function(t,n){return r(t).cmp(n)},a.eq=function(t,n){return r(t).eq(n)},a.equals=function(t,n){return r(t).eq(n)},a.neq=function(t,n){return r(t).neq(n)},a.notEquals=function(t,n){return r(t).notEquals(n)},a.lt=function(t,n){return r(t).lt(n)},a.lte=function(t,n){return r(t).lte(n)},a.gt=function(t,n){return r(t).gt(n)},a.gte=function(t,n){return r(t).gte(n)},a.max=function(t,n){return r(t).max(n)},a.min=function(t,n){return r(t).min(n)},a.clamp=function(t,n,e){return r(t).clamp(n,e)},a.clampMin=function(t,n){return r(t).clampMin(n)},a.clampMax=function(t,n){return r(t).clampMax(n)},a.cmp_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.compare_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.eq_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.equals_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.neq_tolerance=function(t,n,e){return r(t).neq_tolerance(n,e)},a.notEquals_tolerance=function(t,n,e){return r(t).notEquals_tolerance(n,e)},a.lt_tolerance=function(t,n,e){return r(t).lt_tolerance(n,e)},a.lte_tolerance=function(t,n,e){return r(t).lte_tolerance(n,e)},a.gt_tolerance=function(t,n,e){return r(t).gt_tolerance(n,e)},a.gte_tolerance=function(t,n,e){return r(t).gte_tolerance(n,e)},a.log10=function(t){return r(t).log10()},a.absLog10=function(t){return r(t).absLog10()},a.pLog10=function(t){return r(t).pLog10()},a.log=function(t,n){return r(t).log(n)},a.log2=function(t){return r(t).log2()},a.ln=function(t){return r(t).ln()},a.logarithm=function(t,n){return r(t).logarithm(n)},a.pow10=function(t){return Number.isInteger(t)?o(1,t):i(Math.pow(10,t%1),Math.trunc(t))},a.pow=function(t,n){return\"number\"==typeof t&&10===t&&\"number\"==typeof n&&Number.isInteger(n)?o(1,n):r(t).pow(n)},a.exp=function(t){return r(t).exp()},a.sqr=function(t){return r(t).sqr()},a.sqrt=function(t){return r(t).sqrt()},a.cube=function(t){return r(t).cube()},a.cbrt=function(t){return r(t).cbrt()},a.dp=function(t){return r(t).dp()},a.decimalPlaces=function(t){return r(t).dp()},a.affordGeometricSeries=function(t,n,e,i){return u(r(t),r(n),r(e),i)},a.sumGeometricSeries=function(t,n,e,i){return s(t,r(n),r(e),i)},a.affordArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e)).sub(e.div(2)),o=i.pow(2);return i.neg().add(o.add(e.mul(t).mul(2)).sqrt()).div(e).floor()}(r(t),r(n),r(e),r(i))},a.sumArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e));return t.div(2).mul(i.mul(2).plus(t.sub(1).mul(e)))}(r(t),r(n),r(e),r(i))},a.efficiencyOfPurchase=function(t,n,e){return function(t,n,e){return t.div(n).add(t.div(e))}(r(t),r(n),r(e))},a.randomDecimalForTesting=function(t){if(20*Math.random()<1)return o(0,0);var n=10*Math.random();10*Math.random()<1&&(n=Math.round(n)),n*=Math.sign(2*Math.random()-1);var e=Math.floor(Math.random()*t*2)-t;return i(n,e)},a.prototype.normalize=function(){if(this.m>=1&&this.m<10)return this;if(0===this.m)return this.m=0,this.e=0,this;var t=Math.floor(Math.log10(Math.abs(this.m)));return this.m=-324===t?10*this.m/1e-323:this.m/e(t),this.e+=t,this},a.prototype.fromMantissaExponent=function(t,n){return isFinite(t)&&isFinite(n)?(this.m=t,this.e=n,this.normalize(),this):(t=Number.NaN,n=Number.NaN,this)},a.prototype.fromMantissaExponent_noNormalize=function(t,n){return this.m=t,this.e=n,this},a.prototype.fromDecimal=function(t){return this.m=t.m,this.e=t.e,this},a.prototype.fromNumber=function(t){return isNaN(t)?(this.m=Number.NaN,this.e=Number.NaN):t===Number.POSITIVE_INFINITY?(this.m=1,this.e=n):t===Number.NEGATIVE_INFINITY?(this.m=-1,this.e=n):0===t?(this.m=0,this.e=0):(this.e=Math.floor(Math.log10(Math.abs(t))),this.m=-324===this.e?10*t/1e-323:t/e(this.e),this.normalize()),this},a.prototype.fromString=function(t){if(-1!==t.indexOf(\"e\")){var n=t.split(\"e\");this.m=parseFloat(n[0]),this.e=parseFloat(n[1]),this.normalize()}else if(\"NaN\"===t)this.m=Number.NaN,this.e=Number.NaN;else if(this.fromNumber(parseFloat(t)),isNaN(this.m))throw Error(\"[DecimalError] Invalid argument: \"+t);return this},a.prototype.fromValue=function(t){return t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):\"string\"==typeof t?this.fromString(t):(this.m=0,this.e=0,this)},a.prototype.toNumber=function(){if(!isFinite(this.e))return Number.NaN;if(this.e>308)return this.m>0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY;if(this.e<-324)return 0;if(-324===this.e)return this.m>0?5e-324:-5e-324;var t=this.m*e(this.e);if(!isFinite(t)||this.e<0)return t;var n=Math.round(t);return Math.abs(n-t)<1e-10?n:t},a.prototype.mantissaWithDecimalPlaces=function(t){if(isNaN(this.m)||isNaN(this.e))return Number.NaN;if(0===this.m)return 0;var n=t+1,e=Math.ceil(Math.log10(Math.abs(this.m))),r=Math.round(this.m*Math.pow(10,n-e))*Math.pow(10,e-n);return parseFloat(r.toFixed(Math.max(n-e,0)))},a.prototype.toString=function(){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\":this.e<21&&this.e>-7?this.toNumber().toString():this.m+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toExponential=function(e){if(isNaN(this.m)||isNaN(this.e))return\"NaN\";if(this.e>=n)return this.m>0?\"Infinity\":\"-Infinity\";if(this.e<=-n||0===this.m)return\"0\"+(e>0?t(\".\",e+1,\"0\"):\"\")+\"e+0\";if(this.e>-324&&this.e<308)return this.toNumber().toExponential(e);isFinite(e)||(e=17);var r=e+1,i=Math.max(1,Math.ceil(Math.log10(Math.abs(this.m))));return(Math.round(this.m*Math.pow(10,r-i))*Math.pow(10,i-r)).toFixed(Math.max(r-i,0))+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toFixed=function(e){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\"+(e>0?t(\".\",e+1,\"0\"):\"\"):this.e>=17?this.m.toString().replace(\".\",\"\").padEnd(this.e+1,\"0\")+(e>0?t(\".\",e+1,\"0\"):\"\"):this.toNumber().toFixed(e)},a.prototype.toPrecision=function(t){return this.e<=-7?this.toExponential(t-1):t>this.e?this.toFixed(t-this.e-1):this.toExponential(t-1)},a.prototype.valueOf=function(){return this.toString()},a.prototype.toJSON=function(){return this.toString()},a.prototype.toStringWithDecimalPlaces=function(t){return this.toExponential(t)},a.prototype.abs=function(){return o(Math.abs(this.m),this.e)},a.prototype.neg=function(){return o(-this.m,this.e)},a.prototype.negate=function(){return this.neg()},a.prototype.negated=function(){return this.neg()},a.prototype.sign=function(){return Math.sign(this.m)},a.prototype.sgn=function(){return this.sign()},a.prototype.round=function(){return this.e<-1?new a(0):this.e<17?new a(Math.round(this.toNumber())):this},a.prototype.floor=function(){return this.e<-1?Math.sign(this.m)>=0?new a(0):new a(-1):this.e<17?new a(Math.floor(this.toNumber())):this},a.prototype.ceil=function(){return this.e<-1?Math.sign(this.m)>0?new a(1):new a(0):this.e<17?new a(Math.ceil(this.toNumber())):this},a.prototype.trunc=function(){return this.e<0?new a(0):this.e<17?new a(Math.trunc(this.toNumber())):this},a.prototype.add=function(t){var n,o,u=r(t);if(0===this.m)return u;if(0===u.m)return this;if(this.e>=u.e?(n=this,o=u):(n=u,o=this),n.e-o.e>17)return n;var s=Math.round(1e14*n.m+1e14*o.m*e(o.e-n.e));return i(s,n.e-14)},a.prototype.plus=function(t){return this.add(t)},a.prototype.sub=function(t){return this.add(r(t).neg())},a.prototype.subtract=function(t){return this.sub(t)},a.prototype.minus=function(t){return this.sub(t)},a.prototype.mul=function(t){if(\"number\"==typeof t)return t<1e307&&t>-1e307?i(this.m*t,this.e):i(1e-307*this.m*t,this.e+307);var n=\"string\"==typeof t?new a(t):t;return i(this.m*n.m,this.e+n.e)},a.prototype.multiply=function(t){return this.mul(t)},a.prototype.times=function(t){return this.mul(t)},a.prototype.div=function(t){return this.mul(r(t).recip())},a.prototype.divide=function(t){return this.div(t)},a.prototype.divideBy=function(t){return this.div(t)},a.prototype.dividedBy=function(t){return this.div(t)},a.prototype.recip=function(){return i(1/this.m,-this.e)},a.prototype.reciprocal=function(){return this.recip()},a.prototype.reciprocate=function(){return this.recip()},a.prototype.cmp=function(t){var n=r(t);if(0===this.m){if(0===n.m)return 0;if(n.m<0)return 1;if(n.m>0)return-1}if(0===n.m){if(this.m<0)return-1;if(this.m>0)return 1}if(this.m>0)return n.m<0||this.e>n.e?1:this.e<n.e?-1:this.m>n.m?1:this.m<n.m?-1:0;if(this.m<0)return n.m>0||this.e>n.e?-1:this.e<n.e||this.m>n.m?1:this.m<n.m?-1:0;throw Error(\"Unreachable code\")},a.prototype.compare=function(t){return this.cmp(t)},a.prototype.eq=function(t){var n=r(t);return this.e===n.e&&this.m===n.m},a.prototype.equals=function(t){return this.eq(t)},a.prototype.neq=function(t){return!this.eq(t)},a.prototype.notEquals=function(t){return this.neq(t)},a.prototype.lt=function(t){var n=r(t);return 0===this.m?n.m>0:0===n.m?this.m<=0:this.e===n.e?this.m<n.m:this.m>0?n.m>0&&this.e<n.e:n.m>0||this.e>n.e},a.prototype.lte=function(t){return!this.gt(t)},a.prototype.gt=function(t){var n=r(t);return 0===this.m?n.m<0:0===n.m?this.m>0:this.e===n.e?this.m>n.m:this.m>0?n.m<0||this.e>n.e:n.m<0&&this.e<n.e},a.prototype.gte=function(t){return!this.lt(t)},a.prototype.max=function(t){var n=r(t);return this.lt(n)?n:this},a.prototype.min=function(t){var n=r(t);return this.gt(n)?n:this},a.prototype.clamp=function(t,n){return this.max(t).min(n)},a.prototype.clampMin=function(t){return this.max(t)},a.prototype.clampMax=function(t){return this.min(t)},a.prototype.cmp_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)?0:this.cmp(e)},a.prototype.compare_tolerance=function(t,n){return this.cmp_tolerance(t,n)},a.prototype.eq_tolerance=function(t,n){var e=r(t);return a.lte(this.sub(e).abs(),a.max(this.abs(),e.abs()).mul(n))},a.prototype.equals_tolerance=function(t,n){return this.eq_tolerance(t,n)},a.prototype.neq_tolerance=function(t,n){return!this.eq_tolerance(t,n)},a.prototype.notEquals_tolerance=function(t,n){return this.neq_tolerance(t,n)},a.prototype.lt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.lt(e)},a.prototype.lte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.lt(e)},a.prototype.gt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.gt(e)},a.prototype.gte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.gt(e)},a.prototype.log10=function(){return this.e+Math.log10(this.m)},a.prototype.absLog10=function(){return this.e+Math.log10(Math.abs(this.m))},a.prototype.pLog10=function(){return this.m<=0||this.e<0?0:this.log10()},a.prototype.log=function(t){return Math.LN10/Math.log(t)*this.log10()},a.prototype.log2=function(){return 3.321928094887362*this.log10()},a.prototype.ln=function(){return 2.302585092994045*this.log10()},a.prototype.logarithm=function(t){return this.log(t)},a.prototype.pow=function(t){var n,e=t instanceof a?t.toNumber():t,r=this.e*e;if(Number.isSafeInteger(r)&&(n=Math.pow(this.m,e),isFinite(n)&&0!==n))return i(n,r);var o=Math.trunc(r),u=r-o;if(n=Math.pow(10,e*Math.log10(this.m)+u),isFinite(n)&&0!==n)return i(n,o);var s=a.pow10(e*this.absLog10());return-1===this.sign()?1===Math.abs(e%2)?s.neg():0===Math.abs(e%2)?s:new a(Number.NaN):s},a.prototype.pow_base=function(t){return r(t).pow(this)},a.prototype.factorial=function(){var t=this.toNumber()+1;return a.pow(t/Math.E*Math.sqrt(t*Math.sinh(1/t)+1/(810*Math.pow(t,6))),t).mul(Math.sqrt(2*Math.PI/t))},a.prototype.exp=function(){var t=this.toNumber();return-706<t&&t<709?a.fromNumber(Math.exp(t)):a.pow(Math.E,t)},a.prototype.sqr=function(){return i(Math.pow(this.m,2),2*this.e)},a.prototype.sqrt=function(){return this.m<0?new a(Number.NaN):this.e%2!=0?i(3.16227766016838*Math.sqrt(this.m),Math.floor(this.e/2)):i(Math.sqrt(this.m),Math.floor(this.e/2))},a.prototype.cube=function(){return i(Math.pow(this.m,3),3*this.e)},a.prototype.cbrt=function(){var t=1,n=this.m;n<0&&(t=-1,n=-n);var e=t*Math.pow(n,1/3),r=this.e%3;return i(1===r||-1===r?2.154434690031883*e:0!==r?4.641588833612778*e:e,Math.floor(this.e/3))},a.prototype.sinh=function(){return this.exp().sub(this.negate().exp()).div(2)},a.prototype.cosh=function(){return this.exp().add(this.negate().exp()).div(2)},a.prototype.tanh=function(){return this.sinh().div(this.cosh())},a.prototype.asinh=function(){return a.ln(this.add(this.sqr().add(1).sqrt()))},a.prototype.acosh=function(){return a.ln(this.add(this.sqr().sub(1).sqrt()))},a.prototype.atanh=function(){return this.abs().gte(1)?Number.NaN:a.ln(this.add(1).div(new a(1).sub(this)))/2},a.prototype.ascensionPenalty=function(t){return 0===t?this:this.pow(Math.pow(10,-t))},a.prototype.egg=function(){return this.add(9)},a.prototype.lessThanOrEqualTo=function(t){return this.cmp(t)<1},a.prototype.lessThan=function(t){return this.cmp(t)<0},a.prototype.greaterThanOrEqualTo=function(t){return this.cmp(t)>-1},a.prototype.greaterThan=function(t){return this.cmp(t)>0},a.prototype.decimalPlaces=function(){return this.dp()},a.prototype.dp=function(){if(!isFinite(this.mantissa))return NaN;if(this.exponent>=17)return 0;for(var t=this.mantissa,n=-this.exponent,e=1;Math.abs(Math.round(t*e)/e-t)>1e-10;)e*=10,n++;return n>0?n:0},Object.defineProperty(a,\"MAX_VALUE\",{get:function(){return h},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"MIN_VALUE\",{get:function(){return c},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MAX_VALUE\",{get:function(){return p},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MIN_VALUE\",{get:function(){return f},enumerable:!1,configurable:!0}),a}(),h=o(1,n),c=o(1,-n),p=r(Number.MAX_VALUE),f=r(Number.MIN_VALUE);export default a;\n", "import type { DecimalSource } from 'break_infinity.js'\r\nimport Decimal from 'break_infinity.js'\r\nimport LZString from 'lz-string'\r\n\r\nimport { isDecimal, sortWithIndices, sumContents, btoa, cleanString } from './Utility'\r\nimport { blankGlobals, Globals as G } from './Variables'\r\nimport { CalcECC, getChallengeConditions, challengeDisplay, highestChallengeRewards, challengeRequirement, runChallengeSweep, getMaxChallenges, challenge15ScoreMultiplier, getNextChallenge, autoAscensionChallengeSweepUnlock } from './Challenges'\r\n\r\nimport type { OneToFive, Player, resetNames, ZeroToFour } from './types/Synergism'\r\nimport { upgradeupdate, getConstUpgradeMetadata, buyConstantUpgrades, ascendBuildingDR, categoryUpgrades } from './Upgrades'\r\nimport { updateResearchBG, maxRoombaResearchIndex, buyResearch } from './Research'\r\nimport { updateChallengeDisplay, revealStuff, showCorruptionStatsLoadouts, updateAchievementBG, updateChallengeLevel, buttoncolorchange, htmlInserts, changeTabColor, Confirm, Alert, Notification } from './UpdateHTML'\r\nimport { calculateHypercubeBlessings } from './Hypercubes'\r\nimport { calculateTesseractBlessings } from './Tesseracts'\r\nimport { calculateCubeBlessings, calculateObtainium, calculateAnts, calculateRuneLevels, calculateOffline, calculateSigmoidExponential, calculateCorruptionPoints, calculateTotalCoinOwned, calculateTotalAcceleratorBoost, dailyResetCheck, calculateOfferings, calculateAcceleratorMultiplier, calculateTimeAcceleration, exitOffline, calculateGoldenQuarkGain } from './Calculate'\r\nimport { updateTalismanAppearance, toggleTalismanBuy, updateTalismanInventory, buyTalismanEnhance, buyTalismanLevels, calculateMaxTalismanLevel } from './Talismans'\r\nimport { toggleAscStatPerSecond, toggleChallenges, toggleauto, toggleAutoChallengeModeText, toggleShops, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleAutoAscend, updateAutoChallenge, updateRuneBlessingBuyAmount, autoCubeUpgradesToggle, autoPlatonicUpgradesToggle } from './Toggles'\r\nimport { c15RewardUpdate } from './Statistics'\r\nimport { resetHistoryRenderAllTables } from './History'\r\nimport { calculatePlatonicBlessings } from './PlatonicCubes'\r\nimport { antSacrificePointsToMultiplier, autoBuyAnts, calculateCrumbToCoinExp } from './Ants'\r\nimport { calculatetax } from './Tax'\r\nimport { ascensionAchievementCheck, challengeachievementcheck, achievementaward, resetachievementcheck, buildingAchievementCheck } from './Achievements'\r\nimport { reset, resetrepeat, singularity, updateSingularityAchievements, updateAutoReset, updateTesseractAutoBuyAmount, updateAutoCubesOpens, updateSingularityGlobalPerks } from './Reset'\r\nimport type { TesseractBuildings } from './Buy'\r\nimport { buyMax, buyAccelerator, buyMultiplier, boostAccelerator, buyCrystalUpgrades, buyParticleBuilding, getReductionValue, getCost, buyRuneBonusLevels, buyTesseractBuilding, calculateTessBuildingsInBudget } from './Buy'\r\nimport { autoUpgrades } from './Automation'\r\nimport { redeemShards } from './Runes'\r\nimport { updateCubeUpgradeBG } from './Cubes'\r\nimport { corruptionLoadoutTableUpdate, corruptionButtonsAdd, corruptionLoadoutTableCreate, corruptionStatsUpdate, updateCorruptionLoadoutNames, corruptionLoadoutSaveLoad, corrChallengeMinimum, maxCorruptionLevel } from './Corruptions'\r\nimport { generateEventHandlers } from './EventListeners'\r\nimport { addTimers, automaticTools } from './Helper'\r\nimport { autoResearchEnabled } from './Research'\r\n//import { LegacyShopUpgrades } from './types/LegacySynergism';\r\n\r\nimport { checkVariablesOnLoad } from './CheckVariables'\r\nimport { AbyssHepteract, AcceleratorBoostHepteract, AcceleratorHepteract, ChallengeHepteract, ChronosHepteract, hepteractEffective, HyperrealismHepteract, MultiplierHepteract, QuarkHepteract, toggleAutoBuyOrbs } from './Hepteracts'\r\nimport { QuarkHandler } from './Quark'\r\nimport { WowCubes, WowHypercubes, WowPlatonicCubes, WowTesseracts } from './CubeExperimental'\r\nimport { updatePlatonicUpgradeBG } from './Platonic'\r\nimport { testing, version, lastUpdated, prod } from './Config'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport localforage from 'localforage'\r\nimport { singularityData, SingularityUpgrade, getFastForwardTotalMultiplier } from './singularity'\r\nimport type { PlayerSave } from './types/LegacySynergism'\r\nimport { eventCheck } from './Event'\r\nimport { disableHotkeys } from './Hotkeys'\r\nimport { octeractData, OcteractUpgrade } from './Octeracts'\r\nimport { settingAnnotation, toggleTheme, toggleIconSet } from './Themes'\r\nimport { setInterval, setTimeout, clearTimeout, clearTimers } from './Timers'\r\nimport { SingularityChallenge, singularityChallengeData } from './SingularityChallenges'\r\nimport { init as i18nInit } from './i18n'\r\nimport i18next from 'i18next'\r\nimport { changeTab, changeSubTab } from './Tabs'\r\nimport { AmbrosiaGenerationCache, AmbrosiaLuckCache, BlueberryInventoryCache, cacheReinitialize } from './StatCache'\r\nimport { BlueberryUpgrade, blueberryUpgradeData } from './BlueberryUpgrades'\r\n\r\nexport const player: Player = {\r\n  firstPlayed: new Date().toISOString(),\r\n  worlds: new QuarkHandler({ quarks: 0, bonus: 0 }),\r\n  coins: new Decimal('1e2'),\r\n  coinsThisPrestige: new Decimal('1e2'),\r\n  coinsThisTranscension: new Decimal('1e2'),\r\n  coinsThisReincarnation: new Decimal('1e2'),\r\n  coinsTotal: new Decimal('100'),\r\n\r\n  firstOwnedCoin: 0,\r\n  firstGeneratedCoin: new Decimal('0'),\r\n  firstCostCoin: new Decimal('100'),\r\n  firstProduceCoin: 0.25,\r\n\r\n  secondOwnedCoin: 0,\r\n  secondGeneratedCoin: new Decimal('0'),\r\n  secondCostCoin: new Decimal('1e3'),\r\n  secondProduceCoin: 2.5,\r\n\r\n  thirdOwnedCoin: 0,\r\n  thirdGeneratedCoin: new Decimal('0'),\r\n  thirdCostCoin: new Decimal('2e4'),\r\n  thirdProduceCoin: 25,\r\n\r\n  fourthOwnedCoin: 0,\r\n  fourthGeneratedCoin: new Decimal('0'),\r\n  fourthCostCoin: new Decimal('4e5'),\r\n  fourthProduceCoin: 250,\r\n\r\n  fifthOwnedCoin: 0,\r\n  fifthGeneratedCoin: new Decimal('0'),\r\n  fifthCostCoin: new Decimal('8e6'),\r\n  fifthProduceCoin: 2500,\r\n\r\n  firstOwnedDiamonds: 0,\r\n  firstGeneratedDiamonds: new Decimal('0'),\r\n  firstCostDiamonds: new Decimal('100'),\r\n  firstProduceDiamonds: 0.05,\r\n\r\n  secondOwnedDiamonds: 0,\r\n  secondGeneratedDiamonds: new Decimal('0'),\r\n  secondCostDiamonds: new Decimal('1e5'),\r\n  secondProduceDiamonds: 0.0005,\r\n\r\n  thirdOwnedDiamonds: 0,\r\n  thirdGeneratedDiamonds: new Decimal('0'),\r\n  thirdCostDiamonds: new Decimal('1e15'),\r\n  thirdProduceDiamonds: 0.00005,\r\n\r\n  fourthOwnedDiamonds: 0,\r\n  fourthGeneratedDiamonds: new Decimal('0'),\r\n  fourthCostDiamonds: new Decimal('1e40'),\r\n  fourthProduceDiamonds: 0.000005,\r\n\r\n  fifthOwnedDiamonds: 0,\r\n  fifthGeneratedDiamonds: new Decimal('0'),\r\n  fifthCostDiamonds: new Decimal('1e100'),\r\n  fifthProduceDiamonds: 0.000005,\r\n\r\n  firstOwnedMythos: 0,\r\n  firstGeneratedMythos: new Decimal('0'),\r\n  firstCostMythos: new Decimal('1'),\r\n  firstProduceMythos: 1,\r\n\r\n  secondOwnedMythos: 0,\r\n  secondGeneratedMythos: new Decimal('0'),\r\n  secondCostMythos: new Decimal('100'),\r\n  secondProduceMythos: 0.01,\r\n\r\n  thirdOwnedMythos: 0,\r\n  thirdGeneratedMythos: new Decimal('0'),\r\n  thirdCostMythos: new Decimal('1e4'),\r\n  thirdProduceMythos: 0.001,\r\n\r\n  fourthOwnedMythos: 0,\r\n  fourthGeneratedMythos: new Decimal('0'),\r\n  fourthCostMythos: new Decimal('1e8'),\r\n  fourthProduceMythos: 0.0002,\r\n\r\n  fifthOwnedMythos: 0,\r\n  fifthGeneratedMythos: new Decimal('0'),\r\n  fifthCostMythos: new Decimal('1e16'),\r\n  fifthProduceMythos: 0.00004,\r\n\r\n  firstOwnedParticles: 0,\r\n  firstGeneratedParticles: new Decimal('0'),\r\n  firstCostParticles: new Decimal('1'),\r\n  firstProduceParticles: .25,\r\n\r\n  secondOwnedParticles: 0,\r\n  secondGeneratedParticles: new Decimal('0'),\r\n  secondCostParticles: new Decimal('100'),\r\n  secondProduceParticles: .20,\r\n\r\n  thirdOwnedParticles: 0,\r\n  thirdGeneratedParticles: new Decimal('0'),\r\n  thirdCostParticles: new Decimal('1e4'),\r\n  thirdProduceParticles: .15,\r\n\r\n  fourthOwnedParticles: 0,\r\n  fourthGeneratedParticles: new Decimal('0'),\r\n  fourthCostParticles: new Decimal('1e8'),\r\n  fourthProduceParticles: .10,\r\n\r\n  fifthOwnedParticles: 0,\r\n  fifthGeneratedParticles: new Decimal('0'),\r\n  fifthCostParticles: new Decimal('1e16'),\r\n  fifthProduceParticles: .5,\r\n\r\n  firstOwnedAnts: 0,\r\n  firstGeneratedAnts: new Decimal('0'),\r\n  firstCostAnts: new Decimal('1e700'),\r\n  firstProduceAnts: .0001,\r\n\r\n  secondOwnedAnts: 0,\r\n  secondGeneratedAnts: new Decimal('0'),\r\n  secondCostAnts: new Decimal('3'),\r\n  secondProduceAnts: .00005,\r\n\r\n  thirdOwnedAnts: 0,\r\n  thirdGeneratedAnts: new Decimal('0'),\r\n  thirdCostAnts: new Decimal('100'),\r\n  thirdProduceAnts: .00002,\r\n\r\n  fourthOwnedAnts: 0,\r\n  fourthGeneratedAnts: new Decimal('0'),\r\n  fourthCostAnts: new Decimal('1e4'),\r\n  fourthProduceAnts: .00001,\r\n\r\n  fifthOwnedAnts: 0,\r\n  fifthGeneratedAnts: new Decimal('0'),\r\n  fifthCostAnts: new Decimal('1e12'),\r\n  fifthProduceAnts: .000005,\r\n\r\n  sixthOwnedAnts: 0,\r\n  sixthGeneratedAnts: new Decimal('0'),\r\n  sixthCostAnts: new Decimal('1e36'),\r\n  sixthProduceAnts: .000002,\r\n\r\n  seventhOwnedAnts: 0,\r\n  seventhGeneratedAnts: new Decimal('0'),\r\n  seventhCostAnts: new Decimal('1e100'),\r\n  seventhProduceAnts: .000001,\r\n\r\n  eighthOwnedAnts: 0,\r\n  eighthGeneratedAnts: new Decimal('0'),\r\n  eighthCostAnts: new Decimal('1e300'),\r\n  eighthProduceAnts: .00000001,\r\n\r\n  ascendBuilding1: {\r\n    cost: 1,\r\n    owned: 0,\r\n    generated: new Decimal('0'),\r\n    multiplier: 0.01\r\n  },\r\n  ascendBuilding2: {\r\n    cost: 10,\r\n    owned: 0,\r\n    generated: new Decimal('0'),\r\n    multiplier: 0.01\r\n  },\r\n  ascendBuilding3: {\r\n    cost: 100,\r\n    owned: 0,\r\n    generated: new Decimal('0'),\r\n    multiplier: 0.01\r\n  },\r\n  ascendBuilding4: {\r\n    cost: 1000,\r\n    owned: 0,\r\n    generated: new Decimal('0'),\r\n    multiplier: 0.01\r\n  },\r\n  ascendBuilding5: {\r\n    cost: 10000,\r\n    owned: 0,\r\n    generated: new Decimal('0'),\r\n    multiplier: 0.01\r\n  },\r\n\r\n  multiplierCost: new Decimal('1e4'),\r\n  multiplierBought: 0,\r\n\r\n  acceleratorCost: new Decimal('500'),\r\n  acceleratorBought: 0,\r\n\r\n  acceleratorBoostBought: 0,\r\n  acceleratorBoostCost: new Decimal('1e3'),\r\n\r\n  upgrades: Array(141).fill(0) as number[],\r\n\r\n  prestigeCount: 0,\r\n  transcendCount: 0,\r\n  reincarnationCount: 0,\r\n\r\n  prestigePoints: new Decimal('0'),\r\n  transcendPoints: new Decimal('0'),\r\n  reincarnationPoints: new Decimal('0'),\r\n\r\n  prestigeShards: new Decimal('0'),\r\n  transcendShards: new Decimal('0'),\r\n  reincarnationShards: new Decimal('0'),\r\n\r\n  toggles: {\r\n    1: false,\r\n    2: false,\r\n    3: false,\r\n    4: false,\r\n    5: false,\r\n    6: false,\r\n    7: false,\r\n    8: false,\r\n    9: false,\r\n    10: false,\r\n    11: false,\r\n    12: false,\r\n    13: false,\r\n    14: false,\r\n    15: false,\r\n    16: false,\r\n    17: false,\r\n    18: false,\r\n    19: false,\r\n    20: false,\r\n    21: false,\r\n    22: false,\r\n    23: false,\r\n    24: false,\r\n    25: false,\r\n    26: false,\r\n    27: false,\r\n    28: true,\r\n    29: true,\r\n    30: true,\r\n    31: true,\r\n    32: true,\r\n    33: true,\r\n    34: true,\r\n    35: true,\r\n    36: false,\r\n    37: false,\r\n    38: false,\r\n    39: true,\r\n    40: true,\r\n    41: true,\r\n    42: false,\r\n    43: false\r\n  },\r\n\r\n  challengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  highestchallengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  challenge15Exponent: 0,\r\n  highestChallenge15Exponent: 0,\r\n\r\n  retrychallenges: false,\r\n  currentChallenge: {\r\n    transcension: 0,\r\n    reincarnation: 0,\r\n    ascension: 0\r\n  },\r\n  researchPoints: 0,\r\n  obtainiumtimer: 0,\r\n  obtainiumpersecond: 0,\r\n  maxobtainiumpersecond: 0,\r\n  maxobtainium: 0,\r\n  // Ignore the first index. The other 25 are shaped in a 5x5 grid similar to the production appearance\r\n  researches: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n\r\n  unlocks: {\r\n    coinone: false,\r\n    cointwo: false,\r\n    cointhree: false,\r\n    coinfour: false,\r\n    prestige: false,\r\n    generation: false,\r\n    transcend: false,\r\n    reincarnate: false,\r\n    rrow1: false,\r\n    rrow2: false,\r\n    rrow3: false,\r\n    rrow4: false\r\n  },\r\n  achievements: Array(281).fill(0) as number[],\r\n\r\n  achievementPoints: 0,\r\n\r\n  prestigenomultiplier: true,\r\n  prestigenoaccelerator: true,\r\n  transcendnomultiplier: true,\r\n  transcendnoaccelerator: true,\r\n  reincarnatenomultiplier: true,\r\n  reincarnatenoaccelerator: true,\r\n  prestigenocoinupgrades: true,\r\n  transcendnocoinupgrades: true,\r\n  transcendnocoinorprestigeupgrades: true,\r\n  reincarnatenocoinupgrades: true,\r\n  reincarnatenocoinorprestigeupgrades: true,\r\n  reincarnatenocoinprestigeortranscendupgrades: true,\r\n  reincarnatenocoinprestigetranscendorgeneratorupgrades: true,\r\n\r\n  crystalUpgrades: [0, 0, 0, 0, 0, 0, 0, 0],\r\n  crystalUpgradesCost: [7, 15, 20, 40, 100, 200, 500, 1000],\r\n\r\n  runelevels: [1, 1, 1, 1, 1, 0, 0],\r\n  runeexp: [0, 0, 0, 0, 0, 0, 0],\r\n  runeshards: 0,\r\n  maxofferings: 0,\r\n  offeringpersecond: 0,\r\n\r\n  prestigecounter: 0,\r\n  transcendcounter: 0,\r\n  reincarnationcounter: 0,\r\n  offlinetick: 0,\r\n\r\n  prestigeamount: 0,\r\n  transcendamount: 0,\r\n  reincarnationamount: 0,\r\n\r\n  fastestprestige: 9999999999,\r\n  fastesttranscend: 99999999999,\r\n  fastestreincarnate: 999999999999,\r\n\r\n  resettoggle1: 1,\r\n  resettoggle2: 1,\r\n  resettoggle3: 1,\r\n  resettoggle4: 1,\r\n\r\n  tesseractAutoBuyerToggle: 0,\r\n  tesseractAutoBuyerAmount: 0,\r\n\r\n  coinbuyamount: 1,\r\n  crystalbuyamount: 1,\r\n  mythosbuyamount: 1,\r\n  particlebuyamount: 1,\r\n  offeringbuyamount: 1,\r\n  tesseractbuyamount: 1,\r\n\r\n\r\n  shoptoggles: {\r\n    coin: true,\r\n    prestige: true,\r\n    transcend: true,\r\n    generators: true,\r\n    reincarnate: true\r\n  },\r\n  tabnumber: 1,\r\n  subtabNumber: 0,\r\n\r\n  // create a Map with keys defaulting to false\r\n  codes: new Map(\r\n    Array.from({ length: 46 }, (_, i) => [i + 1, false])\r\n  ),\r\n\r\n  loaded1009: true,\r\n  loaded1009hotfix1: true,\r\n  loaded10091: true,\r\n  loaded1010: true,\r\n  loaded10101: true,\r\n\r\n  shopUpgrades: {\r\n    offeringPotion: 1,\r\n    obtainiumPotion: 1,\r\n    offeringEX: 0,\r\n    offeringAuto: 0,\r\n    obtainiumEX: 0,\r\n    obtainiumAuto: 0,\r\n    instantChallenge: 0,\r\n    antSpeed: 0,\r\n    cashGrab: 0,\r\n    shopTalisman: 0,\r\n    seasonPass: 0,\r\n    challengeExtension: 0,\r\n    challengeTome: 0,\r\n    cubeToQuark: 0,\r\n    tesseractToQuark: 0,\r\n    hypercubeToQuark: 0,\r\n    seasonPass2: 0,\r\n    seasonPass3: 0,\r\n    chronometer: 0,\r\n    infiniteAscent: 0,\r\n    calculator: 0,\r\n    calculator2: 0,\r\n    calculator3: 0,\r\n    calculator4: 0,\r\n    calculator5: 0,\r\n    calculator6: 0,\r\n    constantEX: 0,\r\n    powderEX: 0,\r\n    chronometer2: 0,\r\n    chronometer3: 0,\r\n    seasonPassY: 0,\r\n    seasonPassZ: 0,\r\n    challengeTome2: 0,\r\n    instantChallenge2: 0,\r\n    cashGrab2: 0,\r\n    chronometerZ: 0,\r\n    cubeToQuarkAll: 0,\r\n    offeringEX2: 0,\r\n    obtainiumEX2: 0,\r\n    seasonPassLost: 0,\r\n    powderAuto: 0,\r\n    challenge15Auto: 0,\r\n    extraWarp: 0,\r\n    autoWarp: 0,\r\n    improveQuarkHept: 0,\r\n    improveQuarkHept2: 0,\r\n    improveQuarkHept3: 0,\r\n    improveQuarkHept4: 0,\r\n    shopImprovedDaily: 0,\r\n    shopImprovedDaily2: 0,\r\n    shopImprovedDaily3: 0,\r\n    shopImprovedDaily4: 0,\r\n    offeringEX3: 0,\r\n    obtainiumEX3: 0,\r\n    improveQuarkHept5: 0,\r\n    seasonPassInfinity: 0,\r\n    chronometerInfinity: 0,\r\n    shopSingularityPenaltyDebuff: 0,\r\n    shopAmbrosiaGeneration1: 0,\r\n    shopAmbrosiaGeneration2: 0,\r\n    shopAmbrosiaGeneration3: 0,\r\n    shopAmbrosiaGeneration4: 0,\r\n    shopAmbrosiaLuck1: 0,\r\n    shopAmbrosiaLuck2: 0,\r\n    shopAmbrosiaLuck3: 0,\r\n    shopAmbrosiaLuck4: 0\r\n  },\r\n  shopBuyMaxToggle: false,\r\n  shopHideToggle: false,\r\n  shopConfirmationToggle: true,\r\n  autoPotionTimer: 0,\r\n  autoPotionTimerObtainium: 0,\r\n\r\n  autoSacrificeToggle: false,\r\n  autoBuyFragment: false,\r\n  autoFortifyToggle: false,\r\n  autoEnhanceToggle: false,\r\n  autoResearchToggle: false,\r\n  researchBuyMaxToggle: false,\r\n  autoResearchMode: 'manual',\r\n  autoResearch: 0,\r\n  autoSacrifice: 0,\r\n  sacrificeTimer: 0,\r\n  quarkstimer: 90000,\r\n  goldenQuarksTimer: 90000,\r\n\r\n  antPoints: new Decimal('1'),\r\n  antUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  antSacrificePoints: 0,\r\n  antSacrificeTimer: 900,\r\n  antSacrificeTimerReal: 900,\r\n\r\n  talismanLevels: [0, 0, 0, 0, 0, 0, 0],\r\n  talismanRarity: [1, 1, 1, 1, 1, 1, 1],\r\n  talismanOne: [null, -1, 1, 1, 1, -1],\r\n  talismanTwo: [null, 1, 1, -1, -1, 1],\r\n  talismanThree: [null, 1, -1, 1, 1, -1],\r\n  talismanFour: [null, -1, -1, 1, 1, 1],\r\n  talismanFive: [null, 1, 1, -1, -1, 1],\r\n  talismanSix: [null, 1, 1, 1, -1, -1],\r\n  talismanSeven: [null, -1, 1, -1, 1, 1],\r\n  talismanShards: 0,\r\n  commonFragments: 0,\r\n  uncommonFragments: 0,\r\n  rareFragments: 0,\r\n  epicFragments: 0,\r\n  legendaryFragments: 0,\r\n  mythicalFragments: 0,\r\n\r\n  buyTalismanShardPercent: 10,\r\n\r\n  autoAntSacrifice: false,\r\n  autoAntSacTimer: 900,\r\n  autoAntSacrificeMode: 0,\r\n  antMax: false,\r\n\r\n  ascensionCount: 0,\r\n  ascensionCounter: 0,\r\n  ascensionCounterReal: 0,\r\n  ascensionCounterRealReal: 0,\r\n  cubeUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  cubeUpgradesBuyMaxToggle: false,\r\n  autoCubeUpgradesToggle: false,\r\n  autoPlatonicUpgradesToggle: false,\r\n  platonicUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  wowCubes: new WowCubes(0),\r\n  wowTesseracts: new WowTesseracts(0),\r\n  wowHypercubes: new WowHypercubes(0),\r\n  wowPlatonicCubes: new WowPlatonicCubes(0),\r\n  saveOfferingToggle: false,\r\n  wowAbyssals: 0,\r\n  wowOcteracts: 0,\r\n  totalWowOcteracts: 0,\r\n  cubeBlessings: {\r\n    accelerator: 0,\r\n    multiplier: 0,\r\n    offering: 0,\r\n    runeExp: 0,\r\n    obtainium: 0,\r\n    antSpeed: 0,\r\n    antSacrifice: 0,\r\n    antELO: 0,\r\n    talismanBonus: 0,\r\n    globalSpeed: 0\r\n  },\r\n  tesseractBlessings: {\r\n    accelerator: 0,\r\n    multiplier: 0,\r\n    offering: 0,\r\n    runeExp: 0,\r\n    obtainium: 0,\r\n    antSpeed: 0,\r\n    antSacrifice: 0,\r\n    antELO: 0,\r\n    talismanBonus: 0,\r\n    globalSpeed: 0\r\n  },\r\n  hypercubeBlessings: {\r\n    accelerator: 0,\r\n    multiplier: 0,\r\n    offering: 0,\r\n    runeExp: 0,\r\n    obtainium: 0,\r\n    antSpeed: 0,\r\n    antSacrifice: 0,\r\n    antELO: 0,\r\n    talismanBonus: 0,\r\n    globalSpeed: 0\r\n  },\r\n  platonicBlessings: {\r\n    cubes: 0,\r\n    tesseracts: 0,\r\n    hypercubes: 0,\r\n    platonics: 0,\r\n    hypercubeBonus: 0,\r\n    taxes: 0,\r\n    scoreBonus: 0,\r\n    globalSpeed: 0\r\n\r\n  },\r\n\r\n  hepteractCrafts: {\r\n    chronos: ChronosHepteract,\r\n    hyperrealism: HyperrealismHepteract,\r\n    quark: QuarkHepteract,\r\n    challenge: ChallengeHepteract,\r\n    abyss: AbyssHepteract,\r\n    accelerator: AcceleratorHepteract,\r\n    acceleratorBoost: AcceleratorBoostHepteract,\r\n    multiplier: MultiplierHepteract\r\n  },\r\n\r\n  ascendShards: new Decimal('0'),\r\n  autoAscend: false,\r\n  autoAscendMode: 'c10Completions',\r\n  autoAscendThreshold: 1,\r\n  autoOpenCubes: false,\r\n  openCubes: 0,\r\n  autoOpenTesseracts: false,\r\n  openTesseracts: 0,\r\n  autoOpenHypercubes: false,\r\n  openHypercubes: 0,\r\n  autoOpenPlatonicsCubes: false,\r\n  openPlatonicsCubes: 0,\r\n  roombaResearchIndex: 0,\r\n  ascStatToggles: { // false here means show per second\r\n    1: false,\r\n    2: false,\r\n    3: false,\r\n    4: false,\r\n    5: false,\r\n    6: false\r\n  },\r\n\r\n  prototypeCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  usedCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  corruptionLoadouts: {  //If you add loadouts don't forget to add loadout names!\r\n    1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    4: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    5: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    6: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    7: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    8: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  },\r\n  corruptionLoadoutNames: [\r\n    'Loadout 1',\r\n    'Loadout 2',\r\n    'Loadout 3',\r\n    'Loadout 4',\r\n    'Loadout 5',\r\n    'Loadout 6',\r\n    'Loadout 7',\r\n    'Loadout 8'\r\n  ],\r\n  corruptionShowStats: true,\r\n\r\n  constantUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  history: { ants: [], ascend: [], reset: [], singularity: [] },\r\n  historyShowPerSecond: false,\r\n\r\n  autoChallengeRunning: false,\r\n  autoChallengeIndex: 1,\r\n  autoChallengeToggles: [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false],\r\n  autoChallengeStartExponent: 10,\r\n  autoChallengeTimer: {\r\n    start: 10,\r\n    exit: 2,\r\n    enter: 2\r\n  },\r\n\r\n  runeBlessingLevels: [0, 0, 0, 0, 0, 0],\r\n  runeSpiritLevels: [0, 0, 0, 0, 0, 0],\r\n  runeBlessingBuyAmount: 0,\r\n  runeSpiritBuyAmount: 0,\r\n\r\n  autoTesseracts: [false, false, false, false, false, false],\r\n\r\n  saveString: 'Synergism-$VERSION$-$TIME$.txt',\r\n  exporttest: !testing,\r\n\r\n  dayCheck: null,\r\n  dayTimer: 0,\r\n  cubeOpenedDaily: 0,\r\n  cubeQuarkDaily: 0,\r\n  tesseractOpenedDaily: 0,\r\n  tesseractQuarkDaily: 0,\r\n  hypercubeOpenedDaily: 0,\r\n  hypercubeQuarkDaily: 0,\r\n  platonicCubeOpenedDaily: 0,\r\n  platonicCubeQuarkDaily: 0,\r\n  overfluxOrbs: 0,\r\n  overfluxOrbsAutoBuy: false,\r\n  overfluxPowder: 0,\r\n  dailyPowderResetUses: 1,\r\n  autoWarpCheck: false,\r\n  loadedOct4Hotfix: false,\r\n  loadedNov13Vers: true,\r\n  loadedDec16Vers: true,\r\n  loadedV253: true,\r\n  loadedV255: true,\r\n  loadedV297Hotfix1: true,\r\n  loadedV2927Hotfix1: true,\r\n  loadedV2930Hotfix1: true,\r\n  loadedV2931Hotfix1: true,\r\n  loadedV21003Hotfix1: true,\r\n  loadedV21007Hotfix1: true,\r\n  version,\r\n  rngCode: 0,\r\n  promoCodeTiming: {\r\n    time: 0\r\n  },\r\n  singularityCount: 0,\r\n  highestSingularityCount: 0,\r\n  singularityCounter: 0,\r\n  goldenQuarks: 0,\r\n  quarksThisSingularity: 0,\r\n  totalQuarksEver: 0,\r\n  hotkeys: {},\r\n  theme: 'Dark Mode',\r\n  iconSet: 0,\r\n  notation: 'Default',\r\n\r\n  singularityUpgrades: {\r\n    goldenQuarks1: new SingularityUpgrade(singularityData.goldenQuarks1, 'goldenQuarks1'),\r\n    goldenQuarks2: new SingularityUpgrade(singularityData.goldenQuarks2, 'goldenQuarks2'),\r\n    goldenQuarks3: new SingularityUpgrade(singularityData.goldenQuarks3, 'goldenQuarks3'),\r\n    starterPack: new SingularityUpgrade(singularityData.starterPack, 'starterPack'),\r\n    wowPass: new SingularityUpgrade(singularityData.wowPass, 'wowPass'),\r\n    cookies: new SingularityUpgrade(singularityData.cookies, 'cookies'),\r\n    cookies2: new SingularityUpgrade(singularityData.cookies2, 'cookies2'),\r\n    cookies3: new SingularityUpgrade(singularityData.cookies3, 'cookies3'),\r\n    cookies4: new SingularityUpgrade(singularityData.cookies4, 'cookies4'),\r\n    cookies5: new SingularityUpgrade(singularityData.cookies5, 'cookies5'),\r\n    ascensions: new SingularityUpgrade(singularityData.ascensions, 'ascensions'),\r\n    corruptionFourteen: new SingularityUpgrade(singularityData.corruptionFourteen, 'corruptionFourteen'),\r\n    corruptionFifteen: new SingularityUpgrade(singularityData.corruptionFifteen, 'corruptionFifteen'),\r\n    singOfferings1: new SingularityUpgrade(singularityData.singOfferings1, 'singOfferings1'),\r\n    singOfferings2: new SingularityUpgrade(singularityData.singOfferings2, 'singOfferings2'),\r\n    singOfferings3: new SingularityUpgrade(singularityData.singOfferings3, 'singOfferings3'),\r\n    singObtainium1: new SingularityUpgrade(singularityData.singObtainium1, 'singObtainium1'),\r\n    singObtainium2: new SingularityUpgrade(singularityData.singObtainium2, 'singObtainium2'),\r\n    singObtainium3: new SingularityUpgrade(singularityData.singObtainium3, 'singObtainium3'),\r\n    singCubes1: new SingularityUpgrade(singularityData.singCubes1, 'singCubes1'),\r\n    singCubes2: new SingularityUpgrade(singularityData.singCubes2, 'singCubes2'),\r\n    singCubes3: new SingularityUpgrade(singularityData.singCubes3, 'singCubes3'),\r\n    singCitadel: new SingularityUpgrade(singularityData.singCitadel, 'singCitadel'),\r\n    singCitadel2: new SingularityUpgrade(singularityData.singCitadel2, 'singCitadel2'),\r\n    octeractUnlock: new SingularityUpgrade(singularityData.octeractUnlock, 'octeractUnlock'),\r\n    singOcteractPatreonBonus: new SingularityUpgrade(singularityData.singOcteractPatreonBonus, 'singOcteractPatreonBonus'),\r\n    intermediatePack: new SingularityUpgrade(singularityData.intermediatePack, 'intermediatePack'),\r\n    advancedPack: new SingularityUpgrade(singularityData.advancedPack, 'advancedPack'),\r\n    expertPack: new SingularityUpgrade(singularityData.expertPack, 'expertPack'),\r\n    masterPack: new SingularityUpgrade(singularityData.masterPack, 'masterPack'),\r\n    divinePack: new SingularityUpgrade(singularityData.divinePack, 'divinePack'),\r\n    wowPass2: new SingularityUpgrade(singularityData.wowPass2, 'wowPass2'),\r\n    potionBuff: new SingularityUpgrade(singularityData.potionBuff, 'potionBuff'),\r\n    potionBuff2: new SingularityUpgrade(singularityData.potionBuff2, 'potionBuff2'),\r\n    potionBuff3: new SingularityUpgrade(singularityData.potionBuff3, 'potionBuff3'),\r\n    singChallengeExtension: new SingularityUpgrade(singularityData.singChallengeExtension, 'singChallengeExtension'),\r\n    singChallengeExtension2: new SingularityUpgrade(singularityData.singChallengeExtension2, 'singChallengeExtension2'),\r\n    singChallengeExtension3: new SingularityUpgrade(singularityData.singChallengeExtension3, 'singChallengeExtension3'),\r\n    singQuarkImprover1: new SingularityUpgrade(singularityData.singQuarkImprover1, 'singQuarkImprover1'),\r\n    singQuarkHepteract: new SingularityUpgrade(singularityData.singQuarkHepteract, 'singQuarkHepteract'),\r\n    singQuarkHepteract2: new SingularityUpgrade(singularityData.singQuarkHepteract2, 'singQuarkHepteract2'),\r\n    singQuarkHepteract3: new SingularityUpgrade(singularityData.singQuarkHepteract3, 'singQuarkHepteract3'),\r\n    singOcteractGain: new SingularityUpgrade(singularityData.singOcteractGain, 'singOcteractGain'),\r\n    singOcteractGain2: new SingularityUpgrade(singularityData.singOcteractGain2, 'singOcteractGain2'),\r\n    singOcteractGain3: new SingularityUpgrade(singularityData.singOcteractGain3, 'singOcteractGain3'),\r\n    singOcteractGain4: new SingularityUpgrade(singularityData.singOcteractGain4, 'singOcteractGain4'),\r\n    singOcteractGain5: new SingularityUpgrade(singularityData.singOcteractGain5, 'singOcteractGain5'),\r\n    wowPass3: new SingularityUpgrade(singularityData.wowPass3, 'wowPass3'),\r\n    ultimatePen: new SingularityUpgrade(singularityData.ultimatePen, 'ultimatePen'),\r\n    platonicTau: new SingularityUpgrade(singularityData.platonicTau, 'platonicTau'),\r\n    platonicAlpha: new SingularityUpgrade(singularityData.platonicAlpha, 'platonicAlpha'),\r\n    platonicDelta: new SingularityUpgrade(singularityData.platonicDelta, 'platonicDelta'),\r\n    platonicPhi: new SingularityUpgrade(singularityData.platonicPhi, 'platonicPhi'),\r\n    singFastForward: new SingularityUpgrade(singularityData.singFastForward, 'singFastForward'),\r\n    singFastForward2: new SingularityUpgrade(singularityData.singFastForward2, 'singFastForward2'),\r\n    singAscensionSpeed: new SingularityUpgrade(singularityData.singAscensionSpeed, 'singAscensionSpeed'),\r\n    singAscensionSpeed2: new SingularityUpgrade(singularityData.singAscensionSpeed2, 'singAscensionSpeed2'),\r\n    oneMind: new SingularityUpgrade(singularityData.oneMind, 'oneMind'),\r\n    wowPass4: new SingularityUpgrade(singularityData.wowPass4, 'wowPass4'),\r\n    offeringAutomatic: new SingularityUpgrade(singularityData.offeringAutomatic, 'offeringAutomatic'),\r\n    blueberries: new SingularityUpgrade(singularityData.blueberries, 'blueberries')\r\n  },\r\n\r\n  octeractUpgrades: {\r\n    octeractStarter: new OcteractUpgrade(octeractData.octeractStarter, 'octeractStarter'),\r\n    octeractGain: new OcteractUpgrade(octeractData.octeractGain, 'octeractGain'),\r\n    octeractGain2: new OcteractUpgrade(octeractData.octeractGain2, 'octeractGain2'),\r\n    octeractQuarkGain: new OcteractUpgrade(octeractData.octeractQuarkGain, 'octeractQuarkGain'),\r\n    octeractQuarkGain2: new OcteractUpgrade(octeractData.octeractQuarkGain2, 'octeractQuarkGain2'),\r\n    octeractCorruption: new OcteractUpgrade(octeractData.octeractCorruption, 'octeractCorruption'),\r\n    octeractGQCostReduce: new OcteractUpgrade(octeractData.octeractGQCostReduce, 'octeractGQCostReduce'),\r\n    octeractExportQuarks: new OcteractUpgrade(octeractData.octeractExportQuarks, 'octeractExportQuarks'),\r\n    octeractImprovedDaily: new OcteractUpgrade(octeractData.octeractImprovedDaily, 'octeractImprovedDaily'),\r\n    octeractImprovedDaily2: new OcteractUpgrade(octeractData.octeractImprovedDaily2, 'octeractImprovedDaily2'),\r\n    octeractImprovedDaily3: new OcteractUpgrade(octeractData.octeractImprovedDaily3, 'octeractImprovedDaily3'),\r\n    octeractImprovedQuarkHept: new OcteractUpgrade(octeractData.octeractImprovedQuarkHept, 'octeractImprovedQuarkHept'),\r\n    octeractImprovedGlobalSpeed: new OcteractUpgrade(octeractData.octeractImprovedGlobalSpeed, 'octeractImprovedGlobalSpeed'),\r\n    octeractImprovedAscensionSpeed: new OcteractUpgrade(octeractData.octeractImprovedAscensionSpeed, 'octeractImprovedAscensionSpeed'),\r\n    octeractImprovedAscensionSpeed2: new OcteractUpgrade(octeractData.octeractImprovedAscensionSpeed2, 'octeractImprovedAscensionSpeed2'),\r\n    octeractImprovedFree: new OcteractUpgrade(octeractData.octeractImprovedFree, 'octeractImprovedFree'),\r\n    octeractImprovedFree2: new OcteractUpgrade(octeractData.octeractImprovedFree2, 'octeractImprovedFree2'),\r\n    octeractImprovedFree3: new OcteractUpgrade(octeractData.octeractImprovedFree3, 'octeractImprovedFree3'),\r\n    octeractImprovedFree4: new OcteractUpgrade(octeractData.octeractImprovedFree4, 'octeractImprovedFree4'),\r\n    octeractSingUpgradeCap: new OcteractUpgrade(octeractData.octeractSingUpgradeCap, 'octeractSingUpgradeCap'),\r\n    octeractOfferings1: new OcteractUpgrade(octeractData.octeractOfferings1, 'octeractOfferings1'),\r\n    octeractObtainium1: new OcteractUpgrade(octeractData.octeractObtainium1, 'octeractObtainium1'),\r\n    octeractAscensions: new OcteractUpgrade(octeractData.octeractAscensions, 'octeractAscensions'),\r\n    octeractAscensions2: new OcteractUpgrade(octeractData.octeractAscensions2, 'octeractAscensions2'),\r\n    octeractAscensionsOcteractGain: new OcteractUpgrade(octeractData.octeractAscensionsOcteractGain, 'octeractAscensionsOcteractGain'),\r\n    octeractFastForward: new OcteractUpgrade(octeractData.octeractFastForward, 'octeractFastForward'),\r\n    octeractAutoPotionSpeed: new OcteractUpgrade(octeractData.octeractAutoPotionSpeed, 'octeractAutoPotionSpeed'),\r\n    octeractAutoPotionEfficiency: new OcteractUpgrade(octeractData.octeractAutoPotionEfficiency, 'octeractAutoPotionEfficiency'),\r\n    octeractOneMindImprover: new OcteractUpgrade(octeractData.octeractOneMindImprover, 'octeractOneMindImprover'),\r\n    octeractAmbrosiaLuck: new OcteractUpgrade(octeractData.octeractAmbrosiaLuck, 'octeractAmbrosiaLuck')\r\n  },\r\n\r\n  dailyCodeUsed: false,\r\n  hepteractAutoCraftPercentage: 50,\r\n  octeractTimer: 0,\r\n  insideSingularityChallenge: false,\r\n\r\n  singularityChallenges: {\r\n    noSingularityUpgrades: new SingularityChallenge(singularityChallengeData.noSingularityUpgrades, 'noSingularityUpgrades'),\r\n    oneChallengeCap: new SingularityChallenge(singularityChallengeData.oneChallengeCap, 'oneChallengeCap'),\r\n    noOcteracts: new SingularityChallenge(singularityChallengeData.noOcteracts, 'noOcteracts'),\r\n    limitedAscensions: new SingularityChallenge(singularityChallengeData.limitedAscensions, 'limitedAscensions')\r\n  },\r\n\r\n  ambrosia: 0,\r\n  lifetimeAmbrosia: 0,\r\n  ambrosiaRNG: 0,\r\n  blueberryTime: 0,\r\n  visitedAmbrosiaSubtab: false,\r\n  spentBlueberries: 0,\r\n  blueberryUpgrades: {\r\n    ambrosiaTutorial: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaTutorial, 'ambrosiaTutorial'),\r\n    ambrosiaQuarks1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaQuarks1, 'ambrosiaQuarks1'),\r\n    ambrosiaCubes1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaCubes1, 'ambrosiaQuarks1'),\r\n    ambrosiaLuck1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaLuck1, 'ambrosiaLuck1'),\r\n    ambrosiaCubeQuark1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaCubeQuark1, 'ambrosiaCubeQuark1'),\r\n    ambrosiaLuckQuark1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaLuckQuark1, 'ambrosiaLuckQuark1'),\r\n    ambrosiaLuckCube1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaLuckCube1, 'ambrosiaLuckCube1'),\r\n    ambrosiaQuarkCube1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaQuarkCube1, 'ambrosiaQuarkCube1'),\r\n    ambrosiaCubeLuck1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaCubeLuck1, 'ambrosiaCubeLuck1'),\r\n    ambrosiaQuarkLuck1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaQuarkLuck1, 'ambrosiaQuarkLuck1')\r\n  },\r\n\r\n  caches: {\r\n    ambrosiaLuck: new AmbrosiaLuckCache(),\r\n    ambrosiaGeneration: new AmbrosiaGenerationCache(),\r\n    blueberryInventory: new BlueberryInventoryCache()\r\n  }\r\n}\r\n\r\nexport const blankSave = Object.assign({}, player, {\r\n  codes: new Map(Array.from({ length: 44 }, (_, i) => [i + 1, false]))\r\n})\r\n\r\n// The main cause of the double singularity bug was caused by a race condition\r\n// when the game was saving just as the user was entering a Singularity. To fix\r\n// this, hopefully, we disable saving the game when in the prompt or currently\r\n// entering a Singularity.\r\nexport const saveCheck = { canSave: true }\r\n\r\nexport const saveSynergy = async (button?: boolean): Promise<boolean> => {\r\n  player.offlinetick = Date.now()\r\n  player.loaded1009 = true\r\n  player.loaded1009hotfix1 = true\r\n\r\n  // shallow hold, doesn't modify OG object nor is affected by modifications to OG\r\n  const p = Object.assign({}, player, {\r\n    codes: Array.from(player.codes),\r\n    worlds: Number(player.worlds),\r\n    wowCubes: Number(player.wowCubes),\r\n    wowTesseracts: Number(player.wowTesseracts),\r\n    wowHypercubes: Number(player.wowHypercubes),\r\n    wowPlatonicCubes: Number(player.wowPlatonicCubes),\r\n    singularityUpgrades: Object.fromEntries(\r\n      Object.entries(player.singularityUpgrades).map(([key, value]) => {\r\n        return [key, {\r\n          level: value.level,\r\n          goldenQuarksInvested: value.goldenQuarksInvested,\r\n          toggleBuy: value.toggleBuy,\r\n          freeLevels: value.freeLevels\r\n        }]\r\n      })\r\n    ),\r\n    octeractUpgrades: Object.fromEntries(\r\n      Object.entries(player.octeractUpgrades).map(([key, value]) => {\r\n        return [key, {\r\n          level: value.level,\r\n          octeractsInvested: value.octeractsInvested,\r\n          toggleBuy: value.toggleBuy,\r\n          freeLevels: value.freeLevels\r\n        }]\r\n      })\r\n    ),\r\n    singularityChallenges: Object.fromEntries(\r\n      Object.entries(player.singularityChallenges).map(([key, value]) => {\r\n        return [key, {\r\n          completions: value.completions,\r\n          highestSingularityCompleted: value.highestSingularityCompleted,\r\n          enabled: value.enabled\r\n        }]\r\n      })\r\n    )\r\n  })\r\n\r\n  const save = btoa(JSON.stringify(p))\r\n  if (save !== null) {\r\n    const saveBlob = new Blob([save], { type: 'text/plain' })\r\n\r\n    //Should prevent overwritting of localforage that is currently used\r\n    if (!saveCheck.canSave) {\r\n      return false\r\n    }\r\n\r\n    await localforage.setItem<Blob>('Synergysave2', saveBlob)\r\n  } else {\r\n    await Alert(i18next.t('testing.errorSaving'))\r\n    return false\r\n  }\r\n\r\n  if (button) {\r\n    const el = DOMCacheGetOrSet('saveinfo')\r\n    el.textContent = i18next.t('testing.gameSaved')\r\n    setTimeout(() => el.textContent = '', 4000)\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Map of properties on the Player object to adapt\r\n */\r\nconst toAdapt = new Map<keyof Player, (data: PlayerSave) => unknown>([\r\n  ['worlds', data => new QuarkHandler({ quarks: Number(data.worlds) || 0 })],\r\n  ['wowCubes', data => new WowCubes(Number(data.wowCubes) || 0)],\r\n  ['wowTesseracts', data => new WowTesseracts(Number(data.wowTesseracts) || 0)],\r\n  ['wowHypercubes', data => new WowHypercubes(Number(data.wowHypercubes) || 0)],\r\n  ['wowPlatonicCubes', data => new WowPlatonicCubes(Number(data.wowPlatonicCubes) || 0)]\r\n])\r\n\r\nconst loadSynergy = async () => {\r\n  const save =\r\n    await localforage.getItem<Blob>('Synergysave2') ??\r\n    localStorage.getItem('Synergysave2')\r\n\r\n  const saveString = typeof save === 'string' ? save : await save?.text()\r\n  const data = saveString\r\n    ? JSON.parse(atob(saveString)) as PlayerSave & Record<string, unknown>\r\n    : null\r\n\r\n  if (testing || !prod) {\r\n    Object.defineProperties(window, {\r\n      player: { value: player },\r\n      G: { value: G },\r\n      Decimal: { value: Decimal },\r\n      i18n: { value: i18next }\r\n    })\r\n\r\n    if (data && testing) {\r\n      data.exporttest = false\r\n    }\r\n  }\r\n\r\n  Object.assign(G, { ...blankGlobals })\r\n\r\n  if (data) {\r\n    if (\r\n      (data.exporttest === false || data.exporttest === 'NO!') &&\r\n            !testing\r\n    ) {\r\n      return Alert(i18next.t('testing.saveInLive2'))\r\n    }\r\n\r\n    const oldCodesUsed = Array.from(\r\n      { length: 24 }, // old codes only went up to 24\r\n      (_, i) => `offerpromo${(i + 1)}used`\r\n    )\r\n\r\n    // size before loading\r\n    const size = player.codes.size\r\n\r\n    const oldPromoKeys = Object.keys(data).filter(k => k.includes('offerpromo'))\r\n    if (oldPromoKeys.length > 0) {\r\n      oldPromoKeys.forEach(k => {\r\n        const value = data[k]\r\n        const num = +k.replace(/[^\\d]/g, '')\r\n        player.codes.set(num, Boolean(value))\r\n      })\r\n    }\r\n\r\n    Object.keys(data).forEach((stringProp) => {\r\n      const prop = stringProp as keyof Player\r\n      if (!(prop in player)) {\r\n        return\r\n      } else if (toAdapt.has(prop)) {\r\n        return ((player[prop] as unknown) = toAdapt.get(prop)!(data))\r\n      } else if (isDecimal(player[prop])) {\r\n        return ((player[prop] as Decimal) = new Decimal(data[prop] as DecimalSource))\r\n      } else if (prop === 'codes') {\r\n        const codes = data[prop]\r\n        if (codes != null) {\r\n          return (player.codes = new Map(codes))\r\n        }\r\n      } else if (oldCodesUsed.includes(prop)) {\r\n        return\r\n      } else if (Array.isArray(data[prop])) {\r\n        const arr = data[prop] as unknown[]\r\n        // in old savefiles, some arrays may be 1-based instead of 0-based (newer)\r\n        // so if the lengths of the savefile key is greater than that of the player obj\r\n        // it means a key was removed; likely a 1-based index where array[0] was null\r\n        // so we can get rid of it entirely.\r\n        if ((player[prop] as unknown[]).length < arr.length) {\r\n          return (player[prop] as unknown[]) = arr.slice(arr.length - (player[prop] as unknown[]).length)\r\n        }\r\n      }\r\n\r\n      return ((player[prop] as unknown) = data[prop])\r\n    })\r\n\r\n    if (data.offerpromo24used !== undefined) {\r\n      player.codes.set(25, false)\r\n    }\r\n\r\n    // sets all non-existent codes to default value false\r\n    if (player.codes.size < size) {\r\n      for (let i = player.codes.size + 1; i <= size; i++) {\r\n        if (!player.codes.has(i)) {\r\n          player.codes.set(i, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    // sets all non-existent codes to default value false\r\n    if (player.codes.size < size) {\r\n      for (let i = player.codes.size + 1; i <= size; i++) {\r\n        if (!player.codes.has(i)) {\r\n          player.codes.set(i, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!('rngCode' in data)) {\r\n      player.rngCode = 0\r\n    }\r\n\r\n    if (data.loaded1009 === undefined || !data.loaded1009) {\r\n      player.loaded1009 = false\r\n    }\r\n    if (data.loaded1009hotfix1 === undefined || !data.loaded1009hotfix1) {\r\n      player.loaded1009hotfix1 = false\r\n    }\r\n    if (data.loaded10091 === undefined) {\r\n      player.loaded10091 = false\r\n    }\r\n    if (data.loaded1010 === undefined) {\r\n      player.loaded1010 = false\r\n    }\r\n    if (data.loaded10101 === undefined) {\r\n      player.loaded10101 = false\r\n    }\r\n\r\n    //Fix dumb shop stuff\r\n    //First, if shop isn't even defined we just define it as so\r\n    if (data.shopUpgrades === undefined) {\r\n      player.shopUpgrades = Object.assign({}, blankSave.shopUpgrades)\r\n    }\r\n\r\n    if (typeof player.researches[76] === 'undefined') {\r\n      player.codes.set(13, false)\r\n      player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\r\n      player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\r\n      player.maxofferings = player.runeshards\r\n      player.maxobtainium = player.researchPoints\r\n      player.researchPoints += 51200 * player.researches[50]\r\n      player.researches[50] = 0\r\n    }\r\n\r\n    player.maxofferings = player.maxofferings || 0\r\n    player.maxobtainium = player.maxobtainium || 0\r\n    player.runeshards = player.runeshards || 0\r\n    player.researchPoints = player.researchPoints || 0\r\n\r\n    if (!data.loaded1009 || data.loaded1009hotfix1 === null || data.shopUpgrades?.offeringPotion === undefined) {\r\n      player.firstOwnedParticles = 0\r\n      player.secondOwnedParticles = 0\r\n      player.thirdOwnedParticles = 0\r\n      player.fourthOwnedParticles = 0\r\n      player.fifthOwnedParticles = 0\r\n      player.firstCostParticles = new Decimal('1')\r\n      player.secondCostParticles = new Decimal('1e2')\r\n      player.thirdCostParticles = new Decimal('1e4')\r\n      player.fourthCostParticles = new Decimal('1e8')\r\n      player.fifthCostParticles = new Decimal('1e16')\r\n      player.autoSacrificeToggle = false\r\n      player.autoResearchToggle = false\r\n      player.autoResearchMode = 'manual'\r\n      player.autoResearch = 0\r\n      player.autoSacrifice = 0\r\n      player.sacrificeTimer = 0\r\n      player.loaded1009 = true\r\n      player.codes.set(18, false)\r\n    }\r\n    if (!data.loaded1009hotfix1) {\r\n      player.loaded1009hotfix1 = true\r\n      player.codes.set(19, true)\r\n      player.firstOwnedParticles = 0\r\n      player.secondOwnedParticles = 0\r\n      player.thirdOwnedParticles = 0\r\n      player.fourthOwnedParticles = 0\r\n      player.fifthOwnedParticles = 0\r\n      player.firstCostParticles = new Decimal('1')\r\n      player.secondCostParticles = new Decimal('1e2')\r\n      player.thirdCostParticles = new Decimal('1e4')\r\n      player.fourthCostParticles = new Decimal('1e8')\r\n      player.fifthCostParticles = new Decimal('1e16')\r\n    }\r\n    if (data.loaded10091 === undefined || !data.loaded10091 || player.researches[86] > 100 || player.researches[87] > 100 || player.researches[88] > 100 || player.researches[89] > 100 || player.researches[90] > 10) {\r\n      player.loaded10091 = true\r\n      player.researchPoints += 7.5e8 * player.researches[82]\r\n      player.researchPoints += 2e8 * player.researches[83]\r\n      player.researchPoints += 4.5e9 * player.researches[84]\r\n      player.researchPoints += 2.5e7 * player.researches[86]\r\n      player.researchPoints += 7.5e7 * player.researches[87]\r\n      player.researchPoints += 3e8 * player.researches[88]\r\n      player.researchPoints += 1e9 * player.researches[89]\r\n      player.researchPoints += 2.5e7 * player.researches[90]\r\n      player.researchPoints += 1e8 * player.researches[91]\r\n      player.researchPoints += 2e9 * player.researches[92]\r\n      player.researchPoints += 9e9 * player.researches[93]\r\n      player.researchPoints += 7.25e10 * player.researches[94]\r\n      player.researches[86] = 0\r\n      player.researches[87] = 0\r\n      player.researches[88] = 0\r\n      player.researches[89] = 0\r\n      player.researches[90] = 0\r\n      player.researches[91] = 0\r\n      player.researches[92] = 0\r\n    }\r\n\r\n    //const shop = data.shopUpgrades as LegacyShopUpgrades & Player['shopUpgrades'];\r\n    if (\r\n      data.achievements?.[169] === undefined ||\r\n            typeof player.achievements[169] === 'undefined' ||\r\n            //    (shop.antSpeed === undefined && shop.antSpeedLevel === undefined) ||\r\n            //    (shop.antSpeed === undefined && typeof shop.antSpeedLevel === 'undefined') ||\r\n            data.loaded1010 === undefined ||\r\n            data.loaded1010 === false\r\n    ) {\r\n      player.loaded1010 = true\r\n      player.codes.set(21, false)\r\n\r\n      player.firstOwnedAnts = 0\r\n      player.firstGeneratedAnts = new Decimal('0')\r\n      player.firstCostAnts = new Decimal('1e700')\r\n      player.firstProduceAnts = .0001\r\n\r\n      player.secondOwnedAnts = 0\r\n      player.secondGeneratedAnts = new Decimal('0')\r\n      player.secondCostAnts = new Decimal('3')\r\n      player.secondProduceAnts = .00005\r\n\r\n      player.thirdOwnedAnts = 0\r\n      player.thirdGeneratedAnts = new Decimal('0')\r\n      player.thirdCostAnts = new Decimal('100')\r\n      player.thirdProduceAnts = .00002\r\n\r\n      player.fourthOwnedAnts = 0\r\n      player.fourthGeneratedAnts = new Decimal('0')\r\n      player.fourthCostAnts = new Decimal('1e4')\r\n      player.fourthProduceAnts = .00001\r\n\r\n      player.fifthOwnedAnts = 0\r\n      player.fifthGeneratedAnts = new Decimal('0')\r\n      player.fifthCostAnts = new Decimal('1e12')\r\n      player.fifthProduceAnts = .000005\r\n\r\n      player.sixthOwnedAnts = 0\r\n      player.sixthGeneratedAnts = new Decimal('0')\r\n      player.sixthCostAnts = new Decimal('1e36')\r\n      player.sixthProduceAnts = .000002\r\n\r\n      player.seventhOwnedAnts = 0\r\n      player.seventhGeneratedAnts = new Decimal('0')\r\n      player.seventhCostAnts = new Decimal('1e100')\r\n      player.seventhProduceAnts = .000001\r\n\r\n      player.eighthOwnedAnts = 0\r\n      player.eighthGeneratedAnts = new Decimal('0')\r\n      player.eighthCostAnts = new Decimal('1e300')\r\n      player.eighthProduceAnts = .00000001\r\n\r\n      player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\r\n      player.antPoints = new Decimal('1')\r\n\r\n      player.upgrades[38] = 0\r\n      player.upgrades[39] = 0\r\n      player.upgrades[40] = 0\r\n\r\n      player.upgrades[76] = 0\r\n      player.upgrades[77] = 0\r\n      player.upgrades[78] = 0\r\n      player.upgrades[79] = 0\r\n      player.upgrades[80] = 0\r\n\r\n\r\n      //    player.shopUpgrades.antSpeed = 0;\r\n      //    player.shopUpgrades.shopTalisman = 0;\r\n\r\n      player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n      player.unlocks.rrow4 = false\r\n      player.researchPoints += 3e7 * player.researches[50]\r\n      player.researchPoints += 2e9 * player.researches[96]\r\n      player.researchPoints += 5e9 * player.researches[97]\r\n      player.researchPoints += 3e10 * player.researches[98]\r\n      player.researches[50] = 0\r\n      player.researches[96] = 0\r\n      player.researches[97] = 0\r\n      player.researches[98] = 0\r\n      player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\r\n\r\n      player.talismanLevels = [0, 0, 0, 0, 0, 0, 0]\r\n      player.talismanRarity = [1, 1, 1, 1, 1, 1, 1]\r\n\r\n      player.talismanShards = 0\r\n      player.commonFragments = 0\r\n      player.uncommonFragments = 0\r\n      player.rareFragments = 0\r\n      player.epicFragments = 0\r\n      player.legendaryFragments = 0\r\n      player.mythicalFragments = 0\r\n      player.buyTalismanShardPercent = 10\r\n\r\n      player.talismanOne = [null, -1, 1, 1, 1, -1]\r\n      player.talismanTwo = [null, 1, 1, -1, -1, 1]\r\n      player.talismanThree = [null, 1, -1, 1, 1, -1]\r\n      player.talismanFour = [null, -1, -1, 1, 1, 1]\r\n      player.talismanFive = [null, 1, 1, -1, -1, 1]\r\n      player.talismanSix = [null, 1, 1, 1, -1, -1]\r\n      player.talismanSeven = [null, -1, 1, -1, 1, 1]\r\n\r\n      player.antSacrificePoints = 0\r\n      player.antSacrificeTimer = 0\r\n\r\n      player.obtainiumpersecond = 0\r\n      player.maxobtainiumpersecond = 0\r\n\r\n    }\r\n\r\n    if (data.loaded10101 === undefined || data.loaded10101 === false) {\r\n      player.loaded10101 = true\r\n\r\n      const refundThese = [0, 31, 32, 61, 62, 63, 64, 76, 77, 78, 79, 80,\r\n        81, 98, 104, 105, 106, 107, 108,\r\n        109, 110, 111, 112, 113, 114, 115, 116,\r\n        117, 118, 119, 120, 121, 122, 123, 125]\r\n      const refundReward = [0, 2, 20, 5, 10, 80, 5e3, 1e7, 1e7, 2e7, 3e7, 4e7,\r\n        2e8, 3e10, 1e11, 1e12, 2e11, 1e12, 2e10,\r\n        2e11, 1e12, 2e13, 5e13, 1e14, 2e14, 5e14, 1e15,\r\n        2e15, 1e16, 1e15, 1e16, 1e14, 1e15, 1e15, 1e20]\r\n      for (let i = 1; i < refundThese.length; i++) {\r\n        player.researchPoints += player.researches[refundThese[i]] * refundReward[i]\r\n        player.researches[refundThese[i]] = 0\r\n      }\r\n      player.autoAntSacrifice = false\r\n      player.antMax = false\r\n    }\r\n\r\n    if (player.firstOwnedAnts < 1 && player.firstCostAnts.gte('1e1200')) {\r\n      player.firstCostAnts = new Decimal('1e700')\r\n      player.firstOwnedAnts = 0\r\n    }\r\n\r\n    checkVariablesOnLoad(data)\r\n    if (data.ascensionCount === undefined || player.ascensionCount === 0) {\r\n      player.ascensionCount = 0\r\n      if (player.ascensionCounter === 0 && player.prestigeCount > 0) {\r\n        player.ascensionCounter = 86400 * 90\r\n      }\r\n      /*player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];*/\r\n\r\n      if (player.singularityCount === 0) {\r\n        player.cubeUpgrades = [...blankSave.cubeUpgrades]\r\n      }\r\n      player.wowCubes = new WowCubes(0)\r\n      player.wowTesseracts = new WowTesseracts(0)\r\n      player.wowHypercubes = new WowHypercubes(0)\r\n      player.wowPlatonicCubes = new WowPlatonicCubes(0)\r\n      player.cubeBlessings = {\r\n        accelerator: 0,\r\n        multiplier: 0,\r\n        offering: 0,\r\n        runeExp: 0,\r\n        obtainium: 0,\r\n        antSpeed: 0,\r\n        antSacrifice: 0,\r\n        antELO: 0,\r\n        talismanBonus: 0,\r\n        globalSpeed: 0\r\n      }\r\n    }\r\n    if (data.autoAntSacTimer == null) {\r\n      player.autoAntSacTimer = 900\r\n    }\r\n    if (data.autoAntSacrificeMode === undefined) {\r\n      player.autoAntSacrificeMode = 0\r\n    }\r\n\r\n    if (player.transcendCount < 0) {\r\n      player.transcendCount = 0\r\n    }\r\n    if (player.reincarnationCount < 0) {\r\n      player.reincarnationCount = 0\r\n    }\r\n    if (player.runeshards < 0) {\r\n      player.runeshards = 0\r\n    }\r\n    if (player.researchPoints < 0) {\r\n      player.researchPoints = 0\r\n    }\r\n\r\n    if (player.resettoggle1 === 0) {\r\n      player.resettoggle1 = 1\r\n      player.resettoggle2 = 1\r\n      player.resettoggle3 = 1\r\n      player.resettoggle4 = 1\r\n    }\r\n    if (player.tesseractAutoBuyerToggle === 0) {\r\n      player.tesseractAutoBuyerToggle = 1\r\n    }\r\n    if (player.reincarnationCount < 0.5 && player.unlocks.rrow4) {\r\n      player.unlocks = {\r\n        coinone: false,\r\n        cointwo: false,\r\n        cointhree: false,\r\n        coinfour: false,\r\n        prestige: false,\r\n        generation: false,\r\n        transcend: false,\r\n        reincarnate: false,\r\n        rrow1: false,\r\n        rrow2: false,\r\n        rrow3: false,\r\n        rrow4: false\r\n      }\r\n    }\r\n\r\n    if (data.history === undefined) {\r\n      player.history = { ants: [], ascend: [], reset: [], singularity: [] }\r\n    } else {\r\n      // See: https://discord.com/channels/677271830838640680/964168000360038481/964168002071330879\r\n      const keys = Object.keys(blankSave.history) as (keyof typeof blankSave['history'])[]\r\n\r\n      for (const historyKey of keys) {\r\n        if (!(historyKey in player.history)) {\r\n          player.history[historyKey] = []\r\n        }\r\n      }\r\n    }\r\n\r\n    if (data.historyShowPerSecond === undefined) {\r\n      player.historyShowPerSecond = false\r\n    }\r\n\r\n    if (!Number.isInteger(player.ascendBuilding1.cost)) {\r\n      player.ascendBuilding1.cost = 1\r\n      player.ascendBuilding1.owned = 0\r\n      player.ascendBuilding2.cost = 10\r\n      player.ascendBuilding2.owned = 0\r\n      player.ascendBuilding3.cost = 100\r\n      player.ascendBuilding3.owned = 0\r\n      player.ascendBuilding4.cost = 1000\r\n      player.ascendBuilding4.owned = 0\r\n      player.ascendBuilding5.cost = 10000\r\n      player.ascendBuilding5.owned = 0\r\n    }\r\n\r\n    if (!player.dayCheck) {\r\n      player.dayCheck = new Date()\r\n    }\r\n    if (typeof player.dayCheck === 'string') {\r\n      player.dayCheck = new Date(player.dayCheck)\r\n      if (isNaN(player.dayCheck.getTime())) {\r\n        player.dayCheck = new Date()\r\n      }\r\n    }\r\n    // Measures for people who play the past\r\n    let updatedLast = lastUpdated\r\n    if (!isNaN(updatedLast.getTime())) {\r\n      updatedLast = new Date(updatedLast.getFullYear(), updatedLast.getMonth(), updatedLast.getDate() - 1)\r\n      if (player.dayCheck.getTime() < updatedLast.getTime()) {\r\n        player.dayCheck = updatedLast\r\n      }\r\n    } else if (player.dayCheck.getTime() < 1654009200000) {\r\n      player.dayCheck = new Date('06/01/2022 00:00:00')\r\n    }\r\n    // Calculate daily\r\n    player.dayCheck = new Date(player.dayCheck.getFullYear(), player.dayCheck.getMonth(), player.dayCheck.getDate())\r\n\r\n    const maxLevel = maxCorruptionLevel()\r\n    player.usedCorruptions = player.usedCorruptions.map((curr:number, index:number) => {\r\n      if (index >= 2 && index <= 9) {\r\n        return Math.min(maxLevel * (player.challengecompletions[corrChallengeMinimum(index)] > 0 ? 1: 0), curr)\r\n      }\r\n      return curr\r\n    })\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const ascendBuildingI = `ascendBuilding${i as OneToFive}` as const\r\n      player[ascendBuildingI].generated = new Decimal(player[ascendBuildingI].generated)\r\n    }\r\n\r\n    while (typeof player.achievements[252] === 'undefined') {\r\n      player.achievements.push(0)\r\n    }\r\n    while (typeof player.researches[200] === 'undefined') {\r\n      player.researches.push(0)\r\n    }\r\n    while (typeof player.upgrades[140] === 'undefined') {\r\n      player.upgrades.push(0)\r\n    }\r\n\r\n    if (player.saveString === '' || player.saveString === 'Synergism-v1011Test.txt') {\r\n      player.saveString = player.singularityCount === 0 ?\r\n        'Synergism-$VERSION$-$TIME$.txt' :\r\n        'Synergism-$VERSION$-$TIME$-$SING$.txt'\r\n    }\r\n    (DOMCacheGetOrSet('saveStringInput') as HTMLInputElement).value = cleanString(player.saveString)\r\n\r\n    for (let j = 1; j < 126; j++) {\r\n      upgradeupdate(j, true)\r\n    }\r\n\r\n    for (let j = 1; j <= (200); j++) {\r\n      updateResearchBG(j)\r\n    }\r\n    for (let j = 1; j < player.cubeUpgrades.length; j++) {\r\n      updateCubeUpgradeBG(j)\r\n    }\r\n    const platUpg = document.querySelectorAll('img[id^=\"platUpg\"]')\r\n    for (let j = 1; j <= platUpg.length; j++) {\r\n      updatePlatonicUpgradeBG(j)\r\n    }\r\n\r\n    const q = ['coin', 'crystal', 'mythos', 'particle', 'offering', 'tesseract'] as const\r\n    if (player.coinbuyamount !== 1 && player.coinbuyamount !== 10 && player.coinbuyamount !== 100 && player.coinbuyamount !== 1000) {\r\n      player.coinbuyamount = 1\r\n    }\r\n    if (player.crystalbuyamount !== 1 && player.crystalbuyamount !== 10 && player.crystalbuyamount !== 100 && player.crystalbuyamount !== 1000) {\r\n      player.crystalbuyamount = 1\r\n    }\r\n    if (player.mythosbuyamount !== 1 && player.mythosbuyamount !== 10 && player.mythosbuyamount !== 100 && player.mythosbuyamount !== 1000) {\r\n      player.mythosbuyamount = 1\r\n    }\r\n    if (player.particlebuyamount !== 1 && player.particlebuyamount !== 10 && player.particlebuyamount !== 100 && player.particlebuyamount !== 1000) {\r\n      player.particlebuyamount = 1\r\n    }\r\n    if (player.offeringbuyamount !== 1 && player.offeringbuyamount !== 10 && player.offeringbuyamount !== 100 && player.offeringbuyamount !== 1000) {\r\n      player.offeringbuyamount = 1\r\n    }\r\n    if (player.tesseractbuyamount !== 1 && player.tesseractbuyamount !== 10 && player.tesseractbuyamount !== 100 && player.tesseractbuyamount !== 1000) {\r\n      player.tesseractbuyamount = 1\r\n    }\r\n    for (let j = 0; j <= 5; j++) {\r\n      for (let k = 0; k < 4; k++) {\r\n        let d\r\n        if (k === 0) {\r\n          d = 'one'\r\n        }\r\n        if (k === 1) {\r\n          d = 'ten'\r\n        }\r\n        if (k === 2) {\r\n          d = 'hundred'\r\n        }\r\n        if (k === 3) {\r\n          d = 'thousand'\r\n        }\r\n        const e = `${q[j]}${d}`\r\n        DOMCacheGetOrSet(e).style.backgroundColor = ''\r\n      }\r\n      let c\r\n      const curBuyAmount = player[`${q[j]}buyamount` as const]\r\n      if (curBuyAmount === 1) {\r\n        c = 'one'\r\n      }\r\n      if (curBuyAmount === 10) {\r\n        c = 'ten'\r\n      }\r\n      if (curBuyAmount === 100) {\r\n        c = 'hundred'\r\n      }\r\n      if (curBuyAmount === 1000) {\r\n        c = 'thousand'\r\n      }\r\n\r\n      const b = `${q[j]}${c}`\r\n      DOMCacheGetOrSet(b).style.backgroundColor = 'green'\r\n\r\n    }\r\n\r\n    const testArray = []\r\n    //Creates a copy of research costs array\r\n    for (let i = 0; i < G.researchBaseCosts.length; i++) {\r\n      testArray.push(G.researchBaseCosts[i])\r\n    }\r\n    //Sorts the above array, and returns the index order of sorted array\r\n    G.researchOrderByCost = sortWithIndices(testArray)\r\n    player.roombaResearchIndex = 0\r\n\r\n    // June 09, 2021: Updated toggleShops() and removed boilerplate - Platonic\r\n    toggleShops()\r\n    getChallengeConditions()\r\n    updateChallengeDisplay()\r\n    revealStuff()\r\n    toggleauto()\r\n\r\n    // Challenge summary should be displayed\r\n    if (player.currentChallenge.transcension > 0) {\r\n      challengeDisplay(player.currentChallenge.transcension)\r\n    } else if (player.currentChallenge.reincarnation > 0) {\r\n      challengeDisplay(player.currentChallenge.reincarnation)\r\n    } else if (player.currentChallenge.ascension > 0) {\r\n      challengeDisplay(player.currentChallenge.ascension)\r\n    } else {\r\n      challengeDisplay(1)\r\n    }\r\n\r\n    corruptionStatsUpdate()\r\n    const corrs = Math.min(8, Object.keys(player.corruptionLoadouts).length) + 1\r\n    for (let i = 0; i < corrs; i++) {\r\n      corruptionLoadoutTableUpdate(i)\r\n    }\r\n    showCorruptionStatsLoadouts()\r\n    updateCorruptionLoadoutNames()\r\n\r\n    DOMCacheGetOrSet('researchrunebonus').textContent = i18next.t('runes.thanksResearches', {\r\n      percent: format(100 * G.effectiveLevelMult - 100, 4, true)\r\n    })\r\n\r\n    DOMCacheGetOrSet('talismanlevelup').style.display = 'none'\r\n    DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n\r\n    DOMCacheGetOrSet('antSacrificeSummary').style.display = 'none'\r\n\r\n    // This must be initialized at the beginning of the calculation\r\n    c15RewardUpdate()\r\n\r\n    calculatePlatonicBlessings()\r\n    calculateHypercubeBlessings()\r\n    calculateTesseractBlessings()\r\n    calculateCubeBlessings()\r\n    updateTalismanAppearance(0)\r\n    updateTalismanAppearance(1)\r\n    updateTalismanAppearance(2)\r\n    updateTalismanAppearance(3)\r\n    updateTalismanAppearance(4)\r\n    updateTalismanAppearance(5)\r\n    updateTalismanAppearance(6)\r\n    for (const id in player.ascStatToggles) {\r\n      toggleAscStatPerSecond(+id) // toggle each stat twice to make sure the displays are correct and match what they used to be\r\n      toggleAscStatPerSecond(+id)\r\n    }\r\n\r\n    // Strictly check the input and data with values other than numbers\r\n    const omit = /e\\+/\r\n    let inputd = player.autoChallengeTimer.start\r\n    let inpute = Number((DOMCacheGetOrSet('startAutoChallengeTimerInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('startAutoChallengeTimerInput') as HTMLInputElement).value =\r\n        `${player.autoChallengeTimer.start || blankSave.autoChallengeTimer.start}`.replace(omit, 'e')\r\n      updateAutoChallenge(1)\r\n    }\r\n\r\n    DOMCacheGetOrSet('startTimerValue').innerHTML = i18next.t('challenges.timeStartSweep', {\r\n      time: format(player.autoChallengeTimer.start, 2, true)\r\n    })\r\n\r\n    inputd = player.autoChallengeTimer.exit\r\n    inpute = Number((DOMCacheGetOrSet('exitAutoChallengeTimerInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('exitAutoChallengeTimerInput') as HTMLInputElement).value =\r\n        `${player.autoChallengeTimer.exit || blankSave.autoChallengeTimer.exit}`.replace(omit, 'e')\r\n      updateAutoChallenge(2)\r\n    }\r\n\r\n    DOMCacheGetOrSet('exitTimerValue').innerHTML = i18next.t('challenges.timeExitChallenge', {\r\n      time: format(player.autoChallengeTimer.exit, 2, true)\r\n    })\r\n\r\n    inputd = player.autoChallengeTimer.enter\r\n    inpute = Number((DOMCacheGetOrSet('enterAutoChallengeTimerInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('enterAutoChallengeTimerInput') as HTMLInputElement).value =\r\n        `${player.autoChallengeTimer.enter || blankSave.autoChallengeTimer.enter}`.replace(omit, 'e')\r\n      updateAutoChallenge(3)\r\n    }\r\n\r\n    DOMCacheGetOrSet('enterTimerValue').innerHTML = i18next.t('challenges.timeEnterChallenge', {\r\n      time: format(player.autoChallengeTimer.enter, 2, true)\r\n    })\r\n\r\n    inputd = player.prestigeamount\r\n    inpute = Number((DOMCacheGetOrSet('prestigeamount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('prestigeamount') as HTMLInputElement).value =\r\n        `${player.prestigeamount || blankSave.prestigeamount}`.replace(omit, 'e')\r\n      updateAutoReset(1)\r\n    }\r\n    inputd = player.transcendamount\r\n    inpute = Number((DOMCacheGetOrSet('transcendamount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('transcendamount') as HTMLInputElement).value =\r\n        `${player.transcendamount || blankSave.transcendamount}`.replace(omit, 'e')\r\n      updateAutoReset(2)\r\n    }\r\n    inputd = player.reincarnationamount\r\n    inpute = Number((DOMCacheGetOrSet('reincarnationamount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('reincarnationamount') as HTMLInputElement).value =\r\n        `${player.reincarnationamount || blankSave.reincarnationamount}`.replace(omit, 'e')\r\n      updateAutoReset(3)\r\n    }\r\n    inputd = player.autoAscendThreshold\r\n    inpute = Number((DOMCacheGetOrSet('ascensionAmount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('ascensionAmount') as HTMLInputElement).value =\r\n        `${player.autoAscendThreshold || blankSave.autoAscendThreshold}`.replace(omit, 'e')\r\n      updateAutoReset(4)\r\n    }\r\n    inputd = player.autoAntSacTimer\r\n    inpute = Number((DOMCacheGetOrSet('autoAntSacrificeAmount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('autoAntSacrificeAmount') as HTMLInputElement).value =\r\n        `${player.autoAntSacTimer || blankSave.autoAntSacTimer}`.replace(omit, 'e')\r\n      updateAutoReset(5)\r\n    }\r\n    inputd = player.tesseractAutoBuyerAmount\r\n    inpute = Number((DOMCacheGetOrSet('tesseractAmount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('tesseractAmount') as HTMLInputElement).value =\r\n        `${player.tesseractAutoBuyerAmount || blankSave.tesseractAutoBuyerAmount}`.replace(omit, 'e')\r\n      updateTesseractAutoBuyAmount()\r\n    }\r\n    inputd = player.openCubes\r\n    inpute = Number((DOMCacheGetOrSet('cubeOpensInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('cubeOpensInput') as HTMLInputElement).value =\r\n        `${player.openCubes || blankSave.openCubes}`.replace(omit, 'e')\r\n      updateAutoCubesOpens(1)\r\n    }\r\n    inputd = player.openTesseracts\r\n    inpute = Number((DOMCacheGetOrSet('tesseractsOpensInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('tesseractsOpensInput') as HTMLInputElement).value =\r\n        `${player.openTesseracts || blankSave.openTesseracts}`.replace(omit, 'e')\r\n      updateAutoCubesOpens(2)\r\n    }\r\n    inputd = player.openHypercubes\r\n    inpute = Number((DOMCacheGetOrSet('hypercubesOpensInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('hypercubesOpensInput') as HTMLInputElement).value =\r\n        `${player.openHypercubes || blankSave.openHypercubes}`.replace(omit, 'e')\r\n      updateAutoCubesOpens(3)\r\n    }\r\n    inputd = player.openPlatonicsCubes\r\n    inpute = Number((DOMCacheGetOrSet('platonicCubeOpensInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('platonicCubeOpensInput') as HTMLInputElement).value =\r\n        `${player.openPlatonicsCubes || blankSave.openPlatonicsCubes}`.replace(omit, 'e')\r\n      updateAutoCubesOpens(4)\r\n    }\r\n    inputd = player.runeBlessingBuyAmount\r\n    inpute = Number((DOMCacheGetOrSet('buyRuneBlessingInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('buyRuneBlessingInput') as HTMLInputElement).value =\r\n        `${player.runeBlessingBuyAmount || blankSave.runeBlessingBuyAmount}`.replace(omit, 'e')\r\n      updateRuneBlessingBuyAmount(1)\r\n    }\r\n\r\n    DOMCacheGetOrSet('buyRuneBlessingToggle').innerHTML = i18next.t('runes.blessings.buyUpTo', {\r\n      amount: format(player.runeBlessingBuyAmount)\r\n    })\r\n\r\n    inputd = player.runeSpiritBuyAmount\r\n    inpute = Number((DOMCacheGetOrSet('buyRuneSpiritInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('buyRuneSpiritInput') as HTMLInputElement).value =\r\n        `${player.runeSpiritBuyAmount || blankSave.runeSpiritBuyAmount}`.replace(omit, 'e')\r\n      updateRuneBlessingBuyAmount(2)\r\n    }\r\n    DOMCacheGetOrSet('buyRuneSpiritToggleValue').innerHTML = i18next.t('runes.spirits.buyUpTo', {\r\n      amount: format(player.runeSpiritBuyAmount, 0, true)\r\n    })\r\n\r\n    if (player.resettoggle1 === 1) {\r\n      DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n    if (player.resettoggle2 === 1) {\r\n      DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n    if (player.resettoggle3 === 1) {\r\n      DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n    if (player.resettoggle4 === 1) {\r\n      DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n\r\n    if (player.resettoggle1 === 2) {\r\n      DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    }\r\n    if (player.resettoggle2 === 2) {\r\n      DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    }\r\n    if (player.resettoggle3 === 2) {\r\n      DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    }\r\n    if (player.resettoggle4 === 2) {\r\n      DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modePercentage')\r\n    }\r\n\r\n    if (player.tesseractAutoBuyerToggle === 1) {\r\n      DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOn')\r\n      DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid green'\r\n    }\r\n    if (player.tesseractAutoBuyerToggle === 2) {\r\n      DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOff')\r\n      DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid red'\r\n    }\r\n\r\n    if (player.autoOpenCubes) {\r\n      DOMCacheGetOrSet('openCubes').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openCubes, 0) })\r\n      DOMCacheGetOrSet('openCubes').style.border = '1px solid green'\r\n      DOMCacheGetOrSet('cubeOpensInput').style.border = '1px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('openCubes').textContent = i18next.t('wowCubes.autoOff')\r\n      DOMCacheGetOrSet('openCubes').style.border = '1px solid red'\r\n      DOMCacheGetOrSet('cubeOpensInput').style.border = '1px solid red'\r\n    }\r\n    if (player.autoOpenTesseracts) {\r\n      DOMCacheGetOrSet('openTesseracts').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openTesseracts, 0) })\r\n      DOMCacheGetOrSet('openTesseracts').style.border = '1px solid green'\r\n      DOMCacheGetOrSet('tesseractsOpensInput').style.border = '1px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('openTesseracts').textContent = i18next.t('wowCubes.autoOff')\r\n      DOMCacheGetOrSet('openTesseracts').style.border = '1px solid red'\r\n      DOMCacheGetOrSet('tesseractsOpensInput').style.border = '1px solid red'\r\n    }\r\n    if (player.autoOpenHypercubes) {\r\n      DOMCacheGetOrSet('openHypercubes').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openHypercubes, 0) })\r\n      DOMCacheGetOrSet('openHypercubes').style.border = '1px solid green'\r\n      DOMCacheGetOrSet('hypercubesOpensInput').style.border = '1px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('openHypercubes').textContent = i18next.t('wowCubes.autoOff')\r\n      DOMCacheGetOrSet('openHypercubes').style.border = '1px solid red'\r\n      DOMCacheGetOrSet('hypercubesOpensInput').style.border = '1px solid red'\r\n    }\r\n    if (player.autoOpenPlatonicsCubes) {\r\n      DOMCacheGetOrSet('openPlatonicCube').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openPlatonicsCubes, 0) })\r\n      DOMCacheGetOrSet('openPlatonicCube').style.border = '1px solid green'\r\n      DOMCacheGetOrSet('platonicCubeOpensInput').style.border = '1px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('openPlatonicCube').textContent = i18next.t('wowCubes.autoOff')\r\n      DOMCacheGetOrSet('openPlatonicCube').style.border = '1px solid red'\r\n      DOMCacheGetOrSet('platonicCubeOpensInput').style.border = '1px solid red'\r\n    }\r\n\r\n    if (player.autoResearchToggle) {\r\n      DOMCacheGetOrSet('toggleautoresearch').textContent = i18next.t('researches.automaticOn')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautoresearch').textContent = i18next.t('researches.automaticOff')\r\n    }\r\n    if (player.autoResearchMode === 'cheapest') {\r\n      DOMCacheGetOrSet('toggleautoresearchmode').textContent = i18next.t('researches.autoModeCheapest')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautoresearchmode').textContent = i18next.t('researches.autoModeManual')\r\n    }\r\n    if (player.autoSacrificeToggle) {\r\n      DOMCacheGetOrSet('toggleautosacrifice').textContent = i18next.t('runes.blessings.autoRuneOn')\r\n      DOMCacheGetOrSet('toggleautosacrifice').style.border = '2px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautosacrifice').textContent = i18next.t('runes.blessings.autoRuneOff')\r\n      DOMCacheGetOrSet('toggleautosacrifice').style.border = '2px solid red'\r\n    }\r\n    if (player.autoBuyFragment) {\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').textContent = i18next.t('runes.talismans.autoBuyOn')\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').style.border = '2px solid white'\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').style.color = 'orange'\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').textContent = i18next.t('runes.talismans.autoBuyOff')\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').style.border = '2px solid orange'\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').style.color = 'white'\r\n    }\r\n    if (player.autoFortifyToggle) {\r\n      DOMCacheGetOrSet('toggleautofortify').textContent = i18next.t('runes.autoFortifyOn')\r\n      DOMCacheGetOrSet('toggleautofortify').style.border = '2px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautofortify').textContent = i18next.t('runes.autoFortifyOff')\r\n      DOMCacheGetOrSet('toggleautofortify').style.border = '2px solid red'\r\n    }\r\n    if (player.autoEnhanceToggle) {\r\n      DOMCacheGetOrSet('toggleautoenhance').textContent = i18next.t('runes.autoEnhanceOn')\r\n      DOMCacheGetOrSet('toggleautoenhance').style.border = '2px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautoenhance').textContent = i18next.t('runes.autoEnhanceOff')\r\n      DOMCacheGetOrSet('toggleautoenhance').style.border = '2px solid red'\r\n    }\r\n    player.saveOfferingToggle = false //Lint doesnt like it being inside if\r\n    DOMCacheGetOrSet('saveOffToggle').textContent = i18next.t('toggles.saveOfferingsOff')\r\n    DOMCacheGetOrSet('saveOffToggle').style.color = 'white'\r\n    if (player.autoAscend) {\r\n      DOMCacheGetOrSet('ascensionAutoEnable').textContent = i18next.t('corruptions.autoAscend.on')\r\n      DOMCacheGetOrSet('ascensionAutoEnable').style.border = '2px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('ascensionAutoEnable').textContent = i18next.t('corruptions.autoAscend.off')\r\n      DOMCacheGetOrSet('ascensionAutoEnable').style.border = '2px solid red'\r\n    }\r\n    if (player.shopConfirmationToggle) {\r\n      DOMCacheGetOrSet('toggleConfirmShop').textContent = i18next.t('shop.shopConfirmationOn')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleConfirmShop').textContent = i18next.t('shop.shopConfirmationOff')\r\n    }\r\n    switch (player.shopBuyMaxToggle) {\r\n      case false:\r\n        DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buy1')\r\n        break\r\n      case 'TEN':\r\n        DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buy10')\r\n        break\r\n      case true:\r\n        DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buyMax')\r\n        break\r\n      case 'ANY':\r\n        DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buyAny')\r\n    }\r\n    if (player.shopHideToggle) {\r\n      DOMCacheGetOrSet('toggleHideShop').textContent = i18next.t('shop.hideMaxedOn')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleHideShop').textContent = i18next.t('shop.hideMaxedOff')\r\n    }\r\n    if (player.researchBuyMaxToggle) {\r\n      DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeMax')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeOne')\r\n    }\r\n    if (player.cubeUpgradesBuyMaxToggle) {\r\n      DOMCacheGetOrSet('toggleCubeBuy').textContent = i18next.t('toggles.upgradeMaxIfPossible')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleCubeBuy').textContent = i18next.t('toggles.upgradeOneLevelWow')\r\n    }\r\n    autoCubeUpgradesToggle(false)\r\n    autoPlatonicUpgradesToggle(false)\r\n\r\n    for (let i = 1; i <= 2; i++) {\r\n      toggleAntMaxBuy()\r\n      toggleAntAutoSacrifice(0)\r\n      toggleAntAutoSacrifice(1)\r\n    }\r\n\r\n    for (let i = 1; i <= 2; i++) {\r\n      toggleAutoAscend(0)\r\n      toggleAutoAscend(1)\r\n    }\r\n\r\n    DOMCacheGetOrSet('historyTogglePerSecondButton').textContent = 'Per second: ' + (player.historyShowPerSecond ? 'ON' : 'OFF')\r\n    DOMCacheGetOrSet('historyTogglePerSecondButton').style.borderColor = (player.historyShowPerSecond ? 'green' : 'red')\r\n\r\n    //If auto research is enabled and runing; Make sure there is something to try to research if possible\r\n    if (player.autoResearchToggle && autoResearchEnabled() && player.autoResearchMode === 'cheapest') {\r\n      player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n    }\r\n\r\n    player.autoResearch = Math.min(200, player.autoResearch)\r\n    player.autoSacrifice = Math.min(5, player.autoSacrifice)\r\n\r\n\r\n    if (player.researches[61] === 0) {\r\n      DOMCacheGetOrSet('automaticobtainium').textContent = i18next.t('main.buyResearch3x11')\r\n    }\r\n\r\n    if (player.autoSacrificeToggle && player.autoSacrifice > 0.5) {\r\n      DOMCacheGetOrSet(`rune${player.autoSacrifice}`).style.backgroundColor = 'orange'\r\n    }\r\n\r\n    if (player.autoWarpCheck) {\r\n      DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOnColon')\r\n      DOMCacheGetOrSet('warpAuto').style.border = '2px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOffColon')\r\n      DOMCacheGetOrSet('warpAuto').style.border = '2px solid red'\r\n    }\r\n    DOMCacheGetOrSet('autoHepteractPercentage').textContent = i18next.t('wowCubes.hepteractForge.autoSetting', {\r\n      x: `${player.hepteractAutoCraftPercentage}`\r\n    })\r\n    DOMCacheGetOrSet('hepteractToQuarkTradeAuto').textContent = player.overfluxOrbsAutoBuy\r\n      ? i18next.t('general.autoOnColon')\r\n      : i18next.t('general.autoOffColon')\r\n    DOMCacheGetOrSet('hepteractToQuarkTradeAuto').style.border = `2px solid ${player.overfluxOrbsAutoBuy ? 'green' : 'red'}`\r\n    toggleAutoBuyOrbs(true, true)\r\n\r\n    toggleTalismanBuy(player.buyTalismanShardPercent)\r\n    updateTalismanInventory()\r\n    calculateObtainium()\r\n    calculateAnts()\r\n    calculateRuneLevels()\r\n    resetHistoryRenderAllTables()\r\n    updateSingularityAchievements()\r\n    updateSingularityGlobalPerks()\r\n  }\r\n\r\n  updateAchievementBG()\r\n  if (player.currentChallenge.reincarnation) {\r\n    resetrepeat('reincarnationChallenge')\r\n  } else if (player.currentChallenge.transcension) {\r\n    resetrepeat('transcensionChallenge')\r\n  }\r\n\r\n  const d = new Date()\r\n  const h = d.getHours()\r\n  const m = d.getMinutes()\r\n  const s = d.getSeconds()\r\n  player.dayTimer = (60 * 60 * 24 - (s + 60 * m + 60 * 60 * h))\r\n}\r\n\r\nconst FormatList = ['', 'K', 'M', 'B', 'T', 'Qa', 'Qt', 'Sx', 'Sp', 'Oc', 'No', 'Dc', 'UDc', 'DDc', 'TDc', 'QaDc', 'QtDc', 'SxDc', 'SpDc', 'OcDc', 'NoDc', 'Vg', 'UVg', 'DVg', 'TVg', 'QaVg', 'QtVg', 'SxVg', 'SpVg', 'OcVg', 'NoVg', 'Tg', 'UTg', 'DTg', 'TTg', 'QaTg', 'QtTg', 'SxTg', 'SpTg', 'OTg', 'NTg', 'Qd', 'UQd', 'DQd', 'TQd', 'QaQd', 'QtQd', 'SxQd', 'SpQd', 'OcQd', 'NoQd', 'Qi', 'UQi', 'DQi', 'TQi', 'QaQi', 'QtQi', 'SxQi', 'SpQi', 'OQi', 'NQi', 'Se', 'USe', 'DSe', 'TSe', 'QaSe', 'QtSe', 'SxSe', 'SpSe', 'OcSe', 'NoSe', 'St', 'USt', 'DSt', 'TSt', 'QaSt', 'QtSt', 'SxSt', 'SpSt', 'OcSt', 'NoSt', 'Ocg', 'UOcg', 'DOcg', 'TOcg', 'QaOcg', 'QtOcg', 'SxOcg', 'SpOcg', 'OcOcg', 'NoOcg', 'Nono', 'UNono', 'DNono', 'TNono', 'QaNono', 'QtNono', 'SxNono', 'SpNono', 'OcNono', 'NoNono', 'Ce']\r\n\r\n// Bad browsers (like Safari) only recently implemented this.\r\n//\r\n// eslint-disable-next-line\r\nconst supportsFormatToParts = typeof (Intl.NumberFormat.prototype).formatToParts === 'function'\r\n\r\n// In some browsers, this will return an empty-1 length array (?), causing a \"TypeError: Cannot read property 'value' of undefined\"\r\n// if we destructure it... To reproduce: ` const [ { value } ] = []; `\r\n// https://discord.com/channels/677271830838640680/730669616870981674/830218436201283584\r\nconst IntlFormatter = !supportsFormatToParts ? null : Intl.NumberFormat()\r\n  .formatToParts(1000.1)\r\n  .filter(part => part.type === 'decimal' || part.type === 'group')\r\n\r\n// gets the system number delimiter and decimal values, defaults to en-US\r\nconst [{ value: group }, { value: dec }] = IntlFormatter?.length !== 2\r\n  ? [{ value: ',' }, { value: '.' }]\r\n  : IntlFormatter\r\n\r\n// Number.toLocaleString opts for 2 decimal places\r\nconst locOpts = { minimumFractionDigits: 2, maximumFractionDigits: 2 }\r\n\r\nconst padEvery = (str: string, places = 3) => {\r\n  let step = 1, newStr = ''\r\n  const strParts = str.split('.')\r\n  // don't take any decimal places\r\n  for (let i = (strParts[0].length - 1); i >= 0; i--) {\r\n    // pad every [places] places if we aren't at the beginning of the string\r\n    if (step++ === places && i !== 0) {\r\n      step = 1\r\n      newStr = group + str[i] + newStr\r\n    } else {\r\n      newStr = str[i] + newStr\r\n    }\r\n  }\r\n  // re-add decimal places\r\n  if (typeof strParts[1] !== 'undefined') {\r\n    newStr += dec + strParts[1]\r\n  }\r\n  // see https://www.npmjs.com/package/flatstr\r\n  // eslint-disable-next-line no-bitwise\r\n  (newStr as unknown as number) | 0\r\n  return newStr\r\n}\r\n\r\n/**\r\n * This function displays the numbers such as 1,234 or 1.00e1234 or 1.00e1.234M.\r\n * @param input value to format\r\n * @param accuracy\r\n * how many decimal points that are to be displayed (Values <10 if !long, <1000 if long).\r\n * only works up to 305 (308 - 3), however it only worked up to ~14 due to rounding errors regardless\r\n * @param long dictates whether or not a given number displays as scientific at 1,000,000. This auto defaults to short if input >= 1e7\r\n */\r\nexport const format = (\r\n  input: Decimal | number | { [Symbol.toPrimitive]: unknown } | null | undefined,\r\n  accuracy = 0,\r\n  long = false,\r\n  truncate = true,\r\n  fractional = false\r\n): string => {\r\n  if (input == null) {\r\n    return '0 [null]'\r\n  }\r\n\r\n  if (\r\n    typeof input === 'object' &&\r\n        Symbol.toPrimitive in input\r\n  ) {\r\n    input = Number(input)\r\n  }\r\n\r\n  if ( // invalid parameter\r\n    !(input instanceof Decimal) &&\r\n        typeof input !== 'number' ||\r\n        isNaN(input as number)\r\n  ) {\r\n    return isNaN(input as number) ? '0 [NaN]' : '0 [und.]'\r\n  } else if ( // this case handles numbers less than 1e-6 and greater than 0\r\n    typeof input === 'number' &&\r\n        player.notation == 'Default' &&\r\n        input < (!fractional ? 1e-3 : 1e-15) && // arbitrary number, don't change 1e-3\r\n        input > 0 // don't handle negative numbers, probably could be removed\r\n  ) {\r\n    return input.toExponential(accuracy)\r\n  }\r\n\r\n  let power!: number\r\n  let mantissa!: number\r\n  if (isDecimal(input)) {\r\n    // Gets power and mantissa if input is of type decimal\r\n    power = input.e\r\n    mantissa = input.mantissa\r\n  } else if (typeof input === 'number') {\r\n    if (input === 0) {\r\n      return '0'\r\n    }\r\n\r\n    // Gets power and mantissa if input is of type number and isn't 0\r\n    power = Math.floor(Math.log10(Math.abs(input)))\r\n    mantissa = input / Math.pow(10, power)\r\n  }\r\n\r\n  // This prevents numbers from jittering between two different powers by rounding errors\r\n  if (mantissa > 9.9999999) {\r\n    mantissa = 1\r\n    ++power\r\n  }\r\n\r\n  if (mantissa < 1 && mantissa > 0.9999999) {\r\n    mantissa = 1\r\n  }\r\n\r\n  // If the power is less than 15 it's effectively 0\r\n\r\n  if (power < -15) {\r\n    return '0'\r\n  }\r\n  if (player.notation == 'Pure Engineering') {\r\n    const powerOver = (power % 3 < 0) ? (3 + power % 3) : (power % 3)\r\n    power = power - powerOver\r\n    mantissa = mantissa * Math.pow(10, powerOver)\r\n  }\r\n  if (player.notation == 'Pure Scientific' || player.notation == 'Pure Engineering') {\r\n    if (power >= 1e6) {\r\n      if (!Number.isFinite(power)) {\r\n        return 'Infinity'\r\n      }\r\n      return `E${format(power, 3)}`\r\n    }\r\n    accuracy = power === 2 && accuracy > 2 ? 2 : accuracy\r\n    if (power >= 6 || power < 0) {\r\n      accuracy = (accuracy < 2 ? 2 : accuracy)\r\n      // Makes the power group 3 with commas\r\n      const mantissaLook = (Math.floor(mantissa * Math.pow(10, accuracy)) / Math.pow(10, accuracy)).toLocaleString(undefined, locOpts)\r\n      const powerLook = padEvery(power.toString())\r\n      // returns format (1.23e456,789)\r\n      return `${mantissaLook}e${powerLook}`\r\n    }\r\n    const mantissaLook = (Math.floor(mantissa * Math.pow(10, power) * Math.pow(10, accuracy)) / Math.pow(10, accuracy)).toLocaleString(undefined, {\r\n      minimumFractionDigits: accuracy, maximumFractionDigits: accuracy\r\n    })\r\n    return `${mantissaLook}`\r\n  }\r\n  // If the power is negative, then we will want to address that separately.\r\n  if (power < 0 && !isDecimal(input) && fractional) {\r\n    if (power <= -15) {\r\n      return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 15)}Qa`\r\n    }\r\n    if (power <= -12) {\r\n      return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 12)}T`\r\n    }\r\n    if (power <= -9) {\r\n      return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 9)}B`\r\n    }\r\n    if (power <= -6) {\r\n      return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 6)}M`\r\n    }\r\n    if (power <= -3) {\r\n      return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 3)}K`\r\n    }\r\n    return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power)}`\r\n  } else if (power < 6 || (long && power < 7)) {\r\n    // If the power is less than 6 or format long and less than 7 use standard formatting (1,234,567)\r\n    // Gets the standard representation of the number, safe as power is guaranteed to be > -12 and < 7\r\n    let standard = mantissa * Math.pow(10, power)\r\n    let standardString\r\n    // Rounds up if the number experiences a rounding error\r\n    if (standard - Math.floor(standard) > 0.9999999) {\r\n      standard = Math.ceil(standard)\r\n    }\r\n    // If the power is less than 1 or format long and less than 3 apply toFixed(accuracy) to get decimal places\r\n    if ((power < 2 || (long && power < 3)) && accuracy > 0) {\r\n      standardString = standard.toFixed(power === 2 && accuracy > 2 ? 2 : accuracy)\r\n    } else {\r\n      // If it doesn't fit those criteria drop the decimal places\r\n      standard = Math.floor(standard)\r\n      standardString = standard.toString()\r\n    }\r\n\r\n    // Split it on the decimal place\r\n    return padEvery(standardString)\r\n  } else if (power < 1e6) {\r\n    // If the power is less than 1e6 then apply standard scientific notation\r\n    // Makes mantissa be rounded down to 2 decimal places\r\n    const mantissaLook = (Math.floor(mantissa * 100) / 100).toLocaleString(undefined, locOpts)\r\n    // Makes the power group 3 with commas\r\n    const powerLook = padEvery(power.toString())\r\n    // returns format (1.23e456,789)\r\n    return `${mantissaLook}e${powerLook}`\r\n  } else if (power >= 1e6) {\r\n    if (!Number.isFinite(power)) {\r\n      return 'Infinity'\r\n    }\r\n\r\n    // if the power is greater than 1e6 apply notation scientific notation\r\n    // Makes mantissa be rounded down to 2 decimal places\r\n    const mantissaLook = testing && truncate ? '' : (Math.floor(mantissa * 100) / 100).toLocaleString(undefined, locOpts)\r\n\r\n    // Drops the power down to 4 digits total but never greater than 1000 in increments that equate to notations, (1234000 -> 1.234) ( 12340000 -> 12.34) (123400000 -> 123.4) (1234000000 -> 1.234)\r\n    const powerDigits = Math.ceil(Math.log10(power))\r\n    let powerFront = ((powerDigits - 1) % 3) + 1\r\n    let powerLook = power / Math.pow(10, powerDigits - powerFront)\r\n    if (powerLook === 1000) {\r\n      powerLook = 1\r\n      powerFront = 1\r\n    }\r\n\r\n    const powerLookF = powerLook.toLocaleString(undefined, {\r\n      minimumFractionDigits: 4 - powerFront, maximumFractionDigits: 4 - powerFront\r\n    })\r\n    const powerLodge = Math.floor(Math.log10(power) / 3)\r\n    // Return relevant notations alongside the \"look\" power based on what the power actually is\r\n    if (typeof FormatList[powerLodge] === 'string') {\r\n      return `${mantissaLook}e${powerLookF}${FormatList[powerLodge]}`\r\n    }\r\n\r\n    // If it doesn't fit a notation then default to mantissa e power\r\n    return `e${power.toExponential(2)}`\r\n  } else {\r\n    return '0 [und.]'\r\n  }\r\n}\r\n\r\nexport const formatTimeShort = (seconds: number, msMaxSeconds?: number): string => {\r\n  return ((seconds >= 86400) ? format(Math.floor(seconds / 86400)) + 'd' : '') +\r\n        ((seconds >= 3600) ? format(Math.floor(seconds / 3600) % 24) + 'h' : '') +\r\n        ((seconds >= 60)   ? format(Math.floor(seconds / 60) % 60) + 'm'   : '') +\r\n        ((seconds >= 8640000) ? '' : format(Math.floor(seconds) % 60) + ((msMaxSeconds && seconds < msMaxSeconds)  //Don't show seconds when you're over 100 days, like honestly\r\n          ? '.' + (Math.floor((seconds % 1) * 1000).toString().padStart(3, '0')) : '') + 's')\r\n}\r\n\r\nexport const updateAllTick = (): void => {\r\n  let a = 0\r\n\r\n  G.totalAccelerator = player.acceleratorBought\r\n  G.costDivisor = 1\r\n\r\n  if (player.upgrades[8] !== 0) {\r\n    a += Math.floor(player.multiplierBought / 7)\r\n  }\r\n  if (player.upgrades[21] !== 0) {\r\n    a += 5\r\n  }\r\n  if (player.upgrades[22] !== 0) {\r\n    a += 4\r\n  }\r\n  if (player.upgrades[23] !== 0) {\r\n    a += 3\r\n  }\r\n  if (player.upgrades[24] !== 0) {\r\n    a += 2\r\n  }\r\n  if (player.upgrades[25] !== 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[27] !== 0) {\r\n    a += Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.min(1750, Math.max(0, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50))\r\n  }\r\n  if (player.upgrades[29] !== 0) {\r\n    a += Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))\r\n  }\r\n  if (player.upgrades[32] !== 0) {\r\n    a += Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)))\r\n  }\r\n  if (player.upgrades[45] !== 0) {\r\n    a += Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)))\r\n  }\r\n  if (player.achievements[5] !== 0) {\r\n    a += Math.floor(player.firstOwnedCoin / 500)\r\n  }\r\n  if (player.achievements[12] !== 0) {\r\n    a += Math.floor(player.secondOwnedCoin / 500)\r\n  }\r\n  if (player.achievements[19] !== 0) {\r\n    a += Math.floor(player.thirdOwnedCoin / 500)\r\n  }\r\n  if (player.achievements[26] !== 0) {\r\n    a += Math.floor(player.fourthOwnedCoin / 500)\r\n  }\r\n  if (player.achievements[33] !== 0) {\r\n    a += Math.floor(player.fifthOwnedCoin / 500)\r\n  }\r\n  if (player.achievements[60] !== 0) {\r\n    a += 2\r\n  }\r\n  if (player.achievements[61] !== 0) {\r\n    a += 2\r\n  }\r\n  if (player.achievements[62] !== 0) {\r\n    a += 2\r\n  }\r\n\r\n  a += 5 * CalcECC('transcend', player.challengecompletions[2])\r\n  G.freeUpgradeAccelerator = a\r\n  a += G.totalAcceleratorBoost * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G.cubeBonusMultiplier[1])\r\n  if (player.unlocks.prestige) {\r\n    a += Math.floor(Math.pow(G.rune1level * G.effectiveLevelMult / 4, 1.25))\r\n    a *= (1 + G.rune1level * 1 / 400 * G.effectiveLevelMult)\r\n  }\r\n\r\n  calculateAcceleratorMultiplier()\r\n  a *= G.acceleratorMultiplier\r\n  a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G.viscosityPower[player.usedCorruptions[2]]))\r\n  a += 2000 * hepteractEffective('accelerator')\r\n  a *= G.challenge15Rewards.accelerator\r\n  a *= (1 + 3/10000 * hepteractEffective('accelerator'))\r\n  a = Math.floor(Math.min(1e100, a))\r\n\r\n  if (player.usedCorruptions[2] >= 15) {\r\n    a = Math.pow(a, 0.2)\r\n  }\r\n  if (player.usedCorruptions[2] >= 16) {\r\n    a = 1\r\n  }\r\n\r\n  G.freeAccelerator = a\r\n  G.totalAccelerator += G.freeAccelerator\r\n\r\n  G.tuSevenMulti = 1\r\n\r\n\r\n  if (player.upgrades[46] > 0.5) {\r\n    G.tuSevenMulti = 1.05\r\n  }\r\n\r\n  G.acceleratorPower = Math.pow(\r\n    1.1 + G.tuSevenMulti *\r\n        (G.totalAcceleratorBoost / 100)\r\n        * (1 + CalcECC('transcend', player.challengecompletions[2]) / 20),\r\n    1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7])\r\n  )\r\n  G.acceleratorPower += 1 / 200 * Math.floor(CalcECC('transcend', player.challengecompletions[2]) / 2) * 100 / 100\r\n  for (let i = 1; i <= 5; i++) {\r\n    if (player.achievements[7 * i - 4] > 0) {\r\n      G.acceleratorPower += 0.0005 * i\r\n    }\r\n  }\r\n\r\n  //No MA and Sadistic will always overwrite Transcend challenges starting in v2.0.0\r\n  if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\r\n    if (player.currentChallenge.transcension === 1) {\r\n      G.acceleratorPower *= 25 / (50 + player.challengecompletions[1])\r\n      G.acceleratorPower += 0.55\r\n      G.acceleratorPower = Math.max(1, G.acceleratorPower)\r\n    }\r\n    if (player.currentChallenge.transcension === 2) {\r\n      G.acceleratorPower = 1\r\n    }\r\n    if (player.currentChallenge.transcension === 3) {\r\n      G.acceleratorPower =\r\n                1.05 +\r\n                2 * G.tuSevenMulti *\r\n                (G.totalAcceleratorBoost / 300) *\r\n                (1 + CalcECC('transcend', player.challengecompletions[2]) / 20\r\n                )\r\n    }\r\n  }\r\n  G.acceleratorPower = Math.min(1e300, G.acceleratorPower)\r\n  if (player.currentChallenge.reincarnation === 7) {\r\n    G.acceleratorPower = 1\r\n  }\r\n  if (player.currentChallenge.reincarnation === 10) {\r\n    G.acceleratorPower = 1\r\n  }\r\n\r\n  if (player.currentChallenge.transcension !== 1) {\r\n    G.acceleratorEffect = Decimal.pow(G.acceleratorPower, G.totalAccelerator)\r\n  }\r\n\r\n  if (player.currentChallenge.transcension === 1) {\r\n    G.acceleratorEffect = Decimal.pow(G.acceleratorPower, G.totalAccelerator + G.totalMultiplier)\r\n  }\r\n  G.acceleratorEffectDisplay = new Decimal(G.acceleratorPower * 100 - 100)\r\n  if (player.currentChallenge.reincarnation === 10) {\r\n    G.acceleratorEffect = new Decimal(1)\r\n  }\r\n  G.generatorPower = new Decimal(1)\r\n  if (player.upgrades[11] > 0.5 && player.currentChallenge.reincarnation !== 7) {\r\n    G.generatorPower = Decimal.pow(1.02, G.totalAccelerator)\r\n  }\r\n\r\n}\r\n\r\nexport const updateAllMultiplier = (): void => {\r\n  let a = 0\r\n\r\n  if (player.upgrades[7] > 0) {\r\n    a += Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10)))\r\n  }\r\n  if (player.upgrades[9] > 0) {\r\n    a += Math.floor(player.acceleratorBought / 10)\r\n  }\r\n  if (player.upgrades[21] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[22] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[23] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[24] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[25] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[28] > 0) {\r\n    a += Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))\r\n  }\r\n  if (player.upgrades[30] > 0) {\r\n    a += Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)))\r\n  }\r\n  if (player.upgrades[33] > 0) {\r\n    a += G.totalAcceleratorBoost\r\n  }\r\n  if (player.upgrades[49] > 0) {\r\n    a += Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)))\r\n  }\r\n  if (player.upgrades[68] > 0) {\r\n    a += Math.min(2500, Math.floor(Decimal.log(G.taxdivisor, 10) * 1 / 1000))\r\n  }\r\n  if (player.challengecompletions[1] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.achievements[6] > 0.5) {\r\n    a += Math.floor(player.firstOwnedCoin / 1000)\r\n  }\r\n  if (player.achievements[13] > 0.5) {\r\n    a += Math.floor(player.secondOwnedCoin / 1000)\r\n  }\r\n  if (player.achievements[20] > 0.5) {\r\n    a += Math.floor(player.thirdOwnedCoin / 1000)\r\n  }\r\n  if (player.achievements[27] > 0.5) {\r\n    a += Math.floor(player.fourthOwnedCoin / 1000)\r\n  }\r\n  if (player.achievements[34] > 0.5) {\r\n    a += Math.floor(player.fifthOwnedCoin / 1000)\r\n  }\r\n  if (player.achievements[57] > 0.5) {\r\n    a += 1\r\n  }\r\n  if (player.achievements[58] > 0.5) {\r\n    a += 1\r\n  }\r\n  if (player.achievements[59] > 0.5) {\r\n    a += 1\r\n  }\r\n  a += 20 * player.researches[94] * Math.floor(\r\n    (G.rune1level + G.rune2level + G.rune3level + G.rune4level + G.rune5level) / 8\r\n  )\r\n\r\n  G.freeUpgradeMultiplier = Math.min(1e100, a)\r\n\r\n  if (player.achievements[38] > 0.5) {\r\n    a += Math.floor(Math.floor(\r\n      G.rune2level / 10 * G.effectiveLevelMult) *\r\n            Math.floor(1 + G.rune2level / 10 * G.effectiveLevelMult) / 2\r\n    ) * 100 / 100\r\n  }\r\n\r\n  a *= (1 + player.achievements[57] / 100)\r\n  a *= (1 + player.achievements[58] / 100)\r\n  a *= (1 + player.achievements[59] / 100)\r\n  a *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25])\r\n  a *= (1 + 0.03 * player.upgrades[34] + 0.02 * player.upgrades[35])\r\n  a *= (1 + 1 / 5 * player.researches[2] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\r\n  a *= (1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15])\r\n  a *= (1 + G.rune2level / 400 * G.effectiveLevelMult)\r\n  a *= (1 + 1 / 20 * player.researches[87])\r\n  a *= (1 + 1 / 100 * player.researches[128])\r\n  a *= (1 + 0.8 / 100 * player.researches[143])\r\n  a *= (1 + 0.6 / 100 * player.researches[158])\r\n  a *= (1 + 0.4 / 100 * player.researches[173])\r\n  a *= (1 + 0.2 / 100 * player.researches[188])\r\n  a *= (1 + 0.01 / 100 * player.researches[200])\r\n  a *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\r\n  a *= calculateSigmoidExponential(40, (player.antUpgrades[4]! + G.bonusant5) / 1000 * 40 / 39)\r\n  a *= G.cubeBonusMultiplier[2]\r\n  if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\r\n    a *= 1.25\r\n  }\r\n  a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G.viscosityPower[player.usedCorruptions[2]]))\r\n  a += 1000 * hepteractEffective('multiplier')\r\n  a *= G.challenge15Rewards.multiplier\r\n  a *= (1 + 3/10000 * hepteractEffective('multiplier'))\r\n  a = Math.floor(Math.min(1e100, a))\r\n\r\n  if (player.usedCorruptions[2] >= 15) {\r\n    a = Math.pow(a, 0.2)\r\n  }\r\n  if (player.usedCorruptions[2] >= 16) {\r\n    a = 1\r\n  }\r\n\r\n  G.freeMultiplier = a\r\n  G.totalMultiplier = G.freeMultiplier + player.multiplierBought\r\n\r\n  G.challengeOneLog = 3\r\n\r\n  let b = 0\r\n  let c = 0\r\n  b += Decimal.log(player.transcendShards.add(1), 3)\r\n  b *= (1 + 11 * player.researches[33] / 100)\r\n  b *= (1 + 11 * player.researches[34] / 100)\r\n  b *= (1 + 11 * player.researches[35] / 100)\r\n  b *= (1 + player.researches[89] / 5)\r\n  b *= (1 + 10 * G.effectiveRuneBlessingPower[2])\r\n\r\n  c += Math.floor((0.1 * b * CalcECC('transcend', player.challengecompletions[1])))\r\n  c += (CalcECC('transcend', player.challengecompletions[1]) * 10)\r\n  G.freeMultiplierBoost = c\r\n  G.totalMultiplierBoost = Math.pow(Math.floor(b) + c, 1 + CalcECC('reincarnation', player.challengecompletions[7]) * 0.04)\r\n\r\n  let c7 = 1\r\n  if (player.challengecompletions[7] > 0.5) {\r\n    c7 = 1.25\r\n  }\r\n\r\n  G.multiplierPower = 2 + 0.005 * G.totalMultiplierBoost * c7\r\n\r\n  //No MA and Sadistic will always override Transcend Challenges starting in v2.0.0\r\n  if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\r\n    if (player.currentChallenge.transcension === 1) {\r\n      G.multiplierPower = 1\r\n    }\r\n    if (player.currentChallenge.transcension === 2) {\r\n      G.multiplierPower = (1.25 + 0.0012 * (b + c) * c7)\r\n    }\r\n  }\r\n  G.multiplierPower = Math.min(1e300, G.multiplierPower)\r\n\r\n  if (player.currentChallenge.reincarnation === 7) {\r\n    G.multiplierPower = 1\r\n  }\r\n  if (player.currentChallenge.reincarnation === 10) {\r\n    G.multiplierPower = 1\r\n  }\r\n\r\n  G.multiplierEffect = Decimal.pow(G.multiplierPower, G.totalMultiplier)\r\n}\r\n\r\nexport const multipliers = (): void => {\r\n  let s = new Decimal(1)\r\n  let c = new Decimal(1)\r\n  let crystalExponent = 1 / 3\r\n  crystalExponent += Math.min(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[3], 0.05 * player.crystalUpgrades[3])\r\n  crystalExponent += 0.04 * CalcECC('transcend', player.challengecompletions[3])\r\n  crystalExponent += 0.08 * player.researches[28]\r\n  crystalExponent += 0.08 * player.researches[29]\r\n  crystalExponent += 0.04 * player.researches[30]\r\n  crystalExponent += 8 * player.cubeUpgrades[17]\r\n  G.prestigeMultiplier = Decimal.pow(player.prestigeShards, crystalExponent).add(1)\r\n\r\n  let c7 = 1\r\n  if (player.currentChallenge.reincarnation === 7) {\r\n    c7 = 0.05\r\n  }\r\n  if (player.currentChallenge.reincarnation === 8) {\r\n    c7 = 0\r\n  }\r\n\r\n  G.buildingPower =\r\n        1 + (1 - Math.pow(2, -1 / 160)) * c7 * Decimal.log(\r\n          player.reincarnationShards.add(1), 10) *\r\n            (1 + 1 / 20 * player.researches[36] +\r\n            1 / 40 * player.researches[37] + 1 / 40 *\r\n            player.researches[38]) +\r\n            (c7 + 0.2) * 0.25 / 1.2 *\r\n            CalcECC('reincarnation', player.challengecompletions[8]\r\n            )\r\n\r\n  G.buildingPower = Math.pow(G.buildingPower, 1 + player.cubeUpgrades[12] * 0.09)\r\n  G.buildingPower = Math.pow(G.buildingPower, 1 + player.cubeUpgrades[36] * 0.05)\r\n  G.reincarnationMultiplier = Decimal.pow(G.buildingPower, G.totalCoinOwned)\r\n\r\n  G.antMultiplier = Decimal.pow(Decimal.max(1, player.antPoints), calculateCrumbToCoinExp())\r\n\r\n  s = s.times(G.multiplierEffect)\r\n  s = s.times(G.acceleratorEffect)\r\n  s = s.times(G.prestigeMultiplier)\r\n  s = s.times(G.reincarnationMultiplier)\r\n  s = s.times(G.antMultiplier)\r\n  // PLAT - check\r\n  const first6CoinUp = new Decimal(G.totalCoinOwned + 1).times(Decimal.min(1e30, Decimal.pow(1.008, G.totalCoinOwned)))\r\n\r\n  if (player.highestSingularityCount > 0) {\r\n    s = s.times(Math.pow(player.goldenQuarks + 1, 1.5) * Math.pow(player.highestSingularityCount + 1, 2))\r\n  }\r\n  if (player.upgrades[6] > 0.5) {\r\n    s = s.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[12] > 0.5) {\r\n    s = s.times(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)))\r\n  }\r\n  if (player.upgrades[20] > 0.5) {\r\n    // PLAT - check\r\n    s = s.times(Decimal.pow(G.totalCoinOwned / 4 + 1, 10))\r\n  }\r\n  if (player.upgrades[41] > 0.5) {\r\n    s = s.times(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2)))\r\n  }\r\n  if (player.upgrades[43] > 0.5) {\r\n    s = s.times(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)))\r\n  }\r\n  if (player.upgrades[48] > 0.5) {\r\n    s = s.times(Decimal.pow((G.totalMultiplier * G.totalAccelerator / 1000 + 1), 8))\r\n  }\r\n  if (player.currentChallenge.reincarnation === 6) {\r\n    s = s.dividedBy(1e250)\r\n  }\r\n  if (player.currentChallenge.reincarnation === 7) {\r\n    s = s.dividedBy('1e1250')\r\n  }\r\n  if (player.currentChallenge.reincarnation === 9) {\r\n    s = s.dividedBy('1e2000000')\r\n  }\r\n  if (player.currentChallenge.reincarnation === 10) {\r\n    s = s.dividedBy('1e12500000')\r\n  }\r\n  c = Decimal.pow(s, 1 + 0.001 * player.researches[17])\r\n  let lol = Decimal.pow(c, 1 + 0.025 * player.upgrades[123])\r\n  if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[5] > 0) {\r\n    lol = Decimal.pow(lol, 1.1)\r\n  }\r\n  if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[14] > 0) {\r\n    lol = Decimal.pow(lol, 1 + 1 / 20 * player.usedCorruptions[9] * Decimal.log(player.coins.add(1), 10) / (1e7 + Decimal.log(player.coins.add(1), 10)))\r\n  }\r\n  if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[15] > 0) {\r\n    lol = Decimal.pow(lol, 1.1)\r\n  }\r\n  lol = Decimal.pow(lol, G.challenge15Rewards.coinExponent)\r\n  G.globalCoinMultiplier = lol\r\n  G.globalCoinMultiplier = Decimal.pow(G.globalCoinMultiplier, G.financialcollapsePower[player.usedCorruptions[9]])\r\n\r\n  G.coinOneMulti = new Decimal(1)\r\n  if (player.upgrades[1] > 0.5) {\r\n    G.coinOneMulti = G.coinOneMulti.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[10] > 0.5) {\r\n    G.coinOneMulti = G.coinOneMulti.times(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)))\r\n  }\r\n  if (player.upgrades[56] > 0.5) {\r\n    G.coinOneMulti = G.coinOneMulti.times('1e5000')\r\n  }\r\n\r\n  G.coinTwoMulti = new Decimal(1)\r\n  if (player.upgrades[2] > 0.5) {\r\n    G.coinTwoMulti = G.coinTwoMulti.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[13] > 0.5) {\r\n    G.coinTwoMulti = G.coinTwoMulti.times(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)))\r\n  }\r\n  if (player.upgrades[19] > 0.5) {\r\n    G.coinTwoMulti = G.coinTwoMulti.times(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1)))\r\n  }\r\n  if (player.upgrades[57] > 0.5) {\r\n    G.coinTwoMulti = G.coinTwoMulti.times('1e7500')\r\n  }\r\n\r\n  G.coinThreeMulti = new Decimal(1)\r\n  if (player.upgrades[3] > 0.5) {\r\n    G.coinThreeMulti = G.coinThreeMulti.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[18] > 0.5) {\r\n    G.coinThreeMulti = G.coinThreeMulti.times(Decimal.min(1e125, player.transcendShards.add(1)))\r\n  }\r\n  if (player.upgrades[58] > 0.5) {\r\n    G.coinThreeMulti = G.coinThreeMulti.times('1e15000')\r\n  }\r\n\r\n  G.coinFourMulti = new Decimal(1)\r\n  if (player.upgrades[4] > 0.5) {\r\n    G.coinFourMulti = G.coinFourMulti.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[17] > 0.5) {\r\n    G.coinFourMulti = G.coinFourMulti.times(1e100)\r\n  }\r\n  if (player.upgrades[59] > 0.5) {\r\n    G.coinFourMulti = G.coinFourMulti.times('1e25000')\r\n  }\r\n\r\n  G.coinFiveMulti = new Decimal(1)\r\n  if (player.upgrades[5] > 0.5) {\r\n    G.coinFiveMulti = G.coinFiveMulti.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[60] > 0.5) {\r\n    G.coinFiveMulti = G.coinFiveMulti.times('1e35000')\r\n  }\r\n\r\n  G.globalCrystalMultiplier = new Decimal(1)\r\n  if (player.achievements[36] > 0.5) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(2)\r\n  }\r\n  if (player.achievements[37] > 0.5 && player.prestigePoints.gte(10)) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.log(player.prestigePoints.add(1), 10))\r\n  }\r\n  if (player.achievements[44] > 0.5) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier\r\n      .times(Decimal.pow(G.rune3level / 2 * G.effectiveLevelMult, 2)\r\n        .times(Decimal.pow(2, G.rune3level * G.effectiveLevelMult / 2 - 8))\r\n        .add(1))\r\n  }\r\n  if (player.upgrades[36] > 0.5) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.min('1e5000', Decimal.pow(player.prestigePoints, 1 / 500)))\r\n  }\r\n  if (player.upgrades[63] > 0.5) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.min('1e6000', Decimal.pow(player.reincarnationPoints.add(1), 6)))\r\n  }\r\n  if (player.researches[39] > 0.5) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(G.reincarnationMultiplier, 1 / 50))\r\n  }\r\n\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.min(Decimal.pow(10, 50 + 2 * player.crystalUpgrades[0]), Decimal.pow(1.05, player.achievementPoints * player.crystalUpgrades[0])))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.min(Decimal.pow(10, 100 + 5 * player.crystalUpgrades[1]), Decimal.pow(Decimal.log(player.coins.add(1), 10), player.crystalUpgrades[1] / 3)))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(1 + Math.min(0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4), 0.001 * player.crystalUpgrades[2]), player.firstOwnedDiamonds + player.secondOwnedDiamonds + player.thirdOwnedDiamonds + player.fourthOwnedDiamonds + player.fifthOwnedDiamonds))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(1.01, (player.challengecompletions[1] + player.challengecompletions[2] + player.challengecompletions[3] + player.challengecompletions[4] + player.challengecompletions[5]) * player.crystalUpgrades[4]))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(10, CalcECC('transcend', player.challengecompletions[5])))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(1e4, player.researches[5] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(2.5, player.researches[26]))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(2.5, player.researches[27]))\r\n\r\n  G.globalMythosMultiplier = new Decimal(1)\r\n\r\n  if (player.upgrades[37] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2))\r\n  }\r\n  if (player.upgrades[42] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)))\r\n  }\r\n  if (player.upgrades[47] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(1.05, player.achievementPoints)).times(player.achievementPoints + 1)\r\n  }\r\n  if (player.upgrades[51] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(G.totalAcceleratorBoost, 2))\r\n  }\r\n  if (player.upgrades[52] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(G.globalMythosMultiplier, 0.025))\r\n  }\r\n  if (player.upgrades[64] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(player.reincarnationPoints.add(1), 2))\r\n  }\r\n  if (player.researches[40] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(G.reincarnationMultiplier, 1 / 250))\r\n  }\r\n  G.grandmasterMultiplier = new Decimal(1)\r\n  G.totalMythosOwned = player.firstOwnedMythos + player.secondOwnedMythos + player.thirdOwnedMythos + player.fourthOwnedMythos + player.fifthOwnedMythos\r\n\r\n  G.mythosBuildingPower = 1 + (CalcECC('transcend', player.challengecompletions[3]) / 200)\r\n  G.challengeThreeMultiplier = Decimal.pow(G.mythosBuildingPower, G.totalMythosOwned)\r\n\r\n  G.grandmasterMultiplier = G.grandmasterMultiplier.times(G.challengeThreeMultiplier)\r\n\r\n  G.mythosupgrade13 = new Decimal(1)\r\n  G.mythosupgrade14 = new Decimal(1)\r\n  G.mythosupgrade15 = new Decimal(1)\r\n  if (player.upgrades[53] === 1) {\r\n    G.mythosupgrade13 = G.mythosupgrade13.times(Decimal.min('1e1250', Decimal.pow(G.acceleratorEffect, 1 / 125)))\r\n  }\r\n  if (player.upgrades[54] === 1) {\r\n    G.mythosupgrade14 = G.mythosupgrade14.times(Decimal.min('1e2000', Decimal.pow(G.multiplierEffect, 1 / 180)))\r\n  }\r\n  if (player.upgrades[55] === 1) {\r\n    G.mythosupgrade15 = G.mythosupgrade15.times(Decimal.pow('1e1000', Math.min(1000, G.buildingPower - 1)))\r\n  }\r\n\r\n  G.globalConstantMult = new Decimal('1')\r\n  G.globalConstantMult = G.globalConstantMult.times(Decimal.pow(1.05 + 0.01 * player.achievements[270] + 0.001 * player.platonicUpgrades[18], player.constantUpgrades[1]))\r\n  G.globalConstantMult = G.globalConstantMult.times(Decimal.pow(1 + 0.001 * Math.min(100 + 10 * player.achievements[270] + 10 * player.shopUpgrades.constantEX + 1000 * (G.challenge15Rewards.exponent - 1) + 3 * player.platonicUpgrades[18], player.constantUpgrades[2]), ascendBuildingDR()))\r\n  G.globalConstantMult = G.globalConstantMult.times(1 + 2 / 100 * player.researches[139])\r\n  G.globalConstantMult = G.globalConstantMult.times(1 + 3 / 100 * player.researches[154])\r\n  G.globalConstantMult = G.globalConstantMult.times(1 + 4 / 100 * player.researches[169])\r\n  G.globalConstantMult = G.globalConstantMult.times(1 + 5 / 100 * player.researches[184])\r\n  G.globalConstantMult = G.globalConstantMult.times(1 + 10 / 100 * player.researches[199])\r\n  G.globalConstantMult = G.globalConstantMult.times(G.challenge15Rewards.constantBonus)\r\n  if (player.platonicUpgrades[5] > 0) {\r\n    G.globalConstantMult = G.globalConstantMult.times(2)\r\n  }\r\n  if (player.platonicUpgrades[10] > 0) {\r\n    G.globalConstantMult = G.globalConstantMult.times(10)\r\n  }\r\n  if (player.platonicUpgrades[15] > 0) {\r\n    G.globalConstantMult = G.globalConstantMult.times(1e250)\r\n  }\r\n  G.globalConstantMult = G.globalConstantMult.times(Decimal.pow(player.overfluxPowder + 1, 10 * player.platonicUpgrades[16]))\r\n}\r\n\r\nexport const resourceGain = (dt: number): void => {\r\n\r\n  calculateTotalCoinOwned()\r\n  calculateTotalAcceleratorBoost()\r\n\r\n  updateAllTick()\r\n  updateAllMultiplier()\r\n  multipliers()\r\n  calculatetax()\r\n  if (G.produceTotal.gte(0.001)) {\r\n    const addcoin = (Decimal.min(G.produceTotal.dividedBy(G.taxdivisor), Decimal.pow(10, G.maxexponent - Decimal.log(G.taxdivisorcheck, 10)))).times(dt / 0.025)\r\n    player.coins = player.coins.add(addcoin)\r\n    player.coinsThisPrestige = player.coinsThisPrestige.add(addcoin)\r\n    player.coinsThisTranscension = player.coinsThisTranscension.add(addcoin)\r\n    player.coinsThisReincarnation = player.coinsThisReincarnation.add(addcoin)\r\n    player.coinsTotal = player.coinsTotal.add(addcoin)\r\n  }\r\n\r\n  resetCurrency()\r\n  if (player.upgrades[93] === 1 && player.coinsThisPrestige.gte(1e16)) {\r\n    player.prestigePoints = player.prestigePoints.add(Decimal.floor(G.prestigePointGain.dividedBy(4000).times(dt / 0.025)))\r\n  }\r\n  if (player.upgrades[100] === 1 && player.coinsThisTranscension.gte(1e100)) {\r\n    player.transcendPoints = player.transcendPoints.add(Decimal.floor(G.transcendPointGain.dividedBy(4000).times(dt / 0.025)))\r\n  }\r\n  if (player.cubeUpgrades[28] > 0 && player.transcendShards.gte(1e300)) {\r\n    player.reincarnationPoints = player.reincarnationPoints.add(Decimal.floor(G.reincarnationPointGain.dividedBy(4000).times(dt / 0.025)))\r\n  }\r\n  G.produceFirstDiamonds = player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).times(player.firstProduceDiamonds).times(G.globalCrystalMultiplier)\r\n  G.produceSecondDiamonds = player.secondGeneratedDiamonds.add(player.secondOwnedDiamonds).times(player.secondProduceDiamonds).times(G.globalCrystalMultiplier)\r\n  G.produceThirdDiamonds = player.thirdGeneratedDiamonds.add(player.thirdOwnedDiamonds).times(player.thirdProduceDiamonds).times(G.globalCrystalMultiplier)\r\n  G.produceFourthDiamonds = player.fourthGeneratedDiamonds.add(player.fourthOwnedDiamonds).times(player.fourthProduceDiamonds).times(G.globalCrystalMultiplier)\r\n  G.produceFifthDiamonds = player.fifthGeneratedDiamonds.add(player.fifthOwnedDiamonds).times(player.fifthProduceDiamonds).times(G.globalCrystalMultiplier)\r\n\r\n  player.fourthGeneratedDiamonds = player.fourthGeneratedDiamonds.add(G.produceFifthDiamonds.times(dt / 0.025))\r\n  player.thirdGeneratedDiamonds = player.thirdGeneratedDiamonds.add(G.produceFourthDiamonds.times(dt / 0.025))\r\n  player.secondGeneratedDiamonds = player.secondGeneratedDiamonds.add(G.produceThirdDiamonds.times(dt / 0.025))\r\n  player.firstGeneratedDiamonds = player.firstGeneratedDiamonds.add(G.produceSecondDiamonds.times(dt / 0.025))\r\n  G.produceDiamonds = G.produceFirstDiamonds\r\n\r\n  if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\r\n    player.prestigeShards = player.prestigeShards.add(G.produceDiamonds.times(dt / 0.025))\r\n  }\r\n\r\n  G.produceFifthMythos = player.fifthGeneratedMythos.add(player.fifthOwnedMythos).times(player.fifthProduceMythos).times(G.globalMythosMultiplier)\r\n    .times(G.grandmasterMultiplier)\r\n    .times(G.mythosupgrade15)\r\n  G.produceFourthMythos = player.fourthGeneratedMythos.add(player.fourthOwnedMythos).times(player.fourthProduceMythos).times(G.globalMythosMultiplier)\r\n  G.produceThirdMythos = player.thirdGeneratedMythos.add(player.thirdOwnedMythos).times(player.thirdProduceMythos).times(G.globalMythosMultiplier)\r\n    .times(G.mythosupgrade14)\r\n  G.produceSecondMythos = player.secondGeneratedMythos.add(player.secondOwnedMythos).times(player.secondProduceMythos).times(G.globalMythosMultiplier)\r\n  G.produceFirstMythos = player.firstGeneratedMythos.add(player.firstOwnedMythos).times(player.firstProduceMythos).times(G.globalMythosMultiplier)\r\n    .times(G.mythosupgrade13)\r\n  player.fourthGeneratedMythos = player.fourthGeneratedMythos.add(G.produceFifthMythos.times(dt / 0.025))\r\n  player.thirdGeneratedMythos = player.thirdGeneratedMythos.add(G.produceFourthMythos.times(dt / 0.025))\r\n  player.secondGeneratedMythos = player.secondGeneratedMythos.add(G.produceThirdMythos.times(dt / 0.025))\r\n  player.firstGeneratedMythos = player.firstGeneratedMythos.add(G.produceSecondMythos.times(dt / 0.025))\r\n\r\n\r\n  G.produceMythos = new Decimal('0')\r\n  G.produceMythos = (player.firstGeneratedMythos.add(player.firstOwnedMythos)).times(player.firstProduceMythos).times(G.globalMythosMultiplier)\r\n    .times(G.mythosupgrade13)\r\n  G.producePerSecondMythos = G.produceMythos.times(40)\r\n\r\n  let pm = new Decimal('1')\r\n  if (player.upgrades[67] > 0.5) {\r\n    pm = pm.times(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles))\r\n  }\r\n  G.produceFifthParticles = player.fifthGeneratedParticles.add(player.fifthOwnedParticles).times(player.fifthProduceParticles)\r\n  G.produceFourthParticles = player.fourthGeneratedParticles.add(player.fourthOwnedParticles).times(player.fourthProduceParticles)\r\n  G.produceThirdParticles = player.thirdGeneratedParticles.add(player.thirdOwnedParticles).times(player.thirdProduceParticles)\r\n  G.produceSecondParticles = player.secondGeneratedParticles.add(player.secondOwnedParticles).times(player.secondProduceParticles)\r\n  G.produceFirstParticles = player.firstGeneratedParticles.add(player.firstOwnedParticles).times(player.firstProduceParticles).times(pm)\r\n  player.fourthGeneratedParticles = player.fourthGeneratedParticles.add(G.produceFifthParticles.times(dt / 0.025))\r\n  player.thirdGeneratedParticles = player.thirdGeneratedParticles.add(G.produceFourthParticles.times(dt / 0.025))\r\n  player.secondGeneratedParticles = player.secondGeneratedParticles.add(G.produceThirdParticles.times(dt / 0.025))\r\n  player.firstGeneratedParticles = player.firstGeneratedParticles.add(G.produceSecondParticles.times(dt / 0.025))\r\n\r\n  G.produceParticles = new Decimal('0')\r\n  G.produceParticles = (player.firstGeneratedParticles.add(player.firstOwnedParticles)).times(player.firstProduceParticles).times(pm)\r\n  G.producePerSecondParticles = G.produceParticles.times(40)\r\n\r\n  if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\r\n    player.transcendShards = player.transcendShards.add(G.produceMythos.times(dt / 0.025))\r\n  }\r\n  if (player.currentChallenge.reincarnation !== 10) {\r\n    player.reincarnationShards = player.reincarnationShards.add(G.produceParticles.times(dt / 0.025))\r\n  }\r\n\r\n  createAnts(dt)\r\n  for (let i = 1; i <= 5; i++) {\r\n    G.ascendBuildingProduction[G.ordinals[5 - i as ZeroToFour]] = (player[`ascendBuilding${6 - i as OneToFive}` as const].generated).add(player[`ascendBuilding${6 - i as OneToFive}` as const].owned).times(player[`ascendBuilding${i as OneToFive}` as const].multiplier).times(G.globalConstantMult)\r\n\r\n    if (i !== 5) {\r\n      const fiveMinusI = 5 - i as 1|2|3|4\r\n      player[`ascendBuilding${fiveMinusI}` as const].generated = player[`ascendBuilding${fiveMinusI}` as const].generated\r\n        .add(G.ascendBuildingProduction[G.ordinals[fiveMinusI]].times(dt))\r\n    }\r\n  }\r\n\r\n  player.ascendShards = player.ascendShards.add(G.ascendBuildingProduction.first.times(dt))\r\n\r\n  if (player.ascensionCount > 0) {\r\n    ascensionAchievementCheck(2)\r\n  }\r\n\r\n  if (player.researches[71] > 0.5 && player.challengecompletions[1] < (Math.min(player.highestchallengecompletions[1], 25 + 5 * player.researches[66] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.25 * G.challengeBaseRequirements[0] * Math.pow(1 + player.challengecompletions[1], 2)))) {\r\n    player.challengecompletions[1] += 1\r\n    challengeachievementcheck(1, true)\r\n    updateChallengeLevel(1)\r\n  }\r\n  if (player.researches[72] > 0.5 && player.challengecompletions[2] < (Math.min(player.highestchallengecompletions[2], 25 + 5 * player.researches[67] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.6 * G.challengeBaseRequirements[1] * Math.pow(1 + player.challengecompletions[2], 2)))) {\r\n    player.challengecompletions[2] += 1\r\n    challengeachievementcheck(2, true)\r\n    updateChallengeLevel(2)\r\n  }\r\n  if (player.researches[73] > 0.5 && player.challengecompletions[3] < (Math.min(player.highestchallengecompletions[3], 25 + 5 * player.researches[68] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.7 * G.challengeBaseRequirements[2] * Math.pow(1 + player.challengecompletions[3], 2)))) {\r\n    player.challengecompletions[3] += 1\r\n    challengeachievementcheck(3, true)\r\n    updateChallengeLevel(3)\r\n  }\r\n  if (player.researches[74] > 0.5 && player.challengecompletions[4] < (Math.min(player.highestchallengecompletions[4], 25 + 5 * player.researches[69] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.45 * G.challengeBaseRequirements[3] * Math.pow(1 + player.challengecompletions[4], 2)))) {\r\n    player.challengecompletions[4] += 1\r\n    challengeachievementcheck(4, true)\r\n    updateChallengeLevel(4)\r\n  }\r\n  if (player.researches[75] > 0.5 && player.challengecompletions[5] < (Math.min(player.highestchallengecompletions[5], 25 + 5 * player.researches[70] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 2 * G.challengeBaseRequirements[4] * Math.pow(1 + player.challengecompletions[5], 2)))) {\r\n    player.challengecompletions[5] += 1\r\n    challengeachievementcheck(5, true)\r\n    updateChallengeLevel(5)\r\n  }\r\n\r\n  const chal = player.currentChallenge.transcension\r\n  const reinchal = player.currentChallenge.reincarnation\r\n  const ascendchal = player.currentChallenge.ascension\r\n  if (chal !== 0) {\r\n    if (player.coinsThisTranscension.gte(challengeRequirement(chal, player.challengecompletions[chal], chal))) {\r\n      void resetCheck('transcensionChallenge', false)\r\n      G.autoChallengeTimerIncrement = 0\r\n    }\r\n  }\r\n  if (reinchal < 9 && reinchal !== 0) {\r\n    if (player.transcendShards.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\r\n      void resetCheck('reincarnationChallenge', false)\r\n      G.autoChallengeTimerIncrement = 0\r\n    }\r\n  }\r\n  if (reinchal >= 9) {\r\n    if (player.coins.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\r\n      void resetCheck('reincarnationChallenge', false)\r\n      G.autoChallengeTimerIncrement = 0\r\n    }\r\n  }\r\n  if (ascendchal !== 0 && ascendchal < 15) {\r\n    if (player.challengecompletions[10] >= (challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal) as number)) {\r\n      void resetCheck('ascensionChallenge', false)\r\n      challengeachievementcheck(ascendchal, true)\r\n    }\r\n  }\r\n  if (ascendchal === 15) {\r\n    if (player.coins.gte(challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal))) {\r\n      void resetCheck('ascensionChallenge', false)\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAntMultipliers = (): void => {\r\n  //Update 2.5.0: Updated to have a base of 10 instead of 1x\r\n  G.globalAntMult = new Decimal(10)\r\n  //Update 2.9.0: Updated to give a 5x multiplier no matter what\r\n  G.globalAntMult = G.globalAntMult.times(5)\r\n  G.globalAntMult = G.globalAntMult.times(1 + 1 / 2500 * Math.pow(G.rune5level * G.effectiveLevelMult * (1 + player.researches[84] / 200 * (1 + 1 * G.effectiveRuneSpiritPower[5] * calculateCorruptionPoints() / 400)), 2))\r\n  if (player.upgrades[76] === 1) {\r\n    G.globalAntMult = G.globalAntMult.times(5)\r\n  }\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1 + player.upgrades[77] / 250 + player.researches[96] / 5000 + player.cubeUpgrades[65] / 250, player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts))\r\n  G.globalAntMult = G.globalAntMult.times(1 + player.upgrades[78] * 0.005 * Math.pow(Math.log10(player.maxofferings + 1), 2))\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1.11 + player.researches[101] / 1000 + player.researches[162] / 10000, player.antUpgrades[0]! + G.bonusant1))\r\n  G.globalAntMult = G.globalAntMult.times(antSacrificePointsToMultiplier(player.antSacrificePoints))\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(Math.max(1, player.researchPoints), G.effectiveRuneBlessingPower[5]))\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1 + G.runeSum / 100, G.talisman6Power))\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])))\r\n  G.globalAntMult = G.globalAntMult.times(G.cubeBonusMultiplier[6])\r\n  if (player.achievements[169] === 1) {\r\n    G.globalAntMult = G.globalAntMult.times(Decimal.log(player.antPoints.add(10), 10))\r\n  }\r\n  if (player.achievements[171] === 1) {\r\n    G.globalAntMult = G.globalAntMult.times(1.16666)\r\n  }\r\n  if (player.achievements[172] === 1) {\r\n    G.globalAntMult = G.globalAntMult.times(1 + 2 * (1 - Math.pow(2, -Math.min(1, player.reincarnationcounter / 7200))))\r\n  }\r\n  if (player.upgrades[39] === 1) {\r\n    G.globalAntMult = G.globalAntMult.times(1.60)\r\n  }\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]))\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])))\r\n  if (player.researches[147] > 0) {\r\n    G.globalAntMult = G.globalAntMult.times(Decimal.log(player.antPoints.add(10), 10))\r\n  }\r\n  if (player.researches[177] > 0) {\r\n    G.globalAntMult = G.globalAntMult.times(Decimal.pow(Decimal.log(player.antPoints.add(10), 10), player.researches[177]))\r\n  }\r\n\r\n  if (player.currentChallenge.ascension === 12) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.5)\r\n  }\r\n  if (player.currentChallenge.ascension === 13) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.23)\r\n  }\r\n  if (player.currentChallenge.ascension === 14) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.2)\r\n  }\r\n\r\n  if (player.currentChallenge.ascension !== 15) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 1 - 0.9 / 90 * Math.min(99, sumContents(player.usedCorruptions)))\r\n  } else { // C15 used to have 9 corruptions set to 11, which above would provide a power of 0.01. Now it's hardcoded this way.\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.01)\r\n  }\r\n\r\n  G.globalAntMult = Decimal.pow(G.globalAntMult, G.extinctionMultiplier[player.usedCorruptions[7]])\r\n  G.globalAntMult = G.globalAntMult.times(G.challenge15Rewards.antSpeed)\r\n  //V2.5.0: Moved ant shop upgrade as 'uncorruptable'\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1.2, player.shopUpgrades.antSpeed))\r\n\r\n\r\n  if (player.platonicUpgrades[12] > 0) {\r\n    G.globalAntMult = G.globalAntMult.times(Decimal.pow(1 + 1 / 100 * player.platonicUpgrades[12], sumContents(player.highestchallengecompletions)))\r\n  }\r\n  if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[10] > 0) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 1.25)\r\n  }\r\n  if (player.achievements[274] > 0) {\r\n    G.globalAntMult = G.globalAntMult.times(4.44)\r\n  }\r\n\r\n  if (player.usedCorruptions[7] >= 14) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.02)\r\n  }\r\n  if (player.usedCorruptions[7] >= 15) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.02)\r\n  }\r\n  if (player.usedCorruptions[7] >= 16) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.02)\r\n  }\r\n\r\n  if (player.octeractUpgrades.octeractStarter.getEffect().bonus) {\r\n    G.globalAntMult = G.globalAntMult.times(100000)\r\n  }\r\n\r\n  if (player.highestSingularityCount >= 30) {\r\n    G.globalAntMult = G.globalAntMult.times(1000)\r\n  }\r\n\r\n  if (player.highestSingularityCount >= 70) {\r\n    G.globalAntMult = G.globalAntMult.times(1000)\r\n  }\r\n\r\n  if (player.highestSingularityCount >= 100) {\r\n    G.globalAntMult = G.globalAntMult.times(1e6)\r\n  }\r\n}\r\n\r\nexport const createAnts = (dt: number): void => {\r\n  updateAntMultipliers()\r\n  G.antEightProduce = player.eighthGeneratedAnts.add(player.eighthOwnedAnts).times(player.eighthProduceAnts).times(G.globalAntMult)\r\n  G.antSevenProduce = player.seventhGeneratedAnts.add(player.seventhOwnedAnts).times(player.seventhProduceAnts).times(G.globalAntMult)\r\n  G.antSixProduce = player.sixthGeneratedAnts.add(player.sixthOwnedAnts).times(player.sixthProduceAnts).times(G.globalAntMult)\r\n  G.antFiveProduce = player.fifthGeneratedAnts.add(player.fifthOwnedAnts).times(player.fifthProduceAnts).times(G.globalAntMult)\r\n  G.antFourProduce = player.fourthGeneratedAnts.add(player.fourthOwnedAnts).times(player.fourthProduceAnts).times(G.globalAntMult)\r\n  G.antThreeProduce = player.thirdGeneratedAnts.add(player.thirdOwnedAnts).times(player.thirdProduceAnts).times(G.globalAntMult)\r\n  G.antTwoProduce = player.secondGeneratedAnts.add(player.secondOwnedAnts).times(player.secondProduceAnts).times(G.globalAntMult)\r\n  G.antOneProduce = player.firstGeneratedAnts.add(player.firstOwnedAnts).times(player.firstProduceAnts).times(G.globalAntMult)\r\n  player.seventhGeneratedAnts = player.seventhGeneratedAnts.add(G.antEightProduce.times(dt / 1))\r\n  player.sixthGeneratedAnts = player.sixthGeneratedAnts.add(G.antSevenProduce.times(dt / 1))\r\n  player.fifthGeneratedAnts = player.fifthGeneratedAnts.add(G.antSixProduce.times(dt / 1))\r\n  player.fourthGeneratedAnts = player.fourthGeneratedAnts.add(G.antFiveProduce.times(dt / 1))\r\n  player.thirdGeneratedAnts = player.thirdGeneratedAnts.add(G.antFourProduce.times(dt / 1))\r\n  player.secondGeneratedAnts = player.secondGeneratedAnts.add(G.antThreeProduce.times(dt / 1))\r\n  player.firstGeneratedAnts = player.firstGeneratedAnts.add(G.antTwoProduce.times(dt / 1))\r\n\r\n  player.antPoints = player.antPoints.add(G.antOneProduce.times(dt / 1))\r\n}\r\n\r\nexport const resetCurrency = (): void => {\r\n  let prestigePow = 0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100\r\n  let transcendPow = 0.03\r\n\r\n  // Calculates the conversion exponent for resets (Challenges 5 and 10 reduce the exponent accordingly).\r\n  if (player.currentChallenge.transcension === 5) {\r\n    prestigePow = 0.01 / (1 + player.challengecompletions[5])\r\n    transcendPow = 0.001\r\n  }\r\n  if (player.currentChallenge.reincarnation === 10) {\r\n    prestigePow = (1e-4) / (1 + player.challengecompletions[10])\r\n    transcendPow = 0.001\r\n  }\r\n  prestigePow *= G.deflationMultiplier[player.usedCorruptions[6]]\r\n  //Prestige Point Formulae\r\n  G.prestigePointGain = Decimal.floor(Decimal.pow(player.coinsThisPrestige.dividedBy(1e12), prestigePow))\r\n  if (player.upgrades[16] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\r\n    G.prestigePointGain = G.prestigePointGain.times(Decimal.min(Decimal.pow(10, 1e33), Decimal.pow(G.acceleratorEffect, 1 / 3 * G.deflationMultiplier[player.usedCorruptions[6]])))\r\n  }\r\n\r\n  //Transcend Point Formulae\r\n  G.transcendPointGain = Decimal.floor(Decimal.pow(player.coinsThisTranscension.dividedBy(1e100), transcendPow))\r\n  if (player.upgrades[44] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\r\n    G.transcendPointGain = G.transcendPointGain.times(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)))\r\n  }\r\n\r\n  //Reincarnation Point Formulae\r\n  G.reincarnationPointGain = Decimal.floor(Decimal.pow(player.transcendShards.dividedBy(1e300), 0.01))\r\n  if (player.currentChallenge.reincarnation !== 0) {\r\n    G.reincarnationPointGain = Decimal.pow(G.reincarnationPointGain, 0.01)\r\n  }\r\n  if (player.achievements[50] === 1) {\r\n    G.reincarnationPointGain = G.reincarnationPointGain.times(2)\r\n  }\r\n  if (player.upgrades[65] > 0.5) {\r\n    G.reincarnationPointGain = G.reincarnationPointGain.times(5)\r\n  }\r\n  if (player.currentChallenge.ascension === 12) {\r\n    G.reincarnationPointGain = new Decimal('0')\r\n  }\r\n}\r\n\r\nexport const resetCheck = async (i: resetNames, manual = true, leaving = false): Promise<void> => {\r\n  if (i === 'prestige') {\r\n    if (player.coinsThisPrestige.gte(1e16) || G.prestigePointGain.gte(100)) {\r\n      if (manual) {\r\n        void resetConfirmation('prestige')\r\n      } else {\r\n        resetachievementcheck(1)\r\n        reset('prestige')\r\n      }\r\n    }\r\n  }\r\n  if (i === 'transcension') {\r\n    if ((player.coinsThisTranscension.gte(1e100) || G.transcendPointGain.gte(0.5)) && player.currentChallenge.transcension === 0) {\r\n      if (manual) {\r\n        void resetConfirmation('transcend')\r\n      }\r\n      if (!manual) {\r\n        resetachievementcheck(2)\r\n        reset('transcension')\r\n      }\r\n    }\r\n  }\r\n  if (i === 'transcensionChallenge' && player.currentChallenge.transcension !== 0) {\r\n    const q = player.currentChallenge.transcension\r\n    const maxCompletions = getMaxChallenges(q)\r\n    const reqCheck = (comp: number) => player.coinsThisTranscension.gte(challengeRequirement(q, comp, q))\r\n    if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\r\n      let maxInc = 1\r\n      if (player.shopUpgrades.instantChallenge > 0) {\r\n        maxInc = 10\r\n      }\r\n      if (player.shopUpgrades.instantChallenge2 > 0) {\r\n        maxInc += player.highestSingularityCount\r\n      }\r\n      if (player.currentChallenge.ascension === 13) {\r\n        maxInc = 1\r\n      }\r\n      let counter = 0\r\n      let comp = player.challengecompletions[q]\r\n      while (counter < maxInc) {\r\n        if (reqCheck(comp) && comp < maxCompletions) {\r\n          comp++\r\n        }\r\n        counter++\r\n      }\r\n      player.challengecompletions[q] = comp\r\n      challengeDisplay(q, false)\r\n      updateChallengeLevel(q)\r\n    }\r\n    if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n      while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n        player.highestchallengecompletions[q] += 1\r\n        highestChallengeRewards(q, player.highestchallengecompletions[q])\r\n      }\r\n      calculateCubeBlessings()\r\n    }\r\n    challengeachievementcheck(q)\r\n    if (!player.retrychallenges || manual || (player.autoChallengeRunning && player.challengecompletions[q] >= maxCompletions)) {\r\n      toggleAutoChallengeModeText('ENTER')\r\n      player.currentChallenge.transcension = 0\r\n      updateChallengeDisplay()\r\n    }\r\n    if (player.shopUpgrades.instantChallenge === 0 || leaving) {\r\n      reset('transcensionChallenge', false, 'leaveChallenge')\r\n      player.transcendCount -= 1\r\n    }\r\n  }\r\n\r\n  if (i === 'reincarnation') {\r\n    if (G.reincarnationPointGain.gt(0.5) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\r\n      if (manual) {\r\n        void resetConfirmation('reincarnate')\r\n      }\r\n      if (!manual) {\r\n        resetachievementcheck(3)\r\n        reset('reincarnation')\r\n      }\r\n    }\r\n  }\r\n  if (i === 'reincarnationChallenge' && player.currentChallenge.reincarnation !== 0) {\r\n    const q = player.currentChallenge.reincarnation\r\n    const maxCompletions = getMaxChallenges(q)\r\n    const reqCheck = (comp: number) => {\r\n      if (q <= 8) {\r\n        return player.transcendShards.gte(challengeRequirement(q, comp, q))\r\n      } else { // challenges 9 and 10\r\n        return player.coins.gte(challengeRequirement(q, comp, q))\r\n      }\r\n    }\r\n    if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\r\n      let maxInc = 1\r\n      if (player.shopUpgrades.instantChallenge > 0) {\r\n        maxInc = 10\r\n      }\r\n      if (player.shopUpgrades.instantChallenge2 > 0) {\r\n        maxInc += player.highestSingularityCount\r\n      }\r\n      if (player.currentChallenge.ascension === 13) {\r\n        maxInc = 1\r\n      }\r\n      let counter = 0\r\n      let comp = player.challengecompletions[q]\r\n      while (counter < maxInc) {\r\n        if (reqCheck(comp) && comp < maxCompletions) {\r\n          comp++\r\n        }\r\n        counter++\r\n      }\r\n      player.challengecompletions[q] = comp\r\n      challengeDisplay(q, false)\r\n      updateChallengeLevel(q)\r\n    }\r\n    if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n      while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n        player.highestchallengecompletions[q] += 1\r\n        highestChallengeRewards(q, player.highestchallengecompletions[q])\r\n      }\r\n      calculateHypercubeBlessings()\r\n      calculateTesseractBlessings()\r\n      calculateCubeBlessings()\r\n    }\r\n    challengeachievementcheck(q)\r\n    if (!player.retrychallenges || manual || (player.autoChallengeRunning && player.challengecompletions[q] >= maxCompletions)) {\r\n      toggleAutoChallengeModeText('ENTER')\r\n      player.currentChallenge.reincarnation = 0\r\n      if (player.shopUpgrades.instantChallenge > 0) {\r\n        for (let i = 1; i <= 5; i++) {\r\n          player.challengecompletions[i] = player.highestchallengecompletions[i]\r\n        }\r\n      }\r\n      updateChallengeDisplay()\r\n      calculateRuneLevels()\r\n      calculateAnts()\r\n    }\r\n    if (player.shopUpgrades.instantChallenge === 0 || leaving) {\r\n      reset('reincarnationChallenge', false, 'leaveChallenge')\r\n      player.reincarnationCount -= 1\r\n    }\r\n  }\r\n\r\n  if (i === 'ascension') {\r\n    if (player.achievements[141] > 0 && (!player.toggles[31] || player.challengecompletions[10] > 0)) {\r\n      if (manual) {\r\n        void resetConfirmation('ascend')\r\n      }\r\n    }\r\n  }\r\n\r\n  if (i === 'ascensionChallenge' && player.currentChallenge.ascension !== 0) {\r\n    let conf = true\r\n    if (manual) {\r\n      if (player.challengecompletions[11] === 0 || player.toggles[31]) {\r\n        conf = await Confirm(i18next.t('main.exitAscensionChallenge'))\r\n      }\r\n    }\r\n    if (!conf) {\r\n      return\r\n    }\r\n    const a = player.currentChallenge.ascension\r\n    const maxCompletions = getMaxChallenges(a)\r\n\r\n    if (a !== 0 && a < 15) {\r\n      if (player.challengecompletions[10] >= (challengeRequirement(a, player.challengecompletions[a], a) as number) && player.challengecompletions[a] < maxCompletions) {\r\n        player.challengecompletions[a] += 1\r\n        updateChallengeLevel(a)\r\n        challengeDisplay(a, false)\r\n      }\r\n      challengeachievementcheck(a, true)\r\n    }\r\n    if (a === 15) {\r\n      const c15SM = challenge15ScoreMultiplier()\r\n      if (player.coins.gte(challengeRequirement(a, player.challengecompletions[a], a)) && player.challengecompletions[a] < maxCompletions) {\r\n        player.challengecompletions[a] += 1\r\n        updateChallengeLevel(a)\r\n        challengeDisplay(a, false)\r\n      }\r\n      if ((manual || leaving || player.shopUpgrades.challenge15Auto > 0) && player.usedCorruptions.slice(2, 10).every((a) => a === 11)) {\r\n        if (player.coins.gte(Decimal.pow(10, player.challenge15Exponent / c15SM))) {\r\n          player.challenge15Exponent = Decimal.log(player.coins.add(1), 10) * c15SM\r\n          c15RewardUpdate()\r\n        }\r\n      }\r\n    }\r\n\r\n    if (player.challengecompletions[a] > player.highestchallengecompletions[a]) {\r\n      player.highestchallengecompletions[a] += 1\r\n      player.wowHypercubes.add(1)\r\n      if (player.highestchallengecompletions[a] >= maxCompletions) {\r\n        leaving = true\r\n      }\r\n    }\r\n\r\n    if (!player.retrychallenges || manual || leaving) {\r\n      if (!(!manual && (autoAscensionChallengeSweepUnlock() || !player.autoChallengeRunning) // If not autochallenge, don't reset\r\n                             && player.autoAscend && player.challengecompletions[11] > 0\r\n                             && player.cubeUpgrades[10] > 0)) {\r\n        player.currentChallenge.ascension = 0\r\n        updateChallengeDisplay()\r\n      }\r\n    }\r\n\r\n    if ((player.shopUpgrades.instantChallenge2 === 0 && a !== 15) || manual) {\r\n      reset('ascensionChallenge', false)\r\n    }\r\n  }\r\n\r\n  if (i === 'singularity') {\r\n    if (player.runelevels[6] === 0) {\r\n      return Alert(i18next.t('main.noAntiquity'))\r\n    }\r\n\r\n    const thankSing = 300\r\n\r\n    if (player.insideSingularityChallenge) {\r\n      return Alert(i18next.t('main.insideSingularityChallenge'))\r\n    }\r\n\r\n    if (player.singularityCount >= thankSing) {\r\n      return Alert(i18next.t('main.gameBeat'))\r\n    }\r\n\r\n    let confirmed = false\r\n    const nextSingularityNumber = player.singularityCount + 1 + getFastForwardTotalMultiplier()\r\n\r\n    if (!player.toggles[33] && player.singularityCount > 0) {\r\n      confirmed = await Confirm(i18next.t('main.singularityConfirm0', {\r\n        x: format(nextSingularityNumber),\r\n        y: format(calculateGoldenQuarkGain(), 2, true)\r\n      }))\r\n    } else {\r\n      await Alert(i18next.t('main.singularityMessage1', { x: format(player.singularityCount) }))\r\n      await Alert(i18next.t('main.singularityMessage2'))\r\n      await Alert(i18next.t('main.singularityMessage3'))\r\n      await Alert(i18next.t('main.singularityMessage4', {\r\n        x: format(nextSingularityNumber),\r\n        y: format(calculateGoldenQuarkGain(), 2, true),\r\n        z: format(player.worlds.BONUS)\r\n      }))\r\n      await Alert(i18next.t('main.singularityMessage5'))\r\n\r\n      confirmed = await Confirm(i18next.t('main.singularityConfirm1'))\r\n      if (confirmed) {\r\n        confirmed = await Confirm(i18next.t('main.singularityConfirm2'))\r\n      }\r\n      if (confirmed) {\r\n        confirmed = await Confirm(i18next.t('main.singularityConfirm3'))\r\n      }\r\n    }\r\n\r\n    if (!confirmed) {\r\n      return Alert(i18next.t('main.singularityCancelled'))\r\n    } else {\r\n      await singularity()\r\n      await saveSynergy()\r\n      return Alert(i18next.t('main.welcomeToSingularity', { x: format(player.singularityCount) }))\r\n    }\r\n  }\r\n}\r\n\r\nexport const resetConfirmation = async (i: string): Promise<void> => {\r\n  if (i === 'prestige') {\r\n    if (player.toggles[28]) {\r\n      const r = await Confirm(i18next.t('main.prestigePrompt'))\r\n      if (r) {\r\n        resetachievementcheck(1)\r\n        reset('prestige')\r\n      }\r\n    } else {\r\n      resetachievementcheck(1)\r\n      reset('prestige')\r\n    }\r\n  }\r\n  if (i === 'transcend') {\r\n    if (player.toggles[29]) {\r\n      const z = await Confirm(i18next.t('main.transcendPrompt'))\r\n      if (z) {\r\n        resetachievementcheck(2)\r\n        reset('transcension')\r\n      }\r\n    } else {\r\n      resetachievementcheck(2)\r\n      reset('transcension')\r\n    }\r\n  }\r\n  if (i === 'reincarnate') {\r\n    if (player.currentChallenge.ascension !== 12) {\r\n      if (player.toggles[30]) {\r\n        const z = await Confirm(i18next.t('main.reincarnatePrompt'))\r\n        if (z) {\r\n          resetachievementcheck(3)\r\n          reset('reincarnation')\r\n        }\r\n      } else {\r\n        resetachievementcheck(3)\r\n        reset('reincarnation')\r\n      }\r\n    }\r\n  }\r\n  if (i === 'ascend') {\r\n    const z = !player.toggles[31] ||\r\n                  await Confirm(i18next.t('main.ascendPrompt'))\r\n    if (z) {\r\n      reset('ascension')\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAll = (): void => {\r\n  G.uFourteenMulti = new Decimal(1)\r\n  G.uFifteenMulti = new Decimal(1)\r\n\r\n  if (player.upgrades[14] > 0.5) {\r\n    G.uFourteenMulti = Decimal.pow(1.15, G.freeAccelerator)\r\n  }\r\n  if (player.upgrades[15] > 0.5) {\r\n    G.uFifteenMulti = Decimal.pow(1.15, G.freeAccelerator)\r\n  }\r\n\r\n  if (!player.unlocks.coinone && player.coins.gte(500)) {\r\n    player.unlocks.coinone = true\r\n    revealStuff()\r\n  }\r\n  if (!player.unlocks.cointwo && player.coins.gte(10000)) {\r\n    player.unlocks.cointwo = true\r\n    revealStuff()\r\n  }\r\n  if (!player.unlocks.cointhree && player.coins.gte(100000)) {\r\n    player.unlocks.cointhree = true\r\n    revealStuff()\r\n  }\r\n  if (!player.unlocks.coinfour && player.coins.gte(4e6)) {\r\n    player.unlocks.coinfour = true\r\n    revealStuff()\r\n  }\r\n  if (player.achievements[169] === 0 && player.antPoints.gte(3)) {\r\n    achievementaward(169)\r\n  }\r\n  if (player.achievements[170] === 0 && player.antPoints.gte(1e5)) {\r\n    achievementaward(170)\r\n  }\r\n  if (player.achievements[171] === 0 && player.antPoints.gte(666666666)) {\r\n    achievementaward(171)\r\n  }\r\n  if (player.achievements[172] === 0 && player.antPoints.gte(1e20)) {\r\n    achievementaward(172)\r\n  }\r\n  if (player.achievements[173] === 0 && player.antPoints.gte(1e40)) {\r\n    achievementaward(173)\r\n  }\r\n  if (player.achievements[174] === 0 && player.antPoints.gte('1e500')) {\r\n    achievementaward(174)\r\n  }\r\n  if (player.achievements[175] === 0 && player.antPoints.gte('1e2500')) {\r\n    achievementaward(175)\r\n  }\r\n\r\n  if (player.researches[200] >= 1e5 && player.achievements[250] < 1) {\r\n    achievementaward(250)\r\n  }\r\n  if (player.cubeUpgrades[50] >= 1e5 && player.achievements[251] < 1) {\r\n    achievementaward(251)\r\n  }\r\n\r\n  //Autobuy \"Upgrades\" Tab\r\n  autoUpgrades()\r\n\r\n  //Autobuy \"Building\" Tab\r\n\r\n  if (player.toggles[1] && player.upgrades[81] === 1 && player.coins.gte(player.firstCostCoin)) {\r\n    buyMax(1, 'Coin')\r\n  }\r\n  if (player.toggles[2] && player.upgrades[82] === 1 && player.coins.gte(player.secondCostCoin)) {\r\n    buyMax(2, 'Coin')\r\n  }\r\n  if (player.toggles[3] && player.upgrades[83] === 1 && player.coins.gte(player.thirdCostCoin)) {\r\n    buyMax(3, 'Coin')\r\n  }\r\n  if (player.toggles[4] && player.upgrades[84] === 1 && player.coins.gte(player.fourthCostCoin)) {\r\n    buyMax(4, 'Coin')\r\n  }\r\n  if (player.toggles[5] && player.upgrades[85] === 1 && player.coins.gte(player.fifthCostCoin)) {\r\n    buyMax(5, 'Coin')\r\n  }\r\n  if (player.toggles[6] && player.upgrades[86] === 1 && player.coins.gte(player.acceleratorCost)) {\r\n    buyAccelerator(true)\r\n  }\r\n  if (player.toggles[7] && player.upgrades[87] === 1 && player.coins.gte(player.multiplierCost)) {\r\n    buyMultiplier(true)\r\n  }\r\n  if (player.toggles[8] && player.upgrades[88] === 1 && player.prestigePoints.gte(player.acceleratorBoostCost)) {\r\n    boostAccelerator(true)\r\n  }\r\n\r\n  //Autobuy \"Prestige\" Tab\r\n\r\n  if (player.toggles[10] && player.achievements[78] === 1 && player.prestigePoints.gte(player.firstCostDiamonds)) {\r\n    buyMax(1, 'Diamonds')\r\n  }\r\n  if (player.toggles[11] && player.achievements[85] === 1 && player.prestigePoints.gte(player.secondCostDiamonds)) {\r\n    buyMax(2, 'Diamonds')\r\n  }\r\n  if (player.toggles[12] && player.achievements[92] === 1 && player.prestigePoints.gte(player.thirdCostDiamonds)) {\r\n    buyMax(3, 'Diamonds')\r\n  }\r\n  if (player.toggles[13] && player.achievements[99] === 1 && player.prestigePoints.gte(player.fourthCostDiamonds)) {\r\n    buyMax(4, 'Diamonds')\r\n  }\r\n  if (player.toggles[14] && player.achievements[106] === 1 && player.prestigePoints.gte(player.fifthCostDiamonds)) {\r\n    buyMax(5, 'Diamonds')\r\n  }\r\n\r\n  let c = 0\r\n  c += Math.floor(G.rune3level / 16 * G.effectiveLevelMult) * 100 / 100\r\n  if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n    c += 10\r\n  }\r\n  if (player.achievements[79] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[0] + G.crystalUpgradeCostIncrement[0] * Math.floor(Math.pow(player.crystalUpgrades[0] - 0.5 - c, 2) / 2))))) {\r\n    buyCrystalUpgrades(1, true)\r\n  }\r\n  if (player.achievements[86] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[1] + G.crystalUpgradeCostIncrement[1] * Math.floor(Math.pow(player.crystalUpgrades[1] - 0.5 - c, 2) / 2))))) {\r\n    buyCrystalUpgrades(2, true)\r\n  }\r\n  if (player.achievements[93] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[2] + G.crystalUpgradeCostIncrement[2] * Math.floor(Math.pow(player.crystalUpgrades[2] - 0.5 - c, 2) / 2))))) {\r\n    buyCrystalUpgrades(3, true)\r\n  }\r\n  if (player.achievements[100] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[3] + G.crystalUpgradeCostIncrement[3] * Math.floor(Math.pow(player.crystalUpgrades[3] - 0.5 - c, 2) / 2))))) {\r\n    buyCrystalUpgrades(4, true)\r\n  }\r\n  if (player.achievements[107] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[4] + G.crystalUpgradeCostIncrement[4] * Math.floor(Math.pow(player.crystalUpgrades[4] - 0.5 - c, 2) / 2))))) {\r\n    buyCrystalUpgrades(5, true)\r\n  }\r\n\r\n  //Autobuy \"Transcension\" Tab\r\n\r\n  if (player.toggles[16] && player.upgrades[94] === 1 && player.transcendPoints.gte(player.firstCostMythos)) {\r\n    buyMax(1, 'Mythos')\r\n  }\r\n  if (player.toggles[17] && player.upgrades[95] === 1 && player.transcendPoints.gte(player.secondCostMythos)) {\r\n    buyMax(2, 'Mythos')\r\n  }\r\n  if (player.toggles[18] && player.upgrades[96] === 1 && player.transcendPoints.gte(player.thirdCostMythos)) {\r\n    buyMax(3, 'Mythos')\r\n  }\r\n  if (player.toggles[19] && player.upgrades[97] === 1 && player.transcendPoints.gte(player.fourthCostMythos)) {\r\n    buyMax(4, 'Mythos')\r\n  }\r\n  if (player.toggles[20] && player.upgrades[98] === 1 && player.transcendPoints.gte(player.fifthCostMythos)) {\r\n    buyMax(5, 'Mythos')\r\n  }\r\n\r\n  //Autobuy \"Reincarnation\" Tab\r\n\r\n  if (player.toggles[22] && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.firstCostParticles)) {\r\n    buyParticleBuilding(1, true)\r\n  }\r\n  if (player.toggles[23] && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.secondCostParticles)) {\r\n    buyParticleBuilding(2, true)\r\n  }\r\n  if (player.toggles[24] && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.thirdCostParticles)) {\r\n    buyParticleBuilding(3, true)\r\n  }\r\n  if (player.toggles[25] && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.fourthCostParticles)) {\r\n    buyParticleBuilding(4, true)\r\n  }\r\n  if (player.toggles[26] && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.fifthCostParticles)) {\r\n    buyParticleBuilding(5, true)\r\n  }\r\n\r\n  //Autobuy \"ascension\" tab\r\n  if (player.researches[175] > 0) {\r\n    for (let i = 1; i <= 10; i++) {\r\n      if (player.ascendShards.gte(getConstUpgradeMetadata(i).pop()!)) {\r\n        buyConstantUpgrades(i, true)\r\n      }\r\n    }\r\n  }\r\n\r\n  //Autobuy tesseract buildings (Mode: AMOUNT)\r\n  if (player.researches[190] > 0 && player.tesseractAutoBuyerToggle === 1 && player.resettoggle4 < 2) {\r\n    const ownedBuildings: TesseractBuildings = [null, null, null, null, null]\r\n    for (let i = 1; i <= 5; i++) {\r\n      if (player.autoTesseracts[i]) {\r\n        ownedBuildings[i-1] = player[`ascendBuilding${i as OneToFive}` as const].owned\r\n      }\r\n    }\r\n    const budget = Number(player.wowTesseracts) - player.tesseractAutoBuyerAmount\r\n    const buyToBuildings = calculateTessBuildingsInBudget(ownedBuildings, budget)\r\n    // Prioritise buying buildings from highest tier to lowest,\r\n    // in case there are any off-by-ones or floating point errors.\r\n    for (let i = 5; i >= 1; i--) {\r\n      const buyFrom = ownedBuildings[i-1]\r\n      const buyTo = buyToBuildings[i-1]\r\n      if (buyFrom !== null && buyTo !== null && buyTo !== buyFrom) {\r\n        buyTesseractBuilding(i as OneToFive, buyTo - buyFrom)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Talismans\r\n  if (player.researches[130] > 0 || player.researches[135] > 0) {\r\n    const talismansUnlocked = [\r\n      player.achievements[119] > 0,\r\n      player.achievements[126] > 0,\r\n      player.achievements[133] > 0,\r\n      player.achievements[140] > 0,\r\n      player.achievements[147] > 0,\r\n                player.antUpgrades[11]! > 0 || player.ascensionCount > 0,\r\n                player.shopUpgrades.shopTalisman > 0\r\n    ]\r\n    let upgradedTalisman = false\r\n\r\n    // First, we need to enhance all of the talismans. Then, we can fortify all of the talismans.\r\n    // If we were to do this in one loop, the players resources would be drained on individual expensive levels\r\n    // of early talismans before buying important enhances for the later ones. This results in drastically\r\n    // reduced overall gains when talisman resources are scarce.\r\n    if (player.autoEnhanceToggle && player.researches[135] > 0) {\r\n      for (let i = 0; i < talismansUnlocked.length; ++i) {\r\n        if (talismansUnlocked[i] && player.talismanRarity[i] < 6) {\r\n          upgradedTalisman = buyTalismanEnhance(i, true) || upgradedTalisman\r\n        }\r\n      }\r\n    }\r\n\r\n    if (player.autoFortifyToggle && player.researches[130] > 0) {\r\n      for (let i = 0; i < talismansUnlocked.length; ++i) {\r\n        const maxTalismanLevel = calculateMaxTalismanLevel(i)\r\n        if (talismansUnlocked[i] && player.talismanLevels[i] < maxTalismanLevel) {\r\n          upgradedTalisman = buyTalismanLevels(i, true) || upgradedTalisman\r\n        }\r\n      }\r\n    }\r\n\r\n    // Recalculate talisman-related upgrades and display on success\r\n    if (upgradedTalisman) {\r\n      updateTalismanInventory()\r\n      calculateRuneLevels()\r\n    }\r\n  }\r\n\r\n  //Generation\r\n  if (player.upgrades[101] > 0.5) {\r\n    player.fourthGeneratedCoin = player.fourthGeneratedCoin.add((player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G.uFifteenMulti).times(G.generatorPower))\r\n  }\r\n  if (player.upgrades[102] > 0.5) {\r\n    player.thirdGeneratedCoin = player.thirdGeneratedCoin.add((player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G.uFourteenMulti).times(G.generatorPower))\r\n  }\r\n  if (player.upgrades[103] > 0.5) {\r\n    player.secondGeneratedCoin = player.secondGeneratedCoin.add((player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G.generatorPower))\r\n  }\r\n  if (player.upgrades[104] > 0.5) {\r\n    player.firstGeneratedCoin = player.firstGeneratedCoin.add((player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G.generatorPower))\r\n  }\r\n  if (player.upgrades[105] > 0.5) {\r\n    player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(player.firstOwnedCoin)\r\n  }\r\n  let p = 1\r\n  p += 1 / 100 * (player.achievements[71] + player.achievements[72] + player.achievements[73] + player.achievements[74] + player.achievements[75] + player.achievements[76] + player.achievements[77])\r\n\r\n  let a = 0\r\n  if (player.upgrades[106] > 0.5) {\r\n    a += 0.10\r\n  }\r\n  if (player.upgrades[107] > 0.5) {\r\n    a += 0.15\r\n  }\r\n  if (player.upgrades[108] > 0.5) {\r\n    a += 0.25\r\n  }\r\n  if (player.upgrades[109] > 0.5) {\r\n    a += 0.25\r\n  }\r\n  if (player.upgrades[110] > 0.5) {\r\n    a += 0.25\r\n  }\r\n  a *= p\r\n\r\n  let b = 0\r\n  if (player.upgrades[111] > 0.5) {\r\n    b += 0.08\r\n  }\r\n  if (player.upgrades[112] > 0.5) {\r\n    b += 0.08\r\n  }\r\n  if (player.upgrades[113] > 0.5) {\r\n    b += 0.08\r\n  }\r\n  if (player.upgrades[114] > 0.5) {\r\n    b += 0.08\r\n  }\r\n  if (player.upgrades[115] > 0.5) {\r\n    b += 0.08\r\n  }\r\n  b *= p\r\n\r\n  c = 0\r\n  if (player.upgrades[116] > 0.5) {\r\n    c += 0.05\r\n  }\r\n  if (player.upgrades[117] > 0.5) {\r\n    c += 0.05\r\n  }\r\n  if (player.upgrades[118] > 0.5) {\r\n    c += 0.05\r\n  }\r\n  if (player.upgrades[119] > 0.5) {\r\n    c += 0.05\r\n  }\r\n  if (player.upgrades[120] > 0.5) {\r\n    c += 0.05\r\n  }\r\n  c *= p\r\n\r\n  if (a !== 0) {\r\n    player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(Decimal.pow(player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).add(1), a))\r\n  }\r\n  if (b !== 0) {\r\n    player.fifthGeneratedDiamonds = player.fifthGeneratedDiamonds.add(Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), b))\r\n  }\r\n  if (c !== 0) {\r\n    player.fifthGeneratedMythos = player.fifthGeneratedMythos.add(Decimal.pow(player.firstGeneratedParticles.add(player.firstOwnedParticles).add(1), c))\r\n  }\r\n\r\n  if (player.runeshards > player.maxofferings) {\r\n    player.maxofferings = player.runeshards\r\n  }\r\n  if (player.researchPoints > player.maxobtainium) {\r\n    player.maxobtainium = player.researchPoints\r\n  }\r\n\r\n  if (isNaN(player.runeshards)) {\r\n    player.runeshards = 0\r\n  }\r\n  if (player.runeshards > 1e300) {\r\n    player.runeshards = 1e300\r\n  }\r\n  if (isNaN(player.researchPoints)) {\r\n    player.researchPoints = 0\r\n  }\r\n  if (player.researchPoints > 1e300) {\r\n    player.researchPoints = 1e300\r\n  }\r\n\r\n  G.effectiveLevelMult = 1\r\n  G.effectiveLevelMult *= (1 + player.researches[4] / 10 * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))) //Research 1x4\r\n  G.effectiveLevelMult *= (1 + player.researches[21] / 100) //Research 2x6\r\n  G.effectiveLevelMult *= (1 + player.researches[90] / 100) //Research 4x15\r\n  G.effectiveLevelMult *= (1 + player.researches[131] / 200) //Research 6x6\r\n  G.effectiveLevelMult *= (1 + player.researches[161] / 200 * 3 / 5) //Research 7x11\r\n  G.effectiveLevelMult *= (1 + player.researches[176] / 200 * 2 / 5) //Research 8x1\r\n  G.effectiveLevelMult *= (1 + player.researches[191] / 200 * 1 / 5) //Research 8x16\r\n  G.effectiveLevelMult *= (1 + player.researches[146] / 200 * 4 / 5) //Research 6x21\r\n  G.effectiveLevelMult *= (1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]))\r\n  G.effectiveLevelMult *= G.challenge15Rewards.runeBonus\r\n\r\n  G.optimalOfferingTimer = 600 + 30 * player.researches[85] + 0.4 * G.rune5level + 120 * player.shopUpgrades.offeringEX\r\n  G.optimalObtainiumTimer = 3600 + 120 * player.shopUpgrades.obtainiumEX\r\n  autoBuyAnts()\r\n\r\n  if (player.autoAscend && player.challengecompletions[11] > 0 && player.cubeUpgrades[10] > 0 && player.currentChallenge.reincarnation !== 10) {\r\n    let ascension = false\r\n    if (player.autoAscendMode === 'c10Completions' && player.challengecompletions[10] >= Math.max(1, player.autoAscendThreshold)) {\r\n      ascension = true\r\n    }\r\n    if (player.autoAscendMode === 'realAscensionTime' && player.ascensionCounterRealReal >= Math.max(0.1, player.autoAscendThreshold)) {\r\n      ascension = true\r\n    }\r\n    if (ascension && player.challengecompletions[10] > 0) {\r\n      // Auto Ascension and Auto Challenge Sweep enables rotation of the Ascension Challenge\r\n      if (autoAscensionChallengeSweepUnlock() && player.currentChallenge.ascension !== 0 && player.retrychallenges && player.researches[150] === 1 && player.autoChallengeRunning) {\r\n        let nextChallenge = getNextChallenge(player.currentChallenge.ascension + 1, false, 11, 15)\r\n        if (nextChallenge <= 15 && player.currentChallenge.ascension !== nextChallenge) {\r\n          void resetCheck('ascensionChallenge', false, true)\r\n          player.currentChallenge.ascension = nextChallenge\r\n          reset('ascensionChallenge', false)\r\n        } else {\r\n          nextChallenge = getNextChallenge(player.currentChallenge.ascension + 1, true, 11, 15)\r\n          void resetCheck('ascensionChallenge', false, true)\r\n          player.currentChallenge.ascension = nextChallenge <= 15 ? nextChallenge : 0\r\n          reset('ascensionChallenge', false)\r\n        }\r\n      } else {\r\n        if (player.currentChallenge.ascension !== 0) {\r\n          void resetCheck('ascensionChallenge', false, true)\r\n          reset('ascensionChallenge', false)\r\n        } else {\r\n          reset('ascension', false)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let metaData = null\r\n  if (player.researches[175] > 0) {\r\n    for (let i = 1; i <= 10; i++) {\r\n      metaData = getConstUpgradeMetadata(i)\r\n      if (player.ascendShards.gte(metaData[1])) {\r\n        buyConstantUpgrades(i, true)\r\n      }\r\n    }\r\n  }\r\n\r\n  const reductionValue = getReductionValue()\r\n  if (reductionValue !== G.prevReductionValue) {\r\n    G.prevReductionValue = reductionValue\r\n    const resources = ['Coin', 'Diamonds', 'Mythos'] as const\r\n\r\n    for (let res = 0; res < resources.length; ++res) {\r\n      const resource = resources[res]\r\n      for (let ord = 0; ord < 5; ++ord) {\r\n        const num = G.ordinals[ord as ZeroToFour]\r\n        player[`${num}Cost${resource}` as const] = getCost(ord+1 as OneToFive, resource, player[`${num}Owned${resource}` as const] + 1, reductionValue)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i <= 4; i++) {\r\n      const particleOriginalCost = [1, 1e2, 1e4, 1e8, 1e16]\r\n      const num = G.ordinals[i as ZeroToFour]\r\n      const buyTo = player[`${num}OwnedParticles` as const] + 1\r\n      player[`${num}CostParticles` as const] = new Decimal(Decimal.pow(2, buyTo - 1).times(Decimal.pow(1.001, Math.max(0, (buyTo - 325000)) * Math.max(0, (buyTo - 325000) + 1) / 2))).times(particleOriginalCost[i])\r\n    }\r\n  }\r\n\r\n  // Challenge 15 autoupdate\r\n  if (player.shopUpgrades.challenge15Auto > 0 && player.currentChallenge.ascension === 15 && player.usedCorruptions.slice(2, 10).every((a) => a === 11)) {\r\n    const c15SM = challenge15ScoreMultiplier()\r\n    if (player.coins.gte(Decimal.pow(10, player.challenge15Exponent / c15SM))) {\r\n      player.challenge15Exponent = Decimal.log(player.coins.add(1), 10) * c15SM\r\n      c15RewardUpdate()\r\n    }\r\n  }\r\n}\r\n\r\nexport const fastUpdates = (): void => {\r\n  updateAll()\r\n  htmlInserts()\r\n}\r\n\r\nexport const slowUpdates = (): void => {\r\n  buttoncolorchange()\r\n  buildingAchievementCheck()\r\n}\r\n\r\nexport const constantIntervals = (): void => {\r\n  setInterval(saveSynergy, 5000)\r\n  setInterval(slowUpdates, 200)\r\n  setInterval(fastUpdates, 50)\r\n\r\n  if (!G.timeWarp) {\r\n    exitOffline()\r\n  }\r\n}\r\n\r\nlet lastUpdate = 0\r\n\r\nexport const createTimer = (): void => {\r\n  lastUpdate = performance.now()\r\n  setInterval(tick, 5)\r\n}\r\n\r\nconst dt = 5\r\nconst filterStrength = 20\r\nlet deltaMean = 0\r\n\r\nconst loadingDate = new Date()\r\nconst loadingBasePerfTick = performance.now()\r\n\r\n// performance.now() doesn't always reset on reload, so we capture a \"base value\"\r\n// to keep things stable\r\n// The returned time is pinned to when the page itself was loaded to remain\r\n// resilient against changed system clocks\r\nexport const getTimePinnedToLoadDate = () => {\r\n  return loadingDate.getTime() + (performance.now() - loadingBasePerfTick)\r\n}\r\n\r\nconst tick = () => {\r\n  const now = performance.now()\r\n  let delta = now - lastUpdate\r\n  // compute pseudo-average delta cf. https://stackoverflow.com/a/5111475/343834\r\n  deltaMean += (delta - deltaMean) / filterStrength\r\n  let dtEffective\r\n  while (delta > 5) {\r\n    // tack will compute dtEffective milliseconds of game time\r\n    dtEffective = dt\r\n    // If the mean lag (deltaMean) is more than a whole frame (16ms), compensate by computing deltaMean - dt ms, up to 1 hour\r\n    dtEffective += deltaMean > 16 ? Math.min(3600 * 1000, deltaMean - dt) : 0\r\n    // compute at max delta ms to avoid negative delta\r\n    dtEffective = Math.min(delta, dtEffective)\r\n    // run tack and record timings\r\n    tack(dtEffective / 1000)\r\n    lastUpdate += dtEffective\r\n    delta -= dtEffective\r\n  }\r\n}\r\n\r\nconst tack = (dt: number) => {\r\n  if (!G.timeWarp) {\r\n    //Adds Resources (coins, ants, etc)\r\n    const timeMult = calculateTimeAcceleration().mult\r\n    resourceGain(dt * timeMult)\r\n    //Adds time (in milliseconds) to all reset functions, and quarks timer.\r\n    addTimers('prestige', dt)\r\n    addTimers('transcension', dt)\r\n    addTimers('reincarnation', dt)\r\n    addTimers('ascension', dt)\r\n    addTimers('quarks', dt)\r\n    addTimers('goldenQuarks', dt)\r\n    addTimers('octeracts', dt)\r\n    addTimers('singularity', dt)\r\n    addTimers('autoPotion', dt)\r\n    addTimers('ambrosia', dt)\r\n\r\n    //Triggers automatic rune sacrifice (adds milliseconds to payload timer)\r\n    if (player.shopUpgrades.offeringAuto > 0 && player.autoSacrificeToggle) {\r\n      automaticTools('runeSacrifice', dt)\r\n    }\r\n\r\n    //Triggers automatic ant sacrifice (adds milliseonds to payload timers)\r\n    if (player.achievements[173] === 1) {\r\n      automaticTools('antSacrifice', dt)\r\n    }\r\n\r\n    /*Triggers automatic obtainium gain if research [2x11] is unlocked,\r\n        Otherwise it just calculates obtainium multiplier values. */\r\n    if (player.researches[61] === 1) {\r\n      automaticTools('addObtainium', dt)\r\n    } else {\r\n      calculateObtainium()\r\n    }\r\n\r\n    //Automatically tries and buys researches lol\r\n    if (player.autoResearchToggle && player.autoResearch > 0 && player.autoResearch <= maxRoombaResearchIndex(player) &&\r\n                (autoResearchEnabled() || player.autoResearchMode === 'manual')) {\r\n      // buyResearch() probably shouldn't even be called if player.autoResearch exceeds the highest unlocked research\r\n      let counter = 0\r\n      const maxCount = 1 + player.challengecompletions[14]\r\n      while (counter < maxCount) {\r\n        if (player.autoResearch > 0) {\r\n          const linGrowth = (player.autoResearch === 200) ? 0.01 : 0\r\n          if (!buyResearch(player.autoResearch, true, linGrowth)) {\r\n            break\r\n          }\r\n        } else {\r\n          break\r\n        }\r\n        counter++\r\n      }\r\n    }\r\n  }\r\n\r\n  // Adds an offering every 2 seconds\r\n  if (player.highestchallengecompletions[3] > 0) {\r\n    automaticTools('addOfferings', dt/2)\r\n  }\r\n\r\n  // Adds an offering every 1/(cube upgrade 1x2) seconds. It shares a timer with the one above.\r\n  if (player.cubeUpgrades[2] > 0) {\r\n    automaticTools('addOfferings', dt * player.cubeUpgrades[2])\r\n  }\r\n\r\n  runChallengeSweep(dt)\r\n\r\n  //Check for automatic resets\r\n  //Auto Prestige. === 1 indicates amount, === 2 indicates time.\r\n  if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\r\n    if (player.toggles[15] && player.achievements[43] === 1 && G.prestigePointGain.gte(player.prestigePoints.times(Decimal.pow(10, player.prestigeamount))) && player.coinsThisPrestige.gte(1e16)) {\r\n      resetachievementcheck(1)\r\n      reset('prestige', true)\r\n    }\r\n  }\r\n  if (player.resettoggle1 === 2) {\r\n    G.autoResetTimers.prestige += dt\r\n    const time = Math.max(0.01, player.prestigeamount)\r\n    if (player.toggles[15] && player.achievements[43] === 1 && G.autoResetTimers.prestige >= time && player.coinsThisPrestige.gte(1e16)) {\r\n      resetachievementcheck(1)\r\n      reset('prestige', true)\r\n    }\r\n  }\r\n\r\n  if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\r\n    if (player.toggles[21] && player.upgrades[89] === 1 && G.transcendPointGain.gte(player.transcendPoints.times(Decimal.pow(10, player.transcendamount))) && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\r\n      resetachievementcheck(2)\r\n      reset('transcension', true)\r\n    }\r\n  }\r\n  if (player.resettoggle2 === 2) {\r\n    G.autoResetTimers.transcension += dt\r\n    const time = Math.max(0.01, player.transcendamount)\r\n    if (player.toggles[21] && player.upgrades[89] === 1 && G.autoResetTimers.transcension >= time && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\r\n      resetachievementcheck(2)\r\n      reset('transcension', true)\r\n    }\r\n  }\r\n\r\n  if (player.currentChallenge.ascension !== 12) {\r\n    G.autoResetTimers.reincarnation += dt\r\n    if (player.resettoggle3 === 2) {\r\n      const time = Math.max(0.01, player.reincarnationamount)\r\n      if (player.toggles[27] && player.researches[46] > 0.5 && player.transcendShards.gte('1e300') && G.autoResetTimers.reincarnation >= time && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\r\n        resetachievementcheck(3)\r\n        reset('reincarnation', true)\r\n      }\r\n    }\r\n    if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\r\n      if (player.toggles[27] && player.researches[46] > 0.5 && G.reincarnationPointGain.gte(player.reincarnationPoints.add(1).times(Decimal.pow(10, player.reincarnationamount))) && player.transcendShards.gte(1e300) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\r\n        resetachievementcheck(3)\r\n        reset('reincarnation', true)\r\n      }\r\n    }\r\n  }\r\n  calculateOfferings('reincarnation')\r\n}\r\n\r\nexport const synergismHotkeys = (event: KeyboardEvent, key: string): void => {\r\n  if (!player.toggles[40]) {\r\n    return\r\n  }\r\n\r\n  const types = {\r\n    coin: 'Coin',\r\n    diamond: 'Diamonds',\r\n    mythos: 'Mythos',\r\n    particle: 'Particles',\r\n    tesseract: 'Tesseracts'\r\n  } as const\r\n\r\n  const type = types[G.buildingSubTab]\r\n\r\n  if (event.shiftKey) {\r\n    let num = Number(key) - 1\r\n    if (key ==='BACKQUOTE') {\r\n      num = -1\r\n    }\r\n    if (player.challengecompletions[11] > 0 && !isNaN(num)) {\r\n      if (num >= 0 && num < player.corruptionLoadoutNames.length) {\r\n        if (player.toggles[41]) {\r\n          void Notification(\r\n            i18next.t('main.corruptionLoadoutApplied', {\r\n              x: num + 1,\r\n              y: player.corruptionLoadoutNames[num]\r\n            }),\r\n            5000\r\n          )\r\n        }\r\n        corruptionLoadoutSaveLoad(false, num + 1)\r\n      } else {\r\n        if (player.toggles[41]) {\r\n          void Notification(i18next.t('main.allCorruptionsZero'), 5000)\r\n        }\r\n        corruptionLoadoutSaveLoad(false, 0)\r\n      }\r\n      event.preventDefault()\r\n    }\r\n    return\r\n  }\r\n\r\n  switch (key) {\r\n    case '1':\r\n    case '2':\r\n    case '3':\r\n    case '4':\r\n    case '5': {\r\n      const num = Number(key) as OneToFive\r\n\r\n      if (G.currentTab === 'buildings') {\r\n        if (type === 'Particles') {\r\n          buyParticleBuilding(num)\r\n        } else if (type === 'Tesseracts') {\r\n          buyTesseractBuilding(num)\r\n        } else {\r\n          buyMax(num, type)\r\n        }\r\n      }\r\n      if (G.currentTab === 'upgrades') {\r\n        categoryUpgrades(num, false)\r\n      }\r\n      if (G.currentTab === 'runes') {\r\n        if (G.runescreen === 'runes') {\r\n          redeemShards(num)\r\n        }\r\n        if (G.runescreen === 'blessings') {\r\n          buyRuneBonusLevels('Blessings', num)\r\n        }\r\n        if (G.runescreen === 'spirits') {\r\n          buyRuneBonusLevels('Spirits', num)\r\n        }\r\n      }\r\n      if (G.currentTab === 'challenge') {\r\n        toggleChallenges(num)\r\n        challengeDisplay(num)\r\n      }\r\n      break\r\n    }\r\n\r\n    case '6':\r\n      if (G.currentTab === 'upgrades') {\r\n        categoryUpgrades(6, false)\r\n      }\r\n      if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n        buyCrystalUpgrades(1)\r\n      }\r\n      if (G.currentTab === 'challenge' && player.reincarnationCount > 0) {\r\n        toggleChallenges(6)\r\n        challengeDisplay(6)\r\n      }\r\n      break\r\n    case '7':\r\n      if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n        buyCrystalUpgrades(2)\r\n      }\r\n      if (G.currentTab === 'challenge' && player.achievements[113] === 1) {\r\n        toggleChallenges(7)\r\n        challengeDisplay(7)\r\n      }\r\n      break\r\n    case '8':\r\n      if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n        buyCrystalUpgrades(3)\r\n      }\r\n      if (G.currentTab === 'challenge' && player.achievements[120] === 1) {\r\n        toggleChallenges(8)\r\n        challengeDisplay(8)\r\n      }\r\n      break\r\n    case '9':\r\n      if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n        buyCrystalUpgrades(4)\r\n      }\r\n      if (G.currentTab === 'challenge' && player.achievements[127] === 1) {\r\n        toggleChallenges(9)\r\n        challengeDisplay(9)\r\n      }\r\n      break\r\n    case '0':\r\n      if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n        buyCrystalUpgrades(5)\r\n      }\r\n      if (G.currentTab === 'challenge' && player.achievements[134] === 1) {\r\n        toggleChallenges(10)\r\n        challengeDisplay(10)\r\n      }\r\n      break\r\n  }\r\n\r\n}\r\n\r\nexport const showExitOffline = () => {\r\n  const el = DOMCacheGetOrSet('exitOffline')\r\n  el.style.visibility = 'visible'\r\n  setTimeout(() => el.focus(), 100)\r\n}\r\n\r\n/**\r\n * Reloads shit.\r\n * @param reset if this param is passed, offline progression will not be calculated.\r\n */\r\nexport const reloadShit = async (reset = false) => {\r\n  clearTimers()\r\n\r\n  // Shows a reset button when page loading seems to stop or cause an error\r\n  const preloadDeleteGame = setTimeout(() => DOMCacheGetOrSet('preloadDeleteGame').style.display = 'block', 10000)\r\n\r\n  disableHotkeys()\r\n\r\n  // Wait a tick to continue. This is a (likely futile) attempt to see if this solves save corrupting.\r\n  // This ensures all queued tasks are executed before continuing on.\r\n  await new Promise((res) => {\r\n    setTimeout(res, 0)\r\n  })\r\n\r\n  const save =\r\n        await localforage.getItem<Blob>('Synergysave2') ??\r\n        localStorage.getItem('Synergysave2')\r\n\r\n  const saveObject = typeof save === 'string' ? save : await save?.text()\r\n\r\n  if (saveObject) {\r\n    const dec = LZString.decompressFromBase64(saveObject)\r\n    const isLZString = dec !== ''\r\n\r\n    if (isLZString) {\r\n      if (!dec) {\r\n        return Alert(i18next.t('save.loadFailed'))\r\n      }\r\n\r\n      const saveString = btoa(dec)\r\n\r\n      if (saveString === null) {\r\n        return Alert(i18next.t('save.loadFailed'))\r\n      }\r\n\r\n      localStorage.clear()\r\n      const blob = new Blob([saveString], { type: 'text/plain' })\r\n      await localforage.setItem<Blob>('Synergysave2', blob)\r\n      await Alert(i18next.t('main.transferredFromLZ'))\r\n    }\r\n\r\n    await loadSynergy()\r\n  }\r\n\r\n  if (!reset) {\r\n    await calculateOffline()\r\n  } else {\r\n    player.worlds = new QuarkHandler({ bonus: 0, quarks: 0 })\r\n    // saving is disabled during a singularity event to prevent bug\r\n    // early return here if the save fails can keep game state from properly resetting after a singularity\r\n    if (saveCheck.canSave) {\r\n      const saved = await saveSynergy()\r\n      if (!saved) {\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleTheme(true)\r\n  settingAnnotation()\r\n  toggleIconSet()\r\n  toggleauto()\r\n  htmlInserts()\r\n  createTimer()\r\n\r\n  //Reset Displays\r\n  changeTab('buildings')\r\n  changeSubTab('buildings', { page: 0 })\r\n  changeSubTab('runes', { page: 0 }) // Set 'runes' subtab back to 'runes' tab\r\n  changeSubTab('cube', { page: 0 }) // Set 'cube tribues' subtab back to 'cubes' tab\r\n  changeSubTab('traits', { page: 0 }) // set 'corruption main'\r\n  changeSubTab('singularity', { page: 0 }) // set 'singularity main'\r\n  changeSubTab('settings', { page: 0 }) // set 'statistics main'\r\n\r\n  dailyResetCheck()\r\n  setInterval(dailyResetCheck, 30000)\r\n\r\n  constantIntervals()\r\n  changeTabColor()\r\n\r\n  eventCheck()\r\n  setInterval(eventCheck, 15000)\r\n  showExitOffline()\r\n  clearTimeout(preloadDeleteGame)\r\n\r\n  setInterval(cacheReinitialize, 15000)\r\n\r\n  if (localStorage.getItem('pleaseStar') === null) {\r\n    void Alert(i18next.t('main.starRepo'))\r\n    localStorage.setItem('pleaseStar', '')\r\n  }\r\n\r\n  // All versions of Chrome and Firefox supported by the game have this API,\r\n  // but not all versions of Edge and Safari do.\r\n  if (\r\n  /* eslint-disable @typescript-eslint/no-unnecessary-condition */\r\n    typeof navigator.storage?.persist === 'function' &&\r\n        typeof navigator.storage?.persisted === 'function'\r\n        /* eslint-enable @typescript-eslint/no-unnecessary-condition */\r\n  ) {\r\n    const persistent = await navigator.storage.persisted()\r\n\r\n    if (!persistent) {\r\n      const isPersistentNow = await navigator.storage.persist()\r\n\r\n      if (isPersistentNow) {\r\n        void Alert(i18next.t('main.dataPersistent'))\r\n      }\r\n    } else {\r\n      // eslint-disable-next-line no-console\r\n      console.log(`Storage is persistent! (persistent = ${persistent})`)\r\n    }\r\n  }\r\n\r\n  const saveType = DOMCacheGetOrSet('saveType') as HTMLInputElement\r\n  saveType.checked = localStorage.getItem('copyToClipboard') !== null\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\r\nwindow.addEventListener('load', async () => {\r\n  await i18nInit()\r\n\r\n  const ver = DOMCacheGetOrSet('versionnumber')\r\n  const addZero = (n: number) => `${n}`.padStart(2, '0')\r\n  if (ver instanceof HTMLElement) {\r\n    const textUpdate = !isNaN(lastUpdated.getTime()) ? ` [Last Update: ${addZero(lastUpdated.getHours())}:${addZero(lastUpdated.getMinutes())} UTC ${addZero(lastUpdated.getDate())}-${lastUpdated.toLocaleString('en-us', { month: 'short' })}-${lastUpdated.getFullYear()}].` : ''\r\n    ver.textContent =\r\n            `You're ${testing ? 'testing' : 'playing'} v${version} - The Alternate Reality` +\r\n            textUpdate +\r\n            ` ${testing ? i18next.t('testing.saveInLive') : ''}`\r\n  }\r\n  document.title = `Synergism v${version}`\r\n\r\n  generateEventHandlers()\r\n\r\n  void reloadShit()\r\n\r\n  corruptionButtonsAdd()\r\n  corruptionLoadoutTableCreate()\r\n})\r\n\r\nwindow.addEventListener('unload', () => {\r\n  // This fixes a bug in Chrome (who would have guessed?) that\r\n  // wouldn't properly load elements if the user scrolled down\r\n  // and reloaded a page. Why is this a bug, Chrome? Why would\r\n  // a page that is reloaded be affected by what the user did\r\n  // beforehand? How does anyone use this buggy browser???????\r\n  window.scrollTo(0, 0)\r\n})\r\n", "/**\r\n * A cache for DOM elements\r\n */\r\nexport const DOMCache = new Map<string, HTMLElement>()\r\n\r\nexport const DOMCacheGetOrSet = (id: string) => {\r\n  const cachedEl = DOMCache.get(id)\r\n  if (cachedEl) {\r\n    return cachedEl\r\n  }\r\n\r\n  const el = document.getElementById(id)\r\n\r\n  if (!el) {\r\n    throw new TypeError(`Element with id \"${id}\" was not found on page?`)\r\n  }\r\n\r\n  DOMCache.set(id, el)\r\n  return el\r\n}\r\n", "import Decimal from 'break_infinity.js'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { format } from './Synergism'\r\n\r\nexport const isDecimal = (o: unknown): o is Decimal =>\r\n  o instanceof Decimal ||\r\n    (typeof o === 'object' &&\r\n    o !== null &&\r\n    Object.keys(o).length === 2 &&\r\n    'mantissa' in o &&\r\n    'exponent' in o)\r\n\r\n\r\n/**\r\n * This function calculates the smallest integer increment/decrement that can be applied to a number that is\r\n * guaranteed to affect the numbers value\r\n * @param x\r\n * @returns {number} 1 if x < 2^53 and 2^ceil(log2(x)-53) otherwise\r\n * Since ceil(log2(x)-53) was 53 until 2^53+23, I changed it to floor(log2(x)-52)\r\n * This is incremented to 53 at 2^53-21 and is probably guaranteed thereafter. from by httpsnet\r\n */\r\nexport const smallestInc = (x = 0): number => {\r\n  if (x <= Number.MAX_SAFE_INTEGER) {\r\n    return 1\r\n  } else {\r\n    return 2 ** Math.floor(Math.log2(x) - 52)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the sum of all contents in an array\r\n * @param array {(number|string)[]}\r\n * @returns {number}\r\n */\r\nexport const sumContents = (array: number[]): number => {\r\n  array = Array.isArray(array)\r\n    ? array\r\n    : Object.values(array)\r\n\r\n  return array.reduce((a, b) => a + b, 0)\r\n}\r\n\r\n/**\r\n * Returns the product of all contents in an array\r\n * @param array {number[]}\r\n * @returns {number}\r\n */\r\n// TODO: Add a productContents for Decimal, but callable using productContents...\r\nexport const productContents = (array: number[]): number => array.reduce((a, b) => a * b)\r\n\r\n\r\nexport const sortWithIndices = (toSort: number[]) => {\r\n  return Array\r\n    .from([...toSort.keys()])\r\n    .sort((a, b) => toSort[a] < toSort[b] ? -1 : +(toSort[b] < toSort[a]))\r\n}\r\n\r\n/**\r\n * Identical to @see {DOMCacheGetOrSet} but casts the type.\r\n * @param id {string}\r\n */\r\nexport const getElementById = <T extends HTMLElement>(id: string) => DOMCacheGetOrSet(id) as T\r\n\r\n/**\r\n * Remove leading indents at the beginning of new lines in a template literal.\r\n */\r\nexport const stripIndents = (raw: TemplateStringsArray, ...args: unknown[]): string => {\r\n  const r = String.raw({ raw }, ...args)\r\n\r\n  return r\r\n    .replace(/^[^\\S\\r\\n]+/gm, '')\r\n    .trim()\r\n}\r\n\r\n/**\r\n * Pads an array (a) with param (b) (c) times\r\n * @param a array to be padded\r\n * @param b item to pad to array\r\n * @param length Length to pad array to\r\n */\r\nexport const padArray = <T>(a: T[], b: T, length: number) => {\r\n  for (let i = 0; i < length; i++) {\r\n    if (!(i in a)) {\r\n      a[i] = b\r\n    }\r\n  }\r\n\r\n  return a\r\n}\r\n\r\nexport const updateClassList = (targetElement: string, additions: string[], removals: string[]) => {\r\n  const target = DOMCacheGetOrSet(targetElement)\r\n  for (const addition of additions) {\r\n    target.classList.add(addition)\r\n  }\r\n  for (const removal of removals) {\r\n    target.classList.remove(removal)\r\n  }\r\n}\r\n\r\nexport const btoa = (s: string) => {\r\n  try {\r\n    return window.btoa(s)\r\n  } catch (err) {\r\n    // eslint-disable-next-line no-console\r\n    console.error('An error occurred:', err)\r\n    // e.code = 5\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * Creates a string of the ordinal representation of an integer.\r\n * @param int An integer, which can be negative or positive.\r\n * @returns A string which follows the conventions of ordinal numbers\r\n *          in standard English\r\n */\r\nexport const toOrdinal = (int: number):string => {\r\n  let suffix = 'th'\r\n  if (int % 10 === 1) {\r\n    suffix = (int % 100 === 11)? 'th': 'st'\r\n  }\r\n  if (int % 10 === 2) {\r\n    suffix = (int % 100 === 12)? 'th': 'nd'\r\n  }\r\n  if (int % 10 === 3) {\r\n    suffix = (int % 100 === 13)? 'th': 'rd'\r\n  }\r\n\r\n  return format(int, 0, true)+suffix\r\n}\r\n\r\nexport const formatMS = (ms: number) => Object.entries({\r\n  d: Math.floor(ms / 86400000),\r\n  h: Math.floor(ms / 3600000) % 24,\r\n  m: Math.floor(ms / 60000) % 60,\r\n  s: Math.floor(ms / 1000) % 60\r\n})\r\n  .filter(f => f[1] > 0)\r\n  .map(t => `${t[1]}${t[0]}`)\r\n  .join(' ') || '0s'\r\n\r\nexport const formatS = (s: number) => {\r\n  return formatMS(1000 * s)\r\n}\r\n\r\nexport const cleanString = (s: string): string => {\r\n  let cleaned = ''\r\n\r\n  for (let i = 0; i < s.length; i++) {\r\n    const code = s.charCodeAt(i)\r\n\r\n    cleaned += code > 255 ? '_' : s[i]\r\n  }\r\n\r\n  return cleaned\r\n}\r\n\r\nexport function assert (condition: unknown): asserts condition {\r\n  if (!condition) {\r\n    throw new TypeError('assertion failed')\r\n  }\r\n}\r\n\r\nexport function limitRange (number: number, min: number, max: number): number {\r\n  if (number < min) {\r\n    return max\r\n  } else if (number > max) {\r\n    return min\r\n  }\r\n\r\n  return number\r\n}\r\n", "import Decimal from 'break_infinity.js'\r\nimport type { GlobalVariables } from './types/Synergism'\r\n\r\nexport enum Upgrade {\r\n     coin = 'coins',\r\n     prestige = 'prestigePoints',\r\n     transcend = 'transcendPoints',\r\n     reincarnation = 'reincarnationPoints',\r\n}\r\n\r\nexport const Globals: GlobalVariables = {\r\n  runediv: [1.5, 2, 3, 5, 8, 1, 1],\r\n  runeexpbase: [1, 4, 9, 16, 1000, 1e75, 1e256],\r\n  runeMaxLvl: 40000,\r\n\r\n  // this shows the logarithm of costs. ex: upgrade one will cost 1e+6 coins, upgrade 2 1e+7, etc.\r\n  upgradeCosts: [0, 6, 7, 8, 10, 12, 20, 25, 30, 35, 45, 55, 75, 110, 150, 200, 250, 500, 750, 1000, 1500,\r\n    2, 3, 4, 5, 6, 7, 10, 13, 20, 30, 150, 400, 800, 1600, 3200, 10000, 20000, 50000, 100000, 200000,\r\n    1, 2, 3, 5, 6, 7, 42, 65, 87, 150, 300, 500, 1000, 1500, 2000, 3000, 6000, 12000, 25000, 75000,\r\n    0, 1, 2, 2, 3, 5, 6, 10, 15, 22, 30, 37, 45, 52, 60, 1900, 2500, 3000, 7482, 21397,\r\n    3, 6, 9, 12, 15, 20, 30, 6, 8, 8, 10, 13, 60, 1, 2, 4, 8, 16, 25, 40,\r\n    12, 16, 20, 30, 50, 500, 1250, 5000, 25000, 125000, 1500, 7500, 30000, 150000, 1000000, 250, 1000, 5000, 25000, 125000,\r\n    1e3, 1e6, 1e9, 1e12, 1e15],\r\n\r\n  // Mega list of Variables to be used elsewhere\r\n  crystalUpgradesCost: [6, 15, 20, 40, 100, 200, 500, 1000],\r\n  crystalUpgradeCostIncrement: [8, 15, 20, 40, 100, 200, 500, 1000],\r\n  researchBaseCosts: [1e200,\r\n    1, 1, 1, 1, 1,\r\n    1, 1e2, 1e4, 1e6, 1e8,\r\n    2, 2e2, 2e4, 2e6, 2e8,\r\n    4e4, 4e8, 10, 1e5, 1e9,\r\n    100, 100, 1e4, 2e3, 2e5,\r\n    40, 200, 50, 5000, 20000000,\r\n    777, 7777, 50000, 500000, 5000000,\r\n    2e3, 2e6, 2e9, 1e5, 1e9,\r\n    1, 1, 5, 25, 125,\r\n    2, 5, 320, 1280, 2.5e9,\r\n    10, 2e3, 4e5, 8e7, 2e9,\r\n    5, 400, 1e4, 3e6, 9e8,\r\n    100, 2500, 100, 2000, 2e5,\r\n    1, 20, 3e3, 4e5, 5e7,\r\n    10, 40, 160, 1000, 10000,\r\n    4e9, 7e9, 1e10, 1.2e10, 1.5e10,\r\n    1e12, 1e13, 3e12, 2e13, 2e13,\r\n    2e14, 6e14, 2e15, 6e15, 2e16,\r\n    1e16, 2e16, 2e17, 4e17, 1e18,\r\n    1e13, 1e14, 1e15, 7.777e18, 7.777e20,\r\n    1e16, 3e16, 1e17, 3e17, 1e20,\r\n    1e18, 3e18, 1e19, 3e19, 1e20,\r\n    1e20, 2e20, 4e20, 8e20, 1e21,\r\n    2e21, 4e21, 8e21, 2e22, 4e22,\r\n    3.2e21, 2e23, 4e23, 1e21, 7.777e32,\r\n    5e8, 5e12, 5e16, 5e20, 5e24, /*ascension tier */\r\n    1e25, 2e25, 4e25, 8e25, 1e26,\r\n    4e26, 8e26, 1e27, 2e27, 1e28,\r\n    5e9, 5e15, 5e21, 5e27, 1e28, /*challenge 11 tier */\r\n    1e29, 2e29, 4e29, 8e29, 1e27,\r\n    2e30, 4e30, 8e30, 1e31, 2e31,\r\n    5e31, 1e32, 2e32, 4e32, 8e32, /*challenge 12 tier */\r\n    1e33, 2e33, 4e33, 8e33, 1e34,\r\n    3e34, 1e35, 3e35, 6e35, 1e36,\r\n    3e36, 1e37, 3e37, 1e38, 3e38, /*challenge 13 tier */\r\n    1e39, 3e39, 1e40, 3e40, 1e50,\r\n    3e41, 1e42, 3e42, 6e42, 1e43,\r\n    3e43, 1e44, 3e44, 1e45, 3e45, /*challenge 14 tier */\r\n    2e46, 6e46, 2e47, 6e47, 1e64,\r\n    6e48, 2e49, 1e50, 1e51, 4e56\r\n  ],\r\n\r\n  researchMaxLevels: [0, 1, 1, 1, 1, 1,\r\n    10, 10, 10, 10, 10,\r\n    10, 10, 10, 10, 10,\r\n    10, 10, 1, 1, 1,\r\n    25, 25, 25, 20, 20,\r\n    10, 10, 10, 10, 10,\r\n    12, 12, 10, 10, 10,\r\n    10, 10, 10, 1, 1,\r\n    1, 1, 1, 1, 1,\r\n    1, 1, 1, 1, 1,\r\n    10, 10, 10, 10, 10,\r\n    20, 20, 20, 20, 20,\r\n    1, 5, 4, 5, 5,\r\n    10, 10, 10, 10, 10,\r\n    1, 1, 1, 1, 1,\r\n    10, 50, 50, 50, 50,\r\n    10, 1, 20, 20, 20,\r\n    20, 20, 20, 20, 10,\r\n    20, 20, 20, 20, 1,\r\n    20, 5, 5, 3, 2,\r\n    10, 10, 10, 10, 1,\r\n    10, 10, 20, 25, 25,\r\n    50, 50, 50, 50, 100,\r\n    10, 10, 10, 100, 100,\r\n    25, 25, 25, 1, 5,\r\n    10, 10, 10, 10, 1,\r\n    10, 10, 10, 1, 1,\r\n    25, 25, 25, 15, 1,\r\n    10, 10, 10, 10, 1,\r\n    10, 1, 6, 10, 1,\r\n    25, 25, 1, 15, 1,\r\n    10, 10, 10, 1, 1,\r\n    10, 10, 10, 10, 1,\r\n    25, 25, 25, 15, 1,\r\n    10, 10, 10, 1, 1,\r\n    10, 3, 6, 10, 5,\r\n    25, 25, 1, 15, 1,\r\n    20, 20, 20, 1, 1,\r\n    20, 1, 50, 50, 10,\r\n    25, 25, 25, 15, 100000\r\n  ],\r\n\r\n  ticker: 0,\r\n\r\n  costDivisor: 1,\r\n\r\n  freeAccelerator: 0,\r\n  totalAccelerator: 0,\r\n  freeAcceleratorBoost: 0,\r\n  totalAcceleratorBoost: 0,\r\n  acceleratorPower: 1.10,\r\n  acceleratorEffect: new Decimal(1),\r\n  acceleratorEffectDisplay: new Decimal(1),\r\n  generatorPower: new Decimal(1),\r\n\r\n  freeMultiplier: 0,\r\n  totalMultiplier: 0,\r\n  multiplierPower: 2,\r\n  multiplierEffect: new Decimal(1),\r\n  challengeOneLog: 3,\r\n  freeMultiplierBoost: 0,\r\n  totalMultiplierBoost: 0,\r\n\r\n  globalCoinMultiplier: new Decimal(1),\r\n  totalCoinOwned: 0,\r\n  prestigeMultiplier: new Decimal(1),\r\n  buildingPower: 1,\r\n  reincarnationMultiplier: new Decimal(1),\r\n\r\n  coinOneMulti: new Decimal(1),\r\n  coinTwoMulti: new Decimal(1),\r\n  coinThreeMulti: new Decimal(1),\r\n  coinFourMulti: new Decimal(1),\r\n  coinFiveMulti: new Decimal(1),\r\n\r\n  globalCrystalMultiplier: new Decimal(1),\r\n  globalMythosMultiplier: new Decimal(0.01),\r\n  grandmasterMultiplier: new Decimal(1),\r\n\r\n  atomsMultiplier: new Decimal(1),\r\n\r\n  mythosBuildingPower: 1,\r\n  challengeThreeMultiplier: new Decimal(1),\r\n  totalMythosOwned: 0,\r\n\r\n  prestigePointGain: new Decimal(0),\r\n  challengeFivePower: 1 / 3,\r\n\r\n  transcendPointGain: new Decimal(0),\r\n  reincarnationPointGain: new Decimal(0),\r\n\r\n  produceFirst: new Decimal(0),\r\n  produceSecond: new Decimal(0),\r\n  produceThird: new Decimal(0),\r\n  produceFourth: new Decimal(0),\r\n  produceFifth: new Decimal(0),\r\n  produceTotal: new Decimal(0),\r\n\r\n  produceFirstDiamonds: new Decimal(0),\r\n  produceSecondDiamonds: new Decimal(0),\r\n  produceThirdDiamonds: new Decimal(0),\r\n  produceFourthDiamonds: new Decimal(0),\r\n  produceFifthDiamonds: new Decimal(0),\r\n  produceDiamonds: new Decimal(0),\r\n\r\n  produceFirstMythos: new Decimal(0),\r\n  produceSecondMythos: new Decimal(0),\r\n  produceThirdMythos: new Decimal(0),\r\n  produceFourthMythos: new Decimal(0),\r\n  produceFifthMythos: new Decimal(0),\r\n  produceMythos: new Decimal(0),\r\n\r\n  produceFirstParticles: new Decimal(0),\r\n  produceSecondParticles: new Decimal(0),\r\n  produceThirdParticles: new Decimal(0),\r\n  produceFourthParticles: new Decimal(0),\r\n  produceFifthParticles: new Decimal(0),\r\n  produceParticles: new Decimal(0),\r\n\r\n  producePerSecond: new Decimal(0),\r\n  producePerSecondDiamonds: new Decimal(0),\r\n  producePerSecondMythos: new Decimal(0),\r\n  producePerSecondParticles: new Decimal(0),\r\n\r\n  uFourteenMulti: new Decimal(1),\r\n  uFifteenMulti: new Decimal(1),\r\n  tuSevenMulti: 1,\r\n  currentTab: 'buildings',\r\n\r\n  researchfiller1: 'Hover over the grid to get details about researches!',\r\n  researchfiller2: 'Level: ',\r\n\r\n  ordinals: ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth', 'ninth', 'tenth', 'eleventh', 'twelfth', 'thirteenth', 'fourteenth', 'fifteenth', 'sixteenth', 'seventeenth', 'eighteenth', 'nineteenth', 'twentieth'] as const,\r\n  cardinals: ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen', 'twenty', 'twentyone', 'twentytwo', 'twentythree', 'twentyfour', 'twentyfive', 'twentysix', 'twentyseven', 'twentyeight', 'twentynine', 'thirty', 'thirtyone', 'thirtytwo', 'thirtythree', 'thirtyfour'],\r\n\r\n  challengeBaseRequirements: [10, 20, 60, 100, 200, 125, 500, 7500, 2.0e8, 3.5e9],\r\n\r\n  prestigeamount: 1,\r\n  taxdivisor: new Decimal('1'),\r\n  taxdivisorcheck: new Decimal('1'),\r\n  runemultiplierincrease: {\r\n    one: 1,\r\n    two: 1,\r\n    three: 1,\r\n    four: 1,\r\n    five: 1\r\n  },\r\n\r\n  mythosupgrade13: new Decimal('1'),\r\n  mythosupgrade14: new Decimal('1'),\r\n  mythosupgrade15: new Decimal('1'),\r\n  challengefocus: 0,\r\n\r\n  maxexponent: 10000,\r\n\r\n  effectiveLevelMult: 1,\r\n  optimalOfferingTimer: 600,\r\n  optimalObtainiumTimer: 3600,\r\n\r\n  runeSum: 0,\r\n\r\n  globalAntMult: new Decimal('1'),\r\n  antMultiplier: new Decimal('1'),\r\n\r\n  antOneProduce: new Decimal('1'),\r\n  antTwoProduce: new Decimal('1'),\r\n  antThreeProduce: new Decimal('1'),\r\n  antFourProduce: new Decimal('1'),\r\n  antFiveProduce: new Decimal('1'),\r\n  antSixProduce: new Decimal('1'),\r\n  antSevenProduce: new Decimal('1'),\r\n  antEightProduce: new Decimal('1'),\r\n\r\n  antCostGrowth: [1e41, 3, 10, 1e2, 1e4, 1e8, 1e16, 1e32],\r\n\r\n  antUpgradeBaseCost: [100, 100, 1000, 1000, 1e5, 1e6, 1e8, 1e11, 1e15, 1e20, 1e40, 1e100],\r\n  antUpgradeCostIncreases: [10, 10, 10, 10, 100, 100, 100, 100, 1000, 1000, 1000, 1e100],\r\n\r\n  bonusant1: 0,\r\n  bonusant2: 0,\r\n  bonusant3: 0,\r\n  bonusant4: 0,\r\n  bonusant5: 0,\r\n  bonusant6: 0,\r\n  bonusant7: 0,\r\n  bonusant8: 0,\r\n  bonusant9: 0,\r\n  bonusant10: 0,\r\n  bonusant11: 0,\r\n  bonusant12: 0,\r\n\r\n  rune1level: 1,\r\n  rune2level: 1,\r\n  rune3level: 1,\r\n  rune4level: 1,\r\n  rune5level: 1,\r\n  rune1Talisman: 0,\r\n  rune2Talisman: 0,\r\n  rune3Talisman: 0,\r\n  rune4Talisman: 0,\r\n  rune5Talisman: 0,\r\n\r\n\r\n  talisman1Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman2Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman3Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman4Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman5Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman6Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman7Effect: [null, 0, 0, 0, 0, 0],\r\n\r\n  talisman6Power: 0,\r\n  talisman7Quarks: 0,\r\n\r\n  runescreen: 'runes',\r\n  settingscreen: 'settings',\r\n\r\n  talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24],\r\n  talismanResourceOfferingCosts: [100, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9],\r\n\r\n\r\n  talismanLevelCostMultiplier: [1, 4, 1e4, 1e8, 1e13, 10, 100],\r\n\r\n  talismanPositiveModifier: [null, 0.75, 1.5, 2.25, 3, 3.75, 4.5],\r\n  talismanNegativeModifier: [null, 0, 0, 0, 0, 0, 0],\r\n\r\n  commonTalismanEnhanceCost: [null, 0, 3000, 1000, 0, 0, 0, 0],\r\n  uncommonTalismanEnchanceCost: [null, 0, 10000, 3000, 1000, 0, 0, 0],\r\n  rareTalismanEnchanceCost: [null, 0, 100000, 20000, 2000, 500, 0, 0],\r\n  epicTalismanEnhanceCost: [null, 0, 2e6, 2e5, 2e4, 2000, 1000, 0],\r\n  legendaryTalismanEnchanceCost: [null, 0, 4e7, 2e6, 1e5, 20000, 2500, 200],\r\n  mythicalTalismanEnchanceCost: [null, 0, 0, 0, 0, 0, 0, 0],\r\n\r\n  talismanRespec: 1,\r\n\r\n  obtainiumGain: 0,\r\n\r\n  mirrorTalismanStats: [null, 1, 1, 1, 1, 1],\r\n  antELO: 0,\r\n  effectiveELO: 0,\r\n\r\n  timeWarp: false,\r\n\r\n  blessingMultiplier: 1,\r\n  spiritMultiplier: 1,\r\n  runeBlessings: [0, 0, 0, 0, 0, 0],\r\n  runeSpirits: [0, 0, 0, 0, 0, 0],\r\n\r\n  effectiveRuneBlessingPower: [0, 0, 0, 0, 0, 0],\r\n  effectiveRuneSpiritPower: [0, 0, 0, 0, 0, 0],\r\n\r\n  blessingBaseCost: 1e6,\r\n  spiritBaseCost: 1e20,\r\n\r\n  triggerChallenge: 0,\r\n\r\n  prevReductionValue: -1,\r\n\r\n  buildingSubTab: 'coin',\r\n  //1,000 of each before Diminishing Returns\r\n  blessingbase: [null, 1 / 500, 1 / 5000, 1 / 2000, 1 / 750, 1 / 200, 1 / 10000, 1 / 5000, 1 / 10, 1 / 10000, 1 / 1000],\r\n  blessingDRPower: [null, 1 / 3, 1 / 3, 2 / 3, 1 / 2, 2 / 3, 2, 1 / 3, 1 / 3, 1 / 16, 1 / 16],\r\n  giftbase: [1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\r\n  giftDRPower: [1 / 6, 1 / 6, 1 / 3, 1 / 4, 1 / 3, 1, 1 / 6, 1 / 6, 1 / 32, 1 / 32],\r\n  benedictionbase: [null, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\r\n  benedictionDRPower: [null, 1 / 12, 1 / 12, 1 / 6, 1 / 8, 1 / 6, 1 / 2, 1 / 12, 1 / 12, 1 / 64, 1 / 64],\r\n  //10 Million of each before Diminishing returns on first 3, 200k for second, and 10k for the last few\r\n  platonicCubeBase: [2/4e6, 1.5/4e6, 1/4e6, 1/8e4, 1/1e4, 1/1e5, 1/1e4, 1/1e4],\r\n  platonicDRPower: [1/5, 1/5, 1/5, 1/5, 1/16, 1/16, 1/4, 1/8],\r\n\r\n  cubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  tesseractBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  hypercubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  platonicBonusMultiplier: [1, 1, 1, 1, 1, 1, 1, 1],\r\n\r\n  autoOfferingCounter: 0,\r\n  researchOrderByCost: [],\r\n\r\n  viscosityPower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1, 0.05, 0, 0, 0],\r\n  lazinessMultiplier: [1, 1 / 3, 1 / 10, 1 / 40, 1 / 200, 1 / 1e5, 1 / 1e7, 1 / 1e10, 1/1e13, 1/1e16, 1/1e20, 1/1e25, 1/1e35, 1/1e50, 1/1e65, 1/1e80, 1/1e100],\r\n  hyperchallengedMultiplier: [1, 1.2, 1.5, 1.7, 3, 5, 8, 13, 21, 34, 55, 100, 400, 1600, 7777, 18888, 88888],\r\n  illiteracyPower: [1, 0.8, 0.7, 0.6, 0.5, 0.3, 0.2, 0.15, 0.10, 0.06, 0.04, 0.02, 0.01, 0.005, 0, 0, 0],\r\n  deflationMultiplier: [1, 0.3, 0.1, 0.03, 0.01, 1/1e6, 1/1e8, 1/1e10, 1/1e12, 1/1e15, 1/1e18, 1/1e25, 1/1e35, 1/1e50, 1/1e77, 0, 0],\r\n  extinctionMultiplier: [1, 0.92, 0.86, 0.8, 0.74, 0.65, 0.55, 0.5, 0.45, 0.4, 0.35, 0.3, 0.1, 0, 0, 0, 0],\r\n  droughtMultiplier: [1, 5, 25, 200, 1e4, 1e7, 1e11, 1e16, 1e22, 1e30, 1e40, 1e55, 1e80, 1e120, 1e177, 1e200, 1e250],\r\n  financialcollapsePower: [1, 0.9, 0.7, 0.6, 0.5, 0.37, 0.30, 0.23, 0.18, 0.15, 0.12, 0.09, 0.03, 0.01, 0.007, 0.0007, 0.00007],\r\n\r\n  corruptionPointMultipliers: [1, 3, 4, 5, 6, 7, 7.75, 8.5, 9.25, 10, 10.75, 11.5, 12.25, 13, 16, 20, 25, 33, 35],\r\n  ascendBuildingProduction: {\r\n    first: new Decimal('0'),\r\n    second: new Decimal('0'),\r\n    third: new Decimal('0'),\r\n    fourth: new Decimal('0'),\r\n    fifth: new Decimal('0')\r\n  },\r\n  freeUpgradeAccelerator: 0,\r\n  freeUpgradeMultiplier: 0,\r\n\r\n  acceleratorMultiplier: 1,\r\n  multiplierMultiplier: 1,\r\n\r\n  constUpgradeCosts: [null, 1, 13, 17, 237, 316, 4216, 5623, 74989, 1e10, 1e24],\r\n\r\n  globalConstantMult: new Decimal('1'),\r\n  autoTalismanTimer: 0,\r\n\r\n  autoChallengeTimerIncrement: 0,\r\n  corruptionTrigger: 1,\r\n\r\n  challenge15Rewards: {\r\n    cube1: 1,\r\n    ascensions: 1,\r\n    coinExponent: 1,\r\n    taxes: 1,\r\n    obtainium: 1,\r\n    offering: 1,\r\n    accelerator: 1,\r\n    multiplier: 1,\r\n    runeExp: 1,\r\n    runeBonus: 1,\r\n    cube2: 1,\r\n    transcendChallengeReduction: 1,\r\n    reincarnationChallengeReduction: 1,\r\n    antSpeed: 1,\r\n    bonusAntLevel: 1,\r\n    cube3: 1,\r\n    talismanBonus: 1,\r\n    globalSpeed: 1,\r\n    blessingBonus: 1,\r\n    constantBonus: 1,\r\n    cube4: 1,\r\n    spiritBonus: 1,\r\n    score: 1,\r\n    quarks: 1,\r\n    hepteractUnlocked: 0,\r\n    cube5: 1,\r\n    powder: 1,\r\n    exponent: 1,\r\n    freeOrbs: 0,\r\n    ascensionSpeed: 1\r\n  },\r\n\r\n  autoResetTimers: {\r\n    prestige: 0,\r\n    transcension: 0,\r\n    reincarnation: 0,\r\n    ascension: 0\r\n  },\r\n\r\n  timeMultiplier: 1,\r\n  upgradeMultiplier: 1,\r\n\r\n  historyCountMax: 20,\r\n\r\n  isEvent: false,\r\n  shopEnhanceVision: false,\r\n\r\n  // talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24]\r\n  // talismanResourceOfferingCosts: [0, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9]\r\n\r\n  eventClicked: false,\r\n\r\n  ambrosiaTimer: 0,\r\n  TIME_PER_AMBROSIA: 600\r\n}\r\n\r\nexport const blankGlobals = { ...Globals }\r\n", "// EventTarget is lacking.\r\nimport EventEmitter from 'eventemitter3'\r\nimport type { SynergismEvents } from './types/Synergism'\r\n\r\nexport const Synergism = new EventEmitter<SynergismEvents>()\r\n", "export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}", "export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}", "export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}", "export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}", "import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}", "export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}", "export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}", "export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}", "export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}", "import _typeof from '@babel/runtime/helpers/esm/typeof';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _toArray from '@babel/runtime/helpers/esm/toArray';\n\nfunction ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$6(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar consoleLogger = {\n  type: 'logger',\n  log: function log(args) {\n    this.output('log', args);\n  },\n  warn: function warn(args) {\n    this.output('warn', args);\n  },\n  error: function error(args) {\n    this.output('error', args);\n  },\n  output: function output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\nvar Logger = function () {\n  function Logger(concreteLogger) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Logger);\n    this.init(concreteLogger, options);\n  }\n  _createClass(Logger, [{\n    key: \"init\",\n    value: function init(concreteLogger) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.prefix = options.prefix || 'i18next:';\n      this.logger = concreteLogger || consoleLogger;\n      this.options = options;\n      this.debug = options.debug;\n    }\n  }, {\n    key: \"setDebug\",\n    value: function setDebug(bool) {\n      this.debug = bool;\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return this.forward(args, 'log', '', true);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return this.forward(args, 'warn', '', true);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return this.forward(args, 'error', '');\n    }\n  }, {\n    key: \"deprecate\",\n    value: function deprecate() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n  }, {\n    key: \"forward\",\n    value: function forward(args, lvl, prefix, debugOnly) {\n      if (debugOnly && !this.debug) return null;\n      if (typeof args[0] === 'string') args[0] = \"\".concat(prefix).concat(this.prefix, \" \").concat(args[0]);\n      return this.logger[lvl](args);\n    }\n  }, {\n    key: \"create\",\n    value: function create(moduleName) {\n      return new Logger(this.logger, _objectSpread$6(_objectSpread$6({}, {\n        prefix: \"\".concat(this.prefix, \":\").concat(moduleName, \":\")\n      }), this.options));\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(options) {\n      options = options || this.options;\n      options.prefix = options.prefix || this.prefix;\n      return new Logger(this.logger, options);\n    }\n  }]);\n  return Logger;\n}();\nvar baseLogger = new Logger();\n\nvar EventEmitter = function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n    this.observers = {};\n  }\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(events, listener) {\n      var _this = this;\n      events.split(' ').forEach(function (event) {\n        _this.observers[event] = _this.observers[event] || [];\n        _this.observers[event].push(listener);\n      });\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      if (!this.observers[event]) return;\n      if (!listener) {\n        delete this.observers[event];\n        return;\n      }\n      this.observers[event] = this.observers[event].filter(function (l) {\n        return l !== listener;\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (this.observers[event]) {\n        var cloned = [].concat(this.observers[event]);\n        cloned.forEach(function (observer) {\n          observer.apply(void 0, args);\n        });\n      }\n      if (this.observers['*']) {\n        var _cloned = [].concat(this.observers['*']);\n        _cloned.forEach(function (observer) {\n          observer.apply(observer, [event].concat(args));\n        });\n      }\n    }\n  }]);\n  return EventEmitter;\n}();\n\nfunction defer() {\n  var res;\n  var rej;\n  var promise = new Promise(function (resolve, reject) {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(function (m) {\n    if (s[m]) t[m] = s[m];\n  });\n}\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n    var key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n  }\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift())\n  };\n}\nfunction setPath(object, path, newValue) {\n  var _getLastOfPath = getLastOfPath(object, path, Object),\n    obj = _getLastOfPath.obj,\n    k = _getLastOfPath.k;\n  obj[k] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  var _getLastOfPath2 = getLastOfPath(object, path, Object),\n    obj = _getLastOfPath2.obj,\n    k = _getLastOfPath2.k;\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  var _getLastOfPath3 = getLastOfPath(object, path),\n    obj = _getLastOfPath3.obj,\n    k = _getLastOfPath3.k;\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  var value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  for (var prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n}\nfunction regexEscape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, function (s) {\n      return _entityMap[s];\n    });\n  }\n  return data;\n}\nvar isIE10 = typeof window !== 'undefined' && window.navigator && typeof window.navigator.userAgentData === 'undefined' && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;\nvar chars = [' ', ',', '?', '!', ';'];\nfunction looksLikeObjectPath(key, nsSeparator, keySeparator) {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  var possibleChars = chars.filter(function (c) {\n    return nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0;\n  });\n  if (possibleChars.length === 0) return true;\n  var r = new RegExp(\"(\".concat(possibleChars.map(function (c) {\n    return c === '?' ? '\\\\?' : c;\n  }).join('|'), \")\"));\n  var matched = !r.test(key);\n  if (!matched) {\n    var ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n}\n\nfunction ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$5(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$3() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction deepFind(obj, path) {\n  var keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  var paths = path.split(keySeparator);\n  var current = obj;\n  for (var i = 0; i < paths.length; ++i) {\n    if (!current) return undefined;\n    if (typeof current[paths[i]] === 'string' && i + 1 < paths.length) {\n      return undefined;\n    }\n    if (current[paths[i]] === undefined) {\n      var j = 2;\n      var p = paths.slice(i, i + j).join(keySeparator);\n      var mix = current[p];\n      while (mix === undefined && paths.length > i + j) {\n        j++;\n        p = paths.slice(i, i + j).join(keySeparator);\n        mix = current[p];\n      }\n      if (mix === undefined) return undefined;\n      if (mix === null) return null;\n      if (path.endsWith(p)) {\n        if (typeof mix === 'string') return mix;\n        if (p && typeof mix[p] === 'string') return mix[p];\n      }\n      var joinedPath = paths.slice(i + j).join(keySeparator);\n      if (joinedPath) return deepFind(mix, joinedPath, keySeparator);\n      return undefined;\n    }\n    current = current[paths[i]];\n  }\n  return current;\n}\nvar ResourceStore = function (_EventEmitter) {\n  _inherits(ResourceStore, _EventEmitter);\n  var _super = _createSuper$3(ResourceStore);\n  function ResourceStore(data) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    _classCallCheck(this, ResourceStore);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    _this.data = data || {};\n    _this.options = options;\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n    if (_this.options.ignoreJSONStructure === undefined) {\n      _this.options.ignoreJSONStructure = true;\n    }\n    return _this;\n  }\n  _createClass(ResourceStore, [{\n    key: \"addNamespaces\",\n    value: function addNamespaces(ns) {\n      if (this.options.ns.indexOf(ns) < 0) {\n        this.options.ns.push(ns);\n      }\n    }\n  }, {\n    key: \"removeNamespaces\",\n    value: function removeNamespaces(ns) {\n      var index = this.options.ns.indexOf(ns);\n      if (index > -1) {\n        this.options.ns.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(lng, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n      var path = [lng, ns];\n      if (key && typeof key !== 'string') path = path.concat(key);\n      if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n      }\n      var result = getPath(this.data, path);\n      if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n      return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n    }\n  }, {\n    key: \"addResource\",\n    value: function addResource(lng, ns, key, value) {\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        silent: false\n      };\n      var keySeparator = this.options.keySeparator;\n      if (keySeparator === undefined) keySeparator = '.';\n      var path = [lng, ns];\n      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        value = ns;\n        ns = path[1];\n      }\n      this.addNamespaces(ns);\n      setPath(this.data, path, value);\n      if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n  }, {\n    key: \"addResources\",\n    value: function addResources(lng, ns, resources) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        silent: false\n      };\n      for (var m in resources) {\n        if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n          silent: true\n        });\n      }\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"addResourceBundle\",\n    value: function addResourceBundle(lng, ns, resources, deep, overwrite) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n        silent: false\n      };\n      var path = [lng, ns];\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        deep = resources;\n        resources = ns;\n        ns = path[1];\n      }\n      this.addNamespaces(ns);\n      var pack = getPath(this.data, path) || {};\n      if (deep) {\n        deepExtend(pack, resources, overwrite);\n      } else {\n        pack = _objectSpread$5(_objectSpread$5({}, pack), resources);\n      }\n      setPath(this.data, path, pack);\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"removeResourceBundle\",\n    value: function removeResourceBundle(lng, ns) {\n      if (this.hasResourceBundle(lng, ns)) {\n        delete this.data[lng][ns];\n      }\n      this.removeNamespaces(ns);\n      this.emit('removed', lng, ns);\n    }\n  }, {\n    key: \"hasResourceBundle\",\n    value: function hasResourceBundle(lng, ns) {\n      return this.getResource(lng, ns) !== undefined;\n    }\n  }, {\n    key: \"getResourceBundle\",\n    value: function getResourceBundle(lng, ns) {\n      if (!ns) ns = this.options.defaultNS;\n      if (this.options.compatibilityAPI === 'v1') return _objectSpread$5(_objectSpread$5({}, {}), this.getResource(lng, ns));\n      return this.getResource(lng, ns);\n    }\n  }, {\n    key: \"getDataByLanguage\",\n    value: function getDataByLanguage(lng) {\n      return this.data[lng];\n    }\n  }, {\n    key: \"hasLanguageSomeTranslations\",\n    value: function hasLanguageSomeTranslations(lng) {\n      var data = this.getDataByLanguage(lng);\n      var n = data && Object.keys(data) || [];\n      return !!n.find(function (v) {\n        return data[v] && Object.keys(data[v]).length > 0;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.data;\n    }\n  }]);\n  return ResourceStore;\n}(EventEmitter);\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor: function addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle: function handle(processors, value, key, options, translator) {\n    var _this = this;\n    processors.forEach(function (processor) {\n      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nfunction ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$2() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar checkedLoadedFor = {};\nvar Translator = function (_EventEmitter) {\n  _inherits(Translator, _EventEmitter);\n  var _super = _createSuper$2(Translator);\n  function Translator(services) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Translator);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, _assertThisInitialized(_this));\n    _this.options = options;\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n    _this.logger = baseLogger.create('translator');\n    return _this;\n  }\n  _createClass(Translator, [{\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng) {\n      if (lng) this.language = lng;\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(key) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n      if (key === undefined || key === null) {\n        return false;\n      }\n      var resolved = this.resolve(key, options);\n      return resolved && resolved.res !== undefined;\n    }\n  }, {\n    key: \"extractFromKey\",\n    value: function extractFromKey(key, options) {\n      var nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var namespaces = options.ns || this.options.defaultNS || [];\n      var wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n      var seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n      if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n        var m = key.match(this.interpolator.nestingRegexp);\n        if (m && m.length > 0) {\n          return {\n            key: key,\n            namespaces: namespaces\n          };\n        }\n        var parts = key.split(nsSeparator);\n        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n        key = parts.join(keySeparator);\n      }\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      return {\n        key: key,\n        namespaces: namespaces\n      };\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(keys, options, lastKey) {\n      var _this2 = this;\n      if (_typeof(options) !== 'object' && this.options.overloadTranslationOptionHandler) {\n        options = this.options.overloadTranslationOptionHandler(arguments);\n      }\n      if (!options) options = {};\n      if (keys === undefined || keys === null) return '';\n      if (!Array.isArray(keys)) keys = [String(keys)];\n      var returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),\n        key = _this$extractFromKey.key,\n        namespaces = _this$extractFromKey.namespaces;\n      var namespace = namespaces[namespaces.length - 1];\n      var lng = options.lng || this.language;\n      var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n      if (lng && lng.toLowerCase() === 'cimode') {\n        if (appendNamespaceToCIMode) {\n          var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n          if (returnDetails) {\n            resolved.res = \"\".concat(namespace).concat(nsSeparator).concat(key);\n            return resolved;\n          }\n          return \"\".concat(namespace).concat(nsSeparator).concat(key);\n        }\n        if (returnDetails) {\n          resolved.res = key;\n          return resolved;\n        }\n        return key;\n      }\n      var resolved = this.resolve(keys, options);\n      var res = resolved && resolved.res;\n      var resUsedKey = resolved && resolved.usedKey || key;\n      var resExactUsedKey = resolved && resolved.exactUsedKey || key;\n      var resType = Object.prototype.toString.apply(res);\n      var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n      var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n      var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n      var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n      if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n        if (!options.returnObjects && !this.options.returnObjects) {\n          if (!this.options.returnedObjectHandler) {\n            this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n          }\n          var r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, _objectSpread$4(_objectSpread$4({}, options), {}, {\n            ns: namespaces\n          })) : \"key '\".concat(key, \" (\").concat(this.language, \")' returned an object instead of string.\");\n          if (returnDetails) {\n            resolved.res = r;\n            return resolved;\n          }\n          return r;\n        }\n        if (keySeparator) {\n          var resTypeIsArray = resType === '[object Array]';\n          var copy = resTypeIsArray ? [] : {};\n          var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n          for (var m in res) {\n            if (Object.prototype.hasOwnProperty.call(res, m)) {\n              var deepKey = \"\".concat(newKeyToUse).concat(keySeparator).concat(m);\n              copy[m] = this.translate(deepKey, _objectSpread$4(_objectSpread$4({}, options), {\n                joinArrays: false,\n                ns: namespaces\n              }));\n              if (copy[m] === deepKey) copy[m] = res[m];\n            }\n          }\n          res = copy;\n        }\n      } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n        res = res.join(joinArrays);\n        if (res) res = this.extendTranslation(res, keys, options, lastKey);\n      } else {\n        var usedDefault = false;\n        var usedKey = false;\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var hasDefaultValue = Translator.hasDefaultValue(options);\n        var defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n        var defaultValue = options[\"defaultValue\".concat(defaultValueSuffix)] || options.defaultValue;\n        if (!this.isValidLookup(res) && hasDefaultValue) {\n          usedDefault = true;\n          res = defaultValue;\n        }\n        if (!this.isValidLookup(res)) {\n          usedKey = true;\n          res = key;\n        }\n        var missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n        var resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n        var updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n        if (usedKey || usedDefault || updateMissing) {\n          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n          if (keySeparator) {\n            var fk = this.resolve(key, _objectSpread$4(_objectSpread$4({}, options), {}, {\n              keySeparator: false\n            }));\n            if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n          }\n          var lngs = [];\n          var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n            for (var i = 0; i < fallbackLngs.length; i++) {\n              lngs.push(fallbackLngs[i]);\n            }\n          } else if (this.options.saveMissingTo === 'all') {\n            lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n          } else {\n            lngs.push(options.lng || this.language);\n          }\n          var send = function send(l, k, specificDefaultValue) {\n            var defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n            if (_this2.options.missingKeyHandler) {\n              _this2.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n            } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {\n              _this2.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n            }\n            _this2.emit('missingKey', l, namespace, k, res);\n          };\n          if (this.options.saveMissing) {\n            if (this.options.saveMissingPlurals && needsPluralHandling) {\n              lngs.forEach(function (language) {\n                _this2.pluralResolver.getSuffixes(language, options).forEach(function (suffix) {\n                  send([language], key + suffix, options[\"defaultValue\".concat(suffix)] || defaultValue);\n                });\n              });\n            } else {\n              send(lngs, key, defaultValue);\n            }\n          }\n        }\n        res = this.extendTranslation(res, keys, options, resolved, lastKey);\n        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = \"\".concat(namespace, \":\").concat(key);\n        if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n          if (this.options.compatibilityAPI !== 'v1') {\n            res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? \"\".concat(namespace, \":\").concat(key) : key, usedDefault ? res : undefined);\n          } else {\n            res = this.options.parseMissingKeyHandler(res);\n          }\n        }\n      }\n      if (returnDetails) {\n        resolved.res = res;\n        return resolved;\n      }\n      return res;\n    }\n  }, {\n    key: \"extendTranslation\",\n    value: function extendTranslation(res, key, options, resolved, lastKey) {\n      var _this3 = this;\n      if (this.i18nFormat && this.i18nFormat.parse) {\n        res = this.i18nFormat.parse(res, _objectSpread$4(_objectSpread$4({}, this.options.interpolation.defaultVariables), options), resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n          resolved: resolved\n        });\n      } else if (!options.skipInterpolation) {\n        if (options.interpolation) this.interpolator.init(_objectSpread$4(_objectSpread$4({}, options), {\n          interpolation: _objectSpread$4(_objectSpread$4({}, this.options.interpolation), options.interpolation)\n        }));\n        var skipOnVariables = typeof res === 'string' && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n        var nestBef;\n        if (skipOnVariables) {\n          var nb = res.match(this.interpolator.nestingRegexp);\n          nestBef = nb && nb.length;\n        }\n        var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n        if (this.options.interpolation.defaultVariables) data = _objectSpread$4(_objectSpread$4({}, this.options.interpolation.defaultVariables), data);\n        res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n        if (skipOnVariables) {\n          var na = res.match(this.interpolator.nestingRegexp);\n          var nestAft = na && na.length;\n          if (nestBef < nestAft) options.nest = false;\n        }\n        if (options.nest !== false) res = this.interpolator.nest(res, function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          if (lastKey && lastKey[0] === args[0] && !options.context) {\n            _this3.logger.warn(\"It seems you are nesting recursively key: \".concat(args[0], \" in key: \").concat(key[0]));\n            return null;\n          }\n          return _this3.translate.apply(_this3, args.concat([key]));\n        }, options);\n        if (options.interpolation) this.interpolator.reset();\n      }\n      var postProcess = options.postProcess || this.options.postProcess;\n      var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n      if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread$4({\n          i18nResolved: resolved\n        }, options) : options, this);\n      }\n      return res;\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(keys) {\n      var _this4 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var found;\n      var usedKey;\n      var exactUsedKey;\n      var usedLng;\n      var usedNS;\n      if (typeof keys === 'string') keys = [keys];\n      keys.forEach(function (k) {\n        if (_this4.isValidLookup(found)) return;\n        var extracted = _this4.extractFromKey(k, options);\n        var key = extracted.key;\n        usedKey = key;\n        var namespaces = extracted.namespaces;\n        if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && _this4.pluralResolver.shouldUseIntlApi();\n        var needsContextHandling = options.context !== undefined && (typeof options.context === 'string' || typeof options.context === 'number') && options.context !== '';\n        var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);\n        namespaces.forEach(function (ns) {\n          if (_this4.isValidLookup(found)) return;\n          usedNS = ns;\n          if (!checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {\n            checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] = true;\n            _this4.logger.warn(\"key \\\"\".concat(usedKey, \"\\\" for languages \\\"\").concat(codes.join(', '), \"\\\" won't get resolved as namespace \\\"\").concat(usedNS, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n          }\n          codes.forEach(function (code) {\n            if (_this4.isValidLookup(found)) return;\n            usedLng = code;\n            var finalKeys = [key];\n            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {\n              _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n            } else {\n              var pluralSuffix;\n              if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count, options);\n              var zeroSuffix = \"\".concat(_this4.options.pluralSeparator, \"zero\");\n              if (needsPluralHandling) {\n                finalKeys.push(key + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(key + zeroSuffix);\n                }\n              }\n              if (needsContextHandling) {\n                var contextKey = \"\".concat(key).concat(_this4.options.contextSeparator).concat(options.context);\n                finalKeys.push(contextKey);\n                if (needsPluralHandling) {\n                  finalKeys.push(contextKey + pluralSuffix);\n                  if (needsZeroSuffixLookup) {\n                    finalKeys.push(contextKey + zeroSuffix);\n                  }\n                }\n              }\n            }\n            var possibleKey;\n            while (possibleKey = finalKeys.pop()) {\n              if (!_this4.isValidLookup(found)) {\n                exactUsedKey = possibleKey;\n                found = _this4.getResource(code, ns, possibleKey, options);\n              }\n            }\n          });\n        });\n      });\n      return {\n        res: found,\n        usedKey: usedKey,\n        exactUsedKey: exactUsedKey,\n        usedLng: usedLng,\n        usedNS: usedNS\n      };\n    }\n  }, {\n    key: \"isValidLookup\",\n    value: function isValidLookup(res) {\n      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(code, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n      return this.resourceStore.getResource(code, ns, key, options);\n    }\n  }], [{\n    key: \"hasDefaultValue\",\n    value: function hasDefaultValue(options) {\n      var prefix = 'defaultValue';\n      for (var option in options) {\n        if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }]);\n  return Translator;\n}(EventEmitter);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nvar LanguageUtil = function () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      if (p[p.length - 1].toLowerCase() === 'x') return null;\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase();\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n        return p.join('-');\n      }\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isSupportedCode\",\n    value: function isSupportedCode(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n        code = this.getLanguagePartFromCode(code);\n      }\n      return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getBestMatchFromCodes\",\n    value: function getBestMatchFromCodes(codes) {\n      var _this = this;\n      if (!codes) return null;\n      var found;\n      codes.forEach(function (code) {\n        if (found) return;\n        var cleanedLng = _this.formatLanguageCode(code);\n        if (!_this.options.supportedLngs || _this.isSupportedCode(cleanedLng)) found = cleanedLng;\n      });\n      if (!found && this.options.supportedLngs) {\n        codes.forEach(function (code) {\n          if (found) return;\n          var lngOnly = _this.getLanguagePartFromCode(code);\n          if (_this.isSupportedCode(lngOnly)) return found = lngOnly;\n          found = _this.options.supportedLngs.find(function (supportedLng) {\n            if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;\n          });\n        });\n      }\n      if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n      return found;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks[\"default\"] || [];\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n      if (!found) found = fallbacks[\"default\"];\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this2 = this;\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n      var addCode = function addCode(c) {\n        if (!c) return;\n        if (_this2.isSupportedCode(c)) {\n          codes.push(c);\n        } else {\n          _this2.logger.warn(\"rejecting language code not found in supportedLngs: \".concat(c));\n        }\n      };\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this2.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n  return LanguageUtil;\n}();\n\nvar sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nvar _rulesPluralsTypes = {\n  1: function _(n) {\n    return Number(n > 1);\n  },\n  2: function _(n) {\n    return Number(n != 1);\n  },\n  3: function _(n) {\n    return 0;\n  },\n  4: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function _(n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function _(n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function _(n) {\n    return Number(n >= 2);\n  },\n  10: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function _(n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function _(n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function _(n) {\n    return Number(n !== 0);\n  },\n  14: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function _(n) {\n    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);\n  },\n  18: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function _(n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\nvar deprecatedJsonVersions = ['v1', 'v2', 'v3'];\nvar suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nfunction createRules() {\n  var rules = {};\n  sets.forEach(function (set) {\n    set.lngs.forEach(function (l) {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\nvar PluralResolver = function () {\n  function PluralResolver(languageUtils) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, PluralResolver);\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    if ((!this.options.compatibilityJSON || this.options.compatibilityJSON === 'v4') && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n    this.rules = createRules();\n  }\n  _createClass(PluralResolver, [{\n    key: \"addRule\",\n    value: function addRule(lng, obj) {\n      this.rules[lng] = obj;\n    }\n  }, {\n    key: \"getRule\",\n    value: function getRule(code) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (this.shouldUseIntlApi()) {\n        try {\n          return new Intl.PluralRules(code, {\n            type: options.ordinal ? 'ordinal' : 'cardinal'\n          });\n        } catch (_unused) {\n          return;\n        }\n      }\n      return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n    }\n  }, {\n    key: \"needsPlural\",\n    value: function needsPlural(code) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var rule = this.getRule(code, options);\n      if (this.shouldUseIntlApi()) {\n        return rule && rule.resolvedOptions().pluralCategories.length > 1;\n      }\n      return rule && rule.numbers.length > 1;\n    }\n  }, {\n    key: \"getPluralFormsOfKey\",\n    value: function getPluralFormsOfKey(code, key) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.getSuffixes(code, options).map(function (suffix) {\n        return \"\".concat(key).concat(suffix);\n      });\n    }\n  }, {\n    key: \"getSuffixes\",\n    value: function getSuffixes(code) {\n      var _this = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var rule = this.getRule(code, options);\n      if (!rule) {\n        return [];\n      }\n      if (this.shouldUseIntlApi()) {\n        return rule.resolvedOptions().pluralCategories.sort(function (pluralCategory1, pluralCategory2) {\n          return suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2];\n        }).map(function (pluralCategory) {\n          return \"\".concat(_this.options.prepend).concat(pluralCategory);\n        });\n      }\n      return rule.numbers.map(function (number) {\n        return _this.getSuffix(code, number, options);\n      });\n    }\n  }, {\n    key: \"getSuffix\",\n    value: function getSuffix(code, count) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var rule = this.getRule(code, options);\n      if (rule) {\n        if (this.shouldUseIntlApi()) {\n          return \"\".concat(this.options.prepend).concat(rule.select(count));\n        }\n        return this.getSuffixRetroCompatible(rule, count);\n      }\n      this.logger.warn(\"no plural rule found for: \".concat(code));\n      return '';\n    }\n  }, {\n    key: \"getSuffixRetroCompatible\",\n    value: function getSuffixRetroCompatible(rule, count) {\n      var _this2 = this;\n      var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n      var suffix = rule.numbers[idx];\n      if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n        if (suffix === 2) {\n          suffix = 'plural';\n        } else if (suffix === 1) {\n          suffix = '';\n        }\n      }\n      var returnSuffix = function returnSuffix() {\n        return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();\n      };\n      if (this.options.compatibilityJSON === 'v1') {\n        if (suffix === 1) return '';\n        if (typeof suffix === 'number') return \"_plural_\".concat(suffix.toString());\n        return returnSuffix();\n      } else if (this.options.compatibilityJSON === 'v2') {\n        return returnSuffix();\n      } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n        return returnSuffix();\n      }\n      return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n    }\n  }, {\n    key: \"shouldUseIntlApi\",\n    value: function shouldUseIntlApi() {\n      return !deprecatedJsonVersions.includes(this.options.compatibilityJSON);\n    }\n  }]);\n  return PluralResolver;\n}();\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar Interpolator = function () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Interpolator);\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options.interpolation && options.interpolation.format || function (value) {\n      return value;\n    };\n    this.init(options);\n  }\n  _createClass(Interpolator, [{\n    key: \"init\",\n    value: function init() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      var iOpts = options.interpolation;\n      this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n      this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n      this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n      this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n      this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n      this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n      this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;\n      this.resetRegExp();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.options) this.init(this.options);\n    }\n  }, {\n    key: \"resetRegExp\",\n    value: function resetRegExp() {\n      var regexpStr = \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix);\n      this.regexp = new RegExp(regexpStr, 'g');\n      var regexpUnescapeStr = \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);\n      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n      var nestingRegexpStr = \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix);\n      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(str, data, lng, options) {\n      var _this = this;\n      var match;\n      var value;\n      var replaces;\n      var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n      function regexSafe(val) {\n        return val.replace(/\\$/g, '$$$$');\n      }\n      var handleFormat = function handleFormat(key) {\n        if (key.indexOf(_this.formatSeparator) < 0) {\n          var path = getPathWithDefaults(data, defaultData, key);\n          return _this.alwaysFormat ? _this.format(path, undefined, lng, _objectSpread$3(_objectSpread$3(_objectSpread$3({}, options), data), {}, {\n            interpolationkey: key\n          })) : path;\n        }\n        var p = key.split(_this.formatSeparator);\n        var k = p.shift().trim();\n        var f = p.join(_this.formatSeparator).trim();\n        return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, _objectSpread$3(_objectSpread$3(_objectSpread$3({}, options), data), {}, {\n          interpolationkey: k\n        }));\n      };\n      this.resetRegExp();\n      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      var skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n      var todos = [{\n        regex: this.regexpUnescape,\n        safeValue: function safeValue(val) {\n          return regexSafe(val);\n        }\n      }, {\n        regex: this.regexp,\n        safeValue: function safeValue(val) {\n          return _this.escapeValue ? regexSafe(_this.escape(val)) : regexSafe(val);\n        }\n      }];\n      todos.forEach(function (todo) {\n        replaces = 0;\n        while (match = todo.regex.exec(str)) {\n          var matchedVar = match[1].trim();\n          value = handleFormat(matchedVar);\n          if (value === undefined) {\n            if (typeof missingInterpolationHandler === 'function') {\n              var temp = missingInterpolationHandler(str, match, options);\n              value = typeof temp === 'string' ? temp : '';\n            } else if (options && options.hasOwnProperty(matchedVar)) {\n              value = '';\n            } else if (skipOnVariables) {\n              value = match[0];\n              continue;\n            } else {\n              _this.logger.warn(\"missed to pass in variable \".concat(matchedVar, \" for interpolating \").concat(str));\n              value = '';\n            }\n          } else if (typeof value !== 'string' && !_this.useRawValueToEscape) {\n            value = makeString(value);\n          }\n          var safeValue = todo.safeValue(value);\n          str = str.replace(match[0], safeValue);\n          if (skipOnVariables) {\n            todo.regex.lastIndex += value.length;\n            todo.regex.lastIndex -= match[0].length;\n          } else {\n            todo.regex.lastIndex = 0;\n          }\n          replaces++;\n          if (replaces >= _this.maxReplaces) {\n            break;\n          }\n        }\n      });\n      return str;\n    }\n  }, {\n    key: \"nest\",\n    value: function nest(str, fc) {\n      var _this2 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var match;\n      var value;\n      var clonedOptions;\n      function handleHasOptions(key, inheritedOptions) {\n        var sep = this.nestingOptionsSeparator;\n        if (key.indexOf(sep) < 0) return key;\n        var c = key.split(new RegExp(\"\".concat(sep, \"[ ]*{\")));\n        var optionsString = \"{\".concat(c[1]);\n        key = c[0];\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        var matchedSingleQuotes = optionsString.match(/'/g);\n        var matchedDoubleQuotes = optionsString.match(/\"/g);\n        if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n          optionsString = optionsString.replace(/'/g, '\"');\n        }\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = _objectSpread$3(_objectSpread$3({}, inheritedOptions), clonedOptions);\n        } catch (e) {\n          this.logger.warn(\"failed parsing options string in nesting for key \".concat(key), e);\n          return \"\".concat(key).concat(sep).concat(optionsString);\n        }\n        delete clonedOptions.defaultValue;\n        return key;\n      }\n      while (match = this.nestingRegexp.exec(str)) {\n        var formatters = [];\n        clonedOptions = _objectSpread$3({}, options);\n        clonedOptions = clonedOptions.replace && typeof clonedOptions.replace !== 'string' ? clonedOptions.replace : clonedOptions;\n        clonedOptions.applyPostProcessor = false;\n        delete clonedOptions.defaultValue;\n        var doReduce = false;\n        if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n          var r = match[1].split(this.formatSeparator).map(function (elem) {\n            return elem.trim();\n          });\n          match[1] = r.shift();\n          formatters = r;\n          doReduce = true;\n        }\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n        if (value && match[0] === str && typeof value !== 'string') return value;\n        if (typeof value !== 'string') value = makeString(value);\n        if (!value) {\n          this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n          value = '';\n        }\n        if (doReduce) {\n          value = formatters.reduce(function (v, f) {\n            return _this2.format(v, f, options.lng, _objectSpread$3(_objectSpread$3({}, options), {}, {\n              interpolationkey: match[1].trim()\n            }));\n          }, value.trim());\n        }\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n      return str;\n    }\n  }]);\n  return Interpolator;\n}();\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction parseFormatStr(formatStr) {\n  var formatName = formatStr.toLowerCase().trim();\n  var formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    var p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    var optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      var opts = optStr.split(';');\n      opts.forEach(function (opt) {\n        if (!opt) return;\n        var _opt$split = opt.split(':'),\n          _opt$split2 = _toArray(_opt$split),\n          key = _opt$split2[0],\n          rest = _opt$split2.slice(1);\n        var val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n        if (!formatOptions[key.trim()]) formatOptions[key.trim()] = val;\n        if (val === 'false') formatOptions[key.trim()] = false;\n        if (val === 'true') formatOptions[key.trim()] = true;\n        if (!isNaN(val)) formatOptions[key.trim()] = parseInt(val, 10);\n      });\n    }\n  }\n  return {\n    formatName: formatName,\n    formatOptions: formatOptions\n  };\n}\nfunction createCachedFormatter(fn) {\n  var cache = {};\n  return function invokeFormatter(val, lng, options) {\n    var key = lng + JSON.stringify(options);\n    var formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(lng, options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n}\nvar Formatter = function () {\n  function Formatter() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Formatter);\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.NumberFormat(lng, options);\n        return function (val) {\n          return formatter.format(val);\n        };\n      }),\n      currency: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.NumberFormat(lng, _objectSpread$2(_objectSpread$2({}, options), {}, {\n          style: 'currency'\n        }));\n        return function (val) {\n          return formatter.format(val);\n        };\n      }),\n      datetime: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.DateTimeFormat(lng, _objectSpread$2({}, options));\n        return function (val) {\n          return formatter.format(val);\n        };\n      }),\n      relativetime: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.RelativeTimeFormat(lng, _objectSpread$2({}, options));\n        return function (val) {\n          return formatter.format(val, options.range || 'day');\n        };\n      }),\n      list: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.ListFormat(lng, _objectSpread$2({}, options));\n        return function (val) {\n          return formatter.format(val);\n        };\n      })\n    };\n    this.init(options);\n  }\n  _createClass(Formatter, [{\n    key: \"init\",\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n      var iOpts = options.interpolation;\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n    }\n  }, {\n    key: \"add\",\n    value: function add(name, fc) {\n      this.formats[name.toLowerCase().trim()] = fc;\n    }\n  }, {\n    key: \"addCached\",\n    value: function addCached(name, fc) {\n      this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n    }\n  }, {\n    key: \"format\",\n    value: function format(value, _format, lng, options) {\n      var _this = this;\n      var formats = _format.split(this.formatSeparator);\n      var result = formats.reduce(function (mem, f) {\n        var _parseFormatStr = parseFormatStr(f),\n          formatName = _parseFormatStr.formatName,\n          formatOptions = _parseFormatStr.formatOptions;\n        if (_this.formats[formatName]) {\n          var formatted = mem;\n          try {\n            var valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};\n            var l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n            formatted = _this.formats[formatName](mem, l, _objectSpread$2(_objectSpread$2(_objectSpread$2({}, formatOptions), options), valOptions));\n          } catch (error) {\n            _this.logger.warn(error);\n          }\n          return formatted;\n        } else {\n          _this.logger.warn(\"there was no format function for \".concat(formatName));\n        }\n        return mem;\n      }, value);\n      return result;\n    }\n  }]);\n  return Formatter;\n}();\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$1() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction removePending(q, name) {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n}\nvar Connector = function (_EventEmitter) {\n  _inherits(Connector, _EventEmitter);\n  var _super = _createSuper$1(Connector);\n  function Connector(backend, store, services) {\n    var _this;\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    _classCallCheck(this, Connector);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    _this.backend = backend;\n    _this.store = store;\n    _this.services = services;\n    _this.languageUtils = services.languageUtils;\n    _this.options = options;\n    _this.logger = baseLogger.create('backendConnector');\n    _this.waitingReads = [];\n    _this.maxParallelReads = options.maxParallelReads || 10;\n    _this.readingCalls = 0;\n    _this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    _this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    _this.state = {};\n    _this.queue = [];\n    if (_this.backend && _this.backend.init) {\n      _this.backend.init(services, options.backend, options);\n    }\n    return _this;\n  }\n  _createClass(Connector, [{\n    key: \"queueLoad\",\n    value: function queueLoad(languages, namespaces, options, callback) {\n      var _this2 = this;\n      var toLoad = {};\n      var pending = {};\n      var toLoadLanguages = {};\n      var toLoadNamespaces = {};\n      languages.forEach(function (lng) {\n        var hasAllNamespaces = true;\n        namespaces.forEach(function (ns) {\n          var name = \"\".concat(lng, \"|\").concat(ns);\n          if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {\n            _this2.state[name] = 2;\n          } else if (_this2.state[name] < 0) ; else if (_this2.state[name] === 1) {\n            if (pending[name] === undefined) pending[name] = true;\n          } else {\n            _this2.state[name] = 1;\n            hasAllNamespaces = false;\n            if (pending[name] === undefined) pending[name] = true;\n            if (toLoad[name] === undefined) toLoad[name] = true;\n            if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n          }\n        });\n        if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n      });\n      if (Object.keys(toLoad).length || Object.keys(pending).length) {\n        this.queue.push({\n          pending: pending,\n          pendingCount: Object.keys(pending).length,\n          loaded: {},\n          errors: [],\n          callback: callback\n        });\n      }\n      return {\n        toLoad: Object.keys(toLoad),\n        pending: Object.keys(pending),\n        toLoadLanguages: Object.keys(toLoadLanguages),\n        toLoadNamespaces: Object.keys(toLoadNamespaces)\n      };\n    }\n  }, {\n    key: \"loaded\",\n    value: function loaded(name, err, data) {\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      if (err) this.emit('failedLoading', lng, ns, err);\n      if (data) {\n        this.store.addResourceBundle(lng, ns, data);\n      }\n      this.state[name] = err ? -1 : 2;\n      var loaded = {};\n      this.queue.forEach(function (q) {\n        pushPath(q.loaded, [lng], ns);\n        removePending(q, name);\n        if (err) q.errors.push(err);\n        if (q.pendingCount === 0 && !q.done) {\n          Object.keys(q.loaded).forEach(function (l) {\n            if (!loaded[l]) loaded[l] = {};\n            var loadedKeys = q.loaded[l];\n            if (loadedKeys.length) {\n              loadedKeys.forEach(function (ns) {\n                if (loaded[l][ns] === undefined) loaded[l][ns] = true;\n              });\n            }\n          });\n          q.done = true;\n          if (q.errors.length) {\n            q.callback(q.errors);\n          } else {\n            q.callback();\n          }\n        }\n      });\n      this.emit('loaded', loaded);\n      this.queue = this.queue.filter(function (q) {\n        return !q.done;\n      });\n    }\n  }, {\n    key: \"read\",\n    value: function read(lng, ns, fcName) {\n      var _this3 = this;\n      var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n      var callback = arguments.length > 5 ? arguments[5] : undefined;\n      if (!lng.length) return callback(null, {});\n      if (this.readingCalls >= this.maxParallelReads) {\n        this.waitingReads.push({\n          lng: lng,\n          ns: ns,\n          fcName: fcName,\n          tried: tried,\n          wait: wait,\n          callback: callback\n        });\n        return;\n      }\n      this.readingCalls++;\n      var resolver = function resolver(err, data) {\n        _this3.readingCalls--;\n        if (_this3.waitingReads.length > 0) {\n          var next = _this3.waitingReads.shift();\n          _this3.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n        }\n        if (err && data && tried < _this3.maxRetries) {\n          setTimeout(function () {\n            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);\n          }, wait);\n          return;\n        }\n        callback(err, data);\n      };\n      var fc = this.backend[fcName].bind(this.backend);\n      if (fc.length === 2) {\n        try {\n          var r = fc(lng, ns);\n          if (r && typeof r.then === 'function') {\n            r.then(function (data) {\n              return resolver(null, data);\n            })[\"catch\"](resolver);\n          } else {\n            resolver(null, r);\n          }\n        } catch (err) {\n          resolver(err);\n        }\n        return;\n      }\n      return fc(lng, ns, resolver);\n    }\n  }, {\n    key: \"prepareLoading\",\n    value: function prepareLoading(languages, namespaces) {\n      var _this4 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = arguments.length > 3 ? arguments[3] : undefined;\n      if (!this.backend) {\n        this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n        return callback && callback();\n      }\n      if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      var toLoad = this.queueLoad(languages, namespaces, options, callback);\n      if (!toLoad.toLoad.length) {\n        if (!toLoad.pending.length) callback();\n        return null;\n      }\n      toLoad.toLoad.forEach(function (name) {\n        _this4.loadOne(name);\n      });\n    }\n  }, {\n    key: \"load\",\n    value: function load(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {}, callback);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {\n        reload: true\n      }, callback);\n    }\n  }, {\n    key: \"loadOne\",\n    value: function loadOne(name) {\n      var _this5 = this;\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      this.read(lng, ns, 'read', undefined, undefined, function (err, data) {\n        if (err) _this5.logger.warn(\"\".concat(prefix, \"loading namespace \").concat(ns, \" for language \").concat(lng, \" failed\"), err);\n        if (!err && data) _this5.logger.log(\"\".concat(prefix, \"loaded namespace \").concat(ns, \" for language \").concat(lng), data);\n        _this5.loaded(name, err, data);\n      });\n    }\n  }, {\n    key: \"saveMissing\",\n    value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n      var clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : function () {};\n      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n        this.logger.warn(\"did not save key \\\"\".concat(key, \"\\\" as the namespace \\\"\").concat(namespace, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        return;\n      }\n      if (key === undefined || key === null || key === '') return;\n      if (this.backend && this.backend.create) {\n        var opts = _objectSpread$1(_objectSpread$1({}, options), {}, {\n          isUpdate: isUpdate\n        });\n        var fc = this.backend.create.bind(this.backend);\n        if (fc.length < 6) {\n          try {\n            var r;\n            if (fc.length === 5) {\n              r = fc(languages, namespace, key, fallbackValue, opts);\n            } else {\n              r = fc(languages, namespace, key, fallbackValue);\n            }\n            if (r && typeof r.then === 'function') {\n              r.then(function (data) {\n                return clb(null, data);\n              })[\"catch\"](clb);\n            } else {\n              clb(null, r);\n            }\n          } catch (err) {\n            clb(err);\n          }\n        } else {\n          fc(languages, namespace, key, fallbackValue, clb, opts);\n        }\n      }\n      if (!languages || !languages[0]) return;\n      this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n  }]);\n  return Connector;\n}(EventEmitter);\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: true,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (_typeof(args[1]) === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n      if (_typeof(args[2]) === 'object' || _typeof(args[3]) === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng, options) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: true\n    }\n  };\n}\nfunction transformOptions(options) {\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  return options;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction noop() {}\nfunction bindMemberFunctions(inst) {\n  var mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(function (mem) {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n}\nvar I18n = function (_EventEmitter) {\n  _inherits(I18n, _EventEmitter);\n  var _super = _createSuper(I18n);\n  function I18n() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments.length > 1 ? arguments[1] : undefined;\n    _classCallCheck(this, I18n);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    _this.options = transformOptions(options);\n    _this.services = {};\n    _this.logger = baseLogger;\n    _this.modules = {\n      external: []\n    };\n    bindMemberFunctions(_assertThisInitialized(_this));\n    if (callback && !_this.isInitialized && !options.isClone) {\n      if (!_this.options.initImmediate) {\n        _this.init(options, callback);\n        return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n      }\n      setTimeout(function () {\n        _this.init(options, callback);\n      }, 0);\n    }\n    return _this;\n  }\n  _createClass(I18n, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n        if (typeof options.ns === 'string') {\n          options.defaultNS = options.ns;\n        } else if (options.ns.indexOf('translation') < 0) {\n          options.defaultNS = options.ns[0];\n        }\n      }\n      var defOpts = get();\n      this.options = _objectSpread(_objectSpread(_objectSpread({}, defOpts), this.options), transformOptions(options));\n      if (this.options.compatibilityAPI !== 'v1') {\n        this.options.interpolation = _objectSpread(_objectSpread({}, defOpts.interpolation), this.options.interpolation);\n      }\n      if (options.keySeparator !== undefined) {\n        this.options.userDefinedKeySeparator = options.keySeparator;\n      }\n      if (options.nsSeparator !== undefined) {\n        this.options.userDefinedNsSeparator = options.nsSeparator;\n      }\n      function createClassOnDemand(ClassOrObject) {\n        if (!ClassOrObject) return null;\n        if (typeof ClassOrObject === 'function') return new ClassOrObject();\n        return ClassOrObject;\n      }\n      if (!this.options.isClone) {\n        if (this.modules.logger) {\n          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n        } else {\n          baseLogger.init(null, this.options);\n        }\n        var formatter;\n        if (this.modules.formatter) {\n          formatter = this.modules.formatter;\n        } else if (typeof Intl !== 'undefined') {\n          formatter = Formatter;\n        }\n        var lu = new LanguageUtil(this.options);\n        this.store = new ResourceStore(this.options.resources, this.options);\n        var s = this.services;\n        s.logger = baseLogger;\n        s.resourceStore = this.store;\n        s.languageUtils = lu;\n        s.pluralResolver = new PluralResolver(lu, {\n          prepend: this.options.pluralSeparator,\n          compatibilityJSON: this.options.compatibilityJSON,\n          simplifyPluralSuffix: this.options.simplifyPluralSuffix\n        });\n        if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n          s.formatter = createClassOnDemand(formatter);\n          s.formatter.init(s, this.options);\n          this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n        }\n        s.interpolator = new Interpolator(this.options);\n        s.utils = {\n          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n        };\n        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n        s.backendConnector.on('*', function (event) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        if (this.modules.languageDetector) {\n          s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n          if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n        }\n        if (this.modules.i18nFormat) {\n          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n          if (s.i18nFormat.init) s.i18nFormat.init(this);\n        }\n        this.translator = new Translator(this.services, this.options);\n        this.translator.on('*', function (event) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        this.modules.external.forEach(function (m) {\n          if (m.init) m.init(_this2);\n        });\n      }\n      this.format = this.options.interpolation.format;\n      if (!callback) callback = noop;\n      if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n        var codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n      }\n      if (!this.services.languageDetector && !this.options.lng) {\n        this.logger.warn('init: no languageDetector is used and no lng is defined');\n      }\n      var storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n      storeApi.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store;\n          return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);\n        };\n      });\n      var storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n      storeApiChained.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store2;\n          (_this2$store2 = _this2.store)[fcName].apply(_this2$store2, arguments);\n          return _this2;\n        };\n      });\n      var deferred = defer();\n      var load = function load() {\n        var finish = function finish(err, t) {\n          if (_this2.isInitialized && !_this2.initializedStoreOnce) _this2.logger.warn('init: i18next is already initialized. You should call init just once!');\n          _this2.isInitialized = true;\n          if (!_this2.options.isClone) _this2.logger.log('initialized', _this2.options);\n          _this2.emit('initialized', _this2.options);\n          deferred.resolve(t);\n          callback(err, t);\n        };\n        if (_this2.languages && _this2.options.compatibilityAPI !== 'v1' && !_this2.isInitialized) return finish(null, _this2.t.bind(_this2));\n        _this2.changeLanguage(_this2.options.lng, finish);\n      };\n      if (this.options.resources || !this.options.initImmediate) {\n        load();\n      } else {\n        setTimeout(load, 0);\n      }\n      return deferred;\n    }\n  }, {\n    key: \"loadResources\",\n    value: function loadResources(language) {\n      var _this3 = this;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var usedCallback = callback;\n      var usedLng = typeof language === 'string' ? language : this.language;\n      if (typeof language === 'function') usedCallback = language;\n      if (!this.options.resources || this.options.partialBundledLanguages) {\n        if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback();\n        var toLoad = [];\n        var append = function append(lng) {\n          if (!lng) return;\n          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);\n          lngs.forEach(function (l) {\n            if (toLoad.indexOf(l) < 0) toLoad.push(l);\n          });\n        };\n        if (!usedLng) {\n          var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n          fallbacks.forEach(function (l) {\n            return append(l);\n          });\n        } else {\n          append(usedLng);\n        }\n        if (this.options.preload) {\n          this.options.preload.forEach(function (l) {\n            return append(l);\n          });\n        }\n        this.services.backendConnector.load(toLoad, this.options.ns, function (e) {\n          if (!e && !_this3.resolvedLanguage && _this3.language) _this3.setResolvedLanguage(_this3.language);\n          usedCallback(e);\n        });\n      } else {\n        usedCallback(null);\n      }\n    }\n  }, {\n    key: \"reloadResources\",\n    value: function reloadResources(lngs, ns, callback) {\n      var deferred = defer();\n      if (!lngs) lngs = this.languages;\n      if (!ns) ns = this.options.ns;\n      if (!callback) callback = noop;\n      this.services.backendConnector.reload(lngs, ns, function (err) {\n        deferred.resolve();\n        callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"use\",\n    value: function use(module) {\n      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n      if (module.type === 'backend') {\n        this.modules.backend = module;\n      }\n      if (module.type === 'logger' || module.log && module.warn && module.error) {\n        this.modules.logger = module;\n      }\n      if (module.type === 'languageDetector') {\n        this.modules.languageDetector = module;\n      }\n      if (module.type === 'i18nFormat') {\n        this.modules.i18nFormat = module;\n      }\n      if (module.type === 'postProcessor') {\n        postProcessor.addPostProcessor(module);\n      }\n      if (module.type === 'formatter') {\n        this.modules.formatter = module;\n      }\n      if (module.type === '3rdParty') {\n        this.modules.external.push(module);\n      }\n      return this;\n    }\n  }, {\n    key: \"setResolvedLanguage\",\n    value: function setResolvedLanguage(l) {\n      if (!l || !this.languages) return;\n      if (['cimode', 'dev'].indexOf(l) > -1) return;\n      for (var li = 0; li < this.languages.length; li++) {\n        var lngInLngs = this.languages[li];\n        if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n        if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n          this.resolvedLanguage = lngInLngs;\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng, callback) {\n      var _this4 = this;\n      this.isLanguageChangingTo = lng;\n      var deferred = defer();\n      this.emit('languageChanging', lng);\n      var setLngProps = function setLngProps(l) {\n        _this4.language = l;\n        _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n        _this4.resolvedLanguage = undefined;\n        _this4.setResolvedLanguage(l);\n      };\n      var done = function done(err, l) {\n        if (l) {\n          setLngProps(l);\n          _this4.translator.changeLanguage(l);\n          _this4.isLanguageChangingTo = undefined;\n          _this4.emit('languageChanged', l);\n          _this4.logger.log('languageChanged', l);\n        } else {\n          _this4.isLanguageChangingTo = undefined;\n        }\n        deferred.resolve(function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n        if (callback) callback(err, function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n      };\n      var setLng = function setLng(lngs) {\n        if (!lng && !lngs && _this4.services.languageDetector) lngs = [];\n        var l = typeof lngs === 'string' ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);\n        if (l) {\n          if (!_this4.language) {\n            setLngProps(l);\n          }\n          if (!_this4.translator.language) _this4.translator.changeLanguage(l);\n          if (_this4.services.languageDetector && _this4.services.languageDetector.cacheUserLanguage) _this4.services.languageDetector.cacheUserLanguage(l);\n        }\n        _this4.loadResources(l, function (err) {\n          done(err, l);\n        });\n      };\n      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n        setLng(this.services.languageDetector.detect());\n      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n        if (this.services.languageDetector.detect.length === 0) {\n          this.services.languageDetector.detect().then(setLng);\n        } else {\n          this.services.languageDetector.detect(setLng);\n        }\n      } else {\n        setLng(lng);\n      }\n      return deferred;\n    }\n  }, {\n    key: \"getFixedT\",\n    value: function getFixedT(lng, ns, keyPrefix) {\n      var _this5 = this;\n      var fixedT = function fixedT(key, opts) {\n        var options;\n        if (_typeof(opts) !== 'object') {\n          for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n            rest[_key3 - 2] = arguments[_key3];\n          }\n          options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n        } else {\n          options = _objectSpread({}, opts);\n        }\n        options.lng = options.lng || fixedT.lng;\n        options.lngs = options.lngs || fixedT.lngs;\n        options.ns = options.ns || fixedT.ns;\n        options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n        var keySeparator = _this5.options.keySeparator || '.';\n        var resultKey;\n        if (options.keyPrefix && Array.isArray(key)) {\n          resultKey = key.map(function (k) {\n            return \"\".concat(options.keyPrefix).concat(keySeparator).concat(k);\n          });\n        } else {\n          resultKey = options.keyPrefix ? \"\".concat(options.keyPrefix).concat(keySeparator).concat(key) : key;\n        }\n        return _this5.t(resultKey, options);\n      };\n      if (typeof lng === 'string') {\n        fixedT.lng = lng;\n      } else {\n        fixedT.lngs = lng;\n      }\n      fixedT.ns = ns;\n      fixedT.keyPrefix = keyPrefix;\n      return fixedT;\n    }\n  }, {\n    key: \"t\",\n    value: function t() {\n      var _this$translator;\n      return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var _this$translator2;\n      return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);\n    }\n  }, {\n    key: \"setDefaultNamespace\",\n    value: function setDefaultNamespace(ns) {\n      this.options.defaultNS = ns;\n    }\n  }, {\n    key: \"hasLoadedNamespace\",\n    value: function hasLoadedNamespace(ns) {\n      var _this6 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!this.isInitialized) {\n        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n        return false;\n      }\n      if (!this.languages || !this.languages.length) {\n        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n        return false;\n      }\n      var lng = this.resolvedLanguage || this.languages[0];\n      var fallbackLng = this.options ? this.options.fallbackLng : false;\n      var lastLng = this.languages[this.languages.length - 1];\n      if (lng.toLowerCase() === 'cimode') return true;\n      var loadNotPending = function loadNotPending(l, n) {\n        var loadState = _this6.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n        return loadState === -1 || loadState === 2;\n      };\n      if (options.precheck) {\n        var preResult = options.precheck(this, loadNotPending);\n        if (preResult !== undefined) return preResult;\n      }\n      if (this.hasResourceBundle(lng, ns)) return true;\n      if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n      return false;\n    }\n  }, {\n    key: \"loadNamespaces\",\n    value: function loadNamespaces(ns, callback) {\n      var _this7 = this;\n      var deferred = defer();\n      if (!this.options.ns) {\n        callback && callback();\n        return Promise.resolve();\n      }\n      if (typeof ns === 'string') ns = [ns];\n      ns.forEach(function (n) {\n        if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);\n      });\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"loadLanguages\",\n    value: function loadLanguages(lngs, callback) {\n      var deferred = defer();\n      if (typeof lngs === 'string') lngs = [lngs];\n      var preloaded = this.options.preload || [];\n      var newLngs = lngs.filter(function (lng) {\n        return preloaded.indexOf(lng) < 0;\n      });\n      if (!newLngs.length) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n      this.options.preload = preloaded.concat(newLngs);\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"dir\",\n    value: function dir(lng) {\n      if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n      if (!lng) return 'rtl';\n      var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n      var languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());\n      return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n    }\n  }, {\n    key: \"cloneInstance\",\n    value: function cloneInstance() {\n      var _this8 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var mergedOptions = _objectSpread(_objectSpread(_objectSpread({}, this.options), options), {\n        isClone: true\n      });\n      var clone = new I18n(mergedOptions);\n      if (options.debug !== undefined || options.prefix !== undefined) {\n        clone.logger = clone.logger.clone(options);\n      }\n      var membersToCopy = ['store', 'services', 'language'];\n      membersToCopy.forEach(function (m) {\n        clone[m] = _this8[m];\n      });\n      clone.services = _objectSpread({}, this.services);\n      clone.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      clone.translator = new Translator(clone.services, clone.options);\n      clone.translator.on('*', function (event) {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n        clone.emit.apply(clone, [event].concat(args));\n      });\n      clone.init(mergedOptions, callback);\n      clone.translator.options = clone.options;\n      clone.translator.backendConnector.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      return clone;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        options: this.options,\n        store: this.store,\n        language: this.language,\n        languages: this.languages,\n        resolvedLanguage: this.resolvedLanguage\n      };\n    }\n  }]);\n  return I18n;\n}(EventEmitter);\n_defineProperty(I18n, \"createInstance\", function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments.length > 1 ? arguments[1] : undefined;\n  return new I18n(options, callback);\n});\nvar instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nvar createInstance = instance.createInstance;\nvar dir = instance.dir;\nvar init = instance.init;\nvar loadResources = instance.loadResources;\nvar reloadResources = instance.reloadResources;\nvar use = instance.use;\nvar changeLanguage = instance.changeLanguage;\nvar getFixedT = instance.getFixedT;\nvar t = instance.t;\nvar exists = instance.exists;\nvar setDefaultNamespace = instance.setDefaultNamespace;\nvar hasLoadedNamespace = instance.hasLoadedNamespace;\nvar loadNamespaces = instance.loadNamespaces;\nvar loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n", "import { format, player } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { Alert, Notification, revealStuff } from './UpdateHTML'\r\nimport { Synergism } from './Events'\r\nimport { sumContents } from './Utility'\r\nimport Decimal from 'break_infinity.js'\r\nimport { CalcCorruptionStuff, calculateTimeAcceleration } from './Calculate'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\nexport const achievementpointvalues = [0,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  2, 8, 10, 2, 8, 10, 10,\r\n  2, 8, 10, 10, 10, 10, 10,\r\n  2, 4, 6, 8, 10, 10, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  10, 10, 10, 10, 10, 10, 10,\r\n  10, 10, 10, 10, 10, 10, 10,\r\n  20, 20, 20, 40, 60, 60, 100,\r\n  20, 20, 40, 40, 60, 60, 100,\r\n  20, 20, 40, 40, 60, 60, 100,\r\n  20, 40, 40, 40, 60, 60, 100,\r\n  40, 40, 40, 60, 60, 100, 100,\r\n  40, 40, 60, 60, 100, 100, 100,\r\n  20, 40, 40, 60, 60, 100, 100,\r\n  40, 60, 100, 60, 100, 100, 40,\r\n  40, 40, 40, 40, 40, 40, 40,\r\n  40, 40, 40, 40, 100, 100, 0,\r\n  50, 75, 75, 75, 100, 100, 150,\r\n  50, 75, 75, 75, 100, 100, 150,\r\n  50, 75, 75, 75, 100, 100, 150,\r\n  10, 10, 20, 20, 30, 40, 50\r\n]\r\n\r\nexport const totalachievementpoints = achievementpointvalues.reduce((a, b) => a + b, 0)\r\n\r\nexport const areward = (i: number): string => {\r\n  // May 22, 2021: Allow achievement bonus values display directly in the description\r\n  // Using areward as const object did not allow ${player object}\r\n\r\n  //Effective score is 3rd index\r\n  const corr = CalcCorruptionStuff()\r\n\r\n  const extra: Record<number, string | Record<string, string>> = {\r\n    118: format(Math.pow(0.9925, player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]), 4),\r\n    169: format(Decimal.log(player.antPoints.add(10), 10), 2),\r\n    174: format(0.4 * Decimal.log(player.antPoints.add(1), 10), 2),\r\n    187: { x: format(Math.max(1, Math.log10(corr[3]+1) - 7), 2), y: format(Math.min(100, player.ascensionCount / 10000), 2) },\r\n    188: format(Math.min(100, player.ascensionCount / 50000), 2),\r\n    189: format(Math.min(200, player.ascensionCount / 2.5e6), 2),\r\n    193: format(Decimal.log(player.ascendShards.add(1), 10) / 4, 2),\r\n    195: format(Math.min(25000, Decimal.log(player.ascendShards.add(1), 10) / 4), 2),\r\n    196: format(Math.min(2000, Decimal.log(player.ascendShards.add(1), 10) / 50), 2),\r\n    202: format(Math.min(200, player.ascensionCount / 5e6), 2),\r\n    216: format(Math.min(200, player.ascensionCount / 1e7), 2),\r\n    223: format(Math.min(200, player.ascensionCount / 13370000), 2),\r\n    240: format(Math.min(1.5, 1 + Math.max(2, Math.log10(calculateTimeAcceleration().mult))/20), 2),\r\n    254: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\r\n    255: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\r\n    256: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\r\n    257: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\r\n    258: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\r\n    262: format(Math.min(10, Math.log10(player.ascensionCount+1)), 2),\r\n    263: format(Math.min(10, Math.log10(player.ascensionCount+1)), 2),\r\n    264: format(Math.min(40, player.ascensionCount / 2e11), 2),\r\n    265: format(Math.min(20, player.ascensionCount / 8e12), 2),\r\n    266: format(Math.min(10, player.ascensionCount / 1e14), 2),\r\n    267: format(Math.min(100, Decimal.log(player.ascendShards.add(1), 10) / 1000), 2),\r\n    270: format(Math.min(100, Decimal.log(player.ascendShards.add(1), 10) / 10000), 2),\r\n    271: format(Math.max(0, Math.min(1, (Decimal.log(player.ascendShards.add(1), 10) - 1e5) / 9e5)), 2, true)\r\n  }\r\n\r\n  const descs: number[] = [\r\n    3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 17, 18, 19,\r\n    20, 21, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35,\r\n    36, 37, 38, 43, 44, 45, 46, 47, 50, 51, 52, 53,\r\n    57, 58, 59, 60, 61, 62, 71, 72, 73, 74, 75, 76,\r\n    77, 78, 79, 80, 82, 84, 85, 86, 87, 89, 91, 92,\r\n    93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106,\r\n    107, 108, 110, 112, 115, 117, 119, 122, 124, 126,\r\n    127, 128, 129, 131, 132, 133, 134, 135, 136, 137,\r\n    140, 141, 147, 171, 172, 173, 176, 177, 178, 179,\r\n    180, 181, 182, 197, 198, 199, 200, 201, 204, 205,\r\n    206, 207, 208, 209, 211, 212, 213, 214, 215, 218,\r\n    219, 220, 221, 222, 250, 251, 253, 259, 260, 261,\r\n    274, 275, 276, 277, 278, 279, 280\r\n  ]\r\n\r\n  if (descs.includes(i) || i in extra) {\r\n    const obj = extra[i]\r\n    const map = typeof obj === 'object' ? obj : { x: obj }\r\n\r\n    return i18next.t(`achievements.rewards.${i}`, map)\r\n  }\r\n\r\n  return ''\r\n}\r\n\r\nexport const achievementAlerts = async (num: number) => {\r\n  if (player.highestSingularityCount === 0) {\r\n    if (num === 36 || num == 38 || num === 255) {\r\n      return Alert(i18next.t(`achievements.alerts.${num}`))\r\n    }\r\n  }\r\n}\r\n//${format(Decimal.log(player.ascendShards.add(1), 10) / 1000, 2)} (log(constant)/1000)%!\r\n\r\n// TODO: clean this up\r\nexport const resetachievementcheck = (i: number) => {\r\n  if (i === 1) {\r\n    if (player.prestigenoaccelerator) {\r\n      achievementaward(60)\r\n    }\r\n    if (player.prestigenomultiplier) {\r\n      achievementaward(57)\r\n    }\r\n    if (player.prestigenocoinupgrades) {\r\n      achievementaward(64)\r\n    }\r\n    if (G.prestigePointGain.gte(1)) {\r\n      achievementaward(36)\r\n\r\n    }\r\n    if (G.prestigePointGain.gte(1e6)) {\r\n      achievementaward(37)\r\n\r\n    }\r\n    if (G.prestigePointGain.gte(1e100)) {\r\n      achievementaward(38)\r\n    }\r\n    if (G.prestigePointGain.gte('1e1000')) {\r\n      achievementaward(39)\r\n\r\n    }\r\n    if (G.prestigePointGain.gte('1e10000')) {\r\n      achievementaward(40)\r\n\r\n    }\r\n    if (G.prestigePointGain.gte('1e77777')) {\r\n      achievementaward(41)\r\n\r\n    }\r\n    if (G.prestigePointGain.gte('1e250000')) {\r\n      achievementaward(42)\r\n\r\n    }\r\n  }\r\n  if (i === 2) {\r\n    if (player.transcendnoaccelerator) {\r\n      achievementaward(61)\r\n    }\r\n    if (player.transcendnomultiplier) {\r\n      achievementaward(58)\r\n    }\r\n    if (player.transcendnocoinupgrades) {\r\n      achievementaward(65)\r\n    }\r\n    if (player.transcendnocoinorprestigeupgrades) {\r\n      achievementaward(66)\r\n    }\r\n    if (G.transcendPointGain.gte(1)) {\r\n      achievementaward(43)\r\n    }\r\n    if (G.transcendPointGain.gte(1e6)) {\r\n      achievementaward(44)\r\n    }\r\n    if (G.transcendPointGain.gte(1e50)) {\r\n      achievementaward(45)\r\n    }\r\n    if (G.transcendPointGain.gte(1e308)) {\r\n      achievementaward(46)\r\n    }\r\n    if (G.transcendPointGain.gte('1e1500')) {\r\n      achievementaward(47)\r\n    }\r\n    if (G.transcendPointGain.gte('1e25000')) {\r\n      achievementaward(48)\r\n    }\r\n    if (G.transcendPointGain.gte('1e100000')) {\r\n      achievementaward(49)\r\n    }\r\n  }\r\n  if (i === 3) {\r\n    if (player.reincarnatenoaccelerator) {\r\n      achievementaward(62)\r\n    }\r\n    if (player.reincarnatenomultiplier) {\r\n      achievementaward(59)\r\n    }\r\n    if (player.reincarnatenocoinupgrades) {\r\n      achievementaward(67)\r\n    }\r\n    if (player.reincarnatenocoinorprestigeupgrades) {\r\n      achievementaward(68)\r\n    }\r\n    if (player.reincarnatenocoinprestigeortranscendupgrades) {\r\n      achievementaward(69)\r\n    }\r\n    if (player.reincarnatenocoinprestigetranscendorgeneratorupgrades) {\r\n      achievementaward(70)\r\n    }\r\n    if (G.reincarnationPointGain.gte(1)) {\r\n      achievementaward(50)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte(1e5)) {\r\n      achievementaward(51)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte(1e30)) {\r\n      achievementaward(52)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte(1e200)) {\r\n      achievementaward(53)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte('1e1500')) {\r\n      achievementaward(54)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte('1e5000')) {\r\n      achievementaward(55)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte('1e7777')) {\r\n      achievementaward(56)\r\n\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Array of [index, bar to get achievement if greater than, achievement number]\r\n */\r\nconst challengeCompletionsBar: [number, number, number][] = [\r\n  [1, 0.5, 78], [1, 2.5, 79], [1, 4.5, 80], [1, 9.5, 81], [1, 19.5, 82], [1, 49.5, 83], [1, 74.5, 84],\r\n  [2, 0.5, 85], [2, 2.5, 86], [2, 4.5, 87], [2, 9.5, 88], [2, 19.5, 89], [2, 49.5, 90], [2, 74.5, 91],\r\n  [3, 0.5, 92], [3, 2.5, 93], [3, 4.5, 94], [3, 9.5, 95], [3, 19.5, 96], [3, 49.5, 97], [3, 74.5, 98],\r\n  [4, 0.5, 99], [4, 2.5, 100], [4, 4.5, 101], [4, 9.5, 102], [4, 19.5, 103], [4, 49.5, 104], [4, 74.5, 105],\r\n  [5, 0.5, 106], [5, 2.5, 107], [5, 4.5, 108], [5, 9.5, 109], [5, 19.5, 110], [5, 49.5, 111], [5, 74.5, 112],\r\n  [6, 0.5, 113], [6, 1.5, 114], [6, 2.5, 115], [6, 4.5, 116], [6, 9.5, 117], [6, 14.5, 118], [6, 24.5, 119],\r\n  [7, 0.5, 120], [7, 1.5, 121], [7, 2.5, 122], [7, 4.5, 123], [7, 9.5, 124], [7, 14.5, 125], [7, 24.5, 126],\r\n  [8, 0.5, 127], [8, 1.5, 128], [8, 2.5, 129], [8, 4.5, 130], [8, 9.5, 131], [8, 19.5, 132], [8, 24.5, 133],\r\n  [9, 0.5, 134], [9, 1.5, 135], [9, 2.5, 136], [9, 4.5, 137], [9, 9.5, 138], [9, 19.5, 139], [9, 24.5, 140],\r\n  [10, 0.5, 141], [10, 1.5, 142], [10, 2.5, 143], [10, 4.5, 144], [10, 9.5, 145], [10, 19.5, 146], [10, 24.5, 147],\r\n  [15, 0.5, 252]\r\n]\r\n\r\nconst challengeCompletionsNotAuto: Record<number, [string, number]> = {\r\n  1: ['1e1000', 75],\r\n  2: ['1e1000', 76],\r\n  3: ['1e99999', 77],\r\n  5: ['1e120000', 63]\r\n}\r\n\r\nexport const challengeachievementcheck = (i: number, auto?: boolean) => {\r\n  const generatorcheck = sumContents(player.upgrades.slice(101, 106))\r\n\r\n  for (const [, bar, ach] of challengeCompletionsBar.filter(([o]) => o === i)) {\r\n    if (player.challengecompletions[i] > bar && player.achievements[ach] < 1) {\r\n      achievementaward(ach)\r\n    }\r\n  }\r\n\r\n  // Challenges 1, 2, 3 check for not buying generators and getting X coins\r\n  // Challenge 5 check for not buying Acc/Acc Boosts and getting 1.00e120,000 coins\r\n  if ([1, 2, 3, 5].includes(i) && !auto) {\r\n    const [gte, ach] = challengeCompletionsNotAuto[i]\r\n    if (i === 5) {\r\n      if (player.coinsThisTranscension.gte(gte) && player.acceleratorBought === 0 && player.acceleratorBoostBought === 0) {\r\n        achievementaward(ach)\r\n      }\r\n    } else if (player.coinsThisTranscension.gte(gte) && generatorcheck === 0) {\r\n      achievementaward(ach)\r\n    }\r\n  }\r\n\r\n  if (i >= 11 && i <= 14) {\r\n    const challengeArray = [0, 1, 2, 3, 5, 10, 20, 30]\r\n    for (let j = 1; j <= 7; j++) {\r\n      if (player.challengecompletions[i] >= challengeArray[j] && player.achievements[119 + 7 * i + j] < 1) {\r\n        achievementaward(119 + 7 * i + j)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (player.challengecompletions[10] >= 50 && i === 11 && player.usedCorruptions[7] >= 5 && player.achievements[247] < 1) {\r\n    achievementaward(247)\r\n  }\r\n}\r\n\r\n// \\) \\{\\n\\s+achievementaward\\(\\d+\\)\\n\\s+\\}\r\n\r\n/**\r\n * Requirements for each building achievement\r\n * @type {(() => boolean)[]}\r\n */\r\nconst buildAchievementReq: (() => boolean)[] = [\r\n  () => (player.firstOwnedCoin >= 1 && player.achievements[1] < 0.5),\r\n  () => (player.firstOwnedCoin >= 10 && player.achievements[2] < 0.5),\r\n  () => (player.firstOwnedCoin >= 100 && player.achievements[3] < 0.5),\r\n  () => (player.firstOwnedCoin >= 1000 && player.achievements[4] < 0.5),\r\n  () => (player.firstOwnedCoin >= 5000 && player.achievements[5] < 0.5),\r\n  () => (player.firstOwnedCoin >= 10000 && player.achievements[6] < 0.5),\r\n  () => (player.firstOwnedCoin >= 20000 && player.achievements[7] < 0.5),\r\n  () => (player.secondOwnedCoin >= 1 && player.achievements[8] < 0.5),\r\n  () => (player.secondOwnedCoin >= 10 && player.achievements[9] < 0.5),\r\n  () => (player.secondOwnedCoin >= 100 && player.achievements[10] < 0.5),\r\n  () => (player.secondOwnedCoin >= 1000 && player.achievements[11] < 0.5),\r\n  () => (player.secondOwnedCoin >= 5000 && player.achievements[12] < 0.5),\r\n  () => (player.secondOwnedCoin >= 10000 && player.achievements[13] < 0.5),\r\n  () => (player.secondOwnedCoin >= 20000 && player.achievements[14] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 1 && player.achievements[15] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 10 && player.achievements[16] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 100 && player.achievements[17] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 1000 && player.achievements[18] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 5000 && player.achievements[19] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 10000 && player.achievements[20] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 20000 && player.achievements[21] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 1 && player.achievements[22] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 10 && player.achievements[23] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 100 && player.achievements[24] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 1000 && player.achievements[25] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 5000 && player.achievements[26] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 10000 && player.achievements[27] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 20000 && player.achievements[28] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 1 && player.achievements[29] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 10 && player.achievements[30] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 66 && player.achievements[31] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 666 && player.achievements[32] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 6666 && player.achievements[33] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 17777 && player.achievements[34] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 42777 && player.achievements[35] < 0.5)\r\n]\r\n\r\nexport const buildingAchievementCheck = () => {\r\n  for (const req of buildAchievementReq) {\r\n    if (req()) {\r\n      const idx = buildAchievementReq.indexOf(req) + 1\r\n      achievementaward(idx)\r\n    }\r\n  }\r\n}\r\n\r\nexport const ascensionAchievementCheck = (i: number, score = 0) => {\r\n  if (i === 1) {\r\n    const ascendCountArray = [0, 1, 2, 10, 100, 1000, 14142, 141421, 1414213, //Column 1\r\n      1e7, 1e8, 2e9, 4e10, 8e11, 1.6e13, 1e14] //Column 2\r\n    for (let j = 1; j <= 7; j++) {\r\n      if (player.ascensionCount >= ascendCountArray[j] && player.achievements[182 + j] < 1) {\r\n        achievementaward(182 + j)\r\n      }\r\n      if (player.ascensionCount >= ascendCountArray[j + 8] && player.achievements[259 + j] < 1) {\r\n        achievementaward(259 + j)\r\n      }\r\n    }\r\n    if (player.ascensionCount >= ascendCountArray[8] && player.achievements[240] < 1) {\r\n      achievementaward(240)\r\n    }\r\n  }\r\n  if (i === 2) {\r\n    const constantArray = [0, 3.14, 1e6, 4.32e10, 6.9e21, 1.509e33, 1e66, '1.8e308', //Column 1\r\n      '1e1000', '1e5000', '1e15000', '1e50000', '1e100000', '1e300000', '1e1000000'] //Column 2\r\n    for (let j = 1; j <= 7; j++) {\r\n      if (player.ascendShards.gte(constantArray[j]) && player.achievements[189 + j] < 1) {\r\n        achievementaward(189 + j)\r\n      }\r\n      if (player.ascendShards.gte(constantArray[j + 7]) && player.achievements[266 + j] < 1) {\r\n        achievementaward(266 + j)\r\n      }\r\n    }\r\n  }\r\n  if (i === 3) {\r\n    const scoreArray = [0, 1e5, 1e6, 1e7, 1e8, 1e9, 5e9, 2.5e10, //Column 1\r\n      1e12, 1e14, 1e17, 2e18, 4e19, 1e21, 1e23] //Column 2\r\n    for (let j = 1; j <= 7; j++) {\r\n      if (score >= scoreArray[j] && player.achievements[224 + j] < 1) {\r\n        achievementaward(224 + j)\r\n      }\r\n\r\n      if (score >= scoreArray[7 + j] && player.achievements[252 + j] < 1) {\r\n        achievementaward(252 + j)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAchievementQuarks = (i: number) => {\r\n  let multiplier = 1\r\n  if (i >= 183) {\r\n    multiplier = 5\r\n  }\r\n  if (i >= 253) {\r\n    multiplier = 40\r\n  }\r\n\r\n  const globalQuarkMultiplier = player.worlds.applyBonus(1)\r\n  let actualMultiplier = multiplier * globalQuarkMultiplier\r\n  if (actualMultiplier > 100) {\r\n    actualMultiplier = Math.pow(100, 0.6) * Math.pow(actualMultiplier, 0.4)\r\n  }\r\n\r\n  return Math.floor(achievementpointvalues[i] * actualMultiplier)\r\n}\r\n\r\nexport const achievementdescriptions = (i: number) => {\r\n  const y = i18next.t(`achievements.descriptions.${i}`, { number: `${i}` })\r\n  const z = player.achievements[i] > 0.5 ? i18next.t('achievements.completed') : ''\r\n  const k = areward(i)\r\n\r\n  DOMCacheGetOrSet('achievementdescription').textContent = y + z\r\n  DOMCacheGetOrSet('achievementreward').textContent = i18next.t('achievements.rewardGainMessage', {\r\n    x: achievementpointvalues[i],\r\n    y: format(getAchievementQuarks(i), 0, true),\r\n    z: k\r\n  })\r\n\r\n  if (player.achievements[i] > 0.5) {\r\n    DOMCacheGetOrSet('achievementdescription').style.color = 'gold'\r\n  } else {\r\n    DOMCacheGetOrSet('achievementdescription').style.color = 'white'\r\n  }\r\n}\r\n\r\nexport const achievementaward = (num: number) => {\r\n  if (player.achievements[num] < 1) {\r\n    if (player.toggles[34]) {\r\n      const description = i18next.t(`achievements.descriptions.${num}`, { number: `${num}` })\r\n      void Notification(i18next.t('achievements.notification', { m: description }))\r\n    }\r\n\r\n    void achievementAlerts(num)\r\n    player.achievementPoints += achievementpointvalues[num]\r\n    player.worlds.add(getAchievementQuarks(num), false)\r\n\r\n    DOMCacheGetOrSet('achievementprogress').textContent = i18next.t('achievements.totalPoints', {\r\n      x: format(player.achievementPoints),\r\n      y: format(totalachievementpoints),\r\n      z: (100 * player.achievementPoints / totalachievementpoints).toPrecision(4)\r\n    })\r\n\r\n    player.achievements[num] = 1\r\n    revealStuff()\r\n  }\r\n\r\n  DOMCacheGetOrSet(`ach${num}`).style.backgroundColor = 'Green'\r\n  Synergism.emit('achievement', num)\r\n}\r\n\r\n", "import { player, format } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { CalcECC } from './Challenges'\r\nimport { calculateRuneLevels } from './Calculate'\r\nimport { achievementaward } from './Achievements'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\nconst talismanResourceCosts = {\r\n  shard: {\r\n    obtainium: 1e13,\r\n    offerings: 1e2,\r\n    name: 'Talisman Shard'\r\n  },\r\n  commonFragment: {\r\n    obtainium: 1e14,\r\n    offerings: 1e4,\r\n    name: 'Common Fragment'\r\n  },\r\n  uncommonFragment: {\r\n    obtainium: 1e16,\r\n    offerings: 1e5,\r\n    name: 'Uncommon Fragment'\r\n  },\r\n  rareFragment: {\r\n    obtainium: 1e18,\r\n    offerings: 1e6,\r\n    name: 'Rare Fragment'\r\n  },\r\n  epicFragment: {\r\n    obtainium: 1e20,\r\n    offerings: 1e7,\r\n    name: 'Epic Fragment'\r\n  },\r\n  legendaryFragment: {\r\n    obtainium: 1e22,\r\n    offerings: 1e8,\r\n    name: 'Legendary Fragment'\r\n  },\r\n  mythicalFragment: {\r\n    obtainium: 1e24,\r\n    offerings: 1e9,\r\n    name: 'Mythical Fragment'\r\n  }\r\n}\r\n\r\nconst num = ['One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven'] as const\r\n\r\nexport const calculateMaxTalismanLevel = (i: number) => {\r\n  let maxLevel = 30 * player.talismanRarity[i]\r\n  maxLevel += 6 * CalcECC('ascension', player.challengecompletions[13])\r\n  maxLevel += Math.floor(player.researches[200] / 400)\r\n\r\n  if (player.cubeUpgrades[67] > 0 && i === 3) {\r\n    maxLevel += 1337\r\n  }\r\n\r\n  return maxLevel\r\n}\r\n\r\nconst getTalismanResourceInfo = (type: keyof typeof talismanResourceCosts, percentage = player.buyTalismanShardPercent) => {\r\n  const obtainiumCost = talismanResourceCosts[type].obtainium\r\n  const offeringCost = talismanResourceCosts[type].offerings\r\n\r\n  const maxBuyObtainium = Math.max(1, Math.floor(player.researchPoints / obtainiumCost))\r\n  const maxBuyOffering = Math.max(1, Math.floor(player.runeshards / (offeringCost)))\r\n  const amountToBuy = Math.max(1, Math.floor(percentage / 100 * Math.min(maxBuyObtainium, maxBuyOffering)))\r\n  const canBuy = (obtainiumCost <= player.researchPoints && offeringCost <= player.runeshards) ? true : false\r\n  return {\r\n    canBuy, //Boolean, if false will not buy any fragments\r\n    buyAmount: amountToBuy, //Integer, will buy as specified above.\r\n    obtainiumCost: obtainiumCost * amountToBuy, //Integer, cost in obtainium to buy (buyAmount) resource\r\n    offeringCost: offeringCost * amountToBuy //Integer, cost in offerings to buy (buyAmount) resource\r\n  }\r\n}\r\n\r\nexport const updateTalismanCostDisplay = (type: keyof typeof talismanResourceCosts | null, percentage = player.buyTalismanShardPercent) => {\r\n  const el = DOMCacheGetOrSet('talismanFragmentCost')\r\n  if (type) {\r\n    const talismanCostInfo = getTalismanResourceInfo(type, percentage)\r\n    const TalismanName = talismanResourceCosts[type].name\r\n\r\n    el.textContent = i18next.t('runes.talismans.costToBuy', {\r\n      name: TalismanName,\r\n      buyAmount: format(talismanCostInfo.buyAmount),\r\n      obtainium: format(talismanCostInfo.obtainiumCost),\r\n      offerings: format(talismanCostInfo.offeringCost)\r\n    })\r\n  } else {\r\n    // Buy All\r\n    el.textContent = i18next.t('runes.talismans.clickBuyEveryType')\r\n  }\r\n}\r\n\r\nexport const toggleTalismanBuy = (i = player.buyTalismanShardPercent) => {\r\n  DOMCacheGetOrSet('talismanTen').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('talismanTwentyFive').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('talismanFifty').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('talismanHundred').style.backgroundColor = ''\r\n  player.buyTalismanShardPercent = i\r\n  let x = 'Ten'\r\n  if (i === 25) {\r\n    x = 'TwentyFive'\r\n  }\r\n  if (i === 50) {\r\n    x = 'Fifty'\r\n  }\r\n  if (i === 100) {\r\n    x = 'Hundred'\r\n  }\r\n\r\n  DOMCacheGetOrSet(`talisman${x}`).style.backgroundColor = 'green'\r\n}\r\n\r\nexport const updateTalismanInventory = () => {\r\n  DOMCacheGetOrSet('talismanShardInventory').textContent = format(player.talismanShards)\r\n  DOMCacheGetOrSet('commonFragmentInventory').textContent = format(player.commonFragments)\r\n  DOMCacheGetOrSet('uncommonFragmentInventory').textContent = format(player.uncommonFragments)\r\n  DOMCacheGetOrSet('rareFragmentInventory').textContent = format(player.rareFragments)\r\n  DOMCacheGetOrSet('epicFragmentInventory').textContent = format(player.epicFragments)\r\n  DOMCacheGetOrSet('legendaryFragmentInventory').textContent = format(player.legendaryFragments)\r\n  DOMCacheGetOrSet('mythicalFragmentInventory').textContent = format(player.mythicalFragments)\r\n}\r\n\r\nexport const buyAllTalismanResources = () => {\r\n  const talismanItemNames = ['shard', 'commonFragment', 'uncommonFragment', 'rareFragment', 'epicFragment', 'legendaryFragment', 'mythicalFragment'] as const\r\n  for (let index = talismanItemNames.length - 1; index >= 0; index--) {\r\n    buyTalismanResources(talismanItemNames[index])\r\n  }\r\n}\r\n\r\nexport const buyTalismanResources = (type: keyof typeof talismanResourceCosts, percentage = player.buyTalismanShardPercent) => {\r\n  const talismanResourcesData = getTalismanResourceInfo(type, percentage)\r\n\r\n  if (talismanResourcesData.canBuy) {\r\n    if (type === 'shard') {\r\n      player.talismanShards += talismanResourcesData.buyAmount\r\n    } else {\r\n      player[`${type}s` as const] += talismanResourcesData.buyAmount\r\n    }\r\n    if (type === 'mythicalFragment' && player.mythicalFragments >= 1e25 && player.achievements[239] < 1) {\r\n      achievementaward(239)\r\n    }\r\n\r\n    player.researchPoints -= talismanResourcesData.obtainiumCost\r\n    player.runeshards -= talismanResourcesData.offeringCost\r\n\r\n    // When dealing with high values, calculations can be very slightly off due to floating point precision\r\n    // and result in buying slightly (usually 1) more than the player can actually afford.\r\n    // This results in negative obtainium or offerings with further calcs somehow resulting in NaN/undefined.\r\n    // Instead of trying to work around floating point limits, just make sure nothing breaks as a result.\r\n    // The calculation being done overall is similar to the following calculation:\r\n    // 2.9992198253874083e47 - (Math.floor(2.9992198253874083e47 / 1e20) * 1e20)\r\n    // which, for most values, returns 0, but values like this example will return a negative number instead.\r\n    if (player.researchPoints < 0) {\r\n      player.researchPoints = 0\r\n    }\r\n    if (player.runeshards < 0) {\r\n      player.runeshards = 0\r\n    }\r\n  }\r\n  updateTalismanCostDisplay(type, percentage)\r\n  updateTalismanInventory()\r\n}\r\n\r\nexport const showTalismanEffect = (i: number) => {\r\n  DOMCacheGetOrSet('talismanlevelup').style.display = 'none'\r\n  DOMCacheGetOrSet('talismanEffect').style.display = 'block'\r\n  DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n  const a = DOMCacheGetOrSet('talismanSummary')\r\n  const b = DOMCacheGetOrSet('talismanBonus')\r\n  const c = DOMCacheGetOrSet('talismanRune1Effect')\r\n  const d = DOMCacheGetOrSet('talismanRune2Effect')\r\n  const e = DOMCacheGetOrSet('talismanRune3Effect')\r\n  const f = DOMCacheGetOrSet('talismanRune4Effect')\r\n  const g = DOMCacheGetOrSet('talismanRune5Effect')\r\n  const h = DOMCacheGetOrSet('talismanMythicEffect')\r\n\r\n  switch (i) {\r\n    case 0:\r\n      a.textContent = '=-=-=-= Exemption Talisman Effects =-=-=-='\r\n      b.textContent = `Taxes -${format(10 * (player.talismanRarity[0] - 1))}%`\r\n      c.textContent = `Bonus Speed Rune Levels: ${format(G.talisman1Effect[1], 2, true)}`\r\n      d.textContent = `Bonus Duplication Rune Levels: ${format(G.talisman1Effect[2], 2, true)}`\r\n      e.textContent = `Bonus Prism Rune Levels: ${format(G.talisman1Effect[3], 2, true)}`\r\n      f.textContent = `Bonus Thrift Rune Levels: ${format(G.talisman1Effect[4], 2, true)}`\r\n      g.textContent = `Bonus SI Rune Levels: ${format(G.talisman1Effect[5], 2, true)}`\r\n      h.textContent = 'Mythic Effect: +400 Duplication Rune Levels!'\r\n      break\r\n    case 1:\r\n      a.textContent = '=-=-=-= Chronos Talisman Effects =-=-=-='\r\n      b.textContent = `Gain +${format(10 * (player.talismanRarity[1] - 1))}% Global Speed Acceleration.`\r\n      c.textContent = `Bonus Speed Rune Levels: ${format(G.talisman2Effect[1], 2, true)}`\r\n      d.textContent = `Bonus Duplication Rune Levels: ${format(G.talisman2Effect[2], 2, true)}`\r\n      e.textContent = `Bonus Prism Rune Levels: ${format(G.talisman2Effect[3], 2, true)}`\r\n      f.textContent = `Bonus Thrift Rune Levels: ${format(G.talisman2Effect[4], 2, true)}`\r\n      g.textContent = `Bonus SI Rune Levels: ${format(G.talisman2Effect[5], 2, true)}`\r\n      h.textContent = 'Mythic Effect: +400 Speed Rune Levels!'\r\n      break\r\n    case 2:\r\n      a.textContent = '=-=-=-= Midas Talisman Effects =-=-=-='\r\n      b.textContent = 'Rune Blessing bonuses +' + format(10 * (player.talismanRarity[2] - 1)) + '%'\r\n      c.textContent = 'Bonus Speed Rune Levels: ' + format(G.talisman3Effect[1], 2, true)\r\n      d.textContent = 'Bonus Duplication Rune Levels: ' + format(G.talisman3Effect[2], 2, true)\r\n      e.textContent = 'Bonus Prism Rune Levels: ' + format(G.talisman3Effect[3], 2, true)\r\n      f.textContent = 'Bonus Thrift Rune Levels: ' + format(G.talisman3Effect[4], 2, true)\r\n      g.textContent = 'Bonus SI Rune Levels: ' + format(G.talisman3Effect[5], 2, true)\r\n      h.textContent = 'Mythic Effect: +400 Thrift Rune Levels!'\r\n      break\r\n    case 3:\r\n      a.textContent = '=-=-=-= Metaphysics Talisman Effects =-=-=-='\r\n      b.textContent = 'Talismans\\' Bonus Rune Levels +' + format(0.02 * (player.talismanRarity[3] - 1), 2) + ' per level'\r\n      c.textContent = 'Bonus Speed Rune Levels: ' + format(G.talisman4Effect[1], 2, true)\r\n      d.textContent = 'Bonus Duplication Rune Levels: ' + format(G.talisman4Effect[2], 2, true)\r\n      e.textContent = 'Bonus Prism Rune Levels: ' + format(G.talisman4Effect[3], 2, true)\r\n      f.textContent = 'Bonus Thrift Rune Levels: ' + format(G.talisman4Effect[4], 2, true)\r\n      g.textContent = 'Bonus SI Rune Levels: ' + format(G.talisman4Effect[5], 2, true)\r\n      h.textContent = 'Mythic Effect: +400 Prism Rune Levels!'\r\n      break\r\n    case 4:\r\n      a.textContent = '=-=-=-= Polymath Talisman Effects =-=-=-='\r\n      b.textContent = 'Rune Spirit Bonuses +' + format(1 * (player.talismanRarity[4] - 1)) + '%'\r\n      c.textContent = 'Bonus Speed Rune Levels: ' + format(G.talisman5Effect[1], 2, true)\r\n      d.textContent = 'Bonus Duplication Rune Levels: ' + format(G.talisman5Effect[2], 2, true)\r\n      e.textContent = 'Bonus Prism Rune Levels: ' + format(G.talisman5Effect[3], 2, true)\r\n      f.textContent = 'Bonus Thrift Rune Levels: ' + format(G.talisman5Effect[4], 2, true)\r\n      g.textContent = 'Bonus SI Rune Levels: ' + format(G.talisman5Effect[5], 2, true)\r\n      h.textContent = 'Mythic Effect: +400 SI Rune Levels!'\r\n      break\r\n    case 5:\r\n      a.textContent = '=-=-=-= Mortuus Est Talisman Effects =-=-=-='\r\n      b.textContent = 'Bonus Ant Levels: +' + format(2 * (player.talismanRarity[5] - 1))\r\n      c.textContent = 'Bonus Speed Rune Levels: ' + format(G.talisman6Effect[1], 2, true)\r\n      d.textContent = 'Bonus Duplication Rune Levels: ' + format(G.talisman6Effect[2], 2, true)\r\n      e.textContent = 'Bonus Prism Rune Levels: ' + format(G.talisman6Effect[3], 2, true)\r\n      f.textContent = 'Bonus Thrift Rune Levels: ' + format(G.talisman6Effect[4], 2, true)\r\n      g.textContent = 'Bonus SI Rune Levels: ' + format(G.talisman6Effect[5], 2, true)\r\n      h.textContent = 'Mythic Effect: Gain ant speed based on your total rune level!'\r\n      break\r\n    case 6:\r\n      a.textContent = '=-=-=-= Plastic Talisman Effects =-=-=-='\r\n      b.textContent = 'Gain 1x normal production (Joke)!'\r\n      c.textContent = 'Bonus Speed Rune Levels: ' + format(G.talisman7Effect[1], 2, true)\r\n      d.textContent = 'Bonus Duplication Rune Levels: ' + format(G.talisman7Effect[2], 2, true)\r\n      e.textContent = 'Bonus Prism Rune Levels: ' + format(G.talisman7Effect[3], 2, true)\r\n      f.textContent = 'Bonus Thrift Rune Levels: ' + format(G.talisman7Effect[4], 2, true)\r\n      g.textContent = 'Bonus SI Rune Levels: ' + format(G.talisman7Effect[5], 2, true)\r\n      h.textContent = 'Mythic Effect: Gain 1x your normal quark values (Joke)!'\r\n      break\r\n  }\r\n  if (player.talismanRarity[i] !== 6) {\r\n    h.textContent = 'Get Max Enhance for a Mythical bonus effect!'\r\n  }\r\n}\r\n\r\nexport const showTalismanPrices = (i: number) => {\r\n  DOMCacheGetOrSet('talismanEffect').style.display = 'none'\r\n  DOMCacheGetOrSet('talismanlevelup').style.display = 'block'\r\n  DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n  const a = DOMCacheGetOrSet('talismanShardCost')\r\n  const b = DOMCacheGetOrSet('talismanCommonFragmentCost')\r\n  const c = DOMCacheGetOrSet('talismanUncommonFragmentCost')\r\n  const d = DOMCacheGetOrSet('talismanRareFragmentCost')\r\n  const e = DOMCacheGetOrSet('talismanEpicFragmentCost')\r\n  const f = DOMCacheGetOrSet('talismanLegendaryFragmentCost')\r\n  const g = DOMCacheGetOrSet('talismanMythicalFragmentCost')\r\n\r\n  DOMCacheGetOrSet('talismanLevelUpSummary').textContent = i18next.t('runes.resourcesToLevelup')\r\n  DOMCacheGetOrSet('talismanLevelUpSummary').style.color = 'silver'\r\n\r\n  let m = G.talismanLevelCostMultiplier[i]\r\n  if (player.talismanLevels[i] >= 120) {\r\n    m *= (player.talismanLevels[i] - 90) / 30\r\n  }\r\n  if (player.talismanLevels[i] >= 150) {\r\n    m *= (player.talismanLevels[i] - 120) / 30\r\n  }\r\n  if (player.talismanLevels[i] >= 180) {\r\n    m *= (player.talismanLevels[i] - 170) / 10\r\n  }\r\n  a.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i], 3))))\r\n  b.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i] - 30, 3))))\r\n  c.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i] - 60, 3))))\r\n  d.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i] - 90, 3))))\r\n  e.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i] - 120, 3))))\r\n  f.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i] - 150, 3))))\r\n  g.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i] - 150, 3))))\r\n}\r\n\r\nexport const showEnhanceTalismanPrices = (i: number) => {\r\n  DOMCacheGetOrSet('talismanEffect').style.display = 'none'\r\n  DOMCacheGetOrSet('talismanlevelup').style.display = 'block'\r\n  DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n  const a = DOMCacheGetOrSet('talismanShardCost')\r\n  const b = DOMCacheGetOrSet('talismanCommonFragmentCost')\r\n  const c = DOMCacheGetOrSet('talismanUncommonFragmentCost')\r\n  const d = DOMCacheGetOrSet('talismanRareFragmentCost')\r\n  const e = DOMCacheGetOrSet('talismanEpicFragmentCost')\r\n  const f = DOMCacheGetOrSet('talismanLegendaryFragmentCost')\r\n  const g = DOMCacheGetOrSet('talismanMythicalFragmentCost')\r\n\r\n  DOMCacheGetOrSet('talismanLevelUpSummary').textContent = i18next.t('runes.resourcesToEnhance')\r\n  DOMCacheGetOrSet('talismanLevelUpSummary').style.color = 'gold'\r\n\r\n  const array = [G.commonTalismanEnhanceCost, G.uncommonTalismanEnchanceCost, G.rareTalismanEnchanceCost, G.epicTalismanEnhanceCost, G.legendaryTalismanEnchanceCost, G.mythicalTalismanEnchanceCost]\r\n  const index = player.talismanRarity[i]\r\n  const costArray = array[index-1]\r\n  const m = G.talismanLevelCostMultiplier[i]\r\n  a.textContent = format(m * costArray[1])\r\n  b.textContent = format(m * costArray[2])\r\n  c.textContent = format(m * costArray[3])\r\n  d.textContent = format(m * costArray[4])\r\n  e.textContent = format(m * costArray[5])\r\n  f.textContent = format(m * costArray[6])\r\n  g.textContent = format(m * costArray[7])\r\n}\r\n\r\nexport const showRespecInformation = (i: number) => {\r\n  G.talismanRespec = i\r\n  DOMCacheGetOrSet('talismanEffect').style.display = 'none'\r\n  DOMCacheGetOrSet('talismanlevelup').style.display = 'none'\r\n  DOMCacheGetOrSet('talismanrespec').style.display = 'block'\r\n\r\n  const runeName = ['Speed Rune', 'Duplication Rune', 'Prism Rune', 'Thrift Rune', 'SI Rune']\r\n  const runeModifier = ['Positive', 'Positive', 'Positive', 'Positive']\r\n  if (i <= 6) {\r\n    for (let k = 1; k <= 5; k++) {\r\n      G.mirrorTalismanStats[k] = player[`talisman${num[i]}` as const][k]\r\n    }\r\n    DOMCacheGetOrSet('confirmTalismanRespec').textContent = 'Confirm [-100,000 Offerings]'\r\n  }\r\n  if (i === 7) {\r\n    for (let k = 1; k <= 5; k++) {\r\n      G.mirrorTalismanStats[k] = 1\r\n    }\r\n    DOMCacheGetOrSet('confirmTalismanRespec').textContent = 'Confirm ALL [-400,000 Offerings]'\r\n  }\r\n  for (let j = 1; j <= 5; j++) {\r\n    if (G.mirrorTalismanStats[j] === 1) {\r\n      DOMCacheGetOrSet(`talismanRespecButton${j}`).style.border = '2px solid limegreen'\r\n      runeModifier[j-1] = 'Positive'\r\n    } else if (G.mirrorTalismanStats[j] === -1) {\r\n      DOMCacheGetOrSet(`talismanRespecButton${j}`).style.border = '2px solid crimson'\r\n      runeModifier[j-1] = 'Negative'\r\n    }\r\n    DOMCacheGetOrSet(`talismanRespecButton${j}`).textContent = runeName[j-1] + ': ' + runeModifier[j-1]\r\n  }\r\n\r\n  DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none'\r\n}\r\n\r\nexport const changeTalismanModifier = (i: number) => {\r\n  const runeName = [null, 'Speed Rune', 'Duplication Rune', 'Prism Rune', 'Thrift Rune', 'SI Rune']\r\n  const el = DOMCacheGetOrSet(`talismanRespecButton${i}`)\r\n  if (G.mirrorTalismanStats[i] === 1) {\r\n    G.mirrorTalismanStats[i] = (-1)\r\n    // TODO(@KhafraDev): i18n\r\n    el.textContent = `${runeName[i]}: Negative`\r\n    el.style.border = '2px solid crimson'\r\n  } else {\r\n    G.mirrorTalismanStats[i] = (1)\r\n    // TODO(@KhafraDev): i18n\r\n    el.textContent = `${runeName[i]}: Positive`\r\n    el.style.border = '2px solid limegreen'\r\n  }\r\n\r\n  const checkSum = G.mirrorTalismanStats.reduce((a, b) => a! + b!, 0)\r\n\r\n  if (checkSum === 1) {\r\n    DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'block'\r\n  } else {\r\n    DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none'\r\n  }\r\n\r\n}\r\n\r\nexport const respecTalismanConfirm = (i: number) => {\r\n  if (player.runeshards >= 100000 && i < 7) {\r\n    for (let j = 1; j <= 5; j++) {\r\n      player[`talisman${num[i]}` as const][j] = G.mirrorTalismanStats[j]\r\n    }\r\n    player.runeshards -= 100000\r\n    DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none'\r\n    DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n    DOMCacheGetOrSet('talismanEffect').style.display = 'block'\r\n    showTalismanEffect(i)\r\n  } else if (player.runeshards >= 400000 && i === 7) {\r\n    player.runeshards -= 400000\r\n    for (let j = 0; j < 7; j++) {\r\n      for (let k = 1; k <= 5; k++) {\r\n        player[`talisman${num[j]}` as const][k] = G.mirrorTalismanStats[k]\r\n      }\r\n    }\r\n    DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none'\r\n  }\r\n\r\n  calculateRuneLevels()\r\n}\r\n\r\nexport const respecTalismanCancel = (i: number) => {\r\n  DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n  if (i < 7) {\r\n    DOMCacheGetOrSet('talismanEffect').style.display = 'block'\r\n    showTalismanEffect(i)\r\n  }\r\n}\r\n\r\nexport const updateTalismanAppearance = (i: number) => {\r\n  const el = DOMCacheGetOrSet(`talisman${i+1}`)\r\n  const la = DOMCacheGetOrSet(`talisman${i + 1}level`)\r\n\r\n  const rarity = player.talismanRarity[i]\r\n  if (rarity === 1) {\r\n    el.style.border = '4px solid white'\r\n    la.style.color = 'white'\r\n  }\r\n  if (rarity === 2) {\r\n    el.style.border = '4px solid limegreen'\r\n    la.style.color = 'limegreen'\r\n  }\r\n  if (rarity === 3) {\r\n    el.style.border = '4px solid lightblue'\r\n    la.style.color = 'lightblue'\r\n  }\r\n  if (rarity === 4) {\r\n    el.style.border = '4px solid plum'\r\n    la.style.color = 'plum'\r\n  }\r\n  if (rarity === 5) {\r\n    el.style.border = '4px solid orange'\r\n    la.style.color = 'orange'\r\n  }\r\n  if (rarity === 6) {\r\n    el.style.border = '4px solid crimson'\r\n    la.style.color = 'var(--crimson-text-color)'\r\n  }\r\n}\r\n\r\n// Attempt to buy a fixed number of levels (number varies based on\r\n// ascension). Returns true if any levels were bought, false otherwise.\r\nexport const buyTalismanLevels = (i: number, auto = false): boolean => {\r\n  let max = 1\r\n  if (player.ascensionCount > 0) {\r\n    max = 30\r\n  }\r\n  if (player.highestSingularityCount > 0) {\r\n    max = 180\r\n  }\r\n  let hasPurchased = false\r\n  for (let j = 1; j <= max; j++) {\r\n    let checkSum = 0\r\n    let priceMult = G.talismanLevelCostMultiplier[i]\r\n    if (player.talismanLevels[i] >= 120) {\r\n      priceMult *= (player.talismanLevels[i] - 90) / 30\r\n    }\r\n    if (player.talismanLevels[i] >= 150) {\r\n      priceMult *= (player.talismanLevels[i] - 120) / 30\r\n    }\r\n    if (player.talismanLevels[i] >= 180) {\r\n      priceMult *= (player.talismanLevels[i] - 170) / 10\r\n    }\r\n\r\n    if (player.talismanLevels[i] < calculateMaxTalismanLevel(i)) {\r\n      if (player.talismanShards >= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i], 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.commonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i] - 30, 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.uncommonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i] - 60, 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.rareFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i] - 90, 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.epicFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i] - 120, 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.legendaryFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i] - 150, 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.mythicalFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i] - 150, 3)))) {\r\n        checkSum++\r\n      }\r\n    }\r\n\r\n    if (checkSum === 7) {\r\n      player.talismanShards -= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i], 3)))\r\n      player.commonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i] - 30, 3)))\r\n      player.uncommonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i] - 60, 3)))\r\n      player.rareFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i] - 90, 3)))\r\n      player.epicFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i] - 120, 3)))\r\n      player.legendaryFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i] - 150, 3)))\r\n      player.mythicalFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i] - 150, 3)))\r\n      player.talismanLevels[i] += 1\r\n      hasPurchased = true\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n\r\n  if (!auto && hasPurchased) {\r\n    showTalismanPrices(i)\r\n    // When adding game state recalculations, update the talisman autobuyer in tack() as well\r\n    updateTalismanInventory()\r\n    calculateRuneLevels()\r\n  }\r\n\r\n  return hasPurchased\r\n}\r\n\r\nexport const buyTalismanEnhance = (i: number, auto = false): boolean => {\r\n  let checkSum = 0\r\n  if (player.talismanRarity[i] < 6) {\r\n    const priceMult = G.talismanLevelCostMultiplier[i]\r\n    const array = [G.commonTalismanEnhanceCost, G.uncommonTalismanEnchanceCost, G.rareTalismanEnchanceCost, G.epicTalismanEnhanceCost, G.legendaryTalismanEnchanceCost, G.mythicalTalismanEnchanceCost]\r\n    const index = player.talismanRarity[i] - 1\r\n    const costArray = array[index]\r\n    if (player.commonFragments >= priceMult * costArray[2]) {\r\n      checkSum++\r\n    }\r\n    if (player.uncommonFragments >= priceMult * costArray[3]) {\r\n      checkSum++\r\n    }\r\n    if (player.rareFragments >= priceMult * costArray[4]) {\r\n      checkSum++\r\n    }\r\n    if (player.epicFragments >= priceMult * costArray[5]) {\r\n      checkSum++\r\n    }\r\n    if (player.legendaryFragments >= priceMult * costArray[6]) {\r\n      checkSum++\r\n    }\r\n    if (player.mythicalFragments >= priceMult * costArray[7]) {\r\n      checkSum++\r\n    }\r\n\r\n\r\n    if (checkSum === 6) {\r\n      player.commonFragments -= (priceMult * costArray[2])\r\n      player.uncommonFragments -= (priceMult * costArray[3])\r\n      player.rareFragments -= (priceMult * costArray[4])\r\n      player.epicFragments -= (priceMult * costArray[5])\r\n      player.legendaryFragments -= (priceMult * costArray[6])\r\n      player.mythicalFragments -= (priceMult * costArray[7])\r\n      player.talismanRarity[i] += 1\r\n\r\n      // Appearance always needs updating if bought\r\n      updateTalismanAppearance(i)\r\n      if (!auto) {\r\n        showEnhanceTalismanPrices(i)\r\n        // When adding game state recalculations, update the talisman autobuyer in tack() as well\r\n        updateTalismanInventory()\r\n        calculateRuneLevels()\r\n      }\r\n\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { calculateRuneExpGiven, calculateCorruptionPoints, calculateOfferings, calculateMaxRunes, calculateRuneExpToLevel, calculateRuneLevels, calculateEffectiveIALevel } from './Calculate'\r\nimport { Globals as G } from './Variables'\r\n\r\nimport Decimal from 'break_infinity.js'\r\nimport type { resetNames } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next, { type StringMap } from 'i18next'\r\n\r\nexport const displayRuneInformation = (i: number, updatelevelup = true) => {\r\n  const m = G.effectiveLevelMult\r\n  const SILevelMult = (1 + player.researches[84] / 200 * (1 + 1 * G.effectiveRuneSpiritPower[5] * calculateCorruptionPoints()/400))\r\n  const amountPerOffering = calculateRuneExpGiven(i - 1, false, player.runelevels[i - 1])\r\n\r\n  let options: StringMap\r\n\r\n  if (i === 1) {\r\n    options = {\r\n      bonus: format(Math.floor(Math.pow(G.rune1level * m / 4, 1.25))),\r\n      percent: format((G.rune1level / 4 * m), 2, true),\r\n      boost: format(Math.floor(G.rune1level / 20 * m))\r\n    }\r\n  } else if (i === 2) {\r\n    options = {\r\n      mult1: format(Math.floor(G.rune2level * m / 10) * Math.floor(1 + G.rune2level * m / 10) / 2),\r\n      mult2: format(m * G.rune2level / 4, 1, true),\r\n      tax: (99.9 * (1 - Math.pow(6, -(G.rune2level * m) / 1000))).toPrecision(4)\r\n    }\r\n  } else if (i === 3) {\r\n    options = {\r\n      mult: format(Decimal.pow(G.rune3level * m / 2, 2).times(Decimal.pow(2, G.rune3level * m / 2 - 8)).add(1), 3),\r\n      gain: format(Math.floor(G.rune3level / 16 * m))\r\n    }\r\n  } else if (i === 4) {\r\n    options = {\r\n      delay: (G.rune4level / 8 * m).toPrecision(3),\r\n      chance: Math.min(25, G.rune4level / 16),\r\n      tax: (99 * (1 - Math.pow(4, Math.min(0, (400 - G.rune4level) / 1100)))).toPrecision(4)\r\n    }\r\n  } else if (i === 5) {\r\n    options = {\r\n      gain: format((1 + G.rune5level / 200 * m * SILevelMult), 2, true),\r\n      speed: format(1 + Math.pow(G.rune5level * m * SILevelMult, 2) / 2500),\r\n      offerings: format((G.rune5level * m * SILevelMult * 0.005), 3, true)\r\n    }\r\n  } else if (i === 6) {\r\n    options = {\r\n      percent1: format(10 + 15/75 * calculateEffectiveIALevel(), 1, true),\r\n      percent2: format(1 * calculateEffectiveIALevel(), 0, true)\r\n    }\r\n  } else if (i === 7 && updatelevelup) {\r\n    options = { exp: format(1e256 * (1 + player.singularityCount)) }\r\n  }\r\n\r\n  if (updatelevelup) {\r\n    DOMCacheGetOrSet('runeshowlevelup').textContent = i18next.t(`runes.levelup.${i}`, options!)\r\n  }\r\n\r\n  DOMCacheGetOrSet(`runeshowpower${i}`).textContent = i18next.t(`runes.power.${i}`, options!)\r\n\r\n  if (updatelevelup) {\r\n    const arr = calculateOfferingsToLevelXTimes(i - 1, player.runelevels[i - 1], player.offeringbuyamount)\r\n    let offerings = 0\r\n    let j = 0\r\n    while (j < arr.length && (offerings + arr[j] <= player.runeshards || j === 0)) {\r\n      offerings += arr[j]\r\n      j++\r\n    }\r\n    const s = j === 1 ? 'once' : `${j} times`\r\n\r\n    DOMCacheGetOrSet('runeDisplayInfo').textContent = i18next.t('runes.perOfferingText', {\r\n      exp: format(amountPerOffering),\r\n      x: format(offerings),\r\n      y: s\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport const resetofferings = (input: resetNames) => {\r\n  player.runeshards = Math.min(1e300, player.runeshards + calculateOfferings(input))\r\n}\r\n\r\nexport const unlockedRune = (runeIndexPlusOne: number) => {\r\n  // Whether or not a rune is unlocked array\r\n  const unlockedRune = [\r\n    false,\r\n    true,\r\n    player.achievements[38] > 0.5,\r\n    player.achievements[44] > 0.5,\r\n    player.achievements[102] > 0.5,\r\n    player.researches[82] > 0.5,\r\n    player.shopUpgrades.infiniteAscent,\r\n    player.platonicUpgrades[20] > 0\r\n  ]\r\n  return unlockedRune[runeIndexPlusOne]\r\n}\r\n\r\n/**\r\n * checkMaxRunes returns how many unique runes are at the maximum level.\r\n * Does not take in params, returns a number equal to number of maxed runes.\r\n */\r\nexport const checkMaxRunes = (runeIndex: number) => {\r\n  let maxed = 0\r\n  for (let i = 0; i < runeIndex; i++) {\r\n    if (!unlockedRune(i + 1) || player.runelevels[i] >= calculateMaxRunes(i + 1)) {\r\n      maxed++\r\n    }\r\n  }\r\n  return maxed\r\n}\r\n\r\nexport const redeemShards = (runeIndexPlusOne: number, auto = false, cubeUpgraded = 0) => {\r\n  // if automated && 2x10 cube upgrade bought, this will be >0.\r\n  // runeIndex, the rune being added to\r\n  const runeIndex = runeIndexPlusOne - 1\r\n\r\n  let levelsToAdd = player.offeringbuyamount\r\n  if (auto) {\r\n    levelsToAdd = Math.pow(2, player.shopUpgrades.offeringAuto)\r\n  }\r\n  if (auto && cubeUpgraded > 0) {\r\n    levelsToAdd = Math.min(1e4, calculateMaxRunes(runeIndex + 1)) // limit to max 10k levels per call so the execution doesn't take too long if things get stuck\r\n  }\r\n  let levelsAdded = 0\r\n  if (player.runeshards > 0 && player.runelevels[runeIndex] < calculateMaxRunes(runeIndex + 1) && unlockedRune(runeIndex + 1)) {\r\n    let all = 0\r\n    const maxLevel = calculateMaxRunes(runeIndex + 1)\r\n    const amountArr = calculateOfferingsToLevelXTimes(runeIndex, player.runelevels[runeIndex], levelsToAdd)\r\n    let toSpendTotal = Math.min(player.runeshards, amountArr.reduce((x, y) => x + y, 0))\r\n    if (cubeUpgraded > 0) {\r\n      toSpendTotal = Math.min(player.runeshards, cubeUpgraded)\r\n    }\r\n    const fact = calculateRuneExpGiven(runeIndex, false, player.runelevels[runeIndex], true)\r\n    const a = player.upgrades[71] / 25\r\n    const add = fact[0] - a * player.runelevels[runeIndex]\r\n    const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1)\r\n    while (toSpendTotal > 0 && levelsAdded < levelsToAdd && player.runelevels[runeIndex] < maxLevel) {\r\n      const exp = calculateRuneExpToLevel(runeIndex, player.runelevels[runeIndex]) - player.runeexp[runeIndex]\r\n      const expPerOff = (add + a * player.runelevels[runeIndex]) * mult\r\n      let toSpend = Math.min(toSpendTotal, Math.ceil(exp / expPerOff))\r\n      if (isNaN(toSpend)) {\r\n        toSpend = toSpendTotal\r\n      }\r\n      toSpendTotal -= toSpend\r\n      player.runeshards -= toSpend\r\n      player.runeexp[runeIndex] += toSpend * expPerOff\r\n      all += toSpend\r\n      while (player.runeexp[runeIndex] >= calculateRuneExpToLevel(runeIndex) && player.runelevels[runeIndex] < maxLevel) {\r\n        player.runelevels[runeIndex] += 1\r\n        levelsAdded++\r\n      }\r\n    }\r\n    for (let runeToUpdate = 0; runeToUpdate < 5; ++runeToUpdate) {\r\n      if (unlockedRune(runeToUpdate + 1)) {\r\n        if (runeToUpdate !== runeIndex) {\r\n          player.runeexp[runeToUpdate] += all * calculateRuneExpGiven(runeToUpdate, true)\r\n        }\r\n        while (player.runeexp[runeToUpdate] >= calculateRuneExpToLevel(runeToUpdate) && player.runelevels[runeToUpdate] < calculateMaxRunes(runeToUpdate + 1)) {\r\n          player.runelevels[runeToUpdate] += 1\r\n        }\r\n      }\r\n    }\r\n    displayRuneInformation(runeIndexPlusOne)\r\n  }\r\n  calculateRuneLevels()\r\n  if (player.runeshards < 0 || !player.runeshards) {\r\n    player.runeshards = 0\r\n  }\r\n}\r\n\r\nexport const calculateOfferingsToLevelXTimes = (runeIndex: number, runeLevel: number, levels: number) => {\r\n  let exp = calculateRuneExpToLevel(runeIndex, runeLevel) - player.runeexp[runeIndex]\r\n  const maxLevel = calculateMaxRunes(runeIndex + 1)\r\n  const arr = []\r\n  let sum = 0\r\n  const off = player.runeshards\r\n  let levelsAdded = 0\r\n  const fact = calculateRuneExpGiven(runeIndex, false, runeLevel, true)\r\n  const a = player.upgrades[71] / 25\r\n  const add = fact[0] - a * runeLevel\r\n  const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1)\r\n  while (levelsAdded < levels && runeLevel + levelsAdded < maxLevel && sum < off) {\r\n    const expPerOff = (add + a * (runeLevel + levelsAdded)) * mult\r\n    const amount = Math.ceil(exp / expPerOff)\r\n    sum += amount\r\n    arr.push(amount)\r\n    levelsAdded += 1\r\n    exp = calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded)\r\n            - calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded - 1)\r\n  }\r\n  return arr\r\n}\r\n", "import { player } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\n\r\nexport const calculateTesseractBlessings = () => {\r\n  // The visual updates are handled in visualUpdateCubes()\r\n  const tesseractArray = [player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    let power = 1\r\n    let mult = 1\r\n    if (tesseractArray[i] >= 1000 && i !== 5) {\r\n      power = G.giftDRPower[i]\r\n      mult *= Math.pow(1000, (1 - G.giftDRPower[i]))\r\n    }\r\n\r\n    G.tesseractBonusMultiplier[i+1] = 1 + mult * G.giftbase[i] * Math.pow(tesseractArray[i], power) * G.hypercubeBonusMultiplier[i+1]!\r\n  }\r\n}\r\n", "import { player, updateAllTick, updateAllMultiplier, format } from './Synergism'\r\nimport { CalcECC } from './Challenges'\r\nimport type { DecimalSource } from 'break_infinity.js'\r\nimport Decimal from 'break_infinity.js'\r\nimport { achievementaward } from './Achievements'\r\nimport { smallestInc } from './Utility'\r\nimport { upgradeupdate, crystalupgradedescriptions } from './Upgrades'\r\nimport { reset } from './Reset'\r\nimport { calculateSummationLinear, calculateCorruptionPoints, calculateRuneBonuses } from './Calculate'\r\nimport { Globals as G, Upgrade } from './Variables'\r\nimport type { FirstToFifth, OneToFive, ZeroToFour } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\nexport const getReductionValue = () => {\r\n  let reduction = 1\r\n  reduction += Math.min(1e15, (G.rune4level * G.effectiveLevelMult) / 160)\r\n  reduction += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200\r\n  reduction += CalcECC('transcend', player.challengecompletions[4]) / 200\r\n  reduction += Math.min(99999.9, (3 * (player.antUpgrades[7-1]! + G.bonusant7)) / 100)\r\n  return reduction\r\n}\r\n\r\nconst getCostAccelerator = (buyingTo: number): Decimal => {\r\n  --buyingTo\r\n\r\n  const originalCost = 500\r\n  let cost = new Decimal(originalCost)\r\n\r\n  cost = cost.times(Decimal.pow(4 / G.costDivisor, buyingTo))\r\n\r\n  if (buyingTo > (125 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n    const num = buyingTo - 125 - 5 * CalcECC('transcend', player.challengecompletions[4])\r\n    const factorialBit = new Decimal(num).factorial()\r\n    const multBit = Decimal.pow(4, num)\r\n    cost = cost.times(multBit.times(factorialBit))\r\n  }\r\n\r\n  if (buyingTo > (2000 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n    const sumNum = buyingTo - 2000 - 5 * CalcECC('transcend', player.challengecompletions[4])\r\n    const sumBit = sumNum * (sumNum + 1) / 2\r\n    cost = cost.times(Decimal.pow(2, sumBit))\r\n  }\r\n\r\n  if (player.currentChallenge.transcension === 4) {\r\n    const sumBit = buyingTo * (buyingTo + 1) / 2\r\n    cost = cost.times(Decimal.pow(10, sumBit))\r\n  }\r\n\r\n  if (player.currentChallenge.reincarnation === 8) {\r\n    const sumBit = buyingTo * (buyingTo + 1) / 2\r\n    cost = cost.times(Decimal.pow(1e50, sumBit))\r\n  }\r\n  const buymax = Math.pow(10, 15)\r\n  if (buyingTo > buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const QuadrillionCost = getCostAccelerator(buymax)\r\n\r\n    const newCost = QuadrillionCost.pow(Math.pow(buyingTo / buymax, 1 / diminishingExponent))\r\n    const newExtra = newCost.exponent - Math.floor(newCost.exponent)\r\n    newCost.exponent = Math.floor(newCost.exponent)\r\n    newCost.mantissa *= Math.pow(10, newExtra)\r\n    newCost.normalize()\r\n    return Decimal.max(cost, newCost)\r\n  }\r\n  return cost\r\n}\r\n\r\nexport const buyAccelerator = (autobuyer?: boolean) => {\r\n  const buyStart = player.acceleratorBought\r\n  const buymax = Math.pow(10, 15)\r\n  // If at least buymax, we will use a different formulae\r\n  if (buyStart >= buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const log10Resource = Decimal.log10(player.coins)\r\n    const log10QuadrillionCost = Decimal.log10(getCostAccelerator(buymax))\r\n\r\n    let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\r\n    let lo = buymax\r\n    while (hi - lo > 0.5) {\r\n      const mid = Math.floor(lo + (hi - lo) / 2)\r\n      if (mid === lo || mid === hi) {\r\n        break\r\n      }\r\n      if (!player.coins.gte(getCostAccelerator(mid))) {\r\n        hi = mid\r\n      } else {\r\n        lo = mid\r\n      }\r\n    }\r\n    const buyable = lo\r\n    const thisCost = getCostAccelerator(buyable)\r\n\r\n    player.acceleratorBought = buyable\r\n    player.acceleratorCost = thisCost\r\n    return\r\n  }\r\n\r\n  // Start buying at the current amount bought + 1\r\n  const buydefault = buyStart + smallestInc(buyStart)\r\n  let buyTo = buydefault\r\n\r\n  let cashToBuy = getCostAccelerator(buyTo)\r\n  while (player.coins.gte(cashToBuy)) {\r\n    // then multiply by 4 until it reaches just above the amount needed\r\n    buyTo = buyTo * 4\r\n    cashToBuy = getCostAccelerator(buyTo)\r\n  }\r\n  let stepdown = Math.floor(buyTo / 8)\r\n  while (stepdown >= smallestInc(buyTo)) {\r\n    // if step down would push it below out of expense range then divide step down by 2\r\n    if (getCostAccelerator(buyTo - stepdown).lte(player.coins)) {\r\n      stepdown = Math.floor(stepdown / 2)\r\n    } else {\r\n      buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown)\r\n    }\r\n  }\r\n\r\n  if (!autobuyer && (player.coinbuyamount as number | string) !== 'max') {\r\n    if (player.acceleratorBought + player.coinbuyamount < buyTo) {\r\n      buyTo = player.acceleratorBought + player.coinbuyamount\r\n    }\r\n  }\r\n\r\n  let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault)\r\n  let thisCost = getCostAccelerator(buyFrom)\r\n  while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\r\n    if (buyFrom >= buymax) {\r\n      buyFrom = buymax\r\n    }\r\n    player.coins = player.coins.sub(thisCost)\r\n    player.acceleratorBought = buyFrom\r\n    buyFrom = buyFrom + smallestInc(buyFrom)\r\n    thisCost = getCostAccelerator(buyFrom)\r\n    player.acceleratorCost = thisCost\r\n    if (buyFrom >= buymax) {\r\n      return\r\n    }\r\n  }\r\n\r\n  player.prestigenoaccelerator = false\r\n  player.transcendnoaccelerator = false\r\n  player.reincarnatenoaccelerator = false\r\n  updateAllTick()\r\n  if (player.acceleratorBought >= 5 && player.achievements[148] === 0) {\r\n    achievementaward(148)\r\n  }\r\n  if (player.acceleratorBought >= 25 && player.achievements[149] === 0) {\r\n    achievementaward(149)\r\n  }\r\n  if (player.acceleratorBought >= 100 && player.achievements[150] === 0) {\r\n    achievementaward(150)\r\n  }\r\n  if (player.acceleratorBought >= 666 && player.achievements[151] === 0) {\r\n    achievementaward(151)\r\n  }\r\n  if (player.acceleratorBought >= 2000 && player.achievements[152] === 0) {\r\n    achievementaward(152)\r\n  }\r\n  if (player.acceleratorBought >= 12500 && player.achievements[153] === 0) {\r\n    achievementaward(153)\r\n  }\r\n  if (player.acceleratorBought >= 100000 && player.achievements[154] === 0) {\r\n    achievementaward(154)\r\n  }\r\n}\r\n\r\nconst getCostMultiplier = (buyingTo: number): Decimal => {\r\n  --buyingTo\r\n\r\n  const originalCost = 1e4\r\n  let cost = new Decimal(originalCost)\r\n  cost = cost.times(Decimal.pow(10, buyingTo / G.costDivisor))\r\n\r\n  if (buyingTo > (75 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n    const num = buyingTo - 75 - 2 * CalcECC('transcend', player.challengecompletions[4])\r\n    const factorialBit = new Decimal(num).factorial()\r\n    const powBit = Decimal.pow(10, num)\r\n    cost = cost.times(factorialBit.times(powBit))\r\n  }\r\n\r\n  if (buyingTo > (2000 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n    const sumNum = buyingTo - 2000 - 2 * CalcECC('transcend', player.challengecompletions[4])\r\n    const sumBit = sumNum * (sumNum + 1) / 2\r\n    cost = cost.times(Decimal.pow(2, sumBit))\r\n  }\r\n  if (player.currentChallenge.transcension === 4) {\r\n    const sumBit = buyingTo * (buyingTo + 1) / 2\r\n    cost = cost.times(Decimal.pow(10, sumBit))\r\n  }\r\n  if (player.currentChallenge.reincarnation === 8) {\r\n    const sumBit = buyingTo * (buyingTo + 1) / 2\r\n    cost = cost.times(Decimal.pow(1e50, sumBit))\r\n  }\r\n  const buymax = Math.pow(10, 15)\r\n  if (buyingTo > buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const QuadrillionCost = getCostMultiplier(buymax)\r\n\r\n    const newCost = QuadrillionCost.pow(Math.pow(buyingTo / buymax, 1 / diminishingExponent))\r\n    const newExtra = newCost.exponent - Math.floor(newCost.exponent)\r\n    newCost.exponent = Math.floor(newCost.exponent)\r\n    newCost.mantissa *= Math.pow(10, newExtra)\r\n    newCost.normalize()\r\n    return Decimal.max(cost, newCost)\r\n  }\r\n  return cost\r\n}\r\n\r\nexport const buyMultiplier = (autobuyer?: boolean) => {\r\n  const buyStart = player.multiplierBought\r\n  const buymax = Math.pow(10, 15)\r\n  // If at least buymax, we will use a different formulae\r\n  if (buyStart >= buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const log10Resource = Decimal.log10(player.coins)\r\n    const log10QuadrillionCost = Decimal.log10(getCostMultiplier(buymax))\r\n\r\n    let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\r\n    let lo = buymax\r\n    while (hi - lo > 0.5) {\r\n      const mid = Math.floor(lo + (hi - lo) / 2)\r\n      if (mid === lo || mid === hi) {\r\n        break\r\n      }\r\n      if (!player.coins.gte(getCostMultiplier(mid))) {\r\n        hi = mid\r\n      } else {\r\n        lo = mid\r\n      }\r\n    }\r\n    const buyable = lo\r\n    const thisCost = getCostMultiplier(buyable)\r\n\r\n    player.multiplierBought = buyable\r\n    player.multiplierCost = thisCost\r\n    return\r\n  }\r\n\r\n  // Start buying at the current amount bought + 1\r\n  const buydefault = buyStart + smallestInc(buyStart)\r\n  let buyTo = buydefault\r\n\r\n  let cashToBuy = getCostMultiplier(buyTo)\r\n  while (player.coins.gte(cashToBuy)) {\r\n    // then multiply by 4 until it reaches just above the amount needed\r\n    buyTo = buyTo * 4\r\n    cashToBuy = getCostMultiplier(buyTo)\r\n  }\r\n  let stepdown = Math.floor(buyTo / 8)\r\n  while (stepdown >= smallestInc(buyTo)) {\r\n    // if step down would push it below out of expense range then divide step down by 2\r\n    if (getCostMultiplier(buyTo - stepdown).lte(player.coins)) {\r\n      stepdown = Math.floor(stepdown / 2)\r\n    } else {\r\n      buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown)\r\n    }\r\n  }\r\n\r\n  if (!autobuyer && (player.coinbuyamount as number | string) !== 'max') {\r\n    if (player.multiplierBought + player.coinbuyamount < buyTo) {\r\n      buyTo = player.multiplierBought + player.coinbuyamount\r\n    }\r\n  }\r\n\r\n  let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault)\r\n  let thisCost = getCostMultiplier(buyFrom)\r\n  while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\r\n    if (buyFrom >= buymax) {\r\n      buyFrom = buymax\r\n    }\r\n    player.coins = player.coins.sub(thisCost)\r\n    player.multiplierBought = buyFrom\r\n    buyFrom = buyFrom + smallestInc(buyFrom)\r\n    thisCost = getCostMultiplier(buyFrom)\r\n    player.multiplierCost = thisCost\r\n    if (buyFrom >= buymax) {\r\n      return\r\n    }\r\n  }\r\n\r\n  player.prestigenomultiplier = false\r\n  player.transcendnomultiplier = false\r\n  player.reincarnatenomultiplier = false\r\n  updateAllMultiplier()\r\n  if (player.multiplierBought >= 2 && player.achievements[155] === 0) {\r\n    achievementaward(155)\r\n  }\r\n  if (player.multiplierBought >= 20 && player.achievements[156] === 0) {\r\n    achievementaward(156)\r\n  }\r\n  if (player.multiplierBought >= 100 && player.achievements[157] === 0) {\r\n    achievementaward(157)\r\n  }\r\n  if (player.multiplierBought >= 500 && player.achievements[158] === 0) {\r\n    achievementaward(158)\r\n  }\r\n  if (player.multiplierBought >= 2000 && player.achievements[159] === 0) {\r\n    achievementaward(159)\r\n  }\r\n  if (player.multiplierBought >= 12500 && player.achievements[160] === 0) {\r\n    achievementaward(160)\r\n  }\r\n  if (player.multiplierBought >= 100000 && player.achievements[161] === 0) {\r\n    achievementaward(161)\r\n  }\r\n}\r\n\r\n/*\r\n// Uses same as Decimal prototype but does so without creating new objects\r\nDecimal.prototype.factorial = function () {\r\n  // Using Stirling's Approximation.\r\n  // https://en.wikipedia.org/wiki/Stirling%27s_approximation#Versions_suitable_for_calculators\r\n  var n = this.toNumber() + 1;\r\n  return Decimal.pow(n / Math.E * Math.sqrt(n * Math.sinh(1 / n) + 1 / (810 * Math.pow(n, 6))), n).mul(Math.sqrt(2 * Math.PI / n));\r\n};\r\n*/\r\n\r\nconst mantissaFactorialPartExtra = Math.log10(2 * Math.PI)\r\nconst exponentFactorialPartExtra = Math.log10(Math.E)\r\n\r\nconst factorialByExponent = (fact: number) => {\r\n  if (++fact === 0) {\r\n    return 0\r\n  }\r\n  return ((Math.log10(fact * Math.sqrt(fact * Math.sinh(1 / fact) + 1 / (810 * Math.pow(fact, 6)))) - exponentFactorialPartExtra) * fact) + ((mantissaFactorialPartExtra - Math.log10(fact)) / 2)\r\n}\r\n\r\nconst fact100exponent = Math.log10(9.332621544394e+157)\r\n\r\n// system of equations\r\n// 16 digits of precision\r\n// log10(1.25)xn = log10(x)+16\r\n// see: https://www.wolframalpha.com/input/?i=log10%28x%29%2B16+%3D+log10%281.25%29x\r\n// xn ~= 188.582\r\n// x ~= 188.582/n\r\nconst precision16_loss_addition_of_ones = 188.582\r\nconst known_log10s = function () {\r\n  // needed logs\r\n  const needed = [1.03, 1.25]\r\n  const nums = [1, 2, 3, 4, 5, 6, 10, 15]\r\n  for (const num of nums) {\r\n    needed.push(100 + (100 * num))\r\n    needed.push(10 + (10 * num))\r\n  }\r\n\r\n  // Gets all possible challenge 8 completion amounts\r\n  const chalcompletions = 1000\r\n  for (let i = 0; i < chalcompletions; ++i) {\r\n    needed.push(1 + (i / 2))\r\n  }\r\n\r\n  // constructing all logs\r\n  const obj: Record<number, number> = {}\r\n  for (const need of needed) {\r\n    if (typeof obj[need] === 'undefined') {\r\n      obj[need] = Math.log10(need)\r\n    }\r\n  }\r\n  return obj\r\n}()\r\n\r\nconst coinBuildingCosts = [100, 1000, 2e4, 4e5, 8e6] as const\r\nconst diamondBuildingCosts = [100, 1e5, 1e15, 1e40, 1e100] as const\r\nconst mythosAndParticleBuildingCosts = [1, 1e2, 1e4, 1e8, 1e16] as const\r\n\r\nconst getCostInternal = (originalCost: DecimalSource, buyingTo: number, type: keyof typeof buyProducerTypes, num: number, r: number): Decimal => {\r\n  // It's 0 indexed by mistake so you have to subtract 1 somewhere.\r\n  --buyingTo\r\n  const buymax = Math.pow(10, 15)\r\n  // Accounts for the multiplies by 1.25^num buyingTo times\r\n  const cost = new Decimal(originalCost)\r\n  let mlog10125 = num * buyingTo\r\n  // Accounts for the add 1s\r\n  if (buyingTo < precision16_loss_addition_of_ones / num) {\r\n    cost.mantissa += buyingTo / Math.pow(10, cost.exponent)\r\n  }\r\n  let fastFactMultBuyTo = 0\r\n  // floored r value gets used a lot in removing calculations\r\n  let fr = Math.floor(r * 1000)\r\n  if (buyingTo >= r * 1000) {\r\n    // This code is such a mess at this point, just know that this is equivalent to what it was before\r\n    ++fastFactMultBuyTo\r\n    cost.exponent -= factorialByExponent(fr)\r\n    cost.exponent += (-3 + Math.log10(1 + (num / 2))) * (buyingTo - fr)\r\n  }\r\n\r\n  fr = Math.floor(r * 5000)\r\n  if (buyingTo >= r * 5000) {\r\n    // This code is such a mess at this point, just know that this is equivalent to what it was before\r\n    ++fastFactMultBuyTo\r\n    cost.exponent -= factorialByExponent(fr)\r\n    cost.exponent += ((known_log10s[10 + num * 10] + 1) * (buyingTo - fr - 1)) + 1\r\n  }\r\n\r\n  fr = Math.floor(r * 20000)\r\n  if (buyingTo >= r * 20000) {\r\n    // This code is such a mess at this point, just know that this is equivalent to what it was before\r\n    fastFactMultBuyTo += 3\r\n    cost.exponent -= factorialByExponent(fr) * 3\r\n    cost.exponent += (known_log10s[100 + (100 * num)] + 5) * (buyingTo - fr)\r\n  }\r\n\r\n  fr = Math.floor(r * 250000)\r\n  if (buyingTo >= r * 250000) {\r\n    //1.03^x*1.03^y = 1.03^(x+y), we'll abuse this for this section of the algorithm\r\n    // 1.03^(x+y-((number of terms)250000*r))\r\n    // up to 250003 case\r\n    // assume r = 1 for this case\r\n    // (1.03^250000-250000)(1.03^250001-250000)(1.03^250002-250000)(1.03^250003) = (1.03^0*1.03^1*1.03^2*1.03^3)\r\n    // so in reality we just need to take buyingTo - fr and sum the power up to it\r\n    // (1.03^(sum from 0 to buyingTo - fr)) is the multiplier\r\n    // so (1.03^( (buyingTo-fr)(buyingTo-fr+1)/2 )\r\n    // god damn that was hard to make an algo for\r\n    cost.exponent += Math.log10(1.03) * (buyingTo - fr) * ((buyingTo - fr + 1) / 2)\r\n  }\r\n  // Applies the factorials from earlier without computing them 5 times\r\n  cost.exponent += factorialByExponent(buyingTo) * fastFactMultBuyTo\r\n  let fastFactMultBuyTo100 = 0\r\n  if ((player.currentChallenge.transcension === 4) && (type === 'Coin' || type === 'Diamonds')) {\r\n    // you would not fucking believe how long it took me to figure this out\r\n    // (100*costofcurrent + 10000)^n = (((100+buyingTo)!/100!)*100^buyingTo)^n\r\n    ++fastFactMultBuyTo100\r\n    if (buyingTo >= (1000 - (10 * player.challengecompletions[4]))) {\r\n      // and I changed this to be a summation of all the previous buys 1.25 to the sum from 1 to buyingTo\r\n      mlog10125 += (buyingTo * (buyingTo + 1) / 2)\r\n    }\r\n  }\r\n  if ((player.currentChallenge.reincarnation === 10) && (type === 'Coin' || type === 'Diamonds')) {\r\n    // you would not fucking believe how long it took me to figure this out\r\n    // (100*costofcurrent + 10000)^n = (((100+buyingTo)!/100!)*100^buyingTo)^n\r\n    ++fastFactMultBuyTo100\r\n    if (buyingTo >= (r * 25000)) {\r\n      // and I changed this to be a summation of all the previous buys 1.25 to the sum from 1 to buyingTo\r\n      mlog10125 += (buyingTo * (buyingTo + 1) / 2)\r\n    }\r\n  }\r\n  // Applies the factorial w/ formula from earlier n times to avoid multiple computations\r\n  cost.exponent += fastFactMultBuyTo100 * ((factorialByExponent(buyingTo + 100) - fact100exponent + (2 * buyingTo)) * (1.25 + (player.challengecompletions[4] / 4)))\r\n  // Applies all the Math.log10(1.25)s from earlier n times to avoid multiple computations\r\n  // log10(1.25)\r\n  cost.exponent += known_log10s[1.25] * mlog10125\r\n  fr = Math.floor(r * 1000 * player.challengecompletions[8])\r\n  if (player.currentChallenge.reincarnation === 8 && (type === 'Coin' || type === 'Diamonds' || type === 'Mythos') && buyingTo >= (1000 * player.challengecompletions[8] * r)) {\r\n    cost.exponent += ((known_log10s[2] * ((buyingTo - fr + 1) / 2)) - known_log10s[1 + (player.challengecompletions[8] / 2)]) * (buyingTo - fr)\r\n  }\r\n\r\n  const extra = cost.exponent - Math.floor(cost.exponent)\r\n  cost.exponent = Math.floor(cost.exponent)\r\n  cost.mantissa *= Math.pow(10, extra)\r\n  cost.normalize()\r\n  if (buyingTo > buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const QuadrillionCost = getCostInternal(originalCost, buymax, type, num, r)\r\n\r\n    const newCost = QuadrillionCost.pow(Math.pow(buyingTo / buymax, 1 / diminishingExponent))\r\n    const newExtra = newCost.exponent - Math.floor(newCost.exponent)\r\n    newCost.exponent = Math.floor(newCost.exponent)\r\n    newCost.mantissa *= Math.pow(10, newExtra)\r\n    newCost.normalize()\r\n    return Decimal.max(cost, newCost)\r\n  }\r\n  return cost\r\n}\r\n\r\nconst getOriginalCostAndNum = (index: OneToFive, type: keyof typeof buyProducerTypes) => {\r\n  const originalCostArray = (\r\n    type === 'Coin'\r\n      ? coinBuildingCosts\r\n      : type === 'Diamonds'\r\n        ? diamondBuildingCosts\r\n        : mythosAndParticleBuildingCosts)\r\n  const num = type === 'Coin' ? index : index * (index + 1) / 2\r\n  const originalCost = originalCostArray[index - 1 as ZeroToFour]\r\n  return [originalCost, num] as const\r\n}\r\n\r\nexport const getCost = (index: OneToFive, type: keyof typeof buyProducerTypes, buyingTo: number, r?: number) => {\r\n  const [originalCost, num] = getOriginalCostAndNum(index, type)\r\n  return getCostInternal(originalCost, buyingTo, type, num, r ?? getReductionValue())\r\n}\r\n\r\nexport const buyMax = (index: OneToFive, type: keyof typeof buyProducerTypes) => {\r\n  const zeroIndex = index-1 as ZeroToFour\r\n  const pos = G.ordinals[zeroIndex]\r\n  const [originalCost, num] = getOriginalCostAndNum(index, type)\r\n\r\n  const buymax = Math.pow(10, 15)\r\n  const coinmax = 1e99\r\n  const r = getReductionValue()\r\n  const tag = buyProducerTypes[type][0]\r\n\r\n  const posOwnedType = `${pos}Owned${type}` as const\r\n\r\n  const buyStart = player[posOwnedType]\r\n  // If at least buymax, we will use a different formulae\r\n  if (buyStart >= buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const log10Resource = Decimal.log10(player[tag])\r\n    const log10QuadrillionCost = Decimal.log10(getCostInternal(originalCost, buymax, type, num, r))\r\n\r\n    let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\r\n    let lo = buymax\r\n    while (hi - lo > 0.5) {\r\n      const mid = Math.floor(lo + (hi - lo) / 2)\r\n      if (mid === lo || mid === hi) {\r\n        break\r\n      }\r\n      if (!player[tag].gte(getCostInternal(originalCost, mid, type, num, r))) {\r\n        hi = mid\r\n      } else {\r\n        lo = mid\r\n      }\r\n    }\r\n    const buyable = lo\r\n    const thisCost = getCostInternal(originalCost, buyable, type, num, r)\r\n\r\n    player[posOwnedType] = buyable\r\n    player[`${pos}Cost${type}` as const] = thisCost\r\n    return\r\n  }\r\n\r\n  // Start buying at the current amount bought + 1\r\n  const buydefault = buyStart + smallestInc(buyStart)\r\n  let buyInc = 1\r\n\r\n  let cashToBuy = getCostInternal(originalCost, buyStart + buyInc, type, num, r)\r\n\r\n  // Degenerate Case: return maximum if coins is too large\r\n  if (cashToBuy.exponent >= coinmax || !player[tag].gte(cashToBuy)) {\r\n    return\r\n  }\r\n\r\n  while (cashToBuy.exponent < coinmax && player[tag].gte(cashToBuy)) {\r\n    // then multiply by 4 until it reaches just above the amount needed\r\n    buyInc = buyInc * 4\r\n    cashToBuy = getCostInternal(originalCost, buyStart + buyInc, type, num, r)\r\n  }\r\n  let stepdown = Math.floor(buyInc / 8)\r\n  while (stepdown >= smallestInc(buyInc)) {\r\n    // if step down would push it below out of expense range then divide step down by 2\r\n    if (getCostInternal(originalCost, buyStart + buyInc - stepdown, type, num, r).lte(player[tag])) {\r\n      stepdown = Math.floor(stepdown / 2)\r\n    } else {\r\n      buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown)\r\n    }\r\n  }\r\n\r\n  // Resolves the infamous autobuyer bug, for large values. This prevents the notion of even being able\r\n  // to go above the buymax. Future instances will also not check more than the first few lines\r\n  // meaning that the code below this cannot run if this ever runs.\r\n  if (buyStart + buyInc >= buymax) {\r\n    player[posOwnedType] = buymax\r\n    player[`${pos}Cost${type}` as const] = getCostInternal(originalCost, buymax, type, num, r)\r\n    return\r\n  }\r\n\r\n  // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\r\n  let buyFrom = Math.max(buyStart + buyInc - 6 - smallestInc(buyInc), buydefault)\r\n  let thisCost = getCostInternal(originalCost, buyFrom, type, num, r)\r\n  while (buyFrom <= buyStart + buyInc && player[tag].gte(thisCost)) {\r\n    player[tag] = player[tag].sub(thisCost)\r\n    player[posOwnedType] = buyFrom\r\n    buyFrom = buyFrom + smallestInc(buyFrom)\r\n    thisCost = getCostInternal(originalCost, buyFrom, type, num, r)\r\n    player[`${pos}Cost${type}` as const] = thisCost\r\n  }\r\n}\r\n\r\nconst buyProducerTypes = {\r\n  Diamonds: ['prestigePoints', 'crystal'],\r\n  Mythos: ['transcendPoints', 'mythos'],\r\n  Particles: ['reincarnationPoints', 'particle'],\r\n  Coin: ['coins', 'coin']\r\n} as const\r\n\r\nexport const buyProducer = (pos: FirstToFifth, type: keyof typeof buyProducerTypes, num: number, autobuyer?: boolean) => {\r\n  const [tag, amounttype] = buyProducerTypes[type]\r\n  const buythisamount = autobuyer ? 500 : player[`${amounttype}buyamount` as const]\r\n  let r = 1\r\n  r += (G.rune4level * G.effectiveLevelMult) / 160\r\n  r += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200\r\n  r += CalcECC('transcend', player.challengecompletions[4]) / 200\r\n  r += (3 * (G.bonusant7 + player.antUpgrades[7-1]!)) / 100\r\n\r\n  const posCostType = `${pos}Cost${type}` as const\r\n  const posOwnedType = `${pos}Owned${type}` as const\r\n\r\n\r\n  while (player[tag].gte(player[posCostType]) && G.ticker < buythisamount && player[posOwnedType] < Number.MAX_SAFE_INTEGER) {\r\n    player[tag] = player[tag].sub(player[posCostType])\r\n    player[posOwnedType] += 1\r\n    player[posCostType] = player[posCostType].times(Decimal.pow(1.25, num))\r\n    player[posCostType] = player[posCostType].add(1)\r\n    if (player[posOwnedType] >= (1000 * r)) {\r\n      player[posCostType] = player[posCostType].times(player[posOwnedType]).dividedBy(1000).times(1 + num / 2)\r\n    }\r\n    if (player[posOwnedType] >= (5000 * r)) {\r\n      player[posCostType] = player[posCostType].times(player[posOwnedType]).times(10).times(10 + num * 10)\r\n    }\r\n    if (player[posOwnedType] >= (20000 * r)) {\r\n      player[posCostType] = player[posCostType].times(Decimal.pow(player[posOwnedType], 3)).times(100000).times(100 + num * 100)\r\n    }\r\n    if (player[posOwnedType] >= (250000 * r)) {\r\n      player[posCostType] = player[posCostType].times(Decimal.pow(1.03, player[posOwnedType] - 250000 * r))\r\n    }\r\n    if (player.currentChallenge.transcension === 4 && (type === 'Coin' || type === 'Diamonds')) {\r\n      player[posCostType] = player[posCostType].times(Math.pow(100 * player[posOwnedType] + 10000, 1.25 + 1 / 4 * player.challengecompletions[4]))\r\n      if (player[posOwnedType] >= 1000 - (10 * player.challengecompletions[4])) {\r\n        player[posCostType] = player[posCostType].times(Decimal.pow(1.25, player[posOwnedType]))\r\n      }\r\n    }\r\n    if (player.currentChallenge.reincarnation === 8 && (type === 'Coin' || type === 'Diamonds' || type === 'Mythos') && player[posOwnedType] >= (1000 * player.challengecompletions[8] * r)) {\r\n      player[posCostType] = player[posCostType].times(Decimal.pow(2, (player[posOwnedType] - (1000 * player.challengecompletions[8] * r)) / (1 + (player.challengecompletions[8] / 2))))\r\n    }\r\n    G.ticker += 1\r\n  }\r\n  G.ticker = 0\r\n}\r\n\r\nexport const buyUpgrades = (type: Upgrade, pos: number, state?: boolean) => {\r\n  const currency = type\r\n  if (player[currency].gte(Decimal.pow(10, G.upgradeCosts[pos])) && player.upgrades[pos] === 0) {\r\n    player[currency] = player[currency].sub(Decimal.pow(10, G.upgradeCosts[pos]))\r\n    player.upgrades[pos] = 1\r\n    upgradeupdate(pos, state)\r\n  }\r\n\r\n  if (type === Upgrade.transcend) {\r\n    player.reincarnatenocoinprestigeortranscendupgrades = false\r\n    player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false\r\n  }\r\n  if (type === Upgrade.prestige) {\r\n    player.transcendnocoinorprestigeupgrades = false\r\n    player.reincarnatenocoinorprestigeupgrades = false\r\n    player.reincarnatenocoinprestigeortranscendupgrades = false\r\n    player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false\r\n  }\r\n  if (type === Upgrade.coin) {\r\n    player.prestigenocoinupgrades = false\r\n    player.transcendnocoinupgrades = false\r\n    player.transcendnocoinorprestigeupgrades = false\r\n    player.reincarnatenocoinupgrades = false\r\n    player.reincarnatenocoinorprestigeupgrades = false\r\n    player.reincarnatenocoinprestigeortranscendupgrades = false\r\n    player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false\r\n  }\r\n\r\n}\r\n\r\nexport const calculateCrystalBuy = (i: number) => {\r\n  const u = i - 1\r\n  const exponent = Decimal.log(player.prestigeShards.add(1), 10)\r\n\r\n  const toBuy = Math.floor(Math.pow(Math.max(0, 2 * (exponent - G.crystalUpgradesCost[u]) / G.crystalUpgradeCostIncrement[u] + 1 / 4), 1 / 2) + 1 / 2)\r\n  return toBuy\r\n}\r\n\r\nexport const buyCrystalUpgrades = (i: number, auto = false) => {\r\n  const u = i - 1\r\n\r\n  let c = 0\r\n  c += Math.floor(G.rune3level / 16 * G.effectiveLevelMult) * 100 / 100\r\n  if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n    c += 10\r\n  }\r\n\r\n  const toBuy = calculateCrystalBuy(i)\r\n\r\n  if (toBuy + c > player.crystalUpgrades[u]) {\r\n    player.crystalUpgrades[u] = 100 / 100 * (toBuy + c)\r\n    if (toBuy > 0) {\r\n      player.prestigeShards = player.prestigeShards.sub(Decimal.pow(10, G.crystalUpgradesCost[u] + G.crystalUpgradeCostIncrement[u] * (1 / 2 * Math.pow(toBuy - 1 / 2, 2) - 1 / 8)))\r\n      if (!auto) {\r\n        crystalupgradedescriptions(i)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const boostAccelerator = (automated?: boolean) => {\r\n  let buyamount = 1\r\n  if (player.upgrades[46] === 1) {\r\n    buyamount = automated ? 9999 : player.coinbuyamount\r\n  }\r\n\r\n  if (player.upgrades[46] < 1) {\r\n    while (player.prestigePoints.gte(player.acceleratorBoostCost) && G.ticker < buyamount) {\r\n      if (player.prestigePoints.gte(player.acceleratorBoostCost)) {\r\n        player.acceleratorBoostBought += 1\r\n        player.acceleratorBoostCost = player.acceleratorBoostCost.times(1e10).times(Decimal.pow(10, player.acceleratorBoostBought))\r\n        if (player.acceleratorBoostBought > (1000 * (1 + 2 * G.effectiveRuneBlessingPower[4]))) {\r\n          player.acceleratorBoostCost = player.acceleratorBoostCost.times(Decimal.pow(10, Math.pow(player.acceleratorBoostBought - (1000 * (1 + 2 * G.effectiveRuneBlessingPower[4])), 2) / (1 + 2 * G.effectiveRuneBlessingPower[4])))\r\n        }\r\n        player.transcendnoaccelerator = false\r\n        player.reincarnatenoaccelerator = false\r\n        if (player.upgrades[46] < 0.5) {\r\n          for (let j = 21; j < 41; j++) {\r\n            player.upgrades[j] = 0\r\n          }\r\n          reset('prestige')\r\n          player.prestigePoints = new Decimal(0)\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    const buyStart = player.acceleratorBoostBought\r\n    const buymax = Math.pow(10, 15)\r\n    // If at least buymax, we will use a different formulae\r\n    if (buyStart >= buymax) {\r\n      const diminishingExponent = 1/8\r\n\r\n      const log10Resource = Decimal.log10(player.prestigePoints)\r\n      const log10QuadrillionCost = Decimal.log10(getAcceleratorBoostCost(buymax))\r\n\r\n      let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\r\n      let lo = buymax\r\n      while (hi - lo > 0.5) {\r\n        const mid = Math.floor(lo + (hi - lo) / 2)\r\n        if (mid === lo || mid === hi) {\r\n          break\r\n        }\r\n        if (!player.prestigePoints.gte(getAcceleratorBoostCost(mid))) {\r\n          hi = mid\r\n        } else {\r\n          lo = mid\r\n        }\r\n      }\r\n      const buyable = lo\r\n      const thisCost = getAcceleratorBoostCost(buyable)\r\n\r\n      player.acceleratorBoostBought = buyable\r\n      player.acceleratorBoostCost = thisCost\r\n      return\r\n    }\r\n\r\n    // Start buying at the current amount bought + 1\r\n    const buydefault = buyStart + smallestInc(buyStart)\r\n    let buyInc = 1\r\n\r\n    let cost = getAcceleratorBoostCost(buyStart + buyInc)\r\n    while (player.prestigePoints.gte(cost)) {\r\n      buyInc *= 4\r\n      cost = getAcceleratorBoostCost(buyStart + buyInc)\r\n    }\r\n    let stepdown = Math.floor(buyInc / 8)\r\n    while (stepdown >= smallestInc(buyInc)) {\r\n      // if step down would push it below out of expense range then divide step down by 2\r\n      if (getAcceleratorBoostCost(buyStart + buyInc - stepdown).lte(player.prestigePoints)) {\r\n        stepdown = Math.floor(stepdown / 2)\r\n      } else {\r\n        buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown)\r\n      }\r\n    }\r\n    // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\r\n    let buyFrom = Math.max(buyStart + buyInc - 6 - smallestInc(buyInc), buydefault)\r\n    let thisCost = getAcceleratorBoostCost(player.acceleratorBoostBought)\r\n    while (buyFrom <= buyStart + buyInc && player.prestigePoints.gte(getAcceleratorBoostCost(buyFrom))) {\r\n      player.prestigePoints = player.prestigePoints.sub(thisCost)\r\n      if (buyFrom >= buymax) {\r\n        buyFrom = buymax\r\n      }\r\n      player.acceleratorBoostBought = buyFrom\r\n      buyFrom = buyFrom + smallestInc(buyFrom)\r\n      thisCost = getAcceleratorBoostCost(buyFrom)\r\n      player.acceleratorBoostCost = thisCost\r\n\r\n      player.transcendnoaccelerator = false\r\n      player.reincarnatenoaccelerator = false\r\n      if (buyFrom >= buymax) {\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  G.ticker = 0\r\n  if (player.acceleratorBoostBought >= 2 && player.achievements[162] === 0) {\r\n    achievementaward(162)\r\n  }\r\n  if (player.acceleratorBoostBought >= 10 && player.achievements[163] === 0) {\r\n    achievementaward(163)\r\n  }\r\n  if (player.acceleratorBoostBought >= 50 && player.achievements[164] === 0) {\r\n    achievementaward(164)\r\n  }\r\n  if (player.acceleratorBoostBought >= 200 && player.achievements[165] === 0) {\r\n    achievementaward(165)\r\n  }\r\n  if (player.acceleratorBoostBought >= 1000 && player.achievements[166] === 0) {\r\n    achievementaward(166)\r\n  }\r\n  if (player.acceleratorBoostBought >= 5000 && player.achievements[167] === 0) {\r\n    achievementaward(167)\r\n  }\r\n  if (player.acceleratorBoostBought >= 15000 && player.achievements[168] === 0) {\r\n    achievementaward(168)\r\n  }\r\n\r\n\r\n}\r\n\r\nconst getAcceleratorBoostCost = (level = 1): Decimal => {\r\n  // formula starts at 0 but buying starts at 1\r\n  level--\r\n  const buymax = Math.pow(10, 15)\r\n  const base = new Decimal(1e3)\r\n  const eff = 1 + 2 * G.effectiveRuneBlessingPower[4]\r\n  const linSum = (n: number) => n * (n + 1) / 2\r\n  const sqrSum = (n: number) => n * (n + 1) * (2 * n + 1) / 6\r\n  let cost = base\r\n  if (level > 1000 * eff) {\r\n    cost = base.times(Decimal.pow(10, 10 * level\r\n            + linSum(level) // each level increases the exponent by 1 more each time\r\n            + sqrSum(level - 1000 * eff) / eff)) // after cost delay is passed each level increases the cost by the square each time\r\n  } else {\r\n    cost = base.times(Decimal.pow(10, 10 * level + linSum(level)))\r\n  }\r\n  if (level > buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const QuadrillionCost = getAcceleratorBoostCost(buymax)\r\n\r\n    const newCost = QuadrillionCost.pow(Math.pow(level / buymax, 1 / diminishingExponent))\r\n    const newExtra = newCost.exponent - Math.floor(newCost.exponent)\r\n    newCost.exponent = Math.floor(newCost.exponent)\r\n    newCost.mantissa *= Math.pow(10, newExtra)\r\n    newCost.normalize()\r\n    return Decimal.max(cost, newCost)\r\n  }\r\n  return cost\r\n}\r\n\r\nconst getParticleCost = (originalCost: DecimalSource, buyTo: number): Decimal => {\r\n  --buyTo\r\n  originalCost = new Decimal(originalCost)\r\n  let cost = originalCost.times(Decimal.pow(2, buyTo))\r\n\r\n  const DR = (player.currentChallenge.ascension !== 15)? 325000: 1000\r\n\r\n  if (buyTo > DR) {\r\n    cost = cost.times(Decimal.pow(1.001, (buyTo - DR) * ((buyTo - DR + 1) / 2)))\r\n  }\r\n  const buymax = Math.pow(10, 15)\r\n  if (buyTo > buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const QuadrillionCost = getParticleCost(originalCost, buymax)\r\n\r\n    const newCost = QuadrillionCost.pow(Math.pow(buyTo / buymax, 1 / diminishingExponent))\r\n    const newExtra = newCost.exponent - Math.floor(newCost.exponent)\r\n    newCost.exponent = Math.floor(newCost.exponent)\r\n    newCost.mantissa *= Math.pow(10, newExtra)\r\n    newCost.normalize()\r\n    return Decimal.max(cost, newCost)\r\n  }\r\n  return cost\r\n}\r\n\r\nexport const buyParticleBuilding = (\r\n  index: OneToFive,\r\n  autobuyer = false\r\n) => {\r\n  const zeroIndex = index-1 as ZeroToFour\r\n  const originalCost = mythosAndParticleBuildingCosts[zeroIndex]\r\n  const pos = G.ordinals[zeroIndex]\r\n  const key = `${pos}OwnedParticles` as const\r\n  const buyStart = player[key]\r\n  const buymax = Math.pow(10, 15)\r\n  // If at least buymax, we will use a different formulae\r\n  if (buyStart >= buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const log10Resource = Decimal.log10(player.reincarnationPoints)\r\n    const log10QuadrillionCost = Decimal.log10(getParticleCost(originalCost, buymax))\r\n\r\n    let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\r\n    let lo = buymax\r\n    while (hi - lo > 0.5) {\r\n      const mid = Math.floor(lo + (hi - lo) / 2)\r\n      if (mid === lo || mid === hi) {\r\n        break\r\n      }\r\n      if (!player.reincarnationPoints.gte(getParticleCost(originalCost, mid))) {\r\n        hi = mid\r\n      } else {\r\n        lo = mid\r\n      }\r\n    }\r\n    const buyable = lo\r\n    const thisCost = getParticleCost(originalCost, buyable)\r\n\r\n    player[key] = buyable\r\n    player[`${pos}CostParticles` as const] = thisCost\r\n    return\r\n  }\r\n\r\n  // Start buying at the current amount bought + 1\r\n  const buydefault = buyStart + smallestInc(buyStart)\r\n  let buyTo = buydefault\r\n\r\n  let cashToBuy = getParticleCost(originalCost, buyTo)\r\n  while (player.reincarnationPoints.gte(cashToBuy)) {\r\n    // then multiply by 4 until it reaches just above the amount needed\r\n    buyTo = buyTo * 4\r\n    cashToBuy = getParticleCost(originalCost, buyTo)\r\n  }\r\n  let stepdown = Math.floor(buyTo / 8)\r\n  while (stepdown >= smallestInc(buyTo)) {\r\n    // if step down would push it below out of expense range then divide step down by 2\r\n    if (getParticleCost(originalCost, buyTo - stepdown).lte(player.reincarnationPoints)) {\r\n      stepdown = Math.floor(stepdown / 2)\r\n    } else {\r\n      buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown)\r\n    }\r\n  }\r\n\r\n  if (!autobuyer) {\r\n    if (player.particlebuyamount + buyStart < buyTo) {\r\n      buyTo = buyStart + player.particlebuyamount + smallestInc(player[key] + player.particlebuyamount)\r\n    }\r\n  }\r\n\r\n  // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\r\n  let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault)\r\n  let thisCost = getParticleCost(originalCost, buyFrom)\r\n  while (buyFrom <= buyTo && player.reincarnationPoints.gte(thisCost)) {\r\n    player.reincarnationPoints = player.reincarnationPoints.sub(thisCost)\r\n    player[key] = buyFrom\r\n    buyFrom = buyFrom + smallestInc(buyFrom)\r\n    thisCost = getParticleCost(originalCost, buyFrom)\r\n    player[`${pos}CostParticles` as const] = thisCost\r\n  }\r\n}\r\n\r\nexport const tesseractBuildingCosts = [1, 10, 100, 1000, 10000] as const\r\n\r\n// The nth tesseract building of tier i costs\r\n//   tesseractBuildingCosts[i-1] * n^3.\r\n// so the first n tesseract buildings of tier i costs\r\n//   cost(n) = tesseractBuildingCosts[i-1] * (n * (n+1) / 2)^2\r\n// in total. Use cost(owned+buyAmount) - cost(owned) to figure the cost of\r\n// buying multiple buildings.\r\n\r\nexport type TesseractBuildings = [number|null, number|null, number|null, number|null, number|null]\r\n\r\nconst buyTessBuildingsToCheapestPrice = (ownedBuildings: TesseractBuildings, cheapestPrice: number): [number, TesseractBuildings] => {\r\n  const buyToBuildings = ownedBuildings.map((currentlyOwned, index) => {\r\n    if (currentlyOwned === null) {\r\n      return null\r\n    }\r\n    // thisPrice >= cheapestPrice = tesseractBuildingCosts[index] * (buyTo+1)^3\r\n    // buyTo = cuberoot(cheapestPrice / tesseractBuildingCosts[index]) - 1\r\n    // If buyTo has a fractional part, we want to round UP so that this\r\n    // price costs more than the cheapest price.\r\n    // If buyTo doesn't have a fractional part, thisPrice = cheapestPrice.\r\n    const buyTo = Math.ceil(Math.pow(cheapestPrice / tesseractBuildingCosts[index], 1/3) - 1)\r\n    // It could be possible that cheapestPrice is less than the CURRENT\r\n    // price of this building, so take the max of the number of buildings\r\n    // we currently have.\r\n    return Math.max(currentlyOwned, buyTo)\r\n  }) as TesseractBuildings\r\n\r\n  let price = 0\r\n  for (let i = 0; i < ownedBuildings.length; i++) {\r\n    const buyFrom = ownedBuildings[i]\r\n    const buyTo = buyToBuildings[i]\r\n    if (buyFrom === null || buyTo === null) {\r\n      continue\r\n    }\r\n    price += tesseractBuildingCosts[i] * (Math.pow(buyTo * (buyTo + 1) / 2, 2) - Math.pow(buyFrom * (buyFrom + 1) / 2, 2))\r\n  }\r\n\r\n  return [price, buyToBuildings]\r\n}\r\n\r\n/**\r\n * Calculate the result of repeatedly buying the cheapest tesseract building,\r\n * given an initial list of owned buildings and a budget.\r\n *\r\n * This function is pure and does not rely on any global state other than\r\n * constants for ease of testing.\r\n *\r\n * For tests:\r\n * calculateInBudget([0, 0, 0, 0, 0], 100) = [3, 1, 0, 0, 0]\r\n * calculateInBudget([null, 0, 0, 0, 0], 100) = [null, 2, 0, 0, 0]\r\n * calculateInBudget([3, 1, 0, 0, 0], 64+80-1) = [4, 1, 0, 0, 0]\r\n * calculateInBudget([3, 1, 0, 0, 0], 64+80) = [4, 2, 0, 0, 0]\r\n * calculateInBudget([9, 100, 100, 0, 100], 1000) = [9, 100, 100, 1, 100]\r\n * calculateInBudget([9, 100, 100, 0, 100], 2000) = [10, 100, 100, 1, 100]\r\n *\r\n * and calculateInBudget([0, 0, 0, 0, 0], 1e46) should run in less than a\r\n * second.\r\n *\r\n * @param ownedBuildings The amount of buildings owned, or null if the building\r\n * should not be bought.\r\n * @param budget The number of tesseracts to spend.\r\n * @returns The amount of buildings owned after repeatedly buying the cheapest\r\n * building with the budget.\r\n */\r\nexport const calculateTessBuildingsInBudget = (ownedBuildings: TesseractBuildings, budget: number): TesseractBuildings => {\r\n  // Nothing is affordable.\r\n  // Also catches the case when budget <= 0, and all values are null.\r\n  let minCurrentPrice: number|null = null\r\n  for (let i = 0; i < ownedBuildings.length; i++) {\r\n    const owned = ownedBuildings[i]\r\n    if (owned === null) {\r\n      continue\r\n    }\r\n    const price = tesseractBuildingCosts[i] * Math.pow(owned + 1, 3)\r\n    if (minCurrentPrice === null || price < minCurrentPrice) {\r\n      minCurrentPrice = price\r\n    }\r\n  }\r\n\r\n  if (minCurrentPrice === null || minCurrentPrice > budget) {\r\n    return ownedBuildings\r\n  }\r\n\r\n  // Every time the cheapest building is bought, the cheapest price either\r\n  // stays constant (if there are two or more cheapest buildings), or\r\n  // increases.\r\n  //\r\n  // Additionally, given the price of a building, calculating\r\n  // - the amount of buildings needed to hit that price and\r\n  // - the cumulative cost to buy to that amount of buildings\r\n  // can be done with a constant number of floating point operations.\r\n  //\r\n  // Therefore, by binary searching over \"cheapest price when finished\", we\r\n  // are able to efficiently (O(log budget)) determine the number of buildings\r\n  // owned after repeatedly buying the cheapest building. Calculating the\r\n  // cheapest building and buying one at a time would take O(budget^(1/4))\r\n  // time - and as the budget could get very large (this is Synergism after\r\n  // all), this is probably too slow.\r\n  //\r\n  // That is, we have a function f(cheapestPrice) which returns the cost of\r\n  // buying buildings until all prices to buy are cheapestPrice or higher, and\r\n  // we want to find the maximum value of cheapestPrice such that\r\n  // f(cheapestPrice) <= budget.\r\n  // In this case, f(x) = buyTessBuildingsToCheapestPrice(ownedBuildings, x)[0].\r\n\r\n  // f(minCurrentPrice) = 0 < budget. We also know that we can definitely buy\r\n  // at least one thing.\r\n  let lo = minCurrentPrice\r\n  // Do an exponential search to find the upper bound.\r\n  let hi = lo * 2\r\n  while (buyTessBuildingsToCheapestPrice(ownedBuildings, hi)[0] <= budget) {\r\n    lo = hi\r\n    hi *= 2\r\n  }\r\n  // Invariant:\r\n  // f(lo) <= budget < f(hi).\r\n  while (hi - lo > 0.5) {\r\n    const mid = lo + (hi - lo) / 2\r\n    // It's possible to get into an infinite loop if mid here is equal to\r\n    // the boundaries, even if hi !== lo (due to floating point inaccuracy).\r\n    if (mid === lo || mid === hi) {\r\n      break\r\n    }\r\n    if (buyTessBuildingsToCheapestPrice(ownedBuildings, mid)[0] <= budget) {\r\n      lo = mid\r\n    } else {\r\n      hi = mid\r\n    }\r\n  }\r\n\r\n  // Binary search is done (with lo being the best candidate).\r\n  const [cost, buildings] = buyTessBuildingsToCheapestPrice(ownedBuildings, lo)\r\n\r\n  // Note that this has a slight edge case when 2 <= N <= 5 buildings are the\r\n  // same price, and it is optimal to buy only M < N of them at that price.\r\n  // The result of this edge case is that we can finish the binary search with\r\n  // a set of buildings which are affordable, but more buildings can still be\r\n  // bought. To fix this, we greedily buy the cheapest building one at a time,\r\n  // which should take 4 or less iterations to run out of budget.\r\n  let remainingBudget = budget - cost\r\n  const currentPrices = buildings.map((num, index) => {\r\n    if (num === null) {\r\n      return null\r\n    }\r\n    return tesseractBuildingCosts[index] * Math.pow(num+1, 3)\r\n  })\r\n\r\n  for (let iteration = 1; iteration <= 5; iteration++) {\r\n    let minimum: {price: number, index: number}|null = null\r\n    for (let index = 0; index < currentPrices.length; index++) {\r\n      const price = currentPrices[index]\r\n      if (price === null) {\r\n        continue\r\n      }\r\n      // <= is used instead of < to prioritise the higher tier buildings\r\n      // over the lower tier ones if they have the same price.\r\n      if (minimum === null || price <= minimum.price) {\r\n        minimum = { price, index }\r\n      }\r\n    }\r\n    if (minimum !== null && minimum.price <= remainingBudget) {\r\n      remainingBudget -= minimum.price\r\n            // buildings[minimum.index] should always be a number.\r\n            // In extreme situations (when buildings[minimum.index] is bigger\r\n            // than Number.MAX_SAFE_INTEGER), this below increment won't work.\r\n            // However, that requires 1e47 tesseracts to get to, which shouldn't\r\n            // ever happen.\r\n            buildings[minimum.index]!++\r\n            currentPrices[minimum.index] = tesseractBuildingCosts[minimum.index] * Math.pow(buildings[minimum.index]!+1, 3)\r\n    } else {\r\n      // Can't afford cheapest any more - break.\r\n      break\r\n    }\r\n  }\r\n\r\n  return buildings\r\n}\r\n\r\n/**\r\n * @param index Which tesseract building to get the cost of.\r\n * @param amount The amount to buy. Defaults to tesseract buy amount.\r\n * @param checkCanAfford Whether to limit the purchase amount to the number of buildings the player can afford.\r\n * @returns A pair of [number of buildings after purchase, cost of purchase].\r\n */\r\nexport const getTesseractCost = (index: OneToFive, amount?: number, checkCanAfford = true, buyFrom?: number): [number, number] => {\r\n  amount ??= player.tesseractbuyamount\r\n  buyFrom ??= player[`ascendBuilding${index}` as const].owned\r\n  const intCost = tesseractBuildingCosts[index - 1]\r\n  const subCost = intCost * Math.pow(buyFrom * (buyFrom + 1) / 2, 2)\r\n\r\n  let actualBuy: number\r\n  if (checkCanAfford) {\r\n    const buyTo = Math.floor(-1 / 2 + 1 / 2 * Math.pow(1 + 8 * Math.pow((Number(player.wowTesseracts) + subCost) / intCost, 1 / 2), 1 / 2))\r\n    actualBuy = Math.min(buyTo, buyFrom + amount)\r\n  } else {\r\n    actualBuy = buyFrom + amount\r\n  }\r\n  const actualCost = intCost * Math.pow(actualBuy * (actualBuy + 1) / 2, 2) - subCost\r\n  return [actualBuy, actualCost]\r\n}\r\n\r\nexport const buyTesseractBuilding = (index: OneToFive, amount = player.tesseractbuyamount) => {\r\n  const intCost = tesseractBuildingCosts[index - 1]\r\n  const ascendBuildingIndex = `ascendBuilding${index}` as const\r\n  // Destructuring FTW!\r\n  const [buyTo, actualCost] = getTesseractCost(index, amount)\r\n\r\n  player[ascendBuildingIndex].owned = buyTo\r\n  player.wowTesseracts.sub(actualCost)\r\n  player[ascendBuildingIndex].cost = intCost * Math.pow(1 + buyTo, 3)\r\n}\r\n\r\nexport const buyRuneBonusLevels = (type: 'Blessings' | 'Spirits', index: number) => {\r\n  const unlocked = type === 'Spirits' ? player.challengecompletions[12] > 0 : player.achievements[134] === 1\r\n  if (unlocked && isFinite(player.runeshards) && player.runeshards > 0) {\r\n    let baseCost\r\n    let baseLevels\r\n    let levelCap\r\n    if (type === 'Spirits') {\r\n      baseCost = G.spiritBaseCost\r\n      baseLevels = player.runeSpiritLevels[index]\r\n      levelCap = player.runeSpiritBuyAmount\r\n    } else {\r\n      baseCost = G.blessingBaseCost\r\n      baseLevels = player.runeBlessingLevels[index]\r\n      levelCap = player.runeBlessingBuyAmount\r\n    }\r\n\r\n    const [level, cost] = calculateSummationLinear(baseLevels, baseCost, player.runeshards, levelCap)\r\n    if (type === 'Spirits') {\r\n      player.runeSpiritLevels[index] = level\r\n    } else {\r\n      player.runeBlessingLevels[index] = level\r\n    }\r\n\r\n    player.runeshards -= cost\r\n\r\n    if (player.runeshards < 0) {\r\n      player.runeshards = 0\r\n    }\r\n\r\n    updateRuneBlessing(type, index)\r\n  }\r\n}\r\n\r\nexport const updateRuneBlessing = (type: 'Blessings' | 'Spirits', index: number) => {\r\n  if (index === 1) {\r\n    const requirementArray = [0, 1e5, 1e8, 1e11]\r\n    for (let i = 1; i <= 3; i++) {\r\n      if (player.runeBlessingLevels[1] >= requirementArray[i] && player.achievements[231 + i] < 1) {\r\n        achievementaward(231 + i)\r\n      }\r\n      if (player.runeSpiritLevels[1] >= 10 * requirementArray[i] && player.achievements[234 + i] < 1) {\r\n        achievementaward(234 + i)\r\n      }\r\n    }\r\n    if (player.runeBlessingLevels[1] >= 1e22 && player.achievements[245] < 1) {\r\n      achievementaward(245)\r\n    }\r\n  }\r\n\r\n  calculateRuneBonuses()\r\n\r\n  if (type === 'Blessings') {\r\n    const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1]\r\n    const t = (index === 5) ? 1 : 0\r\n    DOMCacheGetOrSet(`runeBlessingPower${index}Value1`).innerHTML = i18next.t('runes.blessings.blessingPower', {\r\n      reward: i18next.t(`runes.blessings.rewards.${index - 1}`),\r\n      value: format(G.runeBlessings[index]),\r\n      speed: format(1 - t + blessingMultiplierArray[index] * G.effectiveRuneBlessingPower[index], 4, true)\r\n    })\r\n  } else if (type === 'Spirits') { // eslint-disable-line @typescript-eslint/no-unnecessary-condition\r\n    const spiritMultiplierArray = [0, 1, 1, 20, 1, 100]\r\n    spiritMultiplierArray[index] *= (calculateCorruptionPoints() / 400)\r\n    const t = (index === 3) ? 1 : 0\r\n\r\n    DOMCacheGetOrSet(`runeSpiritPower${index}Value1`).innerHTML = i18next.t('runes.spirits.spiritPower', {\r\n      reward: i18next.t(`runes.spirits.rewards.${index - 1}`),\r\n      value: format(G.runeSpirits[index]),\r\n      speed: format(1 - t + spiritMultiplierArray[index] * G.effectiveRuneSpiritPower[index], 4, true)\r\n    })\r\n  }\r\n}\r\n\r\nexport const buyAllBlessings = (type: 'Blessings' | 'Spirits', percentage = 100, auto = false) => {\r\n  const unlocked = type === 'Spirits' ? player.challengecompletions[12] > 0 : player.achievements[134] === 1\r\n  if (unlocked) {\r\n    const runeshards = Math.floor(player.runeshards / 100 * percentage / 5)\r\n    for (let index = 1; index < 6; index++) {\r\n      if (isFinite(player.runeshards) && player.runeshards > 0) {\r\n        let baseCost\r\n        let baseLevels\r\n        const levelCap = 1e300\r\n        if (type === 'Spirits') {\r\n          baseCost = G.spiritBaseCost\r\n          baseLevels = player.runeSpiritLevels[index]\r\n        } else {\r\n          baseCost = G.blessingBaseCost\r\n          baseLevels = player.runeBlessingLevels[index]\r\n        }\r\n\r\n        const [level, cost] = calculateSummationLinear(baseLevels, baseCost, runeshards, levelCap)\r\n        if (level > baseLevels && (!auto || (level - baseLevels) * 10000 > baseLevels)) {\r\n          if (type === 'Spirits') {\r\n            player.runeSpiritLevels[index] = level\r\n          } else {\r\n            player.runeBlessingLevels[index] = level\r\n          }\r\n\r\n          player.runeshards -= cost\r\n\r\n          if (player.runeshards < 0) {\r\n            player.runeshards = 0\r\n          }\r\n\r\n          updateRuneBlessing(type, index)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { player } from './Synergism'\r\nimport { achievementaward } from './Achievements'\r\nimport Decimal from 'break_infinity.js'\r\nimport { upgradeupdate, clickUpgrades } from './Upgrades'\r\nimport { Globals as G, Upgrade } from './Variables'\r\nimport { buyUpgrades } from './Buy'\r\n\r\nexport const buyGenerator = (i: number, state: boolean) => {\r\n  if (i === 1 && player.prestigePoints.gte(1e12) && !player.unlocks.generation) {\r\n    player.unlocks.generation = true\r\n  }\r\n  const q = 100 + i\r\n  let type: 'transcendPoints' | 'coins' | 'prestigePoints' = 'transcendPoints'\r\n  if (q <= 110 && q >= 106) {\r\n    type = 'coins'\r\n  } else if (q <= 115) {\r\n    type = 'prestigePoints'\r\n  }\r\n\r\n  const cost = Decimal.pow(10, G.upgradeCosts[q])\r\n  const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105])\r\n\r\n  if (player.upgrades[q] === 0 && player[type].gte(cost)) {\r\n    if (achievementCheck === 0 && q >= 102 && q <= 105) {\r\n      achievementaward(q - 31)\r\n    }\r\n    player[type] = player[type].sub(cost)\r\n    player.upgrades[q] = 1\r\n    upgradeupdate(q, state)\r\n  }\r\n}\r\n\r\nexport const buyAutobuyers = (i: number, state?: boolean) => {\r\n  const q = i + 80\r\n  let type: 'prestigePoints' | 'transcendPoints' | 'reincarnationPoints' = 'reincarnationPoints'\r\n  if (q <= 87) {\r\n    type = 'prestigePoints'\r\n  } else if (q <= 93) {\r\n    type = 'transcendPoints'\r\n  }\r\n\r\n  const cost = Decimal.pow(10, G.upgradeCosts[q])\r\n  if (player.upgrades[q] === 0 && player[type].gte(cost)) {\r\n    player[type] = player[type].sub(cost)\r\n    player.upgrades[q] = 1\r\n    upgradeupdate(q, state)\r\n  }\r\n}\r\n\r\nexport const autoUpgrades = () => {\r\n  if (player.upgrades[90] > 0.5 && player.shoptoggles.generators) {\r\n\r\n    for (let i = 1; i < 6; i++) {\r\n      if (player.upgrades[100 + i] === 0 && player.prestigePoints.gte(Decimal.pow(10, G.upgradeCosts[(100 + i)]))) {\r\n        buyGenerator(i, true)\r\n      }\r\n    }\r\n    for (let j = 6; j < 11; j++) {\r\n      if (player.upgrades[100 + j] === 0 && player.coins.gte(Decimal.pow(10, G.upgradeCosts[(100 + j)]))) {\r\n        buyGenerator(j, true)\r\n      }\r\n    }\r\n    for (let k = 11; k < 16; k++) {\r\n      if (player.upgrades[100 + k] === 0 && player.prestigePoints.gte(Decimal.pow(10, G.upgradeCosts[(100 + k)]))) {\r\n        buyGenerator(k, true)\r\n      }\r\n    }\r\n    for (let l = 16; l < 21; l++) {\r\n      if (player.upgrades[100 + l] === 0 && player.transcendPoints.gte(Decimal.pow(10, G.upgradeCosts[(100 + l)]))) {\r\n        buyGenerator(l, true)\r\n      }\r\n    }\r\n  }\r\n  if (player.upgrades[91] > 0.5) {\r\n    for (let i = 1; i < 21; i++) {\r\n      if (player.upgrades[i] === 0 && player.coins.gte(Decimal.pow(10, G.upgradeCosts[i])) && player.shoptoggles.coin) {\r\n        buyUpgrades(Upgrade.coin, i, true)\r\n      }\r\n    }\r\n    for (let i = 121; i <= 125; i++) {\r\n      if (player.upgrades[i] === 0 && player.coins.gte(Decimal.pow(10, G.upgradeCosts[i])) && player.shoptoggles.coin && player.cubeUpgrades[19] > 0) {\r\n        buyUpgrades(Upgrade.coin, i, true)\r\n      }\r\n    }\r\n  }\r\n  if (player.upgrades[92] > 0.5) {\r\n    for (let i = 21; i < 38; i++) {\r\n      if (player.upgrades[i] === 0 && player.prestigePoints.gte(Decimal.pow(10, G.upgradeCosts[i])) && player.shoptoggles.prestige) {\r\n        buyUpgrades(Upgrade.prestige, i, true)\r\n      }\r\n    }\r\n    if (player.upgrades[38] === 0 && player.prestigePoints.gte(Decimal.pow(10, 50000)) && player.shoptoggles.prestige && player.achievements[120] === 1) {\r\n      buyUpgrades(Upgrade.prestige, 38, true)\r\n    }\r\n    if (player.upgrades[39] === 0 && player.prestigePoints.gte(Decimal.pow(10, 100000)) && player.shoptoggles.prestige && player.achievements[127] === 1) {\r\n      buyUpgrades(Upgrade.prestige, 39, true)\r\n    }\r\n    if (player.upgrades[40] === 0 && player.prestigePoints.gte(Decimal.pow(10, 200000)) && player.shoptoggles.prestige && player.achievements[134] === 1) {\r\n      buyUpgrades(Upgrade.prestige, 40, true)\r\n    }\r\n\r\n  }\r\n  if (player.upgrades[99] > 0.5) {\r\n    for (let i = 41; i < 61; i++) {\r\n      if (player.upgrades[i] === 0 && player.transcendPoints.gte(Decimal.pow(10, G.upgradeCosts[i])) && player.shoptoggles.transcend) {\r\n        buyUpgrades(Upgrade.transcend, i, true)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (player.cubeUpgrades[8] > 0) {\r\n    for (let i = 61; i <= 80; i++) {\r\n      if (player.upgrades[i] === 0 && player.reincarnationPoints.gte(Decimal.pow(10, G.upgradeCosts[i])) && player.shoptoggles.reincarnate) {\r\n        buyUpgrades(Upgrade.reincarnation, i, true)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (player.highestSingularityCount >= 25) {\r\n    for (let i = 81; i <= 100; i++) {\r\n      if (player.upgrades[i] === 0) {\r\n        clickUpgrades(i, true)\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { Globals as G, Upgrade } from './Variables'\r\nimport Decimal from 'break_infinity.js'\r\nimport { calculateAnts, calculateCorruptionPoints, calculateRuneLevels } from './Calculate'\r\nimport { sumContents } from './Utility'\r\nimport { buyUpgrades } from './Buy'\r\nimport { buyGenerator, buyAutobuyers } from './Automation'\r\nimport { revealStuff } from './UpdateHTML'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\nconst crystalupgdesc: Record<number, () => Record<string, string>> = {\r\n  3: () => ({\r\n    max: format(\r\n      100 * (0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] *\r\n        Math.log(player.commonFragments + 1) / Math.log(4)), 2, true\r\n    )\r\n  }),\r\n  4: () => ({\r\n    max: format(\r\n      10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) /\r\n        Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[3]\r\n    )\r\n  })\r\n}\r\n\r\nconst constantUpgDesc: Record<number, () => Record<string, string>> = {\r\n  1: () => ({ level: format(5 + player.achievements[270] + 0.1 * player.platonicUpgrades[18], 1, true) }),\r\n  2: () => ({\r\n    max: format(\r\n      10 + player.achievements[270] + player.shopUpgrades.constantEX + 100 *\r\n        (G.challenge15Rewards.exponent - 1) + 0.3 * player.platonicUpgrades[18], 2, true\r\n    )\r\n  })\r\n}\r\n\r\nconst upgradetexts = [\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10))),\r\n  () => Math.floor(player.multiplierBought / 7),\r\n  () => Math.floor(player.acceleratorBought / 10),\r\n  () => format(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)), 2),\r\n  () => format(Decimal.pow(1.02, G.freeAccelerator), 2),\r\n  () => format(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)), 2),\r\n  () => format(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)), 2),\r\n  () => format(Decimal.pow(1.15, G.freeAccelerator), 2),\r\n  () => format(Decimal.pow(1.15, G.freeAccelerator), 2),\r\n  () => format(Decimal.pow(G.acceleratorEffect, 1 / 3), 2),\r\n  () => null,\r\n  () => format(Decimal.min(1e125, player.transcendShards.add(1))),\r\n  () => format(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1))),\r\n  () => format(Decimal.pow((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 10), 2),\r\n  () => ({ x: format(Math.floor((1 + (1 / 101 * G.freeMultiplier)))), y: format(Math.floor((5 + (1 / 101 * G.freeAccelerator)))) }),\r\n  () => ({ x: format(Math.floor((1 + (1 / 101 * G.freeMultiplier)))), y: format(Math.floor((4 + (1 / 101 * G.freeAccelerator)))) }),\r\n  () => ({ x: format(Math.floor((1 + (1 / 101 * G.freeMultiplier)))), y: format(Math.floor((3 + (1 / 101 * G.freeAccelerator)))) }),\r\n  () => ({ x: format(Math.floor((1 + (1 / 101 * G.freeMultiplier)))), y: format(Math.floor((2 + (1 / 101 * G.freeAccelerator)))) }),\r\n  () => ({ x: format(Math.floor((1 + (1 / 101 * G.freeMultiplier)))), y: format(Math.floor((1 + (1 / 101 * G.freeAccelerator)))) }),\r\n  () => null,\r\n  () => format(Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.max(0, Math.min(1750, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50))),\r\n  () => format(Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))),\r\n  () => format(Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))),\r\n  () => format(Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)))),\r\n  () => format(Math.floor(G.totalCoinOwned / 2000)),\r\n  () => format(Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)))),\r\n  () => format(G.totalAcceleratorBoost),\r\n  () => format(Math.floor(3 / 103 * G.freeMultiplier)),\r\n  () => format(Math.floor(2 / 102 * G.freeMultiplier)),\r\n  () => format(Decimal.min('1e5000', Decimal.pow(player.prestigePoints, 1 / 500)), 2),\r\n  () => format(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2), 2),\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => format(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2))),\r\n  () => format(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)), 2),\r\n  () => format(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)), 2),\r\n  () => format(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)), 2),\r\n  () => format(Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)))),\r\n  () => null,\r\n  () => format(Math.pow(1.05, player.achievementPoints) * (player.achievementPoints + 1), 2),\r\n  () => format(Math.pow((Math.min(1e25, G.totalMultiplier * G.totalAccelerator) / 1000 + 1), 8)),\r\n  () => format(Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)))),\r\n  () => null,\r\n  () => format(Math.pow(G.totalAcceleratorBoost, 2), 2),\r\n  () => format(Decimal.pow(G.globalMythosMultiplier, 0.025), 2),\r\n  () => format(Decimal.min('1e1250', Decimal.pow(G.acceleratorEffect, 1 / 125)), 2),\r\n  () => format(Decimal.min('1e2000', Decimal.pow(G.multiplierEffect, 1 / 180)), 2),\r\n  () => format((Decimal.pow('1e1000', Math.min(1000, G.buildingPower - 1))), 2),\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => Math.floor(1 / 5 * (sumContents(player.challengecompletions))),\r\n  () => format(Decimal.min('1e6000', Decimal.pow(player.reincarnationPoints.add(1), 6))),\r\n  () => format(Decimal.pow(player.reincarnationPoints.add(1), 2)),\r\n  () => null,\r\n  () => null,\r\n  () => format(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles), 2),\r\n  () => format(Math.min(2500, Math.floor(1 / 1000 * Decimal.log(G.taxdivisor, 10)))),\r\n  () => {\r\n    const a = Decimal.pow(Decimal.log(G.reincarnationPointGain.add(10), 10), 0.5)\r\n    const b = Decimal.pow(Decimal.log(G.reincarnationPointGain.add(10), 10), 0.5)\r\n    return {\r\n      x: format(Math.min(10, new Decimal(a).toNumber()), 2),\r\n      y: format(Math.min(3, new Decimal(b).toNumber()), 2)\r\n    }\r\n  },\r\n  () => format(1/3 * Math.log(player.maxobtainium + 1)/Math.log(10), 2, true),\r\n  () => null,\r\n  () => Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10])),\r\n  () => null,\r\n  () => format((1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5))), 2),\r\n  () => format((1 + 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5))), 2),\r\n  () => null,\r\n  () => format((Decimal.pow(1.004 + 4 / 100000 * player.researches[96], player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts)), 3),\r\n  () => format(1 + 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2), 2, true),\r\n  () => null,\r\n  () => null,\r\n  ...Array.from({ length: 39 }, () => () => null),\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => format(0.333 * player.challengecompletions[10], 0),\r\n  () => format(0.333 * player.challengecompletions[10], 0)\r\n]\r\n\r\nexport const upgradeeffects = (i: number) => {\r\n  const effect = upgradetexts[i - 1]?.()\r\n  const type = typeof effect\r\n  const element = DOMCacheGetOrSet('upgradeeffect')\r\n\r\n  if (i >= 81 && i <= 119) {\r\n    element.textContent = i18next.t('upgrades.effects.81')\r\n  } else if (effect == null) {\r\n    element.textContent = i18next.t(`upgrades.effects.${i}`)\r\n  } else if (type === 'string' || type === 'number') {\r\n    element.textContent = i18next.t(`upgrades.effects.${i}`, { x: effect })\r\n  } else {\r\n    element.textContent = i18next.t(`upgrades.effects.${i}`, effect as Exclude<typeof effect, string | number>)\r\n  }\r\n}\r\n\r\nexport const upgradedescriptions = (i: number) => {\r\n  const y = i18next.t(`upgrades.descriptions.${i}`)\r\n  const z = player.upgrades[i] > 0.5 ? ' BOUGHT!' : ''\r\n\r\n  const el = DOMCacheGetOrSet('upgradedescription')\r\n  el.textContent = y + z\r\n  el.style.color = player.upgrades[i] > 0.5 ? 'gold' : 'white'\r\n\r\n  if (player.toggles[9]) {\r\n    clickUpgrades(i, false)\r\n  }\r\n\r\n  let currency = ''\r\n  let color = ''\r\n  if ((i <= 20 && i >= 1) || (i <= 110 && i >= 106) || (i <= 125 && i >= 121)) {\r\n    currency = 'Coins'\r\n    color = 'yellow'\r\n  }\r\n  if ((i <= 40 && i >= 21) || (i <= 105 && i >= 101) || (i <= 115 && i >= 111) || (i <= 87 && i >= 81)) {\r\n    currency = 'Diamonds'\r\n    color = 'cyan'\r\n  }\r\n  if ((i <= 60 && i >= 41) || (i <= 120 && i >= 116) || (i <= 93 && i >= 88)) {\r\n    currency = 'Mythos'\r\n    color = 'plum'\r\n  }\r\n  if ((i <= 80 && i >= 61) || (i <= 100 && i >= 94)) {\r\n    currency = 'Particles'\r\n    color = 'limegreen'\r\n  }\r\n\r\n  DOMCacheGetOrSet('upgradecost').textContent = 'Cost: ' + format(Decimal.pow(10, G.upgradeCosts[i])) + ' ' + currency\r\n  DOMCacheGetOrSet('upgradecost').style.color = color\r\n  upgradeeffects(i)\r\n}\r\n\r\nexport const clickUpgrades = (i: number, auto: boolean) => {\r\n  // Make sure the upgrade is locked\r\n  if (\r\n    player.upgrades[i] !== 0 ||\r\n        (i <= 40 && i >= 21 && !player.unlocks.prestige) ||\r\n        (i <= 60 && i >= 41 && !player.unlocks.transcend) ||\r\n        (i <= 80 && i >= 61 && !player.unlocks.reincarnate) ||\r\n        (i <= 120 && i >= 81 && !player.unlocks.prestige) ||\r\n        DOMCacheGetOrSet(`upg${i}`)!.style.display === 'none'\r\n  ) {\r\n    return\r\n  }\r\n\r\n  let type: Upgrade | undefined\r\n  if (i <= 20 && i >= 1) {\r\n    type = Upgrade.coin\r\n  }\r\n  if (i <= 40 && i >= 21) {\r\n    type = Upgrade.prestige\r\n  }\r\n  if (i <= 60 && i >= 41) {\r\n    type = Upgrade.transcend\r\n  }\r\n  if (i <= 80 && i >= 61) {\r\n    type = Upgrade.reincarnation\r\n  }\r\n  if (i <= 87 && i >= 81) {\r\n    type = Upgrade.prestige\r\n  }\r\n  if (i <= 93 && i >= 88) {\r\n    type = Upgrade.transcend\r\n  }\r\n  if (i <= 100 && i >= 94) {\r\n    type = Upgrade.reincarnation\r\n  }\r\n  if (type && i <= 80 && i >= 1) {\r\n    buyUpgrades(type, i, auto)\r\n  }\r\n  if (type && i <= 100 && i >= 81) {\r\n    buyAutobuyers(i - 80, auto)\r\n  }\r\n  if (i <= 120 && i >= 101) {\r\n    buyGenerator(i - 100, auto)\r\n  }\r\n  if (i <= 125 && i >= 121) {\r\n    buyUpgrades(Upgrade.coin, i, auto)\r\n  }\r\n}\r\n\r\nexport const categoryUpgrades = (i: number, auto: boolean) => {\r\n  let min = 0\r\n  let max = 0\r\n  if (i === 1) {\r\n    min = 121\r\n    max = 125\r\n    for (let i = 1; i <= 20; i++) {\r\n      clickUpgrades(i, auto)\r\n    }\r\n  }\r\n  if (i === 2) {\r\n    min = 21\r\n    max = 40\r\n  }\r\n  if (i === 3) {\r\n    min = 41\r\n    max = 60\r\n  }\r\n  if (i === 4) {\r\n    min = 101\r\n    max = 120\r\n  }\r\n  if (i === 5) {\r\n    min = 81\r\n    max = 100\r\n  }\r\n  if (i === 6) {\r\n    min = 61\r\n    max = 80\r\n  }\r\n  for (let i = min; i <= max; i++) {\r\n    clickUpgrades(i, auto)\r\n  }\r\n}\r\n\r\nconst crystalupgeffect: Record<number, () => Record<string, string>> = {\r\n  1: () => ({\r\n    x: format(Decimal.min(Decimal.pow(10, 50 + 2 * player.crystalUpgrades[0]), Decimal.pow(1.05, player.achievementPoints * player.crystalUpgrades[0])), 2, true)\r\n  }),\r\n  2: () => ({\r\n    x: format(Decimal.min(Decimal.pow(10, 100 + 5 * player.crystalUpgrades[1]), Decimal.pow(Decimal.log(player.coins.add(1), 10), player.crystalUpgrades[1] / 3)), 2, true)\r\n  }),\r\n  3: () => ({\r\n    x: format(Decimal.pow(1 + Math.min(0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4), 0.001 * player.crystalUpgrades[2]), player.firstOwnedDiamonds + player.secondOwnedDiamonds + player.thirdOwnedDiamonds + player.fourthOwnedDiamonds + player.fifthOwnedDiamonds), 2, true)\r\n  }),\r\n  4: () => ({\r\n    x: format(Math.min(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[3], 0.05 * player.crystalUpgrades[3]), 2, true)\r\n  }),\r\n  5: () => ({\r\n    x: format(Decimal.pow(1.01, (player.challengecompletions[1] + player.challengecompletions[2] + player.challengecompletions[3] + player.challengecompletions[4] + player.challengecompletions[5]) * player.crystalUpgrades[4]), 2, true)\r\n  })\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\r\nconst returnCrystalUpgDesc = (i: number) => i18next.t(`upgrades.crystalUpgrades.${i}`, crystalupgdesc[i]?.())\r\nconst returnCrystalUpgEffect = (i: number) => i18next.t('buildings.crystalUpgrades.currentEffect', {\r\n  effect: i in crystalupgeffect ? i18next.t(`upgrades.crystalEffects.${i}`, crystalupgeffect[i]()) : ''\r\n})\r\n\r\nexport const crystalupgradedescriptions = (i: number) => {\r\n  const p = player.crystalUpgrades[i - 1]\r\n  const c =\r\n        (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0 ? 10 : 0) +\r\n        (Math.floor(G.rune3level * G.effectiveLevelMult /16) * 100 / 100)\r\n\r\n  const q = Decimal.pow(10, (G.crystalUpgradesCost[i - 1] + G.crystalUpgradeCostIncrement[i - 1] * Math.floor(Math.pow(player.crystalUpgrades[i - 1] + 0.5 - c, 2) / 2)))\r\n  DOMCacheGetOrSet('crystalupgradedescription').textContent = returnCrystalUpgDesc(i)\r\n  DOMCacheGetOrSet('crystalupgradeslevel1').innerHTML = i18next.t('buildings.crystalUpgrades.currentLevel', {\r\n    amount: format(p, 0, true)\r\n  })\r\n  DOMCacheGetOrSet('crystalupgradescost1').innerHTML = i18next.t('buildings.crystalUpgrades.cost', { amount: format(q) })\r\n  DOMCacheGetOrSet('crystalupgradeseffect1').innerHTML = returnCrystalUpgEffect(i)\r\n}\r\n\r\n\r\nexport const upgradeupdate = (num: number, fast?: boolean) => {\r\n  const el = DOMCacheGetOrSet(`upg${num}`)\r\n  if (player.upgrades[num] > 0.5) {\r\n    el.style.backgroundColor = 'green'\r\n  } else {\r\n    el.style.backgroundColor = ''\r\n  }\r\n\r\n  const b = i18next.t(`upgrades.descriptions.${num}`)\r\n  const c = player.upgrades[num] > 0.5 ? ' BOUGHT!' : ''\r\n  if (player.upgrades[num] > 0.5) {\r\n    if (!fast) {\r\n      DOMCacheGetOrSet('upgradedescription').textContent = b + c\r\n      DOMCacheGetOrSet('upgradedescription').style.color = 'gold'\r\n    }\r\n  }\r\n\r\n  if (!fast) {\r\n    revealStuff()\r\n  }\r\n}\r\n\r\nexport const ascendBuildingDR = () => {\r\n  const sum = player.ascendBuilding1.owned + player.ascendBuilding2.owned + player.ascendBuilding3.owned + player.ascendBuilding4.owned + player.ascendBuilding5.owned\r\n\r\n  if (sum > 100000) {\r\n    return Math.pow(100000, 0.5) * Math.pow(sum, 0.5)\r\n  } else {\r\n    return sum\r\n  }\r\n}\r\n\r\nconst constUpgEffect: Record<number, () => Record<string, string>> = {\r\n  1: () => ({\r\n    x: format(Decimal.pow(1.05 + 0.01 * player.achievements[270] + 0.001 * player.platonicUpgrades[18], player.constantUpgrades[1]), 2, true)\r\n  }),\r\n  2: () => ({\r\n    x: format(Decimal.pow(1 + 0.001 * Math.min(100 + 10 * player.achievements[270] + 10 * player.shopUpgrades.constantEX + 3 * player.platonicUpgrades[18] + 1000 * (G.challenge15Rewards.exponent - 1), player.constantUpgrades[2]), ascendBuildingDR()), 2, true)\r\n  }),\r\n  3: () => ({\r\n    x: format(1 + 0.02 * player.constantUpgrades[3], 2, true)\r\n  }),\r\n  4: () => ({\r\n    x: format(1 + 0.04 * player.constantUpgrades[4], 2, true)\r\n  }),\r\n  5: () => ({\r\n    x: format(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]), 2, true)\r\n  }),\r\n  6: () => ({\r\n    x: format(2 * player.constantUpgrades[6])\r\n  }),\r\n  7: () => ({\r\n    x: format(7 * player.constantUpgrades[7]),\r\n    y: format(3 * player.constantUpgrades[7])\r\n  }),\r\n  8: () => ({\r\n    x: format(1 + 1 / 10 * player.constantUpgrades[8], 2, true)\r\n  }),\r\n  9: () => ({\r\n    x: format(1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]), 4, true)\r\n  }),\r\n  10: () => ({\r\n    x: format(1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]), 4, true)\r\n  })\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\r\nconst returnConstUpgDesc = (i: number) => i18next.t(`upgrades.constantUpgrades.${i}`, constantUpgDesc[i]?.())\r\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\r\nconst returnConstUpgEffect = (i: number) => i18next.t(`upgrades.constantEffects.${i}`, constUpgEffect[i]?.())\r\n\r\nexport const getConstUpgradeMetadata = (i: number): [number, Decimal] => {\r\n  const toBuy = Math.max(0, Math.floor(1 + Decimal.log(Decimal.max(0.01, player.ascendShards), 10) - Math.log(G.constUpgradeCosts[i]!) / Math.log(10)))\r\n  let cost: Decimal\r\n\r\n  if (toBuy > player.constantUpgrades[i]!) {\r\n    cost = Decimal.pow(10, toBuy - 1).times(G.constUpgradeCosts[i]!)\r\n  } else {\r\n    cost = Decimal.pow(10, player.constantUpgrades[i]!).times(G.constUpgradeCosts[i]!)\r\n  }\r\n\r\n  return [Math.max(1, toBuy - player.constantUpgrades[i]!), cost]\r\n}\r\n\r\nexport const constantUpgradeDescriptions = (i: number) => {\r\n  const [level, cost] = getConstUpgradeMetadata(i)\r\n  DOMCacheGetOrSet('constUpgradeDescription').textContent = returnConstUpgDesc(i)\r\n  DOMCacheGetOrSet('constUpgradeLevel2').textContent = format(player.constantUpgrades[i])\r\n  DOMCacheGetOrSet('constUpgradeCost2').textContent = format(cost) + ' [+' + format(level) + ' LVL]'\r\n  DOMCacheGetOrSet('constUpgradeEffect2').textContent = returnConstUpgEffect(i)\r\n}\r\n\r\nexport const buyConstantUpgrades = (i: number, fast = false) => {\r\n  const [level, cost] = getConstUpgradeMetadata(i)\r\n  if (player.ascendShards.gte(cost)) {\r\n        player.constantUpgrades[i]! += level\r\n        if (player.researches[175] === 0) {\r\n          player.ascendShards = player.ascendShards.sub(cost)\r\n        }\r\n        if (!fast) {\r\n          constantUpgradeDescriptions(i)\r\n        }\r\n  }\r\n  calculateAnts()\r\n  calculateRuneLevels()\r\n}\r\n", "import i18next from 'i18next'\r\nimport { format } from './Synergism'\r\nimport { Alert, Prompt } from './UpdateHTML'\r\n\r\nexport interface IUpgradeData {\r\n    name: string\r\n    description: string\r\n    level?: number\r\n    maxLevel: number\r\n    costPerLevel: number\r\n    toggleBuy?: number\r\n    effect? (this: void, n: number): {bonus: number | boolean, desc: string}\r\n    freeLevels?: number\r\n}\r\n\r\nexport abstract class DynamicUpgrade {\r\n  public name: string\r\n  readonly description: string\r\n  public level = 0\r\n  public freeLevels = 0\r\n  readonly maxLevel: number //-1 = infinitely levelable\r\n  readonly costPerLevel: number\r\n  public toggleBuy = 1 //-1 = buy MAX (or 1000 in case of infinity levels!)\r\n  readonly effect: (n: number) => {bonus: number | boolean, desc: string}\r\n\r\n  constructor(data: IUpgradeData) {\r\n    this.name = data.name\r\n    this.description = data.description\r\n    this.level = data.level ?? 0\r\n    this.freeLevels = data.freeLevels ?? 0\r\n    this.maxLevel = data.maxLevel\r\n    this.costPerLevel = data.costPerLevel\r\n    this.toggleBuy = data.toggleBuy ?? 1\r\n    this.effect = data.effect ?? function (n: number) {\r\n      return { bonus: n, desc: 'WIP not implemented' }\r\n    }\r\n  }\r\n\r\n  public async changeToggle(): Promise<void> {\r\n\r\n    // Is null unless given an explicit number\r\n    const newToggle = await Prompt(i18next.t('dynamicUpgrades.validation.setPurchaseAmount', { x: this.name }))\r\n    const newToggleAmount = Number(newToggle)\r\n\r\n    if (newToggle === null) {\r\n      return Alert(i18next.t('dynamicUpgrades.validation.toggleKept', { x: format(this.toggleBuy) }))\r\n    }\r\n\r\n    if (!Number.isInteger(newToggle)) {\r\n      return Alert(i18next.t('general.validation.fraction'))\r\n    }\r\n    if (newToggleAmount < -1) {\r\n      return Alert(i18next.t('dynamicUpgrades.validation.onlyNegativeOne'))\r\n    }\r\n    if (newToggleAmount === 0) {\r\n      return Alert(i18next.t('dynamicUpgrades.validation.notZero'))\r\n    }\r\n\r\n    this.toggleBuy = newToggleAmount\r\n    const m = newToggleAmount === -1\r\n      ? i18next.t('dynamicUpgrades.toggleMax')\r\n      : i18next.t('dynamicUpgrades.toggle', { x: format(this.toggleBuy) })\r\n\r\n    return Alert(m)\r\n  }\r\n\r\n  public getEffect(): {bonus: number | boolean, desc: string} {\r\n    const effectiveLevel = this.level + Math.min(this.level, this.freeLevels) + Math.sqrt(Math.max(0, this.freeLevels - this.level))\r\n    return this.effect(effectiveLevel)\r\n  }\r\n\r\n    abstract toString(): string\r\n    abstract updateUpgradeHTML(): void\r\n    abstract getCostTNL(): number\r\n    public abstract buyLevel(event: MouseEvent): Promise<void> | void\r\n}\r\n", "import { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport type { IUpgradeData } from './DynamicUpgrade'\r\nimport { DynamicUpgrade } from './DynamicUpgrade'\r\nimport { format, player } from './Synergism'\r\nimport type { Player } from './types/Synergism'\r\nimport { Alert, Prompt, revealStuff } from './UpdateHTML'\r\nimport { toOrdinal } from './Utility'\r\nimport i18next from 'i18next'\r\n\r\nexport const updateSingularityPenalties = (): void => {\r\n  const singularityCount = player.singularityCount\r\n  const platonic = (singularityCount > 36) ? i18next.t('singularity.penalties.platonicCosts', { multiplier: format(calculateSingularityDebuff('Platonic Costs', singularityCount), 2, true) }) : '<span class=\"grayText\">???????? ??????? ????? ??? ?????????? ?? ???</span> <span class=\"redText\">(37)</span>'\r\n  const hepteract = (singularityCount > 50) ? i18next.t('singularity.penalties.hepteractCosts', { multiplier: format(calculateSingularityDebuff('Hepteract Costs', singularityCount), 2, true) }) : '<span class=\"grayText\">????????? ????? ????? ??? ?????????? ?? ???</span> <span class=\"redText\">(51)</span>'\r\n  const str = getSingularityOridnalText(singularityCount) +\r\n      `<br>${i18next.t('singularity.penalties.globalSpeed', { divisor: format(calculateSingularityDebuff('Global Speed', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.ascensionSpeed', { divisor: format(calculateSingularityDebuff('Ascension Speed', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.offeringGain', { divisor: format(calculateSingularityDebuff('Offering', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.obtainiumGain', { divisor: format(calculateSingularityDebuff('Obtainium', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.cubeGain', { divisor: format(calculateSingularityDebuff('Cubes', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.researchCosts', { multiplier: format(calculateSingularityDebuff('Researches', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.cubeUpgradeCosts', { multiplier: format(calculateSingularityDebuff('Cube Upgrades', singularityCount), 2, true) })}\r\n        ${platonic}\r\n        ${hepteract}\r\n        ${(singularityCount >= 230) ? i18next.t('singularity.penalties.penaltySmooth') : i18next.t('singularity.penalties.penaltyRough', { num: format(calculateNextSpike(player.singularityCount), 0, true) })}\r\n        ${(player.runelevels[6] > 0) ? i18next.t('singularity.penalties.antiquitiesBought') : i18next.t('singularity.penalties.antiquitiesNotBought')}`\r\n\r\n  DOMCacheGetOrSet('singularityPenaltiesMultiline').innerHTML = str\r\n}\r\n\r\nfunction getSingularityOridnalText(singularityCount: number): string {\r\n  return `${i18next.t('general.youAreInThe')} <span style=\"color: gold\">${toOrdinal(singularityCount)} Singularity</span>`\r\n}\r\n\r\n// Need a better way of handling the ones without a special formulae than 'Default' variant\r\ntype SingularitySpecialCostFormulae = 'Default' | 'Quadratic' | 'Cubic' | 'Exponential2'\r\n\r\nexport interface ISingularityData extends Omit<IUpgradeData, 'name' | 'description'> {\r\n    goldenQuarksInvested?: number\r\n    minimumSingularity?: number\r\n    canExceedCap?: boolean\r\n    specialCostForm?: SingularitySpecialCostFormulae\r\n    qualityOfLife?: boolean\r\n    cacheUpdates?: (() => void)[] // TODO: Improve this type signature -Plat\r\n}\r\n\r\n/**\r\n * Singularity Upgrades are bought in the Shop of the singularity tab, and all have their own\r\n * name, description, level and maxlevel, plus a feature to toggle buy on each.\r\n */\r\nexport class SingularityUpgrade extends DynamicUpgrade {\r\n\r\n  // Field Initialization\r\n  public goldenQuarksInvested = 0\r\n  public minimumSingularity: number\r\n  public canExceedCap: boolean\r\n  public specialCostForm: SingularitySpecialCostFormulae\r\n  public qualityOfLife: boolean\r\n  readonly cacheUpdates: (() => void)[] | undefined\r\n\r\n  public constructor(data: ISingularityData, key: string) {\r\n    const name = i18next.t(`singularity.data.${key}.name`)\r\n    const description = i18next.t(`singularity.data.${key}.description`)\r\n\r\n    super({ ...data, name, description })\r\n    this.goldenQuarksInvested = data.goldenQuarksInvested ?? 0\r\n    this.minimumSingularity = data.minimumSingularity ?? 0\r\n    this.canExceedCap = data.canExceedCap ?? false\r\n    this.specialCostForm = data.specialCostForm ?? 'Default'\r\n    this.qualityOfLife = data.qualityOfLife ?? false\r\n    this.cacheUpdates = data.cacheUpdates ?? undefined\r\n  }\r\n\r\n  /**\r\n     * Given an upgrade, give a concise information regarding its data.\r\n     * @returns A string that details the name, description, level statistic, and next level cost.\r\n     */\r\n  toString(): string {\r\n    const costNextLevel = this.getCostTNL()\r\n    const maxLevel = this.maxLevel === -1\r\n      ? ''\r\n      : `/${format(this.computeMaxLevel(), 0, true)}`\r\n    const color = this.computeMaxLevel() === this.level ? 'plum' : 'white'\r\n    const minReqColor = player.highestSingularityCount < this.minimumSingularity ? 'var(--crimson-text-color)' : 'var(--green-text-color)'\r\n    const minimumSingularity = this.minimumSingularity > 0\r\n      ? `${i18next.t('general.minimum')} Singularity: ${this.minimumSingularity}`\r\n      : i18next.t('singularity.toString.noMinimum')\r\n\r\n    let freeLevelInfo = this.freeLevels > 0 ?\r\n      `<span style=\"color: orange\"> [+${format(this.freeLevels, 2, true)}]</span>` : ''\r\n\r\n    if (this.freeLevels > this.level) {\r\n      freeLevelInfo = freeLevelInfo + `<span style=\"color: var(--maroon-text-color)\"> ${i18next.t('general.softCapped')}</span>`\r\n    }\r\n\r\n    return `<span style=\"color: gold\">${this.name}</span>\r\n                <span style=\"color: lightblue\">${this.description}</span>\r\n                <span style=\"color: ${minReqColor}\">${minimumSingularity}</span>\r\n                <span style=\"color: ${color}\"> ${i18next.t('general.level')} ${format(this.level, 0, true)}${maxLevel}${freeLevelInfo}</span>\r\n                <span style=\"color: gold\">${this.getEffect().desc}</span>\r\n                ${i18next.t('singularity.toString.costNextLevel')}: ${format(costNextLevel, 0, true)} Golden Quarks.\r\n                ${i18next.t('general.spent')} Quarks: ${format(this.goldenQuarksInvested, 0, true)}`\r\n  }\r\n\r\n  public updateUpgradeHTML(): void {\r\n    DOMCacheGetOrSet('testingMultiline').innerHTML = this.toString()\r\n  }\r\n\r\n  /**\r\n     * Retrieves the cost for upgrading the singularity upgrade once. Return 0 if maxed.\r\n     * @returns A number representing how many Golden Quarks a player must have to upgrade once.\r\n     */\r\n  getCostTNL(): number {\r\n\r\n    let costMultiplier = 1\r\n    if (this.computeMaxLevel() > this.maxLevel && this.level >= this.maxLevel) {\r\n      costMultiplier *= Math.pow(4, this.level - this.maxLevel + 1)\r\n    }\r\n\r\n    if (this.specialCostForm === 'Exponential2') {\r\n      return this.costPerLevel * Math.sqrt(costMultiplier) * Math.pow(2, this.level)\r\n    }\r\n\r\n    if (this.specialCostForm === 'Cubic') {\r\n      return this.costPerLevel * costMultiplier * (Math.pow(this.level + 1, 3) - Math.pow(this.level, 3))\r\n    }\r\n\r\n    if (this.specialCostForm === 'Quadratic') {\r\n      return this.costPerLevel * costMultiplier * (Math.pow(this.level + 1, 2) - Math.pow(this.level, 2))\r\n    }\r\n\r\n    costMultiplier *= (this.maxLevel === -1 && this.level >= 100) ? this.level / 50 : 1\r\n    costMultiplier *= (this.maxLevel === -1 && this.level >= 400) ? this.level / 100 : 1\r\n\r\n    return (this.computeMaxLevel() === this.level) ? 0: Math.ceil(this.costPerLevel * (1 + this.level) * costMultiplier)\r\n  }\r\n\r\n  /**\r\n     * Buy levels up until togglebuy or maxed.\r\n     * @returns An alert indicating cannot afford, already maxed or purchased with how many\r\n     *          levels purchased\r\n     */\r\n  public async buyLevel(event: MouseEvent): Promise<void> {\r\n    let purchased = 0\r\n    let maxPurchasable = 1\r\n    let GQBudget = player.goldenQuarks\r\n\r\n    if (event.shiftKey) {\r\n      maxPurchasable = 100000\r\n      const buy = Number(await Prompt(i18next.t('singularity.goldenQuarks.spendPrompt', {\r\n        gq: format(player.goldenQuarks, 0, true)\r\n      })))\r\n\r\n      if (isNaN(buy) || !isFinite(buy) || !Number.isInteger(buy)) { // nan + Infinity checks\r\n        return Alert(i18next.t('general.validation.finite'))\r\n      }\r\n\r\n      if (buy === -1) {\r\n        GQBudget = player.goldenQuarks\r\n      } else if (buy <= 0) {\r\n        return Alert(i18next.t('general.validation.zeroOrLess'))\r\n      } else {\r\n        GQBudget = buy\r\n      }\r\n      GQBudget = Math.min(player.goldenQuarks, GQBudget)\r\n    }\r\n\r\n    if (this.maxLevel > 0) {\r\n      maxPurchasable = Math.min(maxPurchasable, this.computeMaxLevel() - this.level)\r\n    }\r\n\r\n    if (maxPurchasable === 0) {\r\n      return Alert(i18next.t('singularity.goldenQuarks.hasUpgrade'))\r\n    }\r\n\r\n    if (player.highestSingularityCount < this.minimumSingularity) {\r\n      return Alert(i18next.t('singularity.goldenQuarks.notHighEnoughLevel'))\r\n    }\r\n    while (maxPurchasable > 0) {\r\n      const cost = this.getCostTNL()\r\n      if (player.goldenQuarks < cost || GQBudget < cost) {\r\n        break\r\n      } else {\r\n        player.goldenQuarks -= cost\r\n        GQBudget -= cost\r\n        this.goldenQuarksInvested += cost\r\n        this.level += 1\r\n        purchased += 1\r\n        maxPurchasable -= 1\r\n      }\r\n      if (this.name === player.singularityUpgrades.oneMind.name) {\r\n        player.ascensionCounter = 0\r\n        player.ascensionCounterReal = 0\r\n        player.ascensionCounterRealReal = 0\r\n        void Alert(i18next.t('singularity.goldenQuarks.ascensionReset'))\r\n      }\r\n\r\n      if (this.name === player.singularityUpgrades.singCitadel2.name) {\r\n        player.singularityUpgrades.singCitadel.freeLevels = player.singularityUpgrades.singCitadel2.level\r\n      }\r\n\r\n      if (this.name === player.singularityUpgrades.blueberries.name) {\r\n        player.caches.ambrosiaGeneration.updateVal('SingularityBerries')\r\n      }\r\n    }\r\n\r\n    if (purchased === 0) {\r\n      return Alert(i18next.t('general.validation.moreThanPlayerHas'))\r\n    }\r\n    if (purchased > 1) {\r\n      void Alert(i18next.t('singularity.goldenQuarks.multiBuyPurchased', { levels: format(purchased) }))\r\n    }\r\n\r\n    this.updateUpgradeHTML()\r\n    this.updateCaches()\r\n    updateSingularityPenalties()\r\n    updateSingularityPerks()\r\n    revealStuff()\r\n  }\r\n\r\n  public computeFreeLevelSoftcap(): number {\r\n    return Math.min(this.level, this.freeLevels) + Math.sqrt(Math.max(0, this.freeLevels - this.level))\r\n  }\r\n\r\n  public computeMaxLevel(): number {\r\n    if (!this.canExceedCap) {\r\n      return this.maxLevel\r\n    } else {\r\n      let cap = this.maxLevel\r\n      const overclockPerks = [50, 60, 75, 100, 125, 150, 175, 200, 225, 250]\r\n      for (const perk of overclockPerks) {\r\n        if (player.highestSingularityCount >= perk) {\r\n          cap += 1\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n      cap += +player.octeractUpgrades.octeractSingUpgradeCap.getEffect().bonus\r\n      return cap\r\n    }\r\n  }\r\n\r\n  public actualTotalLevels(): number {\r\n    if (player.singularityChallenges.noSingularityUpgrades.enabled && !this.qualityOfLife) {\r\n      return 0\r\n    }\r\n\r\n    if (player.singularityChallenges.limitedAscensions.enabled && this.name === player.singularityUpgrades.platonicDelta.name) {\r\n      return 0\r\n    }\r\n\r\n    const actualFreeLevels = this.computeFreeLevelSoftcap()\r\n    const linearLevels = this.level + actualFreeLevels\r\n    let polynomialLevels = 0\r\n    if (player.octeractUpgrades.octeractImprovedFree.getEffect().bonus) {\r\n      let exponent = 0.6\r\n      exponent += +player.octeractUpgrades.octeractImprovedFree2.getEffect().bonus\r\n      exponent += +player.octeractUpgrades.octeractImprovedFree3.getEffect().bonus\r\n      exponent += +player.octeractUpgrades.octeractImprovedFree4.getEffect().bonus\r\n      polynomialLevels = Math.pow(this.level * actualFreeLevels, exponent)\r\n    }\r\n\r\n    return Math.max(linearLevels, polynomialLevels)\r\n  }\r\n\r\n  public getEffect(): { bonus: number | boolean, desc: string } {\r\n    return this.effect(this.actualTotalLevels())\r\n  }\r\n\r\n  updateCaches(): void {\r\n    if (this.cacheUpdates !== undefined) {\r\n      for (const cache of this.cacheUpdates) {\r\n        cache()\r\n      }\r\n    }\r\n  }\r\n\r\n  public refund(): void {\r\n    player.goldenQuarks += this.goldenQuarksInvested\r\n    this.level = 0\r\n    this.goldenQuarksInvested = 0\r\n  }\r\n}\r\n\r\nexport const singularityData: Record<keyof Player['singularityUpgrades'], ISingularityData> = {\r\n  goldenQuarks1: {\r\n    maxLevel: 15,\r\n    costPerLevel: 12,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.10 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.goldenQuarks1.effect', { n: format(10 * n, 0, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  goldenQuarks2: {\r\n    maxLevel: 75,\r\n    costPerLevel: 60,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 250) ? 1 / Math.log2(n / 62.5) : 1 - Math.min(0.5, n / 500),\r\n        get desc () {\r\n          return i18next.t('singularity.data.goldenQuarks2.effect', {\r\n            n: n > 250 ? format(100 - 100 / Math.log2(n / 62.5), 2, true) : format(Math.min(50, n / 5), 2, true)\r\n          })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  goldenQuarks3: {\r\n    maxLevel: 1000,\r\n    costPerLevel: 1000,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n * (n + 1) / 2,\r\n        get desc () {\r\n          return i18next.t('singularity.data.goldenQuarks3.effect', { n: format(n * (n + 1) / 2) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  starterPack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.starterPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  wowPass: {\r\n    maxLevel: 1,\r\n    costPerLevel: 350,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.wowPass.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  cookies: {\r\n    maxLevel: 1,\r\n    costPerLevel: 100,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.cookies.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  cookies2: {\r\n    maxLevel: 1,\r\n    costPerLevel: 500,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.cookies2.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  cookies3: {\r\n    maxLevel: 1,\r\n    costPerLevel: 24999,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.cookies3.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  cookies4: {\r\n    maxLevel: 1,\r\n    costPerLevel: 499999,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.cookies4.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  cookies5: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1.66e15,\r\n    minimumSingularity: 209,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.cookies5.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  ascensions: {\r\n    maxLevel: -1,\r\n    costPerLevel: 5,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (1 + 2 * n / 100) * (1 + Math.floor(n / 10) / 100),\r\n        get desc () {\r\n          return i18next.t('singularity.data.ascensions.effect', {\r\n            n: format((100 + 2 * n) * (1 + Math.floor(n/10) / 100) - 100, 1, true)\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  corruptionFourteen: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1000,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.corruptionFourteen.effect${n > 0 ? 'Have' : 'HaveNot'}`, {\r\n            m: n > 0 ? ':)' : ':('\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  corruptionFifteen: {\r\n    maxLevel: 1,\r\n    costPerLevel: 40000,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.corruptionFifteen.effect${n > 0 ? 'Have' : 'HaveNot'}`, {\r\n            m: n > 0 ? ':)' : ':('\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOfferings1: {\r\n    maxLevel: -1,\r\n    costPerLevel: 1,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.02 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOfferings1.effect', { n: format(2 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n\r\n  },\r\n  singOfferings2: {\r\n    maxLevel: 25,\r\n    costPerLevel: 25,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.08 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOfferings2.effect', { n: format(8 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOfferings3: {\r\n    maxLevel: 40,\r\n    costPerLevel: 500,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.04 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOfferings3.effect', { n: format(4 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singObtainium1: {\r\n    maxLevel: -1,\r\n    costPerLevel: 1,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.02 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singObtainium1.effect', { n: format(2 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singObtainium2: {\r\n    maxLevel: 25,\r\n    costPerLevel: 25,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.08 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singObtainium2.effect', { n: format(8 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singObtainium3: {\r\n    maxLevel: 40,\r\n    costPerLevel: 500,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.04 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singObtainium3.effect', { n: format(4 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singCubes1: {\r\n    maxLevel: -1,\r\n    costPerLevel: 1,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singCubes1.effect', { n: format(1 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singCubes2: {\r\n    maxLevel: 25,\r\n    costPerLevel: 25,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.08 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singCubes2.effect', { n: format(8 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singCubes3: {\r\n    maxLevel: 40,\r\n    costPerLevel: 500,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.04 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singCubes3.effect', { n: format(4 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singCitadel: {\r\n    maxLevel: -1,\r\n    costPerLevel: 500000,\r\n    minimumSingularity: 100,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (1 + 0.02 * n) * (1 + Math.floor(n / 10) / 100),\r\n        get desc () {\r\n          return i18next.t('singularity.data.singCubes2.effect', {\r\n            n: format(100 * ((1 + 0.02 * n) * (1 + Math.floor(n/10)/100) - 1))\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singCitadel2: {\r\n    maxLevel: 100,\r\n    costPerLevel: 1e14,\r\n    minimumSingularity: 204,\r\n    specialCostForm: 'Quadratic',\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (1 + 0.02 * n) * (1 + Math.floor(n / 10) / 100),\r\n        get desc () {\r\n          return i18next.t('singularity.data.singCubes3.effect', { n:\r\n                    format(100 * ((1 + 0.02 * n) * (1 + Math.floor(n/10)/100) - 1))\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractUnlock: {\r\n    maxLevel: 1,\r\n    costPerLevel: 8888,\r\n    minimumSingularity: 8,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.octeractUnlock.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singOcteractPatreonBonus: {\r\n    maxLevel: 1,\r\n    costPerLevel: 9999,\r\n    minimumSingularity: 12,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractPatreonBonus.effect', { n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  offeringAutomatic: {\r\n    maxLevel: -1,\r\n    costPerLevel: 1e14,\r\n    minimumSingularity: 222,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.offeringAutomatic.effect', { n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  intermediatePack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1,\r\n    minimumSingularity: 4,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.intermediatePack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  advancedPack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 200,\r\n    minimumSingularity: 9,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.advancedPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  expertPack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 800,\r\n    minimumSingularity: 16,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.expertPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  masterPack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 3200,\r\n    minimumSingularity: 25,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.masterPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  divinePack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 12800,\r\n    minimumSingularity: 36,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.divinePack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  wowPass2: {\r\n    maxLevel: 1,\r\n    costPerLevel: 19999,\r\n    minimumSingularity: 11,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.wowPass2.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  wowPass3: {\r\n    maxLevel: 1,\r\n    costPerLevel: 3e7 - 1,\r\n    minimumSingularity: 83,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.wowPass3.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  potionBuff: {\r\n    maxLevel: 10,\r\n    costPerLevel: 999,\r\n    minimumSingularity: 4,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: Math.max(1, 10 * Math.pow(n, 2)),\r\n        get desc () {\r\n          return i18next.t('singularity.data.potionBuff.effect', {\r\n            n: format(Math.max(1, 10 * Math.pow(n, 2)), 0, true)\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  potionBuff2: {\r\n    maxLevel: 10,\r\n    costPerLevel: 1e8,\r\n    minimumSingularity: 119,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: Math.max(1, 2 * n),\r\n        get desc () {\r\n          return i18next.t('singularity.data.potionBuff2.effect', { n: format(Math.max(1, 2 * n), 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  potionBuff3: {\r\n    maxLevel: 10,\r\n    costPerLevel: 1e12,\r\n    minimumSingularity: 191,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: Math.max(1, 1 + 0.5 * n),\r\n        get desc () {\r\n          return i18next.t('singularity.data.potionBuff3.effect', { n: format(Math.max(1, 1 + 0.5 * n), 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singChallengeExtension: {\r\n    maxLevel: 4,\r\n    costPerLevel: 999,\r\n    minimumSingularity: 11,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singChallengeExtension.effect', { n: 2 * n, m: n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singChallengeExtension2: {\r\n    maxLevel: 3,\r\n    costPerLevel: 29999,\r\n    minimumSingularity: 26,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singChallengeExtension2.effect', { n: 2 * n, m: n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singChallengeExtension3: {\r\n    maxLevel: 3,\r\n    costPerLevel: 749999,\r\n    minimumSingularity: 51,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singChallengeExtension3.effect', { n: 2 * n, m: n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singQuarkImprover1: {\r\n    maxLevel: 30,\r\n    costPerLevel: 1,\r\n    minimumSingularity: 173,\r\n    canExceedCap: true,\r\n    specialCostForm: 'Exponential2',\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n/200,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singQuarkImprover1.effect', { n: format(n / 2, 2, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singQuarkHepteract: {\r\n    maxLevel: 1,\r\n    costPerLevel: 14999,\r\n    minimumSingularity: 5,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n/100,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singQuarkHepteract.effect', { n: format(2 * n, 2, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singQuarkHepteract2: {\r\n    maxLevel: 1,\r\n    costPerLevel: 449999,\r\n    minimumSingularity: 30,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n/100,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singQuarkHepteract2.effect', { n: format(2 * n, 2, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singQuarkHepteract3: {\r\n    maxLevel: 1,\r\n    costPerLevel: 13370000,\r\n    minimumSingularity: 61,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n/100,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singQuarkHepteract3.effect', { n: format(2 * n, 2, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singOcteractGain: {\r\n    maxLevel: -1,\r\n    costPerLevel: 20000,\r\n    minimumSingularity: 36,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.0125 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractGain.effect', { n: format(1.25 * n, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOcteractGain2: {\r\n    maxLevel: 25,\r\n    costPerLevel: 40000,\r\n    minimumSingularity: 36,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.05 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractGain2.effect', { n: format(5 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOcteractGain3: {\r\n    maxLevel: 50,\r\n    costPerLevel: 250000,\r\n    minimumSingularity: 55,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.025 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractGain3.effect', { n: format(2.5 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOcteractGain4: {\r\n    maxLevel: 100,\r\n    costPerLevel: 750000,\r\n    minimumSingularity: 77,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.02 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractGain4.effect', { n: format(2*n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOcteractGain5: {\r\n    maxLevel: 200,\r\n    costPerLevel: 7777777,\r\n    minimumSingularity: 100,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractGain5.effect', { n: format(n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  platonicTau: {\r\n    maxLevel: 1,\r\n    costPerLevel: 100000,\r\n    minimumSingularity: 29,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.platonicTau.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  platonicAlpha: {\r\n    maxLevel: 1,\r\n    costPerLevel: 2e7,\r\n    minimumSingularity: 70,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.platonicAlpha.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  platonicDelta: {\r\n    maxLevel: 1,\r\n    costPerLevel: 5e9,\r\n    minimumSingularity: 110,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.platonicDelta.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  platonicPhi: {\r\n    maxLevel: 1,\r\n    costPerLevel: 2e11,\r\n    minimumSingularity: 149,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.platonicPhi.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singFastForward: {\r\n    maxLevel: 1,\r\n    costPerLevel: 7e6 - 1,\r\n    minimumSingularity: 50,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.singFastForward.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singFastForward2: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1e11 - 1,\r\n    minimumSingularity: 147,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.singFastForward2.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singAscensionSpeed: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1e10,\r\n    minimumSingularity: 128,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singAscensionSpeed.effect', {\r\n            n: format(1 + 0.03 * n, 2, true),\r\n            m: format(1 - 0.03 * n, 2, true)\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singAscensionSpeed2: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1e12,\r\n    minimumSingularity: 147,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singAscensionSpeed2.effect')\r\n        }\r\n      }\r\n    }\r\n  },\r\n  WIP: {\r\n    maxLevel: 100,\r\n    costPerLevel: 1e300,\r\n    minimumSingularity: 251,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.WIP.effect')\r\n        }\r\n      }\r\n    }\r\n  },\r\n  ultimatePen: {\r\n    maxLevel: 1,\r\n    costPerLevel: 2.22e22,\r\n    minimumSingularity: 300,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t('singularity.data.ultimatePen.effect', {\r\n            n: n ? '' : 'NOT',\r\n            m: n > 0 ? ' However, the pen just ran out of ink. How will you get more?' : ''\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  oneMind: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1.66e13,\r\n    minimumSingularity: 162,\r\n    effect: (n : number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.oneMind.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  wowPass4: {\r\n    maxLevel: 1,\r\n    costPerLevel: 66666666666,\r\n    minimumSingularity: 147,\r\n    effect: (n : number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.wowPass4.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  blueberries: {\r\n    maxLevel: 10,\r\n    costPerLevel: 1e16,\r\n    minimumSingularity: 215,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.blueberries.effect', { n })\r\n        }\r\n      }\r\n    },\r\n    specialCostForm: 'Exponential2',\r\n    qualityOfLife: true,\r\n    cacheUpdates: [() => player.caches.blueberryInventory.updateVal('SingularityUpgrade')]\r\n  }\r\n}\r\n\r\n/**\r\n * Singularity Perks are automatically obtained and upgraded, based on player.singularityCount\r\n * They can have one or several levels with a description for each level\r\n */\r\nexport class SingularityPerk {\r\n  public readonly name: () => string\r\n  public readonly levels: number[]\r\n  public readonly description: (n: number, levels: number[]) => string\r\n\r\n  public constructor(perk: SingularityPerk) {\r\n    this.name = perk.name\r\n    this.levels = perk.levels\r\n    this.description = perk.description\r\n  }\r\n}\r\n\r\n// List of Singularity Perks based on player.highestSingularityCount\r\n// The list is ordered on first level acquisition, so be careful when inserting a new one ;)\r\nexport const singularityPerks: SingularityPerk[] = [\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.xyz')\r\n    },\r\n    levels: [1, 20, 200],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.xyz.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.xyz.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.xyz.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.unlimitedGrowth')\r\n    },\r\n    levels: [1],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.unlimitedGrowth', { amount: format(10 * player.singularityCount) })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.goldenCoins')\r\n    },\r\n    levels: [1],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.goldenCoins')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.hepteractAutocraft')\r\n    },\r\n    levels: [1],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.hepteractAutocraft')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.generousOrbs')\r\n    },\r\n    levels: [1, 2, 5, 10, 15, 20, 25, 30, 35],\r\n    description: (n: number, levels: number[]) => {\r\n      const overfluxBonus: Record<number, number> = {\r\n        8: 700, // How to read: levels[8] -> Sing 35 gives 700%\r\n        7: 500,\r\n        6: 415,\r\n        5: 360,\r\n        4: 315,\r\n        3: 280,\r\n        2: 255,\r\n        1: 230\r\n      }\r\n\r\n      for (let i = 8; i > 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.generousOrbs', { amount: overfluxBonus[i] })\r\n        }\r\n      }\r\n      return i18next.t('singularity.perks.generousOrbs', { amount: '215' })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.researchDummies')\r\n    },\r\n    levels: [1, 11],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.researchDummies.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.researchDummies.otherwise')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.superStart')\r\n    },\r\n    levels: [2, 3, 4, 7, 15],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[4]) {\r\n        return i18next.t('singularity.perks.superStart.hasLevel4')\r\n      } else if (n >= levels[3]) {\r\n        return i18next.t('singularity.perks.superStart.hasLevel3')\r\n      } else if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.superStart.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.superStart.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.superStart.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.notSoChallenging')\r\n    },\r\n    levels: [4, 7, 10, 15, 20],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[4]) {\r\n        return i18next.t('singularity.perks.notSoChallenging.hasLevel4')\r\n      } else if (n >= levels[3]) {\r\n        return i18next.t('singularity.perks.notSoChallenging.hasLevel3')\r\n      } else if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.notSoChallenging.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.notSoChallenging.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.notSoChallenging.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.automationUpgrades')\r\n    },\r\n    levels: [5, 10, 15, 25, 30, 100],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[5]) {\r\n        return i18next.t('singularity.perks.automationUpgrades.hasLevel5')\r\n      } else if (n >= levels[4]) {\r\n        return i18next.t('singularity.perks.automationUpgrades.hasLevel4')\r\n      } else if (n >= levels[3]) {\r\n        return i18next.t('singularity.perks.automationUpgrades.hasLevel3')\r\n      } else if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.automationUpgrades.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.automationUpgrades.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.automationUpgrades.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.evenMoreQuarks')\r\n    },\r\n    levels: [5, 20, 35, 50, 65, 80, 90, 100, 121, 144, 150, 160, 166, 169, 170, 175, 180, 190, 196, 200, 200, 201, 202, 203, 204, 205, 210, 212, 214, 216, 218, 220, 225, 250],\r\n    description: (n: number, levels: number[]) => {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.evenMoreQuarks.m', {\r\n            stack: i + 1,\r\n            inc: format(100 * (Math.pow(1.05, i+1) - 1), 2)\r\n          })\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.shopSpecialOffer')\r\n    },\r\n    levels: [5, 20, 51],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.shopSpecialOffer.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.shopSpecialOffer.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.shopSpecialOffer.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.potionAutogenerator')\r\n    },\r\n    levels: [6],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.potionAutogenerator')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.respecBeGone')\r\n    },\r\n    levels: [7],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.respecBeGone')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.forTheLoveOfTheAntGod')\r\n    },\r\n    levels: [10, 15, 25],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.forTheLoveOfTheAntGod.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.forTheLoveOfTheAntGod.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.forTheLoveOfTheAntGod.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.itAllAddsUp')\r\n    },\r\n    levels: [10, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 235, 240],\r\n    description: (n: number, levels: number[]) => {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.itAllAddsUp', {\r\n            div: format(1 + (i + 1) / 5, 2, true),\r\n            div2: format(1 + (i + 1) / 5, 2, true),\r\n            cap: format(1 + (i + 1) / 5, 2, true)\r\n          })\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.automagicalRunes')\r\n    },\r\n    levels: [15, 30, 40, 50],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[3]) {\r\n        return i18next.t('singularity.perks.automagicalRunes.hasLevel3')\r\n      } else if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.automagicalRunes.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.automagicalRunes.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.automagicalRunes.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.derpSmithsCornucopia')\r\n    },\r\n    levels: [18, 38, 58, 78, 88, 98, 118, 148, 178, 188, 198, 208, 218, 228, 238, 248],\r\n    description: (n: number, levels: number[]) => {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.derpSmithsCornucopia', {\r\n            counter: i+1\r\n          })\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.exaltedAchievements')\r\n    },\r\n    levels: [25],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.exaltedAchievements')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.coolQOLCubes')\r\n    },\r\n    levels: [25, 35],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.coolQOLCubes.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.coolQOLCubes.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.eternalAscensions')\r\n    },\r\n    levels: [25, 101],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.eternalAscensions.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.eternalAscensions.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.antGodsCornucopia')\r\n    },\r\n    levels: [30, 70, 100],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.antGodsCornucopia.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.antGodsCornucopia.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.antGodsCornucopia.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.irishAnt')\r\n    },\r\n    levels: [35, 42, 49, 56, 63, 70, 77],\r\n    description: (n: number, levels: number[]) => {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.irishAnt', { i: 5 * (i+1) })\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.overclocked')\r\n    },\r\n    levels: [50, 60, 75, 100, 125, 150, 175, 200, 225, 250],\r\n    description: (n: number, levels: number[]) => {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.overclocked', { i: i + 1 })\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.wowCubeAutomatedShipping')\r\n    },\r\n    levels: [50, 150],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.wowCubeAutomatedShipping.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.wowCubeAutomatedShipping.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.blueberries')\r\n    },\r\n    levels: [66, 132, 198, 264],\r\n    description(n, levels) {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.blueberries', { i: i + 1 })\r\n        }\r\n      }\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.goldenRevolution')\r\n    },\r\n    levels: [100],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.goldenRevolution', {\r\n        current: format(Math.min(100, 0.4 * player.singularityCount), 1)\r\n      })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.goldenRevolutionII')\r\n    },\r\n    levels: [100],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.goldenRevolutionII', {\r\n        current: format(Math.min(50, 0.2 * player.singularityCount), 1)\r\n      })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.goldenRevolutionIII')\r\n    },\r\n    levels: [100],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.goldenRevolutionIII', {\r\n        current: format(Math.min(500, 2 * player.singularityCount))\r\n      })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.platonicClones')\r\n    },\r\n    levels: [100, 200],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.platonicClones.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.platonicClones.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.platSigma')\r\n    },\r\n    levels: [125, 200],\r\n    description: (n: number, levels: number[]) => {\r\n      let counter = 0\r\n      for (const singCount of levels) {\r\n        if (n >= singCount) {\r\n          counter += 0.125\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.platSigma', {\r\n        counter,\r\n        current: format(Math.min(50, counter*player.singularityCount), 1)\r\n      })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.irishAnt2')\r\n    },\r\n    levels: [135, 142, 149, 156, 163, 170, 177],\r\n    description: (n: number, levels: number[]) => {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.irishAnt2', { i: 6 * (i+1) })\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.midasMilleniumAgedGold')\r\n    },\r\n    levels: [150],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.midasMilleniumAgedGold')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.goldenRevolution4')\r\n    },\r\n    levels: [160, 173, 185, 194, 204, 210, 219, 229, 240, 249],\r\n    description: (n: number, levels: number[]) => {\r\n      const perSecond = 1000000\r\n      let divisor = 0\r\n      for (const singCount of levels) {\r\n        if (n >= singCount) {\r\n          divisor += 1\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.goldenRevolution4', { gq: format(perSecond / divisor, 0, true) })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.octeractMetagenesis')\r\n    },\r\n    levels: [200, 205],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.octeractMetagenesis.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.octeractMetagenesis.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.immaculateAlchemy')\r\n    },\r\n    levels: [200, 208, 221],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.immaculateAlchemy.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.immaculateAlchemy.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.immaculateAlchemy.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.skrauQ')\r\n    },\r\n    levels: [200],\r\n    description: () => {\r\n      const amt = Math.pow((player.singularityCount - 179) / 20, 2)\r\n      return i18next.t('singularity.perks.skrauQ', { amt })\r\n    }\r\n  }\r\n]\r\n\r\nexport const updateSingularityPerks = (): void => {\r\n  const singularityCount = player.highestSingularityCount\r\n\r\n  const strH = i18next.t('singularity.perks.header', {\r\n    ord: toOrdinal(singularityCount)\r\n  })\r\n  // TODO: Take current perk description and display it here.\r\n  const strD = i18next.t('singularity.perks.description')\r\n\r\n  const str = `${getAvailablePerksDescription(singularityCount)}`\r\n\r\n  DOMCacheGetOrSet('singularityPerksHeader').innerHTML = strH\r\n  DOMCacheGetOrSet('singularityPerksDesc').innerHTML = strD\r\n  DOMCacheGetOrSet('singularityPerksGrid').innerHTML = str\r\n}\r\n\r\nexport interface ISingularityPerkDisplayInfo {\r\n    name: string\r\n    description: string\r\n    currentLevel: number\r\n    lastUpgraded: number\r\n    nextUpgrade: number | null\r\n    acquired: number\r\n}\r\n\r\n/*\r\n* Indicate current level of the Perk and when it was reached\r\n*/\r\nconst getLastUpgradeInfo = (perk: SingularityPerk, singularityCount: number): {level: number, singularity: number, next: number | null} => {\r\n  for (let i=perk.levels.length - 1; i >= 0; i--) {\r\n    if (singularityCount >= perk.levels[i]) {\r\n      return {\r\n        level: i + 1,\r\n        singularity: perk.levels[i],\r\n        next: i < perk.levels.length - 1 ? perk.levels[i + 1] : null\r\n      }\r\n    }\r\n  }\r\n\r\n  return { level: 0, singularity: perk.levels[0], next: perk.levels[0] }\r\n}\r\n\r\nconst getAvailablePerksDescription = (singularityCount: number): string => {\r\n  let perksText = ''\r\n  let availablePerks: ISingularityPerkDisplayInfo[] = []\r\n  const nextUpgrades: number[] = []\r\n  let singularityCountForNextPerk: number | null = null\r\n  for (const perk of singularityPerks) {\r\n    const upgradeInfo = getLastUpgradeInfo(perk, singularityCount)\r\n    if (upgradeInfo.level > 0) {\r\n      availablePerks.push({\r\n        name: perk.name(),\r\n        description: perk.description(singularityCount, perk.levels),\r\n        currentLevel: upgradeInfo.level,\r\n        lastUpgraded: upgradeInfo.singularity,\r\n        nextUpgrade: upgradeInfo.next,\r\n        acquired: perk.levels[0]\r\n      })\r\n      if (upgradeInfo.next) {\r\n        nextUpgrades.push(upgradeInfo.next)\r\n      }\r\n    } else {\r\n      singularityCountForNextPerk = upgradeInfo.singularity\r\n      break\r\n    }\r\n  }\r\n\r\n  // We want to sort the perks so that the most recently upgraded or lastUpgraded are listed first\r\n  availablePerks = availablePerks.sort((p1, p2) => {\r\n    if (p1.acquired == p2.acquired && p1.lastUpgraded == p2.lastUpgraded) {\r\n      return 0\r\n    }\r\n    if (p1.lastUpgraded > p2.lastUpgraded) {\r\n      return -1\r\n    } else if (p1.lastUpgraded == p2.lastUpgraded && p1.acquired > p2.acquired) {\r\n      return -1\r\n    }\r\n    return 1\r\n  })\r\n\r\n  perksText += '<div id=\"singularityPerksGrid\">'\r\n  for (const availablePerk of availablePerks) {\r\n    perksText += formatPerkDescription(availablePerk, singularityCount)\r\n  }\r\n  perksText += '</div>'\r\n  if (singularityCountForNextPerk) {\r\n    perksText += `${i18next.t('singularity.perks.unlockedIn', { sing: singularityCountForNextPerk })}<br>`\r\n  }\r\n  const singularityCountForNextPerkUpgrade = nextUpgrades.reduce((a, b) => Math.min(a, +b), Infinity)\r\n  if (singularityCountForNextPerkUpgrade < Infinity) {\r\n    perksText +=  `${i18next.t('singularity.perks.improvedIn', { sing: singularityCountForNextPerkUpgrade })}`\r\n  }\r\n  return perksText\r\n}\r\n\r\nfunction formatPerkDescription(perkData: ISingularityPerkDisplayInfo, singularityCount: number): string {\r\n  const singTolerance = getFastForwardTotalMultiplier()\r\n  const isNew = (singularityCount - perkData.lastUpgraded <= singTolerance)\r\n  const levelInfo = perkData.currentLevel > 1 ? `<br>${i18next.t('general.level')} ${perkData.currentLevel}` : ''\r\n  //const acquiredUpgraded = ' / Acq ' + perkData.acquired + ' / Upg ' + perkData.lastUpgraded;\r\n  return `<span${isNew?' class=\"newPerk\"':' class=\"oldPerk\"'} title=\"${perkData.description}\">${perkData.name}${levelInfo}</span>`\r\n}\r\n\r\n// Indicates the number of extra Singularity count gained on Singularity reset\r\nexport const getFastForwardTotalMultiplier = (): number => {\r\n  let fastForward = 0\r\n  fastForward += +player.singularityUpgrades.singFastForward.getEffect().bonus\r\n  fastForward += +player.singularityUpgrades.singFastForward2.getEffect().bonus\r\n  fastForward += +player.octeractUpgrades.octeractFastForward.getEffect().bonus\r\n\r\n  // Stop at sing 200 even if you include fast forward\r\n  fastForward = Math.max(0, Math.min(fastForward, 200 - player.singularityCount - 1))\r\n\r\n  // Please for the love of god don't allow FF during a challenge\r\n  if (player.insideSingularityChallenge) {\r\n    return 0\r\n  }\r\n\r\n  // If the next singularityCount is greater than the highestSingularityCount, fast forward to be equal to the highestSingularityCount\r\n  if (player.highestSingularityCount !== player.singularityCount && player.singularityCount + fastForward + 1 >= player.highestSingularityCount) {\r\n    return Math.max(0, Math.min(fastForward, player.highestSingularityCount - player.singularityCount - 1))\r\n  }\r\n\r\n  return fastForward\r\n}\r\n\r\nexport const getGoldenQuarkCost = (): {\r\n    cost: number\r\n    costReduction: number\r\n} => {\r\n  const baseCost = 10000\r\n\r\n  let costReduction = 10000 // We will construct our cost reduction by subtracting 10000 - this value.\r\n\r\n  costReduction *= (1 - 0.10 * Math.min(1, player.achievementPoints / 10000))\r\n  costReduction *= (1 - 0.3 * player.cubeUpgrades[60] / 10000)\r\n  costReduction *= +player.singularityUpgrades.goldenQuarks2.getEffect().bonus\r\n  costReduction *= +player.octeractUpgrades.octeractGQCostReduce.getEffect().bonus\r\n  costReduction *= (player.highestSingularityCount >= 100 ? 1 - 0.5 * player.highestSingularityCount / 250 : 1)\r\n\r\n  let perkDivisor = 1\r\n  if (player.highestSingularityCount >= 200) {\r\n    perkDivisor = 3\r\n  }\r\n  if (player.highestSingularityCount >= 208) {\r\n    perkDivisor = 5\r\n  }\r\n  if (player.highestSingularityCount >= 221) {\r\n    perkDivisor = 8\r\n  }\r\n  costReduction /= perkDivisor\r\n\r\n  costReduction = 10000 - costReduction\r\n\r\n  return {\r\n    cost: baseCost - costReduction,\r\n    costReduction\r\n  }\r\n\r\n}\r\n\r\nexport async function buyGoldenQuarks(): Promise<void> {\r\n  const goldenQuarkCost = getGoldenQuarkCost()\r\n  const maxBuy = Math.floor(+player.worlds / goldenQuarkCost.cost)\r\n  let buyAmount = null\r\n\r\n  if (maxBuy === 0) {\r\n    return Alert(i18next.t('singularity.goldenQuarks.poor'))\r\n  }\r\n\r\n  const buyPrompt = await Prompt(i18next.t('singularity.goldenQuarks.buyPrompt', {\r\n    cost: format(goldenQuarkCost.cost, 0, true),\r\n    discount: format(goldenQuarkCost.costReduction, 0, true),\r\n    max: format(maxBuy, 0, true)\r\n  }))\r\n\r\n  if (buyPrompt === null) {\r\n    // Number(null) is 0. Yeah..\r\n    return Alert(i18next.t('general.cancelled'))\r\n  }\r\n\r\n  buyAmount = Number(buyPrompt)\r\n  //Check these lol\r\n  if (Number.isNaN(buyAmount) || !Number.isFinite(buyAmount)) {\r\n    // nan + Infinity checks\r\n    return Alert(i18next.t('general.validation.finite'))\r\n  } else if (buyAmount <= 0 && buyAmount != -1) {\r\n    // 0 or less selected\r\n    return Alert(i18next.t('general.validation.zeroOrLess'))\r\n  } else if (buyAmount > maxBuy) {\r\n    return Alert(i18next.t('general.validation.goldenQuarksTooMany'))\r\n  } else if (!Number.isInteger(buyAmount)) {\r\n    // non integer\r\n    return Alert(i18next.t('general.validation.fraction'))\r\n  }\r\n\r\n  let cost\r\n\r\n  if (buyAmount === -1) {\r\n    cost = maxBuy * goldenQuarkCost.cost\r\n    player.worlds.sub(cost)\r\n    player.goldenQuarks += maxBuy\r\n  } else {\r\n    cost = buyAmount * goldenQuarkCost.cost\r\n    player.worlds.sub(cost)\r\n    player.goldenQuarks += buyAmount\r\n  }\r\n\r\n  return Alert(i18next.t('singularity.goldenQuarks.transaction', {\r\n    spent: format(maxBuy, 0, true),\r\n    cost: format(cost, 0, true)\r\n  }))\r\n}\r\n\r\nexport type SingularityDebuffs = 'Offering' | 'Obtainium' | 'Global Speed' | 'Researches' | 'Ascension Speed' | 'Cubes' | 'Cube Upgrades' |\r\n                                 'Platonic Costs' | 'Hepteract Costs'\r\n\r\nexport const calculateEffectiveSingularities = (singularityCount: number = player.singularityCount): number => {\r\n  let effectiveSingularities = singularityCount\r\n  effectiveSingularities *= Math.min(4.75, 0.75 * singularityCount / 10 + 1)\r\n\r\n  if (player.insideSingularityChallenge) {\r\n    if (player.singularityChallenges.noOcteracts.enabled) {\r\n      effectiveSingularities *= Math.pow(player.singularityChallenges.noOcteracts.completions + 1, 3)\r\n    }\r\n  }\r\n\r\n  if (singularityCount > 10) {\r\n    effectiveSingularities *= 1.5\r\n    effectiveSingularities *= Math.min(4, 1.25 * singularityCount / 10 - 0.25)\r\n  }\r\n  if (singularityCount > 25) {\r\n    effectiveSingularities *= 2.5\r\n    effectiveSingularities *= Math.min(6, 1.5 * singularityCount / 25 - 0.5)\r\n  }\r\n  if (singularityCount > 36) {\r\n    effectiveSingularities *= 4\r\n    effectiveSingularities *= Math.min(5, singularityCount / 18 - 1)\r\n    effectiveSingularities *= Math.pow(1.1, Math.min(singularityCount - 36, 64))\r\n  }\r\n  if (singularityCount > 50) {\r\n    effectiveSingularities *= 5\r\n    effectiveSingularities *= Math.min(8, 2 * singularityCount / 50 - 1)\r\n    effectiveSingularities *= Math.pow(1.1, Math.min(singularityCount - 50, 50))\r\n  }\r\n  if (singularityCount > 100) {\r\n    effectiveSingularities *= 2\r\n    effectiveSingularities *= singularityCount / 25\r\n    effectiveSingularities *= Math.pow(1.1, singularityCount - 100)\r\n  }\r\n  if (singularityCount > 150) {\r\n    effectiveSingularities *= 2\r\n    effectiveSingularities *= Math.pow(1.05, singularityCount - 150)\r\n  }\r\n  if (singularityCount > 200) {\r\n    effectiveSingularities *= 1.5\r\n    effectiveSingularities *= Math.pow(1.275, singularityCount - 200)\r\n  }\r\n  if (singularityCount > 215) {\r\n    effectiveSingularities *= 1.25\r\n    effectiveSingularities *= Math.pow(1.2, singularityCount - 215)\r\n  }\r\n  if (singularityCount > 230) {\r\n    effectiveSingularities *= 2\r\n  }\r\n\r\n  return effectiveSingularities\r\n}\r\n\r\nexport const calculateNextSpike = (singularityCount: number = player.singularityCount): number => {\r\n  const singularityPenaltyThreshold = [11, 26, 37, 51, 101, 151, 201, 216, 230]\r\n  let penaltyDebuff = 0\r\n  penaltyDebuff += player.shopUpgrades.shopSingularityPenaltyDebuff\r\n\r\n  for (const sing of singularityPenaltyThreshold) {\r\n    if (sing + penaltyDebuff > singularityCount) {\r\n      return (sing + penaltyDebuff)\r\n    }\r\n  }\r\n  return -1\r\n}\r\nexport const calculateSingularityDebuff = (debuff: SingularityDebuffs, singularityCount: number=player.singularityCount) => {\r\n  if (singularityCount === 0) {\r\n    return 1\r\n  }\r\n  if (player.runelevels[6] > 0) {\r\n    return 1\r\n  }\r\n\r\n  let constitutiveSingularityCount = singularityCount\r\n  constitutiveSingularityCount -= player.shopUpgrades.shopSingularityPenaltyDebuff\r\n\r\n  const effectiveSingularities = calculateEffectiveSingularities(constitutiveSingularityCount)\r\n\r\n  if (debuff === 'Offering') {\r\n    return Math.sqrt(Math.min(effectiveSingularities, calculateEffectiveSingularities(150)) + 1)\r\n  } else if (debuff === 'Global Speed') {\r\n    return 1 + Math.sqrt(effectiveSingularities) / 4\r\n  } else if (debuff === 'Obtainium') {\r\n    return Math.sqrt(Math.min(effectiveSingularities, calculateEffectiveSingularities(150))  + 1)\r\n  } else if (debuff === 'Researches') {\r\n    return 1 + Math.sqrt(effectiveSingularities) / 2\r\n  } else if (debuff === 'Ascension Speed') {\r\n    return (singularityCount < 150) ?\r\n      1 + Math.sqrt(effectiveSingularities) / 5:\r\n      1 + Math.pow(effectiveSingularities, 0.75) / 10000\r\n  } else if (debuff === 'Cubes') {\r\n    const extraMult = (player.singularityCount > 100) ? Math.pow(1.02, player.singularityCount - 100) : 1\r\n    return (player.singularityCount < 150) ?\r\n      1 + Math.sqrt(effectiveSingularities) * extraMult / 4:\r\n      1 + Math.pow(effectiveSingularities, 0.75) * extraMult / 1000\r\n  } else if (debuff === 'Platonic Costs') {\r\n    return (singularityCount > 36) ? 1 + Math.pow(effectiveSingularities, 3/10) / 12 : 1\r\n  } else if (debuff === 'Hepteract Costs') {\r\n    return (singularityCount > 50) ? 1 + Math.pow(effectiveSingularities, 11/50) / 25 : 1\r\n  } else {\r\n    // Cube upgrades\r\n    return Math.cbrt(effectiveSingularities + 1)\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { calculateSummationNonLinear, calculateRuneLevels, calculateAnts } from './Calculate'\r\nimport { revealStuff, updateChallengeDisplay } from './UpdateHTML'\r\nimport { Globals as G } from './Variables'\r\nimport { updateClassList } from './Utility'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport type { IMultiBuy } from './Cubes'\r\nimport { calculateSingularityDebuff } from './singularity'\r\nimport i18next from 'i18next'\r\n\r\nconst getResearchCost = (index: number, buyAmount = 1, linGrowth = 0): IMultiBuy => {\r\n  buyAmount = Math.min(G.researchMaxLevels[index] - player.researches[index], buyAmount)\r\n  const metaData = calculateSummationNonLinear(player.researches[index], G.researchBaseCosts[index] * calculateSingularityDebuff('Researches'), player.researchPoints, linGrowth, buyAmount)\r\n  return metaData\r\n}\r\n\r\nexport const updateAutoResearch = (index: number, auto: boolean) => {\r\n  /* If Cube Upgrade 9 (1x9) is purchased, then automation behaves differently.\r\n     If not purchased, then clicking on a research icon while auto toggled will update research for you.*/\r\n  if (autoResearchEnabled() && auto && player.autoResearchMode === 'cheapest') {\r\n\r\n    player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n\r\n    // Checks if this is maxed. If so we proceed to the next research.\r\n    if (isResearchMaxed(player.autoResearch)) {\r\n      DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n      player.roombaResearchIndex = Math.min(\r\n        G.researchOrderByCost.length - 1,\r\n        player.roombaResearchIndex + 1\r\n      )\r\n    }\r\n\r\n    // Checks against researches invalid or not unlocked.\r\n    while (!isResearchUnlocked(player.autoResearch) && player.autoResearch < 200 && player.autoResearch >= 76) {\r\n      player.roombaResearchIndex += 1\r\n      player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n    }\r\n\r\n    // Researches that are unlocked work\r\n    if (isResearchUnlocked(player.autoResearch)) {\r\n      const idx = Math.max(G.researchOrderByCost[player.roombaResearchIndex], 1)\r\n      const doc = DOMCacheGetOrSet(`res${idx}`)\r\n      if (player.researches[player.autoResearch] < G.researchMaxLevels[player.autoResearch]) {\r\n        doc.classList.add('researchRoomba')\r\n      }\r\n    }\r\n\r\n    return\r\n  } else if (!auto && (!autoResearchEnabled() || player.autoResearchMode === 'manual')) {\r\n    /* We remove the old research HTML from the 'roomba' class and make the new index our 'roomba'\r\n           class. We then update the index and consequently the coloring of the background based\r\n           on what level (if any) the research has. This functionality is useless after\r\n           Cube Upgrade 9 (1x9) has been purchased. */\r\n    DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n    DOMCacheGetOrSet(`res${index}`).classList.add('researchRoomba')\r\n    player.autoResearch = index\r\n\r\n    // Research is maxed\r\n    if (player.researches[index] >= G.researchMaxLevels[index]) {\r\n      updateClassList(`res${player.autoResearch}`, ['researchMaxed'], ['researchPurchased', 'researchUnpurchased'])\r\n    } else if (player.researches[index] >= 1) {\r\n      // Research purchased above level 0 but not maxed\r\n      updateClassList(`res${player.autoResearch}`, ['researchPurchased'], ['researchUnpurchased', 'researchMaxed'])\r\n    } else {\r\n      // Research has not been purchased yet\r\n      updateClassList(`res${player.autoResearch}`, ['researchUnpurchased'], ['researchPurchased', 'researchMaxed'])\r\n    }\r\n\r\n    return\r\n  } else {\r\n    return\r\n  } //There might be code needed here. I don't quite know yet. -Platonic\r\n}\r\n\r\n/**\r\n * Should the user have access to autoResearch\r\n * @returns boolean\r\n */\r\nexport const autoResearchEnabled = (): boolean => {\r\n  return (player.cubeUpgrades[9] === 1 || player.highestSingularityCount > 10)\r\n}\r\n/**\r\n * Attempts to buy the research of the index selected. This is hopefully an improvement over buyResearch. Fuck\r\n * @param index\r\n * @param auto\r\n * @param linGrowth\r\n * @returns\r\n */\r\nexport const buyResearch = (index: number, auto = false, linGrowth = 0, hover = false): boolean => {\r\n\r\n  // Get our costs, and determine if anything is purchasable.\r\n  const buyAmount = (player.researchBuyMaxToggle || auto || hover) ? 1e5: 1\r\n  const metaData = getResearchCost(index, buyAmount, linGrowth) /* Destructuring FTW! */\r\n  const canBuy = (player.researchPoints >= metaData.cost)\r\n\r\n  if (canBuy && isResearchUnlocked(index) && !isResearchMaxed(index)) {\r\n    player.researches[index] = metaData.levelCanBuy\r\n    player.researchPoints -= metaData.cost\r\n    // Quick check after upgrading for max. This is to update any automation regardless of auto state\r\n    if (isResearchMaxed(index)) {\r\n      DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n    }\r\n\r\n    // Update the progress description\r\n    G.researchfiller2 = `Level: ${player.researches[index]}/${G.researchMaxLevels[index]}`\r\n    researchDescriptions(index, auto, linGrowth)\r\n\r\n    // Handle special cases: Researches 47-50 (2x21-2x25)\r\n    // I love the ||= operator -Platonic\r\n    player.unlocks.rrow1 ||= true\r\n    player.unlocks.rrow2 ||= true\r\n    player.unlocks.rrow3 ||= true\r\n    player.unlocks.rrow4 ||= true\r\n    if (index >= 47 && index <= 50) {\r\n      revealStuff()\r\n    }\r\n    if ((index >= 66 && index <= 70) || index === 105) {\r\n      updateChallengeDisplay()\r\n    }\r\n\r\n    // Update ants and runes.\r\n    calculateRuneLevels()\r\n    calculateAnts()\r\n  }\r\n\r\n  // Update HTML for auto stuff if auto research is ever toggled.\r\n  if (player.autoResearchToggle) {\r\n    updateAutoResearch(index, auto)\r\n  }\r\n\r\n  // Note to anyone reading this code: I forget why this needs to return a Boolean.\r\n  // -Platonic\r\n  return canBuy\r\n}\r\n\r\n/**\r\n * Calculates the max research index for the research roomba\r\n */\r\nexport const maxRoombaResearchIndex = (p = player) => {\r\n  const base = p.ascensionCount > 0 ? 140 : 125 // 125 researches pre-A + 15 from A\r\n  const c11 = p.challengecompletions[11] > 0 ? 15 : 0\r\n  const c12 = p.challengecompletions[12] > 0 ? 15 : 0\r\n  const c13 = p.challengecompletions[13] > 0 ? 15 : 0\r\n  const c14 = p.challengecompletions[14] > 0 ? 15 : 0\r\n  return base + c11 + c12 + c13 + c14\r\n}\r\n\r\nexport const isResearchUnlocked = (index: number) => {\r\n  // https://stackoverflow.com/questions/20477177/creating-an-array-of-cumulative-sum-in-javascript\r\n  const cumuSum = (sum => (value: number) => sum += value)(0)\r\n  const indices = [3 * 25, 5, 20, 10, 15, 15, 15, 15, 15, 15].map(cumuSum)\r\n  const chievos = [50, 124, 127, 134, 141, 183, 197, 204, 211, 218]\r\n  for (let i = 0; i < indices.length; i++) {\r\n    if (i === 3 && (index === 121 || index === 124 || index === 150)) {\r\n      return player.achievements[chievos[i]] > 0\r\n    }\r\n    if (index <= indices[i]) {\r\n      return player.achievements[chievos[i]] > 0\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nconst isResearchMaxed = (index: number) => G.researchMaxLevels[index] <= player.researches[index]\r\n\r\nexport const researchDescriptions = (i: number, auto = false, linGrowth = 0) => {\r\n  const buyAmount = (player.researchBuyMaxToggle || auto) ? 100000 : 1\r\n  const y = i18next.t(`researches.descriptions.${i}`)\r\n  const p = `res${i}`\r\n\r\n  if (player.toggles[38] && player.singularityCount > 0) {\r\n    buyResearch(i, false, i === 200 ? 0.01 : 0, true)\r\n  }\r\n\r\n  const metaData = getResearchCost(i, buyAmount, linGrowth)\r\n  let z = i18next.t('researches.cost', {\r\n    x: format(metaData.cost, 0, false),\r\n    y: format(metaData.levelCanBuy - player.researches[i], 0, true)\r\n  })\r\n\r\n  if (player.researches[i] === (G.researchMaxLevels[i])) {\r\n    DOMCacheGetOrSet('researchcost').style.color = 'Gold'\r\n    DOMCacheGetOrSet('researchinfo3').style.color = 'plum'\r\n    updateClassList(p, ['researchMaxed'], ['researchAvailable', 'researchPurchased', 'researchPurchasedAvailable'])\r\n    z += i18next.t('researches.maxed')\r\n  } else {\r\n    DOMCacheGetOrSet('researchcost').style.color = 'limegreen'\r\n    DOMCacheGetOrSet('researchinfo3').style.color = 'white'\r\n    if (player.researches[i] > 0) {\r\n      updateClassList(p, ['researchPurchased', 'researchPurchasedAvailable'], ['researchAvailable', 'researchMaxed', 'researchUnpurchased'])\r\n    } else {\r\n      updateClassList(p, ['researchAvailable'], ['researchPurchased', 'researchMaxed', 'researchUnpurchased'])\r\n    }\r\n  }\r\n\r\n  if (player.researchPoints < metaData.cost && player.researches[i] < (G.researchMaxLevels[i])) {\r\n    DOMCacheGetOrSet('researchcost').style.color = 'var(--crimson-text-color)'\r\n    updateClassList(p, [], ['researchMaxed', 'researchAvailable', 'researchPurchasedAvailable'])\r\n  }\r\n\r\n  DOMCacheGetOrSet('researchinfo2').textContent = y\r\n  DOMCacheGetOrSet('researchcost').textContent = z\r\n  DOMCacheGetOrSet('researchinfo3').textContent =  i18next.t('researches.level', {\r\n    x: player.researches[i],\r\n    y: G.researchMaxLevels[i]\r\n  })\r\n}\r\n\r\nexport const updateResearchBG = (j: number) => {\r\n\r\n  if (player.researches[j] > G.researchMaxLevels[j]) {\r\n    player.researchPoints += (player.researches[j] - G.researchMaxLevels[j]) * G.researchBaseCosts[j]\r\n    player.researches[j] = G.researchMaxLevels[j]\r\n  }\r\n\r\n  const k = `res${j}`\r\n  if (player.researches[j] > 0.5 && player.researches[j] < G.researchMaxLevels[j]) {\r\n    updateClassList(k, ['researchPurchased'], ['researchUnpurchased', 'researchMaxed'])\r\n  } else if (player.researches[j] > 0.5 && player.researches[j] >= G.researchMaxLevels[j]) {\r\n    updateClassList(k, ['researchMaxed'], ['researchUnpurchased', 'researchPurchased'])\r\n  } else {\r\n    updateClassList(k, ['researchUnpurchased'], ['researchPurchased', 'researchMaxed'])\r\n  }\r\n}\r\n", "import { player } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\n\r\ntype Bless = keyof typeof player['hypercubeBlessings']\r\n\r\nexport const calculateHypercubeBlessings = () => {\r\n  // The visual updates are handled in visualUpdateCubes()\r\n\r\n  // we use Object.keys here instead of a for-in loop because we need the index of the key.\r\n  const keys = Object.keys(player.hypercubeBlessings)\r\n\r\n  for (const key of keys) {\r\n    const obj = player.hypercubeBlessings[key as Bless]\r\n    const idx = keys.indexOf(key) + 1\r\n\r\n    let power = 1\r\n    let mult = 1\r\n    if (obj >= 1000) {\r\n      power = G.benedictionDRPower[idx]!\r\n      mult *= Math.pow(1000, (1 - G.benedictionDRPower[idx]!))\r\n    }\r\n\r\n    G.hypercubeBonusMultiplier[idx] = 1 + mult * G.benedictionbase[idx]! * Math.pow(obj, power) * G.platonicBonusMultiplier[4]\r\n  }\r\n}\r\n", "import { player } from './Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\nexport const toggleTheme = (initial = false, themeNumber = 1, change = false) => {\r\n  const themeButton = DOMCacheGetOrSet('theme')\r\n  const body = document.body\r\n\r\n  if (change) {\r\n    localStorage.setItem('theme', `${themeNumber}`)\r\n    body.style.setProperty('--transition', '750ms')\r\n    body.style.setProperty('--transition-extra', '600ms')\r\n  } else {\r\n    themeNumber = Number(localStorage.getItem('theme') ?? 1)\r\n  }\r\n\r\n  /* Full reset for easy out of order change */\r\n  if (!initial) { //For quicker first load\r\n    body.style.removeProperty('--header-color')\r\n    body.style.removeProperty('--bg-color')\r\n    body.style.removeProperty('--alert-color')\r\n    body.style.removeProperty('--history-lines')\r\n    body.style.removeProperty('--text-color')\r\n    body.style.removeProperty('--green-text-color')\r\n    body.style.removeProperty('--lightseagreen-text-color')\r\n    body.style.removeProperty('--crimson-text-color')\r\n    body.style.removeProperty('--red-text-color')\r\n    body.style.removeProperty('--maroon-text-color')\r\n    body.style.removeProperty('--orchid-text-color')\r\n    body.style.removeProperty('--darkorchid-text-color')\r\n    body.style.removeProperty('--darkcyan-text-color')\r\n    body.style.removeProperty('--gray-text-color')\r\n    body.style.removeProperty('--orangered-text-color')\r\n    body.style.removeProperty('--box-color')\r\n    body.style.removeProperty('--boxmain-bordercolor')\r\n    body.style.removeProperty('--button-color')\r\n    body.style.removeProperty('--hover-color')\r\n    body.style.removeProperty('--blackbtn-color')\r\n    body.style.removeProperty('--purplebtn-color')\r\n    body.style.removeProperty('--purplehover-color')\r\n    body.style.removeProperty('--buttonbuy-color')\r\n    body.style.removeProperty('--buildings-canbuy-color')\r\n    body.style.removeProperty('--buildings-hover-color')\r\n    body.style.removeProperty('--blessings-canbuy-color')\r\n    body.style.removeProperty('--blessings-hover-color')\r\n    body.style.removeProperty('--tab-color')\r\n    body.style.removeProperty('--singtab-color')\r\n    body.style.removeProperty('--hoversing-color')\r\n    body.style.removeProperty('--shoptab-color')\r\n    body.style.removeProperty('--hovershop-color')\r\n    body.style.removeProperty('--hepteract-bar-empty')\r\n    body.style.removeProperty('--hepteract-bar-red')\r\n    body.style.removeProperty('--hepteract-bar-yellow')\r\n    body.style.removeProperty('--hepteract-bar-green')\r\n    body.classList.remove('textOutline')\r\n    //body.classList.add('bodycolor');\r\n    DOMCacheGetOrSet('actualPotionShop').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('actualPotionShop').style.borderColor = ''\r\n    DOMCacheGetOrSet('themeBox').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('themeBox').style.borderColor = ''\r\n    DOMCacheGetOrSet('c15Rewards').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('c15Rewards').style.borderColor = ''\r\n    DOMCacheGetOrSet('platonicUpgradeDescriptions').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('platonicUpgradeDescriptions').style.borderColor = ''\r\n    DOMCacheGetOrSet('platonicUpgradePics').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('platonicUpgradePics').style.borderColor = ''\r\n    DOMCacheGetOrSet('actualShop').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('actualShop').style.borderColor = ''\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = ''\r\n    DOMCacheGetOrSet('heptGrid').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('heptGrid').style.borderColor = ''\r\n    DOMCacheGetOrSet('exportgame').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('importFileButton').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('switchTheme2').style.borderColor = 'darkslategray'\r\n\r\n    DOMCacheGetOrSet('bonussummation').style.color = 'orangered' //CSS colors, instead of having '', will write out full color, in case someone will move CSS color into HTML\r\n    DOMCacheGetOrSet('corruptionDescription').style.color = 'darkviolet'\r\n    DOMCacheGetOrSet('versionnumber').style.color = 'fuchsia'\r\n    DOMCacheGetOrSet('singularitytab').style.color = 'red'\r\n    DOMCacheGetOrSet('traitstab').style.color = 'red'\r\n    DOMCacheGetOrSet('cubetab').style.color = 'red'\r\n    DOMCacheGetOrSet('ascTimeAccel').style.color = 'royalblue'\r\n    DOMCacheGetOrSet('buildinghotkeys').style.color = 'lightgray'\r\n    DOMCacheGetOrSet('buildinghotkeys2').style.color = 'lightgray'\r\n    DOMCacheGetOrSet('antspecies').style.color = 'royalblue' //HTML colors\r\n    DOMCacheGetOrSet('achievementcolorcode2').style.color = 'purple'\r\n    DOMCacheGetOrSet('corruptionTesseracts').style.color = 'darkviolet'\r\n    DOMCacheGetOrSet('antwelcome').style.color = 'lightslategrey'\r\n    DOMCacheGetOrSet('confirmationToggleTitle').style.color = 'pink'\r\n    DOMCacheGetOrSet('specialActionsTitle').style.color = 'pink'\r\n    DOMCacheGetOrSet('themesTitle').style.color = 'pink'\r\n    DOMCacheGetOrSet('notationTitle').style.color = 'pink'\r\n    DOMCacheGetOrSet('hepteractWelcome').style.color = 'pink'\r\n    DOMCacheGetOrSet('confirmationdisclaimer').style.color = 'plum'\r\n    DOMCacheGetOrSet('cube6Bonus').style.color = 'brown'\r\n    DOMCacheGetOrSet('tesseract6Bonus').style.color = 'brown'\r\n    DOMCacheGetOrSet('hypercube6Bonus').style.color = 'brown'\r\n    DOMCacheGetOrSet('runeshowpower5').style.color = 'tomato'\r\n    DOMCacheGetOrSet('hypercubeWelcome').style.color = '#ff004c' //Hypercube colors\r\n    DOMCacheGetOrSet('hypercubeQuantity').style.color = '#ff004c'\r\n    DOMCacheGetOrSet('hypercubeBlessingsTotal').style.color = '#ff004c'\r\n  } else {\r\n    if (themeNumber === 4) {\r\n      DOMCacheGetOrSet('logo').setAttribute('src', 'Pictures/logoLight.png')\r\n    }\r\n  }\r\n\r\n  if (themeNumber === 1) {\r\n    localStorage.removeItem('theme')\r\n    themeButton.textContent = 'Dark Mode'\r\n  } else if (themeNumber === 2) { //'Darker Mode'\r\n    body.style.setProperty('--header-color', 'black')\r\n    body.style.setProperty('--bg-color', '#0c0c0f')\r\n    body.style.setProperty('--alert-color', '#040406')\r\n    body.style.setProperty('--history-lines', '#1b1b22')\r\n    body.style.setProperty('--box-color', '#060606')\r\n    body.style.setProperty('--boxmain-bordercolor', '#d487d4')\r\n    body.style.setProperty('--button-color', '#040406')\r\n    body.style.setProperty('--hover-color', '#1b1b22')\r\n    body.style.setProperty('--purplebtn-color', '#6f006f')\r\n    body.style.setProperty('--buttonbuy-color', '#040406')\r\n    body.style.setProperty('--buildings-canbuy-color', '#2c2c44')\r\n    body.style.setProperty('--buildings-hover-color', '#3a3a58')\r\n    body.style.setProperty('--blessings-canbuy-color', '#262639')\r\n    body.style.setProperty('--blessings-hover-color', '#33334e')\r\n    body.style.setProperty('--tab-color', 'black')\r\n    body.style.setProperty('--singtab-color', '#002')\r\n    body.style.setProperty('--hoversing-color', '#00007d')\r\n    body.style.setProperty('--shoptab-color', '#6f006f')\r\n    body.style.setProperty('--hepteract-bar-empty', '#3a3a58')\r\n    body.style.setProperty('--hepteract-bar-red', 'darkred')\r\n    body.style.setProperty('--hepteract-bar-yellow', '#997a00')\r\n    body.style.setProperty('--hepteract-bar-green', 'darkgreen')\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#dd8f00'\r\n    DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#dd0'\r\n    DOMCacheGetOrSet('exportgame').style.backgroundColor = 'black' //Special cases\r\n    DOMCacheGetOrSet('importFileButton').style.backgroundColor = 'black'\r\n\r\n    themeButton.textContent = 'Darker Mode'\r\n  } else if (themeNumber === 3) { //'Lighter Dark Mode'\r\n    body.style.setProperty('--header-color', '#18171c')\r\n    body.style.setProperty('--bg-color', '#1c1b22')\r\n    body.style.setProperty('--alert-color', '#141319')\r\n    body.style.setProperty('--history-lines', '#083a3a')\r\n    body.style.setProperty('--box-color', '#141319')\r\n    body.style.setProperty('--boxmain-bordercolor', '#dda0dd')\r\n    body.style.setProperty('--button-color', '#101828')\r\n    body.style.setProperty('--hover-color', '#006')\r\n    body.style.setProperty('--blackbtn-color', '#101828')\r\n    body.style.setProperty('--buttonbuy-color', '#0b111c')\r\n    body.style.setProperty('--buildings-canbuy-color', '#2d4471')\r\n    body.style.setProperty('--buildings-hover-color', '#3c5a95')\r\n    body.style.setProperty('--blessings-canbuy-color', '#1e2e4d')\r\n    body.style.setProperty('--blessings-hover-color', '#2d4471')\r\n    body.style.setProperty('--tab-color', '#101828')\r\n    body.style.setProperty('--hoversing-color', '#005')\r\n    body.style.setProperty('--hepteract-bar-empty', '#535064')\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#ffa500'\r\n    DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#dd0'\r\n    DOMCacheGetOrSet('actualShop').style.backgroundColor = '#0c0c0f' //Special cases\r\n    DOMCacheGetOrSet('actualShop').style.borderColor = '#d487d4'\r\n    DOMCacheGetOrSet('platonicUpgradePics').style.backgroundColor = '#0c0c0f'\r\n    body.style.setProperty('--maroon-text-color', '#a90000')\r\n\r\n    themeButton.textContent = 'Lighter Dark Mode'\r\n  } else if (themeNumber === 4) { //'Light Mode'\r\n    body.classList.add('textOutline')\r\n    body.style.setProperty('--header-color', '#736e8d')\r\n    body.style.setProperty('--bg-color', '#7c7891')\r\n    body.style.setProperty('--alert-color', '#646175')\r\n    body.style.setProperty('--history-lines', '#156e71')\r\n    body.style.setProperty('--box-color', '#646175')\r\n    body.style.setProperty('--boxmain-bordercolor', '#d894d8')\r\n    body.style.setProperty('--button-color', '#136062')\r\n    body.style.setProperty('--hover-color', '#187c7f')\r\n    body.style.setProperty('--blackbtn-color', '#105254')\r\n    body.style.setProperty('--buttonbuy-color', '#4c495a')\r\n    body.style.setProperty('--buildings-canbuy-color', '#9794a8')\r\n    body.style.setProperty('--buildings-hover-color', '#b2b0bf')\r\n    body.style.setProperty('--blessings-canbuy-color', '#6c687f')\r\n    body.style.setProperty('--blessings-hover-color', '#7c7990')\r\n    body.style.setProperty('--tab-color', '#105254')\r\n    body.style.setProperty('--singtab-color', '#00d')\r\n    body.style.setProperty('--hoversing-color', '#1052B6')\r\n    body.style.setProperty('--hepteract-bar-empty', '#858199')\r\n    body.style.setProperty('--hepteract-bar-red', '#ea1741')\r\n    body.style.setProperty('--hepteract-bar-yellow', '#cc0')\r\n    body.style.setProperty('--hepteract-bar-green', 'limegreen')\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#dd8f00'\r\n    DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#dd0'\r\n    DOMCacheGetOrSet('switchTheme2').style.borderColor = '#284242' //Special Cases\r\n    body.style.setProperty('--green-text-color', 'limegreen')\r\n    body.style.setProperty('--red-text-color', '#f55')\r\n    body.style.setProperty('--maroon-text-color', '#ff5656')\r\n    body.style.setProperty('--crimson-text-color', '#f7617d')\r\n    body.style.setProperty('--orchid-text-color', '#dd7dda')\r\n    body.style.setProperty('--darkorchid-text-color', '#cf9ee8')\r\n    body.style.setProperty('--darkcyan-text-color', 'turquoise')\r\n    body.style.setProperty('--lightseagreen-text-color', 'limegreen')\r\n    body.style.setProperty('--orangered-text-color', '#f74')\r\n    body.style.setProperty('--gray-text-color', '#a5a5a5')\r\n    DOMCacheGetOrSet('achievementcolorcode2').style.color = '#dc7dff'\r\n    DOMCacheGetOrSet('corruptionDescription').style.color = '#d272ff'\r\n    DOMCacheGetOrSet('corruptionTesseracts').style.color = '#d272ff'\r\n    DOMCacheGetOrSet('antwelcome').style.color = '#b1b1b1'\r\n    DOMCacheGetOrSet('versionnumber').style.color = '#ff5aff'\r\n    DOMCacheGetOrSet('singularitytab').style.color = '#ff5252'\r\n    DOMCacheGetOrSet('traitstab').style.color = '#ff5252'\r\n    DOMCacheGetOrSet('cubetab').style.color = '#ff5252'\r\n    DOMCacheGetOrSet('antspecies').style.color = '#8da9ff'\r\n    DOMCacheGetOrSet('ascTimeAccel').style.color = '#97b0ff'\r\n    DOMCacheGetOrSet('cube6Bonus').style.color = '#a5a5a5'\r\n    DOMCacheGetOrSet('tesseract6Bonus').style.color = '#a5a5a5'\r\n    DOMCacheGetOrSet('hypercube6Bonus').style.color = '#a5a5a5'\r\n    DOMCacheGetOrSet('hypercubeWelcome').style.color = '#f58'\r\n    DOMCacheGetOrSet('hypercubeQuantity').style.color = '#f58'\r\n    DOMCacheGetOrSet('hypercubeBlessingsTotal').style.color = '#f58'\r\n    DOMCacheGetOrSet('runeshowpower5').style.color = '#ff7158'\r\n\r\n    themeButton.textContent = 'Light Mode'\r\n  } else if (themeNumber === 5) { //'Dracula Mode'\r\n    body.style.setProperty('--header-color', '#0a0a11')\r\n    body.style.setProperty('--bg-color', '#131319')\r\n    body.style.setProperty('--alert-color', '#2a1035')\r\n    body.style.setProperty('--history-lines', '#012d1c')\r\n    body.style.setProperty('--text-color', '#ac47ff')\r\n    body.style.setProperty('--maroon-text-color', '#c30000')\r\n    body.style.setProperty('--crimson-text-color', '#eb0000')\r\n    body.style.setProperty('--orchid-text-color', '#fd59f7')\r\n    body.style.setProperty('--darkorchid-text-color', '#c205ff')\r\n    body.style.setProperty('--gray-text-color', '#8f8f8f')\r\n    body.style.setProperty('--box-color', '#000000')\r\n    body.style.setProperty('--boxmain-bordercolor', '#b341e0')\r\n    body.style.setProperty('--button-color', '#21003f')\r\n    body.style.setProperty('--hover-color', '#00056a')\r\n    body.style.setProperty('--blackbtn-color', '#28002a')\r\n    body.style.setProperty('--purplebtn-color', '#5800a0')\r\n    body.style.setProperty('--purplehover-color', '#680927')\r\n    body.style.setProperty('--buttonbuy-color', '#005e00')\r\n    body.style.setProperty('--buildings-canbuy-color', '#a00')\r\n    body.style.setProperty('--buildings-hover-color', '#e00')\r\n    body.style.setProperty('--blessings-canbuy-color', '#004d00')\r\n    body.style.setProperty('--blessings-hover-color', '#800')\r\n    body.style.setProperty('--tab-color', '#1a0030')\r\n    body.style.setProperty('--singtab-color', '#000230')\r\n    body.style.setProperty('--hoversing-color', '#000463')\r\n    body.style.setProperty('--shoptab-color', '#5800a0')\r\n    body.style.setProperty('--hovershop-color', '#7400d3')\r\n    body.style.setProperty('--hepteract-bar-empty', '#4a4a60')\r\n    body.style.setProperty('--hepteract-bar-red', '#c90000')\r\n    body.style.setProperty('--hepteract-bar-yellow', '#919100')\r\n    body.style.setProperty('--hepteract-bar-green', '#007f3b')\r\n    DOMCacheGetOrSet('themeBox').style.backgroundColor = '#0a0a11' //Special cases\r\n    DOMCacheGetOrSet('themeBox').style.borderColor = '#3c006d'\r\n    DOMCacheGetOrSet('c15Rewards').style.backgroundColor = '#2e001b'\r\n    DOMCacheGetOrSet('c15Rewards').style.borderColor = '#186e83'\r\n    DOMCacheGetOrSet('platonicUpgradeDescriptions').style.backgroundColor = '#2e001b'\r\n    DOMCacheGetOrSet('platonicUpgradeDescriptions').style.borderColor = '#186e83'\r\n    DOMCacheGetOrSet('platonicUpgradePics').style.backgroundColor = '#720505'\r\n    DOMCacheGetOrSet('platonicUpgradePics').style.borderColor = '#410303'\r\n    DOMCacheGetOrSet('actualPotionShop').style.backgroundColor = '#01192c'\r\n    DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#04d481'\r\n    DOMCacheGetOrSet('actualShop').style.backgroundColor = '#11111b'\r\n    DOMCacheGetOrSet('actualShop').style.borderColor = '#038ba8'\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.backgroundColor = '#0a0a11'\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#04d481'\r\n    DOMCacheGetOrSet('heptGrid').style.backgroundColor = '#11111b'\r\n    DOMCacheGetOrSet('heptGrid').style.borderColor = '#9b7306'\r\n    DOMCacheGetOrSet('achievementcolorcode2').style.color = '#ef00e4' //Text colors\r\n    DOMCacheGetOrSet('corruptionDescription').style.color = '#c205ff'\r\n    DOMCacheGetOrSet('corruptionTesseracts').style.color = '#c205ff'\r\n    DOMCacheGetOrSet('antwelcome').style.color = 'darkgrey'\r\n    DOMCacheGetOrSet('confirmationToggleTitle').style.color = '#eb0000'\r\n    DOMCacheGetOrSet('specialActionsTitle').style.color = '#eb0000'\r\n    DOMCacheGetOrSet('themesTitle').style.color = '#eb0000'\r\n    DOMCacheGetOrSet('notationTitle').style.color = '#eb0000'\r\n    DOMCacheGetOrSet('hepteractWelcome').style.color = '#ac47ff'\r\n    DOMCacheGetOrSet('confirmationdisclaimer').style.color = '#bb68ff'\r\n    DOMCacheGetOrSet('antspecies').style.color = '#184ff3'\r\n    DOMCacheGetOrSet('bonussummation').style.color = '#eb0000'\r\n    DOMCacheGetOrSet('buildinghotkeys').style.color = '#838383'\r\n    DOMCacheGetOrSet('buildinghotkeys2').style.color = '#838383'\r\n\r\n    themeButton.textContent = 'Dracula Mode'\r\n  }\r\n  if (change) {\r\n    setTimeout(() => {\r\n      body.style.removeProperty('--transition')\r\n      body.style.removeProperty('--transition-extra')\r\n    }, 750)\r\n  }\r\n}\r\n\r\nexport const toggleAnnotation = (setting = true) => {\r\n  const notationButton = DOMCacheGetOrSet('notation')\r\n  const current = notationButton.textContent\r\n\r\n  switch (current) {\r\n    case 'Pure Scientific':\r\n      notationButton.textContent = i18next.t('settings.notation.pureEngineering')\r\n      break\r\n    case 'Pure Engineering':\r\n      notationButton.textContent = i18next.t('settings.notation.default')\r\n      break\r\n    default:\r\n      notationButton.textContent = i18next.t('settings.notation.pureScientific')\r\n  }\r\n  if (setting) {\r\n    player.notation = current ?? 'Default'\r\n  }\r\n}\r\n\r\nexport const settingAnnotation = () => {\r\n  let userAnnotation = player.notation\r\n  const maxAnnotations = 10\r\n  const notationButton = DOMCacheGetOrSet('notation')\r\n  for (let i = 0; i < maxAnnotations; i++) {\r\n    const current = notationButton.textContent\r\n    if (current !== null && userAnnotation.toUpperCase() !== current.toUpperCase()) {\r\n      toggleAnnotation(false)\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  userAnnotation = 'DEFAULT'\r\n  for (let i = 0; i < maxAnnotations; i++) {\r\n    const current = notationButton.textContent\r\n    if (current !== null && userAnnotation !== current.toUpperCase()) {\r\n      toggleAnnotation(false)\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\n// IconSets: ['FolderName', 'FallbackSetIndex']\r\n// Make sure new sets have a UNIQUE folder name (not used in icon file names), and it is added to IconSets[][] and IconSetsRegex\r\nexport const IconSets:[string, number][] = [\r\n  ['Legacy', -1],\r\n  ['Default', 0],\r\n  ['Simplified', 1],\r\n  ['Monotonous', 1]\r\n]\r\nexport const IconSetsRegex = new RegExp('Default|Simplified|Monotonous|Legacy')\r\n\r\nexport const toggleIconSet = (changeTo = player.iconSet) => {\r\n  if ((changeTo > (IconSets.length - 1)) || (changeTo < 0)) {\r\n    changeTo = 0\r\n  }\r\n  player.iconSet = changeTo\r\n  Array.from(document.getElementsByTagName('img')).forEach(\r\n    function(img) {\r\n      img.src = img.src.replace(IconSetsRegex, IconSets[player.iconSet][0])\r\n    }\r\n  )\r\n  DOMCacheGetOrSet('iconSet').textContent = i18next.t(`settings.iconSets.${IconSets[player.iconSet][0].toLowerCase()}`)\r\n}\r\n\r\n// If no image is found falls back to designated fallback, then Legacy, then MISSINGIMAGE.png\r\n// MISSINGIMAGE.png(s) will not be replaced except on a full page reload\r\nexport function imgErrorHandler (evt: Event) {\r\n  if (!evt.target || !(evt.target instanceof HTMLImageElement)) {\r\n    return\r\n  }\r\n  const whichImg = evt.target\r\n  const iconSetName = IconSets[player.iconSet][0]\r\n  const fallbackSetNum = IconSets[player.iconSet][1]\r\n  let fallbackSetName = 'Legacy'\r\n  if ((fallbackSetNum >= 0) && (fallbackSetNum < IconSets.length - 1)) {\r\n    fallbackSetName = IconSets[fallbackSetNum][0]\r\n  }\r\n\r\n  if (whichImg.src.includes('Legacy') || !(IconSetsRegex.exec(whichImg.src))) {\r\n    // no image to fall back to\r\n    whichImg.src = './Pictures/MISSINGIMAGE.png'\r\n  } else if (whichImg.src.includes(iconSetName)) {\r\n    // first fall back attempt\r\n    whichImg.src = whichImg.src.replace(IconSetsRegex, fallbackSetName)\r\n  } else {\r\n    // fall back to Legacy\r\n    whichImg.src = whichImg.src.replace(IconSetsRegex, 'Legacy')\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { toggleCorruptionLevel } from './Toggles'\r\nimport { getElementById } from './Utility'\r\nimport { Alert, Prompt } from './UpdateHTML'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { IconSets } from './Themes'\r\nimport i18next from 'i18next'\r\n\r\n//\r\n\r\nexport const maxCorruptionLevel = () => {\r\n  let max = 0\r\n\r\n  if (player.challengecompletions[11] > 0) {\r\n    max += 5\r\n  }\r\n  if (player.challengecompletions[12] > 0) {\r\n    max += 2\r\n  }\r\n  if (player.challengecompletions[13] > 0) {\r\n    max += 2\r\n  }\r\n  if (player.challengecompletions[14] > 0) {\r\n    max += 2\r\n  }\r\n  if (player.platonicUpgrades[5] > 0) {\r\n    max += 1\r\n  }\r\n  if (player.platonicUpgrades[10] > 0) {\r\n    max += 1\r\n  }\r\n\r\n  // Overrides everything above.\r\n  if (player.singularityUpgrades.platonicTau.getEffect().bonus) {\r\n    max = Math.max(13, max)\r\n  }\r\n\r\n  if (player.singularityUpgrades.corruptionFourteen.getEffect().bonus) {\r\n    max += 1\r\n  }\r\n  max += +player.octeractUpgrades.octeractCorruption.getEffect().bonus\r\n\r\n  return max\r\n}\r\n\r\nexport const corruptionDisplay = (index: number) => {\r\n  if (DOMCacheGetOrSet('corruptionDetails').style.visibility !== 'visible') {\r\n    DOMCacheGetOrSet('corruptionDetails').style.visibility = 'visible'\r\n  }\r\n  if (DOMCacheGetOrSet('corruptionSelectedPic').style.visibility !== 'visible') {\r\n    DOMCacheGetOrSet('corruptionSelectedPic').style.visibility = 'visible'\r\n  }\r\n  G.corruptionTrigger = index\r\n  const currentExponent = ((index === 2) && player.usedCorruptions[index] >= 10) ? 1 + 0.04 * player.platonicUpgrades[17] + 2 * Math.min(1, player.platonicUpgrades[17]) : 1\r\n  const protoExponent = ((index === 2) && player.prototypeCorruptions[index] >= 10) ? 1 + 0.04 * player.platonicUpgrades[17] + 2 * Math.min(1, player.platonicUpgrades[17]) : 1\r\n  let bonusLevel = (player.singularityUpgrades.corruptionFifteen.level > 0) ? 1 : 0\r\n  bonusLevel += +player.singularityChallenges.oneChallengeCap.rewards.freeCorruptionLevel\r\n  const bonusText = (bonusLevel > 0) ? `[+${bonusLevel}]` : ''\r\n\r\n  const corruptEffectValues: number[][] = [\r\n    G.viscosityPower,\r\n    G.lazinessMultiplier,\r\n    G.hyperchallengedMultiplier,\r\n    G.illiteracyPower,\r\n    G.deflationMultiplier,\r\n    G.extinctionMultiplier,\r\n    G.droughtMultiplier,\r\n    G.financialcollapsePower,\r\n    [0]\r\n  ]\r\n\r\n  const iconExtensions: string[] = [\r\n    '/CorruptViscocity.png',\r\n    '/CorruptSpatialDilation.png',\r\n    '/CorruptHyperchallenged.png',\r\n    '/CorruptScientificIlliteracy.png',\r\n    '/CorruptDeflation.png',\r\n    '/CorruptExtinction.png',\r\n    '/CorruptDrought.png',\r\n    '/CorruptFinancialCollapse.png'\r\n  ]\r\n\r\n\r\n  let text: Record<'name' | 'description' | 'current' | 'planned' | 'multiplier' | 'spiritContribution' | 'image', string> = {\r\n    name: i18next.t('corruptions.exitCorruption.name'),\r\n    description: i18next.t('corruptions.exitCorruption.description'),\r\n    current: i18next.t('corruptions.exitCorruption.current'),\r\n    planned: i18next.t('corruptions.exitCorruption.planned'),\r\n    multiplier: i18next.t('corruptions.exitCorruption.multiplier'),\r\n    spiritContribution: '',\r\n    image: `Pictures/${IconSets[player.iconSet][0]}/CorruptExit.png`\r\n  }\r\n\r\n  if (index < 10) {\r\n    text = {\r\n      name: i18next.t(`corruptions.names.${index-1}`),\r\n      description: i18next.t(`corruptions.descriptions.${index-1}`),\r\n      current: i18next.t(`corruptions.currentLevel.${index-1}`, { level: format(player.usedCorruptions[index]) + bonusText, effect: format(corruptEffectValues[index-2][player.usedCorruptions[index]], 3) }),\r\n      planned: i18next.t(`corruptions.prototypeLevel.${index-1}`, { level: format(player.prototypeCorruptions[index]) + bonusText, effect: format(corruptEffectValues[index-2][player.prototypeCorruptions[index]], 3) }),\r\n      multiplier: i18next.t('corruptions.scoreMultiplier', { curr: format(Math.pow(G.corruptionPointMultipliers[player.usedCorruptions[index] + bonusLevel], currentExponent), 1), next: format(Math.pow(G.corruptionPointMultipliers[player.prototypeCorruptions[index] + bonusLevel], protoExponent), 1) }),\r\n      spiritContribution: i18next.t('corruptions.spiritEffect', { curr: format(4 * Math.pow(player.usedCorruptions[index] + bonusLevel, 2), 1), next: format(4 * Math.pow(player.prototypeCorruptions[index] + bonusLevel, 2), 1) }),\r\n      image: `Pictures/${IconSets[player.iconSet][0]}${iconExtensions[index-2]}`\r\n    }\r\n  }\r\n\r\n  DOMCacheGetOrSet('corruptionName').textContent = text.name\r\n  DOMCacheGetOrSet('corruptionDescription').textContent = text.description\r\n  DOMCacheGetOrSet('corruptionLevelCurrent').textContent = text.current\r\n  DOMCacheGetOrSet('corruptionLevelPlanned').textContent = text.planned\r\n  DOMCacheGetOrSet('corruptionMultiplierContribution').textContent = text.multiplier\r\n  DOMCacheGetOrSet('corruptionSpiritContribution').textContent = text.spiritContribution\r\n  DOMCacheGetOrSet('corruptionSelectedPic').setAttribute('src', text.image)\r\n\r\n  if (index < 10) {\r\n    DOMCacheGetOrSet(`corrCurrent${index}`).textContent = format(player.usedCorruptions[index])\r\n    DOMCacheGetOrSet(`corrNext${index}`).textContent = format(player.prototypeCorruptions[index])\r\n  }\r\n}\r\n\r\nexport const corruptionStatsUpdate = () => {\r\n  for (let i = 2; i <= 9; i++) {\r\n    // https://discord.com/channels/677271830838640680/706329553639047241/841749032841379901\r\n    const a = DOMCacheGetOrSet(`corrCurrent${i}`)\r\n    const b = DOMCacheGetOrSet(`corrNext${i}`)\r\n    a.textContent = format(player.usedCorruptions[i])\r\n    b.textContent = format(player.prototypeCorruptions[i])\r\n  }\r\n}\r\n\r\nexport const corruptionButtonsAdd = () => {\r\n  const rows = document.getElementsByClassName('corruptionStatRow')\r\n\r\n  for (let i = 0; i < rows.length; i++) {\r\n    const row = rows[i]\r\n\r\n    // Delete rows that already exist\r\n    for (let i = row.children.length - 1; i >= 1; i--) {\r\n      row.children[i].remove()\r\n    }\r\n\r\n    const p = document.createElement('p')\r\n    p.className = 'corrDesc'\r\n    let text = document.createTextNode(i18next.t('corruptions.current'))\r\n    p.appendChild(text)\r\n    let span = document.createElement('span')\r\n    span.id = `corrCurrent${i+2}`\r\n    span.textContent = `${player.usedCorruptions[i+2]}`\r\n    p.appendChild(span)\r\n\r\n    text = document.createTextNode(i18next.t('corruptions.next'))\r\n    p.appendChild(text)\r\n\r\n    span = document.createElement('span')\r\n    span.id = `corrNext${i+2}`\r\n    span.textContent = `${player.prototypeCorruptions[i+2]}`\r\n    p.appendChild(span)\r\n    row.appendChild(p)\r\n\r\n    let btn\r\n    btn = document.createElement('button')\r\n    btn.className = 'corrBtn corruptionMax'\r\n    btn.textContent = `+${i18next.t('corruptions.max')}`\r\n    btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, 99))\r\n    row.appendChild(btn)\r\n\r\n    btn = document.createElement('button')\r\n    btn.className = 'corrBtn corruptionUp'\r\n    btn.textContent = '+1'\r\n    btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, 1))\r\n    row.appendChild(btn)\r\n\r\n    btn = document.createElement('button')\r\n    btn.className = 'corrBtn corruptionDown'\r\n    btn.textContent = '-1'\r\n    btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, -1))\r\n    row.appendChild(btn)\r\n\r\n    btn = document.createElement('button')\r\n    btn.className = 'corrBtn corruptionReset'\r\n    btn.textContent = `-${i18next.t('corruptions.max')}`\r\n    btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, -99))\r\n    row.appendChild(btn)\r\n    row.addEventListener('click', () => corruptionDisplay(i + 2))\r\n  }\r\n}\r\n\r\nexport const corruptionLoadoutTableCreate = () => {\r\n  const corrCount = 8\r\n  const table = getElementById<HTMLTableElement>('corruptionLoadoutTable')\r\n\r\n  // Delete rows that already exist\r\n  for (let i = table.rows.length - 1; i >= 1; i--) {\r\n    table.deleteRow(i)\r\n  }\r\n\r\n  for (let i = 0; i < Object.keys(player.corruptionLoadouts).length + 1; i++) {\r\n    const row = table.insertRow()\r\n    for (let j = 0; j <= corrCount; j++) {\r\n      const cell = row.insertCell()\r\n      cell.className = `test${j}`\r\n      if (j === 0) { // First column\r\n        if (i === 0) { // First row\r\n          cell.textContent = i18next.t('corruptions.loadoutTable.next')\r\n          cell.addEventListener('click', () => void corruptionLoadoutGetExport())\r\n          cell.classList.add('corrLoadoutName')\r\n          cell.title = i18next.t('corruptions.loadoutTable.firstRowTitle')\r\n        } else {\r\n          // Custom loadout names are loaded later, via updateCorruptionLoadoutNames()\r\n          cell.title = i18next.t('corruptions.loadoutTable.otherRowTitle', { value: i })\r\n        }\r\n\r\n      } else if (j <= corrCount) {\r\n        if (i === 0) { // Next Ascension Corruption values\r\n          cell.textContent = player.prototypeCorruptions[j+1].toString()\r\n        } else { // Loadout Corruption values\r\n          cell.textContent = player.corruptionLoadouts[i][j+1].toString()\r\n        }\r\n      }\r\n    }\r\n    if (i === 0) {\r\n      // First line is special : \"Import\" and \"Zero\" buttons\r\n      let cell = row.insertCell()\r\n      let btn: HTMLButtonElement= document.createElement('button')\r\n      btn.className = 'corrImport'\r\n      btn.textContent = i18next.t('corruptions.loadoutTable.import')\r\n      btn.addEventListener('click', () => void importCorruptionsPrompt())\r\n      cell.appendChild(btn)\r\n      cell.title = i18next.t('corruptions.importLoadoutInTextFormat')\r\n\r\n      cell = row.insertCell()\r\n      btn = document.createElement('button')\r\n      btn.className = 'corrLoad'\r\n      btn.textContent = i18next.t('corruptions.loadoutTable.zero')\r\n      btn.addEventListener('click', () => corruptionLoadoutSaveLoad(false, i))\r\n      cell.appendChild(btn)\r\n      cell.title = i18next.t('corruptions.loadoutTable.zeroTitle')\r\n    } else {\r\n      let cell = row.insertCell()\r\n      let btn = document.createElement('button')\r\n      btn.className = 'corrSave'\r\n      btn.textContent = i18next.t('corruptions.loadoutTable.save')\r\n      btn.addEventListener('click', () => corruptionLoadoutSaveLoad(true, i))\r\n      cell.appendChild(btn)\r\n      cell.title = i18next.t('corruptions.loadoutTable.saveTitle')\r\n\r\n      cell = row.insertCell()\r\n      btn = document.createElement('button')\r\n      btn.className = 'corrLoad'\r\n      btn.textContent = i18next.t('corruptions.loadoutTable.load')\r\n      btn.addEventListener('click', () => corruptionLoadoutSaveLoad(false, i))\r\n      cell.appendChild(btn)\r\n    }\r\n  }\r\n}\r\n\r\nexport const corruptionLoadoutTableUpdate = (updateRow = 0) => {\r\n  const row = getElementById<HTMLTableElement>('corruptionLoadoutTable').rows[updateRow + 1].cells\r\n  for (let i = 1; i < row.length; i++) {\r\n    if (i > 8) {\r\n      break\r\n    }\r\n    row[i].textContent = ((updateRow === 0) ? player.prototypeCorruptions[i+1] : player.corruptionLoadouts[updateRow][i+1]).toString()\r\n  }\r\n}\r\n\r\nexport const corruptionLoadoutSaveLoad = (save = true, loadout = 1) => {\r\n  if (save) {\r\n    player.corruptionLoadouts[loadout] = Array.from(player.prototypeCorruptions)\r\n    corruptionLoadoutTableUpdate(loadout)\r\n  } else {\r\n    if (loadout === 0) {\r\n      player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    } else {\r\n      player.prototypeCorruptions = Array.from(player.corruptionLoadouts[loadout])\r\n    }\r\n    corruptionLoadoutTableUpdate()\r\n    corruptionStatsUpdate()\r\n  }\r\n}\r\n\r\nexport const applyCorruptions = (corruptions: string) => {\r\n  if (corruptions.includes('/') && corruptions.split('/').length === 13) {\r\n    // Converts the '/' separated string into a number[]\r\n    const newCorruptions = corruptions.split('/').map(corr => Number(corr))\r\n\r\n    for (const value of newCorruptions) {\r\n      if (\r\n        !Number.isInteger(value) ||\r\n        Number.isNaN(value) ||\r\n        value < 0 ||\r\n        value > maxCorruptionLevel()\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    player.prototypeCorruptions = newCorruptions\r\n    corruptionLoadoutTableUpdate()\r\n    corruptionStatsUpdate()\r\n    return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nasync function importCorruptionsPrompt() {\r\n  const input = await Prompt(i18next.t('corruptions.importCorruptionsPrompt.import'))\r\n\r\n  if (!applyCorruptions(`0/0/${input}/0/0/0`)) {\r\n    void Alert(i18next.t('corruptions.importCorruptionsPrompt.importError'))\r\n  }\r\n}\r\n\r\nasync function corruptionLoadoutGetNewName(loadout = 0) {\r\n  const maxChars = 9\r\n  // eslint-disable-next-line\r\n    const regex = /^[\\x00-\\xFF]*$/\r\n  const renamePrompt = await Prompt(i18next.t('corruptions.corruptionLoadoutName.loadoutPrompt', { loadNum: loadout + 1, maxChars }))\r\n\r\n  if (!renamePrompt) {\r\n    return Alert(i18next.t('corruptions.corruptionLoadoutName.errors.noName'))\r\n  } else if (renamePrompt.length > maxChars) {\r\n    return Alert(i18next.t('corruptions.corruptionLoadoutName.errors.exceedsCharacterLimit'))\r\n  } else if (!regex.test(renamePrompt)) {\r\n    return Alert(i18next.t('corruptions.corruptionLoadoutName.errors.regexError'))\r\n  } else {\r\n    player.corruptionLoadoutNames[loadout] = renamePrompt\r\n    updateCorruptionLoadoutNames()\r\n    if (renamePrompt === 'crazy') {\r\n      return Alert(i18next.t('corruptions.loadoutPrompt.errors.crazyJoke'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateCorruptionLoadoutNames = () => {\r\n  const rows = getElementById<HTMLTableElement>('corruptionLoadoutTable').rows\r\n  for (let i = 0; i < Object.keys(player.corruptionLoadouts).length; i++) {\r\n    const cells = rows[i + 2].cells  //start changes on 2nd row\r\n    if (cells[0].textContent!.length === 0) {  //first time setup\r\n\r\n      cells[0].addEventListener('click', () => void corruptionLoadoutGetNewName(i)) //get name function handles -1 for array\r\n      cells[0].classList.add('corrLoadoutName')\r\n    }\r\n    cells[0].textContent = `${player.corruptionLoadoutNames[i]}:`\r\n  }\r\n}\r\n\r\nconst corruptionLoadoutGetExport = async () => {\r\n  const str = player.prototypeCorruptions.slice(2, 10).join('/')\r\n  if ('clipboard' in navigator) {\r\n    await navigator.clipboard.writeText(str)\r\n      .catch((e: Error) => Alert(i18next.t('corruptions.loadoutExport.saveErrorNavigator', { message: e.message })))\r\n  } else {\r\n    void Alert(i18next.t('corruptions.loadoutExport.saveErrorNavigator', { message: str }))\r\n  }\r\n}\r\n\r\nexport const corruptionCleanseConfirm = () => {\r\n  const corrupt = DOMCacheGetOrSet('corruptionCleanseConfirm')\r\n  corrupt.style.visibility = 'visible'\r\n  setTimeout(() => corrupt.style.visibility = 'hidden', 10000)\r\n}\r\n\r\nexport const revealCorruptions = () => {\r\n  const corruptions = document.getElementsByClassName('corruptionStatRow') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < corruptions.length; i ++) {\r\n    corruptions[i].style.display = 'none'\r\n  }\r\n\r\n  const c11Unlocks = document.getElementsByClassName('chal11Corruption') as HTMLCollectionOf<HTMLElement>\r\n  const c12Unlocks = document.getElementsByClassName('chal12Corruption') as HTMLCollectionOf<HTMLElement>\r\n  const c13Unlocks = document.getElementsByClassName('chal13Corruption') as HTMLCollectionOf<HTMLElement>\r\n  const c14Unlocks = document.getElementsByClassName('chal14Corruption') as HTMLCollectionOf<HTMLElement>\r\n\r\n  if (player.challengecompletions[11] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\r\n    for (let i = 0; i < c11Unlocks.length; i++) {\r\n      c11Unlocks[i].style.display = 'flex'\r\n    }\r\n  }\r\n  if (player.challengecompletions[12] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\r\n    for (let i = 0; i < c12Unlocks.length; i++) {\r\n      c12Unlocks[i].style.display = 'flex'\r\n    }\r\n  }\r\n  if (player.challengecompletions[13] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\r\n    for (let i = 0; i < c13Unlocks.length; i++) {\r\n      c13Unlocks[i].style.display = 'flex'\r\n    }\r\n  }\r\n  if (player.challengecompletions[14] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\r\n    for (let i = 0; i < c14Unlocks.length; i++) {\r\n      c14Unlocks[i].style.display = 'flex'\r\n    }\r\n  }\r\n}\r\n\r\nexport function corrChallengeMinimum(index: number): number {\r\n  switch (index) {\r\n    case 2:\r\n      return 11\r\n    case 3:\r\n      return 14\r\n    case 4:\r\n      return 14\r\n    case 5:\r\n      return 13\r\n    case 6:\r\n      return 12\r\n    case 7:\r\n      return 12\r\n    case 8:\r\n      return 11\r\n    case 9:\r\n      return 13\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n", "import { player } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\n\r\nexport const calculatePlatonicBlessings = () => {\r\n  // The visual updates are handled in visualUpdateCubes()\r\n  const platonicArray = Object.values(player.platonicBlessings)\r\n  const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4]\r\n  for (let i = 0; i < platonicArray.length; i++) {\r\n    let power = 1\r\n    let mult = 1\r\n    let effectiveAmount = platonicArray[i]\r\n    if (i === 5) {\r\n      effectiveAmount = Math.min(effectiveAmount, 1e20)\r\n    }\r\n    if (i === 6 && effectiveAmount >= 1e20) {\r\n      effectiveAmount = Math.pow(effectiveAmount, 0.5) * 1e10\r\n    }\r\n    if (platonicArray[i] >= DRThreshold[i]) {\r\n      power = G.platonicDRPower[i]\r\n      mult *= Math.pow(DRThreshold[i], (1 - G.platonicDRPower[i]))\r\n    }\r\n\r\n    G.platonicBonusMultiplier[i] = 1 + mult * G.platonicCubeBase[i] * Math.pow(effectiveAmount, power)\r\n  }\r\n}\r\n", "/* Functions which Handle Quark Gains,  */\r\n\r\nimport { calculateCubeQuarkMultiplier, calculateQuarkMultiplier } from './Calculate'\r\nimport { format, player } from './Synergism'\r\nimport { Alert } from './UpdateHTML'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\n\r\nconst getBonus = async (): Promise<null | number> => {\r\n  if (!navigator.onLine) {\r\n    return null\r\n  }\r\n  if (document.visibilityState === 'hidden') {\r\n    return null\r\n  }\r\n\r\n  try {\r\n    const r = await fetch('https://synergism-quarks.khafra.workers.dev/')\r\n    const j = await r.json() as { bonus: number }\r\n\r\n    return j.bonus\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`workers.dev: ${(e as Error).message}`)\r\n  }\r\n\r\n  try {\r\n    const r = await fetch('https://api.github.com/gists/44be6ad2dcf0d44d6a29dffe1d66a84a', {\r\n      headers: {\r\n        'Accept': 'application/vnd.github.v3+json'\r\n      }\r\n    })\r\n\r\n    const t = await r.json() as { files: Record<string, { content: string }> }\r\n    const b = Number(t.files['SynergismQuarkBoost.txt'].content)\r\n\r\n    return b\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`GitHub Gist: ${(e as Error).message}`)\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport const quarkHandler = () => {\r\n  let maxTime = 90000 //In Seconds\r\n  if (player.researches[195] > 0) {\r\n    maxTime += 18000 * player.researches[195] // Research 8x20\r\n  }\r\n\r\n  //Part 2: Calculate quark gain per hour\r\n  let baseQuarkPerHour = 5\r\n\r\n  const quarkResearches = [99, 100, 125, 180, 195]\r\n  for (const el of quarkResearches) {\r\n    baseQuarkPerHour += player.researches[el]\r\n  }\r\n\r\n  baseQuarkPerHour *= +player.octeractUpgrades.octeractExportQuarks.getEffect().bonus\r\n\r\n  const quarkPerHour = baseQuarkPerHour\r\n\r\n  //Part 3: Calculates capacity of quarks on export\r\n  const capacity = Math.floor(quarkPerHour * maxTime / 3600)\r\n\r\n  //Part 4: Calculate how many quarks are to be gained.\r\n  const quarkGain = Math.floor(player.quarkstimer * quarkPerHour / 3600)\r\n\r\n  //Part 5 [June 9, 2021]: Calculate bonus awarded to cube quarks.\r\n  const cubeMult = calculateCubeQuarkMultiplier()\r\n  //Return maxTime, quarkPerHour, capacity and quarkGain as object\r\n  return {\r\n    maxTime,\r\n    perHour: quarkPerHour,\r\n    capacity,\r\n    gain: quarkGain,\r\n    cubeMult\r\n  }\r\n}\r\n\r\nexport class QuarkHandler {\r\n  /** Global quark bonus */\r\n  public BONUS = 0\r\n  /** Quark amount */\r\n  private QUARKS = 0\r\n\r\n  private static interval: ReturnType<typeof setInterval> | null = null\r\n\r\n  constructor({ bonus, quarks }: { bonus?: number, quarks: number }) {\r\n    this.QUARKS = quarks\r\n    if (bonus) {\r\n      this.BONUS = bonus\r\n    } else {\r\n      void this.getBonus()\r\n    }\r\n\r\n    if (QuarkHandler.interval === null) {\r\n      // although the values are cached for 15 mins, refresh every 5\r\n      QuarkHandler.interval = setInterval(this.getBonus.bind(this), 60 * 1000 * 5)\r\n    }\r\n  }\r\n\r\n  /*** Calculates the number of quarks to give with the current bonus. */\r\n  applyBonus(amount: number) {\r\n    const nonPatreon = calculateQuarkMultiplier()\r\n    return amount * (1 + (this.BONUS / 100)) * nonPatreon\r\n  }\r\n\r\n  /** Subtracts quarks, as the name suggests. */\r\n  add(amount: number, useBonus = true) {\r\n    this.QUARKS += useBonus ? this.applyBonus(amount) : amount\r\n    player.quarksThisSingularity += useBonus ? this.applyBonus(amount) : amount\r\n    return this\r\n  }\r\n\r\n  /** Add quarks, as suggested by the function's name. */\r\n  sub(amount: number) {\r\n    this.QUARKS -= amount\r\n    if (this.QUARKS < 0) {\r\n      this.QUARKS = 0\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  async getBonus() {\r\n    const el = DOMCacheGetOrSet('currentBonus')\r\n    if (localStorage.getItem('quarkBonus') !== null) { // is in cache\r\n      const { bonus, fetched } = JSON.parse(localStorage.getItem('quarkBonus')!) as { bonus: number, fetched: number }\r\n      if (Date.now() - fetched < 60 * 1000 * 15) { // cache is younger than 15 minutes\r\n        el.textContent = `Generous patrons give you a bonus of ${bonus}% more Quarks!`\r\n        return this.BONUS = bonus\r\n      }\r\n    } else if (!navigator.onLine) {\r\n      return el.textContent = 'Current Bonus: N/A% (offline)!'\r\n    } else if (document.hidden) {\r\n      return el.textContent = 'Current Bonus: N/A% (unfocused)!'\r\n    }\r\n\r\n    const b = await getBonus()\r\n\r\n    if (b === null) {\r\n      return\r\n    } else if (Number.isNaN(b) || typeof b !== 'number') {\r\n      return Alert('No bonus could be applied, a network error occurred! [Invalid Bonus] :(')\r\n    } else if (!Number.isFinite(b)) {\r\n      return Alert('No bonus could be applied, an error occurred. [Infinity] :(')\r\n    } else if (b < 0) {\r\n      return Alert('No bonus could be applied, an error occurred. [Zero] :(')\r\n    }\r\n\r\n    el.textContent = `Generous patrons give you a bonus of ${b}% more Quarks!`\r\n    localStorage.setItem('quarkBonus', JSON.stringify({ bonus: b, fetched: Date.now() }))\r\n    this.BONUS = b\r\n  }\r\n\r\n  public toString(val: number): string {\r\n    return format(Math.floor(this.applyBonus(val)), 0, true)\r\n  }\r\n\r\n  [Symbol.toPrimitive] = (t: string) => t === 'number' ? this.QUARKS : null\r\n}\r\n", "\r\n\r\n/* Note by Platonic, April 1 2021\r\nThis is an experimental file for making cubes their own class\r\nand make them easily re-used for later purposes.\r\nPlease do not change the *file name* or use anything developed in this\r\nfile without asking me first. You may edit this file as much as you\r\nwant, though!\r\nThank you! */\r\n\r\nimport Decimal from 'break_infinity.js'\r\nimport i18next from 'i18next'\r\nimport { achievementaward } from './Achievements'\r\nimport { calculateCubeBlessings } from './Calculate'\r\nimport { CalcECC } from './Challenges'\r\nimport { calculateHypercubeBlessings } from './Hypercubes'\r\nimport { calculatePlatonicBlessings } from './PlatonicCubes'\r\nimport { quarkHandler } from './Quark'\r\nimport { format, player } from './Synergism'\r\nimport { calculateTesseractBlessings } from './Tesseracts'\r\nimport type { Player } from './types/Synergism'\r\nimport { Prompt, Alert } from './UpdateHTML'\r\n\r\n/* Constants */\r\n\r\nconst blessings: Record<\r\n    keyof Player['cubeBlessings'],\r\n    { weight: number, pdf: (x: number) => boolean }\r\n> = {\r\n  accelerator: { weight: 4, pdf: (x: number) => 0 <= x && x <= 20 },\r\n  multiplier: { weight: 4, pdf: (x: number) => 20 < x && x <= 40 },\r\n  offering: { weight: 2, pdf: (x: number) => 40 < x && x <= 50 },\r\n  runeExp: { weight: 2, pdf: (x: number) => 50 < x && x <= 60 },\r\n  obtainium: { weight: 2, pdf: (x: number) => 60 < x && x <= 70 },\r\n  antSpeed: { weight: 2, pdf: (x: number) => 70 < x && x <= 80 },\r\n  antSacrifice: { weight: 1, pdf: (x: number) => 80 < x && x <= 85 },\r\n  antELO: { weight: 1, pdf: (x: number) => 85 < x && x <= 90 },\r\n  talismanBonus: { weight: 1, pdf: (x: number) => 90 < x && x <= 95 },\r\n  globalSpeed: { weight: 1, pdf: (x: number) => 95 < x && x <= 100 }\r\n}\r\n\r\nconst platonicBlessings: Record <\r\n    keyof Player['platonicBlessings'],\r\n    { weight: number, pdf: (x: number) => boolean }\r\n> = {\r\n  cubes: { weight: 13200, pdf: (x: number) => 0 <= x && x <= 33.000 },\r\n  tesseracts: { weight: 13200, pdf: (x: number) => 33.000 < x && x <= 66.000 },\r\n  hypercubes: { weight: 13200, pdf: (x: number) => 66.000 < x && x <= 99.000 },\r\n  platonics: { weight: 396, pdf: (x: number) => 99.000 < x && x <= 99.990 },\r\n  hypercubeBonus: { weight: 1, pdf: (x: number) => 99.990 < x && x <= 99.9925 },\r\n  taxes: { weight: 1, pdf: (x: number) => 99.9925 < x && x <= 99.995 },\r\n  scoreBonus: { weight: 1, pdf: (x: number) => 99.995 < x && x <= 99.9975 },\r\n  globalSpeed: { weight: 1, pdf: (x: number) => 99.9975 < x && x <= 100 }\r\n}\r\n\r\n/**\r\n * @description Generic class for handling cube subsets.\r\n * @example\r\n * class PlatCubes extends Currency {\r\n *   constructor() {\r\n *       super('wowPlatonicCubes', player.wowPlatonicCubes);\r\n *   }\r\n *\r\n *   async open(amount: number, value: boolean) {\r\n *       // implement open logic here\r\n *   }\r\n * }\r\n *\r\n * new PlatCubes().openCustom();\r\n */\r\nexport abstract class Cube {\r\n  /** key on the player object */\r\n  private key: keyof Player\r\n  private value: number\r\n\r\n  constructor (\r\n    type: keyof Player,\r\n    v = 0\r\n  ) {\r\n    this.key = type\r\n    this.value = v\r\n  }\r\n\r\n    /**\r\n     * @description Open a given amount of cubes\r\n     * @param amount Number of cubes to open\r\n     * @param max if true, overwrites amount and opens the max amount of cubes.\r\n     */\r\n    abstract open(amount: number, max: boolean): Promise<void> | void\r\n\r\n    /** Open a custom amount of cubes */\r\n    async openCustom() {\r\n      // TODO: Replace this with `this`?\r\n      const thisInPlayer = player[this.key] as Cube\r\n      const amount = await Prompt(i18next.t('cubes.howManyCubesOpen', { x: format(thisInPlayer, 0, true) }))\r\n\r\n      if (amount === null) {\r\n        return Alert(i18next.t('cubes.noCubesOpened'))\r\n      }\r\n\r\n      const isPercentage = amount.endsWith('%')\r\n      const cubesToOpen = amount.startsWith('-')\r\n        ? (isPercentage ? 100 + Number(amount.slice(0, -1)) : thisInPlayer.value + Number(amount))\r\n        : (isPercentage ? Number(amount.slice(0, -1)) : Number(amount))\r\n\r\n      if (Number.isNaN(cubesToOpen) || !Number.isFinite(cubesToOpen) || !Number.isInteger(cubesToOpen)) {\r\n        return Alert(i18next.t('general.validation.finiteInt'))\r\n      } else if (thisInPlayer.value < cubesToOpen) {\r\n        return Alert(i18next.t('cubes.validation.notEnough'))\r\n      } else if (cubesToOpen <= 0) {\r\n        return Alert(i18next.t('cubes.validation.negative'))\r\n      } else if (isPercentage && cubesToOpen > 100) {\r\n        return Alert(i18next.t('cubes.validation.invalidPercent', { x: cubesToOpen }))\r\n      }\r\n\r\n      if (isPercentage) {\r\n        return this.open(\r\n          Math.floor(thisInPlayer.value * (cubesToOpen / 100)),\r\n          cubesToOpen === 100\r\n        )\r\n      }\r\n\r\n      return this.open(cubesToOpen, cubesToOpen === thisInPlayer.value)\r\n    }\r\n\r\n    /** @description Check how many quarks you should have gained through opening cubes today */\r\n    checkQuarkGain(base: number, mult: number, cubes: number): number {\r\n      if (cubes < 1) {\r\n        return 0\r\n      }\r\n      // General quark multiplier from other in-game features\r\n      // Multiplier from passed parameter\r\n      const multiplier = mult * quarkHandler().cubeMult\r\n\r\n      return Math.floor(player.worlds.applyBonus(Math.log10(cubes) * base * multiplier))\r\n    }\r\n\r\n    /** @description Check how many cubes you need to gain an additional quark from opening */\r\n    checkCubesToNextQuark(base: number, mult: number, quarks: number, cubes: number): number {\r\n      // General quark multiplier from other in-game features\r\n      // Multiplier from passed parameter\r\n      const multiplier = mult * quarkHandler().cubeMult\r\n\r\n      return Math.ceil(Math.pow(10, (quarks + 1) / player.worlds.applyBonus(multiplier * base)) - cubes)\r\n    }\r\n\r\n    add(amount: number): this {\r\n      this.value = Math.min(1e300, this.value + amount)\r\n      return this\r\n    }\r\n\r\n    sub(amount: number): this {\r\n      this.value = Math.max(0, this.value - amount)\r\n      return this\r\n    }\r\n\r\n    [Symbol.toPrimitive](h: string) {\r\n      switch (h) {\r\n        case 'string': return this.value.toString()\r\n        case 'number': return this.value\r\n        default: return null\r\n      }\r\n    }\r\n}\r\n\r\nexport class WowCubes extends Cube {\r\n  constructor(amount = Number(player.wowCubes)) {\r\n    super('wowCubes', amount)\r\n  }\r\n\r\n  open(value: number, max = false) {\r\n    let toSpend = max ? Number(this) : Math.min(Number(this), value)\r\n\r\n    if (value === 1 && player.cubeBlessings.accelerator >= 2e11 && player.achievements[246] < 1) {\r\n      achievementaward(246)\r\n    }\r\n\r\n    this.sub(toSpend)\r\n    player.cubeOpenedDaily += toSpend\r\n\r\n    const quarkMult = (player.shopUpgrades.cubeToQuark) ? 1.5 : 1\r\n    const gainQuarks = Number(this.checkQuarkGain(5, quarkMult, player.cubeOpenedDaily))\r\n    const actualQuarksGain = Math.max(0, gainQuarks - player.cubeQuarkDaily)\r\n    player.cubeQuarkDaily += actualQuarksGain\r\n    player.worlds.add(actualQuarksGain, false)\r\n\r\n    toSpend *= (1 + player.researches[138] / 1000)\r\n    toSpend *= (1 + 0.8 * player.researches[168] / 1000)\r\n    toSpend *= (1 + 0.6 * player.researches[198] / 1000)\r\n\r\n    toSpend = Math.floor(toSpend)\r\n    let toSpendModulo = toSpend % 20\r\n    let toSpendDiv20 = Math.floor(toSpend / 20)\r\n\r\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[13] === 1) {\r\n      toSpendModulo += toSpendDiv20\r\n    }\r\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[23] === 1) {\r\n      toSpendModulo += toSpendDiv20\r\n    }\r\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[33] === 1) {\r\n      toSpendModulo += toSpendDiv20\r\n    }\r\n\r\n    toSpendDiv20 += 100 / 100 * Math.floor(toSpendModulo / 20)\r\n    toSpendModulo = toSpendModulo % 20\r\n\r\n    const keys = Object.keys(player.cubeBlessings) as (keyof Player['cubeBlessings'])[]\r\n\r\n    // If you're opening more than 20 cubes, it will consume all cubes until remainder mod 20, giving expected values.\r\n    for (const key of keys) {\r\n      player.cubeBlessings[key] += blessings[key].weight * toSpendDiv20 * (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])))\r\n    }\r\n\r\n    // Then, the remaining cubes will be opened, simulating the probability [RNG Element]\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n      const num = 100 * Math.random()\r\n      for (const key of keys) {\r\n        if (blessings[key].pdf(num)) {\r\n          player.cubeBlessings[key] += (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])))\r\n        }\r\n      }\r\n    }\r\n\r\n    calculateCubeBlessings()\r\n  }\r\n}\r\n\r\nexport class WowTesseracts extends Cube {\r\n  constructor(amount = Number(player.wowTesseracts)) {\r\n    super('wowTesseracts', amount)\r\n  }\r\n\r\n  open(value: number, max = false) {\r\n    const toSpend = max ? Number(this) : Math.min(Number(this), value)\r\n\r\n    player.wowTesseracts.sub(toSpend)\r\n    player.tesseractOpenedDaily += toSpend\r\n\r\n    const quarkMult = (player.shopUpgrades.tesseractToQuark) ? 1.5 : 1\r\n    const gainQuarks = Number(this.checkQuarkGain(7, quarkMult, player.tesseractOpenedDaily))\r\n    const actualQuarksGain = Math.max(0, gainQuarks - player.tesseractQuarkDaily)\r\n    player.tesseractQuarkDaily += actualQuarksGain\r\n    player.worlds.add(actualQuarksGain, false)\r\n\r\n    const toSpendModulo = toSpend % 20\r\n    const toSpendDiv20 = Math.floor(toSpend / 20)\r\n\r\n    // If you're opening more than 20 Tesseracts, it will consume all Tesseracts until remainder mod 20, giving expected values.\r\n    for (const key in player.tesseractBlessings) {\r\n      player.tesseractBlessings[key as keyof Player['tesseractBlessings']] += blessings[key as keyof typeof blessings].weight * toSpendDiv20\r\n    }\r\n    // Then, the remaining tesseract will be opened, simulating the probability [RNG Element]\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n      const num = 100 * Math.random()\r\n      for (const key in player.tesseractBlessings) {\r\n        if (blessings[key as keyof typeof blessings].pdf(num)) {\r\n          player.tesseractBlessings[key as keyof Player['tesseractBlessings']] += 1\r\n        }\r\n      }\r\n    }\r\n\r\n    calculateTesseractBlessings()\r\n    const extraCubeBlessings = Math.floor(12 * toSpend * player.researches[153])\r\n    player.wowCubes.add(extraCubeBlessings)\r\n    player.wowCubes.open(extraCubeBlessings, false)\r\n  }\r\n}\r\n\r\nexport class WowHypercubes extends Cube {\r\n  constructor(amount = Number(player.wowHypercubes)) {\r\n    super('wowHypercubes', amount)\r\n  }\r\n\r\n  open(value: number, max = false) {\r\n    const toSpend = max ? Number(this) : Math.min(Number(this), value)\r\n\r\n    player.wowHypercubes.sub(toSpend)\r\n    player.hypercubeOpenedDaily += toSpend\r\n\r\n    const quarkMult = (player.shopUpgrades.hypercubeToQuark) ? 1.5 : 1\r\n    const gainQuarks = this.checkQuarkGain(10, quarkMult, player.hypercubeOpenedDaily)\r\n    const actualQuarksGain = Math.max(0, gainQuarks - player.hypercubeQuarkDaily)\r\n    player.hypercubeQuarkDaily += actualQuarksGain\r\n    player.worlds.add(actualQuarksGain, false)\r\n\r\n    const toSpendModulo = toSpend % 20\r\n    const toSpendDiv20 = Math.floor(toSpend/20)\r\n\r\n    // If you're opening more than 20 Hypercubes, it will consume all Hypercubes until remainder mod 20, giving expected values.\r\n    for (const key in player.hypercubeBlessings) {\r\n      player.hypercubeBlessings[key as keyof Player['hypercubeBlessings']] += blessings[key as keyof typeof blessings].weight * toSpendDiv20\r\n    }\r\n    // Then, the remaining hypercubes will be opened, simulating the probability [RNG Element]\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n      const num = 100 * Math.random()\r\n      for (const key in player.hypercubeBlessings) {\r\n        if (blessings[key as keyof typeof blessings].pdf(num)) {\r\n          player.hypercubeBlessings[key as keyof Player['hypercubeBlessings']] += 1\r\n        }\r\n      }\r\n    }\r\n\r\n    calculateHypercubeBlessings()\r\n    const extraTesseractBlessings = Math.floor(100 * toSpend * player.researches[153])\r\n    player.wowTesseracts.add(extraTesseractBlessings)\r\n    player.wowTesseracts.open(extraTesseractBlessings, false)\r\n  }\r\n}\r\n\r\nexport class WowPlatonicCubes extends Cube {\r\n  constructor(amount = Number(player.wowPlatonicCubes)) {\r\n    super('wowPlatonicCubes', amount)\r\n  }\r\n\r\n  open(value: number, max = false) {\r\n    const toSpend = max ? Number(this) : Math.min(Number(this), value)\r\n\r\n    player.wowPlatonicCubes.sub(toSpend)\r\n    player.platonicCubeOpenedDaily += toSpend\r\n\r\n    const quarkMult = 1.5 // There's no platonic to quark upgrade, default as 1.5\r\n    const gainQuarks = this.checkQuarkGain(15, quarkMult, player.platonicCubeOpenedDaily)\r\n    const actualQuarksGain = Math.max(0, gainQuarks - player.platonicCubeQuarkDaily)\r\n    player.platonicCubeQuarkDaily += actualQuarksGain\r\n    player.worlds.add(actualQuarksGain, false)\r\n\r\n    let toSpendModulo = toSpend % 40000\r\n    const toSpendDiv40000 = Math.floor(toSpend / 40000)\r\n\r\n    //If you're opening more than 40,000 Platonics, it will consume all Platonics until remainder mod 40,000, giving expected values.\r\n    for (const key in player.platonicBlessings) {\r\n      player.platonicBlessings[key as keyof Player['platonicBlessings']] += platonicBlessings[key as keyof typeof platonicBlessings].weight * toSpendDiv40000\r\n      if (platonicBlessings[key as keyof typeof platonicBlessings].weight === 1 && player.cubeUpgrades[64] > 0) {\r\n        player.platonicBlessings[key as keyof Player['platonicBlessings']] += toSpendDiv40000 // Doubled!\r\n      }\r\n    }\r\n    //Then, the remaining hypercube will be opened, simulating the probability [RNG Element]\r\n    const RNGesus = ['hypercubeBonus', 'taxes', 'scoreBonus', 'globalSpeed']\r\n    for (let i = 0; i < RNGesus.length; i++) {\r\n      const num = Math.random()\r\n      if (toSpendModulo / 40000 >= num && toSpendModulo !== 0) {\r\n        player.platonicBlessings[RNGesus[i] as keyof Player['platonicBlessings']] += 1\r\n        toSpendModulo -= 1\r\n      }\r\n    }\r\n    const gainValues = [Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(396 * toSpendModulo / 40000)]\r\n    const commonDrops = ['cubes', 'tesseracts', 'hypercubes', 'platonics'] as const\r\n    for (let i = 0; i < commonDrops.length; i++) {\r\n      player.platonicBlessings[commonDrops[i]] += gainValues[i]\r\n      toSpendModulo -= gainValues[i]\r\n    }\r\n\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n      const num = 100 * Math.random()\r\n      for (const key in player.platonicBlessings) {\r\n        if (platonicBlessings[key as keyof typeof platonicBlessings].pdf(num)) {\r\n          player.platonicBlessings[key as keyof Player['platonicBlessings']] += 1\r\n        }\r\n      }\r\n    }\r\n    calculatePlatonicBlessings()\r\n    if (player.achievements[271] > 0) {\r\n      const extraHypercubes = Math.floor(toSpend * Math.max(0, Math.min(1, (Decimal.log(player.ascendShards.add(1), 10) - 1e5) / 9e5)))\r\n      player.wowHypercubes.add(extraHypercubes)\r\n      player.wowHypercubes.open(extraHypercubes, false)\r\n    }\r\n  }\r\n}\r\n", "export const version = '3.0.0 pt 2: June 9, 2023: The Blueberry Tree pt 1'\r\n\r\n/**\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n */\r\n// eslint-disable-next-line\r\nexport const testing: boolean = false;\r\nexport const lastUpdated = new Date(Date.UTC(2023, 5, 2, 16, 0, 6))\r\n/**\r\n * CHANGE THIS ONE INSTEAD\r\n */\r\n// eslint-disable-next-line\r\nexport const prod: boolean = false\r\n", "import { player, saveSynergy, blankSave, reloadShit, format, saveCheck } from './Synergism'\r\nimport { octeractGainPerSecond } from './Calculate'\r\nimport { testing, version } from './Config'\r\nimport { cleanString, getElementById, productContents, sumContents } from './Utility'\r\nimport LZString from 'lz-string'\r\nimport { achievementaward } from './Achievements'\r\nimport type { Player } from './types/Synergism'\r\nimport { Synergism } from './Events'\r\nimport { Alert, Confirm, Prompt } from './UpdateHTML'\r\nimport { quarkHandler } from './Quark'\r\nimport { shopData } from './Shop'\r\nimport { addTimers } from './Helper'\r\nimport { btoa } from './Utility'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport localforage from 'localforage'\r\nimport { Globals as G } from './Variables'\r\nimport { singularityData } from './singularity'\r\nimport { getEvent } from './Event'\r\nimport { synergismStage } from './Statistics'\r\nimport ClipboardJS from 'clipboard'\r\nimport i18next from 'i18next'\r\nimport { changeTab, changeSubTab } from './Tabs'\r\n\r\nconst format24 = new Intl.DateTimeFormat('EN-GB', {\r\n  year: 'numeric',\r\n  month: '2-digit',\r\n  day: '2-digit',\r\n  hour: '2-digit',\r\n  hour12: false,\r\n  minute: '2-digit',\r\n  second: '2-digit'\r\n})\r\nconst format12 = new Intl.DateTimeFormat('EN-GB', {\r\n  year: 'numeric',\r\n  month: '2-digit',\r\n  day: '2-digit',\r\n  hour: '2-digit',\r\n  hour12: true,\r\n  minute: '2-digit',\r\n  second: '2-digit'\r\n})\r\n\r\nconst hour = 3600000\r\n\r\nconst getRealTime = (type = 'default', use12 = false) => {\r\n  const format = use12 ? format12 : format24\r\n  const datePartsArr = format\r\n    .formatToParts(new Date())\r\n    .filter((x) => x.type !== 'literal')\r\n    .map(p => ({ [p.type]: p.value }))\r\n\r\n  const dateParts = Object.assign({}, ...datePartsArr) as Record<string, string>\r\n\r\n  const period = use12 ? ` ${dateParts.dayPeriod.toUpperCase()}` : ''\r\n  const weekday = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat']\r\n  switch (type) {\r\n    case 'default': return `${dateParts.year}-${dateParts.month}-${dateParts.day} ${dateParts.hour}_${dateParts.minute}_${dateParts.second}${period}`\r\n    case 'short': return `${dateParts.year}${dateParts.month}${dateParts.day}${dateParts.hour}${dateParts.minute}${dateParts.second}`\r\n    case 'year': return `${dateParts.year}`\r\n    case 'month': return `${dateParts.month}`\r\n    case 'day': return `${dateParts.day}`\r\n    case 'hour': return `${dateParts.hour}`\r\n    case 'minute': return `${dateParts.minute}`\r\n    case 'second': return `${dateParts.second}`\r\n    case 'period': return `${dateParts.dayPeriod.toUpperCase()}`\r\n    case 'weekday': return `${weekday[new Date().getUTCDay()]}`\r\n    default: return type\r\n  }\r\n}\r\n\r\nexport const updateSaveString = (input: HTMLInputElement) => {\r\n  const value = input.value.slice(0, 100)\r\n  player.saveString = value === '' ? blankSave.saveString : cleanString(value);\r\n  (DOMCacheGetOrSet('saveStringInput') as HTMLInputElement).value = player.saveString\r\n}\r\n\r\nexport const getVer = () => /[\\d?=.]+/.exec(version)?.[0] ?? version\r\n\r\nexport const saveFilename = () => {\r\n  const s = player.saveString\r\n  const t = s.replace(/\\$(.*?)\\$/g, (_, b) => {\r\n    switch (b) {\r\n      case 'VERSION': return `v${version}`\r\n      case 'TIME': return getRealTime()\r\n      case 'TIME12': return getRealTime(undefined, true)\r\n      case 'SING': return `Singularity ${player.singularityCount}`\r\n      case 'SINGS': return `${player.singularityCount}`\r\n      case 'VER': return getVer()\r\n      case 'TIMES': return getRealTime('short')\r\n      case 'YEAR': return getRealTime('year')\r\n      case 'Y': return getRealTime('year')\r\n      case 'MONTH': return getRealTime('month')\r\n      case 'M': return getRealTime('month')\r\n      case 'DAY': return getRealTime('day')\r\n      case 'D': return getRealTime('day')\r\n      case 'HOUR': return getRealTime('hour')\r\n      case 'H': return getRealTime('hour')\r\n      case 'H12': return getRealTime('hour', true)\r\n      case 'MINUTE': return getRealTime('minute')\r\n      case 'MI': return getRealTime('minute')\r\n      case 'SECOND': return getRealTime('second')\r\n      case 'S': return getRealTime('second')\r\n      case 'PERIOD': return getRealTime('period', true)\r\n      case 'P': return getRealTime('period', true)\r\n      case 'WEEKDAY': return getRealTime('weekday')\r\n      case 'W': return getRealTime('weekday')\r\n      case 'DATE': return `${Date.now()}`\r\n      case 'DATES': return `${Math.floor(Date.now() / 1000)}`\r\n      case 'QUARK': return `${Math.floor(Number(player.worlds))}`\r\n      case 'QUARKS': return format(Number(player.worlds))\r\n      case 'GQ': return `${Math.floor(player.goldenQuarks)}`\r\n      case 'GQS': return format(player.goldenQuarks)\r\n      case 'STAGE': return synergismStage(0)\r\n      default: return `${b}`\r\n    }\r\n  })\r\n\r\n  return cleanString(t)\r\n}\r\n\r\nexport const exportSynergism = async () => {\r\n  player.offlinetick = Date.now()\r\n  const quarkData = quarkHandler()\r\n\r\n  let bonusGQMultiplier = 1\r\n  bonusGQMultiplier *= 1 + player.worlds.BONUS / 100\r\n  bonusGQMultiplier *= (player.highestSingularityCount >= 100 ? 1 + player.highestSingularityCount / 50 : 1)\r\n  if (+player.singularityUpgrades.goldenQuarks3.getEffect().bonus > 0) {\r\n    player.goldenQuarks += Math.floor(player.goldenQuarksTimer / (3600 / +player.singularityUpgrades.goldenQuarks3.getEffect().bonus)) * bonusGQMultiplier\r\n    player.goldenQuarksTimer = player.goldenQuarksTimer % (3600 / +player.singularityUpgrades.goldenQuarks3.getEffect().bonus)\r\n  }\r\n  if (quarkData.gain >= 1) {\r\n    player.worlds.add(quarkData.gain)\r\n    player.quarkstimer = (player.quarkstimer % (3600 / quarkData.perHour))\r\n  }\r\n\r\n  const saved = await saveSynergy()\r\n\r\n  if (!saved) {\r\n    return\r\n  }\r\n\r\n  const toClipboard = getElementById<HTMLInputElement>('saveType').checked\r\n  const save =\r\n        await localforage.getItem<Blob>('Synergysave2') ??\r\n        localStorage.getItem('Synergysave2')\r\n  const saveString = typeof save === 'string' ? save : await save?.text()\r\n\r\n  if (saveString === undefined) {\r\n    return Alert('How?')\r\n  }\r\n\r\n  if (toClipboard) {\r\n    try {\r\n      // This can fail for two reasons:\r\n      // - TypeError (browser doesn't support this feature)\r\n      // - Failed to copy (browser limitation; Safari)\r\n      await navigator.clipboard.writeText(saveString)\r\n      DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.copiedSave')\r\n    } catch (err) {\r\n      // So we fallback to the deprecated way of doing it,\r\n      // which isn't limited by any browser.\r\n\r\n      // Old/bad browsers (legacy Edge, Safari because of limitations)\r\n      const textArea = document.createElement('textarea')\r\n\r\n      textArea.setAttribute('style', 'top: 0; left: 0; position: fixed;')\r\n      // For future Khafra: html5 attributes have no limit in length\r\n      textArea.setAttribute('data-clipboard-text', saveString)\r\n\r\n      document.body.appendChild(textArea)\r\n      textArea.focus()\r\n      textArea.select()\r\n\r\n      const clipboard = new ClipboardJS(textArea)\r\n\r\n      const cleanup = () => {\r\n        clipboard.destroy()\r\n        document.body.removeChild(textArea)\r\n      }\r\n\r\n      clipboard.on('success', () => {\r\n        DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.copiedSave')\r\n        cleanup()\r\n      })\r\n\r\n      clipboard.on('error', () => {\r\n        DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.exportFailed')\r\n        void Alert(i18next.t('importexport.unableCopySave')).finally(cleanup)\r\n      })\r\n    }\r\n  } else {\r\n    const a = document.createElement('a')\r\n    a.setAttribute('href', 'data:text/plain;charset=utf-8,' + saveString)\r\n    a.setAttribute('download', saveFilename())\r\n    a.setAttribute('id', 'downloadSave')\r\n    // \"Starting in Firefox 75, the click() function works even when the element is not attached to a DOM tree.\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\r\n    // so let's have it work on older versions of Firefox, doesn't change functionality.\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n    DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.copiedFile')\r\n  }\r\n  setTimeout(() => DOMCacheGetOrSet('exportinfo').textContent = '', 15_000)\r\n}\r\n\r\nexport const reloadDeleteGame = async () => {\r\n  await Alert(i18next.t('importexport.reloadDeletePrompt'))\r\n  await resetGame()\r\n}\r\n\r\nexport const resetGame = async () => {\r\n  const a = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16\r\n  const b = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16\r\n\r\n  const result = await Prompt(i18next.t('importexport.resetPrompt', { a, b, sum: a + b }))\r\n  if (result === null || Number(result) !== a + b) {\r\n    return Alert(i18next.t('importexport.wrongAnswer'))\r\n  }\r\n\r\n  const hold = Object.assign({}, blankSave, {\r\n    codes: Array.from(blankSave.codes)\r\n  }) as Player\r\n  //Reset Displays\r\n  changeTab('buildings')\r\n  changeSubTab('buildings', { page: 0 })\r\n  changeSubTab('runes', { page: 0 }) // Set 'runes' subtab back to 'runes' tab\r\n  changeSubTab('cube', { page: 0 }) // Set 'cube tribues' subtab back to 'cubes' tab\r\n  changeSubTab('traits', { page: 0 }) // set 'corruption main'\r\n  changeSubTab('singularity', { page: 0 }) // set 'singularity main'\r\n  changeSubTab('settings', { page: 0 }) // set 'statistics main'\r\n  //Import Game\r\n  await importSynergism(btoa(JSON.stringify(hold)), true)\r\n}\r\n\r\nexport const importSynergism = async (input: string | null, reset = false) => {\r\n  if (typeof input !== 'string') {\r\n    return Alert(i18next.t('importexport.unableImport'))\r\n  }\r\n\r\n  const d = LZString.decompressFromBase64(input)\r\n  const f = d ? JSON.parse(d) as Player : JSON.parse(atob(input)) as Player\r\n\r\n  if (\r\n    (f.exporttest === 'YES!' || f.exporttest === true) ||\r\n        (f.exporttest === false && testing) ||\r\n        (f.exporttest === 'NO!' && testing)\r\n  ) {\r\n    const saveString = btoa(JSON.stringify(f))\r\n\r\n    if (saveString === null) {\r\n      return Alert(i18next.t('importexport.unableImport'))\r\n    }\r\n\r\n    saveCheck.canSave = false\r\n    const item = new Blob([saveString], { type: 'text/plain' })\r\n    await localforage.setItem<Blob>('Synergysave2', item)\r\n\r\n    localStorage.setItem('saveScumIsCheating', Date.now().toString())\r\n\r\n    await reloadShit(reset)\r\n    saveCheck.canSave = true\r\n    return\r\n  } else {\r\n    return Alert(i18next.t('importexport.loadTestInLive'))\r\n  }\r\n}\r\n\r\nexport const promocodesInfo = (input: string) => {\r\n  const textElement = DOMCacheGetOrSet('promocodeinfo')\r\n  let textMessage = `'${input}': `\r\n  let availableUses = 0\r\n  switch (input) {\r\n    case 'daily':\r\n      if (player.dailyCodeUsed) {\r\n        textMessage += i18next.t('importexport.daily0Uses')\r\n      } else {\r\n        textMessage += i18next.t('importexport.daily1Uses')\r\n      }\r\n      break\r\n    case 'add':\r\n      availableUses = addCodeAvailableUses()\r\n      if (availableUses === 0) {\r\n        textMessage += i18next.t('importexport.add0Uses', {\r\n          x: 0,\r\n          y: format(addCodeTimeToNextUse(), 0)\r\n        })\r\n      } else if (availableUses !== 1) {\r\n        textMessage += i18next.t('importexport.addUses', { x: availableUses })\r\n      } else {\r\n        textMessage += i18next.t('importexport.add1Uses', { x: availableUses })\r\n      }\r\n\r\n      break\r\n    case 'time':\r\n      availableUses = timeCodeAvailableUses()\r\n\r\n      if (availableUses === 0) {\r\n        textMessage += i18next.t('importexport.add0Uses', {\r\n          x: 0,\r\n          y: format(timeCodeTimeToNextUse(), 0)\r\n        })\r\n      } else {\r\n        textMessage += i18next.t('importexport.timeMultiplier', {\r\n          x: availableUses,\r\n          y: format(timeCodeRewardMultiplier(), 2, true)\r\n        })\r\n      }\r\n\r\n      break\r\n    default:\r\n      textMessage = ''\r\n  }\r\n\r\n  textElement.textContent = textMessage\r\n}\r\n\r\nexport const promocodesPrompt = async () => {\r\n  const input = await Prompt(i18next.t('importexport.promocodePrompt'))\r\n  void promocodes(input)\r\n}\r\n\r\nexport const promocodes = async (input: string | null, amount?: number) => {\r\n  const el = DOMCacheGetOrSet('promocodeinfo')\r\n\r\n  if (input === null) {\r\n    return Alert(i18next.t('importexport.comeBackSoon'))\r\n  }\r\n  if (input === 'synergism2023' && !player.codes.get(46) && G.isEvent && getEvent().name === 'Synergism 3: More Synergies') {\r\n\r\n    if (!player.dailyCodeUsed) {\r\n      return Alert('This event code gives you another usage of code \\'daily\\'. Please use that code and try this event code again.')\r\n    }\r\n\r\n    player.codes.set(46, true)\r\n    player.quarkstimer = quarkHandler().maxTime\r\n    player.goldenQuarksTimer = 3600 * 24\r\n    addTimers('ascension', 4 * 3600)\r\n    player.dailyCodeUsed = false\r\n\r\n    if (player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0) {\r\n      player.hepteractCrafts.quark.CAP *= 2\r\n      player.hepteractCrafts.quark.BAL += Math.min(1e13, player.hepteractCrafts.quark.CAP/2)\r\n    }\r\n    if (player.highestSingularityCount > 0) {\r\n      player.singularityUpgrades.goldenQuarks1.freeLevels += 1 + Math.floor(player.highestSingularityCount / 25)\r\n      player.singularityUpgrades.goldenQuarks2.freeLevels += 1 + Math.floor(player.highestSingularityCount / 25)\r\n      player.singularityUpgrades.goldenQuarks3.freeLevels += 1 + Math.floor(player.highestSingularityCount / 25)\r\n      if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\r\n        player.octeractUpgrades.octeractAscensionsOcteractGain.freeLevels += 0.2\r\n      }\r\n    }\r\n\r\n    return Alert(`Happy 3rd anniversary of Synergism!!!! Your Quark timer(s) have been replenished and you have been given 4 real life hours of Ascension progress! Your daily code has also been reset for you.\r\n                      ${(player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0)? 'Derpsmith also hacked your save to expand Quark Hepteract for free, and (to a limit) automatically filled the extra amount! What a generous, handsome fella.' : ''}\r\n                      ${(player.highestSingularityCount > 0) ? 'You were also given free levels of GQ1-3!' : ''} \r\n                      ${(player.singularityUpgrades.octeractUnlock.getEffect().bonus) ? 'Finally, you were given free levels of Octeract Accumulator!': ''}`)\r\n  }\r\n  if (input === 'synergism2021' && !player.codes.get(1)) {\r\n    player.codes.set(1, true)\r\n    player.runeshards += 25\r\n    player.worlds.add(50)\r\n    el.textContent = i18next.t('importexport.promocodes.synergism2021')\r\n  } else if (input === ':unsmith:' && player.achievements[243] < 1) {\r\n    achievementaward(243)\r\n    el.textContent = i18next.t('importexport.promocodes.unsmith')\r\n  } else if (input === ':antismith:' && player.achievements[244] < 1) {\r\n    achievementaward(244)\r\n    el.textContent = i18next.t('importexport.promocodes.antismith')\r\n  } else if (input === 'Khafra' && !player.codes.get(26)) {\r\n    player.codes.set(26, true)\r\n    const quarks = Math.floor(Math.random() * (400 - 100 + 1) + 100)\r\n    player.worlds.add(quarks)\r\n    el.textContent = i18next.t('importexport.promocodes.khafra', {\r\n      x: player.worlds.applyBonus(quarks)\r\n    })\r\n  } else if (input.toLowerCase() === 'daily' && !player.dailyCodeUsed) {\r\n    player.dailyCodeUsed = true\r\n    let rewardMessage = i18next.t('importexport.promocodes.daily.message')\r\n\r\n    const rewards = dailyCodeReward()\r\n    const quarkMultiplier = 1 + Math.min(49, player.highestSingularityCount)\r\n\r\n    let actualQuarkAward = player.worlds.applyBonus(rewards.quarks * quarkMultiplier)\r\n    if (actualQuarkAward > 1e5) {\r\n      actualQuarkAward = Math.pow(1e5, 0.75) * Math.pow(actualQuarkAward, 0.25)\r\n    }\r\n    player.worlds.add(actualQuarkAward, false)\r\n    player.goldenQuarks += rewards.goldenQuarks\r\n\r\n    rewardMessage += `\\n${format(actualQuarkAward, 0, true)} Quarks`\r\n    if (rewards.goldenQuarks > 0) {\r\n      rewardMessage += `\\n${format(rewards.goldenQuarks, 0, true)} Golden Quarks`\r\n    }\r\n    await Alert(rewardMessage)\r\n\r\n    if (player.highestSingularityCount > 0) {\r\n      const upgradeDistribution: Record<\r\n            'goldenQuarks1' | 'goldenQuarks2' | 'goldenQuarks3' | 'singCubes1' | 'singCubes2' | 'singCubes3' |\r\n            'singOfferings1' | 'singOfferings2' | 'singOfferings3' |\r\n            'singObtainium1' | 'singObtainium2' | 'singObtainium3' | 'ascensions',\r\n            {value: number, pdf: (x: number) => boolean}> = {\r\n              goldenQuarks3: { value: 0.2, pdf: (x: number) => 0 <= x && x <= 1 },\r\n              goldenQuarks2: { value: 0.2, pdf: (x: number) => 1 <= x && x <= 3 },\r\n              goldenQuarks1: { value: 0.2, pdf: (x: number) => 3 <= x && x <= 10 },\r\n              singCubes3: { value: 0.25, pdf: (x: number) => 10 < x && x <= 15 },\r\n              singObtainium3: { value: 0.25, pdf: (x: number) => 15 < x && x <= 20 },\r\n              singOfferings3: { value: 0.25, pdf: (x: number) => 20 < x && x <= 25 },\r\n              singCubes2: { value: 0.5, pdf: (x: number) => 25 < x && x <= 80 },\r\n              singObtainium2: { value: 0.5, pdf: (x: number) => 80 < x && x <= 140 },\r\n              singOfferings2: { value: 0.5, pdf: (x: number) => 140 < x && x <= 200 },\r\n              singCubes1: { value: 1, pdf: (x: number) => 200 < x && x <= 400 },\r\n              singObtainium1: { value: 1, pdf: (x: number) => 400 < x && x <= 600 },\r\n              singOfferings1: { value: 1, pdf: (x: number) => 600 < x && x <= 800 },\r\n              ascensions: { value: 1, pdf: (x: number) => 800 < x && x <= 1000 }\r\n            }\r\n      let rolls = 3 * Math.sqrt(player.highestSingularityCount)\r\n      rolls += +player.octeractUpgrades.octeractImprovedDaily.getEffect().bonus\r\n      rolls += player.shopUpgrades.shopImprovedDaily2\r\n      rolls += player.shopUpgrades.shopImprovedDaily3\r\n      rolls += player.shopUpgrades.shopImprovedDaily4\r\n      rolls += (+player.singularityUpgrades.platonicPhi.getEffect().bonus *\r\n                        Math.min(50, 5 * player.singularityCounter / (3600 * 24)))\r\n      rolls += +player.octeractUpgrades.octeractImprovedDaily3.getEffect().bonus\r\n      rolls *= +player.octeractUpgrades.octeractImprovedDaily2.getEffect().bonus\r\n      rolls *= 1 + +player.octeractUpgrades.octeractImprovedDaily3.getEffect().bonus / 200\r\n\r\n      if (player.highestSingularityCount >= 200) {\r\n        rolls *= 2\r\n      }\r\n\r\n      rolls = Math.floor(rolls)\r\n\r\n      const keys = Object\r\n        .keys(player.singularityUpgrades)\r\n        .filter(key => key in upgradeDistribution) as (keyof typeof upgradeDistribution)[]\r\n\r\n      rewardMessage = i18next.t('importexport.promocodes.daily.message2')\r\n      // The same upgrade can be drawn several times, so we save the sum of the levels gained, to display them only once at the end\r\n      const freeLevels: Record<string, number> = {}\r\n      for (let i = 0; i < rolls; i++) {\r\n        const num = 1000 * Math.random()\r\n        for (const key of keys) {\r\n          if (upgradeDistribution[key].pdf(num)) {\r\n            player.singularityUpgrades[key].freeLevels += upgradeDistribution[key].value\r\n            freeLevels[key] ? freeLevels[key] += upgradeDistribution[key].value : freeLevels[key] = upgradeDistribution[key].value\r\n          }\r\n        }\r\n      }\r\n\r\n      if (player.highestSingularityCount >= 20) {\r\n        player.singularityUpgrades.goldenQuarks1.freeLevels += 0.2\r\n        freeLevels.goldenQuarks1 ? freeLevels.goldenQuarks1 += 0.2 : freeLevels.goldenQuarks1 = 0.2\r\n        player.singularityUpgrades.goldenQuarks2.freeLevels += 0.2\r\n        freeLevels.goldenQuarks2 ? freeLevels.goldenQuarks2 += 0.2 : freeLevels.goldenQuarks2 = 0.2\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 1\r\n        freeLevels.goldenQuarks3 ? freeLevels.goldenQuarks3 += 1 : freeLevels.goldenQuarks3 = 1\r\n\r\n      }\r\n\r\n      if (player.highestSingularityCount >= 200) {\r\n        player.octeractUpgrades.octeractGain.freeLevels += (player.octeractUpgrades.octeractGain.level / 100)\r\n        freeLevels.octeractGain = player.octeractUpgrades.octeractGain.level / 100\r\n      }\r\n\r\n      if (player.highestSingularityCount >= 205) {\r\n        player.octeractUpgrades.octeractGain2.freeLevels += (player.octeractUpgrades.octeractGain2.level / 100)\r\n        freeLevels.octeractGain2 = player.octeractUpgrades.octeractGain2.level / 100\r\n      }\r\n\r\n      for (const key of Object.keys(freeLevels)) {\r\n        rewardMessage += dailyCodeFormatFreeLevelMessage(key, freeLevels[key])\r\n      }\r\n      await Alert(rewardMessage)\r\n    }\r\n    return\r\n  } else if (input.toLowerCase() === 'add') {\r\n    const availableUses = addCodeAvailableUses()\r\n    const maxUses = addCodeMaxUses().total\r\n    const timeToNextUse = format(addCodeTimeToNextUse(), 0)\r\n    const timeInterval = addCodeInterval().time\r\n\r\n    if (availableUses < 1) {\r\n      el.textContent = i18next.t('importexport.noAddCodes', { x: timeToNextUse })\r\n      return\r\n    }\r\n\r\n    let attemptsUsed: string | null = null\r\n    if (amount) {\r\n      attemptsUsed = amount.toString()\r\n    } else {\r\n      attemptsUsed = await Prompt(i18next.t('importexport.useXAdds', { x: availableUses }))\r\n    }\r\n\r\n    if (attemptsUsed === null) {\r\n      return Alert(i18next.t('importexport.cancelAdd'))\r\n    }\r\n    const toUse = Number(attemptsUsed)\r\n    if (\r\n      Number.isNaN(toUse) ||\r\n            !Number.isInteger(toUse) ||\r\n            toUse <= 0\r\n    ) {\r\n      return Alert(i18next.t('general.validation.invalidNumber'))\r\n    }\r\n\r\n    const addEffects = addCodeBonuses()\r\n\r\n    const realAttemptsUsed = Math.min(availableUses, toUse)\r\n    const actualQuarks = Math.floor(addEffects.quarks * realAttemptsUsed)\r\n    const [first, second] = window.crypto.getRandomValues(new Uint8Array(2))\r\n\r\n    //Allows storage of up to (24 + 2 * calc2 levels) Add Codes, lol!\r\n    const v = Math.max(Date.now() - (maxUses - realAttemptsUsed) * timeInterval, player.rngCode + timeInterval * realAttemptsUsed)\r\n    const remaining = Math.floor((Date.now() - v) / timeInterval)\r\n    const timeToNext = Math.floor((timeInterval - (Date.now() - v - timeInterval * remaining)) / 1000)\r\n\r\n    // Calculator 3: Adds ascension timer.\r\n    const ascensionTimer = realAttemptsUsed * addEffects.ascensionTimer\r\n    const ascensionTimerText = (player.shopUpgrades.calculator3 > 0)\r\n      ? i18next.t('importexport.promocodes.add.calculator3', { x: format(ascensionTimer) })\r\n      : ''\r\n\r\n    // Calculator 5: Adds GQ export timer.\r\n    const gqTimer = realAttemptsUsed * addEffects.gqTimer\r\n    const gqTimerText = (player.shopUpgrades.calculator5 > 0)\r\n      ? i18next.t('importexport.promocodes.add.calculator5', { x: format(gqTimer) })\r\n      : ''\r\n\r\n    // Calculator 6: Octeract Generation\r\n    const octeractTime = realAttemptsUsed * addEffects.octeractTime\r\n    const octeractTimeText = (player.shopUpgrades.calculator6 > 0)\r\n      ? i18next.t('importexport.promocodes.add.calculator6', { x: format(octeractTime) })\r\n      : ''\r\n\r\n    // Midas' Millenium-Aged Gold perk\r\n    const freeLevelsText = (player.highestSingularityCount >= 150)\r\n      ? i18next.t('importexport.promocodes.add.freeLevel', {\r\n        x: format(0.01 * realAttemptsUsed, 2),\r\n        y: format(0.05 * realAttemptsUsed, 2)\r\n      })\r\n      : ''\r\n\r\n    // Calculator Maxed: you don't need to insert anything!\r\n    if (player.shopUpgrades.calculator === shopData.calculator.maxLevel) {\r\n      player.worlds.add(actualQuarks)\r\n      addTimers('ascension', ascensionTimer)\r\n      player.goldenQuarksTimer += gqTimer\r\n      addTimers('octeracts', octeractTime)\r\n\r\n      if (player.highestSingularityCount >= 150) {\r\n        player.singularityUpgrades.goldenQuarks1.freeLevels += 0.01 * realAttemptsUsed\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 0.05 * realAttemptsUsed\r\n      }\r\n\r\n      player.rngCode = v\r\n      if (amount) {\r\n        // No message when using Add x1 Special action, we refresh the info message\r\n        promocodesInfo('add')\r\n        return\r\n      } else {\r\n        return Alert(i18next.t('importexport.promocodes.add.calculatorMaxed', {\r\n          a: first,\r\n          b: second,\r\n          c: first + second,\r\n          d: player.worlds.toString(actualQuarks),\r\n          e: ascensionTimerText,\r\n          f: gqTimerText,\r\n          g: octeractTimeText,\r\n          h: freeLevelsText,\r\n          i: remaining,\r\n          j: timeToNext.toLocaleString()\r\n        }))\r\n      }\r\n    }\r\n\r\n    // If your calculator isn't maxed but has levels, it will provide the solution.\r\n    const options = {\r\n      w: player.worlds.toString(actualQuarks),\r\n      x: first,\r\n      y: second,\r\n      z: first + second\r\n    }\r\n\r\n    const promptText = (player.shopUpgrades.calculator > 0)\r\n      ? i18next.t('importexport.promocodes.add.calculatorSolution', options)\r\n      : i18next.t('importexport.promocodes.add.calculatorPrompt', options)\r\n\r\n    const addPrompt = await Prompt(promptText)\r\n\r\n    if (addPrompt === null) {\r\n      return Alert(i18next.t('importexport.promocodes.add.cancelled'))\r\n    }\r\n\r\n    player.rngCode = v\r\n\r\n    if (first + second === +addPrompt) {\r\n      player.worlds.add(actualQuarks)\r\n      addTimers('ascension', ascensionTimer)\r\n      player.goldenQuarksTimer += gqTimer\r\n      addTimers('octeracts', octeractTime)\r\n\r\n      await Alert(i18next.t('importexport.promocodes.add.reward', {\r\n        a: player.worlds.toString(actualQuarks),\r\n        b: ascensionTimerText,\r\n        c: gqTimerText,\r\n        d: octeractTimeText,\r\n        e: remaining,\r\n        f: timeToNext.toLocaleString(navigator.language)\r\n      }))\r\n    } else {\r\n      await Alert(i18next.t('importexport.promocodes.add.wrong', {\r\n        w: addPrompt,\r\n        x: first + second,\r\n        y: remaining,\r\n        z: timeToNext.toLocaleString(navigator.language)\r\n      }))\r\n    }\r\n\r\n  } else if (input === 'sub') {\r\n    const amount = 1 + window.crypto.getRandomValues(new Uint16Array(1))[0] % 16 // [1, 16]\r\n    const quarks = Number(player.worlds)\r\n    await Alert(i18next.t('importexport.promocodes.sub.subbed', { x: amount }))\r\n\r\n    if (quarks < amount) {\r\n      await Alert(i18next.t('importexport.promocodes.sub.gave', {\r\n        x: amount - quarks,\r\n        y: amount\r\n      }))\r\n    }\r\n\r\n    player.worlds.sub(quarks < amount ? amount - quarks : amount)\r\n  } else if (input === 'gamble') {\r\n    if (\r\n      typeof player.skillCode === 'number' ||\r\n            typeof localStorage.getItem('saveScumIsCheating') === 'string'\r\n    ) {\r\n      if (\r\n        (Date.now() - player.skillCode!) / 1000 < 3600 ||\r\n                (Date.now() - Number(localStorage.getItem('saveScumIsCheating'))) / 1000 < 3600\r\n      ) {\r\n        return el.textContent = i18next.t('importexport.promocodes.gamble.wait')\r\n      }\r\n    }\r\n\r\n    const confirmed = await Confirm(i18next.t('importexport.promocodes.gamble.confirm'))\r\n    if (!confirmed) {\r\n      return el.textContent = i18next.t('importexport.promocodes.gamble.cancelled')\r\n    }\r\n\r\n    const bet = Number(await Prompt(i18next.t('importexport.promocodes.gamble.betPrompt')))\r\n    if (Number.isNaN(bet) || bet <= 0) {\r\n      return el.textContent = i18next.t('general.validation.zeroOrLess')\r\n    } else if (bet > 1e4) {\r\n      return el.textContent = i18next.t('importexport.promocodes.gamble.cheaters')\r\n    } else if (Number(player.worlds) < bet) {\r\n      return el.textContent = i18next.t('general.validation.moreThanPlayerHas')\r\n    }\r\n\r\n    localStorage.setItem('saveScumIsCheating', Date.now().toString())\r\n    const dice = window.crypto.getRandomValues(new Uint8Array(1))[0] % 6 + 1 // [1, 6]\r\n\r\n    if (dice === 1) {\r\n      const won = bet * .25 // lmao\r\n      player.worlds.add(won, false)\r\n\r\n      player.skillCode = Date.now()\r\n      return el.textContent = i18next.t('importexport.promocodes.gamble.won', { x: won })\r\n    }\r\n\r\n    player.worlds.sub(bet)\r\n    el.textContent = i18next.t('importexport.promocodes.gamble.lost', { x: bet })\r\n  } else if (input === 'time') {\r\n    const availableUses = timeCodeAvailableUses()\r\n    if (availableUses === 0) {\r\n      return Alert(i18next.t('importexport.promocodes.time.wait'))\r\n    }\r\n\r\n    const rewardMult = timeCodeRewardMultiplier()\r\n\r\n    const random = Math.random() * 15000 // random time within 15 seconds\r\n    const start = Date.now()\r\n    const playerConfirmed = await Confirm(i18next.t('importexport.promocodes.time.confirm', {\r\n      x: format(2500 + 125 * player.cubeUpgrades[61], 0, true),\r\n      y: format(rewardMult, 2, true)\r\n    }))\r\n\r\n    if (playerConfirmed) {\r\n      const diff = Math.abs(Date.now() - (start + random))\r\n      player.promoCodeTiming.time = Date.now()\r\n\r\n      if (diff <= (2500 + 125 * player.cubeUpgrades[61])) {\r\n        const reward = Math.floor(Math.min(1000, (125 + 25 * player.highestSingularityCount)) * (1 + player.cubeUpgrades[61] / 50))\r\n        let actualQuarkAward = player.worlds.applyBonus(reward)\r\n        let blueberryTime = 0\r\n        if (actualQuarkAward > 66666) {\r\n          actualQuarkAward = Math.pow(actualQuarkAward, 0.35) * Math.pow(66666, 0.65)\r\n        }\r\n\r\n        if (player.visitedAmbrosiaSubtab) {\r\n          blueberryTime = 1800 * rewardMult\r\n        }\r\n\r\n        player.worlds.add(actualQuarkAward * rewardMult, false)\r\n        G.ambrosiaTimer += blueberryTime\r\n        const winText = i18next.t('importexport.promocodes.time.won', {\r\n          x: format(actualQuarkAward * rewardMult, 0, true)\r\n        })\r\n        const ambrosiaText = (blueberryTime > 0) ? i18next.t('importexport.promocodes.time.ambrosia', { blueberryTime }) : ''\r\n        return Alert(winText + ambrosiaText)\r\n      } else {\r\n        return Alert(i18next.t('importexport.promocodes.time.lost'))\r\n      }\r\n    }\r\n  } else if (input === 'spoiler') {\r\n    const perSecond = octeractGainPerSecond()\r\n    if (perSecond > 1) {\r\n      return Alert(i18next.t('importexport.promocodes.spoiler.moreThan1', { x: format(perSecond, 2, true) }))\r\n    } else {\r\n      return Alert(i18next.t('importexport.promocodes.spoiler.one', { x: format(1 / perSecond, 2, true) }))\r\n    }\r\n\r\n  } else {\r\n    el.textContent = i18next.t('importexport.promocodes.invalid')\r\n  }\r\n\r\n  const saved = await saveSynergy() // should fix refresh bug where you can continuously enter promocodes\r\n\r\n  if (!saved) {\r\n    return\r\n  }\r\n\r\n  Synergism.emit('promocode', input)\r\n\r\n  setTimeout(() => el.textContent = '', 15000)\r\n}\r\n\r\nconst addCodeSingularityPerkBonus = () : number => {\r\n  const levels = [10, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 235, 240]\r\n  let count = 0\r\n  for (let i = 0; i < levels.length; i++) {\r\n    if (player.highestSingularityCount >= levels[i]) {\r\n      count += 1\r\n      continue\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n  return 1 + count / 5\r\n}\r\n\r\nexport const addCodeMaxUses = () => {\r\n  let calc5uses = Math.floor(player.shopUpgrades.calculator5 / 10)\r\n  if (player.shopUpgrades.calculator5 === shopData.calculator5.maxLevel) {\r\n    calc5uses += 6\r\n  }\r\n\r\n  const arr = [\r\n    24,                                                                                 // base\r\n    2 * player.shopUpgrades.calculator2,                                                // PL-AT X\r\n    player.shopUpgrades.calculator4 === shopData.calculator4.maxLevel ? 32 : 0,         // PL-AT \u03B4\r\n    calc5uses,                                                                          // PL-AT \u0393\r\n    player.shopUpgrades.calculator6 === shopData.calculator6.maxLevel ? 24 : 0          // PL_AT _\r\n  ]\r\n\r\n  let maxUses = sumContents(arr)\r\n\r\n  arr.push(addCodeSingularityPerkBonus())\r\n  maxUses *= addCodeSingularityPerkBonus()\r\n\r\n  return {\r\n    list: arr,\r\n    total: Math.ceil(maxUses)\r\n  }\r\n}\r\n\r\nexport const addCodeInterval = () => {\r\n  const arr = [\r\n    hour,  // base value\r\n    (1 - 0.04 * player.shopUpgrades.calculator4),\r\n    (1 - Math.min(.6, (player.highestSingularityCount >= 125 ? player.highestSingularityCount / 800 : 0)\r\n                            + (player.highestSingularityCount >= 200 ? player.highestSingularityCount / 800 : 0))),\r\n    player.runelevels[6] > 0 ? 0.8 : 1,\r\n    1 / addCodeSingularityPerkBonus()\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    time: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const addCodeAvailableUses = (): number => {\r\n  const maxUses = addCodeMaxUses().total\r\n  const timeInterval = addCodeInterval().time\r\n\r\n  return Math.floor(Math.min(maxUses, (Date.now() - player.rngCode) / timeInterval))\r\n}\r\n\r\nexport const addCodeTimeToNextUse = (): number => {\r\n  const timeToFirst = Math.floor(addCodeInterval().time + player.rngCode - Date.now())/1000\r\n\r\n  if (timeToFirst > 0) {\r\n    return timeToFirst\r\n  } else if (addCodeAvailableUses() == addCodeMaxUses().total) {\r\n    return 0\r\n  } else {\r\n    const addTimerElapsedTime = Date.now() - player.rngCode\r\n    const remainder = addTimerElapsedTime - addCodeInterval().time * addCodeAvailableUses()\r\n\r\n    return Math.floor(addCodeInterval().time - remainder) / 1000\r\n  }\r\n}\r\n\r\nexport const addCodeBonuses = () => {\r\n  const perkRewardDivisor = addCodeSingularityPerkBonus()\r\n\r\n  let commonQuarkMult = 1 + 0.14 * player.shopUpgrades.calculator // Calculator Shop Upgrade (+14% / level)\r\n  commonQuarkMult *= (player.shopUpgrades.calculator2 === shopData.calculator2.maxLevel)? 1.25: 1 // Calculator 2 Max Level (+25%)\r\n  commonQuarkMult /= perkRewardDivisor\r\n\r\n  const sampledMult = Math.max(0.4 + 0.02 * player.shopUpgrades.calculator3, 2/5 + (window.crypto.getRandomValues(new Uint16Array(2))[0] % 128) / 640) // [0.4, 0.6], slightly biased in favor of 0.4. =)\r\n  const minMult = 0.4 + 0.02 * player.shopUpgrades.calculator3\r\n  const maxMult = 0.6\r\n\r\n  const quarkBase = commonQuarkMult * quarkHandler().perHour\r\n\r\n  // Calculator 3: Adds ascension timer.  Also includes Expert Pack multiplier.\r\n  const ascMult = (player.singularityUpgrades.expertPack.level > 0) ? 1.2 : 1\r\n  const ascensionTimer = 60 * player.shopUpgrades.calculator3 * ascMult / perkRewardDivisor\r\n\r\n  // Calculator 5: Adds GQ export timer.\r\n  const gqTimer = 6 * player.shopUpgrades.calculator5  / perkRewardDivisor\r\n\r\n  // Calculator 6: Octeract Generation\r\n  const octeractTime = player.shopUpgrades.calculator6  / perkRewardDivisor\r\n\r\n  return {\r\n    quarks: sampledMult * quarkBase, // The quarks to actually reward (if not for stats)\r\n    minQuarks: minMult * quarkBase,\r\n    maxQuarks: maxMult * quarkBase,\r\n    ascensionTimer,\r\n    gqTimer,\r\n    octeractTime\r\n  }\r\n}\r\n\r\nconst timeCodeAvailableUses = (): number => {\r\n  return ((Date.now() - player.promoCodeTiming.time) / 1000 < 900) ? 0 : 1\r\n}\r\n\r\nconst timeCodeTimeToNextUse = (): number => {\r\n  return 900 - ((Date.now() - player.promoCodeTiming.time) / 1000)\r\n}\r\n\r\nconst timeCodeRewardMultiplier = (): number => {\r\n  return Math.min(24, (Date.now() - player.promoCodeTiming.time) / (1000 * 3600))\r\n}\r\n\r\nconst dailyCodeFormatFreeLevelMessage = (upgradeKey: string, freeLevelAmount: number): string => {\r\n  const upgradeNiceName = (upgradeKey in singularityData)\r\n    ? i18next.t(`singularity.data.${upgradeKey}.name`)\r\n    : i18next.t(`octeract.data.${upgradeKey}.name`)\r\n  return `\\n+${freeLevelAmount} extra levels of '${upgradeNiceName}'`\r\n}\r\n\r\nconst dailyCodeReward = () => {\r\n  let quarks = 0\r\n  let goldenQuarks = 0\r\n\r\n  const ascended = player.ascensionCount > 0\r\n  const singularity = player.highestSingularityCount > 0\r\n  if (player.reincarnationCount > 0 || ascended || singularity) {\r\n    quarks += 20\r\n  }\r\n  if (player.challengecompletions[6] > 0 || ascended || singularity) {\r\n    quarks += 20\r\n  }  // 40\r\n  if (player.challengecompletions[7] > 0 || ascended || singularity) {\r\n    quarks += 30\r\n  } // 70\r\n  if (player.challengecompletions[8] > 0 || ascended || singularity) {\r\n    quarks += 30\r\n  } // 100\r\n  if (player.challengecompletions[9] > 0 || ascended || singularity) {\r\n    quarks += 40\r\n  } // 140\r\n  if (player.challengecompletions[10] > 0 || ascended || singularity) {\r\n    quarks += 60\r\n  } // 200\r\n  if (ascended || singularity) {\r\n    quarks += 50\r\n  } // 250\r\n  if (player.challengecompletions[11] > 0 || singularity) {\r\n    quarks += 50\r\n  } // 300\r\n  if (player.challengecompletions[12] > 0 || singularity) {\r\n    quarks += 50\r\n  } // 350\r\n  if (player.challengecompletions[13] > 0 || singularity) {\r\n    quarks += 50\r\n  } // 400\r\n  if (player.challengecompletions[14] > 0 || singularity) {\r\n    quarks += 100\r\n  } // 500\r\n  if (player.researches[200] === G.researchMaxLevels[200]) {\r\n    quarks += 250\r\n  } // 750\r\n  if (player.cubeUpgrades[50] === 100000) {\r\n    quarks += 250\r\n  } // 1000\r\n  if (player.platonicUpgrades[5] > 0) {\r\n    quarks += 250\r\n  } // 1250\r\n  if (player.platonicUpgrades[10] > 0) {\r\n    quarks += 500\r\n  } // 1750\r\n  if (player.platonicUpgrades[15] > 0) {\r\n    quarks += 750\r\n  } // 2500\r\n  if (player.challenge15Exponent > 1e18) {\r\n    quarks += Math.floor(1000 * (Math.log10(player.challenge15Exponent) - 18))\r\n  } // at least 2500\r\n  if (player.platonicUpgrades[20] > 0) {\r\n    quarks += 2500\r\n  } // at least 5k\r\n\r\n  quarks *= 1 + 0.05 * player.shopUpgrades.shopImprovedDaily\r\n  quarks = Math.floor(quarks)\r\n\r\n  if (singularity) {\r\n    goldenQuarks += 2 + 3 * player.highestSingularityCount\r\n    goldenQuarks *= 1 + 0.2 * player.shopUpgrades.shopImprovedDaily2\r\n    goldenQuarks *= 1 + 0.15 * player.shopUpgrades.shopImprovedDaily3\r\n    goldenQuarks *= 1 + player.shopUpgrades.shopImprovedDaily4\r\n  }\r\n\r\n  return {\r\n    quarks,\r\n    goldenQuarks\r\n  }\r\n}\r\n\r\nexport const handleLastModified = (lastModified: number) => {\r\n  const localStorageFirstPlayed = localStorage.getItem('firstPlayed')\r\n  const lastModifiedDate = new Date(lastModified)\r\n\r\n  if (localStorageFirstPlayed === null) {\r\n    localStorage.setItem('firstPlayed', lastModifiedDate.toISOString())\r\n    return\r\n  }\r\n\r\n  const localFirstPlayedDate = new Date(localStorageFirstPlayed)\r\n\r\n  // The larger the ms value, the newer the file.\r\n  // So if the current oldest date is newer than the last modified date\r\n  // for the new file, set the oldest date to the last modified.\r\n  if (localFirstPlayedDate.getTime() > lastModifiedDate.getTime()) {\r\n    player.firstPlayed = lastModifiedDate.toISOString()\r\n    localStorage.setItem('firstPlayed', player.firstPlayed)\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { Alert, Confirm, Prompt, revealStuff } from './UpdateHTML'\r\nimport { calculatePowderConversion, calculateSummationNonLinear, calculateTimeAcceleration } from './Calculate'\r\nimport type { Player } from './types/Synergism'\r\nimport type { IMultiBuy } from './Cubes'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\n/**\r\n * Standardization of metadata contained for each shop upgrade.\r\n */\r\nexport enum shopUpgradeTypes {\r\n    CONSUMABLE = 'consume',\r\n    UPGRADE = 'upgrade'\r\n}\r\n\r\ntype shopResetTier = 'Reincarnation' | 'Ascension' | 'Singularity' | 'SingularityVol2' | 'SingularityVol3' | 'SingularityVol4' | 'Exalt'\r\n\r\nexport interface IShopData {\r\n    price: number\r\n    priceIncrease: number\r\n    maxLevel: number\r\n    type: shopUpgradeTypes\r\n    refundable: boolean\r\n    refundMinimumLevel: number\r\n    tier: shopResetTier\r\n}\r\n\r\nexport const shopData: Record<keyof Player['shopUpgrades'], IShopData> = {\r\n  offeringPotion: {\r\n    price: 100,\r\n    priceIncrease: 0,\r\n    maxLevel: 999999999,\r\n    type: shopUpgradeTypes.CONSUMABLE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0,\r\n    tier: 'Reincarnation'\r\n  },\r\n  obtainiumPotion: {\r\n    tier: 'Reincarnation',\r\n    price: 100,\r\n    priceIncrease: 0,\r\n    maxLevel: 999999999,\r\n    type: shopUpgradeTypes.CONSUMABLE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  offeringEX: {\r\n    tier: 'Reincarnation',\r\n    price: 150,\r\n    priceIncrease: 10,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  offeringAuto: {\r\n    tier: 'Reincarnation',\r\n    price: 150,\r\n    priceIncrease: 10,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 1\r\n  },\r\n  obtainiumEX: {\r\n    tier: 'Reincarnation',\r\n    price: 150,\r\n    priceIncrease: 10,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  obtainiumAuto: {\r\n    tier: 'Reincarnation',\r\n    price: 150,\r\n    priceIncrease: 10,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 1\r\n  },\r\n  instantChallenge: {\r\n    tier: 'Reincarnation',\r\n    price: 300,\r\n    priceIncrease: 99999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  antSpeed: {\r\n    tier: 'Reincarnation',\r\n    price: 200,\r\n    priceIncrease: 25,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  cashGrab: {\r\n    tier: 'Reincarnation',\r\n    price: 100,\r\n    priceIncrease: 40,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopTalisman: {\r\n    tier: 'Reincarnation',\r\n    price: 1500,\r\n    priceIncrease: 99999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPass: {\r\n    tier: 'Ascension',\r\n    price: 500,\r\n    priceIncrease: 75,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  challengeExtension: {\r\n    tier: 'Ascension',\r\n    price: 500,\r\n    priceIncrease: 250,\r\n    maxLevel: 5,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  challengeTome: {\r\n    tier: 'Ascension',\r\n    price: 500,\r\n    priceIncrease: 250,\r\n    maxLevel: 15,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  cubeToQuark: {\r\n    tier: 'Ascension',\r\n    price: 2000,\r\n    priceIncrease: 99999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  tesseractToQuark: {\r\n    tier: 'Ascension',\r\n    price: 3500,\r\n    priceIncrease: 99999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  hypercubeToQuark: {\r\n    tier: 'Ascension',\r\n    price: 5000,\r\n    priceIncrease: 99999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPass2: {\r\n    tier: 'Ascension',\r\n    price: 2500,\r\n    priceIncrease: 250,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPass3: {\r\n    tier: 'Ascension',\r\n    price: 5000,\r\n    priceIncrease: 500,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  chronometer: {\r\n    tier: 'Ascension',\r\n    price: 2000,\r\n    priceIncrease: 500,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  infiniteAscent: {\r\n    tier: 'Ascension',\r\n    price: 50000,\r\n    priceIncrease: 9999999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  calculator: {\r\n    tier: 'Reincarnation',\r\n    price: 1000,\r\n    priceIncrease: 500,\r\n    maxLevel: 5,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 1\r\n  },\r\n  calculator2: {\r\n    tier: 'Ascension',\r\n    price: 3000,\r\n    priceIncrease: 1000,\r\n    maxLevel: 12,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  calculator3: {\r\n    tier: 'Ascension',\r\n    price: 10000,\r\n    priceIncrease: 2000,\r\n    maxLevel: 10,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  calculator4: {\r\n    tier: 'Singularity',\r\n    price: 1e7,\r\n    priceIncrease: 1e6,\r\n    maxLevel: 10,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  calculator5: {\r\n    tier: 'SingularityVol2',\r\n    price: 1e8,\r\n    priceIncrease: 1e8,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  calculator6: {\r\n    tier: 'SingularityVol3',\r\n    price: 1e11,\r\n    priceIncrease: 2e10,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  constantEX: {\r\n    tier: 'Ascension',\r\n    price: 100000,\r\n    priceIncrease: 899999,\r\n    maxLevel: 2,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  powderEX: {\r\n    tier: 'Ascension',\r\n    price: 1000,\r\n    priceIncrease: 750,\r\n    maxLevel: 50,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  chronometer2: {\r\n    tier: 'Ascension',\r\n    price: 5000,\r\n    priceIncrease: 1500,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  chronometer3: {\r\n    tier: 'Singularity',\r\n    price: 250,\r\n    priceIncrease: 250,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPassY: {\r\n    tier: 'Ascension',\r\n    price: 10000,\r\n    priceIncrease: 1500,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPassZ: {\r\n    tier: 'Singularity',\r\n    price: 250,\r\n    priceIncrease: 250,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  challengeTome2: {\r\n    tier: 'Singularity',\r\n    price: 1000000,\r\n    priceIncrease: 1000000,\r\n    maxLevel: 5,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  instantChallenge2: {\r\n    tier: 'Singularity',\r\n    price: 20000000,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  cubeToQuarkAll: {\r\n    tier: 'SingularityVol2',\r\n    price: 2222222,\r\n    priceIncrease: 0,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  cashGrab2: {\r\n    tier: 'SingularityVol2',\r\n    price: 5000,\r\n    priceIncrease: 5000,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  chronometerZ: {\r\n    tier: 'SingularityVol2',\r\n    price: 12500,\r\n    priceIncrease: 12500,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  offeringEX2: {\r\n    tier: 'SingularityVol2',\r\n    price: 10000,\r\n    priceIncrease: 10000,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  obtainiumEX2: {\r\n    tier: 'SingularityVol2',\r\n    price: 10000,\r\n    priceIncrease: 10000,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  powderAuto: {\r\n    tier: 'SingularityVol2',\r\n    price: 5e6,\r\n    priceIncrease: 0,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPassLost: {\r\n    tier: 'SingularityVol2',\r\n    price: 1000000,\r\n    priceIncrease: 25000,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  challenge15Auto: {\r\n    tier: 'SingularityVol3',\r\n    price: 5e11,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  extraWarp: {\r\n    tier: 'SingularityVol3',\r\n    price: 1.25e11,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  autoWarp: {\r\n    tier: 'SingularityVol3',\r\n    price: 5e11,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  improveQuarkHept: {\r\n    tier: 'Ascension',\r\n    price: 2e5 - 1,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  improveQuarkHept2: {\r\n    tier: 'Singularity',\r\n    price: 2e7 - 1,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  improveQuarkHept3: {\r\n    tier: 'SingularityVol2',\r\n    price: 2e9 - 1,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  improveQuarkHept4: {\r\n    tier: 'SingularityVol3',\r\n    price: 2e11 - 1,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopImprovedDaily: {\r\n    tier: 'Ascension',\r\n    price: 5000,\r\n    priceIncrease: 2500,\r\n    maxLevel: 20,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopImprovedDaily2: {\r\n    tier: 'Singularity',\r\n    price: 500000,\r\n    priceIncrease: 500000,\r\n    maxLevel: 10,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopImprovedDaily3: {\r\n    tier: 'SingularityVol2',\r\n    price: 5000000,\r\n    priceIncrease: 12500000,\r\n    maxLevel: 15,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopImprovedDaily4: {\r\n    tier: 'SingularityVol3',\r\n    price: 5e9,\r\n    priceIncrease: 5e9,\r\n    maxLevel: 25,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  offeringEX3: {\r\n    tier: 'SingularityVol3',\r\n    price: 1,\r\n    priceIncrease: 1.25e12,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  obtainiumEX3: {\r\n    tier: 'SingularityVol3',\r\n    price: 1,\r\n    priceIncrease: 1.25e12,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  improveQuarkHept5: {\r\n    tier: 'SingularityVol4',\r\n    price: 1,\r\n    priceIncrease: 2.5e13,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  chronometerInfinity: {\r\n    tier: 'SingularityVol4',\r\n    price: 1,\r\n    priceIncrease: 2.5e12,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPassInfinity: {\r\n    tier: 'SingularityVol4',\r\n    price: 1,\r\n    priceIncrease: 3.75e12,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopSingularityPenaltyDebuff: {\r\n    tier: 'Exalt',\r\n    price: 1e17,\r\n    priceIncrease: 9.99e19,\r\n    maxLevel: 4,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopAmbrosiaGeneration1: {\r\n    tier: 'SingularityVol2',\r\n    price: 50000000,\r\n    priceIncrease: 50000000,\r\n    maxLevel: 20,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopAmbrosiaGeneration2: {\r\n    tier: 'SingularityVol3',\r\n    price: 5e11,\r\n    priceIncrease: 5e11,\r\n    maxLevel: 20,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopAmbrosiaGeneration3: {\r\n    tier: 'SingularityVol4',\r\n    price: 5e13,\r\n    priceIncrease: 5e13,\r\n    maxLevel: 30,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopAmbrosiaGeneration4: {\r\n    tier: 'SingularityVol4',\r\n    price: 1e17,\r\n    priceIncrease: 4 * 1e16,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopAmbrosiaLuck1: {\r\n    tier: 'SingularityVol2',\r\n    price: 20000000,\r\n    priceIncrease: 20000000,\r\n    maxLevel: 40,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopAmbrosiaLuck2: {\r\n    tier: 'SingularityVol3',\r\n    price: 2e11,\r\n    priceIncrease: 2e11,\r\n    maxLevel: 50,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopAmbrosiaLuck3: {\r\n    tier: 'SingularityVol4',\r\n    price: 2e13,\r\n    priceIncrease: 2e13,\r\n    maxLevel: 60,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopAmbrosiaLuck4: {\r\n    tier: 'SingularityVol4',\r\n    price: 1e17,\r\n    priceIncrease: 4 * 1e16,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  }\r\n}\r\n\r\n//Names of shop upgrades || Top row indicates potions, and all other upgrades are labeled in order.\r\n//If you are adding more upgrades please make sure the order of labelled upgrades is correct!\r\ntype ShopUpgradeNames = 'offeringPotion' | 'obtainiumPotion' |\r\n                        'offeringEX' | 'offeringAuto' | 'offeringEX2' | 'obtainiumEX' | 'obtainiumAuto' | 'obtainiumEX2' | 'instantChallenge' | 'instantChallenge2' |\r\n                        'antSpeed' | 'cashGrab' | 'cashGrab2' | 'shopTalisman' | 'seasonPass' | 'challengeExtension' | 'challengeTome' | 'challengeTome2' |\r\n                        'cubeToQuark' | 'tesseractToQuark' | 'cubeToQuarkAll' | 'hypercubeToQuark' | 'seasonPass2' | 'seasonPass3' | 'seasonPassY' | 'seasonPassZ' |\r\n                        'seasonPassLost' | 'chronometer' | 'chronometer2'| 'chronometer3'| 'chronometerZ' | 'infiniteAscent' | 'calculator' | 'calculator2' |\r\n                        'calculator3' | 'constantEX' | 'powderEX' | 'powderAuto' | 'challenge15Auto' | 'extraWarp' | 'autoWarp' | //And Golden Quarks\r\n                        'improveQuarkHept' | 'improveQuarkHept2' | 'improveQuarkHept3' | 'improveQuarkHept4' | 'shopImprovedDaily' |\r\n                        'shopImprovedDaily2' | 'shopImprovedDaily3' | 'shopImprovedDaily4' | 'calculator4' | 'calculator5' | 'calculator6' |\r\n                        'offeringEX3' | 'obtainiumEX3' | 'improveQuarkHept5' | 'seasonPassInfinity' | 'chronometerInfinity' | 'shopSingularityPenaltyDebuff' |\r\n                        'shopAmbrosiaGeneration1' | 'shopAmbrosiaGeneration2' | 'shopAmbrosiaGeneration3' | 'shopAmbrosiaGeneration4' |\r\n                        'shopAmbrosiaLuck1' | 'shopAmbrosiaLuck2' | 'shopAmbrosiaLuck3' | 'shopAmbrosiaLuck4'\r\n\r\nexport const getShopCosts = (input: ShopUpgradeNames) => {\r\n\r\n  if (shopData[input].type === shopUpgradeTypes.CONSUMABLE || shopData[input].maxLevel === 1) {\r\n    return shopData[input].price\r\n  } else {\r\n    const priceIncreaseMult = player.shopUpgrades[input]\r\n    return shopData[input].price + shopData[input].priceIncrease * priceIncreaseMult\r\n  }\r\n}\r\n\r\nexport const shopDescriptions = (input: ShopUpgradeNames) => {\r\n  const rofl = DOMCacheGetOrSet('quarkdescription')!\r\n  const lol = DOMCacheGetOrSet('quarkeffect')!\r\n  const refundable = DOMCacheGetOrSet('quarkRefundable')!\r\n\r\n  rofl.innerHTML = i18next.t(`shop.upgradeDescriptions.${input}`)\r\n\r\n  shopData[input].refundable ? // TODO(@KhafraDev): i18n\r\n    refundable.textContent = `This item is refundable! Will be set to level ${shopData[input].refundMinimumLevel} when refunded.`:\r\n    refundable.textContent = i18next.t('shop.cannotRefund')\r\n\r\n  switch (input) {\r\n    case 'offeringPotion':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.offeringPotion', { amount: format((7200 * player.offeringpersecond * calculateTimeAcceleration().mult * +player.singularityUpgrades.potionBuff.getEffect().bonus), 0, true) })\r\n      break\r\n    case 'obtainiumPotion':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumPotion', { amount: format((7200 * player.maxobtainiumpersecond * calculateTimeAcceleration().mult * +player.singularityUpgrades.potionBuff.getEffect().bonus), 0, true) })\r\n      break\r\n    case 'offeringEX':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.offeringEX', { amount: format(4 * player.shopUpgrades.offeringEX, 2, true) })\r\n      break\r\n    case 'offeringAuto':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.offeringAuto', { amount1: format(Math.pow(2, player.shopUpgrades.offeringAuto)), amount2: format(2 * player.shopUpgrades.offeringAuto, 2) })\r\n      break\r\n    case 'obtainiumEX':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumEX', { amount: format(4 * player.shopUpgrades.obtainiumEX, 2, true) })\r\n      break\r\n    case 'obtainiumAuto':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumAuto', { amount: format(player.shopUpgrades.obtainiumAuto * 2, 2) })\r\n      break\r\n    case 'instantChallenge':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.instantChallenge')\r\n      break\r\n    case 'antSpeed':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.antSpeed', { amount: format(Math.pow(1.2, player.shopUpgrades.antSpeed), 2) })\r\n      break\r\n    case 'cashGrab':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.cashGrab', { amount: format(player.shopUpgrades.cashGrab, 2) })\r\n      break\r\n    case 'shopTalisman':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopTalisman')\r\n      break\r\n    case 'seasonPass':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPass', { amount: format(2.25 * player.shopUpgrades.seasonPass) })\r\n      break\r\n    case 'challengeExtension':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.challengeExtension', { amount: format(2*player.shopUpgrades.challengeExtension) })\r\n      break\r\n    case 'challengeTome':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.challengeTome', { amount1: format(20*player.shopUpgrades.challengeTome), amount2: format(1 - (player.shopUpgrades.challengeTome + player.shopUpgrades.challengeTome2) / 100, 2, true) })\r\n      break\r\n    case 'cubeToQuark':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.cubeToQuark')\r\n      break\r\n    case 'tesseractToQuark':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.tesseractToQuark')\r\n      break\r\n    case 'hypercubeToQuark':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.hypercubeToQuark')\r\n      break\r\n    case 'seasonPass2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPass2', { amount: format(1.5 * player.shopUpgrades.seasonPass2) })\r\n      break\r\n    case 'seasonPass3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPass3', { amount: format(1.5 * player.shopUpgrades.seasonPass3) })\r\n      break\r\n    case 'chronometer':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.chronometer', { amount: format(1.2 * player.shopUpgrades.chronometer) })\r\n      break\r\n    case 'infiniteAscent':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.infiniteAscent')\r\n      break\r\n    case 'calculator':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator', { amount1: format(14 * player.shopUpgrades.calculator), bool1: player.shopUpgrades.calculator > 0, bool2: player.shopUpgrades.calculator === shopData.calculator.maxLevel })\r\n      break\r\n    case 'calculator2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator2', { amount1: format(2 * player.shopUpgrades.calculator2), amount2: format((player.shopUpgrades.calculator2 === shopData.calculator2.maxLevel) ? 25: 0) })\r\n      break\r\n    case 'calculator3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator3', { amount1: format(10 * player.shopUpgrades.calculator3), amount2: format(60 * player.shopUpgrades.calculator3) })\r\n      break\r\n    case 'calculator4':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator4', { amount1: format(2 * player.shopUpgrades.calculator4), amount2: player.shopUpgrades.calculator4 == 10 ? 32 : 0 })\r\n      break\r\n    case 'calculator5':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator5', { amount1: format(6 * player.shopUpgrades.calculator5), amount2: Math.floor(player.shopUpgrades.calculator5 / 10) + (player.shopUpgrades.calculator4 === shopData.calculator5.maxLevel ? 6 : 0) })\r\n      break\r\n    case 'calculator6':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator6', { amount1: format(player.shopUpgrades.calculator6), amount2: player.shopUpgrades.calculator6 === shopData.calculator6.maxLevel ? 24 : 0 })\r\n      break\r\n    case 'constantEX':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.constantEX', { amount: format(player.shopUpgrades.constantEX, 0, true) })\r\n      break\r\n    case 'powderEX':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.powderEX', { amount: format(2 * player.shopUpgrades.powderEX) })\r\n      break\r\n    case 'chronometer2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.chronometer2', { amount: format(0.6 * player.shopUpgrades.chronometer2, 1) })\r\n      break\r\n    case 'chronometer3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.chronometer3', { amount: format(1.5 * player.shopUpgrades.chronometer3, 1) })\r\n      break\r\n    case 'seasonPassY':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassY', { amount: format(0.75 * player.shopUpgrades.seasonPassY, 2) })\r\n      break\r\n    case 'seasonPassZ':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassZ', { amount: format(1 * player.shopUpgrades.seasonPassZ * player.singularityCount, 0, true) })\r\n      break\r\n    case 'challengeTome2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.challengeTome2', { amount1: 20 * player.shopUpgrades.challengeTome2, amount2: format(1 - (player.shopUpgrades.challengeTome + player.shopUpgrades.challengeTome2) / 100, 2, true) })\r\n      break\r\n    case 'instantChallenge2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.instantChallenge2', { amount: format(player.shopUpgrades.instantChallenge2 * player.singularityCount, 0) })\r\n      break\r\n    case 'cashGrab2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.cashGrab2', { amount: format(0.5 * player.shopUpgrades.cashGrab2, 1) })\r\n      break\r\n    case 'cubeToQuarkAll':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.cubeToQuarkAll', { amount: format(0.2 * player.shopUpgrades.cubeToQuarkAll, 2) })\r\n      break\r\n    case 'chronometerZ':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.chronometerZ', { amount: format(0.1 * player.singularityCount * player.shopUpgrades.chronometerZ, 2) })\r\n      break\r\n    case 'offeringEX2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.offeringEX2', { amount: format(1 * player.singularityCount * player.shopUpgrades.offeringEX2, 2) })\r\n      break\r\n    case 'obtainiumEX2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumEX2', { amount: format(1 * player.singularityCount * player.shopUpgrades.obtainiumEX2, 2) })\r\n      break\r\n    case 'powderAuto':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.powderAuto', { amount: format(100 / (Math.max(1, player.shopUpgrades.powderAuto) * calculatePowderConversion().mult), 2, true) })\r\n      break\r\n    case 'seasonPassLost':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassLost', { amount: format(0.1 * player.shopUpgrades.seasonPassLost, 2) })\r\n      break\r\n    case 'challenge15Auto':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.challenge15Auto')\r\n      break\r\n    case 'extraWarp':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.extraWarp', { amount: player.shopUpgrades.extraWarp })\r\n      break\r\n    case 'autoWarp':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.autoWarp')\r\n      break\r\n    case 'improveQuarkHept':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept', { amount: 2 * player.shopUpgrades.improveQuarkHept })\r\n      break\r\n    case 'improveQuarkHept2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept2', { amount: 2 * player.shopUpgrades.improveQuarkHept2 })\r\n      break\r\n    case 'improveQuarkHept3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept3', { amount: 2 * player.shopUpgrades.improveQuarkHept3 })\r\n      break\r\n    case 'improveQuarkHept4':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept4', { amount: 2 * player.shopUpgrades.improveQuarkHept4 })\r\n      break\r\n    case 'shopImprovedDaily':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily', { amount: format(5 * player.shopUpgrades.shopImprovedDaily) })\r\n      break\r\n    case 'shopImprovedDaily2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily2', { amount1: player.shopUpgrades.shopImprovedDaily2, amount2: player.shopUpgrades.shopImprovedDaily2 * 20 })\r\n      break\r\n    case 'shopImprovedDaily3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily3', { amount1: player.shopUpgrades.shopImprovedDaily3, amount2: player.shopUpgrades.shopImprovedDaily3 * 15 })\r\n      break\r\n    case 'shopImprovedDaily4':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily4', { amount1: player.shopUpgrades.shopImprovedDaily4, amount2: player.shopUpgrades.shopImprovedDaily4 * 100 })\r\n      break\r\n    case 'offeringEX3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.offeringEX3', { amount: format(100 * (Math.pow(1.02, player.shopUpgrades.offeringEX3) - 1), 2, true) })\r\n      break\r\n    case 'obtainiumEX3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumEX3', { amount: format(100 * (Math.pow(1.02, player.shopUpgrades.obtainiumEX3) - 1), 2, true) })\r\n      break\r\n    case 'improveQuarkHept5':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept5', { amount: format(player.shopUpgrades.improveQuarkHept5 / 25, 2, true) })\r\n      break\r\n    case 'seasonPassInfinity':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassInfinity', { amount: format(100 * (Math.pow(1.02, player.shopUpgrades.seasonPassInfinity) - 1), 2, true) })\r\n      break\r\n    case 'chronometerInfinity':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.chronometerInfinity', { amount: format(100 * (Math.pow(1.01, player.shopUpgrades.chronometerInfinity) - 1), 2, true) })\r\n      break\r\n    case 'shopSingularityPenaltyDebuff':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopSingularityPenaltyDebuff', { amount1: format(player.singularityCount), amount2: format(player.singularityCount - player.shopUpgrades.shopSingularityPenaltyDebuff) })\r\n      break\r\n    case 'shopAmbrosiaGeneration1':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopAmbrosiaGeneration1', { amount: format(player.shopUpgrades.shopAmbrosiaGeneration1) })\r\n      break\r\n    case 'shopAmbrosiaGeneration2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopAmbrosiaGeneration2', { amount: format(player.shopUpgrades.shopAmbrosiaGeneration2) })\r\n      break\r\n    case 'shopAmbrosiaGeneration3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopAmbrosiaGeneration3', { amount: format(player.shopUpgrades.shopAmbrosiaGeneration3) })\r\n      break\r\n    case 'shopAmbrosiaGeneration4':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopAmbrosiaGeneration4', { amount: format(player.shopUpgrades.shopAmbrosiaGeneration4 / 10, 1, true) })\r\n      break\r\n    case 'shopAmbrosiaLuck1':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopAmbrosiaLuck1', { amount: format(player.shopUpgrades.shopAmbrosiaLuck1) })\r\n      break\r\n    case 'shopAmbrosiaLuck2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopAmbrosiaLuck2', { amount: format(player.shopUpgrades.shopAmbrosiaLuck2) })\r\n      break\r\n    case 'shopAmbrosiaLuck3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopAmbrosiaLuck3', { amount: format(player.shopUpgrades.shopAmbrosiaLuck3) })\r\n      break\r\n    case 'shopAmbrosiaLuck4':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopAmbrosiaLuck4', { amount: format(3 * player.shopUpgrades.shopAmbrosiaLuck4 / 10, 1, true) })\r\n      break\r\n  }\r\n\r\n}\r\n\r\n//strentax 07/21 Add function to convert code-name display to end-user friendly display of shop upgrades\r\nexport const friendlyShopName = (input: ShopUpgradeNames) => {\r\n  // TODO(i18n): add these under shop.names\r\n  const names: Record<ShopUpgradeNames, string> = {\r\n    offeringPotion: 'Offering Potion',\r\n    obtainiumPotion: 'Obtainium Potion',\r\n    offeringEX: 'Offering EX',\r\n    offeringAuto: 'Offering Auto',\r\n    obtainiumEX: 'Obtainium EX',\r\n    obtainiumAuto: 'Obtainium Auto',\r\n    instantChallenge: 'Instant Challenge Completions',\r\n    antSpeed: 'Ant Speed',\r\n    cashGrab: 'Cash Grab',\r\n    shopTalisman: 'the Plastic talisman',\r\n    seasonPass: 'Season Pass',\r\n    challengeExtension: 'Reincarnation Challenge EX',\r\n    challengeTome: 'Challenge 10 Requirement Reduce',\r\n    cubeToQuark: 'Cube Quarks +50%',\r\n    tesseractToQuark: 'Tesseract Quarks +50%',\r\n    hypercubeToQuark: 'Hypercube Quarks +50%',\r\n    seasonPass2: 'Season Pass 2',\r\n    seasonPass3: 'Season Pass 3',\r\n    chronometer: 'Chronometer 1',\r\n    infiniteAscent: 'Infinite Ascent',\r\n    calculator: 'PL-AT calculator',\r\n    calculator2: 'PL-AT X calculator',\r\n    calculator3: 'PL-AT \u03A9 calculator',\r\n    calculator4: 'PL-AT \u03B4 calculator',\r\n    calculator5: 'PL-AT \u0393 calculator',\r\n    calculator6: 'QUAAA-T calculator',\r\n    constantEX: 'Constant EX',\r\n    powderEX: 'Powder EX',\r\n    chronometer2: 'Chronometer 2',\r\n    chronometer3: 'Chronometer 3',\r\n    seasonPassY: 'Season Pass Y',\r\n    seasonPassZ: 'Season Pass Z',\r\n    challengeTome2: 'Challenge 10 Requirement Reduction 2',\r\n    instantChallenge2: 'Instant Challenge Completions 2',\r\n    cubeToQuarkAll: 'Quark Gain Cube Improvement 2',\r\n    cashGrab2: 'Cash Grab 2',\r\n    chronometerZ: 'Chronometer Z',\r\n    obtainiumEX2: 'Obtainium EX 2',\r\n    offeringEX2: 'Offering EX 2',\r\n    powderAuto: 'Automated Powder',\r\n    seasonPassLost: 'Season Pass LOST',\r\n    challenge15Auto: 'Challenge 15 Automation',\r\n    extraWarp: 'Extra Warp',\r\n    autoWarp: 'a quack powered Warps?',\r\n    improveQuarkHept: 'Quark Hepteract 1',\r\n    improveQuarkHept2: 'Quark Hepteract 2',\r\n    improveQuarkHept3: 'Quark Hepteract 3',\r\n    improveQuarkHept4: 'Quack Hepteract 4',\r\n    shopImprovedDaily: 'Improved Daily Code 1',\r\n    shopImprovedDaily2: 'Improved Daily Code 2',\r\n    shopImprovedDaily3: 'Improved Daily Code 3',\r\n    shopImprovedDaily4: 'Improved Daily Code 4',\r\n    offeringEX3: 'The final Offering Upgrade',\r\n    obtainiumEX3: 'The final Obtainium Upgrade',\r\n    improveQuarkHept5: 'The final Quark Hepteract Improver',\r\n    chronometerInfinity: 'The final Chronometer',\r\n    seasonPassInfinity: 'The final Season pass',\r\n    shopSingularityPenaltyDebuff: 'A Singularity Tenderizer',\r\n    shopAmbrosiaGeneration1: 'Ambrosia Generation Speedup',\r\n    shopAmbrosiaGeneration2: 'Another Ambrosia Generation Speedup',\r\n    shopAmbrosiaGeneration3: 'A better Ambrosia Generation Speedup',\r\n    shopAmbrosiaGeneration4: 'A FINAL Ambrosia Generation Speedup',\r\n    shopAmbrosiaLuck1: 'Ambrosia Luck Increaser',\r\n    shopAmbrosiaLuck2: 'Another Ambrosia Luck Increaser',\r\n    shopAmbrosiaLuck3: 'A better Ambrosia Generation Speedup',\r\n    shopAmbrosiaLuck4: 'A FINAL Ambrosia Generation Speedup'\r\n  }\r\n\r\n  return names[input]\r\n\r\n}\r\n\r\nexport const buyShopUpgrades = async (input: ShopUpgradeNames) => {\r\n  const shopItem = shopData[input]\r\n\r\n  if (player.shopUpgrades[input] >= shopItem.maxLevel) {\r\n    return player.shopConfirmationToggle\r\n      ? Alert(`You can't purchase ${friendlyShopName(input)} because you are already at the maximum ${shopItem.type === shopUpgradeTypes.UPGRADE ? 'level' : 'capacity'}!`)\r\n      : null\r\n  } else if (Number(player.worlds) < getShopCosts(input)) {\r\n    return player.shopConfirmationToggle\r\n      ? Alert(`You can't purchase ${friendlyShopName(input)} because you don't have enough Quarks!`)\r\n      : null\r\n  }\r\n\r\n  // Actually lock for HTML exploit\r\n  if (!isShopUpgradeUnlocked(input)) {\r\n    return Alert(`You do not have the right to purchase ${friendlyShopName(input)}!`)\r\n  }\r\n\r\n  let buyData:IMultiBuy\r\n  const maxBuyAmount = shopItem.maxLevel - player.shopUpgrades[input]\r\n  let buyAmount\r\n  let buyCost\r\n  switch (player.shopBuyMaxToggle) {\r\n    case false:\r\n      buyAmount = 1\r\n      buyCost = getShopCosts(input)\r\n      break\r\n    case 'TEN':\r\n      buyData = calculateSummationNonLinear(player.shopUpgrades[input], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, Math.min(10, maxBuyAmount))\r\n      buyAmount = buyData.levelCanBuy - player.shopUpgrades[input]\r\n      buyCost = buyData.cost\r\n      break\r\n    default:\r\n      buyData = calculateSummationNonLinear(player.shopUpgrades[input], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, maxBuyAmount)\r\n      buyAmount = buyData.levelCanBuy - player.shopUpgrades[input]\r\n      buyCost = buyData.cost\r\n  }\r\n\r\n  const singular = shopItem.maxLevel === 1\r\n  const merch = buyAmount.toLocaleString() + (shopItem.type === shopUpgradeTypes.UPGRADE ? ' level' : ' vial') + (buyAmount === 1 ? '' : 's')\r\n  const noRefunds = shopItem.refundable ? '' : '\\n\\n\\u26A0\\uFE0F !! No Refunds !! \\u26A0\\uFE0F'\r\n  const maxPots = shopItem.type === shopUpgradeTypes.CONSUMABLE ? '\\n\\nType -1 in Buy: ANY to buy equal amounts of both Potions.' : ''\r\n\r\n  if (player.shopBuyMaxToggle === 'ANY' && !singular) {\r\n    const buyInput = await Prompt(`You can afford to purchase up to ${merch} of ${friendlyShopName(input)} for ${buyCost.toLocaleString()} Quarks. How many would you like to buy?${maxPots + noRefunds}`)\r\n    let buyAny\r\n    if (Number(buyInput) === -1 && shopItem.type === shopUpgradeTypes.CONSUMABLE) {\r\n      const other = input === 'offeringPotion' ? 'obtainiumPotion' : 'offeringPotion'\r\n      const toSpend = Math.max(+player.worlds / 2, +player.worlds - buyCost)\r\n      const otherPot:IMultiBuy = calculateSummationNonLinear(player.shopUpgrades[other], shopData[other].price, toSpend, shopData[other].priceIncrease / shopData[other].price, shopData[other].maxLevel-player.shopUpgrades[other])\r\n      player.worlds.sub(otherPot.cost)\r\n      player.shopUpgrades[other] = otherPot.levelCanBuy\r\n      buyAny = buyAmount\r\n    } else {\r\n      buyAny = Math.floor(Number(buyInput))\r\n      if (buyAny === 0) {\r\n        return\r\n      } else if (Number.isNaN(buyAny) || !Number.isFinite(buyAny) || buyAny < 0) {\r\n        return Alert('Amount must be a finite, positive integer.')\r\n      }\r\n    }\r\n    const anyData:IMultiBuy = calculateSummationNonLinear(player.shopUpgrades[input], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, Math.min(buyAny, buyAmount))\r\n    player.worlds.sub(anyData.cost)\r\n    player.shopUpgrades[input] = anyData.levelCanBuy\r\n    revealStuff()\r\n    player.caches.ambrosiaGeneration.updateVal('ShopUpgrades')\r\n    player.caches.ambrosiaLuck.updateVal('ShopUpgrades')\r\n    return\r\n  }\r\n\r\n  let p = true\r\n  if (player.shopConfirmationToggle || (!shopItem.refundable && player.shopBuyMaxToggle !== false)) {\r\n    p = await Confirm(`You are about to ${singular ? 'unlock' : `purchase ${merch} of`} ${friendlyShopName(input)} for ${buyCost.toLocaleString()} Quarks. Press 'OK' to finalize purchase.${maxPots + noRefunds}`)\r\n  }\r\n  if (p) {\r\n    player.worlds.sub(buyCost)\r\n    player.shopUpgrades[input] += buyAmount\r\n    player.caches.ambrosiaGeneration.updateVal('ShopUpgrades')\r\n    player.caches.ambrosiaLuck.updateVal('ShopUpgrades')\r\n    revealStuff()\r\n  }\r\n}\r\n\r\nexport const autoBuyConsumable = (input: ShopUpgradeNames) => {\r\n  const maxBuyablePotions = Math.floor(Math.min(Number(player.worlds) / 100, Math.min(shopData[input].maxLevel - player.shopUpgrades[input], Math.pow(player.highestSingularityCount, 2) * 100)))\r\n\r\n  if (shopData[input].maxLevel <= player.shopUpgrades[input]) {\r\n    return\r\n  }\r\n  if (maxBuyablePotions <= 0) {\r\n    return\r\n  }\r\n\r\n  player.worlds.sub(100 * maxBuyablePotions)\r\n  player.shopUpgrades[input] += maxBuyablePotions\r\n}\r\n\r\nexport const useConsumable = async (input: ShopUpgradeNames, automatic = false, used = 1, spend = true) => {\r\n\r\n  const p = (player.shopConfirmationToggle && !automatic)\r\n    ? await Confirm('Would you like to use some of this potion?')\r\n    : true\r\n\r\n  if (p) {\r\n    const multiplier = +player.singularityUpgrades.potionBuff.getEffect().bonus *\r\n                           +player.singularityUpgrades.potionBuff2.getEffect().bonus *\r\n                           +player.singularityUpgrades.potionBuff3.getEffect().bonus *\r\n                           +player.octeractUpgrades.octeractAutoPotionEfficiency.getEffect().bonus *\r\n                           used\r\n\r\n    if (input === 'offeringPotion') {\r\n      if (player.shopUpgrades.offeringPotion >= used || !spend) {\r\n        player.shopUpgrades.offeringPotion -= (spend ? used: 0)\r\n        player.runeshards += Math.floor(7200 * player.offeringpersecond * calculateTimeAcceleration().mult * multiplier)\r\n        player.runeshards = Math.min(1e300, player.runeshards)\r\n      }\r\n    } else if (input === 'obtainiumPotion') {\r\n      if (player.shopUpgrades.obtainiumPotion >= used || !spend) {\r\n        player.shopUpgrades.obtainiumPotion -= (spend? used: 0)\r\n        player.researchPoints += Math.floor(7200 * player.maxobtainiumpersecond * calculateTimeAcceleration().mult * multiplier)\r\n        player.researchPoints = Math.min(1e300, player.researchPoints)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const resetShopUpgrades = async (ignoreBoolean = false) => {\r\n  let p = false\r\n  if (!ignoreBoolean) {\r\n    p = player.shopConfirmationToggle\r\n      ? await Confirm('This will fully refund most of your permanent upgrades for an upfront cost of 15 Quarks. Would you like to do this?')\r\n      : true\r\n  }\r\n\r\n  if (p || ignoreBoolean) {\r\n    const singularityQuarks = player.quarksThisSingularity\r\n    let refunds = false\r\n    for (const shopItem in shopData) {\r\n      const key = shopItem as keyof typeof shopData\r\n      const item = shopData[key]\r\n      if (item.refundable && player.shopUpgrades[key] > item.refundMinimumLevel) {\r\n        refunds = true\r\n        // Determines how many quarks one would not be refunded, based on minimum refund level\r\n        const doNotRefund = item.price * item.refundMinimumLevel +\r\n                                item.priceIncrease * (item.refundMinimumLevel) * (item.refundMinimumLevel - 1) / 2\r\n\r\n        //Refunds Quarks based on the shop level and price vals\r\n        player.worlds.add(\r\n          item.price * player.shopUpgrades[key] +\r\n                    item.priceIncrease * (player.shopUpgrades[key]) * (player.shopUpgrades[key] - 1) / 2\r\n                    - doNotRefund,\r\n          false\r\n        )\r\n\r\n        player.shopUpgrades[key] = item.refundMinimumLevel\r\n      }\r\n    }\r\n    if (refunds) {\r\n      player.worlds.sub(15)\r\n    } else if (!ignoreBoolean && player.shopConfirmationToggle) {\r\n      void Alert('Nothing to Refund!')\r\n    }\r\n    player.quarksThisSingularity = singularityQuarks\r\n  }\r\n}\r\n\r\nexport const getQuarkInvestment = (upgrade: ShopUpgradeNames) => {\r\n  if (!(upgrade in shopData) || !(upgrade in player.shopUpgrades)) {\r\n    return 0\r\n  }\r\n\r\n  const val = shopData[upgrade].price * player.shopUpgrades[upgrade] +\r\n                shopData[upgrade].priceIncrease * (player.shopUpgrades[upgrade] - 1) * (player.shopUpgrades[upgrade]) / 2\r\n\r\n  return val\r\n}\r\n\r\nexport const isShopUpgradeUnlocked = (upgrade: ShopUpgradeNames):boolean => {\r\n  switch (upgrade) {\r\n    case 'offeringPotion':\r\n      return true\r\n    case 'obtainiumPotion':\r\n      return true\r\n    case 'offeringEX':\r\n      return player.reincarnationCount > 0 || player.highestSingularityCount > 0\r\n    case 'offeringAuto':\r\n      return player.reincarnationCount > 0 || player.highestSingularityCount > 0\r\n    case 'obtainiumEX':\r\n      return player.reincarnationCount > 0 || player.highestSingularityCount > 0\r\n    case 'obtainiumAuto':\r\n      return player.reincarnationCount > 0 || player.highestSingularityCount > 0\r\n    case 'instantChallenge':\r\n      return player.reincarnationCount > 0 || player.highestSingularityCount > 0\r\n    case 'antSpeed':\r\n      return player.highestchallengecompletions[8] > 0 || player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'cashGrab':\r\n      return player.highestchallengecompletions[8] > 0 || player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'shopTalisman':\r\n      return player.highestchallengecompletions[9] > 0 || player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'seasonPass':\r\n      return player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'challengeExtension':\r\n      return player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'challengeTome':\r\n      return player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'cubeToQuark':\r\n      return player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'tesseractToQuark':\r\n      return player.highestchallengecompletions[11] > 0 || player.highestSingularityCount > 0\r\n    case 'hypercubeToQuark':\r\n      return player.highestchallengecompletions[13] > 0 || player.highestSingularityCount > 0\r\n    case 'seasonPass2':\r\n      return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\r\n    case 'seasonPass3':\r\n      return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\r\n    case 'chronometer':\r\n      return player.highestchallengecompletions[12] > 0 || player.highestSingularityCount > 0\r\n    case 'infiniteAscent':\r\n      return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\r\n    case 'calculator':\r\n      return player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'calculator2':\r\n      return player.highestchallengecompletions[11] > 0 || player.highestSingularityCount > 0\r\n    case 'calculator3':\r\n      return player.highestchallengecompletions[13] > 0 || player.highestSingularityCount > 0\r\n    case 'calculator4':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'calculator5':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'calculator6':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'constantEX':\r\n      return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\r\n    case 'powderEX':\r\n      return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\r\n    case 'chronometer2':\r\n      return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\r\n    case 'chronometer3':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'seasonPassY':\r\n      return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\r\n    case 'seasonPassZ':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'challengeTome2':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'instantChallenge2':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'cashGrab2':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'cubeToQuarkAll':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'chronometerZ':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'offeringEX2':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'obtainiumEX2':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'powderAuto':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'seasonPassLost':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'challenge15Auto':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'extraWarp':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'autoWarp':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'improveQuarkHept':\r\n      return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\r\n    case 'improveQuarkHept2':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'improveQuarkHept3':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'improveQuarkHept4':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'shopImprovedDaily':\r\n      return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\r\n    case 'shopImprovedDaily2':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'shopImprovedDaily3':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'shopImprovedDaily4':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'offeringEX3':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'obtainiumEX3':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'improveQuarkHept5':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'chronometerInfinity':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'seasonPassInfinity':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'shopSingularityPenaltyDebuff':\r\n      return Boolean(player.singularityChallenges.noSingularityUpgrades.rewards.shopUpgrade)\r\n    case 'shopAmbrosiaGeneration1':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'shopAmbrosiaGeneration2':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'shopAmbrosiaGeneration3':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'shopAmbrosiaGeneration4':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'shopAmbrosiaLuck1':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'shopAmbrosiaLuck2':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'shopAmbrosiaLuck3':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'shopAmbrosiaLuck4':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n  }\r\n}\r\n", "import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { IClearRequest, ISetNotification, IWorkerEvent, TTimerType } from 'worker-timers-worker';\nimport { isCallNotification } from './guards/call-notification';\nimport { isClearResponse } from './guards/clear-response';\n\nexport const load = (url: string) => {\n    // Prefilling the Maps with a function indexed by zero is necessary to be compliant with the specification.\n    const scheduledIntervalFunctions: Map<number, number | Function> = new Map([[0, () => {}]]); // tslint:disable-line no-empty\n    const scheduledTimeoutFunctions: Map<number, number | Function> = new Map([[0, () => {}]]); // tslint:disable-line no-empty\n    const unrespondedRequests: Map<number, { timerId: number; timerType: TTimerType }> = new Map();\n\n    const worker = new Worker(url);\n\n    worker.addEventListener('message', ({ data }: IWorkerEvent) => {\n        if (isCallNotification(data)) {\n            const {\n                params: { timerId, timerType }\n            } = data;\n\n            if (timerType === 'interval') {\n                const idOrFunc = scheduledIntervalFunctions.get(timerId);\n\n                if (typeof idOrFunc === 'number') {\n                    const timerIdAndTimerType = unrespondedRequests.get(idOrFunc);\n\n                    if (\n                        timerIdAndTimerType === undefined ||\n                        timerIdAndTimerType.timerId !== timerId ||\n                        timerIdAndTimerType.timerType !== timerType\n                    ) {\n                        throw new Error('The timer is in an undefined state.');\n                    }\n                } else if (typeof idOrFunc !== 'undefined') {\n                    idOrFunc();\n                } else {\n                    throw new Error('The timer is in an undefined state.');\n                }\n            } else if (timerType === 'timeout') {\n                const idOrFunc = scheduledTimeoutFunctions.get(timerId);\n\n                if (typeof idOrFunc === 'number') {\n                    const timerIdAndTimerType = unrespondedRequests.get(idOrFunc);\n\n                    if (\n                        timerIdAndTimerType === undefined ||\n                        timerIdAndTimerType.timerId !== timerId ||\n                        timerIdAndTimerType.timerType !== timerType\n                    ) {\n                        throw new Error('The timer is in an undefined state.');\n                    }\n                } else if (typeof idOrFunc !== 'undefined') {\n                    idOrFunc();\n\n                    // A timeout can be savely deleted because it is only called once.\n                    scheduledTimeoutFunctions.delete(timerId);\n                } else {\n                    throw new Error('The timer is in an undefined state.');\n                }\n            }\n        } else if (isClearResponse(data)) {\n            const { id } = data;\n\n            const timerIdAndTimerType = unrespondedRequests.get(id);\n\n            if (timerIdAndTimerType === undefined) {\n                throw new Error('The timer is in an undefined state.');\n            }\n\n            const { timerId, timerType } = timerIdAndTimerType;\n\n            unrespondedRequests.delete(id);\n\n            if (timerType === 'interval') {\n                scheduledIntervalFunctions.delete(timerId);\n            } else {\n                scheduledTimeoutFunctions.delete(timerId);\n            }\n        } else {\n            const {\n                error: { message }\n            } = data;\n\n            throw new Error(message);\n        }\n    });\n\n    const clearInterval = (timerId: number) => {\n        const id = generateUniqueNumber(unrespondedRequests);\n\n        unrespondedRequests.set(id, { timerId, timerType: 'interval' });\n        scheduledIntervalFunctions.set(timerId, id);\n\n        worker.postMessage(<IClearRequest>{\n            id,\n            method: 'clear',\n            params: { timerId, timerType: 'interval' }\n        });\n    };\n\n    const clearTimeout = (timerId: number) => {\n        const id = generateUniqueNumber(unrespondedRequests);\n\n        unrespondedRequests.set(id, { timerId, timerType: 'timeout' });\n        scheduledTimeoutFunctions.set(timerId, id);\n\n        worker.postMessage(<IClearRequest>{\n            id,\n            method: 'clear',\n            params: { timerId, timerType: 'timeout' }\n        });\n    };\n\n    const setInterval = (func: Function, delay: number) => {\n        const timerId = generateUniqueNumber(scheduledIntervalFunctions);\n\n        scheduledIntervalFunctions.set(timerId, () => {\n            func();\n\n            // Doublecheck if the interval should still be rescheduled because it could have been cleared inside of func().\n            if (typeof scheduledIntervalFunctions.get(timerId) === 'function') {\n                worker.postMessage(<ISetNotification>{\n                    id: null,\n                    method: 'set',\n                    params: {\n                        delay,\n                        now: performance.now(),\n                        timerId,\n                        timerType: 'interval'\n                    }\n                });\n            }\n        });\n\n        worker.postMessage(<ISetNotification>{\n            id: null,\n            method: 'set',\n            params: {\n                delay,\n                now: performance.now(),\n                timerId,\n                timerType: 'interval'\n            }\n        });\n\n        return timerId;\n    };\n\n    const setTimeout = (func: Function, delay: number) => {\n        const timerId = generateUniqueNumber(scheduledTimeoutFunctions);\n\n        scheduledTimeoutFunctions.set(timerId, func);\n\n        worker.postMessage(<ISetNotification>{\n            id: null,\n            method: 'set',\n            params: {\n                delay,\n                now: performance.now(),\n                timerId,\n                timerType: 'timeout'\n            }\n        });\n\n        return timerId;\n    };\n\n    return {\n        clearInterval,\n        clearTimeout,\n        setInterval,\n        setTimeout\n    };\n};\n", "import { ICallNotification, TWorkerMessage } from 'worker-timers-worker';\n\nexport const isCallNotification = (message: TWorkerMessage): message is ICallNotification => {\n    return (<ICallNotification>message).method !== undefined && (<ICallNotification>message).method === 'call';\n};\n", "import { IClearResponse, TWorkerMessage } from 'worker-timers-worker';\n\nexport const isClearResponse = (message: TWorkerMessage): message is IClearResponse => {\n    return (<IClearResponse>message).error === null && typeof message.id === 'number';\n};\n", "import { TLoadWorkerTimersFactory, TWorkerTimers } from '../types';\n\nlet workerTimers: null | TWorkerTimers = null;\n\nexport const createLoadWorkerTimers: TLoadWorkerTimersFactory = (load, worker) => {\n    return () => {\n        if (workerTimers !== null) {\n            return workerTimers;\n        }\n\n        const blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\n        const url = URL.createObjectURL(blob);\n\n        workerTimers = load(url);\n\n        // Bug #1: Edge doesn't like the URL to be revoked directly.\n        workerTimers.setTimeout(() => URL.revokeObjectURL(url), 0);\n\n        return workerTimers;\n    };\n};\n", "// This is the minified and stringified code of the worker-timers-worker package.\nexport const worker = `(()=>{\"use strict\";const e=new Map,t=new Map,r=(e,t)=>{let r,o;const i=performance.now();r=i,o=e-Math.max(0,i-t);return{expected:r+o,remainingDelay:o}},o=(e,t,r,i)=>{const s=performance.now();s>r?postMessage({id:null,method:\"call\",params:{timerId:t,timerType:i}}):e.set(t,setTimeout(o,r-s,e,t,r,i))};addEventListener(\"message\",(i=>{let{data:s}=i;try{if(\"clear\"===s.method){const{id:r,params:{timerId:o,timerType:i}}=s;if(\"interval\"===i)(t=>{const r=e.get(t);if(void 0===r)throw new Error('There is no interval scheduled with the given id \"'.concat(t,'\".'));clearTimeout(r),e.delete(t)})(o),postMessage({error:null,id:r});else{if(\"timeout\"!==i)throw new Error('The given type \"'.concat(i,'\" is not supported'));(e=>{const r=t.get(e);if(void 0===r)throw new Error('There is no timeout scheduled with the given id \"'.concat(e,'\".'));clearTimeout(r),t.delete(e)})(o),postMessage({error:null,id:r})}}else{if(\"set\"!==s.method)throw new Error('The given method \"'.concat(s.method,'\" is not supported'));{const{params:{delay:i,now:n,timerId:a,timerType:d}}=s;if(\"interval\"===d)((t,i,s)=>{const{expected:n,remainingDelay:a}=r(t,s);e.set(i,setTimeout(o,a,e,i,n,\"interval\"))})(i,a,n);else{if(\"timeout\"!==d)throw new Error('The given type \"'.concat(d,'\" is not supported'));((e,i,s)=>{const{expected:n,remainingDelay:a}=r(e,s);t.set(i,setTimeout(o,a,t,i,n,\"timeout\"))})(i,a,n)}}}}catch(e){postMessage({error:{message:e.message},id:s.id,result:null})}}))})();`; // tslint:disable-line:max-line-length\n", "import { load } from 'worker-timers-broker';\nimport { createLoadWorkerTimers } from './factories/load-worker-timers';\nimport { worker } from './worker/worker';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './types/index';\n\nconst loadWorkerTimers = createLoadWorkerTimers(load, worker);\n\nimport { TWorkerTimers } from './types';\n\nexport const clearInterval: TWorkerTimers['clearInterval'] = (timerId) => loadWorkerTimers().clearInterval(timerId);\n\nexport const clearTimeout: TWorkerTimers['clearTimeout'] = (timerId) => loadWorkerTimers().clearTimeout(timerId);\n\nexport const setInterval: TWorkerTimers['setInterval'] = (func, delay) => loadWorkerTimers().setInterval(func, delay);\n\nexport const setTimeout: TWorkerTimers['setTimeout'] = (func, delay) => loadWorkerTimers().setTimeout(func, delay);\n", "import * as workerTimers from 'worker-timers'\r\n\r\ninterface ActiveTimer {\r\n\tid: number\r\n\ttype: 'interval' | 'timeout'\r\n}\r\n\r\nconst activeTimers: ActiveTimer[] = []\r\n\r\nexport const setInterval: typeof workerTimers['setInterval'] = (fn, delay) => {\r\n  const timer = workerTimers.setInterval(fn, delay)\r\n  activeTimers.push({ id: timer, type: 'interval' })\r\n  return timer\r\n}\r\n\r\nexport const clearInterval: typeof workerTimers['clearInterval'] = (timerId) => {\r\n  for (const timer of activeTimers) {\r\n    if (timer.type === 'interval' && timer.id === timerId) {\r\n      workerTimers.clearInterval(timerId)\r\n      activeTimers.splice(activeTimers.indexOf(timer), 1)\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport const setTimeout: typeof workerTimers['setTimeout'] = (fn, delay) => {\r\n  const timer = workerTimers.setTimeout(fn, delay)\r\n  activeTimers.push({ id: timer, type: 'timeout' })\r\n  return timer\r\n}\r\n\r\nexport const clearTimeout: typeof workerTimers['clearTimeout'] = (timerId) => {\r\n  for (const timer of activeTimers) {\r\n    if (timer.type === 'timeout' && timer.id === timerId) {\r\n      workerTimers.clearTimeout(timerId)\r\n      activeTimers.splice(activeTimers.indexOf(timer), 1)\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport const clearTimers = (): void => {\r\n  for (const { id, type } of activeTimers) {\r\n    if (type === 'interval') {\r\n      clearInterval(id)\r\n    } else {\r\n      clearTimeout(id)\r\n    }\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { calculateSigmoidExponential, calculateSigmoid, calculateAnts, calculateRuneLevels, calculateAntSacrificeELO, calculateAntSacrificeRewards } from './Calculate'\r\nimport { Globals as G } from './Variables'\r\n\r\nimport type { DecimalSource } from 'break_infinity.js'\r\nimport Decimal from 'break_infinity.js'\r\nimport { achievementaward } from './Achievements'\r\nimport { Confirm, revealStuff } from './UpdateHTML'\r\nimport { updateTalismanInventory } from './Talismans'\r\nimport { buyResearch } from './Research'\r\nimport { resetAnts } from './Reset'\r\nimport type { ResetHistoryEntryAntSacrifice } from './History'\r\nimport { Synergism } from './Events'\r\nimport type { FirstToEighth, ZeroToSeven } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { smallestInc } from './Utility'\r\nimport { setInterval, clearInterval } from './Timers'\r\nimport i18next from 'i18next'\r\n\r\nconst antspecies: Record<string, string> = {\r\n  antspecies1: 'Inceptus Formicidae',\r\n  antspecies2: 'Fortunae Formicidae',\r\n  antspecies3: 'Tributum Formicidae',\r\n  antspecies4: 'Celeritas Formicidae',\r\n  antspecies5: 'Multa Formicidae',\r\n  antspecies6: 'Sacrificium Formicidae',\r\n  antspecies7: 'Hic Formicidae',\r\n  antspecies8: 'Experientia Formicidae',\r\n  antspecies9: 'Praemoenio Formicidae',\r\n  antspecies10: 'Scientia Formicidae',\r\n  antspecies11: 'Phylacterium Formicidae',\r\n  antspecies12: 'Mortuus Est Formicidae'\r\n}\r\n\r\nexport const calculateCrumbToCoinExp = () => {\r\n  const exponent = player.currentChallenge.ascension !== 15\r\n    ? 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2-1]! + G.bonusant2) / 5000 * 500 / 499)\r\n    : 1/10000 * (100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2-1]! + G.bonusant2) / 5000 * 500 / 499))\r\n\r\n  return exponent\r\n}\r\n\r\nconst antUpgradeTexts = [\r\n  () => format(Decimal.pow(1.12 + 1 / 1000 * player.researches[101], player.antUpgrades[1-1]! + G.bonusant1), 2),\r\n  () => format(calculateCrumbToCoinExp()),\r\n  () => format(0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3-1]! + G.bonusant3), 4),\r\n  () => format(100 * (calculateSigmoidExponential(20, (player.antUpgrades[4-1]! + G.bonusant4) / 1000 * 20 / 19) - 1), 3),\r\n  () => format(100 * (calculateSigmoidExponential(40, (player.antUpgrades[5-1]! + G.bonusant5) / 1000 * 40 / 39) - 1), 3),\r\n  () => format(1 + Math.pow((player.antUpgrades[6-1]! + G.bonusant6), 0.66), 4),\r\n  () => format(Math.min(9999999, 3 * player.antUpgrades[7-1]! + 3 * G.bonusant7), 0, true),\r\n  () => format(calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8-1]! + G.bonusant8, 1.1)), 3),\r\n  () => format(1 * Math.min(1e7, (player.antUpgrades[9-1]! + G.bonusant9)), 0, true),\r\n  () => format(1 + 2 * Math.pow((player.antUpgrades[10-1]! + G.bonusant10) / 50, 0.75), 4),\r\n  () => format(1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11-1]! + G.bonusant11) / 125)), 4),\r\n  () => format(calculateSigmoid(2, player.antUpgrades[12-1]! + G.bonusant12, 69), 4)\r\n]\r\n\r\nlet repeatAnt: ReturnType<typeof setTimeout>\r\n\r\nexport const antRepeat = (i: number) => {\r\n  clearInterval(repeatAnt)\r\n  repeatAnt = setInterval(() => updateAntDescription(i), 50)\r\n}\r\n\r\nexport const updateAntDescription = (i: number) => {\r\n  if (G.currentTab !== 'ant') {\r\n    return\r\n  }\r\n  const el = DOMCacheGetOrSet('anttierdescription')\r\n  const la = DOMCacheGetOrSet('antprice')\r\n  const ti = DOMCacheGetOrSet('antquantity')\r\n  const me = DOMCacheGetOrSet('generateant')\r\n\r\n  let priceType = 'ants.costGalacticCrumbs'\r\n  let tier: FirstToEighth = 'first'\r\n  let x!: string\r\n  el.textContent = i18next.t(`ants.descriptions.${i}`)\r\n\r\n  switch (i) {\r\n    case 1:\r\n      priceType = 'ants.costParticles'\r\n      tier = 'first'\r\n      x = format(G.antOneProduce, 5)\r\n      break\r\n    case 2:\r\n      tier = 'second'\r\n      x = format(G.antTwoProduce, 5)\r\n      break\r\n    case 3:\r\n      tier = 'third'\r\n      x = format(G.antThreeProduce, 5)\r\n      break\r\n    case 4:\r\n      tier = 'fourth'\r\n      x = format(G.antFourProduce, 5)\r\n      break\r\n    case 5:\r\n      tier = 'fifth'\r\n      x = format(G.antFiveProduce, 5)\r\n      break\r\n    case 6:\r\n      tier = 'sixth'\r\n      x = format(G.antSixProduce, 5)\r\n      break\r\n    case 7:\r\n      tier = 'seventh'\r\n      x = format(G.antSevenProduce, 5)\r\n      break\r\n    case 8:\r\n      tier = 'eighth'\r\n      x = format(G.antEightProduce, 5)\r\n      break\r\n  }\r\n\r\n  me.textContent = i18next.t(`ants.generates.${i}`, { x })\r\n  la.textContent = i18next.t(priceType, { x: format(player[`${tier}CostAnts` as const]) })\r\n  ti.textContent = i18next.t('ants.owned', {\r\n    x: format(player[`${tier}OwnedAnts` as const]),\r\n    y: format(player[`${tier}GeneratedAnts` as const], 2)\r\n  })\r\n}\r\n\r\nconst getAntCost = (originalCost: Decimal, buyTo: number, index: number) => {\r\n  --buyTo\r\n\r\n  //Determine how much the cost is for buyTo\r\n  const cost = originalCost\r\n    .times(Decimal.pow(G.antCostGrowth[index-1], buyTo))\r\n    .add(1 * buyTo)\r\n\r\n  return cost\r\n}\r\n\r\nconst getAntUpgradeCost = (originalCost: Decimal, buyTo: number, index: number) => {\r\n  --buyTo\r\n\r\n  const cost = originalCost.times(Decimal.pow(G.antUpgradeCostIncreases[index-1], buyTo))\r\n  return cost\r\n}\r\n\r\n//Note to self: REWRITE THIS SHIT Kevin :3\r\nexport const buyAntProducers = (pos: FirstToEighth, originalCost: DecimalSource, index: number) => {\r\n  const sacrificeMult = antSacrificePointsToMultiplier(player.antSacrificePoints)\r\n  //This is a fucking cool function. This will buymax ants cus why not\r\n\r\n  //Things we need: the position of producers, the costvalues, and input var i\r\n  originalCost = new Decimal(originalCost)\r\n  //Initiate type of resource used\r\n  const tag = index === 1 ? 'reincarnationPoints' : 'antPoints'\r\n  const key = `${pos}OwnedAnts` as const\r\n\r\n  const buydefault = player[key] + smallestInc(player[key])\r\n  let buyTo = buydefault\r\n  let cashToBuy = getAntCost(originalCost, buyTo, index)\r\n  while (player[tag].gte(cashToBuy)) {\r\n    // Multiply by 4 until the desired amount. Iterate from there\r\n    buyTo = buyTo * 4\r\n    cashToBuy = getAntCost(originalCost, buyTo, index)\r\n  }\r\n  let stepdown = Math.floor(buyTo / 8)\r\n  while (stepdown >= smallestInc(buyTo)) {\r\n    if (getAntCost(originalCost, buyTo - stepdown, index).lte(player[tag])) {\r\n      stepdown = Math.floor(stepdown / 2)\r\n    } else {\r\n      buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown)\r\n    }\r\n  }\r\n\r\n  if (!player.antMax) {\r\n    if (buydefault < buyTo) {\r\n      buyTo = buydefault\r\n    }\r\n  }\r\n  // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\r\n  let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault)\r\n  let thisCost = getAntCost(originalCost, buyFrom, index)\r\n  while (buyFrom <= buyTo && player[tag].gte(thisCost)) {\r\n    player[tag] = player[tag].sub(thisCost)\r\n    player[key] = buyFrom\r\n    buyFrom = buyFrom + smallestInc(buyFrom)\r\n    thisCost = getAntCost(originalCost, buyFrom, index)\r\n    player[`${pos}CostAnts` as const] = thisCost\r\n  }\r\n  if (player.reincarnationPoints.lt(0)) {\r\n    player.reincarnationPoints = new Decimal('0')\r\n  }\r\n  if (player.antPoints.lt(0)) {\r\n    player.antPoints = new Decimal('0')\r\n  }\r\n  calculateAntSacrificeELO()\r\n\r\n  // Check if we award Achievement 176-182: Ant autobuy\r\n  const achRequirements = [2, 6, 20, 100, 500, 6666, 77777]\r\n  for (let j = 0; j < achRequirements.length; j++) {\r\n    if (player.achievements[176 + j] === 0 && sacrificeMult > achRequirements[j] && player[`${G.ordinals[j + 1 as ZeroToSeven]}OwnedAnts` as const] > 0) {\r\n      achievementaward(176 + j)\r\n    }\r\n  }\r\n\r\n  if (player.firstOwnedAnts > 6.9e7) {\r\n    player.firstOwnedAnts = 6.9e7\r\n  }\r\n}\r\n\r\nexport const buyAntUpgrade = (originalCost: DecimalSource, auto: boolean, index: number) => {\r\n  if (player.currentChallenge.ascension !== 11) {\r\n    originalCost = new Decimal(originalCost)\r\n    const buydefault = player.antUpgrades[index-1]! + smallestInc(player.antUpgrades[index-1]!)\r\n    let buyTo = buydefault\r\n    let cashToBuy = getAntUpgradeCost(originalCost, buyTo, index)\r\n    while (player.antPoints.gte(cashToBuy)) {\r\n      // Multiply by 4 until the desired amount. Iterate from there\r\n      buyTo = buyTo * 4\r\n      cashToBuy = getAntUpgradeCost(originalCost, buyTo, index)\r\n    }\r\n    let stepdown = Math.floor(buyTo / 8)\r\n    while (stepdown >= smallestInc(buyTo)) {\r\n      if (getAntUpgradeCost(originalCost, buyTo - stepdown, index).lte(player.antPoints)) {\r\n        stepdown = Math.floor(stepdown / 2)\r\n      } else {\r\n        buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown)\r\n      }\r\n    }\r\n    if (!player.antMax) {\r\n      if (buydefault < buyTo) {\r\n        buyTo = buydefault\r\n      }\r\n    }\r\n    // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\r\n    let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault)\r\n    let thisCost = getAntUpgradeCost(originalCost, buyFrom, index)\r\n    while (buyFrom <= buyTo && player.antPoints.gte(thisCost)) {\r\n      player.antPoints = player.antPoints.sub(thisCost)\r\n      player.antUpgrades[index-1] = buyFrom\r\n      buyFrom = buyFrom + smallestInc(buyFrom)\r\n      thisCost = getAntUpgradeCost(originalCost, buyFrom, index)\r\n    }\r\n    calculateAnts()\r\n    calculateRuneLevels()\r\n    calculateAntSacrificeELO()\r\n    if (!auto) {\r\n      antUpgradeDescription(index)\r\n    }\r\n    if (player.antUpgrades[12-1] === 1 && index === 12) {\r\n      revealStuff()\r\n    }\r\n  }\r\n}\r\n\r\nexport const antUpgradeDescription = (i: number) => {\r\n  const el = DOMCacheGetOrSet('antspecies')\r\n  const al = DOMCacheGetOrSet('antlevelbonus')\r\n  const la = DOMCacheGetOrSet('antupgradedescription')\r\n  const ti = DOMCacheGetOrSet('antupgradecost')\r\n  const me = DOMCacheGetOrSet('antupgradeeffect')\r\n\r\n  const content1 = antspecies[`antspecies${i}`]\r\n  const content2 = i18next.t(`ants.upgrades.${i}`)\r\n  const bonuslevel = G[`bonusant${i}` as keyof typeof G] as typeof G['bonusant1']\r\n\r\n  const c11 = player.currentChallenge.ascension === 11 ? 999 : 0\r\n\r\n  el.childNodes[0].textContent = content1 + ' Level ' + format(player.antUpgrades[i-1])\r\n  al.textContent = ' [+' + format(Math.min(player.antUpgrades[i-1]! + c11, bonuslevel)) + ']'\r\n  la.textContent = content2\r\n  ti.textContent = i18next.t('ants.costGalacticCrumbs', {\r\n    x: format(Decimal.pow(G.antUpgradeCostIncreases[i-1], player.antUpgrades[i-1]! * G.extinctionMultiplier[player.usedCorruptions[10]]).times(G.antUpgradeBaseCost[i-1]))\r\n  })\r\n  me.textContent = i18next.t(`ants.rewards.${i}`, {\r\n    x: antUpgradeTexts[i - 1]()\r\n  })\r\n}\r\n\r\nexport const antSacrificePointsToMultiplier = (points: number) => {\r\n  let multiplier = Math.pow(1 + points / 5000, 2)\r\n  multiplier *= (1 + 0.2 * Math.log(1 + points) / Math.log(10))\r\n  if (player.achievements[174] > 0) {\r\n    multiplier *= (1 + 0.4 * Math.log(1 + points) / Math.log(10))\r\n  }\r\n  return Math.min(1e300, multiplier)\r\n}\r\n\r\nexport const showSacrifice = () => {\r\n  const sacRewards = calculateAntSacrificeRewards()\r\n  DOMCacheGetOrSet('antSacrificeSummary').style.display = 'block'\r\n\r\n  DOMCacheGetOrSet('ELO').innerHTML = i18next.t('ants.yourAntELO', {\r\n    x: format(G.antELO, 2),\r\n    y: format(G.effectiveELO, 2, false)\r\n  })\r\n\r\n  DOMCacheGetOrSet('SacrificeMultiplier').innerHTML = i18next.t('ants.antSacMultiplier', {\r\n    y: format(antSacrificePointsToMultiplier(player.antSacrificePoints), 3, false),\r\n    x: format(antSacrificePointsToMultiplier(player.antSacrificePoints + sacRewards.antSacrificePoints), 3, false)\r\n  })\r\n\r\n  DOMCacheGetOrSet('SacrificeUpgradeMultiplier').innerHTML = i18next.t('ants.upgradeMultiplier', {\r\n    x: format(G.upgradeMultiplier, 3, true)\r\n  })\r\n\r\n  DOMCacheGetOrSet('SacrificeTimeMultiplier').innerHTML = i18next.t('ants.timeMultiplier', {\r\n    x: format(G.timeMultiplier, 3, true)\r\n  })\r\n\r\n  DOMCacheGetOrSet('antSacrificeOffering').textContent = '+' + format(sacRewards.offerings)\r\n  DOMCacheGetOrSet('antSacrificeObtainium').textContent = '+' + format(sacRewards.obtainium)\r\n  if (player.challengecompletions[9] > 0) {\r\n    DOMCacheGetOrSet('antSacrificeTalismanShard').textContent = i18next.t('ants.elo', { x: format(sacRewards.talismanShards), y: 500 })\r\n    DOMCacheGetOrSet('antSacrificeCommonFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.commonFragments), y: 750 })\r\n    DOMCacheGetOrSet('antSacrificeUncommonFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.uncommonFragments), y: 1000 })\r\n    DOMCacheGetOrSet('antSacrificeRareFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.rareFragments), y: 1500 })\r\n    DOMCacheGetOrSet('antSacrificeEpicFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.epicFragments), y: 2000 })\r\n    DOMCacheGetOrSet('antSacrificeLegendaryFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.legendaryFragments), y: 3000 })\r\n    DOMCacheGetOrSet('antSacrificeMythicalFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.mythicalFragments), y: 5000 })\r\n  }\r\n}\r\n\r\nexport const sacrificeAnts = async (auto = false) => {\r\n  let p = true\r\n\r\n  if (player.antPoints.gte('1e40')) {\r\n    if (!auto && player.toggles[32]) {\r\n      p = await Confirm(i18next.t('ants.autoReset'))\r\n    }\r\n    if (p) {\r\n      const antSacrificePointsBefore = player.antSacrificePoints\r\n\r\n      const sacRewards = calculateAntSacrificeRewards()\r\n      player.antSacrificePoints += sacRewards.antSacrificePoints\r\n      player.runeshards += sacRewards.offerings\r\n\r\n      if (player.currentChallenge.ascension !== 14) {\r\n        player.researchPoints += sacRewards.obtainium\r\n      }\r\n\r\n      const historyEntry: ResetHistoryEntryAntSacrifice = {\r\n        date: Date.now(),\r\n        seconds: player.antSacrificeTimer,\r\n        kind: 'antsacrifice',\r\n        offerings: sacRewards.offerings,\r\n        obtainium: sacRewards.obtainium,\r\n        antSacrificePointsBefore,\r\n        antSacrificePointsAfter: player.antSacrificePoints,\r\n        baseELO: G.antELO,\r\n        effectiveELO: G.effectiveELO,\r\n        crumbs: player.antPoints.toString(),\r\n        crumbsPerSecond: G.antOneProduce.toString()\r\n      }\r\n\r\n      if (player.challengecompletions[9] > 0) {\r\n        player.talismanShards = Math.min(1e300, player.talismanShards + sacRewards.talismanShards)\r\n        player.commonFragments = Math.min(1e300, player.commonFragments + sacRewards.commonFragments)\r\n        player.uncommonFragments = Math.min(1e300, player.uncommonFragments + sacRewards.uncommonFragments)\r\n        player.rareFragments = Math.min(1e300, player.rareFragments + sacRewards.rareFragments)\r\n        player.epicFragments = Math.min(1e300, player.epicFragments + sacRewards.epicFragments)\r\n        player.legendaryFragments = Math.min(1e300, player.legendaryFragments + sacRewards.legendaryFragments)\r\n        player.mythicalFragments = Math.min(1e300, player.mythicalFragments + sacRewards.mythicalFragments)\r\n      }\r\n\r\n      // Now we're safe to reset the ants.\r\n      resetAnts()\r\n      player.antSacrificeTimer = 0\r\n      player.antSacrificeTimerReal = 0\r\n      updateTalismanInventory()\r\n      if (player.autoResearch > 0 && player.autoResearchToggle) {\r\n        const linGrowth = (player.autoResearch === 200) ? 0.01 : 0\r\n        buyResearch(player.autoResearch, true, linGrowth)\r\n      }\r\n      calculateAntSacrificeELO()\r\n\r\n      Synergism.emit('historyAdd', 'ants', historyEntry)\r\n    }\r\n  }\r\n\r\n  if (player.mythicalFragments >= 1e11 && player.currentChallenge.ascension === 14 && player.achievements[248] < 1) {\r\n    achievementaward(248)\r\n  }\r\n}\r\n\r\nexport const autoBuyAnts = () => {\r\n  const canAffordUpgrade = (x: number, m: DecimalSource) => player.antPoints.gte(getAntUpgradeCost(new Decimal(G.antUpgradeBaseCost[x-1]), player.antUpgrades[x-1]! + 1, x).times(m))\r\n  const ach = [176, 176, 177, 178, 178, 179, 180, 180, 181, 182, 182, 145]\r\n  const cost = ['100', '100', '1000', '1000', '1e5', '1e6', '1e8', '1e11', '1e15', '1e20', '1e40', '1e100']\r\n  if (player.currentChallenge.ascension !== 11) {\r\n    for (let i = 1; i <= ach.length; i++) {\r\n      const check = i === 12 ? player.researches[ach[i - 1]] : player.achievements[ach[i - 1]]\r\n      if (check && canAffordUpgrade(i, 2)) {\r\n        buyAntUpgrade(cost[i - 1], true, i)\r\n      }\r\n    }\r\n  }\r\n\r\n  const _ach = [173, 176, 177, 178, 179, 180, 181, 182]\r\n  const _cost = ['1e700', '3', '100', '10000', '1e12', '1e36', '1e100', '1e300']\r\n  for (let i = 1; i <= _ach.length; i++) {\r\n    const res = i === 1 ? player.reincarnationPoints : player.antPoints\r\n    const m = i === 1 ? 1 : 2 // no multiplier on the first ant cost because it costs particles\r\n    if (player.achievements[_ach[i - 1]] && res.gte(player[`${G.ordinals[i - 1 as ZeroToSeven]}CostAnts` as const].times(m))) {\r\n      buyAntProducers(\r\n                G.ordinals[i - 1] as Parameters<typeof buyAntProducers>[0],\r\n                _cost[i - 1], i\r\n      )\r\n    }\r\n  }\r\n}\r\n", "import Decimal from 'break_infinity.js'\r\nimport { calculateCubeMultFromPowder, calculateCubeQuarkMultiplier, calculatePowderConversion, calculateQuarkMultFromPowder, forcedDailyReset } from './Calculate'\r\nimport { Cube } from './CubeExperimental'\r\nimport { format, player } from './Synergism'\r\nimport type { Player } from './types/Synergism'\r\nimport { Alert, Confirm, Prompt } from './UpdateHTML'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { calculateSingularityDebuff } from './singularity'\r\nimport type { StringMap } from 'i18next'\r\nimport i18next from 'i18next'\r\n\r\nexport interface IHepteractCraft {\r\n    BASE_CAP: number\r\n    HEPTERACT_CONVERSION: number\r\n    OTHER_CONVERSIONS: Record<string, number>\r\n    HTML_STRING: string\r\n    AUTO?: boolean\r\n    UNLOCKED?: boolean\r\n    BAL?: number\r\n    CAP?: number\r\n    DISCOUNT?: number\r\n}\r\n\r\nexport const hepteractTypeList = ['chronos', 'hyperrealism', 'quark', 'challenge',\r\n  'abyss', 'accelerator', 'acceleratorBoost', 'multiplier'] as const\r\n\r\nexport type hepteractTypes = typeof hepteractTypeList[number]\r\n\r\nexport class HepteractCraft {\r\n  /**\r\n     * Craft is unlocked or not (Default is locked)\r\n     */\r\n  UNLOCKED = false\r\n\r\n  /**\r\n     * Current Inventory (amount) of craft you possess\r\n     */\r\n  BAL = 0\r\n\r\n  /**\r\n     * Maximum Inventory (amount) of craft you can hold\r\n     * base_cap is the smallest capacity for such item.\r\n     */\r\n  CAP = 0\r\n  BASE_CAP = 0\r\n\r\n  /**\r\n     * Conversion rate of hepteract to synthesized items\r\n     */\r\n  HEPTERACT_CONVERSION = 0\r\n\r\n  /**\r\n     * Automatic crafting toggle. If on, allows crafting to be done automatically upon ascension.\r\n     */\r\n  AUTO = false\r\n\r\n  /**\r\n     * Conversion rate of additional items\r\n     * This is in the form of keys being player variables,\r\n     * values being the amount player has.\r\n     */\r\n  OTHER_CONVERSIONS: {\r\n        [key in keyof Player]?: number\r\n    }\r\n\r\n  /**\r\n     * Discount Factor (number from [0, 1))\r\n     */\r\n  DISCOUNT = 0\r\n\r\n  /**\r\n     * String Prefix used for HTML DOM manipulation\r\n     */\r\n  HTML_STRING: string\r\n\r\n  constructor(data: IHepteractCraft) {\r\n    this.BASE_CAP = data.BASE_CAP\r\n    this.HEPTERACT_CONVERSION = data.HEPTERACT_CONVERSION\r\n    this.OTHER_CONVERSIONS = data.OTHER_CONVERSIONS\r\n    this.HTML_STRING = data.HTML_STRING\r\n    this.UNLOCKED = data.UNLOCKED ?? false //This would basically always be true if this parameter is provided\r\n    this.BAL = data.BAL ?? 0\r\n    this.CAP = data.CAP ?? this.BASE_CAP // This sets cap either as previous value or keeps it to default.\r\n    this.DISCOUNT = data.DISCOUNT ?? 0\r\n    this.AUTO = data.AUTO ?? false\r\n\r\n    void this.toggleAutomatic(this.AUTO)\r\n  }\r\n\r\n  // Unlock a synthesizer craft\r\n  unlock = (hepteractName: string): this | Promise<void> => {\r\n    if (this.UNLOCKED) {\r\n      return this\r\n    }\r\n    this.UNLOCKED = true\r\n    if (player.highestSingularityCount < 5) {\r\n      return Alert(i18next.t('hepteracts.unlockedCraft', { x: hepteractName }))\r\n    } else {\r\n      return this\r\n    }\r\n  }\r\n\r\n  computeActualCap = (): number => {\r\n    let multiplier = 1\r\n    multiplier *= (player.singularityChallenges.limitedAscensions.rewards.hepteractCap) ? 2: 1\r\n\r\n    return this.CAP * multiplier\r\n  }\r\n\r\n  // Add to balance through crafting.\r\n  craft = async (max = false): Promise<HepteractCraft | void> => {\r\n    let craftAmount = null\r\n    const heptCap = this.computeActualCap()\r\n    const craftCostMulti = calculateSingularityDebuff('Hepteract Costs')\r\n    // If craft is unlocked, we return object\r\n    if (!this.UNLOCKED) {\r\n      return Alert(i18next.t('hepteracts.notUnlocked'))\r\n    }\r\n\r\n    if (heptCap - this.BAL <= 0) {\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.reachedCapacity', { x: format(heptCap, 0, true) }))\r\n      }\r\n    }\r\n\r\n    if (isNaN(player.wowAbyssals) || !isFinite(player.wowAbyssals) || player.wowAbyssals < 0) {\r\n      player.wowAbyssals = 0\r\n    }\r\n\r\n    // Calculate the largest craft amount possible, with an upper limit being craftAmount\r\n    const hepteractLimit = Math.floor((player.wowAbyssals / (this.HEPTERACT_CONVERSION * craftCostMulti)) * 1 / (1 - this.DISCOUNT))\r\n\r\n    // Create an array of how many we can craft using our conversion limits for additional items\r\n    const itemLimits: number[] = []\r\n    for (const item in this.OTHER_CONVERSIONS) {\r\n      // The type of player[item] is number | Decimal | Cube.\r\n      if (item === 'worlds') {\r\n        itemLimits.push(Math.floor((player[item as keyof Player] as number) / (this.OTHER_CONVERSIONS[item as keyof Player]!)) * 1 / (1 - this.DISCOUNT))\r\n      } else {\r\n        itemLimits.push(Math.floor((player[item as keyof Player] as number) / (craftCostMulti * this.OTHER_CONVERSIONS[item as keyof Player]!)) * 1 / (1 - this.DISCOUNT))\r\n      }\r\n    }\r\n\r\n    // Get the smallest of the array we created\r\n    const smallestItemLimit = Math.min(...itemLimits)\r\n\r\n    let amountToCraft = Math.min(smallestItemLimit, hepteractLimit, heptCap, heptCap - this.BAL)\r\n\r\n    // Return if the material is not a calculable number\r\n    if (isNaN(amountToCraft) || !isFinite(amountToCraft)) {\r\n      return Alert(i18next.t('hepteracts.executionFailed'))\r\n    }\r\n\r\n    //Prompt used here. Thank you Khafra for the already made code! -Platonic\r\n    if (!max) {\r\n      const craftingPrompt = await Prompt(i18next.t('hepteracts.craft', {\r\n        x: format(amountToCraft, 0, true),\r\n        y: Math.floor(amountToCraft / heptCap * 10000) / 100\r\n      }))\r\n\r\n      if (craftingPrompt === null) { // Number(null) is 0. Yeah..\r\n        if (player.toggles[35]) {\r\n          return Alert(i18next.t('hepteracts.cancelled'))\r\n        } else {\r\n          return //If no return, then it will just give another message\r\n        }\r\n      }\r\n      craftAmount = Number(craftingPrompt)\r\n    } else {\r\n      craftAmount = heptCap\r\n    }\r\n\r\n    //Check these lol\r\n    if (isNaN(craftAmount) || !isFinite(craftAmount) || !Number.isInteger(craftAmount)) { // nan + Infinity checks\r\n      return Alert(i18next.t('general.validation.finite'))\r\n    } else if (craftAmount <= 0) { // 0 or less selected\r\n      return Alert(i18next.t('general.validation.zeroOrLess'))\r\n    }\r\n\r\n    // Get the smallest of hepteract limit, limit found above and specified input\r\n    amountToCraft = Math.min(smallestItemLimit, hepteractLimit, craftAmount, heptCap - this.BAL)\r\n\r\n    if (max && player.toggles[35]) {\r\n      const craftYesPlz = await Confirm(i18next.t('hepteracts.craftMax', {\r\n        x: format(amountToCraft, 0, true),\r\n        y: Math.floor(amountToCraft / heptCap * 10000) / 100\r\n      }))\r\n\r\n      if (!craftYesPlz) {\r\n        return Alert(i18next.t('hepteracts.cancelled'))\r\n      }\r\n    }\r\n\r\n    this.BAL = Math.min(heptCap, this.BAL + amountToCraft)\r\n\r\n    // Subtract spent items from player\r\n    player.wowAbyssals -= amountToCraft * this.HEPTERACT_CONVERSION * craftCostMulti\r\n\r\n    if (player.wowAbyssals < 0) {\r\n      player.wowAbyssals = 0\r\n    }\r\n\r\n    for (const item in this.OTHER_CONVERSIONS) {\r\n      if (typeof player[item as keyof Player] === 'number') {\r\n        (player[item as keyof Player] as number) -= amountToCraft * craftCostMulti * this.OTHER_CONVERSIONS[item as keyof Player]!\r\n      }\r\n\r\n      if ((player[item as keyof Player] as number) < 0) {\r\n        (player[item as keyof Player] as number) = 0\r\n      } else if (player[item as keyof Player] instanceof Cube) {\r\n        (player[item as keyof Player] as Cube).sub(amountToCraft * craftCostMulti * this.OTHER_CONVERSIONS[item as keyof Player]!)\r\n      } else if (item == 'worlds') {\r\n        player.worlds.sub(amountToCraft * this.OTHER_CONVERSIONS[item]!)\r\n      }\r\n    }\r\n\r\n    if (player.toggles[35]) {\r\n      if (!max) {\r\n        return Alert(i18next.t('hepteracts.craftedHepteracts', { x: format(amountToCraft, 0, true) }))\r\n      }\r\n\r\n      return Alert(i18next.t('hepteracts.craftedHepteractsMax', { x: format(amountToCraft, 0, true) }))\r\n    }\r\n  }\r\n\r\n  // Reduce balance through spending\r\n  spend(amount: number): this {\r\n    if (!this.UNLOCKED) {\r\n      return this\r\n    }\r\n\r\n    this.BAL -= amount\r\n    return this\r\n  }\r\n\r\n  // Expand your capacity\r\n  /**\r\n     * Expansion can only happen if your current balance is full.\r\n     */\r\n  expand = async(): Promise<HepteractCraft | void> => {\r\n    const expandMultiplier = 2\r\n    const currentBalance = this.BAL\r\n    const heptCap = this.computeActualCap()\r\n    const currHeptCapNoMulti = this.CAP\r\n\r\n    if (!this.UNLOCKED) {\r\n      return Alert(i18next.t('hepteracts.notUnlocked'))\r\n    }\r\n\r\n    // Below capacity\r\n    if (this.BAL < this.CAP) {\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.notEnough'))\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n\r\n    const expandPrompt = await Confirm(i18next.t('hepteracts.expandPrompt', {\r\n      x: format(this.CAP),\r\n      y: format(heptCap),\r\n      z: format(heptCap * expandMultiplier),\r\n      a: format(expandMultiplier, 2, true)\r\n    }))\r\n\r\n    if (!expandPrompt) {\r\n      return this\r\n    }\r\n\r\n    // Avoid a double-expand exploit due to player waiting to confirm until after autocraft fires and expands\r\n    if (this.BAL !== currentBalance || this.CAP !== currHeptCapNoMulti) {\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.doubleSpent'))\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n\r\n    // Empties inventory in exchange for doubling maximum capacity.\r\n    this.BAL -= this.CAP\r\n    this.BAL = Math.max(0, this.BAL)\r\n\r\n    this.CAP = Math.min(1e300, this.CAP * expandMultiplier)\r\n\r\n    if (player.toggles[35]) {\r\n      return Alert(i18next.t('hepteracts.expandedInventory', {\r\n        x: format(heptCap * expandMultiplier, 0, true)\r\n      }))\r\n    }\r\n  }\r\n\r\n  // Add some percentage points to your discount\r\n  /**\r\n     * Discount has boundaries [0, 1), and upper limit\r\n     *  is defined by (1 - EPSILON). Craft amount is multiplied by 1 / (1 - Discount)\r\n     */\r\n  addDiscount(amount: number): this {\r\n    // If amount would put Discount to 1 or higher set to upper limit\r\n    if (this.DISCOUNT + amount > (1 - Number.EPSILON)) {\r\n      this.DISCOUNT = 1 - Number.EPSILON\r\n      return this\r\n    }\r\n\r\n    this.DISCOUNT += amount\r\n    return this\r\n  }\r\n\r\n  toggleAutomatic(newValue?: boolean): Promise<void> | this {\r\n    const HTML = DOMCacheGetOrSet(`${this.HTML_STRING}HepteractAuto`)\r\n\r\n    // When newValue is empty, current value is toggled\r\n    this.AUTO = newValue ?? !this.AUTO\r\n\r\n    HTML.textContent = this.AUTO ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\r\n    HTML.style.border = `2px solid ${this.AUTO ? 'green' : 'red'}`\r\n\r\n    return this\r\n  }\r\n\r\n  autoCraft(heptAmount: number): this {\r\n    const expandMultiplier = 2\r\n    const craftCostMulti = calculateSingularityDebuff('Hepteract Costs')\r\n    let heptCap = this.computeActualCap()\r\n\r\n    // Calculate the largest craft amount possible, with an upper limit being craftAmount\r\n    const hepteractLimitCraft = Math.floor((heptAmount / (craftCostMulti * this.HEPTERACT_CONVERSION)) * 1 / (1 - this.DISCOUNT))\r\n\r\n    // Create an array of how many we can craft using our conversion limits for additional items\r\n    const itemLimits: number[] = []\r\n    for (const item in this.OTHER_CONVERSIONS) {\r\n      // When Auto is turned on, only Quarks and hepteracts are consumed.\r\n      if (item == 'worlds') {\r\n        itemLimits.push(Math.floor((player[item as keyof Player] as number) / this.OTHER_CONVERSIONS[item as keyof Player]!) * 1 / (1 - this.DISCOUNT))\r\n      }\r\n    }\r\n\r\n    // Get the smallest of the array we created [If Empty, this will be infinite]\r\n    const smallestItemLimit = Math.min(...itemLimits)\r\n\r\n    let amountToCraft = Math.min(smallestItemLimit, hepteractLimitCraft)\r\n    let amountCrafted = 0\r\n\r\n    let craft = Math.min(heptCap - this.BAL, amountToCraft) // Always nonzero\r\n    this.BAL += craft\r\n    amountCrafted += craft\r\n    amountToCraft -= craft\r\n\r\n    while (this.BAL >= heptCap && amountToCraft >= this.CAP) {\r\n      this.BAL -= this.CAP\r\n      this.CAP *= expandMultiplier\r\n      heptCap *= expandMultiplier\r\n      craft = Math.min(heptCap - this.BAL, amountToCraft)\r\n\r\n      this.BAL += craft\r\n      amountCrafted += craft\r\n      amountToCraft -= craft\r\n    }\r\n\r\n    for (const item in this.OTHER_CONVERSIONS) {\r\n      if (item == 'worlds') {\r\n        player.worlds.sub(amountCrafted * this.OTHER_CONVERSIONS[item]!)\r\n      }\r\n    }\r\n\r\n    player.wowAbyssals -= amountCrafted * craftCostMulti * this.HEPTERACT_CONVERSION\r\n    if (player.wowAbyssals < 0) {\r\n      player.wowAbyssals = 0\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Get balance of item\r\n  get amount() {\r\n    return this.BAL\r\n  }\r\n  get capacity() {\r\n    return this.CAP\r\n  }\r\n  get discount() {\r\n    return this.DISCOUNT\r\n  }\r\n\r\n}\r\n\r\nconst hepteractEffectiveValues = {\r\n  'chronos': {\r\n    LIMIT: 1000,\r\n    DR: 1/6\r\n  },\r\n  'hyperrealism': {\r\n    LIMIT: 1000,\r\n    DR: 0.33\r\n  },\r\n  'quark': {\r\n    LIMIT: 1000,\r\n    DR: 0.5\r\n  },\r\n  'challenge': {\r\n    LIMIT: 1000,\r\n    DR: 1/6\r\n  },\r\n  'abyss': {\r\n    LIMIT: 1,\r\n    DR: 0\r\n  },\r\n  'accelerator': {\r\n    LIMIT: 1000,\r\n    DR: 0.2\r\n  },\r\n  'acceleratorBoost': {\r\n    LIMIT: 1000,\r\n    DR: 0.2\r\n  },\r\n  'multiplier': {\r\n    LIMIT: 1000,\r\n    DR: 0.2\r\n  }\r\n}\r\n\r\nexport const createHepteract = (data: IHepteractCraft) => {\r\n  return new HepteractCraft(data)\r\n}\r\n\r\nexport const hepteractEffective = (data: hepteractTypes) => {\r\n  let effectiveValue = Math.min(player.hepteractCrafts[data].BAL, hepteractEffectiveValues[data].LIMIT)\r\n  let exponentBoost = 0\r\n  if (data === 'chronos') {\r\n    exponentBoost += 1/750 * player.platonicUpgrades[19]\r\n  }\r\n  if (data === 'quark') {\r\n    exponentBoost += +player.singularityUpgrades.singQuarkHepteract.getEffect().bonus\r\n    exponentBoost += +player.singularityUpgrades.singQuarkHepteract2.getEffect().bonus\r\n    exponentBoost += +player.singularityUpgrades.singQuarkHepteract3.getEffect().bonus\r\n    exponentBoost += +player.octeractUpgrades.octeractImprovedQuarkHept.getEffect().bonus\r\n    exponentBoost += player.shopUpgrades.improveQuarkHept / 100\r\n    exponentBoost += player.shopUpgrades.improveQuarkHept2 / 100\r\n    exponentBoost += player.shopUpgrades.improveQuarkHept3 / 100\r\n    exponentBoost += player.shopUpgrades.improveQuarkHept4 / 100\r\n    exponentBoost += player.shopUpgrades.improveQuarkHept5 / 5000\r\n\r\n    const amount = player.hepteractCrafts[data].BAL\r\n    if (1000 < amount && amount <= 1000 * Math.pow(2, 10)) {\r\n      return effectiveValue * Math.pow(amount / 1000, 1/2 + exponentBoost)\r\n    } else if (1000 * Math.pow(2, 10) < amount && amount <= 1000 * Math.pow(2, 18)) {\r\n      return effectiveValue * Math.pow(Math.pow(2, 10), 1/2 + exponentBoost) *\r\n                    Math.pow(amount / (1000 * Math.pow(2, 10)), 1/4 + exponentBoost / 2)\r\n    } else if (1000 * Math.pow(2, 18) < amount && amount <= 1000 * Math.pow(2, 44)) {\r\n      return effectiveValue * Math.pow(Math.pow(2, 10), 1/2 + exponentBoost) *\r\n                    Math.pow(Math.pow(2, 8), 1/4 + exponentBoost / 2) *\r\n                    Math.pow(amount / (1000 * Math.pow(2, 18)), 1/6 + exponentBoost / 3)\r\n    } else if (1000 * Math.pow(2, 44) < amount) {\r\n      return effectiveValue * Math.pow(Math.pow(2, 10), 1/2 + exponentBoost) *\r\n                    Math.pow(Math.pow(2, 8), 1/4 + exponentBoost / 2) *\r\n                    Math.pow(Math.pow(2, 26), 1/6 + exponentBoost / 3) *\r\n                    Math.pow(amount / (1000 * Math.pow(2, 44)), 1/12 + exponentBoost / 6)\r\n    }\r\n  }\r\n  if (player.hepteractCrafts[data].BAL > hepteractEffectiveValues[data].LIMIT) {\r\n    effectiveValue *= Math.pow(player.hepteractCrafts[data].BAL / hepteractEffectiveValues[data].LIMIT, hepteractEffectiveValues[data].DR + exponentBoost)\r\n  }\r\n\r\n  return effectiveValue\r\n}\r\n\r\nexport const hepteractDescriptions = (type: hepteractTypes) => {\r\n  DOMCacheGetOrSet('hepteractUnlockedText').style.display = 'block'\r\n  DOMCacheGetOrSet('hepteractCurrentEffectText').style.display = 'block'\r\n  DOMCacheGetOrSet('hepteractBalanceText').style.display = 'block'\r\n  DOMCacheGetOrSet('powderDayWarpText').style.display = 'none'\r\n  DOMCacheGetOrSet('hepteractCostText').style.display = 'block'\r\n\r\n  const unlockedText = DOMCacheGetOrSet('hepteractUnlockedText')\r\n  const effectText = DOMCacheGetOrSet('hepteractEffectText')\r\n  const currentEffectText = DOMCacheGetOrSet('hepteractCurrentEffectText')\r\n  const balanceText = DOMCacheGetOrSet('hepteractBalanceText')\r\n  const costText = DOMCacheGetOrSet('hepteractCostText')\r\n  const bonusCapacityText = DOMCacheGetOrSet('hepteractBonusCapacity')\r\n  const craftCostMulti = calculateSingularityDebuff('Hepteract Costs')\r\n\r\n  const multiplier = player.hepteractCrafts[type].computeActualCap() / player.hepteractCrafts[type].CAP\r\n  bonusCapacityText.textContent = (player.hepteractCrafts[type].computeActualCap() / player.hepteractCrafts[type].CAP > 1) ? `Hepteract capacities are currently multiplied by ${multiplier}. Expansions cost what they would if this multiplier were 1.` : ''\r\n  let currentEffectRecord!: StringMap\r\n  let oneCost!: string | Record<string, string>\r\n\r\n  switch (type) {\r\n    case 'chronos':\r\n      currentEffectRecord = { x: format(hepteractEffective('chronos') * 6 / 100, 2, true) }\r\n      oneCost = format(1e115 * craftCostMulti, 0, false)\r\n\r\n      break\r\n    case 'hyperrealism':\r\n      currentEffectRecord = { x: format(hepteractEffective('hyperrealism') * 6 / 100, 2, true) }\r\n      oneCost = format(1e80 * craftCostMulti, 0, true)\r\n      break\r\n    case 'quark':\r\n      currentEffectRecord = { x: format(hepteractEffective('quark') * 5 / 100, 2, true) }\r\n      oneCost = '100'\r\n      break\r\n    case 'challenge':\r\n      currentEffectRecord = { x: format(hepteractEffective('challenge') * 5 / 100, 2, true) }\r\n      oneCost = {\r\n        y: format(1e11 * craftCostMulti),\r\n        z: format(1e22 * craftCostMulti)\r\n      }\r\n      break\r\n    case 'abyss':\r\n      oneCost = format(69 * craftCostMulti)\r\n      break\r\n    case 'accelerator':\r\n      currentEffectRecord = {\r\n        x: format(2000 * hepteractEffective('accelerator'), 2, true),\r\n        y: format(hepteractEffective('accelerator') * 3 / 100, 2, true)\r\n      }\r\n      oneCost = format(1e14 * craftCostMulti)\r\n      break\r\n    case 'acceleratorBoost':\r\n      currentEffectRecord = { x: format(hepteractEffective('acceleratorBoost') / 10, 2, true) }\r\n      oneCost = format(1e10 * craftCostMulti)\r\n      break\r\n    case 'multiplier':\r\n      currentEffectRecord = {\r\n        x: format(1000 * hepteractEffective('multiplier'), 2, true),\r\n        y: format(hepteractEffective('multiplier') * 3 / 100, 2, true)\r\n      }\r\n      oneCost = format(1e130 * craftCostMulti)\r\n      break\r\n  }\r\n\r\n  effectText.textContent = i18next.t(`wowCubes.hepteractForge.descriptions.${type}.effect`)\r\n  currentEffectText.textContent = i18next.t(`wowCubes.hepteractForge.descriptions.${type}.currentEffect`, currentEffectRecord)\r\n  balanceText.textContent = i18next.t('wowCubes.hepteractForge.inventory', {\r\n    x: format(player.hepteractCrafts[type].BAL, 0, true),\r\n    y: format(player.hepteractCrafts[type].computeActualCap(), 0, true)\r\n  })\r\n  const record = typeof oneCost === 'string' ? { y: oneCost } : oneCost\r\n  costText.textContent = i18next.t(`wowCubes.hepteractForge.descriptions.${type}.oneCost`, {\r\n    x: format(player.hepteractCrafts[type].HEPTERACT_CONVERSION * craftCostMulti, 0, true),\r\n    ...record\r\n  })\r\n\r\n  unlockedText.textContent = player.hepteractCrafts[type].UNLOCKED\r\n    ? i18next.t('wowCubes.hepteractForge.unlocked')\r\n    : i18next.t('wowCubes.hepteractForge.locked')\r\n}\r\n\r\n/**\r\n * Generates the description at the bottom of the page for Overflux Orb crafting\r\n */\r\nexport const hepteractToOverfluxOrbDescription = () => {\r\n  DOMCacheGetOrSet('hepteractUnlockedText').style.display = 'none'\r\n  DOMCacheGetOrSet('powderDayWarpText').style.display = 'none'\r\n  DOMCacheGetOrSet('hepteractCostText').style.display = 'block'\r\n\r\n  DOMCacheGetOrSet('hepteractCurrentEffectText').textContent = i18next.t('hepteracts.orbEffect', {\r\n    x: format(100 * (-1 + calculateCubeQuarkMultiplier()), 2, true)\r\n  })\r\n  DOMCacheGetOrSet('hepteractBalanceText').textContent = i18next.t('hepteracts.orbsPurchasedToday', {\r\n    x: format(player.overfluxOrbs, 0, true)\r\n  })\r\n  DOMCacheGetOrSet('hepteractEffectText').textContent = i18next.t('hepteracts.amalgamate')\r\n  DOMCacheGetOrSet('hepteractCostText').textContent = i18next.t('hepteracts.cost250k')\r\n}\r\n\r\n/**\r\n * Trades Hepteracts for Overflux Orbs at 250,000 : 1 ratio. If null or invalid will gracefully terminate.\r\n * @returns Alert of either purchase failure or success\r\n */\r\nexport const tradeHepteractToOverfluxOrb = async (buyMax?:boolean) => {\r\n  const maxBuy = Math.floor(player.wowAbyssals / 250000)\r\n  let toUse: number\r\n\r\n  if (buyMax) {\r\n    if (player.toggles[35]) {\r\n      const craftYesPlz = await Confirm(i18next.t('hepteracts.craftMaxOrbs', { x: format(maxBuy, 0, true) }))\r\n      if (!craftYesPlz) {\r\n        return Alert(i18next.t('hepteracts.cancelled'))\r\n      }\r\n    }\r\n    toUse = maxBuy\r\n  } else {\r\n    const hepteractInput = await Prompt(i18next.t('hepteracts.hepteractInput', { x: format(maxBuy, 0, true) }))\r\n    if (hepteractInput === null) {\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.cancelled'))\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n\r\n    toUse = Number(hepteractInput)\r\n    if (isNaN(toUse) ||\r\n            !isFinite(toUse) ||\r\n            !Number.isInteger(toUse) ||\r\n            toUse <= 0) {\r\n      return Alert(i18next.t('general.validation.invalidNumber'))\r\n    }\r\n  }\r\n\r\n  const buyAmount = Math.min(maxBuy, Math.floor(toUse))\r\n  const beforeEffect = calculateCubeQuarkMultiplier()\r\n  player.overfluxOrbs += buyAmount\r\n  player.wowAbyssals -= 250000 * buyAmount\r\n  const afterEffect = calculateCubeQuarkMultiplier()\r\n\r\n  if (player.wowAbyssals < 0) {\r\n    player.wowAbyssals = 0\r\n  }\r\n\r\n  const powderGain = player.shopUpgrades.powderAuto * calculatePowderConversion().mult * buyAmount / 100\r\n  player.overfluxPowder += powderGain\r\n\r\n  const powderText = (powderGain > 0) ? i18next.t('hepteracts.gainedPowder', { x: format(powderGain, 2, true) }) : ''\r\n  if (player.toggles[35]) {\r\n    return Alert(i18next.t('hepteracts.purchasedOrbs', {\r\n      x: format(buyAmount, 0, true),\r\n      y: format(100 * (afterEffect - beforeEffect), 2, true),\r\n      z: powderText\r\n    }))\r\n  }\r\n}\r\n\r\nexport const toggleAutoBuyOrbs = (newValue?: boolean, firstLoad = false) => {\r\n  const HTML = DOMCacheGetOrSet('hepteractToQuarkTradeAuto')\r\n\r\n  if (!firstLoad) {\r\n    // When newValue is empty, current value is toggled\r\n    player.overfluxOrbsAutoBuy = newValue ?? !player.overfluxOrbsAutoBuy\r\n  }\r\n\r\n  HTML.textContent = player.overfluxOrbsAutoBuy ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\r\n  HTML.style.border = `2px solid ${player.overfluxOrbsAutoBuy ? 'green' : 'red'}`\r\n}\r\n\r\n/**\r\n * Generates the description at the bottom of the page for Overflux Powder Properties\r\n */\r\nexport const overfluxPowderDescription = () => {\r\n  let powderEffectText: string\r\n  if (player.platonicUpgrades[16] > 0) {\r\n    powderEffectText = i18next.t('hepteracts.allCubeGainExtended', {\r\n      x: format(100 * (calculateCubeMultFromPowder() - 1), 2, true),\r\n      y: format(100 * (calculateQuarkMultFromPowder() - 1), 3, true),\r\n      z: format(2 * player.platonicUpgrades[16] * Math.min(1, player.overfluxPowder / 1e5), 2, true),\r\n      a: format(Decimal.pow(player.overfluxPowder + 1, 10 * player.platonicUpgrades[16]))\r\n    })\r\n  } else {\r\n    powderEffectText = i18next.t('hepteracts.allCubeGain', {\r\n      x: format(100 * (calculateCubeMultFromPowder() - 1), 2, true),\r\n      y: format(100 * (calculateQuarkMultFromPowder() - 1), 3, true)\r\n    })\r\n  }\r\n  DOMCacheGetOrSet('hepteractUnlockedText').style.display = 'none'\r\n  DOMCacheGetOrSet('hepteractCurrentEffectText').textContent = i18next.t('hepteracts.powderEffect', { x: powderEffectText })\r\n  DOMCacheGetOrSet('hepteractBalanceText').textContent = i18next.t('hepteracts.powderLumps', { x: format(player.overfluxPowder, 2, true) })\r\n  DOMCacheGetOrSet('hepteractEffectText').textContent = i18next.t('hepteracts.expiredOrbs', {\r\n    x: format(1 / calculatePowderConversion().mult, 1, true)\r\n  })\r\n  DOMCacheGetOrSet('hepteractCostText').style.display = 'none'\r\n\r\n  DOMCacheGetOrSet('powderDayWarpText').style.display = 'block'\r\n  DOMCacheGetOrSet('powderDayWarpText').textContent = i18next.t('hepteracts.dayWarpsRemaining', { x: player.dailyPowderResetUses })\r\n}\r\n\r\n/**\r\n * Attempts to operate a 'Day Reset' which, if successful, resets Daily Cube counters for the player.\r\n * Note by Platonic: kinda rushed job but idk if it can be improved.\r\n * @returns Alert, either for success or failure of warping\r\n */\r\nexport const overfluxPowderWarp = async (auto: boolean) => {\r\n  if (!auto) {\r\n    if (player.autoWarpCheck) {\r\n      return Alert(i18next.t('hepteracts.warpImpossible'))\r\n    }\r\n    if (player.dailyPowderResetUses <= 0) {\r\n      return Alert(i18next.t('hepteracts.machineCooldown'))\r\n    }\r\n    if (player.overfluxPowder < 25) {\r\n      return Alert(i18next.t('hepteracts.atleastPowder'))\r\n    }\r\n    const c = await Confirm(i18next.t('hepteracts.stumbleMachine'))\r\n    if (!c) {\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.walkAwayMachine'))\r\n      }\r\n    } else {\r\n      player.overfluxPowder -= 25\r\n      player.dailyPowderResetUses -= 1\r\n      forcedDailyReset()\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.useMachine'))\r\n      }\r\n    }\r\n  } else {\r\n    if (player.autoWarpCheck) {\r\n      const a = await Confirm(i18next.t('hepteracts.useAllWarpsPrompt'))\r\n      if (a) {\r\n        DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOffColon')\r\n        DOMCacheGetOrSet('warpAuto').style.border = '2px solid red'\r\n        player.autoWarpCheck = false\r\n        player.dailyPowderResetUses = 0\r\n        return Alert(i18next.t('hepteracts.machineCooldown'))\r\n      } else {\r\n        if (player.toggles[35]) {\r\n          return Alert(i18next.t('hepteracts.machineDidNotConsume'))\r\n        }\r\n      }\r\n    } else {\r\n      const a = await Confirm(i18next.t('hepteracts.boostQuarksPrompt'))\r\n      if (a) {\r\n        DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOnColon')\r\n        DOMCacheGetOrSet('warpAuto').style.border = '2px solid green'\r\n        player.autoWarpCheck = true\r\n        if (player.dailyPowderResetUses === 0) {\r\n          return Alert(i18next.t('hepteracts.machineOverdrive'))\r\n        }\r\n        return Alert(i18next.t('hepteracts.machineInOverdrive'))\r\n      } else {\r\n        if (player.toggles[35]) {\r\n          return Alert(i18next.t('hepteracts.machineUsualContinue'))\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get the HepteractCrafts which are unlocked and auto = ON\r\n * @returns Array of HepteractCraft\r\n */\r\nexport const getAutoHepteractCrafts = () => {\r\n  const autoHepteracts: HepteractCraft[] = []\r\n  for (const craftName of Object.keys(player.hepteractCrafts)) {\r\n    const craftKey = craftName as keyof Player['hepteractCrafts']\r\n    if (player.hepteractCrafts[craftKey].AUTO && player.hepteractCrafts[craftKey].UNLOCKED) {\r\n      autoHepteracts.push(player.hepteractCrafts[craftKey])\r\n    }\r\n  }\r\n  return autoHepteracts\r\n}\r\n\r\n// Hepteract of Chronos [UNLOCKED]\r\nexport const ChronosHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 1e4,\r\n  OTHER_CONVERSIONS: { 'researchPoints': 1e115 },\r\n  HTML_STRING: 'chronos',\r\n  UNLOCKED: true\r\n})\r\n\r\n// Hepteract of Hyperrealism [UNLOCKED]\r\nexport const HyperrealismHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 1e4,\r\n  OTHER_CONVERSIONS: { 'runeshards': 1e80 },\r\n  HTML_STRING: 'hyperrealism',\r\n  UNLOCKED: true\r\n})\r\n\r\n// Hepteract of Too Many Quarks [UNLOCKED]\r\nexport const QuarkHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 1e4,\r\n  OTHER_CONVERSIONS: { 'worlds': 100 },\r\n  HTML_STRING: 'quark',\r\n  UNLOCKED: true\r\n})\r\n\r\n// Hepteract of Challenge [LOCKED]\r\nexport const ChallengeHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 5e4,\r\n  OTHER_CONVERSIONS: { 'wowPlatonicCubes': 1e11, 'wowCubes': 1e22 },\r\n  HTML_STRING: 'challenge'\r\n})\r\n\r\n// Hepteract of The Abyssal [LOCKED]\r\nexport const AbyssHepteract = new HepteractCraft({\r\n  BASE_CAP: 1,\r\n  HEPTERACT_CONVERSION: 1e8,\r\n  OTHER_CONVERSIONS: { 'wowCubes': 69 },\r\n  HTML_STRING: 'abyss'\r\n})\r\n\r\n// Hepteract of Too Many Accelerator [LOCKED]\r\nexport const AcceleratorHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 1e5,\r\n  OTHER_CONVERSIONS: { 'wowTesseracts': 1e14 },\r\n  HTML_STRING: 'accelerator'\r\n})\r\n\r\n// Hepteract of Too Many Accelerator Boost [LOCKED]\r\nexport const AcceleratorBoostHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 2e5,\r\n  OTHER_CONVERSIONS: { 'wowHypercubes': 1e10 },\r\n  HTML_STRING: 'acceleratorBoost'\r\n})\r\n\r\n// Hepteract of Too Many Multiplier [LOCKED]\r\nexport const MultiplierHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 3e5,\r\n  OTHER_CONVERSIONS: { 'researchPoints': 1e130 },\r\n  HTML_STRING: 'multiplier'\r\n})\r\n", "import { player, format, formatTimeShort } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { hepteractEffective } from './Hepteracts'\r\nimport { calculateSigmoidExponential, calculateCubeMultiplier, calculateOfferings, calculateTimeAcceleration, calculateTesseractMultiplier, calculateHypercubeMultiplier, calculatePlatonicMultiplier, calculateHepteractMultiplier, calculateAllCubeMultiplier, calculateSigmoid, calculatePowderConversion, calculateEffectiveIALevel, calculateQuarkMultFromPowder, calculateOcteractMultiplier, calculateQuarkMultiplier, calculateEventBuff, calculateSingularityQuarkMilestoneMultiplier, calculateTotalOcteractQuarkBonus, calculateAscensionSpeedMultiplier, calculateGoldenQuarkMultiplier, calculateAmbrosiaQuarkMult } from './Calculate'\r\nimport { challenge15ScoreMultiplier } from './Challenges'\r\nimport type { GlobalVariables } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport Decimal from 'break_infinity.js'\r\nimport { addCodeMaxUses, addCodeInterval, addCodeAvailableUses, addCodeTimeToNextUse, addCodeBonuses } from './ImportExport'\r\n\r\nconst associated = new Map<string, string>([\r\n  ['kMisc', 'miscStats'],\r\n  ['kFreeAccel', 'acceleratorStats'],\r\n  ['kFreeMult', 'multiplierStats'],\r\n  ['kOfferingMult', 'offeringMultiplierStats'],\r\n  ['kGlobalCubeMult', 'globalCubeMultiplierStats'],\r\n  ['kQuarkMult', 'globalQuarkMultiplierStats'],\r\n  ['kGSpeedMult', 'globalSpeedMultiplierStats'],\r\n  ['kCubeMult', 'cubeMultiplierStats'],\r\n  ['kTessMult', 'tesseractMultiplierStats'],\r\n  ['kHypercubeMult', 'hypercubeMultiplierStats'],\r\n  ['kPlatMult', 'platonicMultiplierStats'],\r\n  ['kHeptMult', 'hepteractMultiplierStats'],\r\n  ['kOrbPowderMult', 'powderMultiplierStats'],\r\n  ['kOctMult', 'octeractMultiplierStats'],\r\n  ['kASCMult', 'ascensionSpeedMultiplierStats'],\r\n  ['kGQMult', 'goldenQuarkMultiplierStats'],\r\n  ['kAddStats', 'addCodeStats'],\r\n  ['kAmbrosiaLuck', 'ambrosiaLuckStats'],\r\n  ['kAmbrosiaGenMult', 'ambrosiaGenerationStats']\r\n])\r\n\r\nexport const displayStats = (btn: HTMLElement) => {\r\n  for (const e of Array.from(btn.parentElement!.children) as HTMLElement[]) {\r\n    const statsEl = DOMCacheGetOrSet(associated.get(e.id)!)\r\n    if (e.id !== btn.id) {\r\n      e.style.backgroundColor = ''\r\n      statsEl.style.display = 'none'\r\n      statsEl.classList.remove('activeStats')\r\n    } else {\r\n      e.style.backgroundColor = 'crimson'\r\n      statsEl.style.display = 'block'\r\n      statsEl.classList.add('activeStats')\r\n    }\r\n  }\r\n}\r\n\r\nexport const loadStatisticsUpdate = () => {\r\n  const activeStats = document.getElementsByClassName('activeStats') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < activeStats.length; i++) {\r\n    switch (activeStats[i].id) {\r\n      case 'miscStats':\r\n        loadStatisticsMiscellaneous()\r\n        break\r\n      case 'acceleratorStats':\r\n        loadStatisticsAccelerator()\r\n        break\r\n      case 'multiplierStats':\r\n        loadStatisticsMultiplier()\r\n        break\r\n      case 'offeringMultiplierStats':\r\n        loadStatisticsOfferingMultipliers()\r\n        break\r\n      case 'globalQuarkMultiplierStats':\r\n        loadQuarkMultiplier()\r\n        break\r\n      case 'globalSpeedMultiplierStats':\r\n        loadGlobalSpeedMultiplier()\r\n        break\r\n      case 'powderMultiplierStats':\r\n        loadPowderMultiplier()\r\n        break\r\n      case 'ascensionSpeedMultiplierStats':\r\n        loadStatisticsAscensionSpeedMultipliers()\r\n        break\r\n      case 'goldenQuarkMultiplierStats':\r\n        loadStatisticsGoldenQuarkMultipliers()\r\n        break\r\n      case 'addCodeStats':\r\n        loadAddCodeModifiersAndEffects()\r\n        break\r\n      case 'ambrosiaLuckStats':\r\n        loadStatisticsAmbrosiaLuck()\r\n        break\r\n      case 'ambrosiaGenerationStats':\r\n        loadStatisticsAmbrosiaGeneration()\r\n        break\r\n      default:\r\n        loadStatisticsCubeMultipliers()\r\n        break\r\n    }\r\n  }\r\n}\r\n\r\nexport const loadStatisticsMiscellaneous = () => {\r\n  DOMCacheGetOrSet('sMisc1').textContent = format(player.prestigeCount, 0, true)\r\n  DOMCacheGetOrSet('sMisc2').textContent = format(1000 * player.fastestprestige) + 'ms'\r\n  DOMCacheGetOrSet('sMisc3').textContent = format(player.maxofferings)\r\n  DOMCacheGetOrSet('sMisc4').textContent = format(G.runeSum)\r\n  DOMCacheGetOrSet('sMisc5').textContent = format(player.transcendCount, 0, true)\r\n  DOMCacheGetOrSet('sMisc6').textContent = format(1000 * player.fastesttranscend) + 'ms'\r\n  DOMCacheGetOrSet('sMisc7').textContent = format(player.reincarnationCount, 0, true)\r\n  DOMCacheGetOrSet('sMisc8').textContent = format(1000 * player.fastestreincarnate) + 'ms'\r\n  DOMCacheGetOrSet('sMisc9').textContent = format(player.maxobtainium)\r\n  DOMCacheGetOrSet('sMisc10').textContent = format(player.maxobtainiumpersecond, 2, true)\r\n  DOMCacheGetOrSet('sMisc11').textContent = format(player.obtainiumpersecond, 2, true)\r\n  DOMCacheGetOrSet('sMisc12').textContent = format(player.ascensionCount, 0, true)\r\n  DOMCacheGetOrSet('sMisc13').textContent = format(player.quarksThisSingularity, 0, true)\r\n  DOMCacheGetOrSet('sMisc14').textContent = format(player.totalQuarksEver + player.quarksThisSingularity, 0, true)\r\n  DOMCacheGetOrSet('sMisc15').textContent = formatTimeShort(player.quarkstimer) + ' / ' + formatTimeShort(90000 + 18000 * player.researches[195])\r\n  DOMCacheGetOrSet('sMisc16').textContent = synergismStage(0)\r\n}\r\n\r\nexport const loadStatisticsAccelerator = () => {\r\n  DOMCacheGetOrSet('sA1').textContent = '+' + format(G.freeUpgradeAccelerator, 0, false)\r\n  DOMCacheGetOrSet('sA2').textContent = '+' + format(G.totalAcceleratorBoost * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G.cubeBonusMultiplier[1]), 0, false)\r\n  DOMCacheGetOrSet('sA3').textContent = '+' + format(Math.floor(Math.pow(G.rune1level * G.effectiveLevelMult / 10, 1.1)), 0, true)\r\n  DOMCacheGetOrSet('sA4').textContent = 'x' + format(1 + G.rune1level * 1 / 200 * G.effectiveLevelMult, 3, true)\r\n  DOMCacheGetOrSet('sA5').textContent = 'x' + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]), 3, true)\r\n  DOMCacheGetOrSet('sA6').textContent = 'x' + format(Math.pow(1.01, player.achievements[60] + player.achievements[61] + player.achievements[62]), 3, true)\r\n  DOMCacheGetOrSet('sA7').textContent = 'x' + format(1 + 1 / 5 * player.researches[1], 3, true)\r\n  DOMCacheGetOrSet('sA8').textContent = 'x' + format(1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10], 3, true)\r\n  DOMCacheGetOrSet('sA9').textContent = 'x' + format(1 + 1 / 20 * player.researches[86], 3, true)\r\n  DOMCacheGetOrSet('sA10').textContent = 'x' + format(((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5 ? 1.25 : 1), 3, true)\r\n  DOMCacheGetOrSet('sA11').textContent = '^' + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G.viscosityPower[player.usedCorruptions[2]]), 3, true)\r\n  DOMCacheGetOrSet('sA12').textContent = format(G.freeAccelerator, 0, true)\r\n}\r\n\r\nexport const loadStatisticsMultiplier = () => {\r\n  DOMCacheGetOrSet('sM1').textContent = '+' + format(G.freeUpgradeMultiplier, 0, true)\r\n  DOMCacheGetOrSet('sM2').textContent = '+' + format(Math.floor(Math.floor(G.rune2level / 10 * G.effectiveLevelMult) * Math.floor(10 + G.rune2level / 10 * G.effectiveLevelMult) / 2) * 100 / 100, 0, true)\r\n  DOMCacheGetOrSet('sM3').textContent = 'x' + format(1 + G.rune2level / 200 * G.effectiveLevelMult, 3, true)\r\n  DOMCacheGetOrSet('sM4').textContent = 'x' + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]) * (1 + player.upgrades[34] * 3 / 100) * (1 + player.upgrades[34] * (2 / 103)), 3, true)\r\n  DOMCacheGetOrSet('sM5').textContent = 'x' + format(Math.pow(1.01, player.achievements[57] + player.achievements[58] + player.achievements[59]), 3, true)\r\n  DOMCacheGetOrSet('sM6').textContent = 'x' + format(1 + 1 / 5 * player.researches[2], 3, true)\r\n  DOMCacheGetOrSet('sM7').textContent = 'x' + format(1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15], 3, true)\r\n  DOMCacheGetOrSet('sM8').textContent = 'x' + format(1 + 1 / 20 * player.researches[87], 3, true)\r\n  DOMCacheGetOrSet('sM9').textContent = 'x' + format(calculateSigmoidExponential(40, (player.antUpgrades[4]! + G.bonusant5) / 1000 * 40 / 39), 2, true)\r\n  DOMCacheGetOrSet('sM10').textContent = 'x' + format(G.cubeBonusMultiplier[2], 3, true)\r\n  DOMCacheGetOrSet('sM11').textContent = 'x' + format(((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5 ? 1.25 : 1), 3, true)\r\n  DOMCacheGetOrSet('sM12').textContent = '^' + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G.viscosityPower[player.usedCorruptions[2]]), 3, true)\r\n  DOMCacheGetOrSet('sM13').textContent = format(G.freeMultiplier, 3, true)\r\n}\r\nexport const loadQuarkMultiplier = () => {\r\n  DOMCacheGetOrSet('sGQM1').textContent = 'x' + format(1, 3, true) //Base\r\n  DOMCacheGetOrSet('sGQM2').textContent = '+' + format(player.achievementPoints / 25000, 3, true) //AP\r\n  DOMCacheGetOrSet('sGQM3').textContent = '+' + format(player.achievements[250] > 0 ? 0.10 : 0, 3, true) //Max r8x25\r\n  DOMCacheGetOrSet('sGQM4').textContent = '+' + format(player.achievements[251] > 0 ? 0.10 : 0, 3, true) //Max w5x10\r\n  DOMCacheGetOrSet('sGQM5').textContent = '+' + format(player.platonicUpgrades[5] > 0 ? 0.20 : 0, 3, true) //ALPHA\r\n  DOMCacheGetOrSet('sGQM6').textContent = '+' + format(player.platonicUpgrades[10] > 0 ? 0.25 : 0, 3, true) //BETA\r\n  DOMCacheGetOrSet('sGQM7').textContent = '+' + format(player.platonicUpgrades[15] > 0 ? 0.30 : 0, 3, true) //OMEGA\r\n  DOMCacheGetOrSet('sGQM8').textContent = '+' + format(G.challenge15Rewards.quarks-1, 3, true) //Challenge 15 Reward\r\n  DOMCacheGetOrSet('sGQM9').textContent = 'x' + format(player.worlds.applyBonus(1 / calculateQuarkMultiplier()), 3, true) //Patreon Bonus\r\n  DOMCacheGetOrSet('sGQM10').textContent = 'x' + format((G.isEvent ? 1 + calculateEventBuff('Quarks') + calculateEventBuff('One Mind') : 1), 3, true) //Event\r\n  DOMCacheGetOrSet('sGQM11').textContent = 'x' + format(1.1 + 0.15 / 75 * calculateEffectiveIALevel(), 3, true) //IA Rune\r\n  DOMCacheGetOrSet('sGQM12').textContent = 'x' + format(player.challenge15Exponent >= 1e15 ? 1 + 5/10000 * hepteractEffective('quark') : 1, 3, true) //Quark Hepteract\r\n  DOMCacheGetOrSet('sGQM13').textContent = 'x' + format(calculateQuarkMultFromPowder(), 3, true) //Powder\r\n  DOMCacheGetOrSet('sGQM14').textContent = 'x' + format(1 + player.achievements[266] * Math.min(0.1, (player.ascensionCount) / 1e16), 3, true) // Achievement 266 [Max: 10% at 1Qa Ascensions]\r\n  DOMCacheGetOrSet('sGQM15').textContent = 'x' + format(1 + player.singularityCount / 10, 3, true) //Singularity\r\n  DOMCacheGetOrSet('sGQM16').textContent = 'x' + format(calculateSingularityQuarkMilestoneMultiplier(), 3, true) // Singularity Milestones\r\n  DOMCacheGetOrSet('sGQM17').textContent = 'x' + format(1 + 0.10 * player.cubeUpgrades[53] / 100, 3, true) // Cube Upgrade 6x3 (Cx3)\r\n  DOMCacheGetOrSet('sGQM18').textContent = 'x' + format(1 + 1/10000 * player.cubeUpgrades[68] + 0.05 * (Math.floor(player.cubeUpgrades[68] / 1000)), 3, true)\r\n  DOMCacheGetOrSet('sGQM19').textContent = 'x' + format(1 + 0.02 * player.singularityUpgrades.intermediatePack.level +           // 1.02\r\n                                                            0.04 * player.singularityUpgrades.advancedPack.level +               // 1.06\r\n                                                            0.06 * player.singularityUpgrades.expertPack.level +                 // 1.12\r\n                                                            0.08 * player.singularityUpgrades.masterPack.level +                 // 1.20\r\n                                                            0.10 * player.singularityUpgrades.divinePack.level, 3, true)\r\n  DOMCacheGetOrSet('sGQM20').textContent = 'x' + format(1 + 0.25 * +player.octeractUpgrades.octeractStarter.getEffect().bonus, 3, true)\r\n  DOMCacheGetOrSet('sGQM21').textContent = 'x' + format(+player.octeractUpgrades.octeractQuarkGain.getEffect().bonus, 3, true)\r\n  DOMCacheGetOrSet('sGQM22').textContent = 'x' + format(calculateTotalOcteractQuarkBonus(), 3, true)\r\n  DOMCacheGetOrSet('sGQM23').textContent = 'x' + format(1 + +player.singularityUpgrades.singQuarkImprover1.getEffect().bonus, 3, true)\r\n  DOMCacheGetOrSet('sGQM24').textContent = 'x' + format(1 + 1/10000 * Math.floor(player.octeractUpgrades.octeractQuarkGain.level / 199) *\r\n                                                            player.octeractUpgrades.octeractQuarkGain2.level *\r\n                                                            Math.floor(1 + Math.log10(Math.max(1, player.hepteractCrafts.quark.BAL))),\r\n  3,\r\n  true)\r\n  DOMCacheGetOrSet('sGQM25').textContent = 'x' + format(calculateAmbrosiaQuarkMult(), 2, true)\r\n  DOMCacheGetOrSet('sGQM26').textContent = 'x' + format(+player.blueberryUpgrades.ambrosiaTutorial.bonus.quarks, 2, true)\r\n  DOMCacheGetOrSet('sGQM27').textContent = 'x' + format(+player.blueberryUpgrades.ambrosiaQuarks1.bonus.quarks, 2, true)\r\n  DOMCacheGetOrSet('sGQM28').textContent = 'x' + format(+player.blueberryUpgrades.ambrosiaCubeQuark1.bonus.quarks, 2, true)\r\n  DOMCacheGetOrSet('sGQM29').textContent = 'x' + format(+player.blueberryUpgrades.ambrosiaLuckQuark1.bonus.quarks, 2, true)\r\n  DOMCacheGetOrSet('sGQMT').textContent = 'x' + format(player.worlds.applyBonus(1), 3, true)\r\n}\r\n\r\nexport const loadGlobalSpeedMultiplier = () => {\r\n  const globalSpeedStats = calculateTimeAcceleration()\r\n\r\n  const preDRlist = globalSpeedStats.preList\r\n  for (let i = 0; i < preDRlist.length; i++) {\r\n    DOMCacheGetOrSet(`sGSMa${i + 1}`).textContent = `x${format(preDRlist[i], 3, true)}`\r\n  }\r\n\r\n  const drList = globalSpeedStats.drList\r\n  for (let i = 0; i < drList.length; i++) {\r\n    DOMCacheGetOrSet(`sGSMb${i + 1}`).textContent = `x${format(drList[i], 3, true)}`\r\n  }\r\n\r\n  const postDRlist = globalSpeedStats.postList\r\n  for (let i = 0; i < postDRlist.length; i++) {\r\n    DOMCacheGetOrSet(`sGSMc${i + 1}`).textContent = `x${format(postDRlist[i], 3, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sGSMT').textContent = format(globalSpeedStats.mult, 3)\r\n}\r\n\r\nexport const loadStatisticsCubeMultipliers = () => {\r\n\r\n  const arr0 = calculateAllCubeMultiplier().list\r\n  const map0: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Time Multiplier:' },\r\n    2: { acc: 2, desc: 'Sun and Moon Achievements:' },\r\n    3: { acc: 2, desc: 'Speed Achievement:' },\r\n    4: { acc: 2, desc: 'Challenge 15 All Cube Bonus:' },\r\n    5: { acc: 2, desc: 'Rune 6 - Infinite Ascent:' },\r\n    6: { acc: 2, desc: 'Platonic Beta:' },\r\n    7: { acc: 2, desc: 'Platonic Omega:' },\r\n    8: { acc: 2, desc: 'Overflux Powder:' },\r\n    9: { acc: 2, desc: 'Event:' },\r\n    10: { acc: 2, desc: 'Singularity Factor:' },\r\n    11: { acc: 2, desc: 'Wow Pass Y' },\r\n    12: { acc: 2, desc: 'Starter Pack:' },\r\n    13: { acc: 2, desc: 'Cube Flame [GQ]:' },\r\n    14: { acc: 2, desc: 'Cube Blaze [GQ]:' },\r\n    15: { acc: 2, desc: 'Cube Inferno [GQ]:' },\r\n    16: { acc: 2, desc: 'Wow Pass Z:' },\r\n    17: { acc: 2, desc: 'Cookie Upgrade 16:' },\r\n    18: { acc: 2, desc: 'Cookie Upgrade 8:' },\r\n    19: { acc: 2, desc: 'Total Octeract Bonus:' },\r\n    20: { acc: 2, desc: 'No Singularity Upgrades Challenge:' },\r\n    21: { acc: 2, desc: 'Citadel [GQ]' },\r\n    22: { acc: 2, desc: 'Citadel 2 [GQ]' },\r\n    23: { acc: 4, desc: 'Platonic DELTA' },\r\n    24: { acc: 2, desc: 'Wow Pass \u221E' },\r\n    25: { acc: 2, desc: 'Unspent Ambrosia Bonus' },\r\n    26: { acc: 2, desc: 'Module- Tutorial' },\r\n    27: { acc: 2, desc: 'Module- Cubes 1' },\r\n    28: { acc: 2, desc: 'Module- Luck-Cube 1' },\r\n    29: { acc: 2, desc: 'Module- Quark-Cube 1' }\r\n  }\r\n  for (let i = 0; i < arr0.length; i++) {\r\n    const statGCMi = DOMCacheGetOrSet(`statGCM${i + 1}`)\r\n    statGCMi.childNodes[0].textContent = map0[i + 1].desc\r\n    DOMCacheGetOrSet(`sGCM${i + 1}`).textContent = `x${format(arr0[i], map0[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sGCMT').textContent = `x${format(calculateAllCubeMultiplier().mult, 3)}`\r\n\r\n  const arr = calculateCubeMultiplier().list\r\n  const map: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Global Cube Multiplier:' },\r\n    3: { acc: 2, desc: 'Season Pass 1:' },\r\n    4: { acc: 2, desc: 'Researches (Except 8x25):' },\r\n    5: { acc: 2, desc: 'Research 8x25:' },\r\n    6: { acc: 2, desc: 'Cube Upgrades:' },\r\n    7: { acc: 2, desc: 'Constant Upgrade 10:' },\r\n    8: { acc: 2, desc: 'Achievement 189 Bonus:' },\r\n    9: { acc: 2, desc: 'Achievement 193 Bonus:' },\r\n    10: { acc: 2, desc: 'Achievement 195 Bonus:' },\r\n    11: { acc: 2, desc: 'Achievement 198-201 Bonus:' },\r\n    12: { acc: 2, desc: 'Achievement 254 Bonus:' },\r\n    13: { acc: 2, desc: 'Spirit Power:' },\r\n    14: { acc: 2, desc: 'Platonic Cubes:' },\r\n    15: { acc: 2, desc: 'Platonic 1x1:' },\r\n    16: { acc: 2, desc: 'Cookie Upgrade 13:' }\r\n  }\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const statCMi = DOMCacheGetOrSet(`statCM${i + 1}`)\r\n    statCMi.childNodes[0].textContent = map[i + 1].desc\r\n    DOMCacheGetOrSet(`sCM${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`\r\n  }\r\n  // PLAT\r\n  DOMCacheGetOrSet('sCMT').textContent = `x${format(calculateCubeMultiplier().mult, 3)}`\r\n\r\n  const arr2 = calculateTesseractMultiplier().list\r\n  const map2: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Global Cube Multiplier:' },\r\n    3: { acc: 2, desc: 'Season Pass 1:' },\r\n    4: { acc: 2, desc: 'Constant Upgrade 10:' },\r\n    5: { acc: 2, desc: 'Cube Upgrade 3x10:' },\r\n    6: { acc: 2, desc: 'Cube Upgrade 4x8:' },\r\n    7: { acc: 2, desc: 'Achievement 195 Bonus:' },\r\n    8: { acc: 2, desc: 'Achievement 202 Bonus:' },\r\n    9: { acc: 2, desc: 'Achievement 205-208 Bonus:' },\r\n    10: { acc: 2, desc: 'Achievement 255 Bonus:' },\r\n    11: { acc: 2, desc: 'Platonic Cubes:' },\r\n    12: { acc: 2, desc: 'Platonic 1x2:' }\r\n  }\r\n  for (let i = 0; i < arr2.length; i++) {\r\n    const statTeMi = DOMCacheGetOrSet(`statTeM${i + 1}`)\r\n    statTeMi.childNodes[0].textContent = map2[i + 1].desc\r\n    DOMCacheGetOrSet(`sTeM${i + 1}`).textContent = `x${format(arr2[i], map2[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sTeMT').textContent = `x${format(calculateTesseractMultiplier().mult, 3)}`\r\n\r\n  const arr3 = calculateHypercubeMultiplier().list\r\n  const map3: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Global Cube Multiplier:' },\r\n    3: { acc: 2, desc: 'Season Pass 2:' },\r\n    4: { acc: 2, desc: 'Achievement 212-215 Bonus:' },\r\n    5: { acc: 2, desc: 'Achievement 216 Bonus:' },\r\n    6: { acc: 2, desc: 'Achievement 253 Bonus:' },\r\n    7: { acc: 2, desc: 'Achievement 256 Bonus:' },\r\n    8: { acc: 2, desc: 'Achievement 265 Bonus:' },\r\n    9: { acc: 2, desc: 'Platonic Cubes:' },\r\n    10: { acc: 2, desc: 'Platonic 1x3:' },\r\n    11: { acc: 2, desc: 'Hyperreal Hepteract Bonus:' }\r\n  }\r\n  for (let i = 0; i < arr3.length; i++) {\r\n    const statHyMi = DOMCacheGetOrSet(`statHyM${i + 1}`)\r\n    statHyMi.childNodes[0].textContent = map3[i + 1].desc\r\n    DOMCacheGetOrSet(`sHyM${i + 1}`).textContent = `x${format(arr3[i], map3[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sHyMT').textContent = `x${format(calculateHypercubeMultiplier().mult, 3)}`\r\n\r\n  const arr4 = calculatePlatonicMultiplier().list\r\n  const map4: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Global Cube Multiplier:' },\r\n    3: { acc: 2, desc: 'Season Pass 2:' },\r\n    4: { acc: 2, desc: 'Achievement 196 Bonus:' },\r\n    5: { acc: 2, desc: 'Achievement 219-222 Bonus:' },\r\n    6: { acc: 2, desc: 'Achievement 223 Bonus:' },\r\n    7: { acc: 2, desc: 'Achievement 257 Bonus:' },\r\n    8: { acc: 2, desc: 'Platonic Cubes:' },\r\n    9: { acc: 2, desc: 'Platonic 1x4:' }\r\n  }\r\n  for (let i = 0; i < arr4.length; i++) {\r\n    const statPlMi = DOMCacheGetOrSet(`statPlM${i + 1}`)\r\n    statPlMi.childNodes[0].textContent = map4[i + 1].desc\r\n    DOMCacheGetOrSet(`sPlM${i + 1}`).textContent = `x${format(arr4[i], map4[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sPlMT').textContent = `x${format(calculatePlatonicMultiplier().mult, 3)}`\r\n\r\n  const arr5 = calculateHepteractMultiplier().list\r\n  const map5: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Global Cube Multiplier:' },\r\n    3: { acc: 2, desc: 'Season Pass 3:' },\r\n    4: { acc: 2, desc: 'Achievement 258 Bonus:' },\r\n    5: { acc: 2, desc: 'Achievement 264 Bonus:' },\r\n    6: { acc: 2, desc: 'Achievement 265 Bonus:' },\r\n    7: { acc: 2, desc: 'Achievement 270 Bonus:' }\r\n  }\r\n  for (let i = 0; i < arr5.length; i++) {\r\n    const statHeMi = DOMCacheGetOrSet(`statHeM${i + 1}`)\r\n    statHeMi.childNodes[0].textContent = map5[i + 1].desc\r\n    DOMCacheGetOrSet(`sHeM${i + 1}`).textContent = `x${format(arr5[i], map5[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sHeMT').textContent = `x${format(calculateHepteractMultiplier().mult, 3)}`\r\n\r\n  const octMults = calculateOcteractMultiplier()\r\n  const ascensionSpeedDesc = (player.singularityUpgrades.oneMind.getEffect().bonus) ? 'One Mind Multiplier' : 'Ascension Speed Multiplier'\r\n  const map6: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Season Pass 3:' },\r\n    3: { acc: 2, desc: 'Season Pass Y:' },\r\n    4: { acc: 2, desc: 'Season Pass Z:' },\r\n    5: { acc: 2, desc: 'Season Pass Lost:' },\r\n    6: { acc: 2, desc: 'Cookie Upgrade 20:' },\r\n    7: { acc: 2, desc: 'Divine Pack:' },\r\n    8: { acc: 2, desc: 'Cube Flame:' },\r\n    9: { acc: 2, desc: 'Cube Blaze:' },\r\n    10: { acc: 2, desc: 'Cube Inferno:' },\r\n    11: { acc: 2, desc: 'Octeract Absinthe' },\r\n    12: { acc: 2, desc: 'Pieces of Eight' },\r\n    13: { acc: 2, desc: 'Obelisk Shaped Like an Octagon' },\r\n    14: { acc: 2, desc: 'Octahedral Synthesis' },\r\n    15: { acc: 2, desc: 'Eighth Wonder of the World' },\r\n    16: { acc: 2, desc: 'Platonic is a fat sellout' },\r\n    17: { acc: 2, desc: 'Octeracts for Dummies' },\r\n    18: { acc: 2, desc: 'Octeract Cogenesis' },\r\n    19: { acc: 2, desc: 'Octeract Trigenesis' },\r\n    20: { acc: 2, desc: 'Singularity Factor' },\r\n    21: { acc: 2, desc: 'Digital Octeract Accumulator' },\r\n    22: { acc: 2, desc: 'Event Buff' },\r\n    23: { acc: 2, desc: 'Platonic DELTA' },\r\n    24: { acc: 2, desc: 'No Singularity Upgrades Challenge' },\r\n    25: { acc: 2, desc: 'Wow Pass \u221E' },\r\n    26: { acc: 2, desc: 'Unspent Ambrosia Bonus' },\r\n    27: { acc: 2, desc: 'Module- Tutorial' },\r\n    28: { acc: 2, desc: 'Module- Cubes 1' },\r\n    29: { acc: 2, desc: 'Module- Luck-Cube 1' },\r\n    30: { acc: 2, desc: 'Module- Quark-Cube 1' },\r\n    31: { acc: 2, desc: ascensionSpeedDesc }\r\n  }\r\n  for (let i = 0; i < octMults.list.length; i++) {\r\n    const statOcMi = DOMCacheGetOrSet(`statOcM${i + 1}`)\r\n    statOcMi.childNodes[0].textContent = map6[i + 1].desc\r\n    DOMCacheGetOrSet(`sOcM${i + 1}`).textContent = `x${format(octMults.list[i], map6[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sOcMT').textContent = `x${format(octMults.mult, 3)}`\r\n}\r\n\r\nexport const loadStatisticsOfferingMultipliers = () => {\r\n  const arr = calculateOfferings('prestige', false)\r\n  const map: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 3, desc: 'Alchemy Achievement 5:' },\r\n    2: { acc: 3, desc: 'Alchemy Achievement 6:' },\r\n    3: { acc: 3, desc: 'Alchemy Achievement 7:' },\r\n    4: { acc: 3, desc: 'Diamond Upgrade 4x3:' },\r\n    5: { acc: 3, desc: 'Particle Upgrade 3x5:' },\r\n    6: { acc: 3, desc: 'Auto Offering Shop Upgrade:' },\r\n    7: { acc: 3, desc: 'Offering EX Shop Upgrade:' },\r\n    8: { acc: 3, desc: 'Cash Grab Shop Upgrade:' },\r\n    9: { acc: 3, desc: 'Research 4x10:' },\r\n    10: { acc: 3, desc: 'Sacrificium Formicidae:' },\r\n    11: { acc: 3, desc: 'Plutus Cube Tribute:' },\r\n    12: { acc: 3, desc: 'Constant Upgrade 3:' },\r\n    13: { acc: 3, desc: 'Research 6x24,8x4:' },\r\n    14: { acc: 3, desc: 'Challenge 12:' },\r\n    15: { acc: 3, desc: 'Research 8x25:' },\r\n    16: { acc: 3, desc: 'Ascension Count Achievement:' },\r\n    17: { acc: 3, desc: 'Sun and Moon Achievements:' },\r\n    18: { acc: 3, desc: 'Cube Upgrade 5x6:' },\r\n    19: { acc: 3, desc: 'Cube Upgrade 5x10:' },\r\n    20: { acc: 3, desc: 'Platonic ALPHA:' },\r\n    21: { acc: 3, desc: 'Platonic BETA:' },\r\n    22: { acc: 3, desc: 'Platonic OMEGA:' },\r\n    23: { acc: 3, desc: 'Challenge 15:' },\r\n    24: { acc: 3, desc: 'Starter Pack:' },\r\n    25: { acc: 3, desc: 'Offering Charge [GQ]:' },\r\n    26: { acc: 3, desc: 'Offering Storm [GQ]:' },\r\n    27: { acc: 3, desc: 'Offering Tempest [GQ]:' },\r\n    28: { acc: 3, desc: 'Citadel [GQ]' },\r\n    29: { acc: 3, desc: 'Citadel 2 [GQ]' },\r\n    30: { acc: 3, desc: 'Cube Upgrade Cx4:' },\r\n    31: { acc: 3, desc: 'Offering Electrolosis [OC]:' },\r\n    32: { acc: 3, desc: 'Event:' }\r\n  }\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const statOffi = DOMCacheGetOrSet(`statOff${i + 1}`)\r\n    statOffi.childNodes[0].textContent = map[i + 1].desc\r\n    DOMCacheGetOrSet(`sOff${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`\r\n  }\r\n  DOMCacheGetOrSet('sOffT').textContent = `x${format(calculateOfferings('prestige', true, true), 3)}`\r\n}\r\n\r\nexport const loadPowderMultiplier = () => {\r\n  const arr0 = calculatePowderConversion().list\r\n  const map0: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Base:' },\r\n    2: { acc: 2, desc: 'Challenge 15 Bonus:' },\r\n    3: { acc: 2, desc: 'Powder EX:' },\r\n    4: { acc: 2, desc: 'Achievement 256:' },\r\n    5: { acc: 2, desc: 'Achievement 257:' },\r\n    6: { acc: 2, desc: 'Platonic Upgrade 16 [4x1]:' },\r\n    7: { acc: 2, desc: 'Event:' }\r\n  }\r\n  for (let i = 0; i < arr0.length; i++) {\r\n    const statGCMi = DOMCacheGetOrSet(`statPoM${i + 1}`)\r\n    statGCMi.childNodes[0].textContent = map0[i + 1].desc\r\n    DOMCacheGetOrSet(`sPoM${i + 1}`).textContent = `x${format(arr0[i], map0[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sPoMT').textContent = `x${format(calculatePowderConversion().mult, 3)}`\r\n}\r\n\r\nexport const loadStatisticsAscensionSpeedMultipliers = () => {\r\n  const arr = calculateAscensionSpeedMultiplier()\r\n  const map7: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Chronometer:' },\r\n    2: { acc: 2, desc: 'Chronometer 2:' },\r\n    3: { acc: 2, desc: 'Chronometer 3:' },\r\n    4: { acc: 2, desc: 'Chronos Hepteract:' },\r\n    5: { acc: 2, desc: 'Achievement 262 Bonus:' },\r\n    6: { acc: 2, desc: 'Achievement 263 Bonus:' },\r\n    7: { acc: 2, desc: 'Platonic Omega:' },\r\n    8: { acc: 2, desc: 'Challenge 15 Reward:' },\r\n    9: { acc: 2, desc: 'Cookie Upgrade 9:' },\r\n    10: { acc: 2, desc: 'Intermediate Pack:' },\r\n    11: { acc: 2, desc: 'Chronometer Z:' },\r\n    12: { acc: 2, desc: 'Abstract Photokinetics:' },\r\n    13: { acc: 2, desc: 'Abstract Exokinetics:' },\r\n    14: { acc: 2, desc: 'Event:' },\r\n    15: { acc: 2, desc: 'Ascension Speedup 2 [GQ]:' },\r\n    16: { acc: 2, desc: 'Chronometer INF:' },\r\n    17: { acc: 2, desc: 'Limited Ascensions Penalty:' },\r\n    18: { acc: 2, desc: 'Limited Ascensions Reward:' },\r\n    19: { acc: 2, desc: 'Ascension Speedup [GQ]:' },\r\n    20: { acc: 2, desc: 'Singularity Penalty:' }\r\n  }\r\n  for (let i = 0; i < arr.list.length; i++) {\r\n    const statASMi = DOMCacheGetOrSet(`statASM${i + 1}`)\r\n    statASMi.childNodes[0].textContent = map7[i + 1].desc\r\n    DOMCacheGetOrSet(`sASM${i + 1}`).textContent = `x${format(arr.list[i], map7[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sASMT').textContent = `x${format(arr.mult, 3)}`\r\n}\r\n\r\nexport const loadStatisticsGoldenQuarkMultipliers = () => {\r\n  const arr = calculateGoldenQuarkMultiplier()\r\n  const map: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Challenge 15 Exponent:' },\r\n    2: { acc: 2, desc: 'Patreon Bonus:' },\r\n    3: { acc: 2, desc: 'Golden Quarks I:' },\r\n    4: { acc: 2, desc: 'Cookie Upgrade 19:' },\r\n    5: { acc: 2, desc: 'No Singularity Upgrades:' },\r\n    6: { acc: 2, desc: 'Event:' },\r\n    7: { acc: 2, desc: 'Singularity Fast Forwards:' },\r\n    8: { acc: 2, desc: 'Golden Revolution II:' },\r\n    9: { acc: 2, desc: 'Immaculate Alchemy:' },\r\n    10: { acc: 2, desc: 'Total Quarks Coefficient:' }\r\n  }\r\n  for (let i = 0; i < arr.list.length; i++) {\r\n    const statGQMi = DOMCacheGetOrSet(`statGQMS${i + 1}`)\r\n    statGQMi.childNodes[0].textContent = map[i + 1].desc\r\n    DOMCacheGetOrSet(`sGQMS${i + 1}`).textContent = `x${format(arr.list[i], map[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sGQMST').textContent = `x${format(arr.mult, 3)}`\r\n}\r\n\r\nexport const loadAddCodeModifiersAndEffects = () => {\r\n  const intervalStats = addCodeInterval()\r\n  const capacityStats = addCodeMaxUses()\r\n  const availableCount = addCodeAvailableUses()\r\n  const timeToNext = addCodeTimeToNextUse()\r\n\r\n  // Add interval stats\r\n  const intervalMap: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 0, desc: 'Base:' },\r\n    2: { acc: 2, desc: 'PL-AT \u03B4 calculator:' },\r\n    3: { acc: 2, desc: 'PL-AT \u03A3 sing perk:' },\r\n    4: { acc: 2, desc: 'Ascension of Ant God:' },\r\n    5: { acc: 2, desc: 'Singularity factor:' }\r\n  }\r\n  intervalStats.list[0] /= 1000 // is originally in milliseconds, but players will expect it in seconds.\r\n\r\n  for (let i = 0; i < intervalStats.list.length; i++) {\r\n    const statAddIntervalI = DOMCacheGetOrSet(`stat+time${i + 1}`)\r\n    statAddIntervalI.childNodes[0].textContent = intervalMap[i + 1].desc\r\n    if (i == 0) {\r\n      DOMCacheGetOrSet(`s+time${i + 1}`).textContent = `${format(intervalStats.list[i], intervalMap[i + 1].acc, true)} sec`\r\n    } else {\r\n      DOMCacheGetOrSet(`s+time${i + 1}`).textContent = `x${format(intervalStats.list[i], intervalMap[i + 1].acc, true)}`\r\n    }\r\n  }\r\n\r\n  DOMCacheGetOrSet('s+timeT').textContent = `${format(intervalStats.time / 1000, 1)} sec`\r\n  if (availableCount != capacityStats.total) {\r\n    DOMCacheGetOrSet('s+next').textContent = `+1 in ${format(timeToNext, 1)} sec`  // is already in sec.\r\n  } else {\r\n    DOMCacheGetOrSet('s+next').textContent = ''\r\n  }\r\n\r\n  // Add capacity stats\r\n  const capacityMap: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 0, desc: 'Base:' },\r\n    2: { acc: 0, desc: 'PL-AT X:' },\r\n    3: { acc: 0, desc: 'PL-AT \u03B4:' },\r\n    4: { acc: 0, desc: 'PL-AT \u0393:' },\r\n    5: { acc: 0, desc: 'PL-AT _:' },\r\n    6: { acc: 3, desc: 'Singularity factor:' }\r\n  }\r\n\r\n  for (let i = 0; i < capacityStats.list.length; i++) {\r\n    const statAddIntervalI = DOMCacheGetOrSet(`stat+cap${i + 1}`)\r\n    statAddIntervalI.childNodes[0].textContent = capacityMap[i + 1].desc\r\n    const prefix = i==0 ? '' : (i == 5 ? 'x' : '+')\r\n    DOMCacheGetOrSet(`s+cap${i + 1}`).textContent = `${prefix}${format(capacityStats.list[i], capacityMap[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('s+capT').textContent = `${format(availableCount, 0)} / ${format(capacityStats.total, 0)}`\r\n\r\n  // TODO:  we also want to report on the effects of each add.\r\n  const addEffectStats = addCodeBonuses()\r\n\r\n  // Quark Bonus Rate; the bonus is typically applied when actually given to the player, rather than calculated before.\r\n  const qbr = player.worlds.applyBonus(1)\r\n\r\n  DOMCacheGetOrSet('stat+eff1').childNodes[0].textContent = 'Quarks: '\r\n  if (Math.abs(addEffectStats.maxQuarks - addEffectStats.minQuarks) >= 0.5) { // b/c floating-point errors\r\n    DOMCacheGetOrSet('s+eff1').textContent = `+${format(qbr * addEffectStats.minQuarks, 3)} ~ ${format(qbr * addEffectStats.maxQuarks, 3)}`\r\n  } else {\r\n    DOMCacheGetOrSet('s+eff1').textContent = `+${format(qbr * addEffectStats.quarks, 3)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('stat+eff2').childNodes[0].textContent = 'PL-AT X - bonus ascension time: '\r\n  DOMCacheGetOrSet('s+eff2').textContent = `+${format(addEffectStats.ascensionTimer, 2)} sec`\r\n\r\n  DOMCacheGetOrSet('stat+eff3').childNodes[0].textContent = 'PL-AT \u0393 - bonus GQ export time: '\r\n  DOMCacheGetOrSet('s+eff3').textContent = `+${format(addEffectStats.gqTimer, 2)} sec` // does it need a / 1000?\r\n\r\n  DOMCacheGetOrSet('stat+eff4').childNodes[0].textContent = 'PL-AT _ - bonus octeract time: '\r\n  DOMCacheGetOrSet('s+eff4').textContent = `+${format(addEffectStats.octeractTime, 2)} sec` // does it need a / 1000?\r\n  // Might be worth converting to raw octeracts awarded.  I don't have the calculator needed to test it, though.\r\n}\r\n\r\nexport const loadStatisticsAmbrosiaLuck = () => {\r\n  const arr = player.caches.ambrosiaLuck.flatten()\r\n  const map: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 0, desc: 'Irish Ants Singularity Perk' },\r\n    2: { acc: 0, desc: 'Octeract Ambrosia Luck Upgrade' },\r\n    3: { acc: 1, desc: 'Shop Upgrade Bonus' },\r\n    4: { acc: 0, desc: 'Ambrosia Luck Module I' },\r\n    5: { acc: 2, desc: 'Ambrosia Cube-Luck Hybrid Module I' },\r\n    6: { acc: 2, desc: 'Ambrosia Quark-Luck Hybrid Module I' },\r\n    7: { acc: 1, desc: 'Event Bonus' }\r\n  }\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const statALuckMi = DOMCacheGetOrSet(`statALuckM${i + 1}`)\r\n    statALuckMi.childNodes[0].textContent = map[i + 1].desc\r\n    DOMCacheGetOrSet(`sALuckM${i + 1}`).textContent = `+${format(arr[i], map[i + 1].acc, true)}`\r\n  }\r\n\r\n  const totalVal = arr[arr.length - 1]\r\n  DOMCacheGetOrSet('sALuckMT').innerHTML = `&#9752 ${format(totalVal, 0)}`\r\n}\r\n\r\nexport const loadStatisticsAmbrosiaGeneration = () => {\r\n  const arr = player.caches.ambrosiaGeneration.flatten()\r\n  const map: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 4, desc: 'Visited Ambrosia Subtab' },\r\n    2: { acc: 4, desc: 'Number of Blueberries' },\r\n    3: { acc: 4, desc: 'Shop Upgrade Bonus' },\r\n    4: { acc: 4, desc: 'Event Bonus' }\r\n  }\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const statAGenMi = DOMCacheGetOrSet(`statAGenM${i + 1}`)\r\n    statAGenMi.childNodes[0].textContent = map[i + 1].desc\r\n    DOMCacheGetOrSet(`sAGenM${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`\r\n  }\r\n\r\n  const totalVal = arr[arr.length - 1]\r\n  DOMCacheGetOrSet('sAGenMT').textContent = `${format(totalVal, 3, true)}`\r\n}\r\n\r\nexport const c15RewardUpdate = () => {\r\n  const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10, 1e11, 1e15, 2e15, 4e15, 7e15, 1e16, 2e16, 3.33e16, 3.33e16, 3.33e16, 2e17, 1.5e18]\r\n    type Key = keyof GlobalVariables['challenge15Rewards']\r\n    const keys = Object.keys(G.challenge15Rewards) as Key[]\r\n    const e = player.challenge15Exponent\r\n\r\n    for (const obj in G.challenge15Rewards) {\r\n      G.challenge15Rewards[obj as Key] = 1\r\n    }\r\n    G.challenge15Rewards.freeOrbs = 0\r\n\r\n    if (e >= exponentRequirements[0]) {\r\n      //All Cube Types 1 [750]\r\n      G.challenge15Rewards[keys[0]] = 1 + 1 / 50 * Math.log(e / 175) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[1]) {\r\n      //Ascension Count [1500]\r\n      G.challenge15Rewards[keys[1]] = 1 + 1 / 20 * Math.log(e / 375) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[2]) {\r\n      //Coin Exponent [3000]\r\n      G.challenge15Rewards[keys[2]] = 1 + 1 / 150 * Math.log(e / 750) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[3]) {\r\n      //Taxes [5000]\r\n      G.challenge15Rewards[keys[3]] = Math.pow(0.98, Math.log(e / 1.25e3) / Math.log(2))\r\n    }\r\n    if (e >= exponentRequirements[4]) {\r\n      //Obtainium [7500]\r\n      G.challenge15Rewards[keys[4]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75)\r\n    }\r\n    if (e >= exponentRequirements[5]) {\r\n      //Offerings [7500]\r\n      G.challenge15Rewards[keys[5]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75)\r\n    }\r\n    if (e >= exponentRequirements[6]) {\r\n      //Accelerator Boost (Uncorruptable) [10000]\r\n      G.challenge15Rewards[keys[6]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[7]) {\r\n      //Multiplier Boost (Uncorruptable) [10000]\r\n      G.challenge15Rewards[keys[7]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[8]) {\r\n      //Rune EXP [20000]\r\n      G.challenge15Rewards[keys[8]] = 1 + Math.pow(e / 2e4, 1.5)\r\n    }\r\n    if (e >= exponentRequirements[9]) {\r\n      //Rune Effectiveness [40000]\r\n      G.challenge15Rewards[keys[9]] = 1 + 1 / 33 * Math.log(e / 1e4) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[10]) {\r\n      //All Cube Types II [60000]\r\n      G.challenge15Rewards[keys[10]] = 1 + 1 / 100 * Math.log(e / 1.5e4) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[11]) {\r\n      //Chal 1-5 Scaling [100000]\r\n      G.challenge15Rewards[keys[11]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2))\r\n    }\r\n    if (e >= exponentRequirements[12]) {\r\n      //Chal 6-10 Scaling [100000]\r\n      G.challenge15Rewards[keys[12]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2))\r\n    }\r\n    if (e >= exponentRequirements[13]) {\r\n      //Ant Speed [200k]\r\n      G.challenge15Rewards[keys[13]] = Math.pow(1 + Math.log(e / 2e5) / Math.log(2), 4)\r\n    }\r\n    if (e >= exponentRequirements[14]) {\r\n      //Ant Bonus Levels [500k]\r\n      G.challenge15Rewards[keys[14]] = 1 + 1 / 20 * Math.log(e / 1.5e5) /Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[15]) {\r\n      //All Cube Types III [1m]\r\n      G.challenge15Rewards[keys[15]] = 1 + 1 / 150 * Math.log(e / 2.5e5) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[16]) {\r\n      //Talisman Effectiveness [3m]\r\n      G.challenge15Rewards[keys[16]] = 1 + 1 / 20 * Math.log(e / 7.5e5) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[17]) {\r\n      //Global Speed [10m]\r\n      G.challenge15Rewards[keys[17]] = 1 + 1 / 20 * Math.log(e / 2.5e6) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[18]) {\r\n      //Blessing Effectiveness [30m]\r\n      G.challenge15Rewards[keys[18]] = 1 + 1 / 5 * Math.pow(e / 3e7, 1 / 4)\r\n    }\r\n    if (e >= exponentRequirements[19]) {\r\n      //Tesseract Building Speed [100m]\r\n      G.challenge15Rewards[keys[19]] = 1 + 1 / 5 * Math.pow(e / 1e8, 2 / 3)\r\n    }\r\n    if (e >= exponentRequirements[20]) {\r\n      //All Cube Types IV [500m]\r\n      G.challenge15Rewards[keys[20]] = 1 + 1 / 200 * Math.log(e / 1.25e8) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[21]) {\r\n      //Spirit Effectiveness [2b]\r\n      G.challenge15Rewards[keys[21]] = 1 + 1 / 5 * Math.pow(e / 2e9, 1 / 4)\r\n    }\r\n    if (e >= exponentRequirements[22]) {\r\n      //Ascension Score [10b]\r\n      G.challenge15Rewards[keys[22]] = 1 + 1 / 4 * Math.pow(e / 1e10, 1 / 4)\r\n      if (e >= 1e20) {\r\n        G.challenge15Rewards[keys[22]] = 1 + 1 / 4 * Math.pow(e / 1e10, 1 / 8) * Math.pow(1e10, 1 / 8)\r\n      }\r\n    }\r\n    if (e >= exponentRequirements[23]) {\r\n      //Quark Gain [100b]\r\n      G.challenge15Rewards[keys[23]] = 1 + 1 / 100 * Math.log(e * 32 / 1e11) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[24]) {\r\n      //Unlock Hepteract gain [1Qa]\r\n      G.challenge15Rewards[keys[24]] = 2\r\n    }\r\n    if (e >= exponentRequirements[25]) {\r\n      //Unlock Challenge hepteract [2Qa]\r\n      void player.hepteractCrafts.challenge.unlock('the Hepteract of Challenge')\r\n    }\r\n    if (e >= exponentRequirements[26]) {\r\n      //All Cube Types V [4Qa]\r\n      G.challenge15Rewards[keys[25]] = 1 + 1 / 300 * Math.log2(e / (4e15 / 1024))\r\n    }\r\n    if (e >= exponentRequirements[27]) {\r\n      //Powder Gain [7Qa]\r\n      G.challenge15Rewards[keys[26]] = 1 + 1 / 50 * Math.log2(e / (7e15 / 32))\r\n    }\r\n    if (e >= exponentRequirements[28]) {\r\n      //Unlock Abyss Hepteract [10Qa]\r\n      void player.hepteractCrafts.abyss.unlock('the Hepteract of the Abyss')\r\n    }\r\n    if (e >= exponentRequirements[29]) {\r\n      //Constant Upgrade 2 [20Qa]\r\n      G.challenge15Rewards[keys[27]] = calculateSigmoid(1.05, e, 1e18)\r\n    }\r\n    if (e >= exponentRequirements[30]) {\r\n      //Unlock ACCELERATOR HEPT [33.33Qa]\r\n      void player.hepteractCrafts.accelerator.unlock('the Hepteract of Way Too Many Accelerators')\r\n    }\r\n    if (e >= exponentRequirements[31]) {\r\n      //Unlock ACCELERATOR BOOST HEPT [33.33Qa]\r\n      void player.hepteractCrafts.acceleratorBoost.unlock('the Hepteract of Way Too Many Accelerator Boosts')\r\n    }\r\n    if (e >= exponentRequirements[32]) {\r\n      //Unlock MULTIPLIER Hept [33.33Qa]\r\n      void player.hepteractCrafts.multiplier.unlock('the Hepteract of Way Too Many Multipliers')\r\n    }\r\n    if (e >= exponentRequirements[33]) {\r\n      // FREE Daily Orbs\r\n      G.challenge15Rewards.freeOrbs = Math.floor(200 * Math.pow(e / 2e17, 0.5))\r\n    }\r\n    if (e >= exponentRequirements[34]) {\r\n      // Ascension Speed\r\n      G.challenge15Rewards.ascensionSpeed = 1 + 5/100 + 2 * Math.log2(e / 1.5e18) / 100\r\n    }\r\n\r\n\r\n    updateDisplayC15Rewards()\r\n}\r\n\r\nconst updateDisplayC15Rewards = () => {\r\n  DOMCacheGetOrSet('c15Reward0Num').textContent = format(player.challenge15Exponent, 3, true)\r\n  DOMCacheGetOrSet('c15RequiredExponentNum').textContent = format(Decimal.pow(10, player.challenge15Exponent / challenge15ScoreMultiplier()), 0, true)\r\n  const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10, 1e11, 1e15, 2e15, 4e15, 7e15, 1e16, 2e16, 3.33e16, 3.33e16, 3.33e16, 2e17, 1.5e18]\r\n  const isNum: Record<number, boolean> = { // Shit solution to a shit problem -Platonic\r\n    0: true,\r\n    1: true,\r\n    2: true,\r\n    3: true,\r\n    4: true,\r\n    5: true,\r\n    6: true,\r\n    7: true,\r\n    8: true,\r\n    9: true,\r\n    10: true,\r\n    11: true,\r\n    12: true,\r\n    13: true,\r\n    14: true,\r\n    15: true,\r\n    16: true,\r\n    17: true,\r\n    18: true,\r\n    19: true,\r\n    20: true,\r\n    21: true,\r\n    22: true,\r\n    23: true,\r\n    24: false,\r\n    25: false,\r\n    26: true,\r\n    27: true,\r\n    28: false,\r\n    29: true,\r\n    30: false,\r\n    31: false,\r\n    32: false,\r\n    33: true,\r\n    34: true\r\n  }\r\n  const values = Object.values(G.challenge15Rewards)\r\n  let keepExponent: string | number = 'None'\r\n  let skip = 0\r\n  for (let i = 0; i < exponentRequirements.length; i++) {\r\n    if (keepExponent === 'None' && player.challenge15Exponent < exponentRequirements[i]) {\r\n      keepExponent = exponentRequirements[i]\r\n    }\r\n    if (player.challenge15Exponent >= exponentRequirements[i]) {\r\n      DOMCacheGetOrSet(`c15Reward${i + 1}Num`).textContent = (isNum[i]) ?\r\n        format(100 * values[i - skip] - 100, 2, true):\r\n        'Unlocked!'\r\n\r\n      if (!isNum[i] && i !== 24) { // TODO: This sucks -Platonic\r\n        skip += 1\r\n      }\r\n\r\n      if (i === 33) {\r\n        DOMCacheGetOrSet('c15Reward34Num').textContent = format(values[i - skip], 0, true)\r\n      }\r\n    }\r\n\r\n    DOMCacheGetOrSet(`c15Reward${i + 1}`).style.display = (player.challenge15Exponent >= exponentRequirements[i])? 'block': 'none'\r\n    DOMCacheGetOrSet('c15RewardList').textContent = typeof keepExponent  === 'string'\r\n      ? 'You have unlocked all reward types from Challenge 15!'\r\n      : 'Next reward type requires ' + format(keepExponent, 0, true) + ' exponent.'\r\n  }\r\n}\r\n\r\ninterface Stage { stage: number, tier: number, name: string, unlocked: boolean, reset: boolean }\r\n\r\nexport const gameStages = (): Stage[] => {\r\n  const stages: Stage[] = [\r\n    { stage: 0, tier: 1, name: 'start', unlocked: true, reset: true },\r\n    { stage: 1, tier: 1, name: 'start-prestige', unlocked: player.unlocks.prestige, reset: player.unlocks.prestige },\r\n    { stage: 2, tier: 2, name: 'prestige-transcend', unlocked: player.unlocks.transcend, reset: player.unlocks.transcend },\r\n    { stage: 3, tier: 3, name: 'transcend-reincarnate', unlocked: player.unlocks.reincarnate, reset: player.unlocks.reincarnate },\r\n    { stage: 4, tier: 4, name: 'reincarnate-ant', unlocked: player.firstOwnedAnts !== 0, reset: player.unlocks.reincarnate },\r\n    { stage: 5, tier: 4, name: 'ant-sacrifice', unlocked: player.achievements[173] === 1, reset: player.unlocks.reincarnate },\r\n    { stage: 6, tier: 4, name: 'sacrifice-ascension', unlocked: player.achievements[183] === 1, reset: player.unlocks.reincarnate },\r\n    { stage: 7, tier: 5, name: 'ascension-challenge10', unlocked: player.ascensionCount > 1, reset: player.achievements[183] === 1 },\r\n    { stage: 8, tier: 5, name: 'challenge10-challenge11', unlocked: player.achievements[197] === 1, reset: player.achievements[183] === 1 },\r\n    { stage: 9, tier: 5, name: 'challenge11-challenge12', unlocked: player.achievements[204] === 1, reset: player.achievements[183] === 1 },\r\n    { stage: 10, tier: 5, name: 'challenge12-challenge13', unlocked: player.achievements[211] === 1, reset: player.achievements[183] === 1 },\r\n    { stage: 11, tier: 5, name: 'challenge13-challenge14', unlocked: player.achievements[218] === 1, reset: player.achievements[183] === 1 },\r\n    { stage: 12, tier: 5, name: 'challenge14-w5x10max', unlocked: player.cubeUpgrades[50] >= 100000, reset: player.achievements[183] === 1 },\r\n    { stage: 13, tier: 5, name: 'w5x10max-alpha', unlocked: player.platonicUpgrades[5] > 0, reset: player.achievements[183] === 1 },\r\n    { stage: 14, tier: 5, name: 'alpha-p2x1x10', unlocked: player.platonicUpgrades[6] >= 10, reset: player.achievements[183] === 1 },\r\n    { stage: 15, tier: 5, name: 'p2x1x10-p3x1', unlocked: player.platonicUpgrades[11] > 0, reset: player.achievements[183] === 1 },\r\n    { stage: 16, tier: 5, name: 'p3x1-beta', unlocked: player.platonicUpgrades[10] > 0, reset: player.achievements[183] === 1 },\r\n    { stage: 17, tier: 5, name: 'beta-1e15-expo', unlocked: player.challenge15Exponent >= 1e15, reset: player.achievements[183] === 1 },\r\n    { stage: 18, tier: 5, name: '1e15-expo-omega', unlocked: player.platonicUpgrades[15] > 0, reset: player.achievements[183] === 1 },\r\n    { stage: 19, tier: 5, name: 'omega-singularity', unlocked: player.singularityCount > 0 && player.runelevels[6] > 0, reset: player.achievements[183] === 1 },\r\n    { stage: 20, tier: 6, name: 'singularity-exalt1x1', unlocked: player.singularityUpgrades.wowPass2.level > 0, reset: player.highestSingularityCount > 0 },\r\n    { stage: 21, tier: 6, name: 'exalt1x1-onemind', unlocked: player.singularityUpgrades.oneMind.level > 0, reset: player.highestSingularityCount > 0 },\r\n    { stage: 22, tier: 6, name: 'onemind-end', unlocked: player.singularityUpgrades.offeringAutomatic.level > 0, reset: player.highestSingularityCount > 0 },\r\n    { stage: 23, tier: 6, name: 'end-pen', unlocked: player.singularityUpgrades.ultimatePen.level > 0, reset: player.highestSingularityCount > 0 },\r\n    { stage: 24, tier: 6, name: 'pen', unlocked: false, reset: player.highestSingularityCount > 0 }\r\n  ]\r\n  return stages\r\n}\r\n\r\n// Calculate which progress in the game you are playing\r\n// The progress displayed is based on Progression Chat and Questions\r\n// This will be used to determine the behavior of the profile of the autopilot function in the future\r\nexport const synergismStage = (skipTier = player.singularityCount > 0 ? 5 : 0): string => {\r\n  const stages = gameStages()\r\n  for (let i = 0; i < stages.length; i++) {\r\n    const stage = stages[i]\r\n    if (skipTier < stage.tier && (!stage.reset || !stage.unlocked)) {\r\n      return stage.name\r\n    }\r\n  }\r\n  const stagesZero = stages[0]\r\n  return stagesZero.name\r\n}\r\n", "import Decimal from 'break_infinity.js'\r\nimport { Globals as G } from './Variables'\r\nimport { player, format, formatTimeShort } from './Synergism'\r\nimport { version } from './Config'\r\nimport { CalcECC } from './Challenges'\r\nimport { calculateSigmoidExponential, calculateMaxRunes, calculateRuneExpToLevel, calculateSummationLinear, calculateRecycleMultiplier, calculateCorruptionPoints, CalcCorruptionStuff, calculateAutomaticObtainium, calculateTimeAcceleration, calcAscensionCount, calculateCubeQuarkMultiplier, calculateSummationNonLinear, calculateTotalOcteractCubeBonus, calculateTotalOcteractQuarkBonus, octeractGainPerSecond, calculateTotalOcteractObtainiumBonus, calculateTotalOcteractOfferingBonus, calculateRequiredBlueberryTime, calculateAmbrosiaCubeMult, calculateAmbrosiaQuarkMult } from './Calculate'\r\nimport { displayRuneInformation } from './Runes'\r\nimport { showSacrifice } from './Ants'\r\nimport { sumContents } from './Utility'\r\nimport { getShopCosts, isShopUpgradeUnlocked, shopData, shopUpgradeTypes } from './Shop'\r\nimport { quarkHandler } from './Quark'\r\nimport type { Player, ZeroToFour } from './types/Synergism'\r\nimport type { hepteractTypes } from './Hepteracts'\r\nimport { hepteractTypeList } from './Hepteracts'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport type { IMultiBuy } from './Cubes'\r\nimport { calculateMaxTalismanLevel } from './Talismans'\r\nimport { getGoldenQuarkCost } from './singularity'\r\nimport { loadStatisticsUpdate } from './Statistics'\r\nimport i18next from 'i18next'\r\n\r\nexport const visualUpdateBuildings = () => {\r\n  if (G.currentTab !== 'buildings') {\r\n    return\r\n  }\r\n\r\n  //When you're in Building --> Coin, update these.\r\n  if (G.buildingSubTab === 'coin') {\r\n    // For the display of Coin Buildings\r\n    const upper = ['produceFirst', 'produceSecond', 'produceThird', 'produceFourth', 'produceFifth'] as const\r\n    const names = [null, 'workers', 'investments', 'printers', 'coinMints', 'alchemies']\r\n\r\n    let totalProductionDivisor = new Decimal(G.produceTotal)\r\n    if (totalProductionDivisor.equals(0)) {\r\n      totalProductionDivisor = new Decimal(1)\r\n    }\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const place = G[upper[i - 1]]\r\n      const ith = G.ordinals[i - 1 as ZeroToFour]\r\n\r\n      DOMCacheGetOrSet(`buildtext${2 * i - 1}`).textContent = i18next.t(`buildings.names.${names[i]}`, {\r\n        amount: format(player[`${ith}OwnedCoin` as const], 0, true),\r\n        gain: format(player[`${ith}GeneratedCoin` as const])\r\n      })\r\n\r\n      DOMCacheGetOrSet(`buycoin${i}`).textContent = i18next.t('buildings.costCoins', {\r\n        coins: format(player[`${ith}CostCoin` as const])\r\n      })\r\n\r\n      const percentage = Decimal\r\n        .fromMantissaExponent(place.mantissa / totalProductionDivisor.mantissa, place.exponent - totalProductionDivisor.exponent)\r\n        .times(100)\r\n\r\n      DOMCacheGetOrSet(`buildtext${2 * i}`).textContent = i18next.t('buildings.coinsPerSecond', {\r\n        coins: format((place.dividedBy(G.taxdivisor)).times(40), 2),\r\n        percent: format(percentage, 3)\r\n      })\r\n    }\r\n\r\n    DOMCacheGetOrSet('buildtext11').textContent = i18next.t('buildings.names.accelerators', {\r\n      amount: format(player.acceleratorBought, 0, true),\r\n      gain: format(G.freeAccelerator, 0, true)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buildtext12').textContent = i18next.t('buildings.acceleratorPower', {\r\n      power: format((G.acceleratorPower - 1) * 100, 2),\r\n      mult: format(G.acceleratorEffect, 2)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buildtext13').textContent = i18next.t('buildings.names.multipliers', {\r\n      amount: format(player.multiplierBought, 0, true),\r\n      gain: format(G.freeMultiplier, 0, true)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buildtext14').textContent = i18next.t('buildings.multiplierPower', {\r\n      power: format(G.multiplierPower, 2),\r\n      mult: format(G.multiplierEffect, 2)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buildtext15').textContent = i18next.t('buildings.names.acceleratorBoost', {\r\n      amount: format(player.acceleratorBoostBought, 0, true),\r\n      gain: format(G.freeAcceleratorBoost, 0, false)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buildtext16').textContent = i18next.t('buildings.acceleratorBoost', {\r\n      amount: format(G.tuSevenMulti * (1 + player.researches[16] / 50) * (1 + CalcECC('transcend', player.challengecompletions[2]) / 100), 2)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buyaccelerator').textContent = i18next.t('buildings.costCoins', { coins: format(player.acceleratorCost) })\r\n    DOMCacheGetOrSet('buymultiplier').textContent = i18next.t('buildings.costCoins', { coins: format(player.multiplierCost) })\r\n    DOMCacheGetOrSet('buyacceleratorboost').textContent = i18next.t('buildings.costDiamonds', {\r\n      diamonds: format(player.acceleratorBoostCost)\r\n    })\r\n\r\n    // update the tax text\r\n    let warning = ''\r\n    if (player.reincarnationCount > 0.5) {\r\n      warning = i18next.t('buildings.taxWarning', {\r\n        gain: format(Decimal.pow(10, G.maxexponent - Decimal.log(G.taxdivisorcheck, 10)))\r\n      })\r\n    }\r\n    DOMCacheGetOrSet('taxinfo').textContent = i18next.t('buildings.excessiveWealth', {\r\n      div: format(G.taxdivisor, 2),\r\n      warning\r\n    })\r\n  } else if (G.buildingSubTab === 'diamond') {\r\n    // For the display of Diamond Buildings\r\n    const upper = ['produceFirstDiamonds', 'produceSecondDiamonds', 'produceThirdDiamonds', 'produceFourthDiamonds', 'produceFifthDiamonds'] as const\r\n    const names = ['refineries', 'coalPlants', 'coalRigs', 'pickaxes', 'pandorasBoxes']\r\n    const perSecNames = ['crystal', 'ref', 'plants', 'rigs', 'pickaxes']\r\n\r\n    DOMCacheGetOrSet('prestigeshardinfo').textContent = i18next.t('buildings.crystalMult', {\r\n      crystals: format(player.prestigeShards, 2),\r\n      gain: format(G.prestigeMultiplier, 2)\r\n    })\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const place = G[upper[i-1]]\r\n      const ith = G.ordinals[i - 1 as ZeroToFour]\r\n\r\n      DOMCacheGetOrSet(`prestigetext${2 * i - 1}`).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\r\n        amount: format(player[`${ith}OwnedDiamonds` as const], 0, true),\r\n        gain: format(player[`${ith}GeneratedDiamonds` as const], 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`prestigetext${2 * i}`).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\r\n        amount: format((place).times(40), 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`buydiamond${i}`).textContent = i18next.t('buildings.costDiamonds', {\r\n        diamonds: format(player[`${ith}CostDiamonds` as const], 2)\r\n      })\r\n    }\r\n\r\n    if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\r\n      const p = Decimal.pow(10, Decimal.log(G.prestigePointGain.add(1), 10) - Decimal.log(player.prestigePoints.sub(1), 10))\r\n      DOMCacheGetOrSet('autoprestige').textContent = i18next.t('buildings.autoPrestige', {\r\n        name: 'Diamonds',\r\n        action: 'Prestige',\r\n        factor: format(Decimal.pow(10, player.prestigeamount)),\r\n        mult: format(p)\r\n      })\r\n    } else if (player.resettoggle1 === 2) {\r\n      DOMCacheGetOrSet('autoprestige').textContent = i18next.t('buildings.autoReincarnate', {\r\n        name: 'Prestige',\r\n        amount: player.prestigeamount,\r\n        timer: format(G.autoResetTimers.prestige, 1)\r\n      })\r\n    }\r\n  } else if (G.buildingSubTab === 'mythos') {\r\n    // For the display of Mythos Buildings\r\n    const upper = ['produceFirstMythos', 'produceSecondMythos', 'produceThirdMythos', 'produceFourthMythos', 'produceFifthMythos'] as const\r\n    const names = ['augments', 'enchantments', 'wizards', 'oracles', 'grandmasters']\r\n    const perSecNames = ['shards', 'augments', 'enchantments', 'wizards', 'oracles']\r\n\r\n    DOMCacheGetOrSet('transcendshardinfo').textContent = i18next.t('buildings.mythosYouHave', {\r\n      shards: format(player.transcendShards, 2),\r\n      mult: format(G.totalMultiplierBoost, 0, true)\r\n    })\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const place = G[upper[i-1]]\r\n      const ith = G.ordinals[i - 1 as ZeroToFour]\r\n\r\n      DOMCacheGetOrSet(`transcendtext${2 * i - 1}`).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\r\n        amount: format(player[`${ith}OwnedMythos` as const], 0, true),\r\n        gain: format(player[`${ith}GeneratedMythos` as const], 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`transcendtext${2 * i}`).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\r\n        amount: format((place).times(40), 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`buymythos${i}`).textContent = i18next.t('buildings.costMythos', {\r\n        mythos: format(player[`${ith}CostMythos` as const], 2)\r\n      })\r\n    }\r\n\r\n    if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\r\n      DOMCacheGetOrSet('autotranscend').textContent = i18next.t('buildings.autoPrestige', {\r\n        name: 'Mythos',\r\n        action: 'Prestige',\r\n        factor: format(Decimal.pow(10, player.transcendamount)),\r\n        mult: format(Decimal.pow(10, Decimal.log(G.transcendPointGain.add(1), 10) - Decimal.log(player.transcendPoints.add(1), 10)), 2)\r\n      })\r\n    }\r\n    if (player.resettoggle2 === 2) {\r\n      // TODO(@KhafraDev): i18n this\r\n      DOMCacheGetOrSet('autotranscend').textContent = `Transcend when the autotimer is at least ${player.transcendamount} real-life seconds. [Toggle number above]. Current timer: ${format(G.autoResetTimers.transcension, 1)}s.`\r\n    }\r\n  } else if (G.buildingSubTab === 'particle') {\r\n\r\n    // For the display of Particle Buildings\r\n    const upper = ['FirstParticles', 'SecondParticles', 'ThirdParticles', 'FourthParticles', 'FifthParticles'] as const\r\n    const names = ['protons', 'elements', 'pulsars', 'quasars', 'galacticNuclei']\r\n    const perSecNames = ['atoms', 'protons', 'elements', 'pulsars', 'quasars']\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const ith = G.ordinals[i - 1 as ZeroToFour]\r\n      const place = G[`produce${upper[i - 1]}` as const]\r\n\r\n      DOMCacheGetOrSet(`reincarnationtext${i}`).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\r\n        amount: format(player[`${ith}OwnedParticles` as const], 0, true),\r\n        gain: format(player[`${ith}GeneratedParticles` as const], 2)\r\n      })\r\n      DOMCacheGetOrSet(`reincarnationtext${i+5}`).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\r\n        amount: format((place).times(40), 2)\r\n      })\r\n      DOMCacheGetOrSet(`buyparticles${i}`).textContent = i18next.t('buildings.costParticles', {\r\n        particles: format(player[`${ith}CostParticles` as const], 2)\r\n      })\r\n    }\r\n\r\n    DOMCacheGetOrSet('reincarnationshardinfo').textContent = i18next.t('buildings.atomsYouHave', {\r\n      atoms: format(player.reincarnationShards, 2),\r\n      power: format(G.buildingPower, 4),\r\n      mult: format(G.reincarnationMultiplier)\r\n    })\r\n\r\n    DOMCacheGetOrSet('reincarnationCrystalInfo').textContent = i18next.t('buildings.thanksR2x14', {\r\n      mult: format(Decimal.pow(G.reincarnationMultiplier, 1 / 50), 3, false)\r\n    })\r\n\r\n    DOMCacheGetOrSet('reincarnationMythosInfo').textContent = i18next.t('buildings.thanksR2x15', {\r\n      mult: format(Decimal.pow(G.reincarnationMultiplier, 1 / 250), 3, false)\r\n    })\r\n\r\n    if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\r\n      DOMCacheGetOrSet('autoreincarnate').textContent = i18next.t('buildings.autoPrestige', {\r\n        name: 'Particles',\r\n        action: 'Reincarnate',\r\n        factor: format(Decimal.pow(10, player.reincarnationamount)),\r\n        mult: format(Decimal.pow(10, Decimal.log(G.reincarnationPointGain.add(1), 10) - Decimal.log(player.reincarnationPoints.add(1), 10)), 2)\r\n      })\r\n    } else if (player.resettoggle3 === 2) {\r\n      DOMCacheGetOrSet('autoreincarnate').textContent = i18next.t('buildings.autoReincarnate', {\r\n        name: 'Reincarnate',\r\n        amount: player.reincarnationamount,\r\n        timer: format(G.autoResetTimers.reincarnation, 1)\r\n      })\r\n    }\r\n  } else if (G.buildingSubTab === 'tesseract') { // eslint-disable-line @typescript-eslint/no-unnecessary-condition\r\n    const names = ['dot', 'vector', 'threeSpace', 'bentTime', 'hilbertSpace']\r\n    const perSecNames = ['constant', 'dot', 'vector', 'threeSpace', 'bentTime']\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const ascendBuildingI = `ascendBuilding${i as 1|2|3|4|5}` as const\r\n\r\n      DOMCacheGetOrSet(`ascendText${i}`).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\r\n        amount: format(player[ascendBuildingI].owned, 0, true),\r\n        gain: format(player[ascendBuildingI].generated, 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`ascendText${5 + i}`).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\r\n        amount: format(((G.ascendBuildingProduction as Record<string, Decimal>)[G.ordinals[i - 1]]), 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`buyTesseracts${i}`).textContent = i18next.t('buildings.costTesseracts', {\r\n        tesseracts: format(player[ascendBuildingI].cost, 0)\r\n      })\r\n    }\r\n\r\n    DOMCacheGetOrSet('tesseractInfo').textContent = i18next.t('buildings.tesseractsYouHave', {\r\n      tesseracts: format(player.wowTesseracts)\r\n    })\r\n\r\n    DOMCacheGetOrSet('ascendShardInfo').textContent = i18next.t('buildings.constantYouHave', {\r\n      const: format(player.ascendShards, 2),\r\n      amount: format(Math.pow(Decimal.log(player.ascendShards.add(1), 10) + 1, 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + (G.platonicBonusMultiplier[5] - 1)), 4, true)\r\n    })\r\n\r\n    if (player.resettoggle4 === 1 || player.resettoggle4 === 0) {\r\n      DOMCacheGetOrSet('autotessbuyeramount').textContent = i18next.t('buildings.autoTesseract', {\r\n        tesseracts: format(player.tesseractAutoBuyerAmount)\r\n      })\r\n    } else if (player.resettoggle4 === 2) {\r\n      DOMCacheGetOrSet('autotessbuyeramount').textContent = i18next.t('buildings.autoAscensionTesseract', {\r\n        percent: format(Math.min(100, player.tesseractAutoBuyerAmount))\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nexport const visualUpdateUpgrades = () => {}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nexport const visualUpdateAchievements = () => {}\r\n\r\nexport const visualUpdateRunes = () => {\r\n  if (G.currentTab !== 'runes') {\r\n    return\r\n  }\r\n  if (G.runescreen === 'runes') { //Placeholder and place work similarly to buildings, except for the specific Talismans.\r\n\r\n    const talismans = [\r\n      'rune1Talisman',\r\n      'rune2Talisman',\r\n      'rune3Talisman',\r\n      'rune4Talisman',\r\n      'rune5Talisman'\r\n    ] as const\r\n\r\n    DOMCacheGetOrSet('offeringCount').textContent = i18next.t('runes.offeringsYouHave', {\r\n      offerings: format(player.runeshards, 0, true)\r\n    })\r\n\r\n    for (let i = 1; i <= 7; i++) { //First one updates level, second one updates TNL, third updates orange bonus levels\r\n      let place = G[talismans[i-1]]\r\n      if (i > 5) {\r\n        place = 0\r\n      }\r\n      const runeLevel = player.runelevels[i - 1]\r\n      const maxLevel = calculateMaxRunes(i)\r\n      DOMCacheGetOrSet(`rune${i}level`).childNodes[0].textContent = i18next.t('cubes.cubeMetadata.level', {\r\n        value1: format(runeLevel),\r\n        value2: format(maxLevel)\r\n      })\r\n\r\n      if (runeLevel < maxLevel) {\r\n        DOMCacheGetOrSet(`rune${i}exp`).textContent = i18next.t('runes.TNL', { EXP: format(calculateRuneExpToLevel(i - 1) - player.runeexp[i - 1], 2) })\r\n      } else {\r\n        DOMCacheGetOrSet(`rune${i}exp`).textContent = i18next.t('runes.maxLevel')\r\n      }\r\n      if (i <= 5) {\r\n        DOMCacheGetOrSet(`bonusrune${i}`).textContent = i18next.t('runes.bonusAmount', {\r\n          x: format(7 * player.constantUpgrades[7] + Math.min(1e7, player.antUpgrades[8]! + G.bonusant9) + place)\r\n        })\r\n      } else {\r\n        DOMCacheGetOrSet(`bonusrune${i}`).textContent = i18next.t('runes.bonusNope')\r\n      }\r\n      displayRuneInformation(i, false)\r\n    }\r\n\r\n    const calculateRecycle = calculateRecycleMultiplier()\r\n    const allRuneExpAdditiveMultiplier = sumContents([\r\n      // Base amount multiplied per offering\r\n      1 * calculateRecycle,\r\n      // +1 if C1 completion\r\n      Math.min(1, player.highestchallengecompletions[1]),\r\n      // +0.10 per C1 completion\r\n      0.4 / 10 * player.highestchallengecompletions[1],\r\n      // Research 5x2\r\n      0.6 * player.researches[22],\r\n      // Research 5x3\r\n      0.3 * player.researches[23],\r\n      // Particle Upgrade 1x1\r\n      2 * player.upgrades[61]\r\n    ])\r\n\r\n    DOMCacheGetOrSet('offeringExperienceValue').textContent = i18next.t('runes.gainExp', {\r\n      amount: format(allRuneExpAdditiveMultiplier, 2, true)\r\n    })\r\n\r\n    DOMCacheGetOrSet('offeringRecycleInfo').textContent = i18next.t('runes.recycleChance', {\r\n      percent: format((1 - 1 / calculateRecycle) * 100, 2, true),\r\n      mult: format(calculateRecycle, 2, true)\r\n    })\r\n  }\r\n\r\n  if (G.runescreen === 'talismans') {\r\n    for (let i = 0; i < 7; i++) {\r\n      const maxTalismanLevel = calculateMaxTalismanLevel(i)\r\n      // TODO(@KhafraDev): i18n\r\n      DOMCacheGetOrSet(`talisman${i + 1}level`).textContent =\r\n        `${player.ascensionCount > 0 ? '' : 'Level '} ${format(player.talismanLevels[i])}/${format(maxTalismanLevel)}`\r\n    }\r\n  }\r\n\r\n  if (G.runescreen === 'blessings') {\r\n    const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1]\r\n    let t = 0\r\n    for (let i = 1; i <= 5; i++) {\r\n      DOMCacheGetOrSet(`runeBlessingLevel${i}Value`).innerHTML = i18next.t('runes.blessings.blessingLevel', {\r\n        amount: format(player.runeBlessingLevels[i])\r\n      })\r\n\r\n      DOMCacheGetOrSet(`runeBlessingPower${i}Value1`).innerHTML = i18next.t('runes.blessings.blessingPower', {\r\n        reward: i18next.t(`runes.blessings.rewards.${i - 1}`),\r\n        value: format(G.runeBlessings[i]),\r\n        speed: format(1 - t + blessingMultiplierArray[i] * G.effectiveRuneBlessingPower[i], 4, true)\r\n      })\r\n\r\n      const levelsPurchasable = calculateSummationLinear(player.runeBlessingLevels[i], G.blessingBaseCost, player.runeshards, player.runeBlessingBuyAmount)[0] - player.runeBlessingLevels[i]\r\n      levelsPurchasable > 0\r\n        ? DOMCacheGetOrSet(`runeBlessingPurchase${i}`).classList.add('runeButtonsAvailable')\r\n        : DOMCacheGetOrSet(`runeBlessingPurchase${i}`).classList.remove('runeButtonsAvailable')\r\n\r\n      DOMCacheGetOrSet(`runeBlessingPurchase${i}`).innerHTML = i18next.t('runes.blessings.increaseLevel', {\r\n        amount: format(Math.max(1, levelsPurchasable)),\r\n        offerings: format(Math.max(G.blessingBaseCost * (1 + player.runeBlessingLevels[i]), calculateSummationLinear(player.runeBlessingLevels[i], G.blessingBaseCost, player.runeshards, player.runeBlessingBuyAmount)[1]))\r\n      })\r\n\r\n      if (i === 5) {\r\n        t = 1\r\n      }\r\n    }\r\n  }\r\n\r\n  if (G.runescreen === 'spirits') {\r\n    const spiritMultiplierArray = [0, 1, 1, 20, 1, 100]\r\n    const subtract = [0, 0, 0, 1, 0, 0]\r\n    for (let i = 1; i <= 5; i++) {\r\n      spiritMultiplierArray[i] *= (calculateCorruptionPoints() / 400)\r\n\r\n      DOMCacheGetOrSet(`runeSpiritLevel${i}Value`).innerHTML = i18next.t('runes.spirits.spiritLevel', {\r\n        amount: format(player.runeSpiritLevels[i])\r\n      })\r\n\r\n      DOMCacheGetOrSet(`runeSpiritPower${i}Value1`).innerHTML = i18next.t('runes.spirits.spiritPower', {\r\n        reward: i18next.t(`runes.spirits.rewards.${i - 1}`),\r\n        value: format(G.runeSpirits[i]),\r\n        speed: format(1 - subtract[i] + spiritMultiplierArray[i] * G.effectiveRuneSpiritPower[i], 4, true)\r\n      })\r\n\r\n      const levelsPurchasable = calculateSummationLinear(player.runeSpiritLevels[i], G.spiritBaseCost, player.runeshards, player.runeSpiritBuyAmount)[0] - player.runeSpiritLevels[i]\r\n      levelsPurchasable > 0\r\n        ? DOMCacheGetOrSet(`runeSpiritPurchase${i}`).classList.add('runeButtonsAvailable')\r\n        : DOMCacheGetOrSet(`runeSpiritPurchase${i}`).classList.remove('runeButtonsAvailable')\r\n\r\n      DOMCacheGetOrSet(`runeSpiritPurchase${i}`).innerHTML = i18next.t('runes.blessings.increaseLevel', {\r\n        amount: format(Math.max(1, levelsPurchasable)),\r\n        offerings: format(Math.max(G.spiritBaseCost * (1 + player.runeSpiritLevels[i]), calculateSummationLinear(player.runeSpiritLevels[i], G.spiritBaseCost, player.runeshards, player.runeSpiritBuyAmount)[1]))\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const visualUpdateChallenges = () => {\r\n  if (G.currentTab !== 'challenge') {\r\n    return\r\n  }\r\n  if (player.researches[150] > 0) {\r\n    DOMCacheGetOrSet('autoIncrementerAmount').innerHTML = i18next.t('challenges.autoTimer', {\r\n      time: format(G.autoChallengeTimerIncrement, 2)\r\n    })\r\n  }\r\n}\r\n\r\nexport const visualUpdateResearch = () => {\r\n  if (G.currentTab !== 'research') {\r\n    return\r\n  }\r\n\r\n  if (player.researches[61] > 0) {\r\n    DOMCacheGetOrSet('automaticobtainium').textContent = i18next.t('researches.thanksToResearches', {\r\n      x: format(calculateAutomaticObtainium() * calculateTimeAcceleration().mult, 3, true)\r\n    })\r\n  }\r\n}\r\n\r\nexport const visualUpdateAnts = () => {\r\n  if (G.currentTab !== 'ant') {\r\n    return\r\n  }\r\n  DOMCacheGetOrSet('crumbcount').textContent = i18next.t('ants.youHaveGalacticCrumbs', {\r\n    x: format(player.antPoints, 2),\r\n    y: format(G.antOneProduce, 2),\r\n    z: format(Decimal.pow(Decimal.max(1, player.antPoints), 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[1]! + G.bonusant2) / 5000 * 500 / 499)))\r\n  })\r\n\r\n  const mode = player.autoAntSacrificeMode === 2 ? i18next.t('ants.modeRealTime') : i18next.t('ants.modeInGameTime')\r\n  const timer = player.autoAntSacrificeMode === 2 ? player.antSacrificeTimerReal : player.antSacrificeTimer\r\n\r\n  DOMCacheGetOrSet('autoAntSacrifice').textContent = i18next.t('ants.sacrificeWhenTimer', {\r\n    x: player.autoAntSacTimer,\r\n    y: mode,\r\n    z: format(timer, 2)\r\n  })\r\n\r\n  if (player.achievements[173] === 1) {\r\n    DOMCacheGetOrSet('antSacrificeTimer').textContent = formatTimeShort(player.antSacrificeTimer)\r\n    showSacrifice()\r\n  }\r\n}\r\n\r\ninterface cubeNames {\r\n    cube: number\r\n    tesseract: number\r\n    hypercube: number\r\n    platonicCube: number\r\n}\r\n\r\nexport const visualUpdateCubes = () => {\r\n  if (G.currentTab !== 'cube') {\r\n    return\r\n  }\r\n\r\n  const cubeMult = (player.shopUpgrades.cubeToQuark) ? 1.5 : 1\r\n  const tesseractMult = (player.shopUpgrades.tesseractToQuark) ? 1.5 : 1\r\n  const hypercubeMult = (player.shopUpgrades.hypercubeToQuark) ? 1.5 : 1\r\n  const platonicMult = 1.5\r\n\r\n  const toNextQuark: cubeNames = {\r\n    cube: Number(player.wowCubes.checkCubesToNextQuark(5, cubeMult, player.cubeQuarkDaily, player.cubeOpenedDaily)),\r\n    tesseract: Number(player.wowTesseracts.checkCubesToNextQuark(7, tesseractMult, player.tesseractQuarkDaily, player.tesseractOpenedDaily)),\r\n    hypercube: Number(player.wowHypercubes.checkCubesToNextQuark(10, hypercubeMult, player.hypercubeQuarkDaily, player.hypercubeOpenedDaily)),\r\n    platonicCube: Number(player.wowPlatonicCubes.checkCubesToNextQuark(15, platonicMult, player.platonicCubeQuarkDaily, player.platonicCubeOpenedDaily))\r\n  }\r\n\r\n  const names = Object.keys(toNextQuark) as (keyof cubeNames)[]\r\n  for (const name of names) {\r\n    DOMCacheGetOrSet(`${name}QuarksToday`).innerHTML = i18next.t(`wowCubes.quarks.${name}QuarksToday`, { amount: format(player[`${name}QuarkDaily` as const]) })\r\n    DOMCacheGetOrSet(`${name}QuarksOpenToday`).innerHTML = i18next.t(`wowCubes.quarks.${name}QuarksOpenToday`, { amount: format(player[`${name}OpenedDaily` as const]) })\r\n    DOMCacheGetOrSet(`${name}QuarksOpenRequirement`).innerHTML = i18next.t(`wowCubes.quarks.${name}QuarksOpenRequirement`, { amount: format(Math.max(1, toNextQuark[name])) })\r\n\r\n    // Change color of requirement text if 1 or less required :D\r\n    DOMCacheGetOrSet(`${name}QuarksOpenRequirement`).style.color = (Math.max(1, toNextQuark[name]) === 1)? 'gold': 'white'\r\n  }\r\n\r\n  let accuracy\r\n  switch (player.subtabNumber) {\r\n    case 0: {\r\n      if (player.autoOpenCubes) {\r\n        DOMCacheGetOrSet('openCubes').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openCubes, 0) })\r\n      }\r\n      DOMCacheGetOrSet('cubeQuantity').innerHTML = i18next.t('wowCubes.cubes.inventory', { amount: format(player.wowCubes, 0, true) })\r\n      const cubeArray = [null, player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed]\r\n\r\n      accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 1, 4, 3]\r\n      for (let i = 1; i <= 10; i++) {\r\n        let augmentAccuracy = 0\r\n        if (cubeArray[i]! >= 1000 && i !== 6) {\r\n          augmentAccuracy += 2\r\n        }\r\n        const aestheticMultiplier = (i === 1 || i === 8 || i === 9) ? 1: 100\r\n        DOMCacheGetOrSet(`cube${i}Bonus`).innerHTML = i18next.t(`wowCubes.cubes.items.${i}`, { amount: format(cubeArray[i], 0, true), bonus: format(aestheticMultiplier * (G.cubeBonusMultiplier[i]! - 1), accuracy[i]! + augmentAccuracy, true) })\r\n      }\r\n      DOMCacheGetOrSet('cubeBlessingsTotal').innerHTML = i18next.t('wowCubes.cubes.total', { amount: format(sumContents(cubeArray.slice(1) as number[]), 0, true) })\r\n      break\r\n    }\r\n    case 1: {\r\n      if (player.autoOpenTesseracts) {\r\n        DOMCacheGetOrSet('openTesseracts').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openTesseracts, 0) })\r\n      }\r\n      DOMCacheGetOrSet('tesseractQuantity').innerHTML = i18next.t('wowCubes.tesseracts.inventory', { amount: format(player.wowTesseracts, 0, true) })\r\n      const tesseractArray = [null, player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\r\n      accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\r\n      for (let i = 1; i <= 10; i++) {\r\n        let augmentAccuracy = 0\r\n        if (tesseractArray[i]! >= 1000 && i !== 6) {\r\n          augmentAccuracy += 2\r\n        }\r\n        DOMCacheGetOrSet(`tesseract${i}Bonus`).innerHTML = i18next.t(`wowCubes.tesseracts.items.${i}`, { amount: format(tesseractArray[i], 0, true), bonus: format(100 * (G.tesseractBonusMultiplier[i]! - 1), accuracy[i]! + augmentAccuracy, true) })\r\n      }\r\n      DOMCacheGetOrSet('tesseractBlessingsTotal').innerHTML = i18next.t('wowCubes.tesseracts.total', { amount: format(sumContents(tesseractArray.slice(1) as number[]), 0, true) })\r\n      break\r\n    }\r\n    case 2: {\r\n      if (player.autoOpenHypercubes) {\r\n        DOMCacheGetOrSet('openHypercubes').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openHypercubes, 0) })\r\n      }\r\n      DOMCacheGetOrSet('hypercubeQuantity').innerHTML = i18next.t('wowCubes.hypercubes.inventory', { amount: format(player.wowHypercubes, 0, true) })\r\n      const hypercubeArray = [null, player.hypercubeBlessings.accelerator, player.hypercubeBlessings.multiplier, player.hypercubeBlessings.offering, player.hypercubeBlessings.runeExp, player.hypercubeBlessings.obtainium, player.hypercubeBlessings.antSpeed, player.hypercubeBlessings.antSacrifice, player.hypercubeBlessings.antELO, player.hypercubeBlessings.talismanBonus, player.hypercubeBlessings.globalSpeed]\r\n      accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\r\n      for (let i = 1; i <= 10; i++) {\r\n        let augmentAccuracy = 0\r\n        if (hypercubeArray[i]! >= 1000) {\r\n          augmentAccuracy += 2\r\n        }\r\n        DOMCacheGetOrSet(`hypercube${i}Bonus`).innerHTML = i18next.t(`wowCubes.hypercubes.items.${i}`, { amount: format(hypercubeArray[i], 0, true), bonus: format(100 * (G.hypercubeBonusMultiplier[i]! - 1), accuracy[i]! + augmentAccuracy, true) })\r\n      }\r\n      DOMCacheGetOrSet('hypercubeBlessingsTotal').innerHTML = i18next.t('wowCubes.hypercubes.total', { amount: format(sumContents(hypercubeArray.slice(1) as number[]), 0, true) })\r\n      break\r\n    }\r\n    case 3: {\r\n      if (player.autoOpenPlatonicsCubes) {\r\n        DOMCacheGetOrSet('openPlatonicCube').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openPlatonicsCubes, 0) })\r\n      }\r\n      DOMCacheGetOrSet('platonicQuantity').innerHTML = i18next.t('wowCubes.platonics.inventory', { amount: format(player.wowPlatonicCubes, 0, true) })\r\n      const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed]\r\n      const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4]\r\n      accuracy = [5, 5, 5, 5, 2, 3, 3, 2]\r\n      for (let i = 0; i < platonicArray.length; i++) {\r\n        let augmentAccuracy = 0\r\n        if (platonicArray[i] >= DRThreshold[i]) {\r\n          augmentAccuracy += 1\r\n        }\r\n        DOMCacheGetOrSet(`platonicCube${i+1}Bonus`).innerHTML = i18next.t(`wowCubes.platonics.items.${i+1}`, { amount: format(platonicArray[i], 0, true), bonus: format(100 * (G.platonicBonusMultiplier[i] - 1), accuracy[i] + augmentAccuracy, true) })\r\n      }\r\n      DOMCacheGetOrSet('platonicBlessingsTotal').innerHTML = i18next.t('wowCubes.platonics.total', { amount: format(sumContents(platonicArray), 0, true) })\r\n      break\r\n    }\r\n    case 4:\r\n      DOMCacheGetOrSet('cubeAmount2').textContent = `You have ${format(player.wowCubes, 0, true)} Wow! Cubes =)`\r\n      break\r\n    case 5:\r\n      break\r\n    case 6:\r\n      DOMCacheGetOrSet('hepteractQuantity').innerHTML = i18next.t('wowCubes.hepteractForge.youPossessHepteracts', {\r\n        x: format(player.wowAbyssals, 0, true)\r\n      })\r\n\r\n      //Update the grid\r\n      hepteractTypeList.forEach((type) => {\r\n        UpdateHeptGridValues(type)\r\n      })\r\n\r\n      //orbs\r\n      DOMCacheGetOrSet('heptGridOrbBalance').textContent = format(player.overfluxOrbs)\r\n      DOMCacheGetOrSet('heptGridOrbEffect').textContent = format(100 * (-1 + calculateCubeQuarkMultiplier()), 2, true) + '%'\r\n\r\n      //powder\r\n      DOMCacheGetOrSet('heptGridPowderBalance').textContent = format(player.overfluxPowder)\r\n      DOMCacheGetOrSet('heptGridPowderWarps').textContent = format(player.dailyPowderResetUses)\r\n      break\r\n    default:\r\n      // console.log(`player.subtabNumber (${player.subtabNumber}) was outside of the allowed range (${subTabsInMainTab(8).subTabList.length}) for the cube tab`);\r\n      break\r\n  }\r\n}\r\n\r\nconst UpdateHeptGridValues = (type: hepteractTypes) => {\r\n  const text = type + 'ProgressBarText'\r\n  const bar = type + 'ProgressBar'\r\n  const textEl = DOMCacheGetOrSet(text)\r\n  const barEl = DOMCacheGetOrSet(bar)\r\n  const unlocked = player.hepteractCrafts[type].UNLOCKED\r\n\r\n  if (!unlocked) {\r\n    textEl.textContent = 'LOCKED'\r\n    barEl.style.width = '100%'\r\n    barEl.style.backgroundColor = 'var(--hepteract-bar-red)'\r\n  } else {\r\n    const balance = player.hepteractCrafts[type].BAL\r\n    const cap = player.hepteractCrafts[type].computeActualCap()\r\n    const barWidth = Math.round((balance / cap) * 100)\r\n\r\n    let barColor = ''\r\n    if (barWidth < 34) {\r\n      barColor = 'var(--hepteract-bar-red)'\r\n    } else if (barWidth >= 34 && barWidth < 68) {\r\n      barColor = 'var(--hepteract-bar-yellow)'\r\n    } else {\r\n      barColor = 'var(--hepteract-bar-green)'\r\n    }\r\n\r\n    textEl.textContent = `${format(balance)} / ${format(cap)}`\r\n    barEl.style.width = `${barWidth}%`\r\n    barEl.style.backgroundColor = barColor\r\n  }\r\n}\r\n\r\nexport const visualUpdateCorruptions = () => {\r\n  if (G.currentTab !== 'traits') {\r\n    return\r\n  }\r\n\r\n  const metaData = CalcCorruptionStuff()\r\n  const ascCount = calcAscensionCount()\r\n  DOMCacheGetOrSet('autoAscend').innerHTML = player.autoAscendMode === 'c10Completions' ?\r\n    i18next.t('corruptions.autoAscend.c10Completions', { input: format(player.autoAscendThreshold), completions: format(player.challengecompletions[10]) }):\r\n    i18next.t('corruptions.autoAscend.realTime', { input: format(player.autoAscendThreshold), time: format(player.ascensionCounterRealReal) })\r\n    /*DOMCacheGetOrSet('autoAscendText').textContent = player.autoAscendMode === 'c10Completions' ? ' you\\'ve completed Sadistic Challenge I a total of ' : ' the timer is at least ';\r\n    DOMCacheGetOrSet('autoAscendMetric').textContent = format(player.autoAscendThreshold);\r\n    DOMCacheGetOrSet('autoAscendText2').textContent = player.autoAscendMode === 'c10Completions' ? ' times, Currently ' : ' seconds (Real-time), Currently ';\r\n    DOMCacheGetOrSet('autoAscendMetric2').textContent = player.autoAscendMode === 'c10Completions' ? String(player.challengecompletions[10]) : format(player.ascensionCounterRealReal);*/\r\n  DOMCacheGetOrSet('corruptionBank').innerHTML = i18next.t('corruptions.corruptionBank', { number: format(metaData[0], 0, true) })\r\n  DOMCacheGetOrSet('corruptionScore').innerHTML = i18next.t('corruptions.corruptionScore', { ascScore: format(metaData[1], 1, true), corrMult: format(metaData[2], 1, true), bonusMult: format(metaData[9], 2, true), totalScore: format(metaData[3], 1, true) })\r\n  DOMCacheGetOrSet('corruptionCubes').innerHTML = i18next.t('corruptions.corruptionCubes', { cubeAmount: format(metaData[4], 0, true) })\r\n  DOMCacheGetOrSet('corruptionTesseracts').innerHTML = i18next.t('corruptions.corruptionTesseracts', { tesseractAmount: format(metaData[5], 0, true) })\r\n  DOMCacheGetOrSet('corruptionHypercubes').innerHTML = i18next.t('corruptions.corruptionHypercubes', { hypercubeAmount: format(metaData[6], 0, true) })\r\n  DOMCacheGetOrSet('corruptionPlatonicCubes').innerHTML = i18next.t('corruptions.corruptionPlatonics', { platonicAmount: format(metaData[7], 0, true) })\r\n  DOMCacheGetOrSet('corruptionHepteracts').innerHTML = i18next.t('corruptions.corruptionHepteracts', { hepteractAmount: format(metaData[8], 0, true) })\r\n  DOMCacheGetOrSet('corruptionAntExponent').innerHTML = i18next.t('corruptions.antExponent', { exponent: format((1 - 0.9 / 90 * sumContents(player.usedCorruptions)) * G.extinctionMultiplier[player.usedCorruptions[7]], 3) })\r\n  DOMCacheGetOrSet('corruptionSpiritBonus').innerHTML = i18next.t('corruptions.spiritBonus', { multiplier: format(calculateCorruptionPoints()/400, 2, true) })\r\n  DOMCacheGetOrSet('corruptionAscensionCount').style.display = ascCount > 1 ? 'block' : 'none'\r\n\r\n  if (ascCount > 1) {\r\n    DOMCacheGetOrSet('corruptionAscensionCount').innerHTML = i18next.t('corruptions.ascensionCount', { ascCount: format(calcAscensionCount()) })\r\n  }\r\n}\r\n\r\nexport const visualUpdateSettings = () => {\r\n  if (G.currentTab !== 'settings') {\r\n    return\r\n  }\r\n\r\n  if (player.subtabNumber === 0) {\r\n    DOMCacheGetOrSet('saveString').textContent = i18next.t('settings.currently', {\r\n      x: player.saveString.replace('$VERSION$', `v${version}`)\r\n    })\r\n\r\n    const quarkData = quarkHandler()\r\n    const onExportQuarks = quarkData.gain\r\n    const maxExportQuarks = quarkData.capacity\r\n\r\n    let goldenQuarkMultiplier = 1\r\n    goldenQuarkMultiplier *= 1 + player.worlds.BONUS / 100\r\n    goldenQuarkMultiplier *= (player.highestSingularityCount >= 100 ? 1 + player.highestSingularityCount / 50 : 1)\r\n\r\n    DOMCacheGetOrSet('quarktimerdisplay').textContent = i18next.t('settings.exportQuark', {\r\n      x: format((3600 / (quarkData.perHour) - (player.quarkstimer % (3600.00001 / (quarkData.perHour)))), 2),\r\n      y: player.worlds.toString(1)\r\n    })\r\n    DOMCacheGetOrSet('quarktimeramount').textContent = i18next.t('settings.quarksOnExport', {\r\n      x: player.worlds.toString(onExportQuarks),\r\n      y: player.worlds.toString(maxExportQuarks)\r\n    })\r\n\r\n    DOMCacheGetOrSet('goldenQuarkTimerDisplay').textContent = i18next.t('settings.exportGoldenQuark', {\r\n      x: format(3600 / Math.max(1, +player.singularityUpgrades.goldenQuarks3.getEffect().bonus) - (player.goldenQuarksTimer % (3600.00001 / Math.max(1, +player.singularityUpgrades.goldenQuarks3.getEffect().bonus)))),\r\n      y: format(goldenQuarkMultiplier, 2, true)\r\n    })\r\n\r\n    DOMCacheGetOrSet('goldenQuarkTimerAmount').textContent = i18next.t('settings.goldenQuarksOnExport', {\r\n      x: format(Math.floor(player.goldenQuarksTimer * +player.singularityUpgrades.goldenQuarks3.getEffect().bonus/ 3600) * goldenQuarkMultiplier, 2),\r\n      y: format(Math.floor(168 * +player.singularityUpgrades.goldenQuarks3.getEffect().bonus * goldenQuarkMultiplier))\r\n    })\r\n  }\r\n  if (player.subtabNumber === 3) {\r\n    loadStatisticsUpdate()\r\n  }\r\n}\r\n\r\nexport const visualUpdateSingularity = () => {\r\n  if (G.currentTab !== 'singularity') {\r\n    return\r\n  }\r\n  if (player.subtabNumber === 0) {\r\n    DOMCacheGetOrSet('goldenQuarkamount').textContent = i18next.t('singularity.goldenQuarkAmount', { goldenQuarks: format(player.goldenQuarks, 0, true) })\r\n\r\n    const keys = Object.keys(player.singularityUpgrades) as (keyof Player['singularityUpgrades'])[]\r\n    const val = G.shopEnhanceVision\r\n\r\n    for (const key of keys) {\r\n      if (key === 'offeringAutomatic') {\r\n        continue\r\n      }\r\n      const singItem = player.singularityUpgrades[key]\r\n      const el = DOMCacheGetOrSet(`${String(key)}`)\r\n      if (singItem.maxLevel !== -1 && singItem.level >= singItem.computeMaxLevel()) {\r\n        el.style.filter = val ? 'brightness(.9)' : 'none'\r\n      } else if  (singItem.getCostTNL() > player.goldenQuarks || player.singularityCount < singItem.minimumSingularity) {\r\n        el.style.filter = val ? 'grayscale(.9) brightness(.8)' : 'none'\r\n      } else if (singItem.maxLevel === -1 || singItem.level < singItem.computeMaxLevel()) {\r\n        if (singItem.freeLevels > singItem.level) {\r\n          el.style.filter = val ? 'blur(1px) invert(.9) saturate(200)' : 'none'\r\n        } else {\r\n          el.style.filter = val ? 'invert(.9) brightness(1.1)' : 'none'\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (player.subtabNumber === 3) {\r\n    const keys = Object.keys(player.octeractUpgrades) as (keyof Player['octeractUpgrades'])[]\r\n    const val = G.shopEnhanceVision\r\n\r\n    for (const key of keys) {\r\n      const octItem = player.octeractUpgrades[key]\r\n      const el = DOMCacheGetOrSet(`${String(key)}`)\r\n      if (octItem.maxLevel !== -1 && octItem.level >= octItem.maxLevel) {\r\n        el.style.filter = val ? 'brightness(.9)' : 'none'\r\n      } else if  (octItem.getCostTNL() > player.wowOcteracts) {\r\n        el.style.filter = val ? 'grayscale(.9) brightness(.8)' : 'none'\r\n      } else if (octItem.maxLevel === -1 || octItem.level < octItem.maxLevel) {\r\n        if (octItem.freeLevels > octItem.level) {\r\n          el.style.filter = val ? 'blur(2px) invert(.9) saturate(200)' : 'none'\r\n        } else {\r\n          el.style.filter = val ? 'invert(.9) brightness(1.1)' : 'none'\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const shopMouseover = (value: boolean) => {\r\n  G.shopEnhanceVision = value\r\n}\r\n\r\nexport const visualUpdateOcteracts = () => {\r\n  if (G.currentTab !== 'singularity') {\r\n    return\r\n  }\r\n  DOMCacheGetOrSet('octeractAmount').innerHTML = i18next.t('octeract.amount', { octeracts: format(player.wowOcteracts, 2, true, true, true) })\r\n\r\n  const perSecond = octeractGainPerSecond()\r\n\r\n  DOMCacheGetOrSet('secondsPerOcteract').style.display = perSecond < 1 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('secondsPerOcteract').innerHTML = i18next.t('octeract.secondsPerOcteract', { seconds: format(1 / perSecond, 2, true) })\r\n  DOMCacheGetOrSet('octeractPerSeconds').style.display = perSecond >= 1 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('octeractPerSeconds').innerHTML = i18next.t('octeract.octeractsPerSecond', { octeracts: format(perSecond, 2, true) })\r\n\r\n  const cTOCB = (calculateTotalOcteractCubeBonus() - 1) * 100\r\n  const cTOQB = (calculateTotalOcteractQuarkBonus() - 1) * 100\r\n  const cTOOB = (calculateTotalOcteractOfferingBonus() - 1) * 100\r\n  const cTOOOB = (calculateTotalOcteractObtainiumBonus() - 1) * 100\r\n  DOMCacheGetOrSet('totalOcteractAmount').innerHTML = i18next.t('octeract.totalGenerated', { octeracts: format(player.totalWowOcteracts, 2, true, true, true) })\r\n  DOMCacheGetOrSet('totalOcteractCubeBonus').style.display = cTOCB >= 0.001 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('totalOcteractQuarkBonus').style.display = cTOQB >= 0.001 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('totalOcteractOfferingBonus').style.display = cTOOB >= 0.001 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('totalOcteractObtainiumBonus').style.display = cTOOOB >= 0.001 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('totalOcteractCubeBonus').innerHTML = i18next.t('octeract.generatedCubeBonus', { cubeBonus: format(cTOCB, 3, true) })\r\n  DOMCacheGetOrSet('totalOcteractQuarkBonus').innerHTML = i18next.t('octeract.generatedQuarkBonus', { quarkBonus: format(cTOQB, 3, true) })\r\n  DOMCacheGetOrSet('totalOcteractOfferingBonus').innerHTML = i18next.t('octeract.generatedOfferingBonus', { offeringBonus: format(cTOOB, 3, true) })\r\n  DOMCacheGetOrSet('totalOcteractObtainiumBonus').innerHTML = i18next.t('octeract.generatedObtainiumBonus', { obtainiumBonus: format(cTOOOB, 3, true) })\r\n}\r\n\r\nexport const visualUpdateAmbrosia = () => {\r\n  if (G.currentTab !== 'singularity') {\r\n    return\r\n  }\r\n\r\n  const luck = player.caches.ambrosiaLuck.totalVal\r\n  const guaranteed = 1 + Math.floor(luck/100)\r\n  const chance = luck - 100 * Math.floor(luck/100)\r\n  const requiredTime = calculateRequiredBlueberryTime()\r\n  const cubePercent = 100 * (calculateAmbrosiaCubeMult() - 1)\r\n  const quarkPercent = 100 * (calculateAmbrosiaQuarkMult() - 1)\r\n  const availableBlueberries = player.caches.blueberryInventory.totalVal - player.spentBlueberries\r\n  DOMCacheGetOrSet('ambrosiaAmount').innerHTML = i18next.t('ambrosia.amount', { ambrosia: format(player.ambrosia, 0, true) })\r\n  DOMCacheGetOrSet('ambrosiaChance').innerHTML = i18next.t('ambrosia.blueberryGeneration', { chance: format(player.caches.ambrosiaGeneration.totalVal, 2, true) })\r\n  DOMCacheGetOrSet('ambrosiaAmountPerGeneration').innerHTML = i18next.t('ambrosia.perGen', { guaranteed: format(guaranteed, 0, true), extraChance: format(chance, 0, true), ambrosiaLuck: format(luck, 0, true) })\r\n  DOMCacheGetOrSet('ambrosiaRNG').innerHTML = i18next.t('ambrosia.blueberrySecond', { blueberrySecond: format(player.blueberryTime, 0, true), thresholdTimer: format(requiredTime, 0, true) })\r\n  DOMCacheGetOrSet('ambrosiaRewards').innerHTML = i18next.t('ambrosia.bonuses', { cube: format(cubePercent, 0, true), quark: format(quarkPercent, 0, true) })\r\n  DOMCacheGetOrSet('ambrosiaBlueberries').innerHTML = i18next.t('ambrosia.availableBlueberries', { availableBlueberries })\r\n}\r\n\r\nexport const visualUpdateShop = () => {\r\n  if (G.currentTab !== 'shop') {\r\n    return\r\n  }\r\n  DOMCacheGetOrSet('quarkamount').textContent = i18next.t('shop.youHaveQuarks', { x: format(player.worlds, 0, true) })\r\n  DOMCacheGetOrSet('offeringpotionowned').textContent = format(player.shopUpgrades.offeringPotion, 0, true)\r\n  DOMCacheGetOrSet('obtainiumpotionowned').textContent = format(player.shopUpgrades.obtainiumPotion, 0, true)\r\n\r\n  // Create Keys with the correct type\r\n  const keys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\r\n  for (const key of keys) {\r\n    // Create a copy of shopItem instead of accessing many times\r\n    const shopItem = shopData[key]\r\n\r\n    if (shopItem.type === shopUpgradeTypes.CONSUMABLE) {\r\n      const maxBuyablePotions = Math.min(Math.floor(Number(player.worlds)/getShopCosts(key)), shopItem.maxLevel-player.shopUpgrades[key])\r\n      const el = DOMCacheGetOrSet(`buy${key.toLowerCase()}`)\r\n      switch (player.shopBuyMaxToggle) {\r\n        case false:\r\n          el.textContent = 'BUY: 100 Quarks Each'\r\n          break\r\n        case 'TEN':\r\n          el.textContent = `+${Math.min(10, maxBuyablePotions)} for ${format(getShopCosts(key)*Math.min(10, maxBuyablePotions), 0, true)} Quarks`\r\n          break\r\n        default:\r\n          el.textContent = `+${maxBuyablePotions} for ${format(getShopCosts(key)*maxBuyablePotions)} Quarks`\r\n      }\r\n    }\r\n\r\n    if (shopItem.type === shopUpgradeTypes.UPGRADE) {\r\n      if (player.shopHideToggle && player.shopUpgrades[key] >= shopItem.maxLevel && !shopItem.refundable) {\r\n        DOMCacheGetOrSet(`${key}Hide`).style.display = 'none'\r\n        continue\r\n      } else {\r\n        DOMCacheGetOrSet(`${key}Hide`).style.display = isShopUpgradeUnlocked(key) ? 'block' : 'none'\r\n      }\r\n      // Case: If max level is 1, then it can be considered a boolean \"bought\" or \"not bought\" item\r\n      if (shopItem.maxLevel === 1) {\r\n        // TODO(@KhafraDev): i18n\r\n        DOMCacheGetOrSet(`${key}Level`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel ? 'Bought!' : 'Not Bought!'\r\n      } else {\r\n        // Case: max level greater than 1, treat it as a fraction out of max level\r\n        // TODO(@KhafraDev): i18n\r\n        DOMCacheGetOrSet(`${key}Level`).textContent =\r\n          `${(player.highestSingularityCount > 0 || player.ascensionCount > 0 ? '' : 'Level ')}${format(player.shopUpgrades[key])}/${format(shopItem.maxLevel)}`\r\n      }\r\n      // Handles Button - max level needs no price indicator, otherwise it's necessary\r\n\r\n      const buyMaxAmount = shopItem.maxLevel - player.shopUpgrades[key]\r\n      let buyData:IMultiBuy\r\n\r\n      switch (player.shopBuyMaxToggle) {\r\n        case false:\r\n          DOMCacheGetOrSet(`${key}Button`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel\r\n            ? i18next.t('shop.maxed')\r\n            : i18next.t('shop.upgradeFor', { x: format(getShopCosts(key)) })\r\n          break\r\n        case 'TEN':\r\n          buyData = calculateSummationNonLinear(player.shopUpgrades[key], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, Math.min(10, buyMaxAmount))\r\n          DOMCacheGetOrSet(`${key}Button`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel\r\n            ? i18next.t('shop.maxed')\r\n            : i18next.t('shop.plusForQuarks', {\r\n              x: format(buyData.levelCanBuy - player.shopUpgrades[key], 0, true),\r\n              y: format(buyData.cost)\r\n            })\r\n          break\r\n        default:\r\n          buyData = calculateSummationNonLinear(player.shopUpgrades[key], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, buyMaxAmount)\r\n          DOMCacheGetOrSet(`${key}Button`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel\r\n            ? i18next.t('shop.maxed')\r\n            : i18next.t('shop.plusForQuarks', {\r\n              x: format(buyData.levelCanBuy - player.shopUpgrades[key], 0, true),\r\n              y: format(buyData.cost)\r\n            })\r\n      }\r\n    }\r\n  }\r\n\r\n  DOMCacheGetOrSet('buySingularityQuarksAmount').textContent = `${player.goldenQuarks < 1000 ? 'Owned: ' : ''}${format(player.goldenQuarks)}`\r\n  DOMCacheGetOrSet('buySingularityQuarksButton').textContent = `Buy! ${format(getGoldenQuarkCost().cost)} Quarks Each`\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nexport const visualUpdateEvent = () => {}\r\n", "import { sacrificeAnts } from './Ants'\r\nimport { calculateAscensionAcceleration, calculateAutomaticObtainium, calculateGoldenQuarkGain, calculateMaxRunes, calculateObtainium, calculateRequiredBlueberryTime, calculateTimeAcceleration, octeractGainPerSecond } from './Calculate'\r\nimport { quarkHandler } from './Quark'\r\nimport { redeemShards, unlockedRune, checkMaxRunes } from './Runes'\r\nimport { format, player } from './Synergism'\r\nimport { visualUpdateAmbrosia, visualUpdateOcteracts, visualUpdateResearch } from './UpdateVisuals'\r\nimport { Globals as G } from './Variables'\r\nimport { buyAllBlessings } from './Buy'\r\nimport { buyAllTalismanResources } from './Talismans'\r\nimport { useConsumable } from './Shop'\r\nimport { Notification } from './UpdateHTML'\r\n\r\ntype TimerInput = 'prestige' | 'transcension' | 'reincarnation' | 'ascension' |\r\n                  'quarks' | 'goldenQuarks' | 'singularity' | 'octeracts' |\r\n                  'autoPotion' | 'ambrosia'\r\n\r\n/**\r\n * addTimers will add (in milliseconds) time to the reset counters, and quark export timer\r\n * @param input\r\n * @param time\r\n */\r\nexport const addTimers = (input: TimerInput, time = 0) => {\r\n  const timeMultiplier = (input === 'ascension' || input === 'quarks' || input === 'goldenQuarks' ||\r\n                            input === 'singularity' || input === 'octeracts' || input === 'autoPotion' || input === 'ambrosia') ? 1 : calculateTimeAcceleration().mult\r\n\r\n  switch (input) {\r\n    case 'prestige': {\r\n      player.prestigecounter += time * timeMultiplier\r\n      break\r\n    }\r\n    case 'transcension': {\r\n      player.transcendcounter += time * timeMultiplier\r\n      break\r\n    }\r\n    case 'reincarnation': {\r\n      player.reincarnationcounter += time * timeMultiplier\r\n      break\r\n    }\r\n    case 'ascension': { //Anything in here is affected by add code\r\n\r\n      const ascensionSpeedMulti = (player.singularityUpgrades.oneMind.getEffect().bonus) ? 10 : calculateAscensionAcceleration()\r\n      player.ascensionCounter += time * timeMultiplier * ascensionSpeedMulti\r\n      player.ascensionCounterReal += time * timeMultiplier\r\n      break\r\n    }\r\n    case 'singularity': {\r\n      player.ascensionCounterRealReal += time\r\n      player.singularityCounter += time * timeMultiplier\r\n      break\r\n    }\r\n    case 'quarks': {\r\n      // First get maximum Quark Clock (25h, up to +25 from Research 8x20)\r\n      const maxQuarkTimer = quarkHandler().maxTime\r\n      player.quarkstimer += time * timeMultiplier\r\n      // Checks if this new time is greater than maximum, in which it will default to that time.\r\n      // Otherwise returns itself.\r\n      player.quarkstimer = (player.quarkstimer > maxQuarkTimer) ? maxQuarkTimer : player.quarkstimer\r\n      break\r\n    }\r\n    case 'goldenQuarks': {\r\n      if (+player.singularityUpgrades.goldenQuarks3.getEffect().bonus === 0) {\r\n        return\r\n      } else {\r\n        player.goldenQuarksTimer += time * timeMultiplier\r\n        player.goldenQuarksTimer = (player.goldenQuarksTimer > 3600 * 168) ? 3600 * 168 : player.goldenQuarksTimer\r\n      }\r\n      break\r\n    }\r\n    case 'octeracts': {\r\n      if (!player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\r\n        return\r\n      } else {\r\n        player.octeractTimer += time * timeMultiplier\r\n      }\r\n      if (player.octeractTimer >= 1) {\r\n        const amountOfGiveaways = player.octeractTimer - (player.octeractTimer % 1)\r\n        player.octeractTimer %= 1\r\n\r\n        const perSecond = octeractGainPerSecond()\r\n        player.wowOcteracts += amountOfGiveaways * perSecond\r\n        player.totalWowOcteracts += amountOfGiveaways * perSecond\r\n\r\n        if (player.highestSingularityCount >= 160) {\r\n          const levels = [160, 173, 185, 194, 204, 210, 219, 229, 240, 249]\r\n          const frac = 1e-6\r\n          let actualLevel = 0\r\n          for (const sing of levels) {\r\n            if (player.highestSingularityCount >= sing) {\r\n              actualLevel += 1\r\n            }\r\n          }\r\n\r\n          for (let i = 0; i < amountOfGiveaways; i++) {\r\n            const quarkFraction = player.quarksThisSingularity * frac * actualLevel\r\n            player.goldenQuarks += quarkFraction * calculateGoldenQuarkGain(true)\r\n            player.quarksThisSingularity -= quarkFraction\r\n          }\r\n        }\r\n        visualUpdateOcteracts()\r\n      }\r\n      break\r\n    }\r\n    case 'autoPotion': {\r\n      if (player.highestSingularityCount < 6) {\r\n        return\r\n      } else {\r\n        // player.toggles[42] enables FAST Offering Potion Expenditure, but actually spends the potion.\r\n        // Hence, you need at least one potion to be able to use fast spend.\r\n        const toggleOfferingOn = (player.toggles[42] && player.shopUpgrades.offeringPotion > 0)\r\n        // player.toggles[43] enables FAST Obtainium Potion Expenditure, but actually spends the potion.\r\n        const toggleObtainiumOn = (player.toggles[43] && player.shopUpgrades.obtainiumPotion > 0)\r\n\r\n        player.autoPotionTimer += time * timeMultiplier\r\n        player.autoPotionTimerObtainium += time * timeMultiplier\r\n\r\n        const timerThreshold = 180 * Math.pow(1.03, -player.highestSingularityCount) / +player.octeractUpgrades.octeractAutoPotionSpeed.getEffect().bonus\r\n\r\n        const effectiveOfferingThreshold = (toggleOfferingOn ? Math.min(1, timerThreshold) / 20: timerThreshold)\r\n        const effectiveObtainiumThreshold = (toggleObtainiumOn ? Math.min(1, timerThreshold) / 20: timerThreshold)\r\n\r\n        if (player.autoPotionTimer >= effectiveOfferingThreshold) {\r\n          const amountOfPotions = ((player.autoPotionTimer) - (player.autoPotionTimer % effectiveOfferingThreshold)) / effectiveOfferingThreshold\r\n          player.autoPotionTimer %= effectiveOfferingThreshold\r\n          void useConsumable('offeringPotion', true, amountOfPotions, toggleOfferingOn)\r\n        }\r\n\r\n        if (player.autoPotionTimerObtainium >= effectiveObtainiumThreshold) {\r\n          const amountOfPotions = ((player.autoPotionTimerObtainium) - (player.autoPotionTimerObtainium % effectiveObtainiumThreshold)) / effectiveObtainiumThreshold\r\n          player.autoPotionTimerObtainium %= effectiveObtainiumThreshold\r\n          void useConsumable('obtainiumPotion', true, amountOfPotions, toggleObtainiumOn)\r\n        }\r\n      }\r\n      break\r\n    }\r\n    case 'ambrosia': {\r\n      const compute = player.caches.ambrosiaGeneration.totalVal\r\n      if (compute === 0) {\r\n        break\r\n      }\r\n\r\n      G.ambrosiaTimer += time * timeMultiplier\r\n\r\n      if (G.ambrosiaTimer < 1) {\r\n        break\r\n      }\r\n\r\n      const ambrosiaLuck = player.caches.ambrosiaLuck.totalVal\r\n      player.blueberryTime += Math.floor(G.ambrosiaTimer) * player.caches.ambrosiaGeneration.totalVal\r\n      G.ambrosiaTimer %= 1\r\n\r\n      const timeToAmbrosia = calculateRequiredBlueberryTime()\r\n\r\n      if (player.blueberryTime >= timeToAmbrosia) {\r\n        const RNG = Math.random()\r\n        const ambrosiaMult = Math.floor(ambrosiaLuck / 100) + 1\r\n        const luckMult = (RNG < (ambrosiaLuck / 100 - Math.floor(ambrosiaLuck / 100))) ? 1 : 0\r\n        const timeMult = Math.min(100, Math.floor(player.blueberryTime / timeToAmbrosia))\r\n\r\n        player.ambrosia += 1 * (ambrosiaMult + luckMult) * timeMult\r\n        player.lifetimeAmbrosia += 1 * (ambrosiaMult + luckMult) * timeMult\r\n        player.blueberryTime -= timeToAmbrosia * timeMult\r\n\r\n        void Notification(`You have earned ${(ambrosiaMult + luckMult) * timeMult} Ambrosia ${luckMult > 0 ? '[Lucky]' : ''}!!! You now have ${format(player.ambrosia)}.`)\r\n      }\r\n\r\n      visualUpdateAmbrosia()\r\n    }\r\n  }\r\n}\r\n\r\ntype AutoToolInput = 'addObtainium' | 'addOfferings' | 'runeSacrifice' | 'antSacrifice'\r\n\r\n/**\r\n * Assortment of tools which are used when actions are automated.\r\n * @param input\r\n * @param time\r\n */\r\nexport const automaticTools = (input: AutoToolInput, time: number) => {\r\n  const timeMultiplier = (input === 'runeSacrifice' || input === 'addOfferings') ? 1 : calculateTimeAcceleration().mult\r\n\r\n  switch (input) {\r\n    case 'addObtainium': {\r\n      // If in challenge 14, abort and do not award obtainium\r\n      if (player.currentChallenge.ascension === 14) {\r\n        break\r\n      }\r\n      //Update Obtainium Multipliers + Amount to gain\r\n      calculateObtainium()\r\n      const obtainiumGain = calculateAutomaticObtainium()\r\n      //Add Obtainium\r\n      player.researchPoints = Math.min(1e300, player.researchPoints + obtainiumGain * time * timeMultiplier)\r\n      //Update visual displays if appropriate\r\n      if (G.currentTab === 'research') {\r\n        visualUpdateResearch()\r\n      }\r\n      break\r\n    }\r\n    case 'addOfferings':\r\n      //This counter can be increased through challenge 3 reward\r\n      //As well as cube upgrade 1x2 (2).\r\n      G.autoOfferingCounter += time\r\n      //Any time this exceeds 1 it adds an offering\r\n      player.runeshards = Math.min(1e300, player.runeshards + Math.floor(G.autoOfferingCounter))\r\n      G.autoOfferingCounter %= 1\r\n      break\r\n    case 'runeSacrifice':\r\n      //Every real life second this will trigger\r\n      player.sacrificeTimer += time\r\n      if (player.sacrificeTimer >= 1 && isFinite(player.runeshards) && player.runeshards > 0) {\r\n        // Automatic purchase of Blessings\r\n        if (player.highestSingularityCount >= 15) {\r\n          let ratio = 4\r\n          if (player.toggles[36]) {\r\n            buyAllBlessings('Blessings', 100 / ratio, true)\r\n            ratio--\r\n          }\r\n          if (player.toggles[37]) {\r\n            buyAllBlessings('Spirits', 100 / ratio, true)\r\n            ratio--\r\n          }\r\n        }\r\n        if (player.autoBuyFragment && player.highestSingularityCount >= 40 && player.cubeUpgrades[51] > 0) {\r\n          buyAllTalismanResources()\r\n        }\r\n\r\n        // If you bought cube upgrade 2x10 then it sacrifices to all runes equally\r\n        if (player.cubeUpgrades[20] === 1) {\r\n          const maxi = player.highestSingularityCount >= 50 ? 7 : (player.highestSingularityCount >= 30 ? 6 : 5)\r\n          const notMaxed = (maxi - checkMaxRunes(maxi))\r\n          if (notMaxed > 0) {\r\n            const baseAmount = Math.floor(player.runeshards / notMaxed / 2)\r\n            for (let i = 0; i < maxi; i++) {\r\n              if (!(!unlockedRune(i + 1) || player.runelevels[i] >= calculateMaxRunes(i + 1))) {\r\n                redeemShards(i + 1, true, baseAmount)\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          // If you did not buy cube upgrade 2x10 it sacrifices to selected rune.\r\n          const rune = player.autoSacrifice\r\n          redeemShards(rune, true, 0)\r\n        }\r\n        //Modulo used in event of a large delta time (this could happen for a number of reasons)\r\n        player.sacrificeTimer %= 1\r\n      }\r\n      break\r\n    case 'antSacrifice': {\r\n      // Increments real and 'fake' timers. the Real timer is on real life seconds.\r\n      player.antSacrificeTimer += time * timeMultiplier\r\n      player.antSacrificeTimerReal += time\r\n\r\n      //Equal to real time iff \"Real Time\" option selected in ants tab.\r\n      const antSacrificeTimer = (player.autoAntSacrificeMode === 2) ?\r\n        player.antSacrificeTimerReal : player.antSacrificeTimer\r\n\r\n      if (antSacrificeTimer >= player.autoAntSacTimer && player.antSacrificeTimerReal > 0.1 && player.researches[124] === 1\r\n                && player.autoAntSacrifice && player.antPoints.gte('1e40')) {\r\n        void sacrificeAnts(true)\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\n", "import { player, getTimePinnedToLoadDate, format } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\nimport { Alert, revealStuff } from './UpdateHTML'\r\n\r\ninterface HolidayData {\r\n    name: string\r\n    color: string\r\n    url: string\r\n    everyYear: boolean\r\n    start: string\r\n    end: string\r\n    notice: number\r\n    event: boolean\r\n    buffs: {\r\n        quark?: number\r\n        goldenQuark?: number\r\n        cubes?: number\r\n        powderConversion?: number\r\n        ascensionSpeed?: number\r\n        globalSpeed?: number\r\n        ascensionScore?: number\r\n        antSacrifice?: number\r\n        offering?: number\r\n        obtainium?: number\r\n        octeract?: number\r\n        blueberryTime?: number\r\n        ambrosiaLuck?: number\r\n        oneMind?: number\r\n    }\r\n}\r\n\r\n// Editing the event is here\r\n// can change the basic game balance by setting default to event: true, but cannot stack events\r\nconst events: Record<string, HolidayData> = {\r\n  default: {\r\n    name: 'Game Modified',\r\n    color: 'white',\r\n    url: '',\r\n    everyYear: true,\r\n    start: '1/1/2001 00:00:00',\r\n    end: '12/31/2099 23:59:59',\r\n    notice: 0,\r\n    event: false,\r\n    buffs: {\r\n      quark: -0.2,\r\n      goldenQuark: 0,\r\n      cubes: 0,\r\n      powderConversion: 0,\r\n      ascensionSpeed: 0,\r\n      globalSpeed: 0,\r\n      ascensionScore: 0,\r\n      antSacrifice: 0,\r\n      offering: 0,\r\n      obtainium: 0\r\n    }\r\n  },\r\n  // Last active event\r\n  last: {\r\n    name: 'MIT 2023 Graduation Reception',\r\n    color: '#a31f34',\r\n    url: 'https://www.bilibili.com/video/BV1f3411d7oG',\r\n    everyYear: false,\r\n    start: '06/01/2023 00:00:00',\r\n    end: '06/26/2023 20:00:00',\r\n    notice: 20,\r\n    event: true,\r\n    buffs: {\r\n      quark: 0.4,\r\n      globalSpeed: 0.3,\r\n      ascensionSpeed: 0.4,\r\n      antSacrifice: 0,\r\n      offering: 0,\r\n      obtainium: 0,\r\n      octeract: 0,\r\n      powderConversion: 0,\r\n      goldenQuark: 0,\r\n      blueberryTime: 0.3,\r\n      ambrosiaLuck: 3,\r\n      oneMind: 0.02023\r\n    }\r\n  },\r\n  khafra: {\r\n    name: 'Thanks for Boosting the Discord',\r\n    color: 'var(--green-text-color)', //Plat please use var color instead for any of these (darkorchid, orchid, darkcyan, red, maroon, orangered, crimson, gray, green, lightseagreen)\r\n    url: 'https://www.youtube.com/watch?v=iYYRH4apXDo',\r\n    everyYear: false,\r\n    start: '12/07/2022 00:00:00',\r\n    end: '12/08/2022 23:59:59',\r\n    notice: 20,\r\n    event: true,\r\n    buffs: {\r\n      quark: .2,\r\n      globalSpeed: 0,\r\n      ascensionSpeed: 0,\r\n      antSacrifice: 0,\r\n      offering: 0,\r\n      obtainium: 0,\r\n      octeract: 0,\r\n      powderConversion: 0,\r\n      goldenQuark: 0,\r\n      oneMind: 0\r\n    }\r\n  }\r\n  /*next: {\r\n        name: 'Derpmas 2022: Daily Extravaganza!',\r\n        color: 'white',\r\n        url: 'https://www.youtube.com/watch?v=A6-vc-R9np8',\r\n        everyYear: false,\r\n        start: '12/25/2022 00:00:00',\r\n        end: '01/01/2023 23:59:59',\r\n        notice: 30,\r\n        event: true,\r\n        buffs: {\r\n            quark: 0,\r\n            globalSpeed: 0,\r\n            ascensionSpeed: 0,\r\n            antSacrifice: 0,\r\n            offering: 0,\r\n            obtainium: 0,\r\n            octeract: 0,\r\n            powderConversion: 0,\r\n            goldenQuark: 0,\r\n            oneMind: 0.05\r\n        }\r\n    }*/\r\n  // Event example\r\n  /*\r\n    newyear: {\r\n        name: '&#127881; New Year Event! &#127881;',\r\n        color: 'yellow',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '12/31/2001 00:00:00',\r\n        end: '01/02/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            ascensionSpeed: 2,\r\n            globalSpeed: 2\r\n        }\r\n    },\r\n    spring: {\r\n        name: '&#127800; Spring Event! &#127800;',\r\n        color: 'pink',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '04/01/2001 00:00:00',\r\n        end: '04/02/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            ascensionScore: 0.5,\r\n            antSacrifice: 1\r\n        }\r\n    },\r\n    summer: {\r\n        name: '&#9728 Summer Event! &#9728',\r\n        color: 'lightgoldenrodyellow',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '07/01/2001 00:00:00',\r\n        end: '07/02/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            ascensionSpeed: 1,\r\n            obtainium: 2\r\n        }\r\n    },\r\n    autumn: {\r\n        name: '&#127810; Autumn Event! &#127810;',\r\n        color: 'tomato',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '10/01/2001 00:00:00',\r\n        end: '10/02/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            cubes: 1,\r\n            offering: 2\r\n        }\r\n    },\r\n    winter: {\r\n        name: '&#10052 Winter Event! &#10052',\r\n        color: 'lightblue',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '02/01/2001 00:00:00',\r\n        end: '02/02/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            powderConversion: 2,\r\n            globalSpeed: 2\r\n        }\r\n    },\r\n    birthday: {\r\n        name: '&#127874; Synergism Birthday! &#127874;',\r\n        color: 'white',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '01/05/2001 00:00:00',\r\n        end: '01/05/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            goldenQuark: 1,\r\n            cubes: 1,\r\n            powderConversion: 1,\r\n            ascensionSpeed: 1,\r\n            globalSpeed: 1,\r\n            ascensionScore: 1,\r\n            antSacrifice: 1,\r\n            offering: 1,\r\n            obtainium: 1\r\n        }\r\n    }\r\n    */\r\n}\r\n\r\nlet nowEvent = events.default\r\n\r\nexport const getEvent = (): HolidayData => {\r\n  return nowEvent\r\n}\r\n\r\nexport const eventCheck = () => {\r\n  if (!player.dayCheck) {\r\n    return\r\n  }\r\n  const now = new Date(getTimePinnedToLoadDate())\r\n  let start: Date\r\n  let end: Date\r\n\r\n  // Disable the event if there is any fraud, such as setting a device clock in the past\r\n  /* TODO: Figure out why some people get tagged for cheating even when they are playing legitimately\r\n             I have temporarily disabled the checks. */\r\n  nowEvent = events.default\r\n  //if (now.getTime() >= player.dayCheck.getTime()) {\r\n  // Update currently valid events\r\n  for (const e in events) {\r\n    const event = events[e]\r\n    if (event.name !== 'default' && event.event) {\r\n      start = new Date(event.start)\r\n      end = new Date(event.end)\r\n      if (event.everyYear) {\r\n        const nowFullYear = now.getFullYear()\r\n        start = new Date(event.start)\r\n        end = new Date(event.end)\r\n        start.setFullYear(nowFullYear)\r\n        end.setFullYear(nowFullYear)\r\n        if (start.getTime() > end.getTime()) {\r\n          end.setFullYear(nowFullYear + 1)\r\n        }\r\n        if (now.getTime() >= start.getTime() - 31536000000 && now.getTime() <= end.getTime() - 31536000000) {\r\n          start.setFullYear(start.getFullYear() - 1)\r\n          end.setFullYear(end.getFullYear() - 1)\r\n        }\r\n        if (now.getTime() >= end.getTime() + 86400000) {\r\n          continue\r\n        }\r\n      } else if (now.getTime() >= end.getTime() + 86400000) {\r\n        continue\r\n      }\r\n      if (now.getTime() >= start.getTime() - event.notice * 86400000 && now.getTime() <= end.getTime()) {\r\n        nowEvent = event\r\n        if (now.getTime() >= start.getTime() && now.getTime() <= end.getTime()) {\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //}\r\n  const happyHolidays = DOMCacheGetOrSet('happyHolidays') as HTMLAnchorElement\r\n  const eventBuffs = DOMCacheGetOrSet('eventBuffs')\r\n  const updateIsEventCheck = G.isEvent\r\n  if (nowEvent.event) {\r\n    start = new Date(nowEvent.start)\r\n    end = new Date(nowEvent.end)\r\n    if (nowEvent.everyYear) {\r\n      const nowFullYear = now.getFullYear()\r\n      start.setFullYear(nowFullYear)\r\n      end.setFullYear(nowFullYear)\r\n      if (start.getTime() > end.getTime()) {\r\n        end.setFullYear(nowFullYear + 1)\r\n      }\r\n      if (now.getTime() >= start.getTime() - 31536000000 && now.getTime() <= end.getTime() - 31536000000) {\r\n        start.setFullYear(start.getFullYear() - 1)\r\n        end.setFullYear(end.getFullYear() - 1)\r\n      }\r\n    }\r\n    G.isEvent = now.getTime() >= start.getTime() && now.getTime() <= end.getTime()\r\n    let buffs = ''\r\n    for (let i = 0; i < eventBuffType.length; i++) {\r\n      const eventBuff = calculateEventSourceBuff(eventBuffType[i])\r\n      if (eventBuff !== 0) {\r\n        if (eventBuffType[i] === 'One Mind' && player.singularityUpgrades.oneMind.level > 0) {\r\n          buffs += `<span style=\"color: gold\">${eventBuff >= 0 ? '+' : '-'}${format(100 * eventBuff, 3, true)}% ${eventBuffName[i]}</span> ,`\r\n        } else if (eventBuffType[i] !== 'One Mind' || player.singularityUpgrades.oneMind.level === 0) {\r\n          buffs += `${eventBuff >= 0 ? '+' : '-'}${format(100 * eventBuff, 2, true)}% ${eventBuffName[i]}, `\r\n        }\r\n      }\r\n    }\r\n    if (buffs.length > 2) {\r\n      buffs = buffs.substring(0, buffs.length - 2)\r\n      buffs += '!'\r\n    }\r\n    DOMCacheGetOrSet('eventCurrent').textContent = G.isEvent\r\n      ? i18next.t('settings.events.activeUntil', { x: end })\r\n      : i18next.t('settings.events.starts', { x: start })\r\n    eventBuffs.innerHTML = G.isEvent ? 'Current Buffs: ' + buffs : ''\r\n    //eventBuffs.style.color = 'lime';\r\n    happyHolidays.innerHTML = nowEvent.name\r\n    happyHolidays.style.color = nowEvent.color\r\n    happyHolidays.href = nowEvent.url.length > 0 ? nowEvent.url : '#'\r\n  } else {\r\n    G.isEvent = false\r\n    DOMCacheGetOrSet('eventCurrent').innerHTML = i18next.t('settings.events.inactive')\r\n    eventBuffs.textContent = now.getTime() >= player.dayCheck.getTime() ? '' : ''\r\n    eventBuffs.style.color = 'var(--red-text-color)'\r\n    happyHolidays.innerHTML = ''\r\n    happyHolidays.href = ''\r\n  }\r\n  if (G.isEvent !== updateIsEventCheck) {\r\n    revealStuff()\r\n  }\r\n}\r\n\r\nconst eventBuffType = ['Quarks', 'Golden Quarks', 'Cubes', 'Powder Conversion', 'Ascension Speed', 'Global Speed', 'Ascension Score', 'Ant Sacrifice', 'Offering', 'Obtainium', 'Octeract', 'Blueberry Time', 'Ambrosia Luck', 'One Mind']\r\nconst eventBuffName = ['Quarks', 'Golden Quarks', 'Cubes from all type', 'Powder Conversion', 'Ascension Speed', 'Global Speed', 'Ascension Score', 'Ant Sacrifice rewards', 'Offering', 'Obtainium', 'Eight Dimensional Hypercubes', 'Blueberry Time Generation', 'Ambrosia Luck (Additive)', 'One Mind Quark Bonus']\r\n\r\nexport const calculateEventSourceBuff = (buff: string): number => {\r\n  const event = getEvent()\r\n  switch (buff) {\r\n    case 'Quarks': return event.buffs.quark ?? 0\r\n    case 'Golden Quarks': return event.buffs.goldenQuark ?? 0\r\n    case 'Cubes': return event.buffs.cubes ?? 0\r\n    case 'Powder Conversion': return event.buffs.powderConversion ?? 0\r\n    case 'Ascension Speed': return event.buffs.ascensionSpeed ?? 0\r\n    case 'Global Speed': return event.buffs.globalSpeed ?? 0\r\n    case 'Ascension Score': return event.buffs.ascensionScore ?? 0\r\n    case 'Ant Sacrifice': return event.buffs.antSacrifice ?? 0\r\n    case 'Offering': return event.buffs.offering ?? 0\r\n    case 'Obtainium': return event.buffs.obtainium ?? 0\r\n    case 'Octeract': return event.buffs.octeract ?? 0\r\n    case 'One Mind': return (player.singularityUpgrades.oneMind.level > 0) ? event.buffs.oneMind ?? 0 : 0\r\n    case 'Blueberry Time': return event.buffs.blueberryTime ?? 0\r\n    case 'Ambrosia Luck': return event.buffs.ambrosiaLuck ?? 0\r\n    default: return 0\r\n  }\r\n}\r\n\r\nexport const clickSmith = (): Promise<void> => {\r\n  G.eventClicked = true\r\n  DOMCacheGetOrSet('eventClicked').style.display = 'block'\r\n  return Alert(i18next.t('event.aprilFools.clicked'))\r\n}\r\n", "import { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { player } from './Synergism'\r\nimport {\r\n  toggleBuildingScreen,\r\n  toggleRuneScreen,\r\n  toggleCubeSubTab,\r\n  toggleCorruptionLoadoutsStats,\r\n  toggleSingularityScreen,\r\n  setActiveSettingScreen\r\n} from './Toggles'\r\nimport { revealStuff, hideStuff } from './UpdateHTML'\r\nimport { assert, limitRange } from './Utility'\r\nimport { Globals as G } from './Variables'\r\n\r\nexport type TabNames = 'settings' | 'shop' | 'buildings' | 'upgrades' | 'achievements' | 'runes' | 'challenge' | 'research' | 'ant' | 'cube' | 'traits' | 'singularity' | 'event'\r\n\r\n/**\r\n * If step is provided, move the page back/forward {step} pages.\r\n * If page is provided, change the subtab to {page}\r\n */\r\ntype SubTabSwitchOptions = { step: number, page?: undefined } | { page: number, step?: undefined }\r\n\r\ninterface SubTab {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  tabSwitcher?: ((...args: any[]) => any)\r\n  subTabList: {\r\n      subTabID: string | number | boolean\r\n      unlocked: boolean\r\n      buttonID?: string\r\n  }[]\r\n}\r\n\r\nconst subtabInfo: Record<TabNames, SubTab> = {\r\n  settings: {\r\n    tabSwitcher: (...args: Parameters<typeof setActiveSettingScreen>) => setActiveSettingScreen(...args),\r\n    subTabList: [\r\n      { subTabID: 'settingsubtab', unlocked: true },\r\n      { subTabID: 'languagesubtab', unlocked: true },\r\n      { subTabID: 'creditssubtab', unlocked: true },\r\n      { subTabID: 'statisticsSubTab', unlocked: true },\r\n      { subTabID: 'resetHistorySubTab', get unlocked () {\r\n        return player.unlocks.prestige\r\n      } },\r\n      { subTabID: 'ascendHistorySubTab', get unlocked () {\r\n        return player.ascensionCount > 0\r\n      } },\r\n      { subTabID: 'singularityHistorySubTab', get unlocked () {\r\n        return player.highestSingularityCount > 0\r\n      }\r\n      },\r\n      { subTabID: 'hotkeys', unlocked: true }\r\n    ]\r\n  },\r\n  shop: { subTabList: [] },\r\n  buildings: {\r\n    tabSwitcher: (...args: Parameters<typeof toggleBuildingScreen>) => toggleBuildingScreen(...args),\r\n    subTabList: [\r\n      { subTabID: 'coin', unlocked: true, buttonID: 'switchToCoinBuilding' },\r\n      { subTabID: 'diamond', get unlocked () {\r\n        return player.unlocks.prestige\r\n      }, buttonID: 'switchToDiamondBuilding' },\r\n      { subTabID: 'mythos', get unlocked () {\r\n        return player.unlocks.transcend\r\n      }, buttonID: 'switchToMythosBuilding' },\r\n      { subTabID: 'particle', get unlocked () {\r\n        return player.unlocks.reincarnate\r\n      }, buttonID: 'switchToParticleBuilding' },\r\n      { subTabID: 'tesseract', get unlocked () {\r\n        return player.achievements[183] > 0\r\n      }, buttonID: 'switchToTesseractBuilding' }]\r\n  },\r\n  upgrades: { subTabList: [] },\r\n  achievements: { subTabList: [] },\r\n  runes: {\r\n    tabSwitcher: (...args: Parameters<typeof toggleRuneScreen>) => toggleRuneScreen(...args),\r\n    subTabList: [\r\n      { subTabID: 1, get unlocked () {\r\n        return player.unlocks.prestige\r\n      }, buttonID: 'toggleRuneSubTab1' },\r\n      { subTabID: 2, get unlocked () {\r\n        return player.achievements[134] > 0\r\n      }, buttonID: 'toggleRuneSubTab2' },\r\n      { subTabID: 3, get unlocked () {\r\n        return player.achievements[134] > 0\r\n      }, buttonID: 'toggleRuneSubTab3' },\r\n      { subTabID: 4, get unlocked () {\r\n        return player.achievements[204] > 0\r\n      }, buttonID: 'toggleRuneSubTab4' }]\r\n  },\r\n  challenge: { subTabList: [] },\r\n  research: { subTabList: [] },\r\n  ant: { subTabList: [] },\r\n  cube: {\r\n    tabSwitcher: (...args: Parameters<typeof toggleCubeSubTab>) => toggleCubeSubTab(...args),\r\n    subTabList: [\r\n      { subTabID: 1, get unlocked () {\r\n        return player.achievements[141] > 0\r\n      }, buttonID: 'switchCubeSubTab1' },\r\n      { subTabID: 2, get unlocked () {\r\n        return player.achievements[197] > 0\r\n      }, buttonID: 'switchCubeSubTab2' },\r\n      { subTabID: 3, get unlocked () {\r\n        return player.achievements[211] > 0\r\n      }, buttonID: 'switchCubeSubTab3' },\r\n      { subTabID: 4, get unlocked () {\r\n        return player.achievements[218] > 0\r\n      }, buttonID: 'switchCubeSubTab4' },\r\n      { subTabID: 5, get unlocked () {\r\n        return player.achievements[141] > 0\r\n      }, buttonID: 'switchCubeSubTab5' },\r\n      { subTabID: 6, get unlocked () {\r\n        return player.achievements[218] > 0\r\n      }, buttonID: 'switchCubeSubTab6' },\r\n      { subTabID: 7, get unlocked () {\r\n        return player.challenge15Exponent >= 1e15\r\n      }, buttonID: 'switchCubeSubTab7' }]\r\n  },\r\n  traits: {\r\n    tabSwitcher: (...args: Parameters<typeof toggleCorruptionLoadoutsStats>) => toggleCorruptionLoadoutsStats(...args),\r\n    subTabList: [\r\n      { subTabID: true, get unlocked () {\r\n        return player.achievements[141] > 0\r\n      }, buttonID: 'corrStatsBtn' },\r\n      { subTabID: false, get unlocked () {\r\n        return player.achievements[141] > 0\r\n      }, buttonID: 'corrLoadoutsBtn' }]\r\n  },\r\n  singularity: {\r\n    tabSwitcher: (...args: Parameters<typeof toggleSingularityScreen>) => toggleSingularityScreen(...args),\r\n    subTabList: [\r\n      { subTabID: 1, get unlocked () {\r\n        return player.highestSingularityCount > 0\r\n      }, buttonID: 'toggleSingularitySubTab1' },\r\n      { subTabID: 2, get unlocked () {\r\n        return player.highestSingularityCount > 0\r\n      }, buttonID: 'toggleSingularitySubTab2' },\r\n      { subTabID: 3, get unlocked () {\r\n        return player.highestSingularityCount > 0\r\n      }, buttonID: 'toggleSingularitySubTab3' },\r\n      { subTabID: 4, get unlocked () {\r\n        return Boolean(player.singularityUpgrades.octeractUnlock.getEffect().bonus)\r\n      }, buttonID: 'toggleSingularitySubTab4' },\r\n      { subTabID: 5, get unlocked () {\r\n        return player.highestSingularityCount >= 25\r\n      }, buttonID: 'toggleSingularitySubTab5' },\r\n      { subTabID: 6, get unlocked () {\r\n        return player.singularityChallenges.noSingularityUpgrades.completions >= 1\r\n      }, buttonID: 'toggleSingularitySubTab6'\r\n      }]\r\n  },\r\n  event: { subTabList: [] }\r\n}\r\n\r\nconst tabsInfo: Record<TabNames, () => boolean> = {\r\n  settings: () => true,\r\n  shop: () => player.unlocks.reincarnate || player.highestSingularityCount > 0,\r\n  buildings: () => true,\r\n  upgrades: () => true,\r\n  achievements: () => player.unlocks.coinfour,\r\n  runes: () => player.unlocks.prestige,\r\n  challenge: () => player.unlocks.transcend,\r\n  research: () => player.unlocks.reincarnate,\r\n  ant: () => player.achievements[127] > 0,\r\n  cube: () => player.achievements[141] > 0,\r\n  traits: () => player.challengecompletions[11] > 0,\r\n  singularity: () => player.highestSingularityCount > 0,\r\n  event: () => G.isEvent\r\n} as const\r\n\r\nexport class Tab {\r\n  name: TabNames\r\n\r\n  constructor (element: HTMLElement) {\r\n    this.name = element.id.split('tab')[0] as TabNames\r\n\r\n    assert(element.id.endsWith('tab'))\r\n    assert(this.name in tabsInfo && this.name in subtabInfo)\r\n  }\r\n\r\n  get subtabs () {\r\n    return subtabInfo[this.name]\r\n  }\r\n\r\n  get unlocked () {\r\n    return tabsInfo[this.name]()\r\n  }\r\n}\r\n\r\n/**\r\n * Map each tab by its \"index\" (place in the nav row)\r\n */\r\nexport const tabs = new Map(\r\n  Array.from(document.querySelectorAll<HTMLElement>('#tabrow > button')).map((tab, index) => {\r\n    return [index + 1, new Tab(tab)]\r\n  })\r\n)\r\n\r\n/**\r\n * @param step 1 to go forward; -1 to go back\r\n * @param changeSubtab true to change the subtab, false to change the main tabs\r\n */\r\nexport const keyboardTabChange = (step: 1 | -1 = 1, changeSubtab = false) => {\r\n  if (!changeSubtab) {\r\n    player.tabnumber = limitRange(player.tabnumber + step, 1, tabs.size)\r\n  }\r\n\r\n  let tab = tabs.get(player.tabnumber)\r\n\r\n  while (!tab?.unlocked) {\r\n    player.tabnumber = limitRange(player.tabnumber + step, 1, tabs.size)\r\n    tab = tabs.get(player.tabnumber)!\r\n  }\r\n\r\n  if (changeSubtab) {\r\n    changeSubTab(tab, { step })\r\n  }\r\n\r\n  changeTab(tab)\r\n}\r\n\r\nexport const changeTab = (tabOrName: Tab | TabNames) => {\r\n  const [index, tab] = [...tabs.entries()]\r\n    .find(([, tab]) => tab.name === tabOrName || tab === tabOrName)!\r\n\r\n  G.currentTab = tab.name\r\n  player.tabnumber = index\r\n\r\n  revealStuff()\r\n  hideStuff()\r\n\r\n  ;(document.activeElement as HTMLElement | null)?.blur()\r\n\r\n  const subTabList = subtabInfo[G.currentTab].subTabList\r\n  if (tab.name !== 'settings') {\r\n    for (let i = 0; i < subTabList.length; i++) {\r\n      const id = subTabList[i].buttonID\r\n      if (id) {\r\n        const button = DOMCacheGetOrSet(id)\r\n\r\n        if (button.style.backgroundColor === 'crimson') { // handles every tab except settings and corruptions\r\n          player.subtabNumber = i\r\n          break\r\n        }\r\n        // what in the shit is this?!\r\n        if (player.tabnumber === 9 && button.style.borderColor === 'dodgerblue') { // handle corruption tab\r\n          player.subtabNumber = i\r\n          break\r\n        }\r\n      }\r\n    }\r\n  } else { // handle settings tab\r\n    // The first getElementById makes sure that it still works if other tabs start using the subtabSwitcher class\r\n    const btns = document.querySelectorAll('[id^=\"switchSettingSubTab\"]')\r\n    for (let i = 0; i < btns.length; i++) {\r\n      if (btns[i].classList.contains('buttonActive')) {\r\n        player.subtabNumber = i\r\n        break\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const changeSubTab = (tabOrName: Tab | TabNames, { page, step }: SubTabSwitchOptions) => {\r\n  const tab = typeof tabOrName === 'string'\r\n    ? [...tabs.values()].find(tab => tab.name === tabOrName)\r\n    : tabOrName\r\n\r\n  assert(tab)\r\n  const subTabs = tab.subtabs\r\n\r\n  if (!tab.unlocked || subTabs.subTabList.length === 0) {\r\n    return\r\n  }\r\n\r\n  if (page !== undefined) {\r\n    player.subtabNumber = limitRange(page, 0, subTabs.subTabList.length - 1)\r\n  } else {\r\n    player.subtabNumber = limitRange(player.subtabNumber + step, 0, subTabs.subTabList.length - 1)\r\n  }\r\n  const subTabList = subTabs.subTabList[player.subtabNumber]\r\n\r\n  if (G.currentTab === 'settings') {\r\n    // The first getElementById makes sure that it still works if other tabs start using the subtabSwitcher class\r\n    const btn = DOMCacheGetOrSet('settings').getElementsByClassName('subtabSwitcher')[0].children[player.subtabNumber]\r\n    if (subTabList.unlocked) {\r\n      subTabs.tabSwitcher?.(subTabList.subTabID, btn)\r\n    }\r\n  } else if (subTabList.unlocked) {\r\n    subTabs.tabSwitcher?.(subTabList.subTabID)\r\n    if (tabOrName === 'singularity' && page === 5) {\r\n      player.visitedAmbrosiaSubtab = true\r\n      player.caches.ambrosiaGeneration.updateVal('DefaultVal')\r\n    }\r\n  }\r\n}\r\n\r\nexport function subTabsInMainTab (name: TabNames) {\r\n  const tab = [...tabs.values()].find(tab => tab.name === name)\r\n  assert(tab)\r\n\r\n  return tab.subtabs.subTabList.length\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { calculateCubeBlessings, calculateCubicSumData, calculateSummationNonLinear } from './Calculate'\r\nimport { upgradeupdate } from './Upgrades'\r\nimport { revealStuff } from './UpdateHTML'\r\nimport { Globals as G } from './Variables'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { updateResearchBG } from './Research'\r\nimport { calculateSingularityDebuff } from './singularity'\r\nimport i18next from 'i18next'\r\n\r\nexport interface IMultiBuy {\r\n    levelCanBuy: number\r\n    cost: number\r\n}\r\n\r\nconst cubeAutomationIndices = [4, 5, 6, 7, 8, 9, 10, // row 1\r\n  20,                   // row 2\r\n  26, 27,               // row 3\r\n  48, 49]               // row 5\r\n\r\nconst researchAutomationIndices = [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, // row 2\r\n  61, 71, 72, 73, 74, 75, // row 3\r\n  124,                    // row 5\r\n  130, 135, 145, 150,     // row 6\r\n  175,                    // row 7\r\n  190]                    // row 8\r\n\r\nconst cubeBaseCost = [\r\n  200, 200, 200, 500, 500, 500, 500, 500, 2000, 40000,\r\n  5000, 1000, 10000, 20000, 40000, 10000, 4000, 1e4, 50000, 12500,\r\n  5e4, 3e4, 3e4, 4e4, 2e5, 4e5, 1e5, 177777, 1e5, 1e6,\r\n  5e5, 3e5, 2e6, 4e6, 2e6, 4e6, 1e6, 2e7, 5e7, 1e7,\r\n  5e6, 1e7, 1e8, 4e7, 2e7, 4e7, 5e7, 1e8, 5e8, 1e8,\r\n  1, 1e4, 1e8, 1e12, 1e16, 10, 1e5, 1e9, 1e13, 1e17,\r\n  1e2, 1e6, 1e10, 1e14, 1e18, 1e20, 1e30, 1e40, 1e50, 1e60\r\n]\r\n\r\nexport const cubeMaxLevel = [\r\n  3, 10, 5, 1, 1, 1, 1, 1, 1, 1,\r\n  3, 10, 1, 10, 10, 10, 5, 1, 1, 1,\r\n  5, 10, 1, 10, 10, 10, 1, 1, 5, 1,\r\n  5, 1, 1, 10, 10, 10, 10, 1, 1, 10,\r\n  5, 10, 10, 10, 10, 20, 20, 1, 1, 100000,\r\n  1, 900, 100, 900, 900, 20, 1, 1, 400, 10000,\r\n  100, 1, 1, 1, 1, 1, 1, 1000, 1, 100000\r\n]\r\n\r\nconst getCubeCost = (i: number, buyMax: boolean): IMultiBuy => {\r\n  const linGrowth = (i === 50 ? 0.01 : 0)\r\n  const cubic = i > 50\r\n  const maxLevel = getCubeMax(i)\r\n  let amountToBuy = buyMax ? 1e5: 1\r\n  const cubeUpgrade = player.cubeUpgrades[i]!\r\n  amountToBuy = Math.min(maxLevel - cubeUpgrade, amountToBuy)\r\n  const singularityMultiplier = (i <= 50) ? calculateSingularityDebuff('Cube Upgrades'): 1\r\n\r\n  let metaData:IMultiBuy\r\n\r\n  if (cubic) {\r\n    // TODO: Fix this inconsistency later.\r\n    amountToBuy = buyMax ? maxLevel: Math.min(maxLevel, cubeUpgrade + 1)\r\n    metaData = calculateCubicSumData(cubeUpgrade, cubeBaseCost[i-1],\r\n      Number(player.wowCubes), amountToBuy)\r\n  } else {\r\n    metaData = calculateSummationNonLinear(cubeUpgrade,\r\n      cubeBaseCost[i-1] * singularityMultiplier,\r\n      Number(player.wowCubes), linGrowth, amountToBuy)\r\n  }\r\n\r\n  return metaData\r\n}\r\n\r\nconst getCubeMax = (i: number) => {\r\n  let baseValue = cubeMaxLevel[i-1]\r\n\r\n  if (player.cubeUpgrades[57] > 0 && i < 50 && i % 10 === 1) {\r\n    baseValue += 1\r\n  }\r\n\r\n  return baseValue\r\n}\r\n\r\nexport const cubeUpgradeDesc = (i: number, buyMax = player.cubeUpgradesBuyMaxToggle) => {\r\n  const metaData = getCubeCost(i, buyMax)\r\n  const a = DOMCacheGetOrSet('cubeUpgradeName')\r\n  const b = DOMCacheGetOrSet('cubeUpgradeDescription')\r\n  const c = DOMCacheGetOrSet('cubeUpgradeCost')\r\n  const d = DOMCacheGetOrSet('cubeUpgradeLevel')\r\n  const maxLevel = getCubeMax(i)\r\n\r\n  a.textContent = i18next.t(`cubes.upgradeNames.${i}`)\r\n  b.textContent = i18next.t(`cubes.upgradeDescriptions.${i}`)\r\n  c.textContent = i18next.t('cubes.cubeMetadata.cost', { value1: format(metaData.cost, 0, true), value2: format(metaData.levelCanBuy-player.cubeUpgrades[i]!, 0, true) })\r\n  c.style.color = 'var(--green-text-color)'\r\n  d.textContent = i18next.t('cubes.cubeMetadata.level', { value1: format(player.cubeUpgrades[i], 0, true), value2: format(maxLevel, 0, true) })\r\n  d.style.color = 'white'\r\n\r\n  // This conditional is true only in the case where you can buy zero levels.\r\n  if (Number(player.wowCubes) < metaData.cost) {\r\n    c.style.color = 'var(--crimson-text-color)'\r\n  }\r\n  if (player.cubeUpgrades[i] === maxLevel) {\r\n    c.style.color = 'gold'\r\n    c.textContent = i18next.t('cubes.cubeMetadata.maxLevel')\r\n    d.style.color = 'plum'\r\n  }\r\n}\r\n\r\nexport const updateCubeUpgradeBG = (i: number) => {\r\n  const a = DOMCacheGetOrSet(`cubeUpg${i}`)\r\n  const maxCubeLevel = getCubeMax(i)\r\n  const cubeUpgrade = player.cubeUpgrades[i]!\r\n  if (cubeUpgrade > maxCubeLevel) {\r\n    player.wowCubes.add((cubeUpgrade - maxCubeLevel) * cubeBaseCost[i-1])\r\n    player.cubeUpgrades[i] = maxCubeLevel\r\n  }\r\n  if (player.cubeUpgrades[i] === 0) {\r\n    a.style.backgroundColor = ''\r\n  }\r\n  if (cubeUpgrade > 0 && cubeUpgrade < maxCubeLevel) {\r\n    a.style.backgroundColor = 'purple'\r\n  }\r\n  if (player.cubeUpgrades[i] === maxCubeLevel) {\r\n    a.style.backgroundColor = 'green'\r\n  }\r\n\r\n}\r\n\r\nexport const awardAutosCookieUpgrade = () => {\r\n  for (const i of cubeAutomationIndices) {\r\n    const maxLevel = getCubeMax(i)\r\n    player.cubeUpgrades[i] = maxLevel\r\n    updateCubeUpgradeBG(i)\r\n  }\r\n\r\n  calculateCubeBlessings()\r\n\r\n  for (const i of researchAutomationIndices) {\r\n    player.researches[i] = G.researchMaxLevels[i]\r\n    updateResearchBG(i)\r\n  }\r\n}\r\n\r\nexport const buyCubeUpgrades = (i: number, buyMax = player.cubeUpgradesBuyMaxToggle, auto = false) => {\r\n  // Actually lock for HTML exploit\r\n  if ((i > 50 && i <= 55 && !player.singularityUpgrades.cookies.getEffect().bonus) ||\r\n        (i > 55 && i <= 60 && !player.singularityUpgrades.cookies2.getEffect().bonus) ||\r\n        (i > 60 && i <= 65 && !player.singularityUpgrades.cookies3.getEffect().bonus) ||\r\n        (i > 65 && i <= 70 && !player.singularityUpgrades.cookies4.getEffect().bonus) ||\r\n        (i > 70 && !player.singularityUpgrades.cookies5.getEffect().bonus)) {\r\n    return\r\n  }\r\n\r\n  const metaData = getCubeCost(i, buyMax)\r\n  const maxLevel = getCubeMax(i)\r\n  if (Number(player.wowCubes) >= metaData.cost && player.cubeUpgrades[i]! < maxLevel) {\r\n    player.wowCubes.sub(100 / 100 * metaData.cost)\r\n    player.cubeUpgrades[i] = metaData.levelCanBuy\r\n  } else {\r\n    return\r\n  }\r\n\r\n  if (i === 4 && player.cubeUpgrades[4] > 0) {\r\n    for (let j = 94; j <= 98; j++) {\r\n      player.upgrades[j] = 1\r\n      upgradeupdate(j, true)\r\n    }\r\n  }\r\n  if (i === 5 && player.cubeUpgrades[5] > 0) {\r\n    player.upgrades[99] = 1\r\n    upgradeupdate(99, true)\r\n  }\r\n  if (i === 6 && player.cubeUpgrades[6] > 0) {\r\n    player.upgrades[100] = 1\r\n    upgradeupdate(100, true)\r\n  }\r\n\r\n  if (i === 51 && player.cubeUpgrades[51] > 0) {\r\n    awardAutosCookieUpgrade()\r\n  }\r\n\r\n  if (i === 57 && player.cubeUpgrades[57] > 0) {\r\n    for (let j = 1; j < player.cubeUpgrades.length; j++) {\r\n      updateCubeUpgradeBG(j)\r\n    }\r\n  }\r\n\r\n  if (!auto) {\r\n    cubeUpgradeDesc(i)\r\n    revealStuff()\r\n    calculateCubeBlessings()\r\n  }\r\n  updateCubeUpgradeBG(i)\r\n}\r\n\r\nexport const autoBuyCubeUpgrades = () => {\r\n  if (player.autoCubeUpgradesToggle && ((player.highestSingularityCount >= 50 && player.insideSingularityChallenge) || player.highestSingularityCount >= 150)) {\r\n    const cheapet = []\r\n\r\n    for (let i = 1; i < player.cubeUpgrades.length; i++) {\r\n      const maxLevel = getCubeMax(i)\r\n      if (player.cubeUpgrades[i]! < maxLevel) {\r\n        const metaData = getCubeCost(i, true)\r\n        cheapet.push([i, metaData.cost, metaData.levelCanBuy])\r\n      }\r\n    }\r\n\r\n    if (cheapet.length > 0) {\r\n      let update = false\r\n\r\n      cheapet.sort((a, b) => {\r\n        return a[1] - b[1]\r\n      })\r\n\r\n      for (const value of cheapet) {\r\n        const maxLevel = getCubeMax(value[0])\r\n        const metaData = getCubeCost(value[0], true)\r\n        if (Number(player.wowCubes) >= metaData.cost && player.cubeUpgrades[value[0]]! < maxLevel && (player.cubeUpgradesBuyMaxToggle || maxLevel === metaData.levelCanBuy)) {\r\n          buyCubeUpgrades(value[0], true, true)\r\n          update = true\r\n        }\r\n      }\r\n\r\n      if (update) {\r\n        revealStuff()\r\n        calculateCubeBlessings()\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { Synergism } from './Events'\r\nimport { Alert, revealStuff } from './UpdateHTML'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { calculateSingularityDebuff } from './singularity'\r\n\r\nconst platonicUpgradeDesc = [\r\n  '+0.0090% Cubes per Corruption level per level!',\r\n  '+0.018% Tesseracts per Corruption level per level!',\r\n  '+0.054% Hypercubes per Corruption level per level!',\r\n  'Gain +2.4% Platonic Cubes per level! It is that simple.',\r\n  'C10 Exponent: 1.035 --> 1.0375, Constant tax exponent +0.10, 2x faster Constant production, +20% Quarks, +10 Reincarnation Challenge Cap, +5 Ascension Challenge Cap, 2x Obtainium and Offerings, ^1.10 coin gain in C15, as well +1 Corruption Cap Level!',\r\n  'Multiplies Viscosity exponent by (1 + level/30), capacity of ^1 on Multipliers and Accelerators.',\r\n  'Raises speed below 1x to the power of ^(1 - level/30).',\r\n  'Divides Hyperchallenged by (1 + 0.4 * level), with a minimum 1x Challenge requirement multiplier!',\r\n  'Raise Obtainium to the power of (1+(0.09*log10(Obtainium owned))) and add another x2.5 multiplier (Uncorruptable), up until 1e100 Obtainium!',\r\n  'C10 Exponent: 1.0375 --> 1.04, Constant tax exponent +0.20, 10x faster Constant production, +25% Quarks, +10 Reincarnation Challenge Cap, +5 Ascension Challenge Cap, 3.5x Obtainium and Offerings, 2x All Cubes, ^1.25 ant exponent in C15, +1 Corruption Cap Level again!',\r\n  'With this upgrade, you will gain diamonds equal to particle gain on Reincarnation while using Market Deflation 11 or higher! Does not work with Cube upgrade [3x8]!',\r\n  'Gain (1 + lvl/100)x Ant multiplier per Challenge completion, ignoring corruptions to Ants.',\r\n  'Effect of Drought is raised to the power of 0.5.',\r\n  'Reduce the effect of Financial Recession in Challenge 15, multiplying the coin exponent by 1.55.',\r\n  'You begin to find the start of the abyss. Coin Exponent +0.10 in Challenge 15, Challenge 15 Score +25%, Ascension Speed +0.2% per Corruption Level (Max: 20%), +1% all Cube types per C9 Completion (Multiplicative), +30% Quarks, 1e250x Tesseract Building Multiplier, 2x Ascension Count, +30 Reincarnation Challenge Cap, +20 Ascension Challenge Cap, 6x Offerings and Obtainium (Uncorruptable)! Talk about a deep dive.',\r\n  'Increase powder conversion rate by 1% per level, gain +2% Ascension count per level and gain up to 2% more Ascension count per level based on powder, up to 100,000. This will also multiply Tesseract Building production by (Powder + 1)^(10 * level), uncapped.',\r\n  'If Viscosity Corruption is set to level 10 or higher, score multiplier is raised by an exponent. That exponent is 3 + 0.04 per level of this upgrade.',\r\n  'Raise the base percentage of Constant Upgrade 1 by 0.1% and increase the base percentage cap of Constant Upgrade 2 by 0.3% per level!',\r\n  'The diminishing return power on Chronos Hepteract changes from 0.166 to (0.166 + 0.00133 * level) [Max of 0.2333].',\r\n  'You know, maybe some things should be left unbought.'\r\n]\r\n\r\nexport interface IPlatBaseCost {\r\n    obtainium: number\r\n    offerings: number\r\n    cubes: number\r\n    tesseracts: number\r\n    hypercubes: number\r\n    platonics: number\r\n    abyssals: number\r\n    maxLevel: number\r\n    priceMult?: number\r\n}\r\n\r\nexport const platUpgradeBaseCosts: Record<number, IPlatBaseCost> = {\r\n  1: {\r\n    obtainium: 1e70,\r\n    offerings: 1e45,\r\n    cubes: 1e13,\r\n    tesseracts: 1e6,\r\n    hypercubes: 1e5,\r\n    platonics: 1e4,\r\n    abyssals: 0,\r\n    maxLevel: 250,\r\n    priceMult: 2\r\n  },\r\n  2: {\r\n    obtainium: 3e70,\r\n    offerings: 2e45,\r\n    cubes: 1e11,\r\n    tesseracts: 1e8,\r\n    hypercubes: 1e5,\r\n    platonics: 1e4,\r\n    abyssals: 0,\r\n    maxLevel: 250,\r\n    priceMult: 2\r\n  },\r\n  3: {\r\n    obtainium: 1e71,\r\n    offerings: 4e45,\r\n    cubes: 1e11,\r\n    tesseracts: 1e6,\r\n    hypercubes: 1e7,\r\n    platonics: 1e4,\r\n    abyssals: 0,\r\n    maxLevel: 250,\r\n    priceMult: 2\r\n  },\r\n  4: {\r\n    obtainium: 4e71,\r\n    offerings: 1e46,\r\n    cubes: 1e12,\r\n    tesseracts: 1e7,\r\n    hypercubes: 1e6,\r\n    platonics: 1e6,\r\n    abyssals: 0,\r\n    maxLevel: 250,\r\n    priceMult: 2\r\n  },\r\n  5: {\r\n    obtainium: 1e80,\r\n    offerings: 1e60,\r\n    cubes: 1e14,\r\n    tesseracts: 1e9,\r\n    hypercubes: 1e8,\r\n    platonics: 1e7,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  6: {\r\n    obtainium: 1e82,\r\n    offerings: 1e61,\r\n    cubes: 1e15,\r\n    tesseracts: 1e9,\r\n    hypercubes: 1e8,\r\n    platonics: 1e7,\r\n    abyssals: 0,\r\n    maxLevel: 10\r\n  },\r\n  7: {\r\n    obtainium: 1e84,\r\n    offerings: 3e62,\r\n    cubes: 2e15,\r\n    tesseracts: 2e9,\r\n    hypercubes: 2e8,\r\n    platonics: 1.5e7,\r\n    abyssals: 0,\r\n    maxLevel: 15\r\n  },\r\n  8: {\r\n    obtainium: 1e87,\r\n    offerings: 1e64,\r\n    cubes: 4e15,\r\n    tesseracts: 4e9,\r\n    hypercubes: 4e8,\r\n    platonics: 3e7,\r\n    abyssals: 0,\r\n    maxLevel: 5\r\n  },\r\n  9: {\r\n    obtainium: 1e90,\r\n    offerings: 1e66,\r\n    cubes: 1e16,\r\n    tesseracts: 1e10,\r\n    hypercubes: 1e9,\r\n    platonics: 5e7,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  10: {\r\n    obtainium: 1e93,\r\n    offerings: 1e68,\r\n    cubes: 1e18,\r\n    tesseracts: 1e12,\r\n    hypercubes: 1e11,\r\n    platonics: 1e9,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  11: {\r\n    obtainium: 2e96,\r\n    offerings: 1e70,\r\n    cubes: 2e17,\r\n    tesseracts: 2e11,\r\n    hypercubes: 2e10,\r\n    platonics: 2e8,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  12: {\r\n    obtainium: 1e100,\r\n    offerings: 1e72,\r\n    cubes: 1e18,\r\n    tesseracts: 1e12,\r\n    hypercubes: 1e11,\r\n    platonics: 1e9,\r\n    abyssals: 0,\r\n    maxLevel: 10\r\n  },\r\n  13: {\r\n    obtainium: 2e104,\r\n    offerings: 1e74,\r\n    cubes: 2e19,\r\n    tesseracts: 4e12,\r\n    hypercubes: 4e11,\r\n    platonics: 4e9,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  14: {\r\n    obtainium: 1e108,\r\n    offerings: 1e77,\r\n    cubes: 4e20,\r\n    tesseracts: 1e13,\r\n    hypercubes: 1e12,\r\n    platonics: 1e10,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  15: {\r\n    obtainium: 1e115,\r\n    offerings: 1e80,\r\n    cubes: 1e23,\r\n    tesseracts: 1e15,\r\n    hypercubes: 1e14,\r\n    platonics: 1e12,\r\n    abyssals: 1,\r\n    maxLevel: 1\r\n  },\r\n  16: {\r\n    obtainium: 1e140,\r\n    offerings: 1e110,\r\n    cubes: 0,\r\n    tesseracts: 0,\r\n    hypercubes: 2.5e15,\r\n    platonics: 0,\r\n    abyssals: 0,\r\n    maxLevel: 100,\r\n    priceMult: 10\r\n  },\r\n  17: {\r\n    obtainium: 1e145,\r\n    offerings: 1e113,\r\n    cubes: 0,\r\n    tesseracts: 0,\r\n    hypercubes: 1e19,\r\n    platonics: 0,\r\n    abyssals: 2,\r\n    maxLevel: 20,\r\n    priceMult: 10\r\n  },\r\n  18: {\r\n    obtainium: 1e150,\r\n    offerings: 1e116,\r\n    cubes: 0,\r\n    tesseracts: 0,\r\n    hypercubes: 1e19,\r\n    platonics: 0,\r\n    abyssals: 4,\r\n    maxLevel: 40,\r\n    priceMult: 500\r\n  },\r\n  19: {\r\n    obtainium: 1e160,\r\n    offerings: 1e121,\r\n    cubes: 0,\r\n    tesseracts: 0,\r\n    hypercubes: 1e21,\r\n    platonics: 0,\r\n    abyssals: 64,\r\n    maxLevel: 50,\r\n    priceMult: 200\r\n  },\r\n  20: {\r\n    obtainium: 1e180,\r\n    offerings: 1e130,\r\n    cubes: 1e45,\r\n    tesseracts: 1e28,\r\n    hypercubes: 1e25,\r\n    platonics: 1e25,\r\n    abyssals: Math.pow(2, 30) - 1,\r\n    maxLevel: 1\r\n  }\r\n}\r\n\r\nconst checkPlatonicUpgrade = (index: number, auto = false): Record<keyof (IPlatBaseCost & { canBuy: boolean }), boolean> => {\r\n  let checksum = 0\r\n  const resources = ['obtainium', 'offerings', 'cubes', 'tesseracts', 'hypercubes', 'platonics', 'abyssals'] as const\r\n  const resourceNames = ['researchPoints', 'runeshards', 'wowCubes', 'wowTesseracts', 'wowHypercubes', 'wowPlatonicCubes', 'wowAbyssals'] as const\r\n  const checks: Record<string, boolean> = {\r\n    obtainium: false,\r\n    offerings: false,\r\n    cubes: false,\r\n    tesseracts: false,\r\n    hypercubes: false,\r\n    platonics: false,\r\n    abyssals: false,\r\n    canBuy: false\r\n  }\r\n  let priceMultiplier = 1\r\n  if (platUpgradeBaseCosts[index].priceMult) {\r\n    priceMultiplier = Math.pow(platUpgradeBaseCosts[index].priceMult!, Math.pow(player.platonicUpgrades[index] / (platUpgradeBaseCosts[index].maxLevel - 1), 1.25))\r\n  }\r\n  priceMultiplier *= calculateSingularityDebuff('Platonic Costs')\r\n\r\n  for (let i = 0; i < resources.length - 1; i++) {\r\n    if (auto && (resources[i] === 'obtainium' || resources[i] === 'offerings')) {\r\n      checksum++\r\n      checks[resources[i]] = true\r\n    } else if (Math.floor(platUpgradeBaseCosts[index][resources[i]] * priceMultiplier) <= (player[resourceNames[i]] as number)) {\r\n      checksum++\r\n      checks[resources[i]] = true\r\n    }\r\n  }\r\n\r\n  if (player.hepteractCrafts.abyss.BAL >= Math.floor(platUpgradeBaseCosts[index].abyssals * priceMultiplier) || platUpgradeBaseCosts[index].abyssals === 0) {\r\n    checksum ++\r\n    checks.abyssals = true\r\n  }\r\n\r\n  if (checksum === resources.length && player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\r\n    checks.canBuy = true\r\n  }\r\n  return checks\r\n}\r\n\r\nexport const createPlatonicDescription = (index: number) => {\r\n  let maxLevelAppend = ''\r\n  if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\r\n    maxLevelAppend = ' [MAX]'\r\n  }\r\n  const resourceCheck = checkPlatonicUpgrade(index)\r\n\r\n  let priceMultiplier = 1\r\n  if (platUpgradeBaseCosts[index].priceMult) {\r\n    priceMultiplier = Math.pow(platUpgradeBaseCosts[index].priceMult!, Math.pow(player.platonicUpgrades[index] / (platUpgradeBaseCosts[index].maxLevel - 1), 1.25))\r\n  }\r\n  priceMultiplier *= calculateSingularityDebuff('Platonic Costs')\r\n\r\n  DOMCacheGetOrSet('platonicUpgradeDescription').textContent = platonicUpgradeDesc[index-1]\r\n  DOMCacheGetOrSet('platonicUpgradeLevel').textContent = 'Level: ' + format(player.platonicUpgrades[index]) + '/' + format(platUpgradeBaseCosts[index].maxLevel) + maxLevelAppend\r\n  DOMCacheGetOrSet('platonicOfferingCost').textContent = format(player.runeshards) + '/' + format(platUpgradeBaseCosts[index].offerings * priceMultiplier) + ' Offerings'\r\n  DOMCacheGetOrSet('platonicObtainiumCost').textContent = format(player.researchPoints) + '/' + format(platUpgradeBaseCosts[index].obtainium * priceMultiplier) + ' Obtainium'\r\n  DOMCacheGetOrSet('platonicCubeCost').textContent = format(player.wowCubes) + '/' + format(platUpgradeBaseCosts[index].cubes * priceMultiplier) + ' Wow! Cubes'\r\n  DOMCacheGetOrSet('platonicTesseractCost').textContent = format(player.wowTesseracts) + '/' + format(platUpgradeBaseCosts[index].tesseracts * priceMultiplier) + ' Wow! Tesseracts'\r\n  DOMCacheGetOrSet('platonicHypercubeCost').textContent = format(player.wowHypercubes) + '/' + format(platUpgradeBaseCosts[index].hypercubes * priceMultiplier) + ' Wow! Hypercubes'\r\n  DOMCacheGetOrSet('platonicPlatonicCost').textContent = format(player.wowPlatonicCubes) + '/' + format(platUpgradeBaseCosts[index].platonics * priceMultiplier) + ' Platonic! Cubes'\r\n  DOMCacheGetOrSet('platonicHepteractCost').textContent = format(player.hepteractCrafts.abyss.BAL) + '/' + format(Math.floor(platUpgradeBaseCosts[index].abyssals * priceMultiplier), 0, true) + ' Hepteracts of the Abyss'\r\n\r\n  resourceCheck.offerings ?\r\n    DOMCacheGetOrSet('platonicOfferingCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicOfferingCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.obtainium ?\r\n    DOMCacheGetOrSet('platonicObtainiumCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicObtainiumCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.cubes ?\r\n    DOMCacheGetOrSet('platonicCubeCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicCubeCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.tesseracts ?\r\n    DOMCacheGetOrSet('platonicTesseractCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicTesseractCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.hypercubes ?\r\n    DOMCacheGetOrSet('platonicHypercubeCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicHypercubeCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.platonics ?\r\n    DOMCacheGetOrSet('platonicPlatonicCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicPlatonicCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.abyssals ?\r\n    DOMCacheGetOrSet('platonicHepteractCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicHepteractCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  if (player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\r\n    DOMCacheGetOrSet('platonicUpgradeLevel').style.color = 'cyan'\r\n    resourceCheck.canBuy ?\r\n      (DOMCacheGetOrSet('platonicCanBuy').style.color = 'gold', DOMCacheGetOrSet('platonicCanBuy').textContent = '===Affordable! Click to buy!===') :\r\n      (DOMCacheGetOrSet('platonicCanBuy').style.color = 'var(--crimson-text-color)', DOMCacheGetOrSet('platonicCanBuy').textContent = '===You cannot afford this!===')\r\n  }\r\n\r\n  if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\r\n    DOMCacheGetOrSet('platonicUpgradeLevel').style.color = 'gold'\r\n    DOMCacheGetOrSet('platonicCanBuy').style.color = 'var(--orchid-text-color)'\r\n    DOMCacheGetOrSet('platonicCanBuy').textContent = '===Maxed==='\r\n  }\r\n}\r\n\r\nexport const updatePlatonicUpgradeBG = (i: number) => {\r\n  const a = DOMCacheGetOrSet(`platUpg${i}`)\r\n\r\n  const maxLevel = platUpgradeBaseCosts[i].maxLevel\r\n  if (player.platonicUpgrades[i] === 0) {\r\n    a.style.backgroundColor = ''\r\n  } else if (player.platonicUpgrades[i] > 0 && player.platonicUpgrades[i] < maxLevel) {\r\n    a.style.backgroundColor = 'purple'\r\n  } else if (player.platonicUpgrades[i] === maxLevel) {\r\n    a.style.backgroundColor = 'green'\r\n  }\r\n\r\n}\r\n\r\nexport const buyPlatonicUpgrades = (index: number, auto = false) => {\r\n  while (index > 0) {\r\n    const resourceCheck = checkPlatonicUpgrade(index, auto)\r\n    let priceMultiplier = 1\r\n    if (platUpgradeBaseCosts[index].priceMult) {\r\n      priceMultiplier = Math.pow(platUpgradeBaseCosts[index].priceMult!, Math.pow(player.platonicUpgrades[index] / (platUpgradeBaseCosts[index].maxLevel - 1), 1.25))\r\n    }\r\n    priceMultiplier *= calculateSingularityDebuff('Platonic Costs')\r\n\r\n    if (resourceCheck.canBuy) {\r\n      player.platonicUpgrades[index] += 1\r\n      // Auto Platonic Upgrades no longer claim the cost of Offerings and Obtainiums\r\n      if (!auto) {\r\n        player.researchPoints -= Math.floor(platUpgradeBaseCosts[index].obtainium * priceMultiplier)\r\n        player.runeshards -= Math.floor(platUpgradeBaseCosts[index].offerings * priceMultiplier)\r\n      }\r\n      player.wowCubes.sub(Math.floor(platUpgradeBaseCosts[index].cubes * priceMultiplier))\r\n      player.wowTesseracts.sub(Math.floor(platUpgradeBaseCosts[index].tesseracts * priceMultiplier))\r\n      player.wowHypercubes.sub(Math.floor(platUpgradeBaseCosts[index].hypercubes * priceMultiplier))\r\n      player.wowPlatonicCubes.sub(Math.floor(platUpgradeBaseCosts[index].platonics * priceMultiplier))\r\n      player.hepteractCrafts.abyss.spend(Math.floor(platUpgradeBaseCosts[index].abyssals * priceMultiplier))\r\n\r\n      Synergism.emit('boughtPlatonicUpgrade', platUpgradeBaseCosts[index])\r\n      if (index === 20 && !auto && player.singularityCount === 0) {\r\n        void Alert('While I strongly recommended you not to buy this, you did it anyway. For that, you have unlocked the rune of Grandiloquence, for you are a richass.')\r\n      }\r\n    } else {\r\n      break\r\n    }\r\n\r\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel || player.singularityCount === 0) {\r\n      break\r\n    }\r\n  }\r\n  createPlatonicDescription(index)\r\n  updatePlatonicUpgradeBG(index)\r\n  revealStuff()\r\n}\r\n\r\nexport const autoBuyPlatonicUpgrades = () => {\r\n  if (player.autoPlatonicUpgradesToggle && ((player.highestSingularityCount >= 100 && player.insideSingularityChallenge) || player.highestSingularityCount >= 200)) {\r\n    for (let i = 1; i < player.platonicUpgrades.length; i++) {\r\n      if (player.platonicUpgrades[i] < platUpgradeBaseCosts[i].maxLevel) {\r\n        const resourceCheck = checkPlatonicUpgrade(i, true)\r\n        if (resourceCheck.canBuy) {\r\n          buyPlatonicUpgrades(i, true)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { player, format, blankSave, updateAll, saveSynergy } from './Synergism'\r\nimport {\r\n  calculateOfferings, CalcCorruptionStuff, calculateCubeBlessings, calculateRuneLevels,\r\n  calculateAnts, calculateObtainium, calculateTalismanEffects, calculateAntSacrificeELO,\r\n  calcAscensionCount, calculateGoldenQuarkGain, calculatePowderConversion } from './Calculate'\r\nimport { resetofferings } from './Runes'\r\nimport { updateTalismanInventory, updateTalismanAppearance } from './Talismans'\r\nimport { calculateTesseractBlessings } from './Tesseracts'\r\nimport { Alert, revealStuff, updateChallengeDisplay } from './UpdateHTML'\r\nimport { upgradeupdate } from './Upgrades'\r\nimport { Globals as G } from './Variables'\r\nimport Decimal from 'break_infinity.js'\r\nimport { getElementById } from './Utility'\r\nimport { achievementaward, ascensionAchievementCheck, challengeachievementcheck } from './Achievements'\r\nimport { buyResearch, updateResearchBG } from './Research'\r\nimport { calculateHypercubeBlessings } from './Hypercubes'\r\nimport type {\r\n  ResetHistoryEntryPrestige,\r\n  ResetHistoryEntryTranscend,\r\n  ResetHistoryEntryReincarnate,\r\n  ResetHistoryEntryAscend,\r\n  ResetHistoryEntrySingularity\r\n} from './History'\r\nimport { challengeRequirement } from './Challenges'\r\nimport { Synergism } from './Events'\r\nimport type { Player, resetNames, OneToFive } from './types/Synergism'\r\nimport { updateClassList } from './Utility'\r\nimport { corrChallengeMinimum, corruptionStatsUpdate, maxCorruptionLevel } from './Corruptions'\r\nimport { toggleAutoChallengeModeText } from './Toggles'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { WowCubes } from './CubeExperimental'\r\nimport { importSynergism } from './ImportExport'\r\nimport { resetShopUpgrades, shopData } from './Shop'\r\nimport { QuarkHandler } from './Quark'\r\nimport { calculateSingularityDebuff, getFastForwardTotalMultiplier } from './singularity'\r\nimport { updateCubeUpgradeBG, awardAutosCookieUpgrade, autoBuyCubeUpgrades } from './Cubes'\r\nimport { autoBuyPlatonicUpgrades, updatePlatonicUpgradeBG } from './Platonic'\r\nimport { calculateTessBuildingsInBudget, buyTesseractBuilding } from './Buy'\r\nimport { getAutoHepteractCrafts } from './Hepteracts'\r\nimport type { TesseractBuildings } from './Buy'\r\nimport { sumContents } from './Utility'\r\nimport { setInterval, clearInterval } from './Timers'\r\nimport { IconSets } from './Themes'\r\nimport { changeTab, changeSubTab } from './Tabs'\r\n\r\nlet repeatreset: ReturnType<typeof setTimeout>\r\n\r\nexport const resetrepeat = (input: resetNames) => {\r\n  clearInterval(repeatreset)\r\n  repeatreset = setInterval(() => resetdetails(input), 50)\r\n}\r\n\r\nexport const resetdetails = (input: resetNames) => {\r\n  DOMCacheGetOrSet('resetofferings1').style.display = 'block'\r\n\r\n  const transcensionChallenge = player.currentChallenge.transcension\r\n  const reincarnationChallenge = player.currentChallenge.reincarnation\r\n\r\n  const offering = calculateOfferings(input)\r\n  const offeringImage = getElementById<HTMLImageElement>('resetofferings1')\r\n  const offeringText = DOMCacheGetOrSet('resetofferings2')\r\n  const currencyImage1 = getElementById<HTMLImageElement>('resetcurrency1')\r\n  const resetObtainiumImage = DOMCacheGetOrSet('resetobtainium')\r\n  const resetObtainiumText = DOMCacheGetOrSet('resetobtainium2')\r\n  const resetInfo = DOMCacheGetOrSet('resetinfo')\r\n  const resetCurrencyGain = DOMCacheGetOrSet('resetcurrency2');\r\n\r\n  (input == 'reincarnation') ?\r\n    (resetObtainiumImage.style.display = 'block', resetObtainiumText.textContent = format(Math.floor(G.obtainiumGain))):\r\n    (resetObtainiumImage.style.display = 'none', resetObtainiumText.textContent = '');\r\n\r\n  (input == 'ascensionChallenge' || input == 'ascension' || input == 'singularity')?\r\n    offeringImage.style.display = offeringText.style.display = 'none':\r\n    offeringImage.style.display = offeringText.style.display = 'block'\r\n\r\n  switch (input) {\r\n    case 'prestige':\r\n      if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png')) {\r\n        currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png'\r\n      }\r\n      currencyImage1.style.display = 'block'\r\n      resetCurrencyGain.textContent = '+' + format(G.prestigePointGain)\r\n      resetInfo.textContent = 'Coins, Coin Producers, Coin Upgrades, and Crystals are reset, but in return you gain diamonds and a few Offerings. Required: ' + format(player.coinsThisPrestige) + '/1e16 Coins || TIME SPENT: ' + format(player.prestigecounter) + ' Seconds.'\r\n      resetInfo.style.color = 'turquoise'\r\n      break\r\n    case 'transcension':\r\n      if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Mythos.png')) {\r\n        currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Mythos.png'\r\n      }\r\n      currencyImage1.style.display = 'block'\r\n      resetCurrencyGain.textContent = '+' + format(G.transcendPointGain)\r\n      resetInfo.textContent = 'Reset all Coin and Diamond Upgrades/Features, Crystal Upgrades & Producers, for Mythos/Offerings. Required: ' + format(player.coinsThisTranscension) + '/1e100 Coins || TIME SPENT: ' + format(player.transcendcounter) + ' Seconds.'\r\n      resetInfo.style.color = 'var(--orchid-text-color)'\r\n      break\r\n    case 'reincarnation':\r\n      if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Particle.png')) {\r\n        currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Particle.png'\r\n      }\r\n      currencyImage1.style.display = 'block'\r\n      resetCurrencyGain.textContent = '+' + format(G.reincarnationPointGain)\r\n      resetInfo.textContent = 'Reset ALL previous reset tiers, but you will gain Particles, Obtainium and Offerings! Required: ' + format(player.transcendShards) + '/1e300 Mythos Shards || TIME SPENT: ' + format(player.reincarnationcounter) + ' Seconds.'\r\n      resetInfo.style.color = 'limegreen'\r\n      break\r\n    case 'acceleratorBoost':\r\n      if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png')) {\r\n        currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png'\r\n      }\r\n      currencyImage1.style.display = 'block'\r\n      resetCurrencyGain.textContent = '-' + format(player.acceleratorBoostCost)\r\n      resetInfo.textContent = 'Reset Coin Producers/Upgrades, Crystals and Diamonds in order to increase the power of your Accelerators. Required: ' + format(player.prestigePoints) + '/' + format(player.acceleratorBoostCost) + ' Diamonds.'\r\n      resetInfo.style.color = 'cyan'\r\n      break\r\n    case 'transcensionChallenge':\r\n      currencyImage1.style.display = 'none'\r\n      resetCurrencyGain.textContent = '';\r\n\r\n      (transcensionChallenge !== 0)? // TODO(@KhafraDev):\r\n        (resetInfo.style.color = 'aquamarine', resetInfo.textContent = `Are you tired of being in your Challenge or stuck? Click to leave Challenge ${transcensionChallenge}. Progress: ${format(player.coinsThisTranscension)}/${format(challengeRequirement(transcensionChallenge, player.challengecompletions[transcensionChallenge]))} Coins. TIME SPENT: ${format(player.transcendcounter)} Seconds.`):\r\n        (resetInfo.style.color = 'var(--crimson-text-color)', resetInfo.textContent = 'You\\'re not in a Transcension Challenge right now. Get in one before you can leave it, duh!')\r\n      break\r\n    case 'reincarnationChallenge':\r\n      currencyImage1.style.display = 'none'\r\n      resetCurrencyGain.textContent = ''\r\n\r\n      if (reincarnationChallenge !== 0) {\r\n        const goal = reincarnationChallenge >= 9 ? 'coins' : 'transcendShards'\r\n        const goaldesc = reincarnationChallenge >= 9 ? ' Coins' : ' Mythos Shards'\r\n\r\n        resetInfo.style.color = 'silver'\r\n        resetInfo.textContent = `Are you done or tired of being in your Challenge? Click to leave Challenge ${reincarnationChallenge}. Progress: ${format(player[goal])}/${format(challengeRequirement(reincarnationChallenge, player.challengecompletions[reincarnationChallenge], reincarnationChallenge))} ${goaldesc}. TIME SPENT: ${format(player.reincarnationcounter)} Seconds.`\r\n      } else {\r\n        resetInfo.style.color = 'var(--crimson-text-color)'\r\n        resetInfo.textContent = 'You\\'re not in a Reincarnation Challenge right now. How could you leave what you are not in?'\r\n      }\r\n      break\r\n    case 'ascensionChallenge':\r\n      currencyImage1.style.display = 'none'\r\n      resetCurrencyGain.textContent = ''\r\n      resetInfo.textContent = 'Click this if you\\'re in an Ascension Challenge and want to leave. You get it already!'\r\n      resetInfo.style.color = 'gold'\r\n      break\r\n    case 'ascension':\r\n      currencyImage1.style.display = 'none'\r\n      resetCurrencyGain.textContent = ''\r\n      resetInfo.textContent = 'Ascend, C-10 is required! +' + format(CalcCorruptionStuff()[4], 0, true) + ' Wow! Cubes for doing it! Time: ' + format(player.ascensionCounter, 0, false) + ' Seconds. (Real-time ' + format(player.ascensionCounterRealReal, 0, false) + ' Seconds)'\r\n      resetInfo.style.color = 'gold'\r\n      break\r\n    case 'singularity':\r\n      currencyImage1.style.display = 'none'\r\n      resetCurrencyGain.textContent = ''\r\n      resetInfo.textContent = 'Are you willing to give up your laurels for a greater Challenge? The Ant God bribes you with ' + format(calculateGoldenQuarkGain(), 2, true) + ' Golden Quarks. Time: ' + format(player.singularityCounter, 0, false) + ' Seconds.'\r\n      resetInfo.style.color = 'lightgoldenrodyellow'\r\n  }\r\n  DOMCacheGetOrSet('resetofferings2').textContent = '+' + format(offering)\r\n}\r\n\r\nexport const updateAutoReset = (i: number) => {\r\n  let value = null\r\n  if (i === 1) {\r\n    value = parseFloat((DOMCacheGetOrSet('prestigeamount') as HTMLInputElement).value) || 0\r\n    player.prestigeamount = Math.max(value, 0)\r\n  } else if (i === 2) {\r\n    value = parseFloat((DOMCacheGetOrSet('transcendamount') as HTMLInputElement).value) || 0\r\n    player.transcendamount = Math.max(value, 0)\r\n  } else if (i === 3) {\r\n    value = parseFloat((DOMCacheGetOrSet('reincarnationamount') as HTMLInputElement).value) || 0\r\n    player.reincarnationamount = Math.max(value, 0)\r\n  } else if (i === 4) {\r\n    value = Math.floor(parseFloat((DOMCacheGetOrSet('ascensionAmount') as HTMLInputElement).value)) || 1\r\n    player.autoAscendThreshold = Math.max(value, 1)\r\n  } else if (i === 5) {\r\n    value = parseFloat((DOMCacheGetOrSet('autoAntSacrificeAmount') as HTMLInputElement).value) || 0\r\n    player.autoAntSacTimer = Math.max(value, 0)\r\n  }\r\n}\r\n\r\nexport const updateTesseractAutoBuyAmount = () => {\r\n  const value = Math.floor(parseFloat((DOMCacheGetOrSet('tesseractAmount') as HTMLInputElement).value)) || 0\r\n  player.tesseractAutoBuyerAmount = Math.max(value, 0)\r\n}\r\n\r\nexport const updateAutoCubesOpens = (i: number) => {\r\n  let value = null\r\n  if (i === 1) {\r\n    value = Number((DOMCacheGetOrSet('cubeOpensInput') as HTMLInputElement).value) || 0\r\n    player.openCubes = Math.max(Math.min(value, 100), 0)\r\n  } else if (i === 2) {\r\n    value = Number((DOMCacheGetOrSet('tesseractsOpensInput') as HTMLInputElement).value) || 0\r\n    player.openTesseracts = Math.max(Math.min(value, 100), 0)\r\n  } else if (i === 3) {\r\n    value = Number((DOMCacheGetOrSet('hypercubesOpensInput') as HTMLInputElement).value) || 0\r\n    player.openHypercubes = Math.max(Math.min(value, 100), 0)\r\n  } else if (i === 4) {\r\n    value = Number((DOMCacheGetOrSet('platonicCubeOpensInput') as HTMLInputElement).value) || 0\r\n    player.openPlatonicsCubes = Math.max(Math.min(value, 100), 0)\r\n  }\r\n}\r\n\r\nconst resetAddHistoryEntry = (input: resetNames, from = 'unknown') => {\r\n  const offeringsGiven = calculateOfferings(input)\r\n  const isChallenge = ['enterChallenge', 'leaveChallenge'].includes(from)\r\n\r\n  if (input === 'prestige') {\r\n    const historyEntry: ResetHistoryEntryPrestige = {\r\n      seconds: player.prestigecounter,\r\n      date: Date.now(),\r\n      offerings: offeringsGiven,\r\n      kind: 'prestige',\r\n      diamonds: G.prestigePointGain.toString()\r\n    }\r\n\r\n    Synergism.emit('historyAdd', 'reset', historyEntry)\r\n  } else if (input === 'transcension' || input === 'transcensionChallenge') {\r\n    // Heuristics: transcend entries are not added when entering or leaving a challenge,\r\n    // unless a meaningful gain in particles was made. This prevents spam when using the challenge automator.\r\n    const historyEntry: ResetHistoryEntryTranscend = {\r\n      seconds: player.transcendcounter,\r\n      date: Date.now(),\r\n      offerings: offeringsGiven,\r\n      kind: 'transcend',\r\n      mythos: G.transcendPointGain.toString()\r\n    }\r\n\r\n    Synergism.emit('historyAdd', 'reset', historyEntry)\r\n  } else if (input === 'reincarnation' || input === 'reincarnationChallenge') {\r\n    // Heuristics: reincarnate entries are not added when entering or leaving a challenge,\r\n    // unless a meaningful gain in particles was made. This prevents spam when using the challenge automator.\r\n    if (!isChallenge || G.reincarnationPointGain.gte(player.reincarnationPoints.div(10))) {\r\n      const historyEntry: ResetHistoryEntryReincarnate = {\r\n        seconds: player.reincarnationcounter,\r\n        date: Date.now(),\r\n        offerings: offeringsGiven,\r\n        kind: 'reincarnate',\r\n        particles: G.reincarnationPointGain.toString(),\r\n        obtainium: G.obtainiumGain\r\n      }\r\n\r\n      Synergism.emit('historyAdd', 'reset', historyEntry)\r\n    }\r\n  } else if (input === 'ascension' || input === 'ascensionChallenge') {\r\n    // Ascension entries will only be logged if C10 was completed.\r\n    if (player.challengecompletions[10] > 0) {\r\n      const corruptionMetaData = CalcCorruptionStuff()\r\n      const historyEntry: ResetHistoryEntryAscend = {\r\n        seconds: player.ascensionCounter,\r\n        date: Date.now(),\r\n        c10Completions: player.challengecompletions[10],\r\n        usedCorruptions: player.usedCorruptions.slice(0), // shallow copy,\r\n        corruptionScore: corruptionMetaData[3],\r\n        wowCubes: corruptionMetaData[4],\r\n        wowTesseracts: corruptionMetaData[5],\r\n        wowHypercubes: corruptionMetaData[6],\r\n        wowPlatonicCubes: corruptionMetaData[7],\r\n        wowHepteracts: corruptionMetaData[8],\r\n        kind: 'ascend'\r\n      }\r\n\r\n      // If we are _leaving_ an ascension challenge, log that too.\r\n      if (from !== 'enterChallenge' && player.currentChallenge.ascension !== 0) {\r\n        historyEntry.currentChallenge = player.currentChallenge.ascension\r\n      }\r\n\r\n      Synergism.emit('historyAdd', 'ascend', historyEntry)\r\n    }\r\n  }\r\n}\r\n\r\nexport const reset = (input: resetNames, fast = false, from = 'unknown') => {\r\n  // Handle adding history entries before actually resetting data, to ensure optimal accuracy.\r\n  resetAddHistoryEntry(input, from)\r\n\r\n  resetofferings(input)\r\n  resetUpgrades(1)\r\n  player.coins = new Decimal('102')\r\n  player.coinsThisPrestige = new Decimal('100')\r\n  player.firstOwnedCoin = 0\r\n  player.firstGeneratedCoin = new Decimal('0')\r\n  player.firstCostCoin = new Decimal('100')\r\n  player.secondOwnedCoin = 0\r\n  player.secondGeneratedCoin = new Decimal('0')\r\n  player.secondCostCoin = new Decimal('1e3')\r\n  player.thirdOwnedCoin = 0\r\n  player.thirdGeneratedCoin = new Decimal('0')\r\n  player.thirdCostCoin = new Decimal('2e4')\r\n  player.fourthOwnedCoin = 0\r\n  player.fourthGeneratedCoin = new Decimal('0')\r\n  player.fourthCostCoin = new Decimal('4e5')\r\n  player.fifthOwnedCoin = 0\r\n  player.fifthGeneratedCoin = new Decimal('0')\r\n  player.fifthCostCoin = new Decimal('8e6')\r\n  player.firstGeneratedDiamonds = new Decimal('0')\r\n  player.secondGeneratedDiamonds = new Decimal('0')\r\n  player.thirdGeneratedDiamonds = new Decimal('0')\r\n  player.fourthGeneratedDiamonds = new Decimal('0')\r\n  player.fifthGeneratedDiamonds = new Decimal('0')\r\n  player.multiplierCost = new Decimal('1e4')\r\n  player.multiplierBought = 0\r\n  player.acceleratorCost = new Decimal('500')\r\n  player.acceleratorBought = 0\r\n\r\n  player.prestigeCount += 1\r\n\r\n  player.prestigePoints = player.prestigePoints.add(G.prestigePointGain)\r\n  player.prestigeShards = new Decimal('0')\r\n  player.prestigenoaccelerator = true\r\n  player.prestigenomultiplier = true\r\n  player.prestigenocoinupgrades = true\r\n\r\n  // Notify new players the reset\r\n  if (player.highestSingularityCount === 0) {\r\n    if (input === 'prestige' && !player.unlocks.prestige) {\r\n      DOMCacheGetOrSet('prestigebtn').style.boxShadow = ''\r\n    }\r\n    if (input === 'transcension' && !player.unlocks.transcend) {\r\n      DOMCacheGetOrSet('transcendbtn').style.boxShadow = ''\r\n    }\r\n    if (input === 'reincarnation' && !player.unlocks.reincarnate) {\r\n      DOMCacheGetOrSet('reincarnatebtn').style.boxShadow = ''\r\n    }\r\n    if (input === 'ascension' && player.ascensionCount === 0) {\r\n      DOMCacheGetOrSet('ascendbtn').style.boxShadow = ''\r\n    }\r\n  }\r\n\r\n  player.unlocks.prestige = true\r\n\r\n  if (player.prestigecounter < player.fastestprestige) {\r\n    player.fastestprestige = player.prestigecounter\r\n  }\r\n\r\n  G.prestigePointGain = new Decimal('0')\r\n\r\n  player.prestigecounter = 0\r\n  G.autoResetTimers.prestige = 0\r\n\r\n  G.generatorPower = new Decimal(1)\r\n\r\n  const types = ['transcension', 'transcensionChallenge', 'reincarnation', 'reincarnationChallenge', 'ascension', 'ascensionChallenge']\r\n  if (types.includes(input)) {\r\n    resetUpgrades(2)\r\n    player.coinsThisTranscension = new Decimal('100')\r\n    player.firstOwnedDiamonds = 0\r\n    player.firstCostDiamonds = new Decimal('100')\r\n    player.secondOwnedDiamonds = 0\r\n    player.secondCostDiamonds = new Decimal('1e5')\r\n    player.thirdOwnedDiamonds = 0\r\n    player.thirdCostDiamonds = new Decimal('1e15')\r\n    player.fourthOwnedDiamonds = 0\r\n    player.fourthCostDiamonds = new Decimal('1e40')\r\n    player.fifthOwnedDiamonds = 0\r\n    player.fifthCostDiamonds = new Decimal('1e100')\r\n    player.firstGeneratedMythos = new Decimal('0')\r\n    player.secondGeneratedMythos = new Decimal('0')\r\n    player.thirdGeneratedMythos = new Decimal('0')\r\n    player.fourthGeneratedMythos = new Decimal('0')\r\n    player.fifthGeneratedMythos = new Decimal('0')\r\n    player.acceleratorBoostBought = 0\r\n    player.acceleratorBoostCost = new Decimal('1e3')\r\n\r\n    player.transcendCount += 1\r\n\r\n    player.prestigePoints = new Decimal('0')\r\n    player.transcendPoints = player.transcendPoints.add(G.transcendPointGain)\r\n    player.transcendShards = new Decimal('0')\r\n    player.transcendnocoinupgrades = true\r\n    player.transcendnocoinorprestigeupgrades = true\r\n    player.transcendnoaccelerator = true\r\n    player.transcendnomultiplier = true\r\n\r\n    G.transcendPointGain = new Decimal('0')\r\n\r\n    if (player.achievements[78] > 0.5) {\r\n      player.firstOwnedDiamonds += 1\r\n    }\r\n    if (player.achievements[85] > 0.5) {\r\n      player.secondOwnedDiamonds += 1\r\n    }\r\n    if (player.achievements[92] > 0.5) {\r\n      player.thirdOwnedDiamonds += 1\r\n    }\r\n    if (player.achievements[99] > 0.5) {\r\n      player.fourthOwnedDiamonds += 1\r\n    }\r\n    if (player.achievements[106] > 0.5) {\r\n      player.fifthOwnedDiamonds += 1\r\n    }\r\n\r\n    if (player.achievements[4] > 0.5) {\r\n      player.upgrades[81] = 1\r\n    }\r\n    if (player.achievements[11] > 0.5) {\r\n      player.upgrades[82] = 1\r\n    }\r\n    if (player.achievements[18] > 0.5) {\r\n      player.upgrades[83] = 1\r\n    }\r\n    if (player.achievements[25] > 0.5) {\r\n      player.upgrades[84] = 1\r\n    }\r\n    if (player.achievements[32] > 0.5) {\r\n      player.upgrades[85] = 1\r\n    }\r\n    if (player.achievements[80] > 0.5) {\r\n      player.upgrades[87] = 1\r\n    }\r\n\r\n    if (player.transcendcounter < player.fastesttranscend && player.currentChallenge.transcension === 0) {\r\n      player.fastesttranscend = player.transcendcounter\r\n    }\r\n\r\n    player.transcendcounter = 0\r\n    G.autoResetTimers.transcension = 0\r\n  }\r\n\r\n  if (input == 'reincarnation' || input == 'reincarnationChallenge') {\r\n    if (player.usedCorruptions[6] > 10 && player.platonicUpgrades[11] > 0) {\r\n      player.prestigePoints = player.prestigePoints.add(G.reincarnationPointGain)\r\n    }\r\n  }\r\n\r\n  if (input === 'reincarnation' || input === 'reincarnationChallenge' || input === 'ascension' || input === 'ascensionChallenge' || input == 'singularity') {\r\n    // Fail safe if for some reason ascension achievement isn't awarded. hacky solution but am too tired to fix right now\r\n    if (player.ascensionCount > 0 && player.achievements[183] < 1) {\r\n      ascensionAchievementCheck(1)\r\n    }\r\n\r\n    player.researchPoints = Math.min(1e300, player.researchPoints + Math.floor(G.obtainiumGain))\r\n\r\n    const opscheck = G.obtainiumGain / (1 + player.reincarnationcounter)\r\n    if (opscheck > player.obtainiumpersecond) {\r\n      player.obtainiumpersecond = opscheck\r\n    }\r\n    player.currentChallenge.transcension = 0\r\n    resetUpgrades(3)\r\n    player.coinsThisReincarnation = new Decimal('100')\r\n    player.firstOwnedMythos = 0\r\n    player.firstCostMythos = new Decimal('1')\r\n    player.secondOwnedMythos = 0\r\n    player.secondCostMythos = new Decimal('1e2')\r\n    player.thirdOwnedMythos = 0\r\n    player.thirdCostMythos = new Decimal('1e4')\r\n    player.fourthOwnedMythos = 0\r\n    player.fourthCostMythos = new Decimal('1e8')\r\n    player.fifthOwnedMythos = 0\r\n    player.fifthCostMythos = new Decimal('1e16')\r\n    player.firstGeneratedParticles = new Decimal('0')\r\n    player.secondGeneratedParticles = new Decimal('0')\r\n    player.thirdGeneratedParticles = new Decimal('0')\r\n    player.fourthGeneratedParticles = new Decimal('0')\r\n    player.fifthGeneratedParticles = new Decimal('0')\r\n\r\n    player.reincarnationCount += 1\r\n\r\n    player.transcendPoints = new Decimal('0')\r\n    player.reincarnationPoints = player.reincarnationPoints.add(G.reincarnationPointGain)\r\n    player.reincarnationShards = new Decimal('0')\r\n    player.challengecompletions[1] = 0\r\n    player.challengecompletions[2] = 0\r\n    player.challengecompletions[3] = 0\r\n    player.challengecompletions[4] = 0\r\n    player.challengecompletions[5] = 0\r\n\r\n    G.reincarnationPointGain = new Decimal('0')\r\n\r\n    if (player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.reincarnation === 0) {\r\n      player.challengecompletions[1] = player.highestchallengecompletions[1]\r\n      player.challengecompletions[2] = player.highestchallengecompletions[2]\r\n      player.challengecompletions[3] = player.highestchallengecompletions[3]\r\n      player.challengecompletions[4] = player.highestchallengecompletions[4]\r\n      player.challengecompletions[5] = player.highestchallengecompletions[5]\r\n\r\n    }\r\n\r\n    player.reincarnatenocoinupgrades = true\r\n    player.reincarnatenocoinorprestigeupgrades = true\r\n    player.reincarnatenocoinprestigeortranscendupgrades = true\r\n    player.reincarnatenocoinprestigetranscendorgeneratorupgrades = true\r\n    player.reincarnatenoaccelerator = true\r\n    player.reincarnatenomultiplier = true\r\n\r\n    if (player.reincarnationcounter < player.fastestreincarnate && player.currentChallenge.reincarnation === 0) {\r\n      player.fastestreincarnate = player.reincarnationcounter\r\n    }\r\n\r\n    calculateCubeBlessings()\r\n    player.reincarnationcounter = 0\r\n    G.autoResetTimers.reincarnation = 0\r\n\r\n    if (player.autoResearchToggle && player.autoResearch > 0.5) {\r\n      const linGrowth = (player.autoResearch === 200) ? 0.01 : 0\r\n      buyResearch(player.autoResearch, true, linGrowth)\r\n    }\r\n\r\n    calculateRuneLevels()\r\n    calculateAnts()\r\n  }\r\n\r\n  if (input === 'ascension' || input === 'ascensionChallenge' || input === 'singularity') {\r\n    const metaData = CalcCorruptionStuff()\r\n    if (player.challengecompletions[10] > 0) {\r\n      ascensionAchievementCheck(3, metaData[3])\r\n    }\r\n    // reset auto challenges\r\n    player.currentChallenge.transcension = 0\r\n    player.currentChallenge.reincarnation = 0\r\n\r\n    // The start of the auto challenge to improve QoL starts with C10\r\n    if (input === 'ascensionChallenge' && player.currentChallenge.ascension > 10 && player.highestSingularityCount >= 2 && player.autoChallengeToggles[10]) {\r\n      player.autoChallengeIndex = 10\r\n    } else {\r\n      player.autoChallengeIndex = 1\r\n    }\r\n    toggleAutoChallengeModeText('START')\r\n\r\n    G.autoChallengeTimerIncrement = 0\r\n    //reset rest\r\n    resetResearches()\r\n    resetAnts()\r\n    resetTalismans()\r\n    player.reincarnationPoints = new Decimal('0')\r\n    player.reincarnationShards = new Decimal('0')\r\n    player.obtainiumpersecond = 0\r\n    player.maxobtainiumpersecond = 0\r\n    player.offeringpersecond = 0\r\n    player.antSacrificePoints = 0\r\n    player.antSacrificeTimer = 0\r\n    player.antSacrificeTimerReal = 0\r\n    player.antUpgrades[12-1] = 0\r\n    for (let j = 61; j <= 80; j++) {\r\n      player.upgrades[j] = 0\r\n    }\r\n    for (let j = 94; j <= 100; j++) {\r\n      player.upgrades[j] = 0\r\n    }\r\n    player.firstOwnedParticles = 0\r\n    player.secondOwnedParticles = 0\r\n    player.thirdOwnedParticles = 0\r\n    player.fourthOwnedParticles = 0\r\n    player.fifthOwnedParticles = 0\r\n    player.firstCostParticles = new Decimal('1')\r\n    player.secondCostParticles = new Decimal('100')\r\n    player.thirdCostParticles = new Decimal('1e4')\r\n    player.fourthCostParticles = new Decimal('1e8')\r\n    player.fifthCostParticles = new Decimal('1e16')\r\n    player.runeexp = [0, 0, 0, 0, 0, player.runeexp[5], player.runeexp[6]]\r\n    player.runelevels = [0, 0, 0, 0, 0, player.runelevels[5], player.runelevels[6]]\r\n    player.runeshards = 0\r\n    player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n    player.runelevels[0] = 3 * player.cubeUpgrades[26]\r\n    player.runelevels[1] = 3 * player.cubeUpgrades[26]\r\n    player.runelevels[2] = 3 * player.cubeUpgrades[26]\r\n    player.runelevels[3] = 3 * player.cubeUpgrades[26]\r\n    player.runelevels[4] = 3 * player.cubeUpgrades[26]\r\n\r\n    if (player.cubeUpgrades[27] === 1) {\r\n      player.firstOwnedParticles = 1\r\n      player.secondOwnedParticles = 1\r\n      player.thirdOwnedParticles = 1\r\n      player.fourthOwnedParticles = 1\r\n      player.fifthOwnedParticles = 1\r\n    }\r\n\r\n    // If challenge 10 is incomplete, you won't get a cube no matter what\r\n    if (player.challengecompletions[10] > 0 && player.ascensionCounter > 0) {\r\n      player.ascensionCount += calcAscensionCount()\r\n      //Metadata is defined up in the top of the (i > 3.5) case\r\n      // Protect the cube from developer mistakes\r\n      if (isFinite(metaData[4]) && isFinite(metaData[5]) && isFinite(metaData[6]) && isFinite(metaData[7]) && isFinite(metaData[8])) {\r\n        player.wowCubes.add(metaData[4])\r\n        player.wowTesseracts.add(metaData[5])\r\n        player.wowHypercubes.add(metaData[6])\r\n        player.wowPlatonicCubes.add(metaData[7])\r\n        player.wowAbyssals = Math.min(1e300, player.wowAbyssals + metaData[8])\r\n      }\r\n    }\r\n\r\n    for (let j = 1; j <= 10; j++) {\r\n      player.challengecompletions[j] = 0\r\n      player.highestchallengecompletions[j] = 0\r\n    }\r\n\r\n    player.challengecompletions[6] = player.highestchallengecompletions[6] = player.cubeUpgrades[49]\r\n    player.challengecompletions[7] = player.highestchallengecompletions[7] = player.cubeUpgrades[49]\r\n    player.challengecompletions[8] = player.highestchallengecompletions[8] = player.cubeUpgrades[49]\r\n\r\n    DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n    player.roombaResearchIndex = 0\r\n    player.autoResearch = 1\r\n\r\n    for (let j = 1; j <= (200); j++) {\r\n      const k = `res${j}`\r\n      if (player.researches[j] > 0.5 && player.researches[j] < G.researchMaxLevels[j]) {\r\n        updateClassList(k, ['researchPurchased'], ['researchAvailable', 'researchMaxed', 'researchPurchasedAvailable', 'researchUnpurchased'])\r\n      } else if (player.researches[j] > 0.5 && player.researches[j] >= G.researchMaxLevels[j]) {\r\n        updateClassList(k, ['researchMaxed'], ['researchAvailable', 'researchPurchased', 'researchPurchasedAvailable', 'researchUnpurchased'])\r\n      } else {\r\n        updateClassList(k, ['researchUnpurchased'], ['researchAvailable', 'researchPurchased', 'researchPurchasedAvailable', 'researchMaxed'])\r\n      }\r\n    }\r\n\r\n    calculateAnts()\r\n    calculateRuneLevels()\r\n    calculateAntSacrificeELO()\r\n    calculateTalismanEffects()\r\n    calculateObtainium()\r\n    ascensionAchievementCheck(1)\r\n\r\n    player.ascensionCounter = 0\r\n    player.ascensionCounterReal = 0\r\n    player.ascensionCounterRealReal = 0\r\n\r\n    updateTalismanInventory()\r\n    updateTalismanAppearance(0)\r\n    updateTalismanAppearance(1)\r\n    updateTalismanAppearance(2)\r\n    updateTalismanAppearance(3)\r\n    updateTalismanAppearance(4)\r\n    updateTalismanAppearance(5)\r\n    updateTalismanAppearance(6)\r\n    calculateCubeBlessings()\r\n    calculateTesseractBlessings()\r\n    calculateHypercubeBlessings()\r\n\r\n    if (player.cubeUpgrades[4] === 1) {\r\n      player.upgrades[94] = 1\r\n      player.upgrades[95] = 1\r\n      player.upgrades[96] = 1\r\n      player.upgrades[97] = 1\r\n      player.upgrades[98] = 1\r\n    }\r\n    if (player.cubeUpgrades[5] === 1) {\r\n      player.upgrades[99] = 1\r\n    }\r\n    if (player.cubeUpgrades[6] === 1) {\r\n      player.upgrades[100] = 1\r\n    }\r\n\r\n    for (let j = 61; j <= 80; j++) {\r\n      DOMCacheGetOrSet(`upg${j}`).style.backgroundColor = ''\r\n    }\r\n    for (let j = 94; j <= 100; j++) {\r\n      if (player.upgrades[j] === 0) {\r\n        DOMCacheGetOrSet(`upg${j}`).style.backgroundColor = ''\r\n      }\r\n    }\r\n\r\n    const maxLevel = maxCorruptionLevel()\r\n    player.usedCorruptions = player.prototypeCorruptions.map((curr:number, index:number) => {\r\n      if (index >= 2 && index <= 9) {\r\n        return Math.min(maxLevel * (player.challengecompletions[corrChallengeMinimum(index)] > 0 ||\r\n                                            player.singularityUpgrades.platonicTau.getEffect().bonus ? 1: 0), curr)\r\n      }\r\n      return curr\r\n    })\r\n    player.usedCorruptions[1] = 0\r\n    player.prototypeCorruptions[1] = 0\r\n    //fix c15 ascension bug by restoring the corruptions if the player ascended instead of leaving\r\n    if (player.currentChallenge.ascension === 15 && (input === 'ascension' || input === 'ascensionChallenge')) {\r\n      player.usedCorruptions[0] = 0\r\n      player.prototypeCorruptions[0] = 0\r\n      for (let i = 2; i <= 9; i++) {\r\n        player.usedCorruptions[i] = 11\r\n      }\r\n    }\r\n\r\n    corruptionStatsUpdate()\r\n    updateSingularityMilestoneAwards(false)\r\n  }\r\n\r\n  if (input === 'ascension' || input === 'ascensionChallenge') {\r\n    // Hepteract Autocraft\r\n    const autoHepteractCrafts = getAutoHepteractCrafts()\r\n    const numberOfAutoCraftsAndOrbs = autoHepteractCrafts.length + (player.overfluxOrbsAutoBuy ? 1 : 0)\r\n    if (player.highestSingularityCount >= 1 && numberOfAutoCraftsAndOrbs > 0) {\r\n      // Computes the max number of Hepteracts to spend on each auto Hepteract craft\r\n      const heptAutoSpend = Math.floor((player.wowAbyssals / numberOfAutoCraftsAndOrbs) * (player.hepteractAutoCraftPercentage / 100))\r\n      for (const craft of autoHepteractCrafts) {\r\n        craft.autoCraft(heptAutoSpend)\r\n      }\r\n\r\n      if (player.overfluxOrbsAutoBuy) {\r\n        const orbsAmount = Math.floor(heptAutoSpend / 250000)\r\n        if (player.wowAbyssals - (250000 * orbsAmount) >= 0) {\r\n          player.overfluxOrbs += orbsAmount\r\n          player.overfluxPowder += player.shopUpgrades.powderAuto * calculatePowderConversion().mult * orbsAmount / 100\r\n          player.wowAbyssals -= 250000 * orbsAmount\r\n        }\r\n        if (player.wowAbyssals < 0) {\r\n          player.wowAbyssals = 0\r\n        }\r\n      }\r\n    }\r\n\r\n    // Autobuy tesseract buildings (Mode: PERCENTAGE)\r\n    if (player.researches[190] > 0 && player.tesseractAutoBuyerToggle === 1 && player.resettoggle4 === 2) {\r\n      const ownedBuildings: TesseractBuildings = [null, null, null, null, null]\r\n      for (let i = 1; i <= 5; i++) {\r\n        if (player.autoTesseracts[i]) {\r\n          ownedBuildings[i-1] = player[`ascendBuilding${i as OneToFive}` as const].owned\r\n        }\r\n      }\r\n      const percentageToSpend = 100 - Math.min(100, player.tesseractAutoBuyerAmount)\r\n      const budget = Number(player.wowTesseracts) * percentageToSpend / 100\r\n      const buyToBuildings = calculateTessBuildingsInBudget(ownedBuildings, budget)\r\n      // Prioritise buying buildings from highest tier to lowest,\r\n      // in case there are any off-by-ones or floating point errors.\r\n      for (let i = 5; i >= 1; i--) {\r\n        const buyFrom = ownedBuildings[i-1]\r\n        const buyTo = buyToBuildings[i-1]\r\n        if (buyFrom !== null && buyTo !== null && buyTo !== buyFrom) {\r\n          buyTesseractBuilding(i as OneToFive, buyTo - buyFrom)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Automation Platonic Upgrades\r\n    autoBuyPlatonicUpgrades()\r\n\r\n    // Automation Cube Upgrades\r\n    autoBuyCubeUpgrades()\r\n\r\n    // Auto open Cubes. If to remove !== 0, game will lag a bit if it was set to 0\r\n    if (player.highestSingularityCount >= 35) {\r\n      if (player.autoOpenCubes && player.openCubes !== 0 && player.cubeUpgrades[51] > 0) {\r\n        player.wowCubes.open(Math.floor(Number(player.wowCubes) * player.openCubes / 100), false)\r\n      }\r\n      if (player.autoOpenTesseracts && player.openTesseracts !== 0 && player.challengecompletions[11] > 0) {\r\n        if (player.tesseractAutoBuyerToggle !== 1 || player.resettoggle4 === 2) {\r\n          player.wowTesseracts.open(Math.floor(Number(player.wowTesseracts) * player.openTesseracts / 100), false)\r\n        }\r\n      }\r\n      if (player.autoOpenHypercubes && player.openHypercubes !== 0 && player.challengecompletions[13] > 0) {\r\n        player.wowHypercubes.open(Math.floor(Number(player.wowHypercubes) * player.openHypercubes / 100), false)\r\n      }\r\n      if (player.autoOpenPlatonicsCubes && player.openPlatonicsCubes !== 0 && player.challengecompletions[14] > 0) {\r\n        player.wowPlatonicCubes.open(Math.floor(Number(player.wowPlatonicCubes) * player.openPlatonicsCubes / 100), false)\r\n      }\r\n    }\r\n  }\r\n\r\n  //Always unlocks\r\n  player.unlocks.prestige = true\r\n\r\n  if (input == 'transcension' || input == 'transcensionChallenge') {\r\n    player.unlocks.transcend = true\r\n  }\r\n  if (input == 'reincarnation' || input == 'reincarnationChallenge') {\r\n    player.unlocks.reincarnate = true\r\n  }\r\n\r\n  if (input === 'singularity') {\r\n    player.unlocks.coinone = false\r\n    player.unlocks.cointwo = false\r\n    player.unlocks.cointhree = false\r\n    player.unlocks.coinfour = false\r\n    player.unlocks.generation = false\r\n    player.unlocks.prestige = false\r\n    player.unlocks.transcend = false\r\n    player.unlocks.reincarnate = false\r\n    player.unlocks.rrow1 = false\r\n    player.unlocks.rrow2 = false\r\n    player.unlocks.rrow3 = false\r\n    player.unlocks.rrow4 = false\r\n\r\n    player.ascendBuilding1.owned = 0\r\n    player.ascendBuilding1.generated = new Decimal('0')\r\n    player.ascendBuilding2.owned = 0\r\n    player.ascendBuilding2.generated = new Decimal('0')\r\n    player.ascendBuilding3.owned = 0\r\n    player.ascendBuilding3.generated = new Decimal('0')\r\n    player.ascendBuilding4.owned = 0\r\n    player.ascendBuilding4.generated = new Decimal('0')\r\n    player.ascendBuilding5.owned = 0\r\n    player.ascendBuilding5.generated = new Decimal('0')\r\n\r\n    player.constantUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n    player.wowCubes = new WowCubes(0)\r\n    player.wowTesseracts = new WowCubes(0)\r\n    player.wowHypercubes = new WowCubes(0)\r\n    player.wowTesseracts = new WowCubes(0)\r\n    player.wowAbyssals = 0\r\n\r\n    for (let index = 1; index <= 50; index++) {\r\n      player.cubeUpgrades[index] = 0\r\n    }\r\n  }\r\n\r\n  if (!fast) {\r\n    revealStuff()\r\n  }\r\n  if (input === 'transcensionChallenge' || input === 'reincarnationChallenge' || input === 'ascensionChallenge') {\r\n    updateChallengeDisplay()\r\n  }\r\n\r\n  updateAll()\r\n}\r\n\r\n/**\r\n *\r\n * Computes which achievements in 274-280 are achievable given current singularity number\r\n */\r\nexport const updateSingularityAchievements = (): void => {\r\n  if (player.highestSingularityCount >= 1) {\r\n    achievementaward(274)\r\n  }\r\n  if (player.highestSingularityCount >= 2) {\r\n    achievementaward(275)\r\n  }\r\n  if (player.highestSingularityCount >= 3) {\r\n    achievementaward(276)\r\n  }\r\n  if (player.highestSingularityCount >= 4) {\r\n    achievementaward(277)\r\n  }\r\n  if (player.highestSingularityCount >= 5) {\r\n    achievementaward(278)\r\n  }\r\n  if (player.highestSingularityCount >= 7) {\r\n    achievementaward(279)\r\n  }\r\n  if (player.highestSingularityCount >= 10) {\r\n    achievementaward(280)\r\n  }\r\n}\r\n\r\nexport const updateSingularityMilestoneAwards = (singularityReset = true): void => {\r\n  // 1 transcension, 1001 mythos\r\n  if (player.achievements[275] > 0) { // Singularity 2\r\n    if (singularityReset) {\r\n      player.prestigeCount = 1\r\n      player.transcendCount = 1\r\n    }\r\n    player.transcendPoints = new Decimal('1001')\r\n\r\n    player.unlocks.coinone = true\r\n    player.unlocks.cointwo = true\r\n    player.unlocks.cointhree = true\r\n    player.unlocks.coinfour = true\r\n    player.unlocks.prestige = true\r\n    player.unlocks.generation = true\r\n    player.unlocks.transcend = true\r\n    for (let i = 0; i < 5; i++) {\r\n      achievementaward(4 + 7 * i)\r\n    }\r\n    achievementaward(36) // 1 prestige\r\n    achievementaward(43) // 1 transcension\r\n  }\r\n  if (player.achievements[276] > 0) { // Singularity 3\r\n    if (player.currentChallenge.ascension !== 12) {\r\n      if (singularityReset) {\r\n        player.reincarnationCount = 1\r\n      }\r\n      player.reincarnationPoints = new Decimal('10')\r\n    }\r\n    player.unlocks.reincarnate = true\r\n    player.unlocks.rrow1 = true\r\n    player.researches[47] = 1\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n      for (let j = 0; j < 5; j++) {\r\n        achievementaward(78 + i + 7 * j)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      achievementaward(57 + i)\r\n      achievementaward(64 + i)\r\n      achievementaward(71 + i)\r\n    }\r\n\r\n    achievementaward(37)\r\n    achievementaward(38)\r\n    achievementaward(44)\r\n    achievementaward(50)\r\n    achievementaward(80)\r\n    achievementaward(87)\r\n\r\n  }\r\n  if (player.achievements[277] > 0) { // Singularity 4\r\n    if (player.currentChallenge.ascension !== 14) {\r\n      player.researchPoints = Math.floor(500 * calculateSingularityDebuff('Offering') * calculateSingularityDebuff('Researches'))\r\n    }\r\n    if (player.currentChallenge.ascension !== 12) {\r\n      player.reincarnationPoints = new Decimal('1e16')\r\n    }\r\n    player.challengecompletions[6] = 1\r\n    player.highestchallengecompletions[6] = 1\r\n    achievementaward(113)\r\n  }\r\n  const shopItemPerk_5 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const\r\n  const perk_5 = player.achievements[278] > 0\r\n  if (perk_5 && singularityReset) { // Singularity 5\r\n    for (const key of shopItemPerk_5) {\r\n      player.shopUpgrades[key] = 10\r\n    }\r\n    player.cubeUpgrades[7] = 1\r\n  }\r\n  if (player.achievements[279] > 0) { // Singularity 7\r\n    player.challengecompletions[7] = 1\r\n    player.highestchallengecompletions[7] = 1\r\n    achievementaward(120)\r\n    if (player.currentChallenge.ascension !== 12) {\r\n      player.reincarnationPoints = new Decimal('1e100')\r\n    }\r\n  }\r\n  if (player.achievements[280] > 0) { // Singularity 10\r\n    achievementaward(124)\r\n    achievementaward(127)\r\n    player.challengecompletions[8] = 1\r\n    player.highestchallengecompletions[8] = 1\r\n    player.cubeUpgrades[8] = 1\r\n    player.cubeUpgrades[4] = 1 // Adding these ones,\r\n    player.cubeUpgrades[5] = 1 // so they wont reset\r\n    player.cubeUpgrades[6] = 1 // on first Ascension\r\n    player.firstOwnedAnts = 1\r\n    for (let i = 0; i < 7; i++) {\r\n      achievementaward(176 + i)\r\n    }\r\n  }\r\n  if (player.highestSingularityCount > 10) { // Must be the same as autoResearchEnabled()\r\n    player.cubeUpgrades[9] = 1\r\n  }\r\n  if (player.highestSingularityCount >= 15) {\r\n    player.challengecompletions[8] = 5\r\n    player.highestchallengecompletions[8] = 5\r\n    if (player.currentChallenge.ascension !== 12) {\r\n      player.reincarnationPoints = new Decimal('2.22e2222')\r\n    }\r\n    player.fifthOwnedAnts = 1\r\n    player.cubeUpgrades[20] = 1\r\n  }\r\n  const perk_20 = player.highestSingularityCount >= 20\r\n  if (perk_20) {\r\n    const shopItemPerk_20 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const\r\n    player.challengecompletions[9] = 1\r\n    player.highestchallengecompletions[9] = 1\r\n    achievementaward(134)\r\n    player.antPoints = new Decimal('1e100')\r\n    player.antUpgrades[11] = 1\r\n    for (const key of shopItemPerk_20) {\r\n      player.shopUpgrades[key] = shopData[key].maxLevel\r\n    }\r\n  }\r\n  if (player.highestSingularityCount >= 25) {\r\n    player.eighthOwnedAnts = 1\r\n  }\r\n  if (player.highestSingularityCount >= 30) {\r\n    player.researches[130] = 1\r\n    player.researches[135] = 1\r\n    player.researches[145] = 1\r\n  }\r\n  if (player.highestSingularityCount >= 101 && singularityReset) {\r\n    player.cubeUpgrades[51] = 1\r\n    awardAutosCookieUpgrade()\r\n  }\r\n\r\n  if (player.singularityUpgrades.platonicAlpha.getEffect().bonus && player.platonicUpgrades[5] === 0) {\r\n    player.platonicUpgrades[5] = 1\r\n    updatePlatonicUpgradeBG(5)\r\n  }\r\n\r\n  if (singularityReset) {\r\n    for (let j = 1; j <= 15; j++) {\r\n      challengeachievementcheck(j)\r\n    }\r\n  }\r\n  resetUpgrades(3)\r\n  if (singularityReset) {\r\n    for (let j = 1; j < player.cubeUpgrades.length; j++) {\r\n      updateCubeUpgradeBG(j)\r\n    }\r\n  }\r\n  for (let j = 1; j < player.researches.length; j++) {\r\n    if (player.researches[j] > 0) {\r\n      updateResearchBG(j)\r\n    }\r\n  }\r\n  updateSingularityGlobalPerks()\r\n  revealStuff()\r\n}\r\n\r\n// updates singularity perks that do not get saved to player object\r\n// so that we can call on save load to fix game state\r\nexport const updateSingularityGlobalPerks = () => {\r\n\r\n  const perk_5 = player.achievements[278] > 0\r\n  const shopItemPerk_5 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const\r\n  for (const key of shopItemPerk_5) {\r\n    shopData[key].refundMinimumLevel = perk_5 ? 10 : key.endsWith('Auto') ? 1 : 0\r\n  }\r\n\r\n  const perk_20 = player.highestSingularityCount >= 20\r\n  const shopItemPerk_20 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const\r\n  for (const key of shopItemPerk_20) {\r\n    shopData[key].refundable = perk_20 ? false : true\r\n  }\r\n\r\n  const perk_51 = player.highestSingularityCount >= 51\r\n  const shopItemPerk_51 = ['seasonPass', 'seasonPass2', 'seasonPass3', 'seasonPassY', 'chronometer', 'chronometer2'] as const\r\n  for (const key of shopItemPerk_51) {\r\n    shopData[key].refundable = perk_51 ? false : true\r\n  }\r\n}\r\n\r\nexport const singularity = async (setSingNumber = -1): Promise<void> => {\r\n  if (player.runelevels[6] === 0 && setSingNumber === -1) {\r\n    return Alert('You nearly triggered a double singularity bug! Oh no! Luckily, our staff prevented this from happening.')\r\n  }\r\n\r\n  // setSingNumber is only not -1 when we are entering and exiting a challenge.\r\n  if (setSingNumber === -1) {\r\n    // get total cube blessings for history\r\n    const cubeArray = Object.values(player.cubeBlessings)\r\n    const tesseractArray = Object.values(player.tesseractBlessings)\r\n    const hypercubeArray = Object.values(player.hypercubeBlessings)\r\n    const platonicArray = Object.values(player.platonicBlessings)\r\n    // Update sing history\r\n    const historyEntry: ResetHistoryEntrySingularity = {\r\n      seconds: player.singularityCounter,\r\n      date: Date.now(),\r\n      singularityCount: player.singularityCount,\r\n      quarks: player.quarksThisSingularity,\r\n      c15Score: player.challenge15Exponent,\r\n      goldenQuarks: calculateGoldenQuarkGain(),\r\n      wowTribs: sumContents(cubeArray),\r\n      tessTribs: sumContents(tesseractArray),\r\n      hyperTribs: sumContents(hypercubeArray),\r\n      platTribs: sumContents(platonicArray),\r\n      octeracts: player.totalWowOcteracts,\r\n      quarkHept: player.hepteractCrafts.quark.BAL,\r\n      kind: 'singularity'\r\n    }\r\n    Synergism.emit('historyAdd', 'singularity', historyEntry)\r\n  }\r\n  // reset the rune instantly to hopefully prevent a double singularity\r\n  player.runelevels[6] = 0\r\n\r\n  player.goldenQuarks += calculateGoldenQuarkGain()\r\n\r\n  if (setSingNumber === -1) {\r\n    const incrementSingCount = 1 + getFastForwardTotalMultiplier()\r\n    player.singularityCount += incrementSingCount\r\n    if (player.singularityCount >= player.highestSingularityCount) {\r\n      player.highestSingularityCount = player.singularityCount\r\n\r\n      if (player.highestSingularityCount === 5) {\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 1\r\n      }\r\n      if (player.highestSingularityCount === 10) {\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 2\r\n      }\r\n    }\r\n  } else {\r\n    player.singularityCount = setSingNumber\r\n  }\r\n\r\n  player.totalQuarksEver += player.quarksThisSingularity\r\n  await resetShopUpgrades(true)\r\n  const hold = Object.assign({}, blankSave, {\r\n    codes: Array.from(blankSave.codes)\r\n  }) as Player\r\n\r\n  // Reset Displays\r\n  changeTab('buildings')\r\n  changeSubTab('buildings', { page: 0 })\r\n  changeSubTab('runes', { page: 0 }) // Set 'runes' subtab back to 'runes' tab\r\n  changeSubTab('cube', { page: 0 }) // Set 'cube tribues' subtab back to 'cubes' tab\r\n  changeSubTab('traits', { page: 0 }) // set 'corruption main'\r\n  changeSubTab('singularity', { page: 0 }) // set 'singularity main'\r\n  changeSubTab('settings', { page: 0 }) // set 'statistics main'\r\n\r\n  hold.history.singularity = player.history.singularity\r\n  hold.totalQuarksEver = player.totalQuarksEver\r\n  hold.singularityCount = player.singularityCount\r\n  hold.highestSingularityCount = player.highestSingularityCount\r\n  hold.goldenQuarks = player.goldenQuarks\r\n  hold.shopUpgrades = player.shopUpgrades\r\n  hold.worlds = new QuarkHandler({ quarks: 0, bonus: 0 })\r\n  // Exclude potentially non-latin1 characters from the save\r\n  hold.singularityUpgrades = Object.fromEntries(\r\n    Object.entries(player.singularityUpgrades).map(([key, value]) => {\r\n      return [key, {\r\n        level: value.level,\r\n        goldenQuarksInvested: value.goldenQuarksInvested,\r\n        toggleBuy: value.toggleBuy,\r\n        freeLevels: value.freeLevels\r\n      }]\r\n    })\r\n  ) as Player['singularityUpgrades']\r\n  hold.octeractUpgrades = Object.fromEntries(\r\n    Object.entries(player.octeractUpgrades).map(([key, value]) => {\r\n      return [key, {\r\n        level: value.level,\r\n        goldenQuarksInvested: value.octeractsInvested,\r\n        toggleBuy: value.toggleBuy,\r\n        freeLevels: value.freeLevels\r\n      }]\r\n    })\r\n  ) as unknown as Player['octeractUpgrades']\r\n  hold.blueberryUpgrades = Object.fromEntries(\r\n    Object.entries(player.blueberryUpgrades).map(([key, value]) => {\r\n      return [key, {\r\n        level: value.level,\r\n        ambrosiaInvested: value.ambrosiaInvested,\r\n        blueberriesInvested: value.blueberriesInvested,\r\n        toggleBuy: value.toggleBuy,\r\n        freeLevels: value.freeLevels\r\n      }]\r\n    })\r\n  ) as unknown as Player['blueberryUpgrades']\r\n  hold.spentBlueberries = player.spentBlueberries\r\n  hold.autoChallengeToggles = player.autoChallengeToggles\r\n  hold.autoChallengeTimer = player.autoChallengeTimer\r\n  hold.saveString = player.saveString\r\n  hold.corruptionLoadouts = player.corruptionLoadouts\r\n  hold.corruptionLoadoutNames = player.corruptionLoadoutNames\r\n  hold.corruptionShowStats = player.corruptionShowStats\r\n  hold.toggles = player.toggles\r\n  hold.retrychallenges = player.retrychallenges\r\n  hold.resettoggle1 = player.resettoggle1\r\n  hold.resettoggle2 = player.resettoggle2\r\n  hold.resettoggle3 = player.resettoggle3\r\n  hold.resettoggle4 = player.resettoggle4\r\n  hold.coinbuyamount = player.coinbuyamount\r\n  hold.crystalbuyamount = player.crystalbuyamount\r\n  hold.mythosbuyamount = player.mythosbuyamount\r\n  hold.particlebuyamount = player.particlebuyamount\r\n  hold.offeringbuyamount = player.offeringbuyamount\r\n  hold.tesseractbuyamount = player.tesseractbuyamount\r\n  hold.shoptoggles = player.shoptoggles\r\n  hold.autoSacrificeToggle = player.autoSacrificeToggle\r\n  hold.autoBuyFragment = player.autoBuyFragment\r\n  hold.autoFortifyToggle = player.autoFortifyToggle\r\n  hold.autoEnhanceToggle = player.autoEnhanceToggle\r\n  hold.autoResearchToggle = player.autoResearchToggle\r\n  hold.autoResearchMode = player.autoResearchMode\r\n  hold.dailyCodeUsed = player.dailyCodeUsed\r\n  hold.runeBlessingBuyAmount = player.runeBlessingBuyAmount\r\n  hold.runeSpiritBuyAmount = player.runeSpiritBuyAmount\r\n  hold.prestigeamount = player.prestigeamount\r\n  hold.transcendamount = player.transcendamount\r\n  hold.reincarnationamount = player.reincarnationamount\r\n  hold.talismanOne = player.talismanOne\r\n  hold.talismanTwo = player.talismanTwo\r\n  hold.talismanThree = player.talismanThree\r\n  hold.talismanFour = player.talismanFour\r\n  hold.talismanFive = player.talismanFive\r\n  hold.talismanSix = player.talismanSix\r\n  hold.talismanSeven = player.talismanSeven\r\n  hold.buyTalismanShardPercent = player.buyTalismanShardPercent\r\n  hold.antMax = player.antMax\r\n  hold.autoAntSacrifice = player.autoAntSacrifice\r\n  hold.autoAntSacrificeMode = player.autoAntSacrificeMode\r\n  hold.autoAntSacTimer = player.autoAntSacTimer\r\n  hold.autoAscend = player.autoAscend\r\n  hold.autoAscendMode = player.autoAscendMode\r\n  hold.autoAscendThreshold = player.autoAscendThreshold\r\n  hold.autoResearch = 0\r\n  hold.autoTesseracts = player.autoTesseracts\r\n  hold.tesseractAutoBuyerToggle = player.tesseractAutoBuyerToggle\r\n  hold.tesseractAutoBuyerAmount = player.tesseractAutoBuyerAmount\r\n  hold.autoOpenCubes = player.autoOpenCubes\r\n  hold.openCubes = player.openCubes\r\n  hold.autoOpenTesseracts = player.autoOpenTesseracts\r\n  hold.openTesseracts = player.openTesseracts\r\n  hold.autoOpenHypercubes = player.autoOpenHypercubes\r\n  hold.openHypercubes = player.openHypercubes\r\n  hold.autoOpenPlatonicsCubes = player.autoOpenPlatonicsCubes\r\n  hold.openPlatonicsCubes = player.openPlatonicsCubes\r\n  hold.historyShowPerSecond = player.historyShowPerSecond\r\n  hold.exporttest = player.exporttest\r\n  hold.dayTimer = player.dayTimer\r\n  hold.dayCheck = player.dayCheck\r\n  hold.ascStatToggles = player.ascStatToggles\r\n  hold.hepteractAutoCraftPercentage = player.hepteractAutoCraftPercentage\r\n  hold.autoWarpCheck = player.autoWarpCheck\r\n  hold.shopBuyMaxToggle = player.shopBuyMaxToggle\r\n  hold.shopHideToggle = player.shopHideToggle\r\n  hold.shopConfirmationToggle = player.shopConfirmationToggle\r\n  hold.researchBuyMaxToggle = player.researchBuyMaxToggle\r\n  hold.cubeUpgradesBuyMaxToggle = player.cubeUpgradesBuyMaxToggle\r\n  hold.wowOcteracts = player.wowOcteracts\r\n  hold.totalWowOcteracts = player.totalWowOcteracts\r\n  hold.overfluxOrbsAutoBuy = player.overfluxOrbsAutoBuy\r\n  hold.hotkeys = player.hotkeys\r\n  hold.theme = player.theme\r\n  hold.notation = player.notation\r\n  hold.firstPlayed = player.firstPlayed\r\n  hold.autoCubeUpgradesToggle = player.autoCubeUpgradesToggle\r\n  hold.autoPlatonicUpgradesToggle = player.autoPlatonicUpgradesToggle\r\n  hold.insideSingularityChallenge = player.insideSingularityChallenge\r\n  hold.singularityChallenges = Object.fromEntries(\r\n    Object.entries(player.singularityChallenges).map(([key, value]) => {\r\n      return [key, {\r\n        completions: value.completions,\r\n        highestSingularityCompleted: value.highestSingularityCompleted,\r\n        enabled: value.enabled\r\n      }]\r\n    })\r\n  ) as Player['singularityChallenges']\r\n  hold.iconSet = player.iconSet\r\n\r\n  // Quark Hepteract craft is saved entirely. For other crafts we only save their auto setting\r\n  hold.hepteractCrafts.quark = player.hepteractCrafts.quark\r\n  for (const craftName of Object.keys(player.hepteractCrafts)) {\r\n    if (craftName !== 'quark') {\r\n      const craftKey = craftName as keyof Player['hepteractCrafts']\r\n      hold.hepteractCrafts[craftKey].AUTO = player.hepteractCrafts[craftKey].AUTO\r\n    }\r\n  }\r\n  hold.ambrosia = player.ambrosia\r\n  hold.lifetimeAmbrosia = player.lifetimeAmbrosia\r\n  hold.visitedAmbrosiaSubtab = player.visitedAmbrosiaSubtab\r\n  hold.blueberryTime = player.blueberryTime\r\n\r\n  const saveCode42 = player.codes.get(42) ?? false\r\n  const saveCode43 = player.codes.get(43) ?? false\r\n  const saveCode44 = player.codes.get(44) ?? false\r\n  const saveCode45 = player.codes.get(45) ?? false\r\n  const saveCode46 = player.codes.get(46) ?? false\r\n\r\n  // Import Game\r\n\r\n  /*(for (const obj in blankSave) {\r\n        const k = obj as keyof Player;\r\n        if (k in blankSave) {\r\n            player[k] = blankSave?.[k]\r\n        }\r\n    }*/\r\n  await importSynergism(btoa(JSON.stringify(hold)), true)\r\n  //Techically possible to import game during reset. But that will only \"hurt\" that imported save\r\n\r\n  // TODO: Do not enable data that has never used an event code\r\n  player.codes.set(39, true)\r\n  player.codes.set(40, true)\r\n  player.codes.set(41, true)\r\n  player.codes.set(42, saveCode42)\r\n  player.codes.set(43, saveCode43)\r\n  player.codes.set(44, saveCode44)\r\n  player.codes.set(45, saveCode45)\r\n  player.codes.set(46, saveCode46)\r\n  updateSingularityMilestoneAwards()\r\n\r\n  player.rngCode = Date.now()\r\n  player.promoCodeTiming.time = Date.now()\r\n\r\n  // Save again at the end of singularity reset\r\n  void saveSynergy()\r\n}\r\n\r\nconst resetUpgrades = (i: number) => {\r\n  if (i > 2.5) {\r\n    for (let i = 41; i < 61; i++) {\r\n      if (i !== 46) {\r\n        player.upgrades[i] = 0\r\n      }\r\n    }\r\n\r\n    if (player.researches[41] === 0) {\r\n      player.upgrades[46] = 0\r\n    }\r\n\r\n    if (player.researches[41] < 0.5) {\r\n      player.upgrades[88] = 0\r\n    }\r\n    if (player.achievements[50] === 0) {\r\n      player.upgrades[89] = 0\r\n    }\r\n    if (player.researches[42] < 0.5) {\r\n      player.upgrades[90] = 0\r\n    }\r\n    if (player.researches[43] < 0.5) {\r\n      player.upgrades[91] = 0\r\n    }\r\n    if (player.researches[44] < 0.5) {\r\n      player.upgrades[92] = 0\r\n    }\r\n    if (player.researches[45] < 0.5) {\r\n      player.upgrades[93] = 0\r\n    }\r\n\r\n    player.upgrades[116] = 0\r\n    player.upgrades[117] = 0\r\n    player.upgrades[118] = 0\r\n    player.upgrades[119] = 0\r\n    player.upgrades[120] = 0\r\n  }\r\n\r\n  for (let j = 1; j <= 20; j++) {\r\n    player.upgrades[j] = 0\r\n  }\r\n\r\n  // both indices go up by 5, so we can put them together!\r\n  for (let j = 121, k = 106; j <= 125; j++, k++) {\r\n    player.upgrades[j] = 0\r\n    player.upgrades[k] = 0\r\n  }\r\n\r\n  if (i > 1.5) {\r\n    if (player.achievements[4] < 0.5) {\r\n      player.upgrades[81] = 0\r\n    }\r\n    if (player.achievements[11] < 0.5) {\r\n      player.upgrades[82] = 0\r\n    }\r\n    if (player.achievements[18] < 0.5) {\r\n      player.upgrades[83] = 0\r\n    }\r\n    if (player.achievements[25] < 0.5) {\r\n      player.upgrades[84] = 0\r\n    }\r\n    if (player.achievements[32] < 0.5) {\r\n      player.upgrades[85] = 0\r\n    }\r\n    if (player.achievements[87] < 0.5) {\r\n      player.upgrades[86] = 0\r\n    }\r\n    if (player.achievements[80] < 0.5) {\r\n      player.upgrades[87] = 0\r\n    }\r\n\r\n\r\n    player.upgrades[101] = 0\r\n    player.upgrades[102] = 0\r\n    player.upgrades[103] = 0\r\n    player.upgrades[104] = 0\r\n    player.upgrades[105] = 0\r\n\r\n\r\n  }\r\n\r\n  if (i > 1.5) {\r\n    for (let k = 21; k < 41; k++) {\r\n      player.upgrades[k] = 0\r\n    }\r\n\r\n    player.upgrades[111] = 0\r\n    player.upgrades[112] = 0\r\n    player.upgrades[113] = 0\r\n    player.upgrades[114] = 0\r\n    player.upgrades[115] = 0\r\n  }\r\n\r\n  if (i > 1.5) {\r\n    player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0]\r\n    player.crystalUpgradesCost = [7, 15, 20, 40, 100, 200, 500, 1000]\r\n\r\n    let m = 0\r\n    m += Math.floor(G.rune3level * G.effectiveLevelMult / 16) * 100 / 100\r\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n      m += 10\r\n    }\r\n    player.crystalUpgrades = [m, m, m, m, m, m, m, m]\r\n  }\r\n\r\n  if (player.achievements[87] > 0.5) {\r\n    player.upgrades[86] = 1\r\n  }\r\n\r\n  for (let x = 1; x <= 125; x++) {\r\n    upgradeupdate(x, true)\r\n  }\r\n}\r\n\r\nexport const resetAnts = () => {\r\n  player.firstOwnedAnts = 0\r\n  player.secondOwnedAnts = 0\r\n  player.thirdOwnedAnts = 0\r\n  player.fourthOwnedAnts = 0\r\n  player.fifthOwnedAnts = 0\r\n  player.sixthOwnedAnts = 0\r\n  player.seventhOwnedAnts = 0\r\n  player.eighthOwnedAnts = 0\r\n\r\n  player.firstGeneratedAnts = new Decimal('0')\r\n  player.secondGeneratedAnts = new Decimal('0')\r\n  player.thirdGeneratedAnts = new Decimal('0')\r\n  player.fourthGeneratedAnts = new Decimal('0')\r\n  player.fifthGeneratedAnts = new Decimal('0')\r\n  player.sixthGeneratedAnts = new Decimal('0')\r\n  player.seventhGeneratedAnts = new Decimal('0')\r\n  player.eighthGeneratedAnts = new Decimal('0')\r\n\r\n  player.firstCostAnts = new Decimal('1e700')\r\n  player.secondCostAnts = new Decimal('3')\r\n  player.thirdCostAnts = new Decimal('100')\r\n  player.fourthCostAnts = new Decimal('1e4')\r\n  player.fifthCostAnts = new Decimal('1e12')\r\n  player.sixthCostAnts = new Decimal('1e36')\r\n  player.seventhCostAnts = new Decimal('1e100')\r\n  player.eighthCostAnts = new Decimal('1e300')\r\n\r\n  if (player.cubeUpgrades[48] > 0) {\r\n    player.firstOwnedAnts = 1\r\n    player.firstCostAnts = new Decimal('1e741')\r\n  }\r\n\r\n  const ant12 = player.antUpgrades[12-1]\r\n  player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ant12]\r\n  player.antPoints = new Decimal('1')\r\n\r\n  if (player.currentChallenge.ascension === 12) {\r\n    player.antPoints = new Decimal('7')\r\n  }\r\n\r\n  calculateAnts()\r\n  calculateRuneLevels()\r\n}\r\n\r\nconst resetResearches = () => {\r\n  player.researchPoints = 0\r\n  //Array listing all the research indexes deserving of removal\r\n  const destroy = [\r\n    6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25,\r\n    26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\r\n    51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70,\r\n    76, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98,\r\n    101, 102, 103, 104, 106, 107, 108, 109, 110, 116, 117, 118, 121, 122, 123,\r\n    126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 146, 147, 148, 149,\r\n    151, 152, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 174,\r\n    176, 177, 178, 179, 181, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199\r\n  ]\r\n\r\n  if (player.highestSingularityCount < 25) {\r\n    destroy.push(138, 153, 168, 183, 198)\r\n  }\r\n\r\n  for (const item of destroy) {\r\n    player.researches[item] = 0\r\n  }\r\n}\r\n\r\nconst resetTalismans = () => {\r\n  player.talismanLevels = [0, 0, 0, 0, 0, 0, 0]\r\n  player.talismanRarity = [1, 1, 1, 1, 1, 1, 1]\r\n\r\n  player.talismanShards = 0\r\n  player.commonFragments = 0\r\n  player.uncommonFragments = 0\r\n  player.rareFragments = 0\r\n  player.epicFragments = 0\r\n  player.legendaryFragments = 0\r\n  player.mythicalFragments = 0\r\n}\r\n", "import { sacrificeAnts } from './Ants'\r\nimport { buyAccelerator, boostAccelerator, buyMultiplier } from './Buy'\r\nimport { player, resetCheck, synergismHotkeys } from './Synergism'\r\nimport { toggleAutoChallengeRun, toggleCorruptionLevel, confirmReply } from './Toggles'\r\nimport { Alert, Prompt, Confirm } from './UpdateHTML'\r\nimport { Globals as G } from './Variables'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { useConsumable } from  './Shop'\r\nimport { promocodes } from './ImportExport'\r\nimport { keyboardTabChange as kbTabChange } from './Tabs'\r\n\r\nexport const defaultHotkeys = new Map<string, [string, () => unknown, boolean]>([\r\n  ['A', ['Buy Accelerators', () => buyAccelerator(), false]],\r\n  ['B', ['Boost Accelerator', () => boostAccelerator(), false]],\r\n  ['C', ['Auto Challenge', () => {\r\n    toggleChallengeSweep()\r\n  }, false]],\r\n  ['E', ['Exit T / R Challenge', () => {\r\n    if (player.autoChallengeRunning) {\r\n      toggleChallengeSweep()\r\n    } else {\r\n      exitTranscendAndPrestigeChallenge()\r\n    }\r\n  }, false]],\r\n  ['M', ['Multipliers', () => buyMultiplier(), false]],\r\n  ['N', ['No (Cancel)', () => confirmReply(false), true]],\r\n  ['P', ['Reset Prestige', () => resetCheck('prestige'), false]],\r\n  ['R', ['Reset Reincarnate', () => resetCheck('reincarnation'), false]],\r\n  ['S', ['Sacrifice Ants', () => sacrificeAnts(), false]],\r\n  ['T', ['Reset Transcend', () => resetCheck('transcension'), false]],\r\n  ['Y', ['Yes (OK)', () => confirmReply(true), true]],\r\n  ['ARROWLEFT', ['Back a tab', () => kbTabChange(-1), false]],\r\n  ['ARROWRIGHT', ['Next tab', () => kbTabChange(1), false]],\r\n  ['ARROWUP', ['Back a subtab', () => kbTabChange(-1, true), false]],\r\n  ['ARROWDOWN', ['Next subtab', () => kbTabChange(1, true), false]],\r\n  ['SHIFT+A', ['Reset Ascend', () => resetCheck('ascension'), false]],\r\n  ['SHIFT+C', ['Cleanse Corruptions', () => toggleCorruptionLevel(10, 999), false]],\r\n  ['SHIFT+D', ['Spec. Action Add x1', () => promocodes('add', 1), false]],\r\n  ['SHIFT+E', ['Exit Asc. Challenge', () => resetCheck('ascensionChallenge'), false]], // Its already checks if inside Asc. Challenge\r\n  ['SHIFT+O', ['Use Off. Potion', () => useConsumable('offeringPotion'), false]],\r\n  ['SHIFT+P', ['Use Obt. Potion', () => useConsumable('obtainiumPotion'), false]],\r\n  ['SHIFT+S', ['Reset Singularity', () => resetCheck('singularity'), false]]\r\n])\r\n\r\nexport let hotkeysEnabled = false\r\n\r\nexport let hotkeys = new Map<string, [string, () => unknown, boolean]>(defaultHotkeys)\r\n\r\nconst toggleChallengeSweep = (): void => {\r\n  if (player.researches[150] > 0) {\r\n    toggleAutoChallengeRun()\r\n    if (!player.autoChallengeRunning) {\r\n      exitTranscendAndPrestigeChallenge()\r\n    }\r\n  }\r\n}\r\n\r\nconst exitTranscendAndPrestigeChallenge = () => {\r\n  if (player.currentChallenge.reincarnation !== 0) {\r\n    void resetCheck('reincarnationChallenge', undefined, true)\r\n  }\r\n  if (player.currentChallenge.transcension !== 0) {\r\n    void resetCheck('transcensionChallenge', undefined, true)\r\n  }\r\n}\r\n\r\nconst eventHotkeys = (event: KeyboardEvent): void => {\r\n  if (!hotkeysEnabled || !player.toggles[39]) {\r\n    // There was a race condition where a user could spam Shift + S + Enter to\r\n    // Singularity which would cause a bug when rune 7 was bought. To prevent this,\r\n    // the game disables hotkeys when on the offline progress screen, and re-\r\n    // enables them when the user leaves.\r\n    return\r\n  }\r\n\r\n  if (document.activeElement?.localName === 'input') {\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\r\n    // finally fixes the bug where hotkeys would be activated when typing in an input field\r\n    return event.stopPropagation()\r\n  }\r\n\r\n  synergismHotkeys(event, event.code.replace(/^(Digit|Numpad)/, '').toUpperCase())\r\n\r\n  let keyPrefix = ''\r\n  if (event.ctrlKey) {\r\n    keyPrefix += 'CTRL+'\r\n  }\r\n  if (event.shiftKey) {\r\n    keyPrefix += 'SHIFT+'\r\n  }\r\n  if (event.altKey) {\r\n    keyPrefix += 'ALT+'\r\n  }\r\n  const key = keyPrefix + event.key.toUpperCase()\r\n\r\n  // Disable the TAB key as it may allow unexpected operations\r\n  if (key === 'TAB') {\r\n    event.preventDefault()\r\n  }\r\n\r\n  // Disable hotkeys if notifications are occurring\r\n  if (key !== 'ENTER' && DOMCacheGetOrSet('transparentBG').style.display === 'block') {\r\n    if (hotkeys.has(key) && (!hotkeys.get(key)![2])) {\r\n      return\r\n    }\r\n  }\r\n\r\n  let hotkeyName = ''\r\n  if (hotkeys.has(key)) {\r\n    hotkeyName = '' + hotkeys.get(key)![0]\r\n        hotkeys.get(key)![1]()\r\n        event.preventDefault()\r\n  }\r\n\r\n  if (G.currentTab === 'settings' && player.subtabNumber === 6) {\r\n    DOMCacheGetOrSet('lastHotkey').textContent = key\r\n    DOMCacheGetOrSet('lastHotkeyName').textContent = hotkeyName\r\n  }\r\n}\r\n\r\nconst makeSlot = (key: string, descr: string) => {\r\n  const div = document.createElement('div')\r\n  div.classList.add('hotkeyItem')\r\n\r\n  const span = document.createElement('span')\r\n  span.id = 'actualHotkey'\r\n  span.textContent = key\r\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n  span.addEventListener('click', async (e) => {\r\n    const target = e.target as HTMLElement\r\n    const oldKey = target.textContent!.toUpperCase()\r\n    const name =\r\n            hotkeys.get(oldKey)?.[0] ??\r\n            target.nextSibling?.textContent\r\n\r\n    // new value to set key as, unformatted\r\n    const newKey = await Prompt(`\r\n        Enter the new key you want to activate ${name} with.\r\n\r\n        MDN has a list of values for \"special keys\" if you would like to use one:\r\n        https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\r\n\r\n        You can also prefix your hotkey with [Ctrl,Shift,Alt]+<key>\r\n        `)\r\n\r\n    if (typeof newKey !== 'string') {\r\n      return\r\n    }\r\n\r\n    const toSet = newKey.toUpperCase()\r\n\r\n    if (newKey.length === 0) {\r\n      return void Alert('You didn\\'t enter anything, canceled!')\r\n    }\r\n\r\n    if (!isNaN(Number(newKey))) {\r\n      return void Alert('Number keys are currently unavailable!')\r\n    }\r\n\r\n    if (hotkeys.has(toSet) || oldKey === toSet) {\r\n      return void Alert('That key is already binded to an action, use another key instead!')\r\n    } else if (hotkeys.has(oldKey)) {\r\n      const old = hotkeys.get(oldKey)!\r\n\r\n      hotkeys.set(toSet, old)\r\n      hotkeys.delete(oldKey)\r\n\r\n      const keys = Object.keys(player.hotkeys)\r\n      player.hotkeys[keys.length] = [oldKey, toSet]\r\n\r\n      target.textContent = toSet\r\n\r\n      enableHotkeys()\r\n    } else {\r\n      return void Alert(`No hotkey is triggered by ${oldKey}!`)\r\n    }\r\n  })\r\n\r\n  const p = document.createElement('p')\r\n  p.id = 'hotKeyDesc'\r\n  p.textContent = descr\r\n\r\n  div.appendChild(span)\r\n  div.appendChild(p)\r\n\r\n  return div\r\n}\r\n\r\nexport const disableHotkeys = () => hotkeysEnabled = false\r\n\r\nexport const enableHotkeys = () => {\r\n  changeHotkeys()\r\n\r\n  const hotkey = document.querySelector('.hotkeys')!\r\n\r\n  for (const child of Array.from(hotkey.children)) {\r\n    hotkey.removeChild(child)\r\n  }\r\n\r\n  for (const [key, [descr]] of [...hotkeys.entries()]) {\r\n    const div = makeSlot(key, descr)\r\n\r\n    hotkey.appendChild(div)\r\n  }\r\n\r\n  hotkeysEnabled = true\r\n}\r\n\r\nexport const changeHotkeys = () => {\r\n  hotkeys = new Map(defaultHotkeys)\r\n\r\n  for (const key in player.hotkeys) {\r\n    const oldKey = player.hotkeys[key][0]\r\n    const toSet = player.hotkeys[key][1]\r\n    if (hotkeys.has(oldKey)) {\r\n      const old = hotkeys.get(oldKey)!\r\n      hotkeys.set(toSet, old)\r\n      hotkeys.delete(oldKey)\r\n    } else {\r\n      Reflect.deleteProperty(player.hotkeys, key)\r\n    }\r\n  }\r\n}\r\n\r\nexport const resetHotkeys = async () => {\r\n  enableHotkeys()\r\n\r\n  const keys = Object.keys(player.hotkeys)\r\n  if (keys.length === 0) {\r\n    return await Alert('You haven\\'t changed the hotkey')\r\n  }\r\n\r\n  let settext = ''\r\n  const hotkey = new Map(defaultHotkeys)\r\n  for (const key in player.hotkeys) {\r\n    const oldKey = player.hotkeys[key][0]\r\n    const toSet = player.hotkeys[key][1]\r\n    if (hotkey.has(oldKey)) {\r\n      const old = hotkey.get(oldKey)!\r\n      settext += `\\t${oldKey}[${old[0]}] to ${toSet}, `\r\n      hotkey.set(toSet, old)\r\n      hotkey.delete(oldKey)\r\n    }\r\n  }\r\n\r\n  const confirmed = await Confirm(`Are you sure you want to default all the changed hotkeys?\\nBelow is a history of hotkeys you have changed\\n\\n${settext}`)\r\n  if (confirmed) {\r\n    hotkeys = new Map(defaultHotkeys)\r\n    player.hotkeys = {}\r\n    enableHotkeys()\r\n  }\r\n}\r\n\r\ndocument.addEventListener('keydown', eventHotkeys)\r\n", "import { player, saveSynergy, format, resourceGain, updateAll, getTimePinnedToLoadDate } from './Synergism'\r\nimport { sumContents, productContents } from './Utility'\r\nimport { Globals as G } from './Variables'\r\nimport { CalcECC } from './Challenges'\r\nimport Decimal from 'break_infinity.js'\r\nimport { toggleTalismanBuy, updateTalismanInventory } from './Talismans'\r\nimport { reset } from './Reset'\r\nimport { achievementaward } from './Achievements'\r\nimport type { resetNames } from './types/Synergism'\r\nimport { hepteractEffective } from './Hepteracts'\r\nimport { addTimers, automaticTools } from './Helper'\r\nimport { Alert, Prompt } from './UpdateHTML'\r\nimport { quarkHandler } from './Quark'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { calculateSingularityDebuff } from './singularity'\r\nimport { calculateEventSourceBuff } from './Event'\r\nimport { disableHotkeys, enableHotkeys } from './Hotkeys'\r\nimport { setInterval, clearInterval } from './Timers'\r\nimport { getFastForwardTotalMultiplier } from './singularity'\r\nimport i18next from 'i18next'\r\n\r\nexport const calculateTotalCoinOwned = () => {\r\n  G.totalCoinOwned =\r\n        player.firstOwnedCoin +\r\n        player.secondOwnedCoin +\r\n        player.thirdOwnedCoin +\r\n        player.fourthOwnedCoin +\r\n        player.fifthOwnedCoin\r\n}\r\n\r\nexport const calculateTotalAcceleratorBoost = () => {\r\n  let b = 0\r\n  if (player.upgrades[26] > 0.5) {\r\n    b += 1\r\n  }\r\n  if (player.upgrades[31] > 0.5) {\r\n    b += Math.floor(G.totalCoinOwned / 2000) * 100 / 100\r\n  }\r\n  if (player.achievements[7] > 0.5) {\r\n    b += Math.floor(player.firstOwnedCoin / 2000)\r\n  }\r\n  if (player.achievements[14] > 0.5) {\r\n    b += Math.floor(player.secondOwnedCoin / 2000)\r\n  }\r\n  if (player.achievements[21] > 0.5) {\r\n    b += Math.floor(player.thirdOwnedCoin / 2000)\r\n  }\r\n  if (player.achievements[28] > 0.5) {\r\n    b += Math.floor(player.fourthOwnedCoin / 2000)\r\n  }\r\n  if (player.achievements[35] > 0.5) {\r\n    b += Math.floor(player.fifthOwnedCoin / 2000)\r\n  }\r\n\r\n  b += player.researches[93] * Math.floor(1 / 20 * (G.rune1level + G.rune2level + G.rune3level + G.rune4level + G.rune5level))\r\n  b += Math.floor((0.01 + G.rune1level) * G.effectiveLevelMult / 20)\r\n  b *= (1 + 1 / 5 * player.researches[3] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\r\n  b *= (1 + 1 / 20 * player.researches[16] + 1 / 20 * player.researches[17])\r\n  b *= (1 + 1 / 20 * player.researches[88])\r\n  b *= calculateSigmoidExponential(20, (player.antUpgrades[4-1]! + G.bonusant4) / 1000 * 20 / 19)\r\n  b *= (1 + 1 / 100 * player.researches[127])\r\n  b *= (1 + 0.8 / 100 * player.researches[142])\r\n  b *= (1 + 0.6 / 100 * player.researches[157])\r\n  b *= (1 + 0.4 / 100 * player.researches[172])\r\n  b *= (1 + 0.2 / 100 * player.researches[187])\r\n  b *= (1 + 0.01 / 100 * player.researches[200])\r\n  b *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\r\n  b *= (1 + 1/1000 * hepteractEffective('acceleratorBoost'))\r\n  if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n    b *= 2\r\n  }\r\n  b = Math.min(1e100, Math.floor(b))\r\n  G.freeAcceleratorBoost = b\r\n\r\n  G.totalAcceleratorBoost = Math.floor(player.acceleratorBoostBought + G.freeAcceleratorBoost) * 100 / 100\r\n}\r\n\r\nexport const calculateAcceleratorMultiplier = () => {\r\n  G.acceleratorMultiplier = 1\r\n  G.acceleratorMultiplier *= (1 + player.achievements[60] / 100)\r\n  G.acceleratorMultiplier *= (1 + player.achievements[61] / 100)\r\n  G.acceleratorMultiplier *= (1 + player.achievements[62] / 100)\r\n  G.acceleratorMultiplier *= (1 + 1 / 5 * player.researches[1] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\r\n  G.acceleratorMultiplier *= (1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10])\r\n  G.acceleratorMultiplier *= (1 + 1 / 20 * player.researches[86])\r\n  G.acceleratorMultiplier *= (1 + 1 / 100 * player.researches[126])\r\n  G.acceleratorMultiplier *= (1 + 0.8 / 100 * player.researches[141])\r\n  G.acceleratorMultiplier *= (1 + 0.6 / 100 * player.researches[156])\r\n  G.acceleratorMultiplier *= (1 + 0.4 / 100 * player.researches[171])\r\n  G.acceleratorMultiplier *= (1 + 0.2 / 100 * player.researches[186])\r\n  G.acceleratorMultiplier *= (1 + 0.01 / 100 * player.researches[200])\r\n  G.acceleratorMultiplier *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\r\n  G.acceleratorMultiplier *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25])\r\n  if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\r\n    G.acceleratorMultiplier *= 1.25\r\n  }\r\n}\r\n\r\nexport const calculateRecycleMultiplier = () => {\r\n  // Factors where recycle bonus comes from\r\n  const recycleFactors = sumContents([\r\n    0.05 * player.achievements[80],\r\n    0.05 * player.achievements[87],\r\n    0.05 * player.achievements[94],\r\n    0.05 * player.achievements[101],\r\n    0.05 * player.achievements[108],\r\n    0.05 * player.achievements[115],\r\n    0.075 * player.achievements[122],\r\n    0.075 * player.achievements[129],\r\n    0.05 * player.upgrades[61],\r\n    0.25 * Math.min(1, G.rune4level / 400),\r\n    0.005 * player.cubeUpgrades[2]\r\n  ])\r\n\r\n  return 1 / (1 - recycleFactors)\r\n}\r\n\r\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean, runeLevel: number, returnFactors: true): number[]\r\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean, runeLevel?: number, returnFactors?: false): number\r\nexport function calculateRuneExpGiven(runeIndex: number, all = false, runeLevel = player.runelevels[runeIndex], returnFactors = false) {\r\n  // recycleMult accounted for all recycle chance, but inversed so it's a multiplier instead\r\n  const recycleMultiplier = calculateRecycleMultiplier()\r\n\r\n  // Rune multiplier that is summed instead of added\r\n  let allRuneExpAdditiveMultiplier: number | null = null\r\n  if (all) {\r\n    allRuneExpAdditiveMultiplier = sumContents([\r\n      //Challenge 3 completions\r\n      1 / 100 * player.highestchallengecompletions[3],\r\n      //Reincarnation 2x1\r\n      1 * player.upgrades[66]\r\n    ])\r\n  } else {\r\n    allRuneExpAdditiveMultiplier = sumContents([\r\n      // Base amount multiplied per offering\r\n      1,\r\n      // +1 if C1 completion\r\n      Math.min(1, player.highestchallengecompletions[1]),\r\n      // +0.10 per C1 completion\r\n      0.4 / 10 * player.highestchallengecompletions[1],\r\n      // Research 5x2\r\n      0.6 * player.researches[22],\r\n      // Research 5x3\r\n      0.3 * player.researches[23],\r\n      // Particle Upgrade 1x1\r\n      2 * player.upgrades[61],\r\n      // Particle upgrade 3x1\r\n      player.upgrades[71] * runeLevel / 25\r\n    ])\r\n  }\r\n\r\n  // Rune multiplier that gets applied to all runes\r\n  const allRuneExpMultiplier = productContents([\r\n    // Research 4x16\r\n    1 + (player.researches[91] / 20),\r\n    // Research 4x17\r\n    1 + (player.researches[92] / 20),\r\n    // Ant 8\r\n    calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8-1]! + G.bonusant8, 1.1)),\r\n    // Cube Bonus\r\n    G.cubeBonusMultiplier[4],\r\n    // Cube Upgrade Bonus\r\n    (1 + player.ascensionCounter / 1000 * player.cubeUpgrades[32]),\r\n    // Constant Upgrade Multiplier\r\n    1 + 1 / 10 * player.constantUpgrades[8],\r\n    // Challenge 15 reward multiplier\r\n    G.challenge15Rewards.runeExp\r\n  ])\r\n  // Corruption Divisor\r\n  const droughtEffect = 1 / Math.pow(G.droughtMultiplier[player.usedCorruptions[8]], 1 - 1 / 2 * player.platonicUpgrades[13])\r\n\r\n  // Rune multiplier that gets applied to specific runes\r\n  const runeExpMultiplier = [\r\n    productContents([\r\n      1 + (player.researches[78] / 50), 1 + (player.researches[111] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10), droughtEffect\r\n    ]),\r\n    productContents([\r\n      1 + (player.researches[80] / 50), 1 + (player.researches[112] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10), droughtEffect\r\n    ]),\r\n    productContents([\r\n      1 + (player.researches[79] / 50), 1 + (player.researches[113] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[8]) / 5), droughtEffect\r\n    ]),\r\n    productContents([\r\n      1 + (player.researches[77] / 50), 1 + (player.researches[114] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[6]) / 10), droughtEffect\r\n    ]),\r\n    productContents([\r\n      1 + (player.researches[83] / 20), 1 + (player.researches[115] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[9]) / 5), droughtEffect\r\n    ]),\r\n    productContents([1]),\r\n    productContents([1])\r\n  ]\r\n\r\n  const fact = [\r\n    allRuneExpAdditiveMultiplier,\r\n    allRuneExpMultiplier,\r\n    recycleMultiplier,\r\n    runeExpMultiplier[runeIndex]\r\n  ]\r\n\r\n  return returnFactors ? fact : Math.min(1e200, productContents(fact))\r\n}\r\n\r\nexport const lookupTableGen = (runeLevel: number) => {\r\n  // Rune exp required to level multipliers\r\n  const allRuneExpRequiredMultiplier = productContents([\r\n    Math.pow((runeLevel + 1) / 2, 3),\r\n    ((3.5 * runeLevel) + 100) / 500,\r\n    Math.max(1, (runeLevel - 200) / 9),\r\n    Math.max(1, (runeLevel - 400) / 12),\r\n    Math.max(1, (runeLevel - 600) / 15),\r\n    Math.max(1, Math.pow(1.03, (runeLevel - 800) / 4))\r\n  ])\r\n\r\n  return allRuneExpRequiredMultiplier\r\n}\r\n\r\nlet lookupTableRuneExp: number[] | null = null\r\n\r\n// Returns the amount of exp required to level a rune\r\nexport const calculateRuneExpToLevel = (runeIndex: number, runeLevel = player.runelevels[runeIndex]) => {\r\n  lookupTableRuneExp ??= Array.from({ length: 40000 }, (_, i) => lookupTableGen(i))\r\n\r\n  // For runes 6 and 7 we will apply a special multiplier\r\n  let multiplier = lookupTableRuneExp[runeLevel]\r\n  if (runeIndex === 5) {\r\n    multiplier = Math.pow(100, runeLevel)\r\n  }\r\n  if (runeIndex === 6) {\r\n    multiplier = Math.pow(1e25, runeLevel) * (player.highestSingularityCount + 1)\r\n  }\r\n  return multiplier * G.runeexpbase[runeIndex]\r\n}\r\n\r\nexport const calculateMaxRunes = (i: number) => {\r\n  let max = 1000\r\n\r\n  const increaseAll = 20 * (player.cubeUpgrades[16] + player.cubeUpgrades[37])\r\n        + 3 * player.constantUpgrades[7] + 80 * CalcECC('ascension', player.challengecompletions[11])\r\n        + 200 * CalcECC('ascension', player.challengecompletions[14])\r\n        + Math.floor(0.04 * player.researches[200] + 0.04 * player.cubeUpgrades[50])\r\n  const increaseMaxLevel = [\r\n    null,\r\n    10 * (player.researches[78] + player.researches[111]) + increaseAll,\r\n    10 * (player.researches[80] + player.researches[112]) + increaseAll,\r\n    10 * (player.researches[79] + player.researches[113]) + increaseAll,\r\n    10 * (player.researches[77] + player.researches[114]) + increaseAll,\r\n    10 * player.researches[115] + increaseAll,\r\n    -901,\r\n    -999\r\n  ]\r\n\r\n  max = (increaseMaxLevel[i]! > G.runeMaxLvl ? G.runeMaxLvl : max + increaseMaxLevel[i]!)\r\n  return max\r\n}\r\n\r\nexport const calculateEffectiveIALevel = () => {\r\n  return player.runelevels[5] + Math.max(0, player.runelevels[5] - 74) + Math.max(0, player.runelevels[5] - 98)\r\n}\r\n\r\nexport function calculateOfferings(input: resetNames): number\r\nexport function calculateOfferings(input: resetNames, calcMult: false, statistic?: boolean): number[]\r\nexport function calculateOfferings(input: resetNames, calcMult: true, statistic: boolean): number\r\nexport function calculateOfferings(input: resetNames, calcMult = true, statistic = false) {\r\n\r\n  if (input == 'acceleratorBoost' || input == 'ascension' || input == 'ascensionChallenge') {\r\n    return 0\r\n  }\r\n\r\n  let q = 0\r\n  let a = 0\r\n  let b = 0\r\n  let c = 0\r\n\r\n  if (input == 'reincarnation' || input == 'reincarnationChallenge') {\r\n    a += 3\r\n    if (player.achievements[52] > 0.5) {\r\n      a += (25 * Math.min(player.reincarnationcounter / 1800, 1))\r\n    }\r\n    if (player.upgrades[62] > 0.5) {\r\n      a += 1 / 50 * (sumContents(player.challengecompletions))\r\n    }\r\n    a += 0.6 * player.researches[25]\r\n    if (player.researches[95] === 1) {\r\n      a += 4\r\n    }\r\n    a += 1 / 200 * G.rune5level * G.effectiveLevelMult * (1 + player.researches[85] / 200)\r\n    a *= (1 + Math.pow(Decimal.log(player.reincarnationShards.add(1), 10), 2 / 3) / 4)\r\n    a *= Math.min(Math.pow(player.reincarnationcounter / 10 + 1, 2), 1)\r\n    if (player.reincarnationcounter >= 5) {\r\n      a *= Math.max(1, player.reincarnationcounter / 10)\r\n    }\r\n\r\n  }\r\n  if (input == 'transcension' || input == 'transcensionChallenge' || input == 'reincarnation' ||\r\n        input == 'reincarnationChallenge') {\r\n    b += 2\r\n    if (player.reincarnationCount > 0) {\r\n      b += 2\r\n    }\r\n    if (player.achievements[44] > 0.5) {\r\n      b += (15 * Math.min(player.transcendcounter / 1800, 1))\r\n    }\r\n    if (player.challengecompletions[2] > 0) {\r\n      b += 1\r\n    }\r\n    b += 0.2 * player.researches[24]\r\n    b += 1 / 200 * G.rune5level * G.effectiveLevelMult * (1 + player.researches[85] / 200)\r\n    b *= (1 + Math.pow(Decimal.log(player.transcendShards.add(1), 10), 1 / 2) / 5)\r\n    b *= (1 + CalcECC('reincarnation', player.challengecompletions[8]) / 25)\r\n    b *= Math.min(Math.pow(player.transcendcounter / 10, 2), 1)\r\n    if (player.transcendCount >= 5) {\r\n      b *= Math.max(1, player.transcendcounter / 10)\r\n    }\r\n  }\r\n  // This will always be calculated if '0' is not already returned\r\n  c += 1\r\n  if (player.transcendCount > 0 || player.reincarnationCount > 0) {\r\n    c += 1\r\n  }\r\n  if (player.reincarnationCount > 0) {\r\n    c += 2\r\n  }\r\n  if (player.achievements[37] > 0.5) {\r\n    c += (15 * Math.min(player.prestigecounter / 1800, 1))\r\n  }\r\n  if (player.challengecompletions[2] > 0) {\r\n    c += 1\r\n  }\r\n  c += 0.2 * player.researches[24]\r\n  c += 1 / 200 * G.rune5level * G.effectiveLevelMult * (1 + player.researches[85] / 200)\r\n  c *= (1 + Math.pow(Decimal.log(player.prestigeShards.add(1), 10), 1 / 2) / 5)\r\n  c *= (1 + CalcECC('reincarnation', player.challengecompletions[6]) / 50)\r\n  c *= Math.min(Math.pow(player.prestigecounter / 10, 2), 1)\r\n  if (player.prestigeCount >= 5) {\r\n    c *= Math.max(1, player.prestigecounter / 10)\r\n  }\r\n  q = a + b + c\r\n\r\n  const arr = [\r\n    1 + 10 * player.achievements[33] / 100, // Alchemy Achievement 5\r\n    1 + 15 * player.achievements[34] / 100, // Alchemy Achievement 6\r\n    1 + 25 * player.achievements[35] / 100, // Alchemy Achievement 7\r\n    1 + 20 * player.upgrades[38] / 100, // Diamond Upgrade 4x3\r\n    1 + player.upgrades[75] * 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5)), // Particle Upgrade 3x5\r\n    1 + 1 / 50 * player.shopUpgrades.offeringAuto, // Auto Offering Shop\r\n    1 + 1 / 25 * player.shopUpgrades.offeringEX, // Offering EX Shop\r\n    1 + 1 / 100 * player.shopUpgrades.cashGrab, // Cash Grab\r\n    1 + 1 / 10000 * sumContents(player.challengecompletions) * player.researches[85], // Research 4x10\r\n    1 + Math.pow((player.antUpgrades[6-1]! + G.bonusant6), .66), // Ant Upgrade:\r\n    G.cubeBonusMultiplier[3], // Brutus\r\n    1 + 0.02 * player.constantUpgrades[3], // Constant Upgrade 3\r\n    1 + 0.0003 * player.talismanLevels[3-1] * player.researches[149] + 0.0004 * player.talismanLevels[3-1] * player.researches[179], // Research 6x24,8x4\r\n    1 + 0.12 * CalcECC('ascension', player.challengecompletions[12]), // Challenge 12\r\n    1 + 0.01 / 100 * player.researches[200], // Research 8x25\r\n    1 + Math.min(1, player.ascensionCount / 1e6) * player.achievements[187], // Ascension Count Achievement\r\n    1 + .6 * player.achievements[250] + 1 * player.achievements[251], // Sun&Moon Achievements\r\n    1 + 0.05 * player.cubeUpgrades[46],  // Cube Upgrade 5x6\r\n    1 + 0.02 / 100 * player.cubeUpgrades[50],  // Cube Upgrade 5x10\r\n    1 + player.platonicUpgrades[5],  // Platonic ALPHA\r\n    1 + 2.5 * player.platonicUpgrades[10], // Platonic BETA\r\n    1 + 5 * player.platonicUpgrades[15], // Platonic OMEGA\r\n    G.challenge15Rewards.offering, // C15 Reward\r\n    1 + 5 * (player.singularityUpgrades.starterPack.getEffect().bonus ? 1 : 0), // Starter Pack Upgrade\r\n    +player.singularityUpgrades.singOfferings1.getEffect().bonus, // Offering Charge GQ Upgrade\r\n    +player.singularityUpgrades.singOfferings2.getEffect().bonus, // Offering Storm GQ Upgrade\r\n    +player.singularityUpgrades.singOfferings3.getEffect().bonus, // Offering Tempest GQ Upgrade\r\n    +player.singularityUpgrades.singCitadel.getEffect().bonus, // Citadel GQ Upgrade\r\n    +player.singularityUpgrades.singCitadel2.getEffect().bonus, // Citadel 2 GQ Upgrade\r\n    1 + player.cubeUpgrades[54] / 100, // Cube upgrade 6x4 (Cx4)\r\n    +player.octeractUpgrades.octeractOfferings1.getEffect().bonus, // Offering Electrolosis OC Upgrade\r\n    1 + calculateEventBuff('Offering') // Event\r\n  ]\r\n\r\n  if (calcMult) {\r\n    q *= productContents(arr)\r\n  } else {\r\n    return arr\r\n  }\r\n\r\n  if (statistic) {\r\n    return productContents(arr)\r\n  }\r\n\r\n  if (G.eventClicked && G.isEvent) {\r\n    q *= 1.05\r\n  }\r\n  q /= calculateSingularityDebuff('Offering')\r\n  q = Math.floor(q) * 100 / 100\r\n  if (player.currentChallenge.ascension === 15) {\r\n    q *= (1 + 7 * player.cubeUpgrades[62])\r\n  }\r\n  q *= (1 + 1/200 * player.shopUpgrades.cashGrab2)\r\n  q *= (1 + 1/100 * player.shopUpgrades.offeringEX2 * player.singularityCount)\r\n  q *= Math.pow(1.02, player.shopUpgrades.offeringEX3)\r\n  q *= calculateTotalOcteractOfferingBonus()\r\n  q = Math.min(1e300, q)\r\n\r\n  let persecond = 0\r\n  if (input === 'prestige') {\r\n    persecond = q / (1 + player.prestigecounter)\r\n  }\r\n  if (input === 'transcension' || input == 'transcensionChallenge') {\r\n    persecond = q / (1 + player.transcendcounter)\r\n  }\r\n  if (input === 'reincarnation' || input == 'reincarnationChallenge') {\r\n    persecond = q / (1 + player.reincarnationcounter)\r\n  }\r\n  if (persecond > player.offeringpersecond) {\r\n    player.offeringpersecond = persecond\r\n  }\r\n\r\n  return q\r\n}\r\n\r\nexport const calculateObtainium = () => {\r\n  G.obtainiumGain = 1\r\n  if (player.upgrades[69] > 0) {\r\n    G.obtainiumGain *= Math.min(10, new Decimal(Decimal.pow(Decimal.log(G.reincarnationPointGain.add(10), 10), 0.5)).toNumber())\r\n  }\r\n  if (player.upgrades[72] > 0) {\r\n    G.obtainiumGain *= Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2\r\n             * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10]))\r\n  }\r\n  if (player.upgrades[74] > 0) {\r\n    G.obtainiumGain *= (1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5)))\r\n  }\r\n  G.obtainiumGain *= (1 + player.researches[65] / 5)\r\n  G.obtainiumGain *= (1 + player.researches[76] / 10)\r\n  G.obtainiumGain *= (1 + player.researches[81] / 10)\r\n  G.obtainiumGain *= (1 + player.shopUpgrades.obtainiumAuto / 50)\r\n  G.obtainiumGain *= (1 + player.shopUpgrades.cashGrab / 100)\r\n  G.obtainiumGain *= (1 + G.rune5level / 200 * G.effectiveLevelMult * (1 + player.researches[84] / 200 * (1 + 1 * G.effectiveRuneSpiritPower[5] * calculateCorruptionPoints() / 400)))\r\n  G.obtainiumGain *= (1 + 0.01 * player.achievements[84] + 0.03 * player.achievements[91] + 0.05 * player.achievements[98] + 0.07\r\n         * player.achievements[105] + 0.09 * player.achievements[112] + 0.11 * player.achievements[119] + 0.13 * player.achievements[126] + 0.15\r\n         * player.achievements[133] + 0.17 * player.achievements[140] + 0.19 * player.achievements[147])\r\n  G.obtainiumGain *= (1 + 2 * Math.pow((player.antUpgrades[10-1]! + G.bonusant10) / 50, 2 / 3))\r\n  G.obtainiumGain *= (1 + player.achievements[188] * Math.min(2, player.ascensionCount / 5e6))\r\n  G.obtainiumGain *= (1 + 0.6 * player.achievements[250] + 1 * player.achievements[251])\r\n  G.obtainiumGain *= G.cubeBonusMultiplier[5]\r\n  G.obtainiumGain *= (1 + 0.04 * player.constantUpgrades[4])\r\n  G.obtainiumGain *= (1 + 0.1 * player.cubeUpgrades[47])\r\n  G.obtainiumGain *= (1 + 0.1 * player.cubeUpgrades[3])\r\n  G.obtainiumGain *= (1 + 0.5 * CalcECC('ascension', player.challengecompletions[12]))\r\n  G.obtainiumGain *= (1 + calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[4])\r\n  G.obtainiumGain *= (1 + 0.03 * Math.log(player.uncommonFragments + 1) / Math.log(4) * player.researches[144])\r\n  G.obtainiumGain *= (1 + 0.02 / 100 * player.cubeUpgrades[50])\r\n  if (player.achievements[53] > 0) {\r\n    G.obtainiumGain *= (1 + 1 / 800 * (G.runeSum))\r\n  }\r\n  if (player.achievements[128]) {\r\n    G.obtainiumGain *= 1.5\r\n  }\r\n  if (player.achievements[129]) {\r\n    G.obtainiumGain *= 1.25\r\n  }\r\n\r\n  if (player.achievements[51] > 0) {\r\n    G.obtainiumGain += 4\r\n  }\r\n  if (player.reincarnationcounter >= 2) {\r\n    G.obtainiumGain += 1 * player.researches[63]\r\n  }\r\n  if (player.reincarnationcounter >= 5) {\r\n    G.obtainiumGain += 2 * player.researches[64]\r\n  }\r\n  G.obtainiumGain *= Math.min(1, Math.pow(player.reincarnationcounter / 10, 2))\r\n  G.obtainiumGain *= (1 + 1 / 25 * player.shopUpgrades.obtainiumEX)\r\n  if (player.reincarnationCount >= 5) {\r\n    G.obtainiumGain *= Math.max(1, player.reincarnationcounter / 10)\r\n  }\r\n  G.obtainiumGain *= Math.pow(Decimal.log(player.transcendShards.add(1), 10) / 300, 2)\r\n  G.obtainiumGain = Math.pow(G.obtainiumGain, Math.min(1, G.illiteracyPower[player.usedCorruptions[5]] * (1 + 9 / 100 * player.platonicUpgrades[9] * Math.min(100, Math.log10(player.researchPoints + 10)))))\r\n  G.obtainiumGain *= (1 + 4 / 100 * player.cubeUpgrades[42])\r\n  G.obtainiumGain *= (1 + 3 / 100 * player.cubeUpgrades[43])\r\n  G.obtainiumGain *= (1 + player.platonicUpgrades[5])\r\n  G.obtainiumGain *= (1 + 1.5 * player.platonicUpgrades[9])\r\n  G.obtainiumGain *= (1 + 2.5 * player.platonicUpgrades[10])\r\n  G.obtainiumGain *= (1 + 5 * player.platonicUpgrades[15])\r\n  G.obtainiumGain *= G.challenge15Rewards.obtainium\r\n  G.obtainiumGain *= 1 + 5 * (player.singularityUpgrades.starterPack.getEffect().bonus ? 1 : 0)\r\n  G.obtainiumGain *= +player.singularityUpgrades.singObtainium1.getEffect().bonus\r\n  G.obtainiumGain *= +player.singularityUpgrades.singObtainium2.getEffect().bonus\r\n  G.obtainiumGain *= +player.singularityUpgrades.singObtainium3.getEffect().bonus\r\n  G.obtainiumGain *= (1 + player.cubeUpgrades[55] / 100) // Cube Upgrade 6x5 (Cx5)\r\n  G.obtainiumGain *= (1 + 1/200 * player.shopUpgrades.cashGrab2)\r\n  G.obtainiumGain *= (1 + 1/100 * player.shopUpgrades.obtainiumEX2 * player.singularityCount)\r\n  G.obtainiumGain *= 1 + calculateEventBuff('Obtainium')\r\n  G.obtainiumGain *= +player.singularityUpgrades.singCitadel.getEffect().bonus\r\n  G.obtainiumGain *= +player.singularityUpgrades.singCitadel2.getEffect().bonus\r\n  G.obtainiumGain *= +player.octeractUpgrades.octeractObtainium1.getEffect().bonus\r\n  G.obtainiumGain *= Math.pow(1.02, player.shopUpgrades.obtainiumEX3)\r\n  G.obtainiumGain *= calculateTotalOcteractObtainiumBonus()\r\n\r\n  if (G.eventClicked && G.isEvent) {\r\n    G.obtainiumGain *= 1.05\r\n  }\r\n\r\n  if (player.currentChallenge.ascension === 15) {\r\n    G.obtainiumGain += 1\r\n    G.obtainiumGain *= (1 + 7 * player.cubeUpgrades[62])\r\n  }\r\n\r\n  if (!isFinite(G.obtainiumGain)) {\r\n    G.obtainiumGain = 1e300\r\n  }\r\n  G.obtainiumGain = Math.min(1e300, G.obtainiumGain)\r\n  G.obtainiumGain /= calculateSingularityDebuff('Obtainium')\r\n\r\n  if (player.usedCorruptions[5] >= 15) {\r\n    G.obtainiumGain = Math.pow(G.obtainiumGain, 1/4)\r\n  }\r\n  if (player.usedCorruptions[5] >= 16) {\r\n    G.obtainiumGain = Math.pow(G.obtainiumGain, 1/3)\r\n  }\r\n\r\n  G.obtainiumGain = Math.max(1 + player.singularityCount, G.obtainiumGain)\r\n  if (player.currentChallenge.ascension === 14) {\r\n    G.obtainiumGain = 0\r\n  }\r\n  player.obtainiumpersecond = Math.min(1e300, G.obtainiumGain) / (0.1 + player.reincarnationcounter)\r\n  player.maxobtainiumpersecond = Math.max(player.maxobtainiumpersecond, player.obtainiumpersecond)\r\n}\r\n\r\nexport const calculateAutomaticObtainium = () => {\r\n  return 0.05 * (10 * player.researches[61] + 2 * player.researches[62]) * player.maxobtainiumpersecond * (1 + 4 * player.cubeUpgrades[3] / 5)\r\n}\r\n\r\n\r\n// TODO: REFACTOR THIS - May 15, 2022.\r\nexport const calculateTalismanEffects = () => {\r\n  let positiveBonus = 0\r\n  let negativeBonus = 0\r\n  if (player.achievements[135] === 1) {\r\n    positiveBonus += 0.02\r\n  }\r\n  if (player.achievements[136] === 1) {\r\n    positiveBonus += 0.02\r\n  }\r\n  positiveBonus += 0.02 * (player.talismanRarity[4-1] - 1)\r\n  positiveBonus += 3 * player.researches[106] / 100\r\n  positiveBonus += 3 * player.researches[107] / 100\r\n  positiveBonus += 3 * player.researches[116] / 200\r\n  positiveBonus += 3 * player.researches[117] / 200\r\n  positiveBonus += (G.cubeBonusMultiplier[9] - 1)\r\n  positiveBonus += 0.0004 * player.cubeUpgrades[50]\r\n  negativeBonus += 0.06 * player.researches[118]\r\n  negativeBonus += 0.0004 * player.cubeUpgrades[50]\r\n\r\n  if (player.highestSingularityCount >= 7) {\r\n    positiveBonus += negativeBonus\r\n    negativeBonus = positiveBonus\r\n  }\r\n\r\n  if (player.highestSingularityCount < 7) {\r\n    for (let i = 1; i <= 5; i++) {\r\n      if (player.talismanOne[i] === (1)) {\r\n        G.talisman1Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[1-1]]! + positiveBonus) * player.talismanLevels[1-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman1Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[1-1]]! - negativeBonus) * player.talismanLevels[1-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanTwo[i] === (1)) {\r\n        G.talisman2Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[2-1]]! + positiveBonus) * player.talismanLevels[2-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman2Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[2-1]]! - negativeBonus) * player.talismanLevels[2-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanThree[i] === (1)) {\r\n        G.talisman3Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[3-1]]! + positiveBonus) * player.talismanLevels[3-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman3Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[3-1]]! - negativeBonus) * player.talismanLevels[3-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanFour[i] === (1)) {\r\n        G.talisman4Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[4-1]]! + positiveBonus) * player.talismanLevels[4-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman4Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[4-1]]! - negativeBonus) * player.talismanLevels[4-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanFive[i] === (1)) {\r\n        G.talisman5Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[5-1]]! + positiveBonus) * player.talismanLevels[5-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman5Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[5-1]]! - negativeBonus) * player.talismanLevels[5-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanSix[i] === (1)) {\r\n        G.talisman6Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[6-1]]! + positiveBonus) * player.talismanLevels[6-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman6Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[6-1]]! - negativeBonus) * player.talismanLevels[6-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanSeven[i] === (1)) {\r\n        G.talisman7Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[7-1]]! + positiveBonus) * player.talismanLevels[7-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman7Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[7-1]]! - negativeBonus) * player.talismanLevels[7-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n    }\r\n  } else {\r\n    for (let i = 1; i <= 5; i ++) {\r\n      G.talisman1Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[1-1]]! + positiveBonus) * player.talismanLevels[1-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman2Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[2-1]]! + positiveBonus) * player.talismanLevels[2-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman3Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[3-1]]! + positiveBonus) * player.talismanLevels[3-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman4Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[4-1]]! + positiveBonus) * player.talismanLevels[4-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman5Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[5-1]]! + positiveBonus) * player.talismanLevels[5-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman6Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[6-1]]! + positiveBonus) * player.talismanLevels[6-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman7Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[7-1]]! + positiveBonus) * player.talismanLevels[7-1] * G.challenge15Rewards.talismanBonus\r\n    }\r\n  }\r\n  const talismansEffects = [G.talisman1Effect, G.talisman2Effect, G.talisman3Effect, G.talisman4Effect, G.talisman5Effect, G.talisman6Effect, G.talisman7Effect]\r\n  const runesTalisman = [0, 0, 0, 0, 0, 0]\r\n  talismansEffects.forEach((talismanEffect) => {\r\n    talismanEffect.forEach((levels, runeNumber) => {\r\n      runesTalisman[runeNumber] += levels!\r\n    })\r\n  });\r\n  [, G.rune1Talisman, G.rune2Talisman, G.rune3Talisman, G.rune4Talisman, G.rune5Talisman] = runesTalisman\r\n  G.talisman6Power = 0\r\n  G.talisman7Quarks = 0\r\n  if (player.talismanRarity[1-1] === 6) {\r\n    G.rune2Talisman += 400\r\n  }\r\n  if (player.talismanRarity[2-1] === 6) {\r\n    G.rune1Talisman += 400\r\n  }\r\n  if (player.talismanRarity[3-1] === 6) {\r\n    G.rune4Talisman += 400\r\n  }\r\n  if (player.talismanRarity[4-1] === 6) {\r\n    G.rune3Talisman += 400\r\n  }\r\n  if (player.talismanRarity[5-1] === 6) {\r\n    G.rune5Talisman += 400\r\n  }\r\n  if (player.talismanRarity[6-1] === 6) {\r\n    G.talisman6Power = 2.5\r\n  }\r\n  if (player.talismanRarity[7-1] === 6) {\r\n    G.talisman7Quarks = 2\r\n  }\r\n}\r\n\r\nexport const calculateRuneLevels = () => {\r\n  calculateTalismanEffects()\r\n  if (player.currentChallenge.reincarnation !== 9) {\r\n    const antUpgrade8 = player.antUpgrades[8] ?? 0\r\n    G.rune1level = Math.max(1, player.runelevels[0] + Math.min(1e7, (antUpgrade8 + G.bonusant9)) * 1 + (G.rune1Talisman) + 7 * player.constantUpgrades[7])\r\n    G.rune2level = Math.max(1, player.runelevels[1] + Math.min(1e7, (antUpgrade8 + G.bonusant9)) * 1 + (G.rune2Talisman) + 7 * player.constantUpgrades[7])\r\n    G.rune3level = Math.max(1, player.runelevels[2] + Math.min(1e7, (antUpgrade8 + G.bonusant9)) * 1 + (G.rune3Talisman) + 7 * player.constantUpgrades[7])\r\n    G.rune4level = Math.max(1, player.runelevels[3] + Math.min(1e7, (antUpgrade8 + G.bonusant9)) * 1 + (G.rune4Talisman) + 7 * player.constantUpgrades[7])\r\n    G.rune5level = Math.max(1, player.runelevels[4] + Math.min(1e7, (antUpgrade8 + G.bonusant9)) * 1 + (G.rune5Talisman) + 7 * player.constantUpgrades[7])\r\n  }\r\n\r\n  G.runeSum = sumContents([G.rune1level, G.rune2level, G.rune3level, G.rune4level, G.rune5level])\r\n  calculateRuneBonuses()\r\n}\r\n\r\nexport const calculateRuneBonuses = () => {\r\n  G.blessingMultiplier = 1\r\n  G.spiritMultiplier = 1\r\n\r\n  G.blessingMultiplier *= (1 + 6.9 * player.researches[134] / 100)\r\n  G.blessingMultiplier *= (1 + (player.talismanRarity[3-1] - 1) / 10)\r\n  G.blessingMultiplier *= (1 + 0.10 * Math.log10(player.epicFragments + 1) * player.researches[174])\r\n  G.blessingMultiplier *= (1 + 2 * player.researches[194] / 100)\r\n  if (player.researches[160] > 0) {\r\n    G.blessingMultiplier *= Math.pow(1.25, 8)\r\n  }\r\n  G.spiritMultiplier *= (1 + 8 * player.researches[164] / 100)\r\n  if (player.researches[165] > 0 && player.currentChallenge.ascension !== 0) {\r\n    G.spiritMultiplier *= Math.pow(2, 8)\r\n  }\r\n  G.spiritMultiplier *= (1 + 0.15 * Math.log10(player.legendaryFragments + 1) * player.researches[189])\r\n  G.spiritMultiplier *= (1 + 2 * player.researches[194] / 100)\r\n  G.spiritMultiplier *= (1 + (player.talismanRarity[5-1] - 1) / 100)\r\n\r\n  for (let i = 1; i <= 5; i++) {\r\n    G.runeBlessings[i] = G.blessingMultiplier * player.runelevels[i - 1] * player.runeBlessingLevels[i]\r\n    G.runeSpirits[i] = G.spiritMultiplier * player.runelevels[i - 1] * player.runeSpiritLevels[i]\r\n  }\r\n\r\n  for (let i = 1; i <= 5; i++) {\r\n    if (G.runeBlessings[i] <= 1e30) {\r\n      G.effectiveRuneBlessingPower[i] = (Math.pow(G.runeBlessings[i], 1 / 8)) / 75 * G.challenge15Rewards.blessingBonus\r\n    } else if (G.runeBlessings[i] > 1e30) {\r\n      G.effectiveRuneBlessingPower[i] = Math.pow(10, 5 / 2) * (Math.pow(G.runeBlessings[i], 1 / 24)) / 75 * G.challenge15Rewards.blessingBonus\r\n    }\r\n\r\n    if (G.runeSpirits[i] <= 1e25) {\r\n      G.effectiveRuneSpiritPower[i] = (Math.pow(G.runeSpirits[i], 1 / 8)) / 75 * G.challenge15Rewards.spiritBonus\r\n    } else if (G.runeSpirits[i] > 1e25) {\r\n      G.effectiveRuneSpiritPower[i] = Math.pow(10, 25 / 12) * (Math.pow(G.runeSpirits[i], 1 / 24)) / 75 * G.challenge15Rewards.spiritBonus\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport const calculateAnts = () => {\r\n\r\n  let bonusLevels = 0\r\n  bonusLevels += 2 * (player.talismanRarity[6-1] - 1)\r\n  bonusLevels += CalcECC('reincarnation', player.challengecompletions[9])\r\n  bonusLevels += 2 * player.constantUpgrades[6]\r\n  bonusLevels += 12 * CalcECC('ascension', player.challengecompletions[11])\r\n  bonusLevels += Math.floor(1 / 200 * player.researches[200])\r\n  bonusLevels *= G.challenge15Rewards.bonusAntLevel\r\n  let c11 = 0\r\n  let c11bonus = 0\r\n  if (player.currentChallenge.ascension === 11) {\r\n    c11 = 999\r\n  }\r\n  if (player.currentChallenge.ascension === 11) {\r\n    c11bonus = Math.floor((4 * player.challengecompletions[8] + 23 * player.challengecompletions[9]) * Math.max(0, (1 - player.challengecompletions[11] / 10)))\r\n  }\r\n  G.bonusant1 = Math.min(player.antUpgrades[1-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant2 = Math.min(player.antUpgrades[2-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant3 = Math.min(player.antUpgrades[3-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant4 = Math.min(player.antUpgrades[4-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant5 = Math.min(player.antUpgrades[5-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant6 = Math.min(player.antUpgrades[6-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant7 = Math.min(player.antUpgrades[7-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant8 = Math.min(player.antUpgrades[8-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant9 = Math.min(player.antUpgrades[9-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant10 = Math.min(player.antUpgrades[10-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant11 = Math.min(player.antUpgrades[11-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant12 = Math.min(player.antUpgrades[12-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n\r\n}\r\n\r\nexport const calculateAntSacrificeELO = () => {\r\n  G.antELO = 0\r\n  G.effectiveELO = 0\r\n  const antUpgradeSum = sumContents(player.antUpgrades as number[])\r\n  if (player.antPoints.gte('1e40')) {\r\n    G.antELO += Decimal.log(player.antPoints, 10)\r\n    G.antELO += 1 / 2 * antUpgradeSum\r\n    G.antELO += 1 / 10 * player.firstOwnedAnts\r\n    G.antELO += 1 / 5 * player.secondOwnedAnts\r\n    G.antELO += 1 / 3 * player.thirdOwnedAnts\r\n    G.antELO += 1 / 2 * player.fourthOwnedAnts\r\n    G.antELO += player.fifthOwnedAnts\r\n    G.antELO += 2 * player.sixthOwnedAnts\r\n    G.antELO += 4 * player.seventhOwnedAnts\r\n    G.antELO += 8 * player.eighthOwnedAnts\r\n    G.antELO += 666 * player.researches[178]\r\n    G.antELO *= (1 + 0.01 * player.achievements[180] + 0.02 * player.achievements[181] + 0.03 * player.achievements[182])\r\n    G.antELO *= (1 + player.researches[110] / 100)\r\n    G.antELO *= (1 + 2.5 * player.researches[148] / 100)\r\n\r\n    if (player.achievements[176] === 1) {\r\n      G.antELO += 25\r\n    }\r\n    if (player.achievements[177] === 1) {\r\n      G.antELO += 50\r\n    }\r\n    if (player.achievements[178] === 1) {\r\n      G.antELO += 75\r\n    }\r\n    if (player.achievements[179] === 1) {\r\n      G.antELO += 100\r\n    }\r\n    G.antELO += 25 * player.researches[108]\r\n    G.antELO += 25 * player.researches[109]\r\n    G.antELO += 40 * player.researches[123]\r\n    G.antELO += 100 * CalcECC('reincarnation', player.challengecompletions[10])\r\n    G.antELO += 75 * player.upgrades[80]\r\n    G.antELO = 1 / 10 * Math.floor(10 * G.antELO)\r\n\r\n    G.effectiveELO += 0.5 * Math.min(3500, G.antELO)\r\n    G.effectiveELO += 0.1 * Math.min(4000, G.antELO)\r\n    G.effectiveELO += 0.1 * Math.min(6000, G.antELO)\r\n    G.effectiveELO += 0.1 * Math.min(10000, G.antELO)\r\n    G.effectiveELO += 0.2 * G.antELO\r\n    G.effectiveELO += (G.cubeBonusMultiplier[8] - 1)\r\n    G.effectiveELO += 1 * player.cubeUpgrades[50]\r\n    G.effectiveELO *= (1 + 0.03 * player.upgrades[124])\r\n  }\r\n}\r\n\r\nconst calculateAntSacrificeMultipliers = () => {\r\n  G.timeMultiplier = Math.min(1, Math.pow(player.antSacrificeTimer / 10, 2))\r\n  if (player.achievements[177] === 0) {\r\n    G.timeMultiplier *= Math.min(1000, Math.max(1, player.antSacrificeTimer / 10))\r\n  }\r\n  if (player.achievements[177] > 0) {\r\n    G.timeMultiplier *= Math.max(1, player.antSacrificeTimer / 10)\r\n  }\r\n\r\n  G.upgradeMultiplier = 1\r\n  G.upgradeMultiplier *= (1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11-1]! + G.bonusant11) / 125)))\r\n  G.upgradeMultiplier *= (1 + player.researches[103] / 20)\r\n  G.upgradeMultiplier *= (1 + player.researches[104] / 20)\r\n  if (player.achievements[132] === 1) {\r\n    G.upgradeMultiplier *= 1.25\r\n  }\r\n  if (player.achievements[137] === 1) {\r\n    G.upgradeMultiplier *= 1.25\r\n  }\r\n  G.upgradeMultiplier *= (1 + 20 / 3 * G.effectiveRuneBlessingPower[3])\r\n  G.upgradeMultiplier *= (1 + 1 / 50 * CalcECC('reincarnation', player.challengecompletions[10]))\r\n  G.upgradeMultiplier *= (1 + 1 / 50 * player.researches[122])\r\n  G.upgradeMultiplier *= (1 + 3 / 100 * player.researches[133])\r\n  G.upgradeMultiplier *= (1 + 2 / 100 * player.researches[163])\r\n  G.upgradeMultiplier *= (1 + 1 / 100 * player.researches[193])\r\n  G.upgradeMultiplier *= (1 + 1 / 10 * player.upgrades[79])\r\n  G.upgradeMultiplier *= (1 + 1 / 4 * player.upgrades[40])\r\n  G.upgradeMultiplier *= G.cubeBonusMultiplier[7]\r\n  G.upgradeMultiplier *= (1 + calculateEventBuff('Ant Sacrifice'))\r\n  G.upgradeMultiplier = Math.min(1e300, G.upgradeMultiplier)\r\n}\r\n\r\ninterface IAntSacRewards {\r\n    antSacrificePoints: number\r\n    offerings: number\r\n    obtainium: number\r\n    talismanShards: number\r\n    commonFragments: number\r\n    uncommonFragments: number\r\n    rareFragments: number\r\n    epicFragments: number\r\n    legendaryFragments: number\r\n    mythicalFragments: number\r\n}\r\n\r\nexport const calculateAntSacrificeRewards = (): IAntSacRewards => {\r\n  calculateAntSacrificeELO()\r\n  calculateAntSacrificeMultipliers()\r\n\r\n  const maxCap = 1e300\r\n  const rewardsMult = Math.min(maxCap, G.timeMultiplier * G.upgradeMultiplier)\r\n  const rewards: IAntSacRewards = {\r\n    antSacrificePoints: G.effectiveELO * rewardsMult / 85,\r\n    offerings: Math.min(maxCap, player.offeringpersecond * 0.15 * G.effectiveELO * rewardsMult / 180),\r\n    obtainium: Math.min(maxCap, player.maxobtainiumpersecond * 0.24 * G.effectiveELO * rewardsMult / 180),\r\n    talismanShards: (G.antELO > 500)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 210 * Math.pow(1 / 4 * (Math.max(0, G.effectiveELO - 500)), 2))))\r\n      : 0,\r\n    commonFragments: (G.antELO > 750)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 110 * Math.pow(1 / 9 * (Math.max(0, G.effectiveELO - 750)), 1.83))))\r\n      : 0,\r\n    uncommonFragments: (G.antELO > 1000)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 170 * Math.pow(1 / 16 * (Math.max(0, G.effectiveELO - 1000)), 1.66))))\r\n      : 0,\r\n    rareFragments: (G.antELO > 1500)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 25 * (Math.max(0, G.effectiveELO - 1500)), 1.50))))\r\n      : 0,\r\n    epicFragments: (G.antELO > 2000)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 36 * (Math.max(0, G.effectiveELO - 2000)), 1.33))))\r\n      : 0,\r\n    legendaryFragments: (G.antELO > 3000)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 230 * Math.pow(1 / 49 * (Math.max(0, G.effectiveELO - 3000)), 1.16))))\r\n      : 0,\r\n    mythicalFragments: (G.antELO > 5000)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 220 * Math.pow(1 / 64 * (Math.max(0, G.effectiveELO - 4150)), 1))))\r\n      : 0\r\n  }\r\n\r\n  return rewards\r\n}\r\n\r\nexport const timeWarp = async () => {\r\n  const time = await Prompt(i18next.t('calculate.timePrompt'))\r\n  const timeUse = Number(time)\r\n  if (\r\n    Number.isNaN(timeUse) ||\r\n            timeUse <= 0\r\n  ) {\r\n    return Alert(i18next.t('calculate.timePromptError'))\r\n  }\r\n\r\n  DOMCacheGetOrSet('offlineContainer').style.display = 'flex'\r\n  DOMCacheGetOrSet('offlineBlur').style.display = ''\r\n  await calculateOffline(timeUse)\r\n}\r\n\r\nexport const calculateOffline = async (forceTime = 0) => {\r\n  disableHotkeys()\r\n\r\n  G.timeWarp = true\r\n\r\n  //Variable Declarations i guess\r\n  const maximumTimer = 86400 * 3 + 7200 * 2 * player.researches[31] + 7200 * 2 * player.researches[32]\r\n  const updatedTime = Date.now()\r\n  const timeAdd = Math.min(maximumTimer, Math.max(forceTime, (updatedTime - player.offlinetick) / 1000))\r\n  const timeTick = timeAdd/200\r\n  let resourceTicks = 200\r\n\r\n  DOMCacheGetOrSet('offlineTimer').textContent = i18next.t('calculate.offlineTimer', { value: format(timeAdd, 0) })\r\n\r\n  //May 11, 2021: I've revamped calculations for this significantly. Note to May 11 Platonic: Fuck off -May 15 Platonic\r\n  //Some one-time tick things that are relatively important\r\n  toggleTalismanBuy(player.buyTalismanShardPercent)\r\n  updateTalismanInventory()\r\n\r\n  const offlineDialog = player.offlinetick > 0\r\n\r\n  player.offlinetick = (player.offlinetick < 1.5e12) ? (Date.now()) : player.offlinetick\r\n\r\n  G.timeMultiplier = calculateTimeAcceleration().mult\r\n  calculateObtainium()\r\n  const obtainiumGain = calculateAutomaticObtainium()\r\n\r\n  const resetAdd = {\r\n    prestige: timeAdd / Math.max(0.01, player.fastestprestige),\r\n    offering: Math.floor(timeAdd),\r\n    transcension: timeAdd / Math.max(0.01, player.fastesttranscend),\r\n    reincarnation: timeAdd / Math.max(0.01, player.fastestreincarnate),\r\n    obtainium: timeAdd * obtainiumGain * G.timeMultiplier\r\n  }\r\n\r\n  const timerAdd = {\r\n    prestige: timeAdd * G.timeMultiplier,\r\n    transcension: timeAdd * G.timeMultiplier,\r\n    reincarnation: timeAdd * G.timeMultiplier,\r\n    ants: timeAdd * G.timeMultiplier,\r\n    antsReal: timeAdd,\r\n    ascension: player.ascensionCounter, //Calculate this after the fact\r\n    quarks: quarkHandler().gain //Calculate this after the fact\r\n  }\r\n\r\n  addTimers('ascension', timeAdd)\r\n  addTimers('quarks', timeAdd)\r\n  addTimers('goldenQuarks', timeAdd)\r\n  addTimers('singularity', timeAdd)\r\n  addTimers('octeracts', timeTick)\r\n  addTimers('ambrosia', timeAdd)\r\n\r\n  player.prestigeCount += resetAdd.prestige\r\n  player.transcendCount += resetAdd.transcension\r\n  player.reincarnationCount += resetAdd.reincarnation\r\n  timerAdd.ascension = player.ascensionCounter - timerAdd.ascension\r\n  timerAdd.quarks = quarkHandler().gain - timerAdd.quarks\r\n\r\n  //200 simulated all ticks [July 12, 2021]\r\n  const runOffline = setInterval(() => {\r\n    G.timeMultiplier = calculateTimeAcceleration().mult\r\n    calculateObtainium()\r\n\r\n    //Reset Stuff lmao!\r\n    addTimers('prestige', timeTick)\r\n    addTimers('transcension', timeTick)\r\n    addTimers('reincarnation', timeTick)\r\n    addTimers('octeracts', timeTick)\r\n\r\n    resourceGain(timeTick * G.timeMultiplier)\r\n\r\n    //Auto Obtainium Stuff\r\n    if (player.researches[61] > 0 && player.currentChallenge.ascension !== 14) {\r\n      automaticTools('addObtainium', timeTick)\r\n    }\r\n\r\n    //Auto Ant Sacrifice Stuff\r\n    if (player.achievements[173] > 0) {\r\n      automaticTools('antSacrifice', timeTick)\r\n    }\r\n\r\n    //Auto Offerings\r\n    automaticTools('addOfferings', timeTick)\r\n    //Auto Rune Sacrifice Stuff\r\n    if (player.shopUpgrades.offeringAuto > 0 && player.autoSacrificeToggle) {\r\n      automaticTools('runeSacrifice', timeTick)\r\n    }\r\n\r\n    if (resourceTicks % 5 === 1) {\r\n      // 196, 191, ... , 6, 1 ticks remaining\r\n      updateAll()\r\n    }\r\n\r\n    resourceTicks -= 1\r\n    //Misc functions\r\n    if (resourceTicks < 1) {\r\n      clearInterval(runOffline)\r\n      G.timeWarp = false\r\n    }\r\n  }, 0)\r\n\r\n  DOMCacheGetOrSet('offlinePrestigeCountNumber').textContent = format(resetAdd.prestige, 0, true)\r\n  DOMCacheGetOrSet('offlinePrestigeTimer').innerHTML =\r\n      i18next.t('offlineProgress.currentPrestigeTimer', { value: format(timerAdd.prestige, 2, false) })\r\n  DOMCacheGetOrSet('offlineOfferingCount').innerHTML =\r\n      i18next.t('offlineProgress.offeringsGenerated', { value: format(resetAdd.offering, 0, true) })\r\n  DOMCacheGetOrSet('offlineTranscensionCount').innerHTML =\r\n      i18next.t('offlineProgress.transcensionCount', { value: format(resetAdd.transcension, 0, true) })\r\n  DOMCacheGetOrSet('offlineTranscensionTimer').innerHTML =\r\n      i18next.t('offlineProgress.currentTranscensionCounter', { value: format(timerAdd.transcension, 2, false) })\r\n  DOMCacheGetOrSet('offlineReincarnationCount').innerHTML =\r\n      i18next.t('offlineProgress.reincarnationCount', { value: format(resetAdd.reincarnation, 0, true) })\r\n  DOMCacheGetOrSet('offlineReincarnationTimer').innerHTML =\r\n      i18next.t('offlineProgress.currentReincarnationTimer', { value: format(timerAdd.reincarnation, 2, false) })\r\n  DOMCacheGetOrSet('offlineObtainiumCount').innerHTML =\r\n      i18next.t('offlineProgress.obtainiumGenerated', { value: format(resetAdd.obtainium, 0, true) })\r\n  DOMCacheGetOrSet('offlineAntTimer').innerHTML =\r\n      i18next.t('offlineProgress.ingameAntSacTimer', { value: format(timerAdd.ants, 2, false) })\r\n  DOMCacheGetOrSet('offlineRealAntTimer').innerHTML =\r\n      i18next.t('offlineProgress.realAntSacTimer', { value: format(timerAdd.antsReal, 2, true) })\r\n  DOMCacheGetOrSet('offlineAscensionTimer').innerHTML =\r\n      i18next.t('offlineProgress.currentAscensionTimer', { value: format(timerAdd.ascension, 2, true) })\r\n  DOMCacheGetOrSet('offlineQuarkCount').innerHTML =\r\n      i18next.t('offlineProgress.exportQuarks', { value: format(timerAdd.quarks, 0, true) })\r\n\r\n  DOMCacheGetOrSet('progressbardescription').textContent = i18next.t('calculate.offlineEarnings')\r\n\r\n  player.offlinetick = updatedTime\r\n  if (!player.loadedNov13Vers) {\r\n    if (player.challengecompletions[14] > 0 || player.highestchallengecompletions[14] > 0) {\r\n      const ascCount = player.ascensionCount\r\n      reset('ascensionChallenge')\r\n      player.ascensionCount = (ascCount + 1)\r\n    }\r\n    player.loadedNov13Vers = true\r\n  }\r\n\r\n  await saveSynergy()\r\n\r\n  updateTalismanInventory()\r\n  calculateObtainium()\r\n  calculateAnts()\r\n  calculateRuneLevels()\r\n\r\n  // allow aesthetic offline progress\r\n  if (offlineDialog) {\r\n    const el = DOMCacheGetOrSet('notification')\r\n    el.classList.add('slide-out')\r\n    el.classList.remove('slide-in')\r\n    document.body.classList.remove('scrollbar')\r\n    document.body.classList.add('loading')\r\n    DOMCacheGetOrSet('exitOffline').style.visibility = 'hidden'\r\n    DOMCacheGetOrSet('offlineContainer').style.display = 'flex'\r\n    DOMCacheGetOrSet('transparentBG').style.display = 'block'\r\n  } else {\r\n    exitOffline()\r\n  }\r\n}\r\n\r\nexport const exitOffline = () => {\r\n  document.body.classList.remove('loading')\r\n  document.body.classList.add('scrollbar')\r\n  DOMCacheGetOrSet('transparentBG').style.display = 'none'\r\n  DOMCacheGetOrSet('offlineContainer').style.display = 'none'\r\n  DOMCacheGetOrSet('offlineBlur').style.display = 'none'\r\n  enableHotkeys()\r\n}\r\n\r\nexport const calculateSigmoid = (constant: number, factor: number, divisor: number) => {\r\n  return (1 + (constant - 1) * (1 - Math.pow(2, -(factor) / (divisor))))\r\n}\r\n\r\nexport const calculateSigmoidExponential = (constant: number, coefficient: number) => {\r\n  return (1 + (constant - 1) * (1 - Math.exp(-coefficient)))\r\n}\r\n\r\nexport const calculateCubeBlessings = () => {\r\n  // The visual updates are handled in visualUpdateCubes()\r\n  const cubeArray = [\r\n    player.cubeBlessings.accelerator,\r\n    player.cubeBlessings.multiplier,\r\n    player.cubeBlessings.offering,\r\n    player.cubeBlessings.runeExp,\r\n    player.cubeBlessings.obtainium,\r\n    player.cubeBlessings.antSpeed,\r\n    player.cubeBlessings.antSacrifice,\r\n    player.cubeBlessings.antELO,\r\n    player.cubeBlessings.talismanBonus,\r\n    player.cubeBlessings.globalSpeed\r\n  ]\r\n  const powerBonus = [\r\n    player.cubeUpgrades[45] / 100,\r\n    player.cubeUpgrades[35] / 100,\r\n    player.cubeUpgrades[24] / 100,\r\n    player.cubeUpgrades[14] / 100,\r\n    player.cubeUpgrades[40] / 100,\r\n    player.cubeUpgrades[22] / 40,\r\n    player.cubeUpgrades[15] / 100,\r\n    player.cubeUpgrades[25] / 100,\r\n    player.cubeUpgrades[44] / 100,\r\n    player.cubeUpgrades[34] / 100\r\n  ]\r\n\r\n  for (let i = 1; i <= 10; i++) {\r\n    let power = 1\r\n    let mult = 1\r\n    if (cubeArray[i-1] >= 1000) {\r\n      power = G.blessingDRPower[i]!\r\n      mult *= Math.pow(1000, (1 - G.blessingDRPower[i]!) * (1 + powerBonus[i-1]))\r\n    }\r\n    if (i === 6) {\r\n      power = 2.25\r\n      mult = 1\r\n    }\r\n\r\n    G.cubeBonusMultiplier[i] = Math.min(1e300, 1 + mult * G.blessingbase[i]! * Math.pow(cubeArray[i-1], power * (1 + powerBonus[i-1])) * G.tesseractBonusMultiplier[i]!)\r\n  }\r\n  calculateRuneLevels()\r\n  calculateAntSacrificeELO()\r\n  calculateObtainium()\r\n}\r\n\r\nexport const calculateTotalOcteractCubeBonus = () => {\r\n  if (player.singularityChallenges.noOcteracts.enabled) {\r\n    return 1\r\n  }\r\n  if (player.totalWowOcteracts < 1000) {\r\n    const bonus = (1 + 2/1000 * player.totalWowOcteracts) // At 1,000 returns 3\r\n    return bonus > 1.00001 ? bonus : 1\r\n  } else {\r\n    const power = 2 + +player.singularityChallenges.noOcteracts.rewards.octeractPow\r\n    return 3 * Math.pow(Math.log10(player.totalWowOcteracts) - 2, power) // At 1,000 returns 3\r\n  }\r\n}\r\n\r\nexport const calculateTotalOcteractQuarkBonus = () => {\r\n  if (player.singularityChallenges.noOcteracts.enabled) {\r\n    return 1\r\n  }\r\n  if (player.totalWowOcteracts < 1000) {\r\n    const bonus = (1 + 0.2 / 1000 * player.totalWowOcteracts) // At 1,000 returns 1.20\r\n    return bonus > 1.00001 ? bonus : 1\r\n  } else {\r\n    return 1.1 + 0.1 * (Math.log10(player.totalWowOcteracts) - 2) // At 1,000 returns 1.20\r\n  }\r\n}\r\n\r\nexport const calculateTotalOcteractOfferingBonus = () => {\r\n  if (!player.singularityChallenges.noOcteracts.rewards.offeringBonus) {\r\n    return 1\r\n  }\r\n  return Math.pow(calculateTotalOcteractQuarkBonus(), 1.5)\r\n}\r\n\r\nexport const calculateTotalOcteractObtainiumBonus = () => {\r\n  if (!player.singularityChallenges.noOcteracts.rewards.obtainiumBonus) {\r\n    return 1\r\n  }\r\n  return Math.pow(calculateTotalOcteractQuarkBonus(), 1.4)\r\n}\r\n\r\nexport const calculateAllCubeMultiplier = () => {\r\n  const arr = [\r\n    // Ascension Time Multiplier to cubes\r\n    Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4\r\n             * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1)),\r\n    // Sun and Moon achievements\r\n    1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251],\r\n    // Speed Achievement\r\n    1 + player.achievements[240] * Math.min(0.5, Math.max(0.1, 1 / 20 * Math.log10(calculateTimeAcceleration().mult + 0.01))),\r\n    // Challenge 15: All Cube Gain bonuses 1-5\r\n    G.challenge15Rewards.cube1 * G.challenge15Rewards.cube2 * G.challenge15Rewards.cube3 * G.challenge15Rewards.cube4 * G.challenge15Rewards.cube5,\r\n    // Rune 6: Infinite Ascent\r\n    1 + 1/100 * calculateEffectiveIALevel(),\r\n    // BETA: 2x Cubes\r\n    1 + player.platonicUpgrades[10],\r\n    // OMEGA: C9 Cube Bonus\r\n    Math.pow(1.01, player.platonicUpgrades[15] * player.challengecompletions[9]),\r\n    // Powder Bonus\r\n    calculateCubeMultFromPowder(),\r\n    // Event\r\n    1 + calculateEventBuff('Cubes'),\r\n    // Singularity Factor\r\n    1 / calculateSingularityDebuff('Cubes'),\r\n    // Wow Pass Y\r\n    1 + 0.75 * player.shopUpgrades.seasonPassY / 100,\r\n    // BUY THIS! Golden Quark Upgrade\r\n    1 + 4 * (player.singularityUpgrades.starterPack.getEffect().bonus ? 1 : 0),\r\n    // Cube Flame [GQ]\r\n    +player.singularityUpgrades.singCubes1.getEffect().bonus,\r\n    // Cube Blaze [GQ]\r\n    +player.singularityUpgrades.singCubes2.getEffect().bonus,\r\n    // Cube Inferno [GQ]\r\n    +player.singularityUpgrades.singCubes3.getEffect().bonus,\r\n    // Wow Pass Z\r\n    1 + player.shopUpgrades.seasonPassZ * player.singularityCount / 100,\r\n    // Cookie Upgrade 16\r\n    1 + 1 * player.cubeUpgrades[66] * (1 - player.platonicUpgrades[15]),\r\n    // Cookie Upgrade 8 (now actually works)\r\n    1 + 0.25 * +G.isEvent * player.cubeUpgrades[58],\r\n    // Wow Octeract Bonus\r\n    calculateTotalOcteractCubeBonus(),\r\n    // No Singularity Upgrades Challenge\r\n    +player.singularityChallenges.noSingularityUpgrades.rewards.cubes,\r\n    // Singularity Citadel\r\n    +player.singularityUpgrades.singCitadel.getEffect().bonus,\r\n    // Singularity Citadel 2\r\n    +player.singularityUpgrades.singCitadel2.getEffect().bonus,\r\n    // Platonic DELTA\r\n    1 + +player.singularityUpgrades.platonicDelta.getEffect().bonus * Math.min(9, player.singularityCounter / (3600 * 24)),\r\n    // Wow Pass INF\r\n    Math.pow(1.02, player.shopUpgrades.seasonPassInfinity),\r\n    // Ambrosia Mult\r\n    calculateAmbrosiaCubeMult(),\r\n    // Module - Tutorial\r\n    +player.blueberryUpgrades.ambrosiaTutorial.bonus.cubes,\r\n    // Module - Cubes 1\r\n    +player.blueberryUpgrades.ambrosiaCubes1.bonus.cubes,\r\n    // Module - Luck-Cube 1\r\n    +player.blueberryUpgrades.ambrosiaLuckCube1.bonus.cubes,\r\n    // Module - Quark-Cube 1\r\n    +player.blueberryUpgrades.ambrosiaQuarkCube1.bonus.cubes\r\n    // Total Global Cube Multipliers: 29\r\n  ]\r\n\r\n  const extraMult = (G.isEvent && G.eventClicked) ? 1.05 : 1\r\n  return {\r\n    mult: productContents(arr) * extraMult,\r\n    list: arr\r\n  }\r\n}\r\n\r\nexport const calculateCubeMultiplier = (score = -1) => {\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const arr = [\r\n    // Ascension Score Multiplier\r\n    Math.pow(score / 3000, 1 / 4.1),\r\n    // Global Multiplier\r\n    calculateAllCubeMultiplier().mult,\r\n    // Season Pass 1\r\n    1 + 2.25 * player.shopUpgrades.seasonPass / 100,\r\n    // Researches (Excl 8x25)\r\n    (1 + player.researches[119] / 400) * // 5x19\r\n        (1 + player.researches[120] / 400) * // 5x20\r\n        (1 + player.researches[137] / 100) * // 6x12\r\n        (1 + 0.9 * player.researches[152] / 100) * // 7x2\r\n        (1 + 0.8 * player.researches[167] / 100) * // 7x17\r\n        (1 + 0.7 * player.researches[182] / 100) * // 8x7\r\n        (1 + 0.03 / 100 * player.researches[192] * player.antUpgrades[12-1]!) * // 8x17\r\n        (1 + 0.6 * player.researches[197] / 100),  // 8x22\r\n    // Research 8x25\r\n    1 + 0.004 / 100 * player.researches[200],\r\n    // Cube Upgrades\r\n    (1 + player.cubeUpgrades[1] / 6) * // 1x1\r\n        (1 + player.cubeUpgrades[11] / 11) * // 2x1\r\n        (1 + 0.4 * player.cubeUpgrades[30]),    // 3x10\r\n    // Constant Upgrade 10\r\n    1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\r\n    // Achievement 189 Bonus\r\n    1 + player.achievements[189] * Math.min(2, player.ascensionCount / 2.5e8),\r\n    // Achievement 193 Bonus\r\n    1 + player.achievements[193] * Decimal.log(player.ascendShards.add(1), 10) / 400,\r\n    // Achievement 195 Bonus\r\n    1 + Math.min(250, player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400),\r\n    // Achievement 198-201 Bonus\r\n    1 + 4 / 100 * (player.achievements[198] + player.achievements[199] + player.achievements[200]) + 3 / 100 * player.achievements[201],\r\n    // Achievement 254 Bonus\r\n    1 + (Math.min(0.15, 0.6/100 * Math.log10(score + 1))) * player.achievements[254],\r\n    // Spirit Power\r\n    1 + calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[2],\r\n    // Platonic Cube Opening Bonus\r\n    G.platonicBonusMultiplier[0],\r\n    // Platonic 1x1\r\n    1 + 0.000090 * sumContents(player.usedCorruptions) * player.platonicUpgrades[1],\r\n    // Cube Upgrade 63 (Cx13)\r\n    1 + Math.pow(1.03, Math.log10(Math.max(1, player.wowAbyssals))) * player.cubeUpgrades[63] - player.cubeUpgrades[63]\r\n    // Total Multipliers to cubes: 15\r\n  ]\r\n\r\n  // Decided to return a copy of list as well as the actual multiplier, instead of differentiating\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateTesseractMultiplier = (score = -1) => {\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const corrSum = sumContents(player.usedCorruptions.slice(2, 10))\r\n  const arr = [\r\n    // Ascension Score Multiplier\r\n    Math.pow(1 + Math.max(0, (score - 1e5)) / 1e4, .35),\r\n    // Global Multiplier\r\n    calculateAllCubeMultiplier().mult,\r\n    // Season Pass 1\r\n    1 + 2.25 * player.shopUpgrades.seasonPass / 100,\r\n    // 10th Const Upgrade +Tesseract%\r\n    1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\r\n    // Cube Upgrade 3x10\r\n    1 + 0.4 * player.cubeUpgrades[30],\r\n    // Cube Upgrade 4x8\r\n    1 + 1 / 200 * player.cubeUpgrades[38] * corrSum,\r\n    // Achievement 195 Bonus\r\n    1 + Math.min(250, player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400),\r\n    // Achievement 202 Bonus\r\n    1 + player.achievements[202] * Math.min(2, player.ascensionCount / 5e8),\r\n    // Achievement 205-208 Bonus\r\n    1 + 4 / 100 * (player.achievements[205] + player.achievements[206] + player.achievements[207]) + 3 / 100 * player.achievements[208],\r\n    // Achievement 255 Bonus\r\n    1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[255],\r\n    // Platonic Cube Bonus\r\n    G.platonicBonusMultiplier[1],\r\n    // Platonic Upgrade 1x2\r\n    1 + 0.00018 * corrSum * player.platonicUpgrades[2]\r\n    // Total Tesseract Multipliers: 12\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateHypercubeMultiplier = (score = -1) => {\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const arr = [\r\n    // Ascension Score Multiplier\r\n    Math.pow(1 + Math.max(0, (score - 1e9)) / 1e8, .5),\r\n    // Global Multiplier\r\n    calculateAllCubeMultiplier().mult,\r\n    // Season Pass 2\r\n    1 + 1.5 * player.shopUpgrades.seasonPass2 / 100,\r\n    // Achievement 212 - 215 Bonus\r\n    1 + 4 / 100 * (player.achievements[212] + player.achievements[213] + player.achievements[214]) + 3 / 100 * player.achievements[215],\r\n    // Achievement 216 Bonus\r\n    1 + player.achievements[216] * Math.min(2, player.ascensionCount / 1e9),\r\n    // Achievement 253 Bonus\r\n    1 + 1 / 10 * player.achievements[253],\r\n    // Achievement 256 Bonus\r\n    1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[256],\r\n    // Achievement 265 Bonus\r\n    1 + Math.min(2, player.ascensionCount / 2.5e10) * player.achievements[265],\r\n    // Platonic Cubes Opened Bonus\r\n    G.platonicBonusMultiplier[2],\r\n    // Platonic Upgrade 1x3\r\n    1 + 0.00054 * sumContents(player.usedCorruptions) * player.platonicUpgrades[3],\r\n    // Hyperreal Hepteract Bonus\r\n    1 + 0.6/1000 * hepteractEffective('hyperrealism')\r\n    // Total Hypercube Multipliers: 11\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculatePlatonicMultiplier = (score = -1) => {\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const arr = [\r\n    // Ascension Score Multiplier\r\n    Math.pow(1 + Math.max(0, score - 2.666e12) / 2.666e11, .75),\r\n    // Global Multipliers\r\n    calculateAllCubeMultiplier().mult,\r\n    // Season Pass 2\r\n    1 + 1.5 * player.shopUpgrades.seasonPass2 / 100,\r\n    // Achievement 196 Bonus\r\n    1 + Math.min(20, player.achievements[196] * 1 / 5000 * Decimal.log(player.ascendShards.add(1), 10)),\r\n    // Achievement 219-222 Bonus\r\n    1 + 4 / 100 * (player.achievements[219] + player.achievements[220] + player.achievements[221]) + 3 / 100 * player.achievements[222],\r\n    // Achievement 223 Bonus\r\n    1 + player.achievements[223] * Math.min(2, player.ascensionCount / 1.337e9),\r\n    // Achievement 257 Bonus\r\n    1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[257],\r\n    // Platonic Cube Opening Bonus\r\n    G.platonicBonusMultiplier[3],\r\n    // Platonic Upgrade 1x4\r\n    1 + 1.2 * player.platonicUpgrades[4] / 50\r\n    // Total Platonic Multipliers: 9\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateHepteractMultiplier = (score = -1) => {\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const arr = [\r\n    // Ascension Score Multiplier\r\n    Math.pow(1 + Math.max(0, score - 1.666e16) / 3.33e16, 0.85),\r\n    // Global Multiplier\r\n    calculateAllCubeMultiplier().mult,\r\n    // Season Pass 3\r\n    1 + 1.5 * player.shopUpgrades.seasonPass3 / 100,\r\n    // Achievement 258 Bonus\r\n    1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[258],\r\n    // Achievement 264 Bonus [Max: 8T Asc]\r\n    1 + Math.min(0.4, player.ascensionCount / 2e13) * player.achievements[264],\r\n    // Achievement 265 Bonus [Max: 160T Asc]\r\n    1 + Math.min(0.2, player.ascensionCount / 8e14) * player.achievements[265],\r\n    // Achievement 270 Bonus\r\n    Math.min(2, (1 + 1/1000000 * Decimal.log(player.ascendShards.add(1), 10) * player.achievements[270]))\r\n    // Total Hepteract Multipliers: 7\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const getOcteractValueMultipliers = () => {\r\n  const corruptionLevelSum = sumContents(player.usedCorruptions.slice(2, 10))\r\n  return [\r\n    1 + 1.5 * player.shopUpgrades.seasonPass3 / 100,\r\n    1 + 0.75 * player.shopUpgrades.seasonPassY / 100,\r\n    1 + player.shopUpgrades.seasonPassZ * player.singularityCount / 100,\r\n    1 + player.shopUpgrades.seasonPassLost / 1000,\r\n    // cube upgrade 70, ie Cx20\r\n    1 + +(corruptionLevelSum >= 14 * 8) * player.cubeUpgrades[70] / 10000,\r\n    1 + +(corruptionLevelSum >= 14 * 8) * +player.singularityUpgrades.divinePack.getEffect().bonus,\r\n    // next three are flame/blaze/inferno\r\n    +player.singularityUpgrades.singCubes1.getEffect().bonus,\r\n    +player.singularityUpgrades.singCubes2.getEffect().bonus,\r\n    +player.singularityUpgrades.singCubes3.getEffect().bonus,\r\n    // absinthe through eighth wonder\r\n    +player.singularityUpgrades.singOcteractGain.getEffect().bonus,\r\n    +player.singularityUpgrades.singOcteractGain2.getEffect().bonus,\r\n    +player.singularityUpgrades.singOcteractGain3.getEffect().bonus,\r\n    +player.singularityUpgrades.singOcteractGain4.getEffect().bonus,\r\n    +player.singularityUpgrades.singOcteractGain5.getEffect().bonus,\r\n    // Patreon bonus\r\n    1 + (player.worlds.BONUS / 100) * +player.singularityUpgrades.singOcteractPatreonBonus.getEffect().bonus,\r\n    // octeracts for dummies\r\n    1 + 0.2 * +player.octeractUpgrades.octeractStarter.getEffect().bonus,\r\n    // cogenesis and trigenesis\r\n    +player.octeractUpgrades.octeractGain.getEffect().bonus,\r\n    +player.octeractUpgrades.octeractGain2.getEffect().bonus,\r\n    derpsmithCornucopiaBonus(),\r\n    // digital octeract accumulator\r\n    Math.pow(1 + +player.octeractUpgrades.octeractAscensionsOcteractGain.getEffect().bonus, 1 + Math.floor(Math.log10(1 + player.ascensionCount))),\r\n    1 + calculateEventBuff('Octeract'),\r\n    1 + +player.singularityUpgrades.platonicDelta.getEffect().bonus * Math.min(9, player.singularityCounter / (3600 * 24)),\r\n    // No Singulairty Upgrades\r\n    +player.singularityChallenges.noSingularityUpgrades.rewards.cubes,\r\n    // Wow Pass INF\r\n    Math.pow(1.02, player.shopUpgrades.seasonPassInfinity),\r\n    // Ambrosia Mult\r\n    calculateAmbrosiaCubeMult(),\r\n    // Module- Tutorial\r\n    +player.blueberryUpgrades.ambrosiaTutorial.bonus.cubes,\r\n    // Module- Cubes 1\r\n    +player.blueberryUpgrades.ambrosiaCubes1.bonus.cubes,\r\n    // Module- Luck-Cube 1\r\n    +player.blueberryUpgrades.ambrosiaLuckCube1.bonus.cubes,\r\n    // Module- Quark-Cube 1\r\n    +player.blueberryUpgrades.ambrosiaQuarkCube1.bonus.cubes\r\n  ]\r\n}\r\n\r\nexport const octeractGainPerSecond = () => {\r\n  const SCOREREQ = 1e23\r\n  const currentScore = calculateAscensionScore().effectiveScore\r\n\r\n  const baseMultiplier = (currentScore >= SCOREREQ) ? currentScore / SCOREREQ : 0\r\n\r\n  const valueMultipliers = getOcteractValueMultipliers()\r\n\r\n  const ascensionSpeed = player.singularityUpgrades.oneMind.getEffect().bonus ? Math.pow(10, 1/2) : Math.pow(calculateAscensionAcceleration(), 1 / 2)\r\n  const oneMindModifier = player.singularityUpgrades.oneMind.getEffect().bonus ? Math.pow(calculateAscensionAcceleration() / 10, +player.octeractUpgrades.octeractOneMindImprover.getEffect().bonus): 1\r\n  const extraMult = (G.isEvent && G.eventClicked) ? 1.05 : 1\r\n  const perSecond = 1 / (24 * 3600 * 365 * 1e15) * baseMultiplier * productContents(valueMultipliers) * ascensionSpeed * oneMindModifier * extraMult\r\n  return perSecond\r\n}\r\n\r\n// This is an old calculation used only for Stats for Nerds\r\nexport const calculateOcteractMultiplier = (score = -1) => {\r\n  const SCOREREQ = 1e23\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const arr = getOcteractValueMultipliers()\r\n\r\n  // add base score to the beginning and ascension speed mult to the end of the list\r\n  arr.unshift((score >= SCOREREQ) ? score / SCOREREQ : 0)\r\n  const ascensionSpeed = calculateAscensionAcceleration()\r\n\r\n  const ascensionSpeedMulti = (player.singularityUpgrades.oneMind.getEffect().bonus) ?\r\n    Math.pow(10, 1/2) * Math.pow(ascensionSpeed / 10, +player.octeractUpgrades.octeractOneMindImprover.getEffect().bonus) :\r\n    Math.pow(ascensionSpeed, 1/2)\r\n  arr.push(ascensionSpeedMulti)\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateTimeAcceleration = () => {\r\n  const preCorruptionArr = [\r\n    (1 + 1 / 300 * Math.log10(player.maxobtainium + 1) * player.upgrades[70]),  // Particle upgrade 2x5\r\n    (1 + player.researches[121] / 50),                                          // research 5x21\r\n    (1 + 0.015 * player.researches[136]),                                       // research 6x11\r\n    (1 + 0.012 * player.researches[151]),                                       // research 7x1\r\n    (1 + 0.009 * player.researches[166]),                                       // research 7x16\r\n    (1 + 0.006 * player.researches[181]),                                       // research 8x6\r\n    (1 + 0.003 * player.researches[196]),                                       // research 8x21\r\n    (1 + 8 * G.effectiveRuneBlessingPower[1]),                               // speed blessing\r\n    (1 + calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[1]), // speed SPIRIT\r\n    G.cubeBonusMultiplier[10],                                               // Chronos cube blessing\r\n    1 + player.cubeUpgrades[18] / 5,                                            // cube upgrade 2x8\r\n    calculateSigmoid(2, player.antUpgrades[12-1]! + G.bonusant12, 69),       // ant 12\r\n    (1 + 0.10 * (player.talismanRarity[2-1] - 1)),                              // Chronos Talisman bonus\r\n    G.challenge15Rewards.globalSpeed,                                        // Challenge 15 reward\r\n    1 + 0.01 * player.cubeUpgrades[52]                                          // cube upgrade 6x2 (Cx2)\r\n  ]\r\n\r\n  // Global Speed softcap + Corruption / Corruption-like effects\r\n  const corruptionArr: number[] = [\r\n    G.lazinessMultiplier[player.usedCorruptions[3]]                          // Corruption:  Spacial Dilation\r\n  ]\r\n\r\n  const corruptableTimeMult = productContents(preCorruptionArr) * corruptionArr[0] // DR applies after base corruption.\r\n\r\n  if (corruptableTimeMult > 100) {\r\n    const postSoftcap = 10 * Math.sqrt(corruptableTimeMult)\r\n    const softcapRatio = postSoftcap / corruptableTimeMult\r\n\r\n    corruptionArr.push(softcapRatio)\r\n  } else {\r\n    corruptionArr.push(1)\r\n  }\r\n\r\n  if (corruptableTimeMult < 1) {\r\n    const postPlat2x2 = Math.pow(corruptableTimeMult, 1 - player.platonicUpgrades[7] / 30)\r\n    const plat2x2Ratio = postPlat2x2 / corruptableTimeMult\r\n\r\n    corruptionArr.push(plat2x2Ratio)\r\n  } else {\r\n    corruptionArr.push(1)\r\n  }\r\n\r\n  corruptionArr.push(1.0 / calculateSingularityDebuff('Global Speed'))\r\n\r\n  // Uncorruptable effects\r\n  const postCorruptionArr = [\r\n    G.platonicBonusMultiplier[7],    // Chronos statue\r\n    1 + (player.singularityUpgrades.intermediatePack.getEffect().bonus ? 1 : 0),\r\n    1 + +player.octeractUpgrades.octeractImprovedGlobalSpeed.getEffect().bonus * player.singularityCount\r\n  ]\r\n\r\n  const timeMult = productContents(preCorruptionArr) * productContents(corruptionArr) * productContents(postCorruptionArr)\r\n\r\n\r\n  if (player.usedCorruptions[3] >= 6 && player.achievements[241] < 1) {\r\n    achievementaward(241)\r\n  }\r\n  if (timeMult > 3600 && player.achievements[242] < 1) {\r\n    achievementaward(242)\r\n  }\r\n\r\n  return {\r\n    preList: preCorruptionArr,\r\n    drList: corruptionArr,\r\n    postList: postCorruptionArr,\r\n    mult: timeMult\r\n  }\r\n}\r\n\r\nexport const calculateLimitedAscensionsDebuff = () => {\r\n  if (!player.singularityChallenges.limitedAscensions.enabled) {\r\n    return 1\r\n  } else {\r\n    let exponent = (player.ascensionCount - Math.max(0, 20 - player.singularityChallenges.limitedAscensions.completions))\r\n    exponent = Math.max(0, exponent)\r\n    return Math.pow(2, exponent)\r\n  }\r\n}\r\n\r\nexport const calculateAscensionSpeedMultiplier = () => {\r\n  const arr = [\r\n    1 + 1.2 / 100 * player.shopUpgrades.chronometer,                                                // Chronometer\r\n    1 + 0.6 / 100 * player.shopUpgrades.chronometer2,                                               // Chronometer 2\r\n    1 + 1.5 / 100 * player.shopUpgrades.chronometer3,                                               // Chronometer 3\r\n    1 + 0.6 / 1000 * hepteractEffective('chronos'),                                                 // Chronos Hepteract\r\n    1 + Math.min(0.10, 1 / 100 * Math.log10(player.ascensionCount + 1)) * player.achievements[262], // Achievement 262 Bonus\r\n    1 + Math.min(0.10, 1 / 100 * Math.log10(player.ascensionCount + 1)) * player.achievements[263], // Achievement 263 Bonus\r\n    1 + 0.002 * sumContents(player.usedCorruptions) * player.platonicUpgrades[15],                  // Platonic Omega\r\n    G.challenge15Rewards.ascensionSpeed,                                                         // Challenge 15 Reward\r\n    1 + 1 / 400 * player.cubeUpgrades[59],                                                          // Cookie Upgrade 9\r\n    1 + 0.5 * (player.singularityUpgrades.intermediatePack.getEffect().bonus ? 1 : 0),              // Intermediate Pack, Sing Shop\r\n    1 + 1 / 1000 * player.singularityCount * player.shopUpgrades.chronometerZ,                      // Chronometer Z\r\n    1 + +player.octeractUpgrades.octeractImprovedAscensionSpeed.getEffect().bonus * player.singularityCount, // Abstract Photokinetics, Oct Upg\r\n    1 + +player.octeractUpgrades.octeractImprovedAscensionSpeed2.getEffect().bonus * player.singularityCount, // Abstract Exokinetics, Oct Upg\r\n    1 + calculateEventBuff('Ascension Speed'),                                                      // Event\r\n    (player.singularityUpgrades.singAscensionSpeed2.level > 0 && player.runelevels[6] < 1) ? 6 : 1, // A mediocre ascension speedup!\r\n    Math.pow(1.01, player.shopUpgrades.chronometerInfinity),                                         // Chronometer INF\r\n    1 / calculateLimitedAscensionsDebuff(),                                                           // EXALT Debuff\r\n    Math.pow(1 + +player.singularityChallenges.limitedAscensions.rewards.ascensionSpeedMult, 1 + Math.max(0, Math.floor(Math.log10(player.ascensionCount)))) // EXALT Buff                                                                                                 // EXALT Buff\r\n  ]\r\n\r\n  // A hecking good ascension speedup!\r\n  const baseMultiplier = productContents(arr)\r\n  const exponent = (player.singularityUpgrades.singAscensionSpeed.level > 0\r\n    ? (baseMultiplier >= 1\r\n      ? 1.03\r\n      : 0.97)\r\n    : 1)\r\n  arr.push(Math.pow(baseMultiplier, exponent) / baseMultiplier)\r\n\r\n  // Singularity Penalty\r\n  arr.push(1 / calculateSingularityDebuff('Ascension Speed'))\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateAscensionAcceleration = () => {\r\n  return calculateAscensionSpeedMultiplier().mult\r\n}\r\n\r\nexport const calculateSingularityQuarkMilestoneMultiplier = () => {\r\n  let multiplier = 1\r\n  const singThresholds = [5, 20, 35, 50, 65, 80, 90, 100, 121, 144, 150, 160, 166, 169, 170, 175, 180, 190, 196, 200, 200, 201, 202, 203, 204, 205, 210, 212, 214, 216, 218, 220, 225, 250]\r\n  for (const sing of singThresholds) {\r\n    if (player.highestSingularityCount >= sing) {\r\n      multiplier *= 1.05\r\n    }\r\n  }\r\n\r\n  if (player.highestSingularityCount >= 200) {\r\n    multiplier *= Math.pow((player.highestSingularityCount - 179) / 20, 2)\r\n  }\r\n\r\n  return multiplier\r\n}\r\n\r\nexport const calculateQuarkMultiplier = () => {\r\n  let multiplier = 1\r\n  if (player.achievementPoints > 0) { // Achievement Points\r\n    multiplier += player.achievementPoints / 25000 // Cap of +0.20 at 5,000 Pts\r\n  }\r\n  if (player.achievements[250] > 0) { // Max research 8x25\r\n    multiplier += 0.10\r\n  }\r\n  if (player.achievements[251] > 0) { // Max Wow! Cube Upgrade 5x10\r\n    multiplier += 0.10\r\n  }\r\n  if (player.platonicUpgrades[5] > 0) { // Platonic ALPHA upgrade\r\n    multiplier += 0.20\r\n  }\r\n  if (player.platonicUpgrades[10] > 0) { // Platonic BETA Upgrade\r\n    multiplier += 0.25\r\n  }\r\n  if (player.platonicUpgrades[15] > 0) { // Platonic OMEGA upgrade\r\n    multiplier += 0.30\r\n  }\r\n  if (player.challenge15Exponent >= 1e11) { // Challenge 15: Exceed 1e11 exponent reward\r\n    multiplier += (G.challenge15Rewards.quarks - 1)\r\n  }\r\n  if (player.shopUpgrades.infiniteAscent) { // Purchased Infinite Ascent Rune\r\n    multiplier *= (1.1 + 0.15 / 75 * calculateEffectiveIALevel())\r\n  }\r\n  if (player.challenge15Exponent >= 1e15) { // Challenge 15: Exceed 1e15 exponent reward\r\n    multiplier *= (1 + 5/10000 * hepteractEffective('quark'))\r\n  }\r\n  if (player.overfluxPowder > 0) { // Overflux Powder [Max: 10% at 10,000]\r\n    multiplier *= calculateQuarkMultFromPowder()\r\n  }\r\n  if (player.achievements[266] > 0) { // Achievement 266 [Max: 10% at 1Qa Ascensions]\r\n    multiplier *= (1 + Math.min(0.1, (player.ascensionCount) / 1e16))\r\n  }\r\n  if (player.singularityCount > 0) { // Singularity Modifier\r\n    multiplier *= (1 + player.singularityCount / 10)\r\n  }\r\n  if (G.isEvent) {\r\n    multiplier *= 1 + calculateEventBuff('Quarks') + calculateEventBuff('One Mind')\r\n  }\r\n  if (player.cubeUpgrades[53] > 0) { // Cube Upgrade 6x3 (Cx3)\r\n    multiplier *= (1 + 0.10 * player.cubeUpgrades[53] / 100)\r\n  }\r\n  if (player.cubeUpgrades[68] > 0) { // Cube Upgrade 7x8\r\n    multiplier *= (1 + 1/10000 * player.cubeUpgrades[68] + 0.05 * (Math.floor(player.cubeUpgrades[68] / 1000)))\r\n  }\r\n\r\n  multiplier *= calculateSingularityQuarkMilestoneMultiplier()\r\n\r\n  multiplier *= +player.octeractUpgrades.octeractQuarkGain.getEffect().bonus // Oct Improver 1\r\n  multiplier *= (1 + 0.3 * + player.octeractUpgrades.octeractStarter.getEffect().bonus) // Oct Starter Pack\r\n\r\n  multiplier *= (1 + 1/10000 * Math.floor(player.octeractUpgrades.octeractQuarkGain.level / 111) *\r\n                                player.octeractUpgrades.octeractQuarkGain2.level *\r\n                                Math.floor(1 + Math.log10(Math.max(1, player.hepteractCrafts.quark.BAL)))) // Improver 2\r\n\r\n  multiplier *= (1 + 0.02 * player.singularityUpgrades.intermediatePack.level +               // 1.02\r\n                           0.04 * player.singularityUpgrades.advancedPack.level +               // 1.06\r\n                           0.06 * player.singularityUpgrades.expertPack.level +                 // 1.12\r\n                           0.08 * player.singularityUpgrades.masterPack.level +                 // 1.20\r\n                           0.10 * player.singularityUpgrades.divinePack.level)                  // 1.30\r\n\r\n  multiplier *= 1 + +player.singularityUpgrades.singQuarkImprover1.getEffect().bonus // Doohickey\r\n  multiplier *= calculateTotalOcteractQuarkBonus()\r\n\r\n  multiplier *= calculateAmbrosiaQuarkMult()\r\n  multiplier *= +player.blueberryUpgrades.ambrosiaTutorial.bonus.quarks\r\n  multiplier *= +player.blueberryUpgrades.ambrosiaQuarks1.bonus.quarks\r\n  multiplier *= +player.blueberryUpgrades.ambrosiaCubeQuark1.bonus.quarks\r\n  multiplier *= +player.blueberryUpgrades.ambrosiaLuckQuark1.bonus.quarks\r\n\r\n  if (player.highestSingularityCount === 0) {\r\n    multiplier *= 1.25\r\n  }\r\n\r\n  return multiplier\r\n}\r\n\r\n/**\r\n *\r\n * Calculate the number of Golden Quarks earned in current singularity\r\n */\r\nexport const calculateGoldenQuarkMultiplier = (computeMultiplier = false) => {\r\n  const base = 2 * player.singularityCount + 10\r\n\r\n  let bonus = (player.singularityCount < 10) ? (200 - 10 * player.singularityCount) : 0\r\n  if (player.singularityCount === 0) {\r\n    bonus += 200\r\n  }\r\n\r\n  let perkMultiplier = 1\r\n  if (player.highestSingularityCount >= 200) {\r\n    perkMultiplier = 3\r\n  }\r\n  if (player.highestSingularityCount >= 208) {\r\n    perkMultiplier = 5\r\n  }\r\n  if (player.highestSingularityCount >= 221) {\r\n    perkMultiplier = 8\r\n  }\r\n\r\n  const arr = [\r\n    1 + Math.max(0, Math.log10(player.challenge15Exponent + 1) - 20) / 2,                           // Challenge 15 Exponent\r\n    1 + player.worlds.BONUS / 100,                                                                  // Patreon Bonus\r\n    +player.singularityUpgrades.goldenQuarks1.getEffect().bonus,                                    // Golden Quarks I\r\n    1 + 0.12 * player.cubeUpgrades[69],                                                             // Cookie Upgrade 19\r\n    +player.singularityChallenges.noSingularityUpgrades.rewards.goldenQuarks,                       // No Singularity Upgrades\r\n    1 + calculateEventBuff('Golden Quarks'),                                                        // Event\r\n    1 + getFastForwardTotalMultiplier(),                                                            // Singularity Fast Forwards\r\n    player.highestSingularityCount >= 100 ? 1 + Math.min(1, player.highestSingularityCount / 250) : 1, // Golden Revolution II\r\n    perkMultiplier                                                                                  // Immaculate Alchemy\r\n  ]\r\n\r\n  // Total Quarks Coefficient\r\n  arr.push(computeMultiplier\r\n    ? 1 / 1e5\r\n    : ((base + player.quarksThisSingularity / 1e5) * productContents(arr) + bonus) / productContents(arr)\r\n  )\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateGoldenQuarkGain = (computeMultiplier = false):number => {\r\n  return calculateGoldenQuarkMultiplier(computeMultiplier).mult\r\n}\r\n\r\nexport const calculateCorruptionPoints = () => {\r\n  let basePoints = 400\r\n  const bonusLevel = player.singularityUpgrades.corruptionFifteen.getEffect().bonus ? 1 : 0\r\n\r\n  for (let i = 1; i <= 9; i++) {\r\n    basePoints += 16 * Math.pow(player.usedCorruptions[i] + bonusLevel, 2)\r\n  }\r\n\r\n  return (basePoints)\r\n}\r\n\r\n//If you want to sum from a baseline level i to the maximum buyable level n, what would the cost be and how many levels would you get?\r\nexport const calculateSummationLinear = (\r\n  baseLevel: number,\r\n  baseCost: number,\r\n  resourceAvailable: number,\r\n  differenceCap = 1e9\r\n): [number, number] => {\r\n  const subtractCost = baseCost * baseLevel * (1 + baseLevel) / 2\r\n  const buyToLevel = Math.min(baseLevel + differenceCap, Math.floor(-1 / 2 + Math.sqrt(1 / 4 + 2 * (resourceAvailable + subtractCost) / baseCost)))\r\n  const realCost = (baseCost * buyToLevel * (1 + buyToLevel) / 2) - subtractCost\r\n\r\n  return [\r\n    buyToLevel,\r\n    realCost\r\n  ]\r\n}\r\n\r\n//If you want to sum from a baseline level baseLevel to some level where the cost per level is base * (1 + level * diffPerLevel), this finds out how many total levels you can buy.\r\nexport const calculateSummationNonLinear = (\r\n  baseLevel: number,\r\n  baseCost: number,\r\n  resourceAvailable: number,\r\n  diffPerLevel: number,\r\n  buyAmount: number\r\n): {levelCanBuy: number, cost: number} => {\r\n  const c = diffPerLevel / 2\r\n  resourceAvailable = resourceAvailable || 0\r\n  const alreadySpent = baseCost * (c * Math.pow(baseLevel, 2) + baseLevel * (1 - c))\r\n  resourceAvailable += alreadySpent\r\n  const v = resourceAvailable / baseCost\r\n  let buyToLevel = c > 0\r\n    ? Math.max(0, Math.floor((c - 1) / (2 * c) + Math.pow(Math.pow(1 - c, 2) + 4 * c * v, 1 / 2) / (2 * c)))\r\n    : Math.floor(v)\r\n\r\n  buyToLevel = Math.min(buyToLevel, buyAmount + baseLevel)\r\n  buyToLevel = Math.max(buyToLevel, baseLevel)\r\n  let totalCost = baseCost * (c * Math.pow(buyToLevel, 2) + buyToLevel * (1 - c)) - alreadySpent\r\n  if (buyToLevel == baseLevel) {\r\n    totalCost = baseCost * (1 + 2 * c * baseLevel)\r\n  }\r\n  return {\r\n    levelCanBuy: buyToLevel,\r\n    cost: totalCost\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param n A nonnegative integer\r\n * @returns The sum of the first n positive cubes, 0 if n = 0, or -1 otherwise.\r\n */\r\nexport const calculateSummationCubic = (n: number) => {\r\n\r\n  if (n < 0) {\r\n    return -1\r\n  }\r\n  if (!Number.isInteger(n)) {\r\n    return -1\r\n  }\r\n\r\n  return Math.pow(n * (n+1) / 2, 2)\r\n}\r\n\r\n/**\r\n * Solves a*n^2 + b*n + c = 0 for real solutions.\r\n * @param a Coefficient of n^2. Must be nonzero!\r\n * @param b Coefficient of n.\r\n * @param c Coefficient of constant term\r\n * @param positive Boolean which if true makes solution use positive discriminant.\r\n * @returns Positive root of the quadratic, if it exists, and positive is true, otherwise false\r\n */\r\nexport const solveQuadratic = (a: number, b: number, c:number, positive:boolean) => {\r\n  if (a < 0) {\r\n    throw new Error(String(i18next.t('calculate.quadraticImproperError')))\r\n  }\r\n  const determinant = Math.pow(b, 2) - 4 * a * c\r\n  if (determinant < 0) {\r\n    throw new Error(String(i18next.t('calculate.quadraticDeterminantError')))\r\n  }\r\n\r\n  if (determinant === 0) {\r\n    return -b / (2 * a)\r\n  }\r\n  const numeratorPos = -b + Math.sqrt(Math.pow(b, 2) - 4 * a * c)\r\n  const numeratorNeg = -b - Math.sqrt(Math.pow(b, 2) - 4 * a * c)\r\n\r\n  if (positive) {\r\n    return numeratorPos / (2 * a)\r\n  } else {\r\n    return numeratorNeg / (2 * a)\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param initialLevel\r\n * @param base\r\n * @param amountToSpend\r\n */\r\nexport const calculateCubicSumData = (initialLevel: number, baseCost: number,\r\n  amountToSpend: number, maxLevel: number) => {\r\n  if (initialLevel >= maxLevel) {\r\n    return {\r\n      levelCanBuy: maxLevel,\r\n      cost: 0\r\n    }\r\n  }\r\n  const alreadySpent = baseCost * calculateSummationCubic(initialLevel)\r\n  const totalToSpend = alreadySpent + amountToSpend\r\n\r\n  // Solves (n(n+1)/2)^2 * baseCost = totalToSpend\r\n  /* Create a det = Sqrt(totalToSpend / baseCost)\r\n    *  Simplification gives n * (n+1) = 2 * det\r\n    *  We can rewrite as n^2 + n - 2 * det = 0 and solve for n.\r\n    */\r\n  if (totalToSpend < 0) {\r\n    throw new Error(String(i18next.t('calculate.cubicSumNegativeError')))\r\n  }\r\n\r\n  const determinantRoot = Math.pow(totalToSpend / baseCost, 0.5) // Assume nonnegative!\r\n  const solution = solveQuadratic(1, 1, -2 * determinantRoot, true)\r\n\r\n  const levelToBuy = Math.max(Math.min(maxLevel, Math.floor(solution)), initialLevel)\r\n  const realCost = (levelToBuy === initialLevel)? baseCost * Math.pow(initialLevel + 1, 3) :\r\n    baseCost * calculateSummationCubic(levelToBuy) - alreadySpent\r\n\r\n  return {\r\n    levelCanBuy: levelToBuy,\r\n    cost: realCost\r\n  }\r\n}\r\n\r\n// IDEA: Rework this shit to be friendly for Stats for Nerds\r\n/* May 25, 2021 - Platonic\r\n    Reorganize this function to make sense, because right now it aint\r\n    What I did was use the separation of cube gain method on other cube types, and made some methods their\r\n    own function (specifically: calc of effective score and other global multipliers) to make it easy.\r\n*/\r\n\r\nexport const computeAscensionScoreBonusMultiplier = () => {\r\n  let multiplier = 1\r\n  multiplier *= G.challenge15Rewards.score\r\n  multiplier *= G.platonicBonusMultiplier[6]\r\n\r\n  if (player.cubeUpgrades[21] > 0) {\r\n    multiplier *= (1 + 0.05 * player.cubeUpgrades[21])\r\n  }\r\n  if (player.cubeUpgrades[31] > 0) {\r\n    multiplier *= (1 + 0.05 * player.cubeUpgrades[31])\r\n  }\r\n  if (player.cubeUpgrades[41] > 0) {\r\n    multiplier *= (1 + 0.05 * player.cubeUpgrades[41])\r\n  }\r\n  if (player.achievements[267] > 0) {\r\n    multiplier *= (1 + Math.min(1, 1/100000 * Decimal.log(player.ascendShards.add(1), 10)))\r\n  }\r\n  if (player.achievements[259] > 0) {\r\n    multiplier *= Math.max(1, Math.pow(1.01, Math.log2(player.hepteractCrafts.abyss.CAP)))\r\n  }\r\n  if (G.isEvent) {\r\n    multiplier *= 1 + calculateEventBuff('Ascension Score')\r\n  }\r\n\r\n  return multiplier\r\n}\r\n\r\nexport const calculateAscensionScore = () => {\r\n  let baseScore = 0\r\n  let corruptionMultiplier = 1\r\n  let effectiveScore = 0\r\n\r\n  let bonusLevel = player.singularityUpgrades.corruptionFifteen.getEffect().bonus ? 1 : 0\r\n  bonusLevel += +player.singularityChallenges.oneChallengeCap.rewards.freeCorruptionLevel\r\n  // Init Arrays with challenge values :)\r\n  const challengeScoreArrays1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300]\r\n  const challengeScoreArrays2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450]\r\n  const challengeScoreArrays3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750]\r\n  const challengeScoreArrays4 = [0, 10000, 10000, 10000, 10000, 10000, 2000, 3000, 4000, 5000, 7500]\r\n\r\n  challengeScoreArrays1[1] += player.cubeUpgrades[56]\r\n  challengeScoreArrays1[2] += player.cubeUpgrades[56]\r\n  challengeScoreArrays1[3] += player.cubeUpgrades[56]\r\n\r\n  // Iterate challenges 1 through 10 and award base score according to the array values\r\n  // Transcend Challenge: First Threshold at 75 completions, second at 750\r\n  // Reincarnation Challenge: First at 25, second at 60. It probably should be higher but Platonic is a dumb dumb\r\n  for (let i = 1; i <= 10; i++) {\r\n    baseScore += challengeScoreArrays1[i] * player.highestchallengecompletions[i]\r\n    if (i <= 5 && player.highestchallengecompletions[i] >= 75) {\r\n      baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 75)\r\n      if (player.highestchallengecompletions[i] >= 750) {\r\n        baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 750)\r\n      }\r\n      if (player.highestchallengecompletions[i] >= 9000) {\r\n        baseScore += challengeScoreArrays4[i] * (player.highestchallengecompletions[i] - 9000)\r\n      }\r\n    }\r\n    if (i <= 10 && i > 5 && player.highestchallengecompletions[i] >= 25) {\r\n      baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 25)\r\n      if (player.highestchallengecompletions[i] >= 60) {\r\n        baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 60)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Calculation of Challenge 10 Exponent (It gives a constant multiplier per completion)\r\n  // 1.03 +\r\n  // 0.005 from Cube 3x9 +\r\n  // 0.0025 from Platonic ALPHA (Plat 1x5)\r\n  // 0.005 from Platonic BETA (Plat 2x5)\r\n  // Max: 1.0425\r\n  baseScore *= Math.pow(1.03 + 0.005 * player.cubeUpgrades[39] + 0.0025 * (player.platonicUpgrades[5] + player.platonicUpgrades[10]), player.highestchallengecompletions[10])\r\n  // Corruption Multiplier is the product of all Corruption Score multipliers based on used corruptions\r\n  let bonusVal = player.singularityUpgrades.advancedPack.getEffect().bonus ? 0.33: 0\r\n  bonusVal += +player.singularityChallenges.oneChallengeCap.rewards.corrScoreIncrease\r\n  for (let i = 2; i < 10; i++) {\r\n    const exponent = ((i === 2) && player.usedCorruptions[i] >= 10) ? 1 + 2 * Math.min(1, player.platonicUpgrades[17]) + 0.04 * player.platonicUpgrades[17] : 1\r\n    corruptionMultiplier *= (Math.pow(G.corruptionPointMultipliers[player.usedCorruptions[i] + bonusLevel], exponent) + bonusVal)\r\n\r\n    if (player.usedCorruptions[i] >= 14 && player.singularityUpgrades.masterPack.getEffect().bonus) {\r\n      corruptionMultiplier *= 1.1\r\n    }\r\n  }\r\n\r\n  const bonusMultiplier = computeAscensionScoreBonusMultiplier()\r\n\r\n  effectiveScore = baseScore * corruptionMultiplier * bonusMultiplier\r\n  if (effectiveScore > 1e23) {\r\n    effectiveScore = Math.pow(effectiveScore, 0.5) * Math.pow(1e23, 0.5)\r\n  }\r\n\r\n  player.singularityUpgrades.expertPack.getEffect().bonus ? effectiveScore *= 1.5 : effectiveScore *= 1\r\n\r\n  return {\r\n    baseScore,\r\n    corruptionMultiplier,\r\n    bonusMultiplier,\r\n    effectiveScore\r\n  }\r\n}\r\n\r\nexport const CalcCorruptionStuff = () => {\r\n  let cubeBank = 0\r\n  let challengeModifier = 1\r\n  const scores = calculateAscensionScore()\r\n\r\n  const baseScore = scores.baseScore\r\n  const corruptionMultiplier = scores.corruptionMultiplier\r\n  const bonusMultiplier = scores.bonusMultiplier\r\n  const effectiveScore = scores.effectiveScore\r\n\r\n  for (let i = 1; i <= 10; i++) {\r\n    challengeModifier = (i >= 6) ? 2 : 1\r\n    cubeBank += challengeModifier * player.highestchallengecompletions[i]\r\n  }\r\n\r\n  const oneMindModifier = (player.singularityUpgrades.oneMind.getEffect().bonus) ? calculateAscensionAcceleration() / 10 : 1\r\n\r\n  // Calculation of Cubes :)\r\n  let cubeGain = cubeBank\r\n  cubeGain *= calculateCubeMultiplier(effectiveScore).mult\r\n  cubeGain *= oneMindModifier\r\n\r\n  const bonusCubeExponent = (player.singularityUpgrades.platonicTau.getEffect().bonus) ? 1.01 : 1\r\n  cubeGain = Math.pow(cubeGain, bonusCubeExponent)\r\n\r\n  // Calculation of Tesseracts :))\r\n  let tesseractGain = 1\r\n  if (effectiveScore >= 100000) {\r\n    tesseractGain += 0.5\r\n  }\r\n  tesseractGain *= calculateTesseractMultiplier(effectiveScore).mult\r\n  tesseractGain *= oneMindModifier\r\n\r\n  // Calculation of Hypercubes :)))\r\n  let hypercubeGain = (effectiveScore >= 1e9) ? 1 : 0\r\n  hypercubeGain *= calculateHypercubeMultiplier(effectiveScore).mult\r\n  hypercubeGain *= oneMindModifier\r\n\r\n  // Calculation of Platonic Cubes :))))\r\n  let platonicGain = (effectiveScore >= 2.666e12) ? 1 : 0\r\n  platonicGain *= calculatePlatonicMultiplier(effectiveScore).mult\r\n  platonicGain *= oneMindModifier\r\n\r\n  // Calculation of Hepteracts :)))))\r\n  let hepteractGain = (G.challenge15Rewards.hepteractUnlocked && effectiveScore >= 1.666e17 && player.achievements[255] > 0) ? 1 : 0\r\n  hepteractGain *= calculateHepteractMultiplier(effectiveScore).mult\r\n  hepteractGain *= oneMindModifier\r\n\r\n  return [\r\n    cubeBank,\r\n    Math.floor(baseScore),\r\n    corruptionMultiplier,\r\n    Math.floor(effectiveScore),\r\n    Math.floor(cubeGain),\r\n    Math.max(player.singularityCount, Math.floor(tesseractGain)),\r\n    Math.floor(hypercubeGain),\r\n    Math.floor(platonicGain),\r\n    Math.floor(hepteractGain),\r\n    bonusMultiplier\r\n  ]\r\n}\r\n\r\nexport const calcAscensionCount = () => {\r\n  let ascCount = 1\r\n\r\n  if (player.singularityChallenges.limitedAscensions.enabled) {\r\n    return ascCount\r\n  }\r\n\r\n  if (player.challengecompletions[10] > 0 && player.achievements[197] === 1) {\r\n    const { effectiveScore } = calculateAscensionScore()\r\n\r\n    if (player.ascensionCounter >= 10) {\r\n      if (player.achievements[188] > 0) {\r\n        ascCount += 99\r\n      }\r\n\r\n      ascCount *= 1 + (player.ascensionCounter / 10 - 1) * 0.2\r\n                 * (player.achievements[189] + player.achievements[202] + player.achievements[209] + player.achievements[216] + player.achievements[223])\r\n    }\r\n\r\n    ascCount *= player.achievements[187] && Math.floor(effectiveScore) > 1e8 ? (Math.log10(Math.floor(effectiveScore) + 1) - 1) : 1\r\n    ascCount *= G.challenge15Rewards.ascensions\r\n    ascCount *= (player.achievements[260] > 0 ? 1.1 : 1)\r\n    ascCount *= (player.achievements[261] > 0 ? 1.1 : 1)\r\n    ascCount *= (player.platonicUpgrades[15] > 0 ? 2 : 1)\r\n    ascCount *= (1 + 0.02 * player.platonicUpgrades[16])\r\n    ascCount *= (1 + 0.02 * player.platonicUpgrades[16] * Math.min(1, player.overfluxPowder / 100000))\r\n    ascCount *= (1 + player.singularityCount / 10)\r\n    ascCount *= +player.singularityUpgrades.ascensions.getEffect().bonus\r\n    ascCount *= +player.octeractUpgrades.octeractAscensions.getEffect().bonus\r\n    ascCount *= +player.octeractUpgrades.octeractAscensions2.getEffect().bonus\r\n    ascCount *= (player.singularityUpgrades.oneMind.getEffect().bonus) ? calculateAscensionAcceleration() / 10 : 1\r\n  }\r\n\r\n  return Math.floor(ascCount)\r\n}\r\n\r\n/**\r\n * Calculates the product of all Powder bonuses.\r\n * @returns The amount of Powder gained per Expired Orb on day reset\r\n */\r\nexport const calculatePowderConversion = () => {\r\n  const arr = [\r\n    1/100, // base\r\n    G.challenge15Rewards.powder, // Challenge 15: Powder Bonus\r\n    (1 + player.shopUpgrades.powderEX / 50), // powderEX shop upgrade, 2% per level max 20%\r\n    (1 + player.achievements[256] / 20), // Achievement 256, 5%\r\n    (1 + player.achievements[257] / 20), // Achievement 257, 5%\r\n    1 + 0.01 * player.platonicUpgrades[16], // Platonic Upgrade 4x1\r\n    1 + calculateEventBuff('Powder Conversion') // Event\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateCubeQuarkMultiplier = () => {\r\n  return (calculateSigmoid(2, Math.pow(player.overfluxOrbs, 0.5), 40) +\r\n           calculateSigmoid(1.5, Math.pow(player.overfluxOrbs, 0.5), 160) +\r\n           calculateSigmoid(1.5, Math.pow(player.overfluxOrbs, 0.5), 640) +\r\n           calculateSigmoid(1.15, +(player.highestSingularityCount >= 1) * Math.pow(player.overfluxOrbs, 0.45), 2560) +\r\n           calculateSigmoid(1.15, +(player.highestSingularityCount >= 2) * Math.pow(player.overfluxOrbs, 0.4), 10000) +\r\n           calculateSigmoid(1.25, +(player.highestSingularityCount >= 5) * Math.pow(player.overfluxOrbs, 0.35), 40000) +\r\n           calculateSigmoid(1.25, +(player.highestSingularityCount >= 10) * Math.pow(player.overfluxOrbs, 0.32), 160000) +\r\n           calculateSigmoid(1.35, +(player.highestSingularityCount >= 15) * Math.pow(player.overfluxOrbs, 0.27), 640000) +\r\n           calculateSigmoid(1.45, +(player.highestSingularityCount >= 20) * Math.pow(player.overfluxOrbs, 0.24), 2e6) +\r\n           calculateSigmoid(1.55, +(player.highestSingularityCount >= 25) * Math.pow(player.overfluxOrbs, 0.21), 1e7) +\r\n           calculateSigmoid(1.85, +(player.highestSingularityCount >= 30) * Math.pow(player.overfluxOrbs, 0.18), 4e7) +\r\n           calculateSigmoid(3, +(player.highestSingularityCount >= 35) * Math.pow(player.overfluxOrbs, 0.15), 1e8) -\r\n           11) * (1 + 1/500 * player.shopUpgrades.cubeToQuarkAll) *\r\n           (player.autoWarpCheck ? 1 + player.dailyPowderResetUses : 1)\r\n}\r\n\r\nexport const calculateCubeMultFromPowder = () => {\r\n  return (player.overfluxPowder > 10000) ? (1 + 1/16 * Math.pow(Math.log10(player.overfluxPowder), 2)) : (1 + 1/10000 * player.overfluxPowder)\r\n}\r\n\r\nexport const calculateQuarkMultFromPowder = () => {\r\n  return (player.overfluxPowder > 10000) ? (1 + 1/40 * Math.log10(player.overfluxPowder)) : (1 + 1/100000 * player.overfluxPowder)\r\n}\r\n\r\nexport const calculateSingularityAmbrosiaLuckMilestoneBonus = () => {\r\n  let bonus = 0\r\n  const singThresholds1 = [35, 42, 49, 56, 63, 70, 77]\r\n  const singThresholds2 = [135, 142, 149, 156, 163, 170, 177]\r\n\r\n  for (const sing of singThresholds1) {\r\n    if (player.highestSingularityCount >= sing) {\r\n      bonus += 5\r\n    }\r\n  }\r\n\r\n  for (const sing of singThresholds2) {\r\n    if (player.highestSingularityCount >= sing) {\r\n      bonus += 6\r\n    }\r\n  }\r\n\r\n  return bonus\r\n}\r\n\r\nexport const calculateAmbrosiaGenerationShopUpgrade = () => {\r\n  const multipliers = [\r\n    1 + player.shopUpgrades.shopAmbrosiaGeneration1 / 100,\r\n    1 + player.shopUpgrades.shopAmbrosiaGeneration2 / 100,\r\n    1 + player.shopUpgrades.shopAmbrosiaGeneration3 / 100,\r\n    1 + player.shopUpgrades.shopAmbrosiaGeneration4 / 1000\r\n  ]\r\n\r\n  return productContents(multipliers)\r\n}\r\n\r\nexport const calculateAmbrosiaLuckShopUpgrade = () => {\r\n  const vals = [\r\n    player.shopUpgrades.shopAmbrosiaLuck1,\r\n    player.shopUpgrades.shopAmbrosiaLuck2,\r\n    player.shopUpgrades.shopAmbrosiaLuck3,\r\n    0.3 * player.shopUpgrades.shopAmbrosiaLuck4\r\n  ]\r\n\r\n  return sumContents(vals)\r\n}\r\n\r\nexport const calculateRequiredBlueberryTime = () => {\r\n  let val = G.TIME_PER_AMBROSIA // Currently 600\r\n  val += Math.floor(player.ambrosia / 10)\r\n  val += Math.floor(player.lifetimeAmbrosia / 50)\r\n\r\n  const baseVal = val\r\n\r\n  const timeThresholds = [5000, 25000, 125000, 625000, 2e6, 1e7, 2.5e7]\r\n  for (const threshold of timeThresholds) {\r\n    if (baseVal >= threshold)\r\n      val *= 2\r\n  }\r\n  return val\r\n}\r\n\r\nexport const calculateSingularityMilestoneBlueberries = () => {\r\n  let val = 0\r\n  if (player.highestSingularityCount >= 254) val = 4\r\n  else if (player.highestSingularityCount >= 198) val = 3\r\n  else if (player.highestSingularityCount >= 132) val = 2\r\n  else if (player.highestSingularityCount >= 66) val = 1\r\n\r\n  return val\r\n}\r\n\r\nexport const calculateAmbrosiaCubeMult = () => {\r\n  let multiplier = 1\r\n  multiplier += Math.min(2, Math.floor(player.ambrosia / 50) / 100)\r\n  if (player.ambrosia >= 10000)\r\n    multiplier += Math.min(2, Math.floor(player.ambrosia / 500) / 100)\r\n  if (player.ambrosia >= 100000)\r\n    multiplier += Math.floor(player.ambrosia / 5000) / 100\r\n\r\n  return multiplier\r\n}\r\n\r\nexport const calculateAmbrosiaQuarkMult = () => {\r\n  let multiplier = 1\r\n  multiplier += Math.min(0.4, Math.floor(player.ambrosia / 1250) / 100)\r\n  if (player.ambrosia >= 50000)\r\n    multiplier += Math.min(0.4, Math.floor(player.ambrosia / 12500) / 100)\r\n  if (player.ambrosia >= 500000)\r\n    multiplier += Math.floor(player.ambrosia / 125000) / 100\r\n\r\n  return multiplier\r\n}\r\n\r\nexport const dailyResetCheck = () => {\r\n  if (!player.dayCheck) {\r\n    return\r\n  }\r\n  const now = new Date(getTimePinnedToLoadDate())\r\n  const day = new Date(now.getFullYear(), now.getMonth(), now.getDate())\r\n  const h = now.getHours()\r\n  const m = now.getMinutes()\r\n  const s = now.getSeconds()\r\n  player.dayTimer = (60 * 60 * 24) - (60 * 60 * h) - (60 * m) - s\r\n\r\n  // Daily is not reset even if it is set to a past time.\r\n  // If the daily is not reset, the data may have been set to a future time.\r\n  if (day.getTime() - 3600000 > player.dayCheck.getTime()) {\r\n    player.dayCheck = day\r\n\r\n    forcedDailyReset(true)\r\n    player.dailyPowderResetUses = 1 + player.shopUpgrades.extraWarp\r\n    player.dailyCodeUsed = false\r\n\r\n    DOMCacheGetOrSet('cubeQuarksOpenRequirement').style.display = 'block'\r\n    if (player.challengecompletions[11] > 0) {\r\n      DOMCacheGetOrSet('tesseractQuarksOpenRequirement').style.display = 'block'\r\n    }\r\n    if (player.challengecompletions[13] > 0) {\r\n      DOMCacheGetOrSet('hypercubeQuarksOpenRequirement').style.display = 'block'\r\n    }\r\n    if (player.challengecompletions[14] > 0) {\r\n      DOMCacheGetOrSet('platonicCubeQuarksOpenRequirement').style.display = 'block'\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Resets Cube Counts and stuff. NOTE: It is intentional it does not award powder or expire orbs.\r\n */\r\nexport const forcedDailyReset = (rewards = false) => {\r\n  player.cubeQuarkDaily = 0\r\n  player.tesseractQuarkDaily = 0\r\n  player.hypercubeQuarkDaily = 0\r\n  player.platonicCubeQuarkDaily = 0\r\n  player.cubeOpenedDaily = 0\r\n  player.tesseractOpenedDaily = 0\r\n  player.hypercubeOpenedDaily = 0\r\n  player.platonicCubeOpenedDaily = 0\r\n\r\n  if (rewards) {\r\n    player.overfluxPowder += player.overfluxOrbs * calculatePowderConversion().mult\r\n    player.overfluxOrbs = G.challenge15Rewards.freeOrbs\r\n  }\r\n}\r\n\r\nexport const calculateEventBuff = (buff: string) => {\r\n  if (!G.isEvent) {\r\n    return 0\r\n  }\r\n  return calculateEventSourceBuff(buff)\r\n}\r\n\r\nexport const derpsmithCornucopiaBonus = () => {\r\n  let counter = 0\r\n  const singCounts = [18, 38, 58, 78, 88, 98, 118, 148, 178, 188, 198, 208, 218, 228, 238, 248]\r\n  for (const sing of singCounts) {\r\n    if (player.highestSingularityCount >= sing) {\r\n      counter += 1\r\n    }\r\n  }\r\n\r\n  return 1 + counter * player.highestSingularityCount / 100\r\n}\r\n", "import { player, format, formatTimeShort /*formatTimeShort*/ } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport Decimal from 'break_infinity.js'\r\nimport { CalcCorruptionStuff, calculateAscensionAcceleration, calculateTimeAcceleration } from './Calculate'\r\nimport { achievementaward, totalachievementpoints } from './Achievements'\r\nimport { displayRuneInformation } from './Runes'\r\nimport { autoResearchEnabled } from './Research'\r\nimport { visualUpdateBuildings, visualUpdateUpgrades, visualUpdateAchievements, visualUpdateRunes, visualUpdateChallenges, visualUpdateResearch, visualUpdateSettings, visualUpdateShop, visualUpdateSingularity, visualUpdateAnts, visualUpdateCubes, visualUpdateCorruptions, visualUpdateEvent } from './UpdateVisuals'\r\nimport { getMaxChallenges } from './Challenges'\r\nimport type { OneToFive, ZeroToFour, ZeroToSeven } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { updateSingularityPenalties, updateSingularityPerks } from './singularity'\r\nimport { revealCorruptions } from './Corruptions'\r\nimport i18next from 'i18next'\r\nimport type { TabNames } from './Tabs'\r\n\r\nexport const revealStuff = () => {\r\n  const example = document.getElementsByClassName('coinunlock1') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example.length; i++) {\r\n    example[i].style.display = player.unlocks.coinone ? 'block' : 'none'\r\n  }\r\n\r\n  const example2 = document.getElementsByClassName('coinunlock2') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example2.length; i++) {\r\n    example2[i].style.display = player.unlocks.cointwo ? 'block' : 'none'\r\n  }\r\n\r\n  const example3 = document.getElementsByClassName('coinunlock3') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example3.length; i++) {\r\n    example3[i].style.display = player.unlocks.cointhree ? 'block' : 'none'\r\n  }\r\n\r\n  const example4 = document.getElementsByClassName('coinunlock4') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example4.length; i++) {\r\n    example4[i].style.display = player.unlocks.coinfour ? 'block' : 'none'\r\n  }\r\n\r\n  const example5 = document.getElementsByClassName('prestigeunlock') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example5.length; i++) {\r\n    const parent = example5[i].parentElement!\r\n    if (parent.classList.contains('offlineStats')) {\r\n      example5[i].style.display = player.unlocks.prestige ? 'flex' : 'none'\r\n    } else {\r\n      example5[i].style.display = player.unlocks.prestige ? 'block' : 'none'\r\n    }\r\n  }\r\n\r\n  const example6 = document.getElementsByClassName('generationunlock') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example6.length; i++) {\r\n    example6[i].style.display = player.unlocks.generation ? 'block' : 'none'\r\n  }\r\n\r\n  const example7 = document.getElementsByClassName('transcendunlock') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example7.length; i++) {\r\n    const parent = example7[i].parentElement!\r\n    if (parent.classList.contains('offlineStats')) {\r\n      example7[i].style.display = player.unlocks.transcend ? 'flex' : 'none'\r\n    } else {\r\n      example7[i].style.display = player.unlocks.transcend ? 'block' : 'none'\r\n    }\r\n  }\r\n\r\n  const example8 = document.getElementsByClassName('reincarnationunlock') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example8.length; i++) {\r\n    const parent = example8[i].parentElement!\r\n    if (parent.classList.contains('offlineStats')) {\r\n      example8[i].style.display = player.unlocks.reincarnate ? 'flex' : 'none'\r\n    } else {\r\n      example8[i].style.display = player.unlocks.reincarnate ? 'block' : 'none'\r\n    }\r\n  }\r\n\r\n  const example9 = document.getElementsByClassName('auto') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example9.length; i++) {\r\n    example9[i].style.display = 'none'\r\n  }\r\n\r\n  const example10 = document.getElementsByClassName('reinrow1') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example10.length; i++) {\r\n    player.researches[47] === 1 ? example10[i].style.display = 'block' : example10[i].style.display = 'none'\r\n  }\r\n\r\n  const example11 = document.getElementsByClassName('reinrow2') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example11.length; i++) {\r\n    player.researches[48] === 1 ? example11[i].style.display = 'block' : example11[i].style.display = 'none'\r\n  }\r\n\r\n  const example12 = document.getElementsByClassName('reinrow3') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example12.length; i++) {\r\n    player.researches[49] === 1 ? example12[i].style.display = 'block' : example12[i].style.display = 'none'\r\n  }\r\n\r\n  const example13 = document.getElementsByClassName('reinrow4') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example13.length; i++) {\r\n    player.researches[50] === 1 ? example13[i].style.display = 'block' : example13[i].style.display = 'none'\r\n  }\r\n\r\n  const example14 = document.getElementsByClassName('chal6') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example14.length; i++) {\r\n    player.achievements[113] === 1 ? example14[i].style.display = 'block' : example14[i].style.display = 'none'\r\n  }\r\n\r\n  const example15 = document.getElementsByClassName('chal7') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example15.length; i++) {\r\n    player.achievements[120] === 1 ? example15[i].style.display = 'block' : example15[i].style.display = 'none'\r\n  }\r\n\r\n  const example16 = document.getElementsByClassName('chal7x10') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example16.length; i++) {\r\n    player.achievements[124] === 1 ? example16[i].style.display = 'block' : example16[i].style.display = 'none'\r\n  }\r\n\r\n  const example17 = document.getElementsByClassName('chal8') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example17.length; i++) {\r\n    const parent = example17[i].parentElement!\r\n    if (parent.classList.contains('offlineStats')) {\r\n      example17[i].style.display = player.achievements[127] === 1 ? 'flex' : 'none'\r\n    } else {\r\n      example17[i].style.display = player.achievements[127] === 1 ? 'block' : 'none'\r\n    }\r\n  }\r\n\r\n  const example18 = document.getElementsByClassName('chal9') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example18.length; i++) {\r\n    player.achievements[134] === 1 ? example18[i].style.display = 'block' : example18[i].style.display = 'none'\r\n  }\r\n\r\n  const example19 = document.getElementsByClassName('chal9x1') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example19.length; i++) {\r\n    player.highestchallengecompletions[9] > 0 ? example19[i].style.display = 'block' : example19[i].style.display = 'none'\r\n  }\r\n\r\n  const example20 = document.getElementsByClassName('chal10') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example20.length; i++) {\r\n    player.achievements[141] === 1 ? example20[i].style.display = 'block' : example20[i].style.display = 'none'\r\n  }\r\n\r\n  const example21 = document.getElementsByClassName('ascendunlock') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example21.length; i++) {\r\n    const parent = example21[i].parentElement!\r\n    if (parent.classList.contains('offlineStats')) {\r\n      example21[i].style.display = player.ascensionCount > 0 ? 'flex' : 'none'\r\n    } else {\r\n      example21[i].style.display = player.ascensionCount > 0 ? 'block' : 'none'\r\n    }\r\n  }\r\n\r\n  const example22 = document.getElementsByClassName('chal11') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example22.length; i++) {\r\n    player.challengecompletions[11] > 0 ? example22[i].style.display = 'block' : example22[i].style.display = 'none'\r\n  }\r\n\r\n  const example23 = document.getElementsByClassName('chal12') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example23.length; i++) {\r\n    player.challengecompletions[12] > 0 ? example23[i].style.display = 'block' : example23[i].style.display = 'none'\r\n  }\r\n\r\n  const example24 = document.getElementsByClassName('chal13') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example24.length; i++) {\r\n    player.challengecompletions[13] > 0 ? example24[i].style.display = 'block' : example24[i].style.display = 'none'\r\n  }\r\n\r\n  const example25 = document.getElementsByClassName('chal14') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example25.length; i++) {\r\n    player.challengecompletions[14] > 0 ? example25[i].style.display = 'block' : example25[i].style.display = 'none'\r\n  }\r\n\r\n  const example26 = document.getElementsByClassName('ascendunlockib') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example26.length; i++) {\r\n    example26[i].style.display = player.ascensionCount > 0 ? 'inline-block' : 'none'\r\n  }\r\n\r\n  const example27 = document.getElementsByClassName('prestigeunlockib') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example27.length; i++) {\r\n    example27[i].style.display = player.unlocks.prestige ? 'inline-block' : 'none'\r\n  }\r\n\r\n  const example28 = document.getElementsByClassName('research150') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example28.length; i++) {\r\n    example28[i].style.display = player.researches[150] > 0 ? 'block' : 'none'\r\n  }\r\n\r\n  const example29 = document.getElementsByClassName('cubeUpgrade10') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example29.length; i++) {\r\n    example29[i].style.display = player.cubeUpgrades[10] > 0 ? 'flex' : 'none'\r\n  }\r\n\r\n  const example30 = document.getElementsByClassName('cubeUpgrade19') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example30.length; i++) {\r\n    example30[i].style.display = player.cubeUpgrades[19] > 0 ? 'block' : 'none'\r\n  }\r\n\r\n  const example31 = document.getElementsByClassName('sacrificeAnts') as HTMLCollectionOf<HTMLElement>\r\n  for (const ex of Array.from(example31)) { //Galactic Crumb Achievement 5\r\n    ex.style.display = player.achievements[173] === 1 ? 'block' : 'none'\r\n  }\r\n\r\n  const example32 = document.getElementsByClassName('hepteracts') as HTMLCollectionOf<HTMLElement>\r\n  for (const ex of Array.from(example32)) { // Ability to use and gain hepteracts //\r\n    ex.style.display = player.challenge15Exponent >= 1e15 ? 'block' : 'none'\r\n  }\r\n\r\n  const singularityHTMLs = document.getElementsByClassName('singularity') as HTMLCollectionOf<HTMLElement>\r\n  for (const HTML of Array.from(singularityHTMLs)) { // Ability to view singularity features.\r\n    const count = Number(HTML.getAttribute('count')) || 1\r\n    HTML.style.display = player.highestSingularityCount >= count ? 'block' : 'none'\r\n  }\r\n\r\n  const eventHTMLs = document.getElementsByClassName('isEvent') as HTMLCollectionOf<HTMLElement>\r\n  for (const HTML of Array.from(eventHTMLs)) {\r\n    HTML.style.display = G.isEvent ? 'block' : 'none'\r\n  }\r\n\r\n  visualUpdateShop()\r\n\r\n  const hepts = DOMCacheGetOrSet('corruptionHepteracts')\r\n  hepts.style.display = (player.achievements[255] > 0) ? 'block' : 'none'\r\n\r\n  const cookies1 = document.getElementsByClassName('assortedCookies1') as HTMLCollectionOf<HTMLElement>\r\n  const cookies2 = document.getElementsByClassName('assortedCookies2') as HTMLCollectionOf<HTMLElement>\r\n  const cookies3 = document.getElementsByClassName('assortedCookies3') as HTMLCollectionOf<HTMLElement>\r\n  const cookies4 = document.getElementsByClassName('assortedCookies4') as HTMLCollectionOf<HTMLElement>\r\n  for (const HTML of Array.from(cookies1)) {\r\n    HTML.style.display = player.singularityUpgrades.cookies.getEffect().bonus ? 'block' : 'none'\r\n  }\r\n  for (const HTML of Array.from(cookies2)) {\r\n    HTML.style.display = player.singularityUpgrades.cookies2.getEffect().bonus ? 'block' : 'none'\r\n  }\r\n  for (const HTML of Array.from(cookies3)) {\r\n    HTML.style.display = player.singularityUpgrades.cookies3.getEffect().bonus ? 'block' : 'none'\r\n  }\r\n  for (const HTML of Array.from(cookies4)) {\r\n    HTML.style.display = player.singularityUpgrades.cookies4.getEffect().bonus ? 'block' : 'none'\r\n  }\r\n\r\n  const goldenQuarks3 = document.getElementsByClassName('goldenQuark3Upg') as HTMLCollectionOf<HTMLElement>\r\n  for (const HTML of Array.from(goldenQuarks3)) {\r\n    HTML.style.display = (player.singularityUpgrades.goldenQuarks3.getEffect().bonus as number) > 0 ? 'block' : 'none'\r\n  }\r\n  if (player.upgrades[89] === 1) {\r\n    DOMCacheGetOrSet('transcendautotoggle').style.display = 'block'\r\n    DOMCacheGetOrSet('transcendamount').style.display = 'block'\r\n    DOMCacheGetOrSet('autotranscend').style.display = 'block'\r\n  } else {\r\n    DOMCacheGetOrSet('transcendautotoggle').style.display = 'none'\r\n    DOMCacheGetOrSet('transcendamount').style.display = 'none'\r\n    DOMCacheGetOrSet('autotranscend').style.display = 'none'\r\n  }\r\n\r\n  player.achievements[38] === 1 ? //Prestige Diamond Achievement 3\r\n    (DOMCacheGetOrSet('rune2area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower2').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune2area').style.display = 'none', DOMCacheGetOrSet('runeshowpower2').style.display = 'none')\r\n\r\n  if (player.achievements[43] === 1) { // Transcend Mythos Achievement 1\r\n    DOMCacheGetOrSet('prestigeautotoggle').style.display = 'block'\r\n    DOMCacheGetOrSet('prestigeamount').style.display = 'block'\r\n    DOMCacheGetOrSet('autoprestige').style.display = 'block'\r\n  } else {\r\n    DOMCacheGetOrSet('prestigeautotoggle').style.display = 'none'\r\n    DOMCacheGetOrSet('prestigeamount').style.display = 'none'\r\n    DOMCacheGetOrSet('autoprestige').style.display = 'none'\r\n  }\r\n\r\n  player.achievements[44] === 1 ? //Transcend Mythos Achievement 2\r\n    (DOMCacheGetOrSet('rune3area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower3').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune3area').style.display = 'none', DOMCacheGetOrSet('runeshowpower3').style.display = 'none')\r\n\r\n  player.achievements[102] === 1 ? //Cost+ Challenge Achievement 4\r\n    (DOMCacheGetOrSet('rune4area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower4').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune4area').style.display = 'none', DOMCacheGetOrSet('runeshowpower4').style.display = 'none')\r\n\r\n  player.achievements[119] === 1 ? //Tax+ Challenge Achievement 7\r\n    DOMCacheGetOrSet('talisman1area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman1area').style.display = 'none'\r\n\r\n  player.achievements[126] === 1 ? //No MA Challenge Achievement 7\r\n    DOMCacheGetOrSet('talisman2area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman2area').style.display = 'none'\r\n\r\n  player.achievements[133] === 1 ? //Cost++ Challenge Achievement 7\r\n    DOMCacheGetOrSet('talisman3area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman3area').style.display = 'none'\r\n\r\n  player.achievements[134] === 1 ? //No Runes Challenge Achievement 1\r\n    (DOMCacheGetOrSet('toggleRuneSubTab2').style.display = 'block', DOMCacheGetOrSet('toggleRuneSubTab3').style.display = 'block') :\r\n    (DOMCacheGetOrSet('toggleRuneSubTab2').style.display = 'none', DOMCacheGetOrSet('toggleRuneSubTab3').style.display = 'none')\r\n\r\n  player.achievements[140] === 1 ? //No Runes Challenge Achievement 7\r\n    DOMCacheGetOrSet('talisman4area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman4area').style.display = 'none'\r\n\r\n  player.achievements[147] === 1 ? //Sadistic Challenge Achievement 7\r\n    DOMCacheGetOrSet('talisman5area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman5area').style.display = 'none'\r\n\r\n  player.achievements[173] === 1 ? //Galactic Crumb Achievement 5\r\n    DOMCacheGetOrSet('sacrificeAnts').style.display = 'block' :\r\n    DOMCacheGetOrSet('sacrificeAnts').style.display = 'none'\r\n\r\n  player.researches[39] > 0 ? //3x9 Research [Crystal Building Power]\r\n    DOMCacheGetOrSet('reincarnationCrystalInfo').style.display = 'block' :\r\n    DOMCacheGetOrSet('reincarnationCrystalInfo').style.display = 'none'\r\n\r\n  player.researches[40] > 0 ? //3x10 Research [Mythos Shard Building Power]\r\n    DOMCacheGetOrSet('reincarnationMythosInfo').style.display = 'block' :\r\n    DOMCacheGetOrSet('reincarnationMythosInfo').style.display = 'none'\r\n\r\n  player.researches[46] > 0 ? //5x6 Research [Auto R.]\r\n    DOMCacheGetOrSet('reincarnateautomation').style.display = 'block' :\r\n    DOMCacheGetOrSet('reincarnateautomation').style.display = 'none'\r\n\r\n  player.researches[82] > 0 ? //2x17 Research [SI Rune Unlock]\r\n    (DOMCacheGetOrSet('rune5area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower5').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune5area').style.display = 'none', DOMCacheGetOrSet('runeshowpower5').style.display = 'none')\r\n\r\n  player.researches[124] > 0 ? //5x24 Research [AutoSac]\r\n    (DOMCacheGetOrSet('antSacrificeButtons').style.display = 'flex', DOMCacheGetOrSet('autoAntSacrifice').style.display = 'block') :\r\n    (DOMCacheGetOrSet('antSacrificeButtons').style.display = 'none', DOMCacheGetOrSet('autoAntSacrifice').style.display = 'none')\r\n  player.researches[124] > 0 || player.highestSingularityCount > 0 ? //So you can turn it off before 5x24 Research\r\n    DOMCacheGetOrSet('toggleAutoSacrificeAnt').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleAutoSacrificeAnt').style.display = 'none'\r\n\r\n  player.researches[130] > 0 ? //6x5 Research [Talisman Auto Fortify]\r\n    DOMCacheGetOrSet('toggleautofortify').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleautofortify').style.display = 'none'\r\n\r\n  player.researches[135] > 0 ? //6x10 Research [Talisman Auto Sac]\r\n    DOMCacheGetOrSet('toggleautoenhance').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleautoenhance').style.display = 'none'\r\n\r\n  for (let z = 1; z <= 5; z++) {\r\n    (player.researches[190] > 0) ? //8x15 Research [Auto Tesseracts]\r\n      DOMCacheGetOrSet(`tesseractAutoToggle${z}`).style.display = 'block' :\r\n      DOMCacheGetOrSet(`tesseractAutoToggle${z}`).style.display = 'none'\r\n  }\r\n  player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').style.display = 'block' :\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').style.display = 'none'\r\n  player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\r\n    DOMCacheGetOrSet('tesseractautobuymode').style.display = 'block' :\r\n    DOMCacheGetOrSet('tesseractautobuymode').style.display = 'none'\r\n  player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\r\n    DOMCacheGetOrSet('tesseractAmount').style.display = 'block' :\r\n    DOMCacheGetOrSet('tesseractAmount').style.display = 'none'\r\n  player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\r\n    DOMCacheGetOrSet('autotessbuyeramount').style.display = 'block' :\r\n    DOMCacheGetOrSet('autotessbuyeramount').style.display = 'none';\r\n  (player.antUpgrades[11]! > 0 || player.ascensionCount > 0) ? //Ant Talisman Unlock, Mortuus\r\n    DOMCacheGetOrSet('talisman6area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman6area').style.display = 'none'\r\n\r\n  player.shopUpgrades.offeringAuto > 0 ? //Auto Offering Shop Purchase\r\n    DOMCacheGetOrSet('toggleautosacrifice').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleautosacrifice').style.display = 'none'\r\n\r\n  player.cubeUpgrades[51] > 0 && player.highestSingularityCount >= 40 ? //Auto Fragments Buy (After Cx1)\r\n    DOMCacheGetOrSet('toggleautoBuyFragments').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleautoBuyFragments').style.display = 'none'\r\n\r\n  player.shopUpgrades.obtainiumAuto > 0 ? //Auto Research Shop Purchase\r\n    DOMCacheGetOrSet('toggleautoresearch').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleautoresearch').style.display = 'none'\r\n\r\n  DOMCacheGetOrSet('toggleautoresearchmode').style.display = player.shopUpgrades.obtainiumAuto > 0 && autoResearchEnabled() //Auto Research Shop Purchase Mode\r\n    ? 'block'\r\n    : 'none'\r\n\r\n  player.shopUpgrades.shopTalisman > 0 ? //Plastic Talisman Shop Purchase\r\n    DOMCacheGetOrSet('talisman7area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman7area').style.display = 'none'\r\n\r\n  player.cubeUpgrades[8] > 0 ?\r\n    DOMCacheGetOrSet('reincarnateAutoUpgrade').style.display = 'block' :\r\n    DOMCacheGetOrSet('reincarnateAutoUpgrade').style.display = 'none'\r\n\r\n  player.shopUpgrades.infiniteAscent ?\r\n    (DOMCacheGetOrSet('rune6area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower6').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune6area').style.display = 'none', DOMCacheGetOrSet('runeshowpower6').style.display = 'none')\r\n\r\n  player.platonicUpgrades[20] > 0 ?\r\n    (DOMCacheGetOrSet('rune7area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower7').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune7area').style.display = 'none', DOMCacheGetOrSet('runeshowpower7').style.display = 'none')\r\n\r\n  player.highestSingularityCount > 0 ?\r\n    (DOMCacheGetOrSet('singularitytab').style.display = 'block'):\r\n    (DOMCacheGetOrSet('singularitytab').style.display = 'none')\r\n\r\n  player.highestSingularityCount > 0 ? //Save Offerings\r\n    DOMCacheGetOrSet('saveOffToggle').style.display = 'block' :\r\n    DOMCacheGetOrSet('saveOffToggle').style.display = 'none'\r\n\r\n  // Auto Open Cubes toggle\r\n  if (player.highestSingularityCount >= 35) {\r\n    DOMCacheGetOrSet('openCubes').style.display = 'block'\r\n    DOMCacheGetOrSet('cubeOpensInput').style.display = 'block'\r\n    DOMCacheGetOrSet('openTesseracts').style.display = 'block'\r\n    DOMCacheGetOrSet('tesseractsOpensInput').style.display = 'block'\r\n    DOMCacheGetOrSet('openHypercubes').style.display = 'block'\r\n    DOMCacheGetOrSet('hypercubesOpensInput').style.display = 'block'\r\n    DOMCacheGetOrSet('openPlatonicCube').style.display = 'block'\r\n    DOMCacheGetOrSet('platonicCubeOpensInput').style.display = 'block'\r\n  } else {\r\n    DOMCacheGetOrSet('openCubes').style.display = 'none'\r\n    DOMCacheGetOrSet('cubeOpensInput').style.display = 'none'\r\n    DOMCacheGetOrSet('openTesseracts').style.display = 'none'\r\n    DOMCacheGetOrSet('tesseractsOpensInput').style.display = 'none'\r\n    DOMCacheGetOrSet('openHypercubes').style.display = 'none'\r\n    DOMCacheGetOrSet('hypercubesOpensInput').style.display = 'none'\r\n    DOMCacheGetOrSet('openPlatonicCube').style.display = 'none'\r\n    DOMCacheGetOrSet('platonicCubeOpensInput').style.display = 'none'\r\n  }\r\n\r\n  (player.highestSingularityCount >= 50 && player.singularityCount < player.highestSingularityCount) || player.highestSingularityCount >= 150 ? // Auto Cube Upgrades\r\n    DOMCacheGetOrSet('toggleAutoCubeUpgrades').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleAutoCubeUpgrades').style.display = 'none';\r\n\r\n  (player.highestSingularityCount >= 100 && player.singularityCount < player.highestSingularityCount) || player.highestSingularityCount >= 200 ? // Auto Platonic Upgrades\r\n    DOMCacheGetOrSet('toggleAutoPlatonicUpgrades').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleAutoPlatonicUpgrades').style.display = 'none'\r\n\r\n  // Singularity confirmation toggle pic\r\n  player.highestSingularityCount > 0 && player.ascensionCount > 0 ?\r\n    (DOMCacheGetOrSet('settingpic6').style.display = 'block'):\r\n    (DOMCacheGetOrSet('settingpic6').style.display = 'none')\r\n\r\n  // Hepteract Confirmations toggle\r\n  player.highestSingularityCount > 0 && player.challenge15Exponent >= 1e15 ?\r\n    (DOMCacheGetOrSet('heptnotificationpic').style.display = 'block'):\r\n    (DOMCacheGetOrSet('heptnotificationpic').style.display = 'none')\r\n\r\n  DOMCacheGetOrSet('warpAuto').style.display = player.shopUpgrades.autoWarp > 0 ? '' : 'none'\r\n\r\n  if (player.unlocks.reincarnate || player.highestSingularityCount > 0) {\r\n    DOMCacheGetOrSet('shoptab').style.display = 'block'\r\n  }\r\n\r\n  const octeractUnlocks = document.getElementsByClassName('octeracts') as HTMLCollectionOf<HTMLElement>\r\n  for (const item of Array.from(octeractUnlocks)) { // Stuff that you need octeracts to access\r\n    item.style.display = player.singularityUpgrades.octeractUnlock.getEffect().bonus ? 'block' : 'none'\r\n  }\r\n\r\n  const singChallengeUnlocks = document.getElementsByClassName('singChallenges') as HTMLCollectionOf<HTMLElement>\r\n  for (const item of Array.from(singChallengeUnlocks)) {\r\n    item.style.display = player.highestSingularityCount >= 25 ? 'block' : 'none'\r\n  }\r\n\r\n  DOMCacheGetOrSet('toggleSingularitySubTab6').style.display =\r\n    player.singularityChallenges.noSingularityUpgrades.completions >= 1\r\n      ? 'block'\r\n      : 'none'\r\n\r\n  player.runelevels[6] > 0 || player.highestSingularityCount > 0 ?\r\n    (DOMCacheGetOrSet('singularitybtn').style.display = 'block') :\r\n    (DOMCacheGetOrSet('singularitybtn').style.display = 'none')\r\n\r\n  player.highestSingularityCount > 0 && player.ascensionCount >= 1 ?\r\n    (DOMCacheGetOrSet('totalQuarkCountStatisticSing').style.display = 'block') :\r\n    (DOMCacheGetOrSet('totalQuarkCountStatisticSing').style.display = 'none')\r\n\r\n\r\n  DOMCacheGetOrSet('ascensionStats').style.visibility = (player.achievements[197] > 0 || player.highestSingularityCount > 0) ? 'visible' : 'hidden'\r\n  DOMCacheGetOrSet('ascHyperStats').style.display = player.challengecompletions[13] > 0 ? '' : 'none'\r\n  DOMCacheGetOrSet('ascPlatonicStats').style.display = player.challengecompletions[14] > 0 ? '' : 'none'\r\n  DOMCacheGetOrSet('ascHepteractStats').style.display = player.achievements[255] > 0 ? '' : 'none'\r\n\r\n  //I'll clean this up later. Note to 2019 Platonic: Fuck you\r\n  // note to 2019 and 2020 Platonic, you're welcome\r\n  // note to 2019 and 2020 and 2021 Platonic, please never base anything on the order of elements ever again\r\n\r\n  // These are currently listed in the order they were in when this was converted to use element IDs instead of\r\n  // the ordering of the HTML elements with the class \"auto\".\r\n  const automationUnlocks: Record<string, boolean> = {\r\n    'toggle1': player.upgrades[81] === 1, // Autobuyer - Coin Buildings - Tier 1 (Worker)\r\n    'toggle2': player.upgrades[82] === 1, // Autobuyer - Coin Buildings - Tier 2 (Investments)\r\n    'toggle3': player.upgrades[83] === 1, // Autobuyer - Coin Buildings - Tier 3 (Printers)\r\n    'toggle4': player.upgrades[84] === 1, // Autobuyer - Coin Buildings - Tier 4 (Coin Mints)\r\n    'toggle5': player.upgrades[85] === 1, // Autobuyer - Coin Buildings - Tier 5 (Alchemies)\r\n    'toggle6': player.upgrades[86] === 1, // Autobuyer - Coin Buildings - Accelerator\r\n    'toggle7': player.upgrades[87] === 1, // Autobuyer - Coin Buildings - Multiplier\r\n    'toggle8': player.upgrades[88] === 1, // Autobuyer - Coin Buildings - Accelerator Boost\r\n    'toggle10': player.achievements[78] === 1, // Autobuyer - Diamond Buildings - Tier 1 (Refineries)\r\n    'toggle11': player.achievements[85] === 1, // Autobuyer - Diamond Buildings - Tier 2 (Coal Plants)\r\n    'toggle12': player.achievements[92] === 1, // Autobuyer - Diamond Buildings - Tier 3 (Coal Rigs)\r\n    'toggle13': player.achievements[99] === 1, // Autobuyer - Diamond Buildings - Tier 4 (Pickaxes)\r\n    'toggle14': player.achievements[106] === 1, // Autobuyer - Diamond Buildings - Tier 5 (Pandora's Boxes)\r\n    'toggle15': player.achievements[43] === 1, // Feature - Diamond Buildings - Auto Prestige\r\n    'toggle16': player.upgrades[94] === 1, // Autobuyer - Mythos Buildings - Tier 1 (Augments)\r\n    'toggle17': player.upgrades[95] === 1, // Autobuyer - Mythos Buildings - Tier 2 (Enchantments)\r\n    'toggle18': player.upgrades[96] === 1, // Autobuyer - Mythos Buildings - Tier 3 (Wizards)\r\n    'toggle19': player.upgrades[97] === 1, // Autobuyer - Mythos Buildings - Tier 4 (Oracles)\r\n    'toggle20': player.upgrades[98] === 1, // Autobuyer - Mythos Buildings - Tier 5 (Grandmasters)\r\n    'toggle21': player.upgrades[89] === 1, // Feature - Mythos Buildings - Auto Transcend\r\n    'toggle22': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 1 (Protons)\r\n    'toggle23': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 2 (Elements)\r\n    'toggle24': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 3 (Pulsars)\r\n    'toggle25': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 4 (Quasars)\r\n    'toggle26': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 5 (Galactic Nuclei)\r\n    'toggle27': player.researches[46] === 1, // Feature - Particle Buildings - Auto Reincarnate\r\n    'coinAutoUpgrade': player.upgrades[91] === 1, // Feature - Upgrades - Auto Buy Coin Upgrades\r\n    'prestigeAutoUpgrade': player.upgrades[92] === 1, // Feature - Upgrades - Auto Buy Diamond Upgrades\r\n    'transcendAutoUpgrade': player.upgrades[99] === 1, // Feature - Upgrades - Auto Buy Mythos Upgrades\r\n    'generatorsAutoUpgrade': player.upgrades[90] === 1, // Feature - Upgrades - Auto Buy Generator Upgrades\r\n    'toggle9': player.unlocks.prestige, // Feature - Upgrades - Hover to Buy\r\n    'toggle28': player.prestigeCount > 0.5 || player.reincarnationCount > 0.5, // Settings - Confirmations - Prestige\r\n    'toggle29': player.transcendCount > 0.5 || player.reincarnationCount > 0.5,  // Settings - Confirmations - Transcension\r\n    'toggle30': player.reincarnationCount > 0.5, // Settings - Confirmations - Reincarnation\r\n    'toggle31': player.ascensionCount > 0, // Settings - Confirmations - Ascension and Asc. Challenge\r\n    'toggle32': player.achievements[173] > 0, // Settings - Confirmations - Ant Sacrifice\r\n    'toggle33': player.highestSingularityCount > 0 && player.ascensionCount > 0, // Settings - Confirmations - Singularity\r\n    'toggle34': player.unlocks.coinfour, // Achievements - Notifications\r\n    'toggle35': player.challenge15Exponent >= 1e15 && player.highestSingularityCount > 0, // Hepteracts - Notifications\r\n    'toggle36': player.highestSingularityCount >= 15, // Auto Blessings\r\n    'toggle37': player.highestSingularityCount >= 15, // Auto Spirits\r\n    'toggle38': player.highestSingularityCount > 0, // Researchs Hover to Buy\r\n    'toggle39': player.unlocks.prestige, // Hotkeys\r\n    'toggle40': player.unlocks.prestige, // Number Hotkeys\r\n    'toggle41': player.challengecompletions[11] > 0, // Loadouts Notifx\r\n    'toggle42': player.highestSingularityCount >= 6, // Potion Autogenerator for Offering Potions\r\n    'toggle43': player.highestSingularityCount >= 6 // Potion Autogenerator for Obtainium Potions\r\n  }\r\n\r\n  Object.keys(automationUnlocks).forEach(key => {\r\n    const el = DOMCacheGetOrSet(key) as HTMLElement | null\r\n    if (el === null) {\r\n      // eslint-disable-next-line no-console\r\n      console.error(`Automation unlock failed to find element with ID '${key}'.`)\r\n      return\r\n    }\r\n\r\n    el.style.display = automationUnlocks[key] ? 'block' : 'none'\r\n  })\r\n\r\n  revealCorruptions()\r\n}\r\n\r\nexport const hideStuff = () => {\r\n\r\n  DOMCacheGetOrSet('buildings').style.display = 'none'\r\n  DOMCacheGetOrSet('buildingstab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('upgrades').style.display = 'none'\r\n  DOMCacheGetOrSet('upgradestab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('settings').style.display = 'none'\r\n\r\n  DOMCacheGetOrSet('statistics').style.display = 'none'\r\n  DOMCacheGetOrSet('achievementstab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('achievementstab').style.color = 'white'\r\n  DOMCacheGetOrSet('runes').style.display = 'none'\r\n  DOMCacheGetOrSet('runestab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('challenges').style.display = 'none'\r\n  DOMCacheGetOrSet('challengetab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('research').style.display = 'none'\r\n  DOMCacheGetOrSet('researchtab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('shop').style.display = 'none'\r\n  DOMCacheGetOrSet('shoptab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('ants').style.display = 'none'\r\n  DOMCacheGetOrSet('anttab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('cubetab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('traitstab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('cubes').style.display = 'none'\r\n  DOMCacheGetOrSet('traits').style.display = 'none'\r\n  DOMCacheGetOrSet('singularity').style.display = 'none'\r\n  DOMCacheGetOrSet('singularitytab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('event').style.display = 'none'\r\n  DOMCacheGetOrSet('eventtab').style.backgroundColor = ''\r\n\r\n  const tab = DOMCacheGetOrSet('settingstab')!\r\n  tab.style.backgroundColor = ''\r\n  tab.style.borderColor = 'white'\r\n\r\n  if (G.currentTab === 'buildings') {\r\n    DOMCacheGetOrSet('buildingstab').style.backgroundColor = 'orange'\r\n    DOMCacheGetOrSet('buildings').style.display = 'block'\r\n  }\r\n  if (G.currentTab === 'upgrades') {\r\n    DOMCacheGetOrSet('upgrades').style.display = 'block'\r\n    DOMCacheGetOrSet('upgradestab').style.backgroundColor = 'orange'\r\n    DOMCacheGetOrSet('upgradedescription').textContent = i18next.t('upgrades.hoverOverUpgrade')\r\n  }\r\n  if (G.currentTab === 'settings') {\r\n    DOMCacheGetOrSet('settings').style.display = 'block'\r\n    const tab = DOMCacheGetOrSet('settingstab')!\r\n    tab.style.backgroundColor = 'orange'\r\n    tab.style.borderColor = 'gold'\r\n  }\r\n  if (G.currentTab === 'achievements') {\r\n    DOMCacheGetOrSet('statistics').style.display = 'block'\r\n    DOMCacheGetOrSet('achievementstab').style.backgroundColor = 'white'\r\n    DOMCacheGetOrSet('achievementstab').style.color = 'black'\r\n    DOMCacheGetOrSet('achievementprogress').textContent = i18next.t('achievements.totalPoints', {\r\n      x: format(player.achievementPoints),\r\n      y: format(totalachievementpoints),\r\n      z: (100 * player.achievementPoints / totalachievementpoints).toPrecision(4)\r\n    })\r\n  } else if (G.currentTab === 'runes') {\r\n    DOMCacheGetOrSet('runes').style.display = 'block'\r\n    DOMCacheGetOrSet('runestab').style.backgroundColor = 'blue'\r\n    DOMCacheGetOrSet('runeshowlevelup').textContent = i18next.t('runes.hover')\r\n    DOMCacheGetOrSet('researchrunebonus').textContent = i18next.t('runes.thanksResearches', {\r\n      percent: format(100 * G.effectiveLevelMult - 100, 4, true)\r\n    })\r\n    displayRuneInformation(1, false)\r\n    displayRuneInformation(2, false)\r\n    displayRuneInformation(3, false)\r\n    displayRuneInformation(4, false)\r\n    displayRuneInformation(5, false)\r\n    displayRuneInformation(6, false)\r\n    displayRuneInformation(7, false)\r\n  }\r\n  if (G.currentTab === 'challenge') {\r\n    DOMCacheGetOrSet('challenges').style.display = 'block'\r\n    DOMCacheGetOrSet('challengetab').style.backgroundColor = 'purple'\r\n  }\r\n  if (G.currentTab === 'research') {\r\n    DOMCacheGetOrSet('research').style.display = 'block'\r\n    DOMCacheGetOrSet('researchtab').style.backgroundColor = 'green'\r\n  }\r\n  if (G.currentTab === 'shop') {\r\n    DOMCacheGetOrSet('shop').style.display = 'block'\r\n    DOMCacheGetOrSet('shoptab').style.backgroundColor = 'limegreen'\r\n  }\r\n  if (G.currentTab === 'ant') {\r\n    DOMCacheGetOrSet('ants').style.display = 'block'\r\n    DOMCacheGetOrSet('anttab').style.backgroundColor = 'brown'\r\n  }\r\n  if (G.currentTab === 'cube') {\r\n    DOMCacheGetOrSet('cubes').style.display = 'flex'\r\n    DOMCacheGetOrSet('cubetab').style.backgroundColor = 'white'\r\n  }\r\n  if (G.currentTab === 'traits') {\r\n    DOMCacheGetOrSet('traits').style.display = 'flex'\r\n    DOMCacheGetOrSet('traitstab').style.backgroundColor = 'white'\r\n  }\r\n\r\n  if (G.currentTab === 'singularity') {\r\n    DOMCacheGetOrSet('singularity').style.display = 'block'\r\n    DOMCacheGetOrSet('singularitytab').style.backgroundColor = 'lightgoldenrodyellow'\r\n    updateSingularityPenalties()\r\n    updateSingularityPerks()\r\n  }\r\n\r\n  if (G.currentTab === 'event') {\r\n    DOMCacheGetOrSet('event').style.display = 'block'\r\n    DOMCacheGetOrSet('eventtab').style.backgroundColor = 'gold'\r\n  }\r\n}\r\n\r\nconst visualTab: Record<TabNames, () => void> = {\r\n  buildings: visualUpdateBuildings,\r\n  upgrades: visualUpdateUpgrades,\r\n  achievements: visualUpdateAchievements,\r\n  runes: visualUpdateRunes,\r\n  challenge: visualUpdateChallenges,\r\n  research: visualUpdateResearch,\r\n  settings: visualUpdateSettings,\r\n  shop: visualUpdateShop,\r\n  ant: visualUpdateAnts,\r\n  cube: visualUpdateCubes,\r\n  traits: visualUpdateCorruptions,\r\n  singularity: visualUpdateSingularity,\r\n  event: visualUpdateEvent\r\n}\r\n\r\nexport const htmlInserts = () => {\r\n  // ALWAYS Update these, for they are the most important resources\r\n  const playerRequirements = ['coins', 'runeshards', 'prestigePoints', 'transcendPoints', 'transcendShards', 'reincarnationPoints', 'worlds', 'researchPoints'] as const\r\n  const domRequirements = ['coinDisplay', 'offeringDisplay', 'diamondDisplay', 'mythosDisplay', 'mythosshardDisplay', 'particlesDisplay', 'quarkDisplay', 'obtainiumDisplay'] as const\r\n  for (let i = 0; i < playerRequirements.length; i++) {\r\n    const text = format(player[`${playerRequirements[i]}` as const])\r\n    const dom = DOMCacheGetOrSet(`${domRequirements[i]}` as const)\r\n    if (dom.textContent !== text) {\r\n      dom.textContent = text\r\n    }\r\n  }\r\n\r\n  updateAscensionStats()\r\n\r\n  visualTab[G.currentTab]()\r\n}\r\n\r\n// TODO(not @KhafraDev): cache the elements and stop getting them every time?\r\nexport const buttoncolorchange = () => {\r\n\r\n  DOMCacheGetOrSet('prestigebtn').style.backgroundColor = player.toggles[15] && player.achievements[43] === 1 ? 'green' : ''\r\n\r\n  DOMCacheGetOrSet('transcendbtn').style.backgroundColor = player.toggles[21] && player.upgrades[89] > 0.5 && (player.currentChallenge.transcension === 0) ? 'green' : ''\r\n\r\n  DOMCacheGetOrSet('reincarnatebtn').style.backgroundColor = player.toggles[27] && player.researches[46] > 0.5 && (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) ? 'green' : ''\r\n\r\n  DOMCacheGetOrSet('acceleratorboostbtn').style.backgroundColor = player.toggles[8] && player.upgrades[88] > 0.5 ? 'green' : ''\r\n\r\n  DOMCacheGetOrSet('challengebtn').style.backgroundColor = player.currentChallenge.transcension === 0 ? '' : 'purple'\r\n\r\n  DOMCacheGetOrSet('reincarnatechallengebtn').style.backgroundColor = player.currentChallenge.reincarnation === 0 ? '' : 'purple'\r\n\r\n  DOMCacheGetOrSet('ascendChallengeBtn').style.backgroundColor = player.currentChallenge.ascension === 0 ? '' : 'purple'\r\n\r\n  DOMCacheGetOrSet('ascendbtn').style.backgroundColor = player.autoAscend && player.challengecompletions[11] > 0 && player.cubeUpgrades[10] > 0 ? 'green' : ''\r\n\r\n  DOMCacheGetOrSet('singularitybtn').style.filter = player.runelevels[6] > 0 ? '' : 'contrast(1.25) sepia(1) grayscale(0.25)'\r\n\r\n  // Notify new players the reset\r\n  if (player.toggles[33] && player.highestSingularityCount === 0) {\r\n    if (player.toggles[28] && !player.unlocks.prestige) {\r\n      DOMCacheGetOrSet('prestigebtn').style.boxShadow = player.coinsThisPrestige.gte(1e16) ? 'cyan 0px 0px 10px 2px' : ''\r\n    }\r\n    if (player.toggles[29] && !player.unlocks.transcend) {\r\n      DOMCacheGetOrSet('transcendbtn').style.boxShadow = player.coinsThisTranscension.gte(1e100) ? 'plum 0px 0px 10px 2px' : ''\r\n    }\r\n    if (player.toggles[30] && !player.unlocks.reincarnate) {\r\n      DOMCacheGetOrSet('reincarnatebtn').style.boxShadow = player.transcendShards.gte(1e300) ? 'greenyellow 0px 0px 10px 2px' : ''\r\n    }\r\n    if (player.toggles[31] && player.ascensionCount === 0) {\r\n      DOMCacheGetOrSet('ascendbtn').style.boxShadow = player.challengecompletions[10] > 0 ? 'orange 0px 0px 10px 2px' : ''\r\n    }\r\n  }\r\n\r\n  if (G.currentTab === 'buildings' && G.buildingSubTab === 'coin') {\r\n    const a = DOMCacheGetOrSet('buycoin1')\r\n    const b = DOMCacheGetOrSet('buycoin2')\r\n    const c = DOMCacheGetOrSet('buycoin3')\r\n    const d = DOMCacheGetOrSet('buycoin4')\r\n    const e = DOMCacheGetOrSet('buycoin5')\r\n    const f = DOMCacheGetOrSet('buyaccelerator')\r\n    const g = DOMCacheGetOrSet('buymultiplier')\r\n    const h = DOMCacheGetOrSet('buyacceleratorboost');\r\n    ((!player.toggles[1] || player.upgrades[81] === 0) && player.coins.gte(player.firstCostCoin))\r\n      ? a.classList.add('buildingPurchaseBtnAvailable')\r\n      : a.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[2] || player.upgrades[82] === 0) && player.coins.gte(player.secondCostCoin))\r\n      ? b.classList.add('buildingPurchaseBtnAvailable')\r\n      : b.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[3] || player.upgrades[83] === 0) && player.coins.gte(player.thirdCostCoin))\r\n      ? c.classList.add('buildingPurchaseBtnAvailable')\r\n      : c.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[4] || player.upgrades[84] === 0) && player.coins.gte(player.fourthCostCoin))\r\n      ? d.classList.add('buildingPurchaseBtnAvailable')\r\n      : d.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[5] || player.upgrades[85] === 0) && player.coins.gte(player.fifthCostCoin))\r\n      ? e.classList.add('buildingPurchaseBtnAvailable')\r\n      : e.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[6] || player.upgrades[86] === 0) && player.coins.gte(player.acceleratorCost))\r\n      ? f.classList.add('buildingPurchaseBtnAvailable')\r\n      : f.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[7] || player.upgrades[87] === 0) && player.coins.gte(player.multiplierCost))\r\n      ? g.classList.add('buildingPurchaseBtnAvailable')\r\n      : g.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[8] || player.upgrades[88] === 0) && player.prestigePoints.gte(player.acceleratorBoostCost))\r\n      ? h.classList.add('buildingPurchaseBtnAvailable')\r\n      : h.classList.remove('buildingPurchaseBtnAvailable')\r\n  }\r\n\r\n  if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n    const a = DOMCacheGetOrSet('buydiamond1')\r\n    const b = DOMCacheGetOrSet('buydiamond2')\r\n    const c = DOMCacheGetOrSet('buydiamond3')\r\n    const d = DOMCacheGetOrSet('buydiamond4')\r\n    const e = DOMCacheGetOrSet('buydiamond5')\r\n    const f = DOMCacheGetOrSet('buycrystalupgrade1')\r\n    const g = DOMCacheGetOrSet('buycrystalupgrade2')\r\n    const h = DOMCacheGetOrSet('buycrystalupgrade3')\r\n    const i = DOMCacheGetOrSet('buycrystalupgrade4')\r\n    const j = DOMCacheGetOrSet('buycrystalupgrade5');\r\n    ((!player.toggles[10] || player.achievements[78] === 0) && player.prestigePoints.gte(player.firstCostDiamonds))\r\n      ? a.classList.add('buildingPurchaseBtnAvailable')\r\n      : a.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[11] || player.achievements[85] === 0) && player.prestigePoints.gte(player.secondCostDiamonds))\r\n      ? b.classList.add('buildingPurchaseBtnAvailable')\r\n      : b.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[12] || player.achievements[92] === 0) && player.prestigePoints.gte(player.thirdCostDiamonds))\r\n      ? c.classList.add('buildingPurchaseBtnAvailable')\r\n      : c.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[13] || player.achievements[99] === 0) && player.prestigePoints.gte(player.fourthCostDiamonds))\r\n      ? d.classList.add('buildingPurchaseBtnAvailable')\r\n      : d.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[14] || player.achievements[106] === 0) && player.prestigePoints.gte(player.fifthCostDiamonds))\r\n      ? e.classList.add('buildingPurchaseBtnAvailable')\r\n      : e.classList.remove('buildingPurchaseBtnAvailable')\r\n    let k = 0\r\n    k += Math.floor(G.rune3level / 16 * G.effectiveLevelMult) * 100 / 100\r\n    if (player.upgrades[73] === 1 && player.currentChallenge.reincarnation !== 0) {\r\n      k += 10\r\n    }\r\n\r\n    (player.achievements[79] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[0] + G.crystalUpgradeCostIncrement[0] * Math.floor(Math.pow(player.crystalUpgrades[0] + 0.5 - k, 2) / 2))))) ? f.style.backgroundColor = 'purple' : f.style.backgroundColor = '';\r\n    (player.achievements[86] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[1] + G.crystalUpgradeCostIncrement[1] * Math.floor(Math.pow(player.crystalUpgrades[1] + 0.5 - k, 2) / 2))))) ? g.style.backgroundColor = 'purple' : g.style.backgroundColor = '';\r\n    (player.achievements[93] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[2] + G.crystalUpgradeCostIncrement[2] * Math.floor(Math.pow(player.crystalUpgrades[2] + 0.5 - k, 2) / 2))))) ? h.style.backgroundColor = 'purple' : h.style.backgroundColor = '';\r\n    (player.achievements[100] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[3] + G.crystalUpgradeCostIncrement[3] * Math.floor(Math.pow(player.crystalUpgrades[3] + 0.5 - k, 2) / 2))))) ? i.style.backgroundColor = 'purple' : i.style.backgroundColor = '';\r\n    (player.achievements[107] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[4] + G.crystalUpgradeCostIncrement[4] * Math.floor(Math.pow(player.crystalUpgrades[4] + 0.5 - k, 2) / 2))))) ? j.style.backgroundColor = 'purple' : j.style.backgroundColor = ''\r\n  }\r\n\r\n  if (G.currentTab === 'runes') {\r\n    if (G.runescreen === 'runes') {\r\n      for (let i = 1; i <= 7; i++) {\r\n        player.runeshards > 0.5\r\n          ? DOMCacheGetOrSet(`activaterune${i}`).classList.add('runeButtonAvailable')\r\n          : DOMCacheGetOrSet(`activaterune${i}`).classList.remove('runeButtonAvailable')\r\n      }\r\n    }\r\n    if (G.runescreen === 'talismans') {\r\n      const a = DOMCacheGetOrSet('buyTalismanItem1')\r\n      const b = DOMCacheGetOrSet('buyTalismanItem2')\r\n      const c = DOMCacheGetOrSet('buyTalismanItem3')\r\n      const d = DOMCacheGetOrSet('buyTalismanItem4')\r\n      const e = DOMCacheGetOrSet('buyTalismanItem5')\r\n      const f = DOMCacheGetOrSet('buyTalismanItem6')\r\n      const g = DOMCacheGetOrSet('buyTalismanItem7')\r\n      const arr = [a, b, c, d, e, f, g]\r\n      for (let i = 0; i < arr.length; i++) {\r\n        (player.researchPoints > G.talismanResourceObtainiumCosts[i] && player.runeshards > G.talismanResourceOfferingCosts[i])\r\n          ? arr[i].classList.add('talisminBtnAvailable')\r\n          : arr[i].classList.remove('talisminBtnAvailable')\r\n      }\r\n    }\r\n  }\r\n\r\n  if (G.currentTab === 'buildings' && G.buildingSubTab === 'mythos') {\r\n    for (let i = 1; i <= 5; i++) {\r\n      const toggle = player.toggles[i + 15]\r\n      const mythos = player[`${G.ordinals[i - 1 as ZeroToFour]}CostMythos` as const];\r\n      (!toggle || !player.upgrades[93 + i]) && player.transcendPoints.gte(mythos)\r\n        ? DOMCacheGetOrSet(`buymythos${i}`).classList.add('buildingPurchaseBtnAvailable')\r\n        : DOMCacheGetOrSet(`buymythos${i}`).classList.remove('buildingPurchaseBtnAvailable')\r\n    }\r\n  }\r\n\r\n  if (G.currentTab === 'buildings' && G.buildingSubTab === 'particle') {\r\n    for (let i = 1; i <= 5; i++) {\r\n      const costParticles = player[`${G.ordinals[i - 1 as ZeroToFour]}CostParticles` as const]\r\n      player.reincarnationPoints.gte(costParticles)\r\n        ? DOMCacheGetOrSet(`buyparticles${i}`).classList.add('buildingPurchaseBtnAvailable')\r\n        : DOMCacheGetOrSet(`buyparticles${i}`).classList.remove('buildingPurchaseBtnAvailable')\r\n    }\r\n  }\r\n\r\n  if (G.currentTab === 'buildings' && G.buildingSubTab === 'tesseract') {\r\n    for (let i = 1; i <= 5; i++) {\r\n      const ascendBuilding = player[`ascendBuilding${i as OneToFive}` as const].cost\r\n      Number(player.wowTesseracts) >= ascendBuilding\r\n        ? DOMCacheGetOrSet(`buyTesseracts${i}`).classList.add('buildingPurchaseBtnAvailable')\r\n        : DOMCacheGetOrSet(`buyTesseracts${i}`).classList.remove('buildingPurchaseBtnAvailable')\r\n    }\r\n    for (let i = 1; i <= 8; i++) {\r\n      (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]!).times(G.constUpgradeCosts[i]!)))\r\n        ? DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.add('constUpgradeAvailable')\r\n        : DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeAvailable')\r\n    }\r\n    for (let i = 9; i <= 10; i++) {\r\n      if (player.constantUpgrades[i]! >= 1) {\r\n        DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.add('constUpgradeSingle')\r\n        DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeSingleAvailable')\r\n      } else if (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]!).times(G.constUpgradeCosts[i]!))) {\r\n        DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.add('constUpgradeSingleAvailable')\r\n      } else {\r\n        DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeSingleAvailable')\r\n        DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeSingle')\r\n      }\r\n    }\r\n  }\r\n\r\n  if (G.currentTab === 'ant') {\r\n    (player.reincarnationPoints.gte(player.firstCostAnts)) ? DOMCacheGetOrSet('anttier1').classList.add('antTierBtnAvailable') : DOMCacheGetOrSet('anttier1').classList.remove('antTierBtnAvailable')\r\n    for (let i = 2; i <= 8; i++) {\r\n      const costAnts = player[`${G.ordinals[(i - 1) as ZeroToSeven]}CostAnts` as const]\r\n      player.antPoints.gte(costAnts)\r\n        ? DOMCacheGetOrSet(`anttier${i}`).classList.add('antTierBtnAvailable')\r\n        : DOMCacheGetOrSet(`anttier${i}`).classList.remove('antTierBtnAvailable')\r\n    }\r\n    for (let i = 1; i <= 12; i++) {\r\n      player.antPoints.gte(Decimal.pow(G.antUpgradeCostIncreases[i-1], player.antUpgrades[i-1]! * G.extinctionMultiplier[player.usedCorruptions[10]]).times(G.antUpgradeBaseCost[i-1]))\r\n        ? DOMCacheGetOrSet(`antUpgrade${i}`).classList.add('antUpgradeBtnAvailable')\r\n        : DOMCacheGetOrSet(`antUpgrade${i}`).classList.remove('antUpgradeBtnAvailable')\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateChallengeDisplay = () => {\r\n  //Sets background colors on load/challenge initiation\r\n  for (let k = 1; k <= 15; k++) {\r\n    const el = DOMCacheGetOrSet(`challenge${k}`)\r\n    el.classList.remove('challengeActive')\r\n    if (player.currentChallenge.transcension === k) {\r\n      el.classList.add('challengeActive')\r\n    }\r\n    if (player.currentChallenge.reincarnation === k) {\r\n      el.classList.add('challengeActive')\r\n    }\r\n    if (player.currentChallenge.ascension === k) {\r\n      el.classList.add('challengeActive')\r\n    }\r\n  }\r\n  //Corrects HTML on retry challenges button\r\n  if (player.retrychallenges) {\r\n    DOMCacheGetOrSet('retryChallenge').textContent = i18next.t('challenges.retryChallengesOn')\r\n  } else {\r\n    DOMCacheGetOrSet('retryChallenge').textContent = i18next.t('challenges.retryChallengesOff')\r\n  }\r\n  for (let k = 1; k <= 15; k++) {\r\n    updateChallengeLevel(k)\r\n  }\r\n}\r\n\r\nexport const updateChallengeLevel = (k: number) => {\r\n  const el = DOMCacheGetOrSet(`challenge${k}level`)\r\n  const maxChallenges = getMaxChallenges(k)\r\n\r\n  if (k === 15) {\r\n    el.textContent = format(player.challenge15Exponent, 0, true)\r\n  } else {\r\n    el.textContent = `${player.challengecompletions[k]}/${maxChallenges}`\r\n  }\r\n}\r\n\r\nexport const updateAchievementBG = () => {\r\n  //When loading/importing, the game needs to correctly update achievement backgrounds.\r\n  for (let i = 1; i <= 280; i++) { //Initiates by setting all to default\r\n    DOMCacheGetOrSet(`ach${i}`).style.backgroundColor = ''\r\n  }\r\n  const fixDisplay1 = document.getElementsByClassName('purpleach') as HTMLCollectionOf<HTMLElement>\r\n  const fixDisplay2 = document.getElementsByClassName('redach') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < fixDisplay1.length; i++) {\r\n    fixDisplay1[i].style.backgroundColor = 'purple' //Sets the appropriate achs to purple\r\n  }\r\n  for (let i = 0; i < fixDisplay2.length; i++) {\r\n    fixDisplay2[i].style.backgroundColor = 'maroon' //Sets the appropriate achs to maroon (red)\r\n  }\r\n  for (let i = 1; i < player.achievements.length; i++) {\r\n    if (player.achievements[i] > 0.5) {\r\n      achievementaward(i) //This sets all completed ach to green\r\n    }\r\n  }\r\n}\r\n\r\nexport const showCorruptionStatsLoadouts = () => {\r\n  if (player.corruptionShowStats) {\r\n    DOMCacheGetOrSet('corruptionStats').style.display = 'flex'\r\n    DOMCacheGetOrSet('corruptionLoadouts').style.display = 'none'\r\n    DOMCacheGetOrSet('corrStatsBtn').style.borderColor = 'dodgerblue'\r\n    DOMCacheGetOrSet('corrLoadoutsBtn').style.borderColor = 'white'\r\n  } else {\r\n    DOMCacheGetOrSet('corruptionStats').style.display = 'none'\r\n    DOMCacheGetOrSet('corruptionLoadouts').style.display = 'flex'\r\n    DOMCacheGetOrSet('corrStatsBtn').style.borderColor = 'white'\r\n    DOMCacheGetOrSet('corrLoadoutsBtn').style.borderColor = 'dodgerblue'\r\n  }\r\n}\r\n\r\nconst updateAscensionStats = () => {\r\n  const t = player.ascensionCounter\r\n  const [cubes, tess, hyper, platonic, hepteract] = CalcCorruptionStuff().slice(4)\r\n  const addedAsterisk = (player.singularityUpgrades.oneMind.getEffect().bonus)\r\n  const fillers: Record<string, string> = {\r\n    'ascLen': formatTimeShort((player.ascStatToggles[6] ? player.ascensionCounter : player.ascensionCounterReal), 0),\r\n    'ascCubes': format(cubes * (player.ascStatToggles[1] ? 1 : 1 / t), 2),\r\n    'ascTess': format(tess * (player.ascStatToggles[2] ? 1 : 1 / t), 3),\r\n    'ascHyper': format(hyper * (player.ascStatToggles[3] ? 1 : 1 / t), 4),\r\n    'ascPlatonic': format(platonic * (player.ascStatToggles[4] ? 1 : 1 / t), 5),\r\n    'ascHepteract': format(hepteract * (player.ascStatToggles[5] ? 1 : 1 / t), 3),\r\n    'ascC10': `${format(player.challengecompletions[10])}`,\r\n    'ascTimeAccel': `${format(calculateTimeAcceleration().mult, 3)}x`,\r\n    'ascAscensionTimeAccel': `${format(calculateAscensionAcceleration(), 3)}x${addedAsterisk ? '*' : ''}`,\r\n    'ascSingularityCount': format(player.singularityCount),\r\n    'ascSingLen': formatTimeShort(player.singularityCounter)\r\n  }\r\n  for (const key in fillers) {\r\n    const dom = DOMCacheGetOrSet(key)\r\n    if (dom.textContent !== fillers[key]) {\r\n      dom.textContent = fillers[key]\r\n    }\r\n  }\r\n}\r\n\r\nconst tabColors: Record<string, string> = {\r\n  buildings: 'yellow',\r\n  upgrades: 'yellow',\r\n  achievements: 'white',\r\n  runes: 'cyan',\r\n  challenges: 'plum',\r\n  researches: 'green',\r\n  ants: 'brown',\r\n  cubes: 'purple',\r\n  traits: 'orange',\r\n  settings: 'white',\r\n  shop: 'limegreen'\r\n}\r\n\r\nexport const changeTabColor = () => {\r\n  const tab = DOMCacheGetOrSet('tabBorder')\r\n  const color = G.currentTab in tabColors\r\n    ? tabColors[G.currentTab]\r\n    : 'yellow'\r\n\r\n  tab.style.backgroundColor = color\r\n}\r\n\r\nconst ConfirmCB = (text: string, cb: (value: boolean) => void) => {\r\n  const conf = DOMCacheGetOrSet('confirmationBox')\r\n  const confWrap = DOMCacheGetOrSet('confirmWrapper')\r\n  const popup = DOMCacheGetOrSet('confirm')\r\n  const overlay = DOMCacheGetOrSet('transparentBG')\r\n  const ok = DOMCacheGetOrSet('ok_confirm')\r\n  const cancel = DOMCacheGetOrSet('cancel_confirm')\r\n\r\n  DOMCacheGetOrSet('alertWrapper').style.display = 'none'\r\n  DOMCacheGetOrSet('promptWrapper').style.display = 'none'\r\n\r\n  conf.style.display = 'block'\r\n  confWrap.style.display = 'block'\r\n  overlay.style.display = 'block'\r\n    popup.querySelector('p')!.textContent = text\r\n    popup.focus()\r\n\r\n    // IF you clean up the typing here also clean up PromptCB\r\n    const listener = ({ target }: MouseEvent | { target: HTMLElement }) => {\r\n      const targetEl = target as HTMLButtonElement\r\n      ok.removeEventListener('click', listener)\r\n      cancel.removeEventListener('click', listener)\r\n      popup.removeEventListener('keyup', kbListener)\r\n\r\n      conf.style.display = 'none'\r\n      confWrap.style.display = 'none'\r\n      overlay.style.display = 'none'\r\n\r\n      if (targetEl === ok) {\r\n        cb(true)\r\n      } else {\r\n        cb(false)\r\n      }\r\n    }\r\n\r\n    const kbListener = (e: KeyboardEvent) => {\r\n      if (e.key === 'Enter' || e.key === ' ') {\r\n        return listener({ target: ok })\r\n      } else if (e.key === 'Escape') {\r\n        return listener({ target: cancel })\r\n      }\r\n\r\n      return e.preventDefault()\r\n    }\r\n\r\n    ok.addEventListener('click', listener)\r\n    cancel.addEventListener('click', listener)\r\n    popup.addEventListener('keyup', kbListener)\r\n}\r\n\r\nconst AlertCB = (text: string, cb: (value: undefined) => void) => {\r\n  const conf = DOMCacheGetOrSet('confirmationBox')\r\n  const alertWrap = DOMCacheGetOrSet('alertWrapper')\r\n  const overlay = DOMCacheGetOrSet('transparentBG')\r\n  const popup = DOMCacheGetOrSet('alert')\r\n  const ok = DOMCacheGetOrSet('ok_alert')\r\n\r\n  DOMCacheGetOrSet('confirmWrapper').style.display = 'none'\r\n  DOMCacheGetOrSet('promptWrapper').style.display = 'none'\r\n\r\n  conf.style.display = 'block'\r\n  alertWrap.style.display = 'block'\r\n  overlay.style.display = 'block'\r\n    popup.querySelector('p')!.textContent = text\r\n    popup.focus()\r\n\r\n    const listener = () => {\r\n      ok.removeEventListener('click', listener)\r\n      popup.removeEventListener('keyup', kbListener)\r\n\r\n      conf.style.display = 'none'\r\n      alertWrap.style.display = 'none'\r\n      overlay.style.display = 'none'\r\n      cb(undefined)\r\n    }\r\n\r\n    const kbListener = (e: KeyboardEvent) => (e.key === 'Enter' || e.key === ' ') && listener()\r\n\r\n    ok.addEventListener('click', listener)\r\n    popup.addEventListener('keyup', kbListener)\r\n}\r\n\r\nexport const PromptCB = (text: string, cb: (value: string | null) => void) => {\r\n  const conf = DOMCacheGetOrSet('confirmationBox')\r\n  const confWrap = DOMCacheGetOrSet('promptWrapper')\r\n  const overlay = DOMCacheGetOrSet('transparentBG')\r\n  const popup = DOMCacheGetOrSet('prompt')\r\n  const ok = DOMCacheGetOrSet('ok_prompt')\r\n  const cancel = DOMCacheGetOrSet('cancel_prompt')\r\n\r\n  DOMCacheGetOrSet('alertWrapper').style.display = 'none'\r\n  DOMCacheGetOrSet('confirmWrapper').style.display = 'none'\r\n\r\n  conf.style.display = 'block'\r\n  confWrap.style.display = 'block'\r\n  overlay.style.display = 'block'\r\n    popup.querySelector('label')!.textContent = text\r\n    popup.querySelector('input')!.focus()\r\n\r\n    // kinda disgusting types but whatever\r\n    const listener = ({ target }: MouseEvent | { target: HTMLElement }) => {\r\n      const targetEl = target as HTMLButtonElement\r\n      const el = targetEl.parentNode!.querySelector('input')!\r\n\r\n      ok.removeEventListener('click', listener)\r\n      cancel.removeEventListener('click', listener)\r\n        popup.querySelector('input')!.removeEventListener('keyup', kbListener)\r\n\r\n        conf.style.display = 'none'\r\n        confWrap.style.display = 'none'\r\n        overlay.style.display = 'none'\r\n\r\n        if (targetEl.id === ok.id) {\r\n          cb(el.value)\r\n        } else {\r\n          cb(null)\r\n        } // canceled\r\n\r\n        el.value = el.textContent = ''\r\n        popup.querySelector('input')!.blur()\r\n    }\r\n\r\n    const kbListener = (e: KeyboardEvent) => {\r\n      if (e.key === 'Enter') {\r\n        return listener({ target: ok })\r\n      } else if (e.key === 'Escape') {\r\n        return listener({ target: cancel })\r\n      }\r\n\r\n      return e.preventDefault()\r\n    }\r\n\r\n    ok.addEventListener('click', listener)\r\n    cancel.addEventListener('click', listener)\r\n    popup.querySelector('input')!.addEventListener('keyup', kbListener)\r\n}\r\n\r\nlet closeNotification: ReturnType<typeof setTimeout>\r\nlet closedNotification: ReturnType<typeof setTimeout>\r\n\r\nconst NotificationCB = (text: string, time = 30000, cb: () => void) => {\r\n  const notification = DOMCacheGetOrSet('notification')\r\n  const textNode = document.querySelector<HTMLElement>('#notification > p')!\r\n  const x = DOMCacheGetOrSet('notifx')\r\n\r\n  textNode.textContent = text\r\n  notification.style.display = 'block'\r\n  notification.classList.remove('slide-out')\r\n  notification.classList.add('slide-in')\r\n\r\n  const closed = () => {\r\n    notification.style.display = 'none'\r\n    textNode.textContent = ''\r\n    closedNotification = 0\r\n  }\r\n\r\n  const close = () => {\r\n    notification.classList.add('slide-out')\r\n    notification.classList.remove('slide-in')\r\n\r\n    closeNotification = 0\r\n    x.removeEventListener('click', close)\r\n    closedNotification = setTimeout(closed, 1000)\r\n    cb()\r\n  }\r\n\r\n  x.addEventListener('click', close)\r\n  // Reset the close timer if reopened before closed\r\n  if (closeNotification > 0) {\r\n    clearTimeout(closeNotification)\r\n  }\r\n  if (closedNotification > 0) {\r\n    clearTimeout(closedNotification)\r\n  }\r\n  // automatically close out after <time> ms\r\n  closeNotification = setTimeout(close, time)\r\n}\r\n\r\n/*** Promisified version of the AlertCB function. */\r\n// eslint-disable-next-line no-promise-executor-return\r\nexport const Alert = (text: string): Promise<undefined> => new Promise(res => AlertCB(text, res))\r\n/*** Promisified version of the PromptCB function. */\r\n// eslint-disable-next-line no-promise-executor-return\r\nexport const Prompt = (text: string): Promise<string | null> => new Promise(res => PromptCB(text, res))\r\n/*** Promisified version of the ConfirmCB function */\r\n// eslint-disable-next-line no-promise-executor-return\r\nexport const Confirm = (text: string): Promise<boolean> => new Promise(res => ConfirmCB(text, res))\r\n/*** Promisified version of the NotificationCB function */\r\n// eslint-disable-next-line no-promise-executor-return\r\nexport const Notification = (text: string, time?: number): Promise<void> => new Promise(res => NotificationCB(text, time, res))\r\n\r\n/**\r\n * Create a popunder under an element.\r\n * @example\r\n * popunder(document.querySelector('.currencyContainer'), () => player.coins);\r\n * @param el Element to create the popunder under\r\n * @param v function that returns the value to format\r\n */\r\n/*const popunder = (\r\n    el: HTMLElement,\r\n    v: () => Parameters<typeof format>[0]\r\n) => {\r\n    const id: 'khafraIsAwesome' = 'khafraIsAwesome' as const; // DO NOT CHANGE!\r\n    el.addEventListener('mouseenter', (ev) => {\r\n        const isOnPage = DOMCacheGetOrSet(id);\r\n        if (isOnPage !== null)\r\n            document.body.removeChild(isOnPage);\r\n\r\n        const hover = ev.target as HTMLElement;\r\n        const popunder = document.createElement('div');\r\n        popunder.setAttribute('id', id);\r\n        popunder.textContent =  format(v(), undefined, undefined, false);\r\n\r\n        popunder.style.setProperty('position', 'absolute');\r\n        popunder.style.setProperty('text-align', 'center');\r\n        popunder.style.setProperty('height', `${hover.offsetHeight}px`);\r\n        popunder.style.setProperty('width', `${hover.offsetWidth}px`);\r\n        popunder.style.setProperty('top', `${hover.offsetTop + hover.offsetHeight}px`);\r\n        popunder.style.setProperty('left', `${hover.offsetLeft}px`);\r\n        popunder.style.setProperty('background-color', 'red');\r\n\r\n        document.body.appendChild(popunder);\r\n    });\r\n\r\n    el.addEventListener('mouseleave', () => {\r\n        const isOnPage = DOMCacheGetOrSet(id);\r\n        if (isOnPage !== null)\r\n            document.body.removeChild(isOnPage);\r\n    });\r\n}\r\n\r\nObject.defineProperty(window, 'popunder', { value: popunder });*/\r\n", "import { updateChallengeDisplay, showCorruptionStatsLoadouts, Prompt, Alert } from './UpdateHTML'\r\nimport { player, format, resetCheck } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { visualUpdateAmbrosia, visualUpdateCubes, visualUpdateOcteracts } from './UpdateVisuals'\r\nimport { calculateRuneLevels } from './Calculate'\r\nimport { reset, resetrepeat } from './Reset'\r\nimport { autoResearchEnabled } from './Research'\r\nimport { achievementaward } from './Achievements'\r\nimport { getChallengeConditions } from './Challenges'\r\nimport { corruptionDisplay, corruptionLoadoutTableUpdate, maxCorruptionLevel } from './Corruptions'\r\nimport type { BuildingSubtab, Player } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\nimport { subTabsInMainTab } from './Tabs'\r\n\r\nexport const toggleSettings = (toggle: HTMLElement) => {\r\n  const toggleId = toggle.getAttribute('toggleId') ?? 1\r\n  if (player.toggles[+toggleId]) {\r\n    player.toggles[+toggleId] = false\r\n  } else {\r\n    player.toggles[+toggleId] = true\r\n  }\r\n  const format = toggle.getAttribute('format')\r\n\r\n  if (format === '$' || format === '[$]') {\r\n    const text = player.toggles[+toggleId] ? i18next.t('general.on') : i18next.t('general.off')\r\n    toggle.textContent = format === '[$]' ? `[${text}]` : text\r\n  } else if (format === 'Auto Catalyze: $') {\r\n    const text = player.toggles[+toggleId] ? i18next.t('shop.autoCatalyzeOn') : i18next.t('shop.autoCatalyzeOff')\r\n    toggle.textContent = text\r\n  } else if (format === 'Hover-to-Buy [$]') {\r\n    const text = player.toggles[+toggleId] ? i18next.t('researches.hoverToBuyOn') : i18next.t('researches.hoverToBuyOff')\r\n    toggle.textContent = text\r\n  } else if (format === 'Auto: $') {\r\n    const text = player.toggles[+toggleId] ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\r\n    toggle.textContent = text\r\n  } else if (format) {\r\n    const finishedString = format.replace('$', player.toggles[+toggleId] ? 'ON' : 'OFF')\r\n    toggle.textContent = finishedString\r\n  } else {\r\n    toggle.textContent = player.toggles[+toggleId]\r\n      ? i18next.t('general.autoOnBracket')\r\n      : i18next.t('general.autoOffBracket')\r\n  }\r\n\r\n  toggle.style.border = '2px solid ' + (player.toggles[+toggleId] ? 'green' : 'red')\r\n}\r\n\r\nexport const toggleChallenges = (i: number, auto = false) => {\r\n  if ((i <= 5)) {\r\n    if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2) {\r\n      player.currentChallenge.transcension = i\r\n      reset('transcensionChallenge', false, 'enterChallenge')\r\n      player.transcendCount -= 1\r\n    }\r\n    if (!player.currentChallenge.reincarnation && !document.querySelector('.resetbtn.hover')) {\r\n      resetrepeat('transcensionChallenge')\r\n    }\r\n  }\r\n  if ((i >= 6 && i < 11)) {\r\n    if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2) {\r\n      player.currentChallenge.reincarnation = i\r\n      reset('reincarnationChallenge', false, 'enterChallenge')\r\n      player.reincarnationCount -= 1\r\n    }\r\n    if (!document.querySelector('.resetbtn.hover')) {\r\n      resetrepeat('reincarnationChallenge')\r\n    }\r\n  }\r\n  if (i >= 11 && ((!auto && !player.toggles[31]) || player.challengecompletions[10] > 0 || (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0 && player.currentChallenge.ascension === 0))) {\r\n    if (player.currentChallenge.ascension === 15) {\r\n      void resetCheck('ascensionChallenge', false, true)\r\n    }\r\n    player.currentChallenge.ascension = i\r\n    reset('ascensionChallenge', false, 'enterChallenge')\r\n  }\r\n  updateChallengeDisplay()\r\n  getChallengeConditions(i)\r\n\r\n  if (i <= 10 && !auto && player.autoChallengeRunning) {\r\n    toggleAutoChallengeRun()\r\n  }\r\n\r\n  if (player.currentChallenge.transcension !== 0 && player.currentChallenge.reincarnation !== 0 && player.currentChallenge.ascension !== 0 && player.achievements[238] < 1) {\r\n    achievementaward(238)\r\n  }\r\n}\r\n\r\ntype ToggleBuy = 'coin' | 'crystal' | 'mythos' | 'particle' | 'offering' | 'tesseract'\r\n\r\nexport const toggleBuyAmount = (quantity: 1 | 10 | 100 | 1000 | 10000 | 100000, type: ToggleBuy) => {\r\n  player[`${type}buyamount` as const] = quantity\r\n  const a = ['one', 'ten', 'hundred', 'thousand', '10k', '100k'][quantity.toString().length - 1]\r\n\r\n  DOMCacheGetOrSet(`${type}${a}`).style.backgroundColor = 'Green'\r\n  if (quantity !== 1) {\r\n    DOMCacheGetOrSet(`${type}one`).style.backgroundColor = ''\r\n  }\r\n  if (quantity !== 10) {\r\n    DOMCacheGetOrSet(`${type}ten`).style.backgroundColor = ''\r\n  }\r\n  if (quantity !== 100) {\r\n    DOMCacheGetOrSet(`${type}hundred`).style.backgroundColor = ''\r\n  }\r\n  if (quantity !== 1000) {\r\n    DOMCacheGetOrSet(`${type}thousand`).style.backgroundColor = ''\r\n  }\r\n  if (quantity !== 10000) {\r\n    DOMCacheGetOrSet(`${type}10k`).style.backgroundColor = ''\r\n  }\r\n  if (quantity !== 100000) {\r\n    DOMCacheGetOrSet(`${type}100k`).style.backgroundColor = ''\r\n  }\r\n}\r\n\r\ntype upgradeAutos = 'coin' | 'prestige' | 'transcend' | 'generators' | 'reincarnate'\r\n\r\n/**\r\n * Updates Auto Upgrade Border Colors if applicable, or updates the status of an upgrade toggle as optional.\r\n * @param toggle Targets a specific upgrade toggle if provided\r\n */\r\nexport const toggleShops = (toggle?: upgradeAutos) => {\r\n  // toggle provided: we do not want to update every button\r\n  if (toggle) {\r\n    player.shoptoggles[toggle] = !player.shoptoggles[toggle]\r\n    DOMCacheGetOrSet(`${toggle}AutoUpgrade`).style.borderColor = player.shoptoggles[toggle] ? 'green' : 'red'\r\n\r\n    if (player.shoptoggles[toggle]) {\r\n      DOMCacheGetOrSet(`${toggle}AutoUpgrade`).textContent = i18next.t('general.autoOnColon')\r\n    } else {\r\n      DOMCacheGetOrSet(`${toggle}AutoUpgrade`).textContent = i18next.t('general.autoOffColon')\r\n    }\r\n  } else {\r\n    const keys = Object.keys(player.shoptoggles) as (keyof Player['shoptoggles'])[]\r\n    for (const key of keys) {\r\n      const color = player.shoptoggles[key]? 'green': 'red'\r\n\r\n      if (player.shoptoggles[key]) {\r\n        DOMCacheGetOrSet(`${key}AutoUpgrade`).textContent = i18next.t('general.autoOnColon')\r\n      } else {\r\n        DOMCacheGetOrSet(`${key}AutoUpgrade`).textContent = i18next.t('general.autoOffColon')\r\n      }\r\n\r\n      DOMCacheGetOrSet(`${key}AutoUpgrade`).style.borderColor = color\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleautoreset = (i: number) => {\r\n  if (i === 1) {\r\n    if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\r\n      player.resettoggle1 = 2\r\n      DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    } else {\r\n      player.resettoggle1 = 1\r\n      DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n  } else if (i === 2) {\r\n    if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\r\n      player.resettoggle2 = 2\r\n      DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    } else {\r\n      player.resettoggle2 = 1\r\n      DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n  } else if (i === 3) {\r\n    if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\r\n      player.resettoggle3 = 2\r\n      DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    } else {\r\n      player.resettoggle3 = 1\r\n      DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n  } else if (i === 4) {\r\n    if (player.resettoggle4 === 1 || player.resettoggle4 === 0) {\r\n      player.resettoggle4 = 2\r\n      DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modePercentage')\r\n    } else {\r\n      player.resettoggle4 = 1\r\n      DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleautobuytesseract = () => {\r\n  if (player.tesseractAutoBuyerToggle === 1 || player.tesseractAutoBuyerToggle === 0) {\r\n    player.tesseractAutoBuyerToggle = 2\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOff')\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid red'\r\n\r\n  } else {\r\n    player.tesseractAutoBuyerToggle = 1\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOn')\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid green'\r\n  }\r\n}\r\n\r\nexport const toggleauto = () => {\r\n  const toggles = Array.from<HTMLElement>(document.querySelectorAll('.auto[toggleid]'))\r\n  for (const toggle of toggles) {\r\n    const format = toggle.getAttribute('format')\r\n    const toggleId = toggle.getAttribute('toggleId') ?? 1\r\n\r\n    if (format === '$') {\r\n      const text = player.toggles[+toggleId] ? i18next.t('general.on') : i18next.t('general.off')\r\n      toggle.textContent = text\r\n    } else if (format === 'Auto Catalyze: $') {\r\n      const text = player.toggles[+toggleId] ? i18next.t('shop.autoCatalyzeOn') : i18next.t('shop.autoCatalyzeOff')\r\n      toggle.textContent = text\r\n    } else if (format === 'Hover-to-Buy [$]') {\r\n      const text = player.toggles[+toggleId] ? i18next.t('researches.hoverToBuyOn') : i18next.t('researches.hoverToBuyOff')\r\n      toggle.textContent = text\r\n    } else if (format === 'Auto: $') {\r\n      const text = player.toggles[+toggleId] ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\r\n      toggle.textContent = text\r\n    } else if (format) {\r\n      const finishedString = format.replace('$', player.toggles[+toggleId] ? 'ON' : 'OFF')\r\n      toggle.textContent = finishedString\r\n    } else {\r\n      toggle.textContent = player.toggles[+toggleId]\r\n        ? i18next.t('general.autoOnBracket')\r\n        : i18next.t('general.autoOffBracket')\r\n    }\r\n\r\n    toggle.style.border = '2px solid ' + (player.toggles[+toggleId] ? 'green' : 'red')\r\n  }\r\n\r\n  const tesseractAutos = Array.from<HTMLElement>(document.querySelectorAll('*[id^=\"tesseractAutoToggle\"]'))\r\n\r\n  for (let j = 0; j < tesseractAutos.length; j++) {\r\n    const auto = tesseractAutos[j]\r\n\r\n    if (player.autoTesseracts[j + 1]) {\r\n      auto.textContent = i18next.t('general.autoOnBracket')\r\n      auto.style.border = '2px solid green'\r\n    } else {\r\n      auto.textContent = i18next.t('general.autoOffBracket')\r\n      auto.style.border = '2px solid red'\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleResearchBuy = () => {\r\n  if (player.researchBuyMaxToggle) {\r\n    player.researchBuyMaxToggle = false\r\n    DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeOne')\r\n  } else {\r\n    player.researchBuyMaxToggle = true\r\n    DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeMax')\r\n  }\r\n}\r\n\r\nexport const toggleAutoResearch = () => {\r\n  const el = DOMCacheGetOrSet('toggleautoresearch')\r\n  if (player.autoResearchToggle || player.shopUpgrades.obtainiumAuto < 1) {\r\n    player.autoResearchToggle = false\r\n    el.textContent = i18next.t('researches.automaticOff')\r\n    DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n    player.autoResearch = 0\r\n  } else {\r\n    player.autoResearchToggle = true\r\n    el.textContent = i18next.t('researches.automaticOn')\r\n  }\r\n\r\n  if (player.autoResearchToggle && autoResearchEnabled() && player.autoResearchMode === 'cheapest') {\r\n    player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n  }\r\n\r\n}\r\n\r\nexport const toggleAutoResearchMode = () => {\r\n  const el = DOMCacheGetOrSet('toggleautoresearchmode')\r\n  if (player.autoResearchMode === 'cheapest' || !autoResearchEnabled()) {\r\n    player.autoResearchMode = 'manual'\r\n    el.textContent = i18next.t('researches.autoModeManual')\r\n  } else {\r\n    player.autoResearchMode = 'cheapest'\r\n    el.textContent = i18next.t('researches.autoModeCheapest')\r\n  }\r\n  DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n\r\n  if (player.autoResearchToggle && autoResearchEnabled() && player.autoResearchMode === 'cheapest') {\r\n    player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n  }\r\n}\r\n\r\nexport const toggleAutoSacrifice = (index: number) => {\r\n  const el = DOMCacheGetOrSet('toggleautosacrifice')\r\n  if (index === 0) {\r\n    if (player.autoSacrificeToggle) {\r\n      player.autoSacrificeToggle = false\r\n      el.textContent = i18next.t('runes.blessings.autoRuneOff')\r\n      el.style.border = '2px solid red'\r\n      player.autoSacrifice = 0\r\n    } else {\r\n      player.autoSacrificeToggle = true\r\n      player.saveOfferingToggle = false\r\n      el.textContent = i18next.t('runes.blessings.autoRuneOn')\r\n      el.style.border = '2px solid green'\r\n      DOMCacheGetOrSet('saveOffToggle').textContent = i18next.t('toggles.saveOfferingsOff')\r\n      DOMCacheGetOrSet('saveOffToggle').style.color = 'white'\r\n    }\r\n  } else if (player.autoSacrificeToggle && player.shopUpgrades.offeringAuto > 0.5) {\r\n    if (player.autoSacrifice === index) {\r\n      player.autoSacrifice = 0\r\n    } else {\r\n      player.autoSacrifice = index\r\n    }\r\n  }\r\n  for (let i = 1; i <= 5; i++) {\r\n    DOMCacheGetOrSet(`rune${i}`).style.backgroundColor = player.autoSacrifice === i ? 'orange' : ''\r\n  }\r\n  calculateRuneLevels()\r\n}\r\n\r\nexport const toggleAutoBuyFragment = () => {\r\n  const el = DOMCacheGetOrSet('toggleautoBuyFragments')\r\n  if (player.autoBuyFragment) {\r\n    el.textContent = i18next.t('runes.talismans.autoBuyOff')\r\n    el.style.border = '2px solid orange'\r\n    el.style.color = 'white'\r\n  } else {\r\n    el.textContent = i18next.t('runes.talismans.autoBuyOn')\r\n    el.style.border = '2px solid white'\r\n    el.style.color = 'orange'\r\n  }\r\n\r\n  player.autoBuyFragment = !player.autoBuyFragment\r\n}\r\n\r\nexport const toggleBuildingScreen = (input: BuildingSubtab) => {\r\n  G.buildingSubTab = input\r\n  const screen: Record<string, { screen: string, button: string, subtabNumber: number }> = {\r\n    'coin': {\r\n      screen: 'coinBuildings',\r\n      button: 'switchToCoinBuilding',\r\n      subtabNumber: 0\r\n    },\r\n    'diamond': {\r\n      screen: 'prestige',\r\n      button: 'switchToDiamondBuilding',\r\n      subtabNumber: 1\r\n    },\r\n    'mythos': {\r\n      screen: 'transcension',\r\n      button: 'switchToMythosBuilding',\r\n      subtabNumber: 2\r\n    },\r\n    'particle': {\r\n      screen: 'reincarnation',\r\n      button: 'switchToParticleBuilding',\r\n      subtabNumber: 3\r\n    },\r\n    'tesseract': {\r\n      screen: 'ascension',\r\n      button: 'switchToTesseractBuilding',\r\n      subtabNumber: 4\r\n    }\r\n  }\r\n  for (const key in screen) {\r\n    DOMCacheGetOrSet(screen[key].screen).style.display = 'none'\r\n    DOMCacheGetOrSet(screen[key].button).style.backgroundColor = ''\r\n  }\r\n  DOMCacheGetOrSet(screen[G.buildingSubTab].screen).style.display = 'flex'\r\n  DOMCacheGetOrSet(screen[G.buildingSubTab].button).style.backgroundColor = 'crimson'\r\n  player.subtabNumber = screen[G.buildingSubTab].subtabNumber\r\n}\r\n\r\nexport const toggleRuneScreen = (index: number) => {\r\n  const screens = ['runes', 'talismans', 'blessings', 'spirits']\r\n  G.runescreen = screens[index - 1]\r\n\r\n  for (let i = 1; i <= 4; i++) {\r\n    const a = DOMCacheGetOrSet(`toggleRuneSubTab${i}`)\r\n    const b = DOMCacheGetOrSet(`runeContainer${i}`)\r\n    if (i === index) {\r\n      a.style.border = '2px solid gold'\r\n      a.style.backgroundColor = 'crimson'\r\n      b.style.display = 'flex'\r\n    } else {\r\n      a.style.border = '2px solid silver'\r\n      a.style.backgroundColor = ''\r\n      b.style.display = 'none'\r\n    }\r\n  }\r\n  player.subtabNumber = index - 1\r\n}\r\n\r\nexport const toggleautofortify = () => {\r\n  const el = DOMCacheGetOrSet('toggleautofortify')\r\n  if (player.autoFortifyToggle) {\r\n    el.textContent = i18next.t('runes.autoFortifyOff')\r\n    el.style.border = '2px solid red'\r\n  } else {\r\n    el.textContent = i18next.t('runes.autoFortifyOn')\r\n    el.style.border = '2px solid green'\r\n  }\r\n\r\n  player.autoFortifyToggle = !player.autoFortifyToggle\r\n}\r\n\r\nexport const toggleautoenhance = () => {\r\n  const el = DOMCacheGetOrSet('toggleautoenhance')\r\n  if (player.autoEnhanceToggle) {\r\n    el.textContent = i18next.t('runes.autoEnhanceOff')\r\n    el.style.border = '2px solid red'\r\n  } else {\r\n    el.textContent = i18next.t('runes.autoEnhanceOn')\r\n    el.style.border = '2px solid green'\r\n  }\r\n\r\n  player.autoEnhanceToggle = !player.autoEnhanceToggle\r\n}\r\n\r\nexport const toggleSaveOff = () => {\r\n  const el = DOMCacheGetOrSet('saveOffToggle')\r\n  const et = DOMCacheGetOrSet('toggleautosacrifice')\r\n  if (player.saveOfferingToggle) {\r\n    player.autoSacrificeToggle = true\r\n    el.textContent = i18next.t('toggles.saveOfferingsOff')\r\n    el.style.color = 'white'\r\n    et.textContent = 'Auto Runes: ON'\r\n    et.style.border = '2px solid green'\r\n  } else {\r\n    player.autoSacrificeToggle = false\r\n    el.textContent = i18next.t('toggles.saveOfferingsOn')\r\n    el.style.color = 'yellow'\r\n    et.textContent = 'Auto Runes: OFF'\r\n    et.style.border = '2px solid red'\r\n  }\r\n\r\n  player.saveOfferingToggle = !player.saveOfferingToggle\r\n}\r\n\r\nexport const toggleSingularityScreen = (index: number) => {\r\n  for (let i = 1; i <= 6; i++) {\r\n    const a = DOMCacheGetOrSet(`toggleSingularitySubTab${i}`)\r\n    const b = DOMCacheGetOrSet(`singularityContainer${i}`)\r\n    if (i === index) {\r\n      a.style.backgroundColor = 'crimson'\r\n      b.style.display = 'block'\r\n    } else {\r\n      a.style.backgroundColor = ''\r\n      b.style.display = 'none'\r\n    }\r\n  }\r\n  player.subtabNumber = index - 1\r\n\r\n  if (player.subtabNumber === 3) {\r\n    visualUpdateOcteracts()\r\n  }\r\n\r\n  if (player.subtabNumber === 5) {\r\n    visualUpdateAmbrosia()\r\n  }\r\n}\r\n\r\ninterface ChadContributor {\r\n    login: string\r\n    id: number\r\n    node_id: string\r\n    avatar_url: string\r\n    gravatar_id: string\r\n    url: string\r\n    html_url: string\r\n    followers_url: string\r\n    following_url: string\r\n    gists_url: string\r\n    starred_url: string\r\n    subscriptions_url: string\r\n    organizations_url: string\r\n    repos_url: string\r\n    events_url: string\r\n    received_events_url: string\r\n    type: string\r\n    site_admin: boolean\r\n    contributions: number\r\n}\r\n\r\nexport const setActiveSettingScreen = async (subtab: string, clickedButton: HTMLButtonElement) => {\r\n  const subtabEl = DOMCacheGetOrSet(subtab)\r\n  if (subtabEl.classList.contains('subtabActive')) {\r\n    return\r\n  }\r\n\r\n  const switcherEl = clickedButton.parentNode!\r\n  switcherEl.querySelectorAll('.buttonActive').forEach(b => b.classList.remove('buttonActive'))\r\n  clickedButton.classList.add('buttonActive')\r\n\r\n    subtabEl.parentNode!.querySelectorAll('.subtabActive').forEach(subtab => subtab.classList.remove('subtabActive'))\r\n    subtabEl.classList.add('subtabActive')\r\n\r\n    if (subtab === 'creditssubtab') {\r\n      const credits = DOMCacheGetOrSet('creditList')\r\n      const artists = DOMCacheGetOrSet('artistList')\r\n\r\n      if (credits.childElementCount > 0 || artists.childElementCount > 0) {\r\n        return\r\n      } else if (!navigator.onLine || document.hidden) {\r\n        return\r\n      }\r\n\r\n      try {\r\n        const r = await fetch('https://api.github.com/repos/pseudo-corp/SynergismOfficial/contributors', {\r\n          headers: {\r\n            'Accept': 'application/vnd.github.v3+json'\r\n          }\r\n        })\r\n        const j = await r.json() as ChadContributor[]\r\n\r\n        for (const contributor of j) {\r\n          const div = document.createElement('div')\r\n          div.classList.add('credit')\r\n\r\n          const img = new Image(32, 32)\r\n          img.src = contributor.avatar_url\r\n          img.alt = contributor.login\r\n\r\n          const a = document.createElement('a')\r\n          a.href = `https://github.com/Pseudo-Corp/SynergismOfficial/commits?author=${contributor.login}`\r\n          a.textContent = contributor.login\r\n          a.target = '_blank'\r\n          a.rel = 'noopener noreferrer nofollow'\r\n\r\n          div.appendChild(img)\r\n          div.appendChild(a)\r\n\r\n          credits.appendChild(div)\r\n        }\r\n      } catch (e) {\r\n        const err = e as Error\r\n        credits.appendChild(document.createTextNode(err.toString()))\r\n      }\r\n\r\n      try {\r\n        const r = await fetch('https://api.github.com/gists/01917ff476d25a141c5bad38340cd756', {\r\n          headers: {\r\n            'Accept': 'application/vnd.github.v3+json'\r\n          }\r\n        })\r\n\r\n        const j = await r.json() as { files: Record<string, { content: string }> }\r\n        const f = JSON.parse(j.files['synergism_artists.json'].content) as string[]\r\n\r\n        for (const user of f) {\r\n          const p = document.createElement('p')\r\n          p.textContent = user\r\n\r\n          artists.appendChild(p)\r\n        }\r\n      } catch (e) {\r\n        const err = e as Error\r\n        credits.appendChild(document.createTextNode(err.toString()))\r\n      }\r\n    }\r\n}\r\n\r\nexport const toggleShopConfirmation = () => {\r\n  const el = DOMCacheGetOrSet('toggleConfirmShop')\r\n  el.textContent = player.shopConfirmationToggle\r\n    ? i18next.t('shop.shopConfirmationOff')\r\n    : i18next.t('shop.shopConfirmationOn')\r\n\r\n  player.shopConfirmationToggle = !player.shopConfirmationToggle\r\n}\r\n\r\nexport const toggleBuyMaxShop = (event: MouseEvent) => {\r\n  const el = DOMCacheGetOrSet('toggleBuyMaxShopText')\r\n  if (event.shiftKey) {\r\n    el.textContent = i18next.t('shop.buyAny')\r\n    player.shopBuyMaxToggle = 'ANY'\r\n    return\r\n  }\r\n\r\n  switch (player.shopBuyMaxToggle) {\r\n    case false:\r\n      el.innerHTML = i18next.t('shop.buy10')\r\n      player.shopBuyMaxToggle = 'TEN'\r\n      break\r\n    case 'TEN':\r\n      el.innerHTML = i18next.t('shop.buyMax')\r\n      player.shopBuyMaxToggle = true\r\n      break\r\n    default:\r\n      el.innerHTML = i18next.t('shop.buy1')\r\n      player.shopBuyMaxToggle = false\r\n  }\r\n}\r\n\r\nexport const toggleHideShop = () => {\r\n  const el = DOMCacheGetOrSet('toggleHideShop')\r\n  el.textContent = player.shopHideToggle\r\n    ? i18next.t('shop.hideMaxedOff')\r\n    : i18next.t('shop.hideMaxedOn')\r\n\r\n  player.shopHideToggle = !player.shopHideToggle\r\n}\r\n\r\nexport const toggleAntMaxBuy = () => {\r\n  const el = DOMCacheGetOrSet('toggleAntMax')\r\n  el.textContent = player.antMax\r\n    ? i18next.t('general.buyMaxOff')\r\n    : i18next.t('general.buyMaxOn')\r\n\r\n  player.antMax = !player.antMax\r\n}\r\n\r\nexport const toggleAntAutoSacrifice = (mode = 0) => {\r\n  if (mode === 0) {\r\n    const el = DOMCacheGetOrSet('toggleAutoSacrificeAnt')\r\n    if (player.autoAntSacrifice) {\r\n      player.autoAntSacrifice = false\r\n      el.textContent = i18next.t('ants.autoSacrificeOff')\r\n    } else {\r\n      player.autoAntSacrifice = true\r\n      el.textContent = i18next.t('ants.autoSacrificeOn')\r\n    }\r\n  } else if (mode === 1) {\r\n    const el = DOMCacheGetOrSet('autoSacrificeAntMode')\r\n    if (player.autoAntSacrificeMode === 1 || player.autoAntSacrificeMode === 0) {\r\n      player.autoAntSacrificeMode = 2\r\n      el.textContent = i18next.t('ants.modeRealTime')\r\n    } else {\r\n      player.autoAntSacrificeMode = 1\r\n      el.textContent = i18next.t('ants.modeInGameTime')\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleMaxBuyCube = () => {\r\n  const el = DOMCacheGetOrSet('toggleCubeBuy')\r\n  if (player.cubeUpgradesBuyMaxToggle) {\r\n    player.cubeUpgradesBuyMaxToggle = false\r\n    el.textContent = i18next.t('toggles.upgradeOneLevelWow')\r\n  } else {\r\n    player.cubeUpgradesBuyMaxToggle = true\r\n    el.textContent = i18next.t('toggles.upgradeMaxIfPossible')\r\n  }\r\n}\r\n\r\nexport const autoCubeUpgradesToggle = (toggle = true) => {\r\n  if (toggle) {\r\n    player.autoCubeUpgradesToggle = !player.autoCubeUpgradesToggle\r\n  }\r\n  const el = DOMCacheGetOrSet('toggleAutoCubeUpgrades')\r\n  if (player.autoCubeUpgradesToggle) {\r\n    el.textContent = i18next.t('toggles.autoUpgradeOn')\r\n    el.style.border = '2px solid green'\r\n  } else {\r\n    el.textContent = i18next.t('toggles.autoUpgradeOff')\r\n    el.style.border = '2px solid red'\r\n  }\r\n}\r\n\r\nexport const autoPlatonicUpgradesToggle = (toggle = true) => {\r\n  if (toggle) {\r\n    player.autoPlatonicUpgradesToggle = !player.autoPlatonicUpgradesToggle\r\n  }\r\n  const el = DOMCacheGetOrSet('toggleAutoPlatonicUpgrades')\r\n  if (player.autoPlatonicUpgradesToggle) {\r\n    el.textContent = i18next.t('toggles.autoUpgradeOn')\r\n    el.style.border = '2px solid green'\r\n  } else {\r\n    el.textContent = i18next.t('toggles.autoUpgradeOff')\r\n    el.style.border = '2px solid red'\r\n  }\r\n}\r\n\r\nexport const toggleCubeSubTab = (i: number) => {\r\n  const numSubTabs = subTabsInMainTab('cube')\r\n\r\n  for (let j = 1; j <= numSubTabs; j++) {\r\n    const cubeTab = DOMCacheGetOrSet(`cubeTab${j}`)\r\n    if (cubeTab.style.display === 'flex' && j !== i) {\r\n      cubeTab.style.display = 'none'\r\n    }\r\n    if (cubeTab.style.display === 'none' && j === i) {\r\n      cubeTab.style.display = 'flex'\r\n      player.subtabNumber = j - 1\r\n    }\r\n    DOMCacheGetOrSet(`switchCubeSubTab${j}`).style.backgroundColor = i === j ? 'crimson' : ''\r\n  }\r\n\r\n  visualUpdateCubes()\r\n}\r\n\r\nexport const updateAutoChallenge = (i: number) => {\r\n  switch (i) {\r\n    case 1: {\r\n      const t = parseFloat((DOMCacheGetOrSet('startAutoChallengeTimerInput') as HTMLInputElement).value) || 0\r\n      player.autoChallengeTimer.start = Math.max(t, 0)\r\n      DOMCacheGetOrSet('startTimerValue').innerHTML = i18next.t('challenges.timeStartSweep', {\r\n        time: format(player.autoChallengeTimer.start, 2, true)\r\n      })\r\n      return\r\n    }\r\n    case 2: {\r\n      const u = parseFloat((DOMCacheGetOrSet('exitAutoChallengeTimerInput') as HTMLInputElement).value) || 0\r\n      player.autoChallengeTimer.exit = Math.max(u, 0)\r\n\r\n      DOMCacheGetOrSet('exitTimerValue').innerHTML = i18next.t('challenges.timeExitChallenge', {\r\n        time: format(player.autoChallengeTimer.exit, 2, true)\r\n      })\r\n\r\n      return\r\n    }\r\n    case 3: {\r\n      const v = parseFloat((DOMCacheGetOrSet('enterAutoChallengeTimerInput') as HTMLInputElement).value) || 0\r\n      player.autoChallengeTimer.enter = Math.max(v, 0)\r\n\r\n      DOMCacheGetOrSet('enterTimerValue').innerHTML = i18next.t('challenges.timeEnterChallenge', {\r\n        time: format(player.autoChallengeTimer.enter, 2, true)\r\n      })\r\n\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleAutoChallengesIgnore = (i: number) => {\r\n  if (i <= 15) {\r\n    player.autoChallengeToggles[i] = !player.autoChallengeToggles[i]\r\n\r\n    const el = DOMCacheGetOrSet('toggleAutoChallengeIgnore')\r\n    el.style.border = player.autoChallengeToggles[i] ? '2px solid green' : '2px solid red'\r\n\r\n    if (i >= 11 && i <= 15) {\r\n      if (player.autoChallengeToggles[i]) {\r\n        el.textContent = i18next.t('challenges.autoAscRunChalOn', { x: i })\r\n      } else {\r\n        el.textContent = i18next.t('challenges.autoAscRunChalOff', { x: i })\r\n      }\r\n    } else {\r\n      if (player.autoChallengeToggles[i]) {\r\n        el.textContent = i18next.t('challenges.autoRunChalOn', { x: i })\r\n      } else {\r\n        el.textContent = i18next.t('challenges.autoRunChalOff', { x: i })\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleAutoChallengeRun = () => {\r\n  const el = DOMCacheGetOrSet('toggleAutoChallengeStart')\r\n  if (player.autoChallengeRunning) {\r\n    el.style.border = '2px solid red'\r\n    el.textContent = i18next.t('challenges.autoChallengeSweepOff')\r\n    G.autoChallengeTimerIncrement = 0\r\n    toggleAutoChallengeModeText('OFF')\r\n  } else {\r\n    el.style.border = '2px solid gold'\r\n    el.textContent = i18next.t('challenges.autoChallengeSweepOn')\r\n    toggleAutoChallengeModeText('START')\r\n    G.autoChallengeTimerIncrement = 0\r\n  }\r\n\r\n  player.autoChallengeRunning = !player.autoChallengeRunning\r\n}\r\n\r\nexport const toggleAutoChallengeModeText = (i: string) => {\r\n  const a = DOMCacheGetOrSet('autoChallengeType')\r\n\r\n  a.textContent = i18next.t(`challenges.mode${i[0] + i.slice(1).toLowerCase()}`)\r\n}\r\n\r\nexport const toggleAutoAscend = (mode = 0) => {\r\n  if (mode === 0) {\r\n    const a = DOMCacheGetOrSet('ascensionAutoEnable')\r\n    if (player.autoAscend) {\r\n      a.style.border = '2px solid red'\r\n      a.textContent = i18next.t('corruptions.autoAscend.off')\r\n    } else {\r\n      a.style.border = '2px solid green'\r\n      a.textContent = i18next.t('corruptions.autoAscend.on')\r\n    }\r\n\r\n    player.autoAscend = !player.autoAscend\r\n  } else if (mode === 1 && player.highestSingularityCount >= 25) {\r\n    const a = DOMCacheGetOrSet('ascensionAutoToggle')\r\n    if (player.autoAscendMode === 'c10Completions') {\r\n      player.autoAscendMode = 'realAscensionTime'\r\n      a.textContent = i18next.t('corruptions.autoAscend.modeRealTime')\r\n    } else {\r\n      player.autoAscendMode = 'c10Completions'\r\n      a.textContent = i18next.t('corruptions.autoAscend.modeCompletions')\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleautoopensCubes = (i: number) => {\r\n  if (player.highestSingularityCount >= 35) {\r\n    if (i === 1) {\r\n      const oc = DOMCacheGetOrSet('openCubes')\r\n      const oci = DOMCacheGetOrSet('cubeOpensInput')\r\n      if (player.autoOpenCubes) {\r\n        oc.textContent = i18next.t('wowCubes.autoOff')\r\n        oc.style.border = '1px solid red'\r\n        oci.style.border = '1px solid red'\r\n      } else {\r\n        oc.textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openCubes, 0) })\r\n        oc.style.border = '1px solid green'\r\n        oci.style.border = '1px solid green'\r\n      }\r\n\r\n      player.autoOpenCubes = !player.autoOpenCubes\r\n    } else if (i === 2) {\r\n      const oc = DOMCacheGetOrSet('openTesseracts')\r\n      const oci = DOMCacheGetOrSet('tesseractsOpensInput')\r\n      if (player.autoOpenTesseracts) {\r\n        oc.textContent = i18next.t('wowCubes.autoOff')\r\n        oc.style.border = '1px solid red'\r\n        oci.style.border = '1px solid red'\r\n      } else {\r\n        oc.textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openTesseracts, 0) })\r\n        oc.style.border = '1px solid green'\r\n        oci.style.border = '1px solid green'\r\n      }\r\n\r\n      player.autoOpenTesseracts = !player.autoOpenTesseracts\r\n    } else if (i === 3) {\r\n      const oc = DOMCacheGetOrSet('openHypercubes')\r\n      const oci = DOMCacheGetOrSet('hypercubesOpensInput')\r\n      if (player.autoOpenHypercubes) {\r\n        oc.textContent = i18next.t('wowCubes.autoOff')\r\n        oc.style.border = '1px solid red'\r\n        oci.style.border = '1px solid red'\r\n      } else {\r\n        oc.textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openHypercubes, 0) })\r\n        oc.style.border = '1px solid green'\r\n        oci.style.border = '1px solid green'\r\n      }\r\n\r\n      player.autoOpenHypercubes = !player.autoOpenHypercubes\r\n    } else if (i === 4) {\r\n      const oc = DOMCacheGetOrSet('openPlatonicCube')\r\n      const oci = DOMCacheGetOrSet('platonicCubeOpensInput')\r\n      if (player.autoOpenPlatonicsCubes) {\r\n        oc.textContent = i18next.t('wowCubes.autoOff')\r\n        oc.style.border = '1px solid red'\r\n        oci.style.border = '1px solid red'\r\n      } else {\r\n        oc.textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openPlatonicsCubes, 0) })\r\n        oc.style.border = '1px solid green'\r\n        oci.style.border = '1px solid green'\r\n      }\r\n\r\n      player.autoOpenPlatonicsCubes = !player.autoOpenPlatonicsCubes\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateRuneBlessingBuyAmount = (i: number) => {\r\n  switch (i) {\r\n    case 1: {\r\n      const t = Math.floor(parseFloat((DOMCacheGetOrSet('buyRuneBlessingInput') as HTMLInputElement).value)) || 1\r\n      player.runeBlessingBuyAmount = Math.max(t, 1)\r\n      DOMCacheGetOrSet('buyRuneBlessingToggle').innerHTML = i18next.t('runes.blessings.buyUpTo', {\r\n        amount: format(player.runeBlessingBuyAmount)\r\n      })\r\n      return\r\n    }\r\n    case 2: {\r\n      const u = Math.floor(parseFloat((DOMCacheGetOrSet('buyRuneSpiritInput') as HTMLInputElement).value)) || 1\r\n      player.runeSpiritBuyAmount = Math.max(u, 1)\r\n      DOMCacheGetOrSet('buyRuneSpiritToggleValue').innerHTML = i18next.t('runes.spirits.buyUpTo', {\r\n        amount: format(player.runeSpiritBuyAmount)\r\n      })\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleAutoTesseracts = (i: number) => {\r\n  const el = DOMCacheGetOrSet(`tesseractAutoToggle${i}`)\r\n  if (player.autoTesseracts[i]) {\r\n    el.textContent = i18next.t('general.autoOffBracket')\r\n    el.style.border = '2px solid red'\r\n  } else {\r\n    el.textContent = i18next.t('general.autoOnBracket')\r\n    el.style.border = '2px solid green'\r\n  }\r\n\r\n  player.autoTesseracts[i] = !player.autoTesseracts[i]\r\n}\r\n\r\nexport const toggleCorruptionLevel = (index: number, value: number) => {\r\n  const current = player.prototypeCorruptions[index]\r\n  const maxCorruption = maxCorruptionLevel()\r\n  if (value > 0 && current < maxCorruption && 0 < index && index <= 9) {\r\n    player.prototypeCorruptions[index] += Math.min(maxCorruption - current, value)\r\n  }\r\n  if (value < 0 && current > 0 && 0 < index && index <= 9) {\r\n    player.prototypeCorruptions[index] -= Math.min(current, -value)\r\n  }\r\n  player.prototypeCorruptions[index] = Math.min(maxCorruption, Math.max(0, player.prototypeCorruptions[index]))\r\n  if (value === 999 && player.currentChallenge.ascension !== 15) {\r\n    for (let i = 0; i <= 9; i++) {\r\n      player.usedCorruptions[i] = 0\r\n      player.prototypeCorruptions[i] = 0\r\n      if (i > 1) {\r\n        corruptionDisplay(i)\r\n      }\r\n    }\r\n\r\n    corruptionDisplay(G.corruptionTrigger)\r\n    DOMCacheGetOrSet('corruptionCleanseConfirm').style.visibility = 'hidden'\r\n\r\n    if (player.currentChallenge.ascension === 15) {\r\n      void resetCheck('ascensionChallenge', false, true)\r\n    }\r\n  }\r\n  corruptionDisplay(index)\r\n  corruptionLoadoutTableUpdate()\r\n}\r\n\r\nexport const toggleCorruptionLoadoutsStats = (stats: boolean) => {\r\n  player.corruptionShowStats = stats\r\n  showCorruptionStatsLoadouts()\r\n}\r\n\r\nexport const toggleAscStatPerSecond = (id: number) => {\r\n  const el = DOMCacheGetOrSet(`unit${id}`) as HTMLElement | null\r\n  if (el === null) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(id, 'platonic needs to fix')\r\n    return\r\n  }\r\n\r\n  el.textContent = player.ascStatToggles[id] ? '/s' : ''\r\n  if (id === 6) {\r\n    el.textContent = ''\r\n  }\r\n  player.ascStatToggles[id] = !player.ascStatToggles[id]\r\n}\r\n\r\nexport const toggleHepteractAutoPercentage = async(): Promise<void> => {\r\n  const amount = await Prompt(i18next.t('wowCubes.hepteractForge.autoCraftPercentagePrompt'))\r\n\r\n  if (amount === null) {\r\n    if (player.toggles[35]) {\r\n      return Alert(i18next.t('toggles.percentKeptAt', { x: player.hepteractAutoCraftPercentage }))\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n\r\n  const isPercentage = amount.endsWith('%')\r\n  const rawPercentage = isPercentage ? Number(amount.slice(0, -1)) : Number(amount)\r\n\r\n  if (Number.isNaN(rawPercentage) || !Number.isFinite(rawPercentage) || !Number.isInteger(rawPercentage)) {\r\n    return Alert(i18next.t('general.validation.finiteInt'))\r\n  } else if (rawPercentage < 0 || rawPercentage > 100) {\r\n    return Alert(i18next.t('toggles.percentBetweenInclusive', { x: 0, y: 100 }))\r\n  } else if (rawPercentage === player.hepteractAutoCraftPercentage && player.toggles[35]) {\r\n    return Alert(i18next.t('toggles.percentKeptAt', { x: player.hepteractAutoCraftPercentage }))\r\n  }\r\n\r\n  player.hepteractAutoCraftPercentage = rawPercentage\r\n  DOMCacheGetOrSet('autoHepteractPercentage').textContent = i18next.t('wowCubes.hepteractForge.autoSetting', {\r\n    x: `${player.hepteractAutoCraftPercentage}`\r\n  })\r\n  if (player.toggles[35]) {\r\n    return Alert(i18next.t('toggles.onAscensionHepteractsCraft', {\r\n      x: player.hepteractAutoCraftPercentage\r\n    }))\r\n  }\r\n}\r\n\r\nexport const confirmReply = (confirm = true) => {\r\n  if (DOMCacheGetOrSet('alertWrapper').style.display === 'block') {\r\n    (DOMCacheGetOrSet('ok_alert') as HTMLButtonElement).click()\r\n  }\r\n  if (DOMCacheGetOrSet('confirmWrapper').style.display === 'block' || DOMCacheGetOrSet('promptWrapper').style.display === 'block') {\r\n    if (confirm) {\r\n      (DOMCacheGetOrSet('ok_confirm') as HTMLButtonElement).click()\r\n    } else {\r\n      (DOMCacheGetOrSet('cancel_confirm') as HTMLButtonElement).click()\r\n    }\r\n  }\r\n}\r\n", "import Decimal from 'break_infinity.js'\r\nimport { player, format, resetCheck } from './Synergism'\r\nimport { toggleAutoChallengeModeText, toggleChallenges } from './Toggles'\r\nimport { Globals as G } from './Variables'\r\nimport { calculateRuneLevels } from './Calculate'\r\nimport { hepteractEffective } from './Hepteracts'\r\nimport { productContents } from './Utility'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { autoResearchEnabled } from './Research'\r\nimport i18next from 'i18next'\r\n\r\nexport const getMaxChallenges = (i: number) => {\r\n  let maxChallenge = 0\r\n  //Transcension Challenges\r\n  if (i <= 5) {\r\n    if (player.singularityChallenges.oneChallengeCap.enabled) {\r\n      return 1\r\n    }\r\n    //Start with base 25 max completions\r\n    maxChallenge = 25\r\n    //Check Research 5x5 ('Infinite' T. Challenges)\r\n    if (player.researches[105] > 0) {\r\n      return 9001\r\n    }\r\n    //Max T. Challenge depends on researches 3x16 to 3x20\r\n    maxChallenge += 5 * player.researches[65 + i]\r\n    return maxChallenge\r\n  }\r\n  //Reincarnation Challenges\r\n  if (i <= 10 && i > 5) {\r\n    if (player.singularityChallenges.oneChallengeCap.enabled) {\r\n      return 1\r\n    }\r\n    //Start with base of 40 max completions\r\n    maxChallenge = 40\r\n    //Cube Upgrade 2x9: +4/level\r\n    maxChallenge += 4 * player.cubeUpgrades[29]\r\n    //Shop Upgrade \"Challenge Extension\": +2/level\r\n    maxChallenge += 2 * player.shopUpgrades.challengeExtension\r\n    //Platonic Upgrade 5 (ALPHA): +10\r\n    if (player.platonicUpgrades[5] > 0) {\r\n      maxChallenge += 10\r\n    }\r\n    //Platonic Upgrade 10 (BETA): +10\r\n    if (player.platonicUpgrades[10] > 0) {\r\n      maxChallenge += 10\r\n    }\r\n    //Platonic Upgrade 15 (OMEGA): +30\r\n    if (player.platonicUpgrades[15] > 0) {\r\n      maxChallenge += 30\r\n    }\r\n\r\n    maxChallenge += 2 * +player.singularityUpgrades.singChallengeExtension.getEffect().bonus\r\n    maxChallenge += 2 * +player.singularityUpgrades.singChallengeExtension2.getEffect().bonus\r\n    maxChallenge += 2 * +player.singularityUpgrades.singChallengeExtension3.getEffect().bonus\r\n\r\n    maxChallenge += +player.singularityChallenges.oneChallengeCap.rewards.capIncrease\r\n    return maxChallenge\r\n  }\r\n  //Ascension Challenge\r\n  if (i <= 15 && i > 10) {\r\n    //Challenge 15 has no formal cap, so return 9001.\r\n    if (i === 15) {\r\n      return 0\r\n    }\r\n    if (player.singularityChallenges.oneChallengeCap.enabled) {\r\n      return 1\r\n    }\r\n    //Start with base of 30 max completions\r\n    maxChallenge = 30\r\n    //Platonic Upgrade 5 (ALPHA): +5\r\n    if (player.platonicUpgrades[5] > 0) {\r\n      maxChallenge += 5\r\n    }\r\n    //Platonic Upgrade 10 (BETA): +5\r\n    if (player.platonicUpgrades[10] > 0) {\r\n      maxChallenge += 5\r\n    }\r\n    //Platonic Upgrade 15 (OMEGA): +20\r\n    if (player.platonicUpgrades[15] > 0) {\r\n      maxChallenge += 20\r\n    }\r\n\r\n    maxChallenge += +player.singularityUpgrades.singChallengeExtension.getEffect().bonus\r\n    maxChallenge += +player.singularityUpgrades.singChallengeExtension2.getEffect().bonus\r\n    maxChallenge += +player.singularityUpgrades.singChallengeExtension3.getEffect().bonus\r\n    return maxChallenge\r\n  }\r\n\r\n  return maxChallenge\r\n}\r\n\r\nexport const challengeDisplay = (i: number, changefocus = true) => {\r\n  let quarksMultiplier = 1\r\n\r\n  if (changefocus) {\r\n    G.challengefocus = i\r\n    DOMCacheGetOrSet('oneChallengeDetails').style.display = 'flex'\r\n    DOMCacheGetOrSet('startChallenge').style.display = 'block'\r\n    DOMCacheGetOrSet('retryChallenge').style.display = 'block'\r\n    G.triggerChallenge = i\r\n  }\r\n\r\n  const maxChallenges = getMaxChallenges(i)\r\n  if (i <= 5 && changefocus) {\r\n    if (player.challengecompletions[i] >= 100) {\r\n      DOMCacheGetOrSet('completionSoftcap').innerHTML = i18next.t('challenges.perCompletionBonus', {\r\n        x: 100,\r\n        y: format(CalcECC('transcend', player.challengecompletions[i]), 2, true)\r\n      })\r\n    } else {\r\n      DOMCacheGetOrSet('completionSoftcap').textContent = i18next.t('challenges.perCompletionBonusEmpty')\r\n    }\r\n  }\r\n\r\n\r\n  if (i > 5 && i <= 10) {\r\n    quarksMultiplier = 10\r\n    if (player.challengecompletions[i] >= 25 && changefocus) {\r\n      DOMCacheGetOrSet('completionSoftcap').innerHTML = i18next.t('challenges.perCompletionBonus', {\r\n        x: 25,\r\n        y: format(CalcECC('reincarnation', player.challengecompletions[i]), 2, true)\r\n      })\r\n    } else {\r\n      DOMCacheGetOrSet('completionSoftcap').textContent = i18next.t('challenges.perCompletionBonusEmpty')\r\n    }\r\n  }\r\n  if (i > 10) {\r\n    if (player.challengecompletions[i] >= 10) {\r\n      DOMCacheGetOrSet('completionSoftcap').innerHTML = i18next.t('challenges.perCompletionBonus', {\r\n        x: 10,\r\n        y: format(CalcECC('ascension', player.challengecompletions[i]), 2, true)\r\n      })\r\n    } else {\r\n      DOMCacheGetOrSet('completionSoftcap').textContent = i18next.t('challenges.perCompletionBonusEmpty')\r\n    }\r\n  }\r\n  let descriptor = ''\r\n  const a = DOMCacheGetOrSet('challengeName')\r\n  const b = DOMCacheGetOrSet('challengeFlavor')\r\n  const c = DOMCacheGetOrSet('challengeRestrictions')\r\n  const d = DOMCacheGetOrSet('challengeGoal')\r\n  const e = DOMCacheGetOrSet('challengePer1').childNodes[0]\r\n  const f = DOMCacheGetOrSet('challengePer2').childNodes[0]\r\n  const g = DOMCacheGetOrSet('challengePer3').childNodes[0]\r\n  const h = DOMCacheGetOrSet('challengeFirst1')\r\n  const j = DOMCacheGetOrSet('challengeQuarkBonus')\r\n  const k = DOMCacheGetOrSet('startChallenge')\r\n  const l = DOMCacheGetOrSet('challengeCurrent1')\r\n  const m = DOMCacheGetOrSet('challengeCurrent2')\r\n  const n = DOMCacheGetOrSet('challengeCurrent3')\r\n\r\n  if (i === G.challengefocus) {\r\n    const completions = `${player.challengecompletions[i]}/${format(maxChallenges)}`\r\n    const special = (i >= 6 && i <= 10) || i === 15\r\n    const goal = format(challengeRequirement(i, player.challengecompletions[i], special ? i : 0))\r\n\r\n    let current1 = ''\r\n    let current2 = ''\r\n    let current3 = ''\r\n\r\n    switch (i) {\r\n      case 1: {\r\n        current1 = current2 = format(10 * CalcECC('transcend', player.challengecompletions[1]))\r\n        current3 = format(0.04 * CalcECC('transcend', player.challengecompletions[1]), 2, true)\r\n        break\r\n      }\r\n      case 2: {\r\n        current1 = current2 = format(5 * CalcECC('transcend', player.challengecompletions[2]))\r\n        break\r\n      }\r\n      case 3: {\r\n        current1 = format(0.04 * player.challengecompletions[3], 2, true)\r\n        current2 = format(0.5 * CalcECC('transcend', player.challengecompletions[3]), 2, true)\r\n        current3 = format(0.01 * CalcECC('transcend', player.challengecompletions[3]), 2, true)\r\n        break\r\n      }\r\n      case 4: {\r\n        current1 = format(5 * CalcECC('transcend', player.challengecompletions[4]))\r\n        current2 = format(2 * CalcECC('transcend', player.challengecompletions[4]))\r\n        current3 = format(0.5 * CalcECC('transcend', player.challengecompletions[4]), 2, true)\r\n        break\r\n      }\r\n      case 5: {\r\n        current1 = format(0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100, 2, true)\r\n        current2 = format(Math.pow(10, CalcECC('transcend', player.challengecompletions[5])))\r\n        break\r\n      }\r\n      case 6: {\r\n        current1 = format(Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6])), 3, true)\r\n        current2 = format(10 * CalcECC('reincarnation', player.challengecompletions[6]))\r\n        current3 = format(2 * CalcECC('reincarnation', player.challengecompletions[6]))\r\n        break\r\n      }\r\n      case 7: {\r\n        current1 = format(1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7]), 2, true)\r\n        current2 = current3 = format(10 * CalcECC('reincarnation', player.challengecompletions[7]))\r\n        break\r\n      }\r\n      case 8: {\r\n        current1 = format(0.25 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true)\r\n        current2 = format(20 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true)\r\n        current3 = format(4 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true)\r\n        break\r\n      }\r\n      case 9: {\r\n        current1 = format(CalcECC('reincarnation', player.challengecompletions[9]))\r\n        current2 = format(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])), 2, true)\r\n        current3 = format(20 * CalcECC('reincarnation', player.challengecompletions[9]), 2, true)\r\n        break\r\n      }\r\n      case 10: {\r\n        current1 = format(100 * CalcECC('reincarnation', player.challengecompletions[10]))\r\n        current2 = format(2 * CalcECC('reincarnation', player.challengecompletions[10]))\r\n        current3 = format(10 * CalcECC('reincarnation', player.challengecompletions[10]), 2, true)\r\n        break\r\n      }\r\n      case 11: {\r\n        current1 = format(12 * CalcECC('ascension', player.challengecompletions[11]))\r\n        current2 = format(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])))\r\n        current3 = format(80 * CalcECC('ascension', player.challengecompletions[11]))\r\n        break\r\n      }\r\n      case 12: {\r\n        current1 = format(50 * CalcECC('ascension', player.challengecompletions[12]))\r\n        current2 = format(12 * CalcECC('ascension', player.challengecompletions[12]))\r\n        current3 = format(CalcECC('ascension', player.challengecompletions[12]))\r\n        break\r\n      }\r\n      case 13: {\r\n        current1 = format(100 - 100 * Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13])), 3, true)\r\n        current2 = format(6 * CalcECC('ascension', player.challengecompletions[13]))\r\n        current3 = format(3 * CalcECC('ascension', player.challengecompletions[13]))\r\n        break\r\n      }\r\n      case 14: {\r\n        current1 = format(50 * CalcECC('ascension', player.challengecompletions[14]))\r\n        current2 = format(1 * player.challengecompletions[14])\r\n        current3 = format(200 * CalcECC('ascension', player.challengecompletions[14]))\r\n        break\r\n      }\r\n    }\r\n\r\n    a.textContent = i18next.t(`challenges.${i}.name`, {\r\n      value: completions,\r\n      completions: player.challengecompletions[i],\r\n      max: maxChallenges\r\n    })\r\n    b.textContent = i18next.t(`challenges.${i}.flavor`)\r\n    c.textContent = i18next.t(`challenges.${i}.restrictions`)\r\n    d.textContent = i18next.t(`challenges.${i}.goal`, { value: goal })\r\n    e.textContent = i18next.t(`challenges.${i}.per.1`)\r\n    f.textContent = i18next.t(`challenges.${i}.per.2`)\r\n    g.textContent = i18next.t(`challenges.${i}.per.3`)\r\n    h.textContent = i18next.t(`challenges.${i}.first`)\r\n    k.textContent = i18next.t(`challenges.${i}.start`)\r\n    l.textContent = i18next.t(`challenges.${i}.current.1`, { value: current1 })\r\n    m.textContent = i18next.t(`challenges.${i}.current.2`, { value: current2 })\r\n    n.textContent = i18next.t(`challenges.${i}.current.3`, { value: current3 })\r\n  }\r\n\r\n  if (i === 15 && G.challengefocus === 15 && maxChallenges === 0) {\r\n    d.textContent = i18next.t('challenges.15.noGoal')\r\n  }\r\n\r\n  const scoreArray1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300]\r\n  const scoreArray2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450]\r\n  const scoreArray3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750]\r\n  const scoreArray4 = [0, 10000, 10000, 10000, 10000, 10000, 2000, 3000, 4000, 5000, 7500]\r\n  let scoreDisplay = 0\r\n  if (i <= 5) {\r\n    if (player.highestchallengecompletions[i] >= 9000) {\r\n      scoreDisplay = scoreArray4[i]\r\n    } else if (player.highestchallengecompletions[i] >= 750) {\r\n      scoreDisplay = scoreArray3[i]\r\n    } else if (player.highestchallengecompletions[i] >= 75) {\r\n      scoreDisplay = scoreArray2[i]\r\n    } else {\r\n      scoreDisplay = scoreArray1[i]\r\n    }\r\n  }\r\n  if (i > 5 && i <= 10) {\r\n    if (player.highestchallengecompletions[i] >= 60) {\r\n      scoreDisplay = scoreArray3[i]\r\n    } else if (player.highestchallengecompletions[i] >= 25) {\r\n      scoreDisplay = scoreArray2[i]\r\n    } else {\r\n      scoreDisplay = scoreArray1[i]\r\n    }\r\n  }\r\n  if (changefocus) {\r\n    j.textContent = ''\r\n  }\r\n  if (player.ascensionCount === 0) {\r\n    descriptor = 'Quarks'\r\n    j.style.color = 'cyan'\r\n  }\r\n  if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount < 1) {\r\n    j.textContent = i18next.t(descriptor ? 'challenges.firstTimeBonusQuarks' : 'challenges.firstTimeBonus', {\r\n      x: Math.floor(quarksMultiplier * player.highestchallengecompletions[i] / 10 + 1 + player.cubeUpgrades[1] + player.cubeUpgrades[11] + player.cubeUpgrades[21] + player.cubeUpgrades[31] + player.cubeUpgrades[41])\r\n    })\r\n  }\r\n  if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount >= 1) {\r\n    j.textContent = i18next.t('challenges.ascensionBankAdd', {\r\n      x: i > 5 ? 2 : 1,\r\n      y: scoreDisplay\r\n    })\r\n  }\r\n  if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < 10 && i > 10) {\r\n    j.textContent = i18next.t('challenges.hypercubeOneTimeBonus')\r\n  }\r\n\r\n  if (changefocus) {\r\n    const el = DOMCacheGetOrSet('toggleAutoChallengeIgnore')\r\n    el.style.display = i <= (autoAscensionChallengeSweepUnlock() ? 15 : 10) && player.researches[150] > 0 ? 'block' : 'none'\r\n    el.style.border = player.autoChallengeToggles[i] ? '2px solid green' : '2px solid red'\r\n\r\n    if (i >= 11 && i <= 15) {\r\n      if (player.autoChallengeToggles[i]) {\r\n        el.textContent = i18next.t('challenges.autoAscRunChalOn', { x: i })\r\n      } else {\r\n        el.textContent = i18next.t('challenges.autoAscRunChalOff', { x: i })\r\n      }\r\n    } else {\r\n      if (player.autoChallengeToggles[i]) {\r\n        el.textContent = i18next.t('challenges.autoRunChalOn', { x: i })\r\n      } else {\r\n        el.textContent = i18next.t('challenges.autoRunChalOff', { x: i })\r\n      }\r\n    }\r\n  }\r\n\r\n  const ella = DOMCacheGetOrSet('toggleAutoChallengeStart');\r\n  (player.autoChallengeRunning) ?\r\n    (ella.textContent = i18next.t('challenges.autoChallengeSweepOn'), ella.style.border = '2px solid gold') :\r\n    (ella.textContent = i18next.t('challenges.autoChallengeSweepOff'), ella.style.border = '2px solid red')\r\n}\r\n\r\nexport const getChallengeConditions = (i?: number) => {\r\n  if (player.currentChallenge.reincarnation === 9) {\r\n    G.rune1level = 1\r\n    G.rune2level = 1\r\n    G.rune3level = 1\r\n    G.rune4level = 1\r\n    G.rune5level = 1\r\n    player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0]\r\n  }\r\n  G.prestigePointGain = new Decimal('0')\r\n  if (typeof i === 'number') {\r\n    if (i >= 6) {\r\n      G.transcendPointGain = new Decimal('0')\r\n    }\r\n    if (i >= 11) {\r\n      G.reincarnationPointGain = new Decimal('0')\r\n    }\r\n  }\r\n  calculateRuneLevels()\r\n}\r\n\r\nexport const toggleRetryChallenges = () => {\r\n  DOMCacheGetOrSet('retryChallenge').textContent = player.retrychallenges\r\n    ? i18next.t('challenges.retryChallengesOff')\r\n    : i18next.t('challenges.retryChallengesOn')\r\n\r\n  player.retrychallenges = !player.retrychallenges\r\n}\r\n\r\nexport const highestChallengeRewards = (chalNum: number, highestValue: number) => {\r\n  let multiplier = 1 / 10\r\n  if (chalNum >= 6) {\r\n    multiplier = 1\r\n  }\r\n  if (player.ascensionCount === 0) {\r\n    player.worlds.add(1 + Math.floor(highestValue * multiplier) * 100 / 100)\r\n  }\r\n  // Addresses a bug where auto research does not work even if you unlock research\r\n  if (autoResearchEnabled() && player.ascensionCount === 0 && chalNum >= 6 && chalNum <= 10) {\r\n    player.roombaResearchIndex = 0\r\n    player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n  }\r\n}\r\n\r\n//Works to mitigate the difficulty of calculating challenge multipliers when considering softcapping\r\nexport const calculateChallengeRequirementMultiplier = (\r\n  type: 'transcend' | 'reincarnation' | 'ascension',\r\n  completions: number,\r\n  special = 0\r\n) => {\r\n  let requirementMultiplier = Math.max(\r\n    1,\r\n    G.hyperchallengedMultiplier[player.usedCorruptions[4]] / (1 + player.platonicUpgrades[8] / 2.5)\r\n  )\r\n  if (type === 'ascension') {\r\n    //Normalize back to 1 if looking at ascension challenges in particular.\r\n    requirementMultiplier = 1\r\n  }\r\n  switch (type) {\r\n    case 'transcend':\r\n      requirementMultiplier *= G.challenge15Rewards.transcendChallengeReduction;\r\n\r\n      (completions >= 75) ?\r\n        requirementMultiplier *= Math.pow(1 + completions, 12) / Math.pow(75, 8) :\r\n        requirementMultiplier *= Math.pow(1 + completions, 2)\r\n\r\n      if (completions >= 1000) {\r\n        requirementMultiplier *= 10 * Math.pow(completions / 1000, 3)\r\n      }\r\n      if (completions >= 9000) {\r\n        requirementMultiplier *= 1337\r\n      }\r\n      if (completions >= 9001) {\r\n        requirementMultiplier *= (completions - 8999)\r\n      }\r\n      return (requirementMultiplier)\r\n    case 'reincarnation':\r\n      if (completions >= 100 && (special === 9 || special === 10)) {\r\n        requirementMultiplier *= Math.pow(1.05, (completions - 100) * (1 + (completions - 100) / 20))\r\n      }\r\n      if (completions >= 90) {\r\n        if (special === 6) {\r\n          requirementMultiplier *= 100\r\n        } else if (special == 7) {\r\n          requirementMultiplier *= 50\r\n        } else if (special == 8) {\r\n          requirementMultiplier *= 10\r\n        } else {\r\n          requirementMultiplier *= 4\r\n        }\r\n      }\r\n      if (completions >= 80) {\r\n        if (special === 6) {\r\n          requirementMultiplier *= 50\r\n        } else if (special === 7) {\r\n          requirementMultiplier *= 20\r\n        } else if (special === 8) {\r\n          requirementMultiplier *= 4\r\n        } else {\r\n          requirementMultiplier *= 2\r\n        }\r\n      }\r\n      if (completions >= 70) {\r\n        if (special === 6) {\r\n          // Multiplier is reduced significantly for challenges requiring mythos shards\r\n          requirementMultiplier *= 20\r\n        } else if (special === 7) {\r\n          requirementMultiplier *= 10\r\n        } else if (special === 8) {\r\n          requirementMultiplier *= 2\r\n        } else {\r\n          requirementMultiplier *= 1\r\n        }\r\n      }\r\n      if (completions >= 60) {\r\n        if (special === 9 || special === 10) {\r\n          requirementMultiplier *= Math.pow(1000, (completions - 60) * (1 - 0.01 * player.shopUpgrades.challengeTome - 0.01 * player.shopUpgrades.challengeTome2) / 10)\r\n        }\r\n      }\r\n      if (completions >= 25) {\r\n        requirementMultiplier *= Math.pow(1 + completions, 5) / 625\r\n      }\r\n      if (completions < 25) {\r\n        requirementMultiplier *= Math.min(Math.pow(1 + completions, 2), Math.pow(1.3797, completions))\r\n      }\r\n      requirementMultiplier *= G.challenge15Rewards.reincarnationChallengeReduction\r\n      return requirementMultiplier\r\n    case 'ascension':\r\n      if (special !== 15) {\r\n        (completions >= 10) ?\r\n          requirementMultiplier *= (2 * (1 + completions) - 10) :\r\n          requirementMultiplier *= (1 + completions)\r\n      } else {\r\n        requirementMultiplier *= Math.pow(1000, completions)\r\n      }\r\n      return (requirementMultiplier)\r\n  }\r\n}\r\n\r\n/**\r\n * Works to mitigate the difficulty of calculating challenge reward multipliers when considering softcapping\r\n */\r\nexport const CalcECC = (type: 'transcend' | 'reincarnation' | 'ascension', completions: number) => { // ECC stands for \"Effective Challenge Completions\"\r\n  let effective = 0\r\n  switch (type) {\r\n    case 'transcend':\r\n      effective += Math.min(100, completions)\r\n      effective += 1 / 20 * (Math.min(1000, Math.max(100, completions)) - 100)\r\n      effective += 1 / 100 * (Math.max(1000, completions) - 1000)\r\n      return (effective)\r\n    case 'reincarnation':\r\n      effective += Math.min(25, completions)\r\n      effective += 1 / 2 * (Math.min(75, Math.max(25, completions)) - 25)\r\n      effective += 1 / 10 * (Math.max(75, completions) - 75)\r\n      return (effective)\r\n    case 'ascension':\r\n      effective += Math.min(10, completions)\r\n      effective += 1 / 2 * (Math.max(10, completions) - 10)\r\n      return (effective)\r\n  }\r\n}\r\n\r\nexport const challengeRequirement = (challenge: number, completion: number, special = 0) => {\r\n  const base = G.challengeBaseRequirements[challenge-1]\r\n  if (challenge <= 5) {\r\n    return Decimal.pow(10, base * calculateChallengeRequirementMultiplier('transcend', completion, special))\r\n  } else if (challenge <= 10) {\r\n    let c10Reduction = 0\r\n    if (challenge === 10) {\r\n      c10Reduction = (1e8 * (player.researches[140] + player.researches[155] + player.researches[170] + player.researches[185]) + 2e7 * (player.shopUpgrades.challengeTome + player.shopUpgrades.challengeTome2))\r\n    }\r\n    return Decimal.pow(10, (base - c10Reduction) * calculateChallengeRequirementMultiplier('reincarnation', completion, special))\r\n  } else if (challenge <= 14) {\r\n    return calculateChallengeRequirementMultiplier('ascension', completion, special)\r\n  } else if (challenge === 15) {\r\n    return Decimal.pow(10, 1 * Math.pow(10, 30) * calculateChallengeRequirementMultiplier('ascension', completion, special))\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n\r\n/**\r\n * Function that handles the autochallenge feature.\r\n * Currently includes ability to enter a challenge, leave a challenge\r\n * and start a challenge loop with specified challenges from index 1 to 10.\r\n * @param dt\r\n * @returns none\r\n */\r\nexport const runChallengeSweep = (dt: number) => {\r\n  // Do not run if any of these conditions hold\r\n  if (\r\n    player.researches[150] === 0 || // Research 6x25 is 0\r\n        !player.autoChallengeRunning // Auto challenge is toggled off\r\n  ) {\r\n    return\r\n  }\r\n\r\n  // Increment auto challenge timer\r\n  G.autoChallengeTimerIncrement += dt\r\n\r\n  // Determine what Action you can take with the current state of the savefile\r\n  let action = 'none'\r\n  if (player.currentChallenge.reincarnation !== 0 ||\r\n        player.currentChallenge.transcension !== 0) {\r\n    // If you are in a challenge, you'd only want the automation to exit the challenge\r\n    action = 'exit'\r\n  } else if (player.autoChallengeIndex === 1) {\r\n    // If the index is set to 1, then you are at the start of a loop\r\n    action = 'start'\r\n  } else {\r\n    // If neither of the above are true, automation will want to enter a challenge\r\n    action = 'enter'\r\n  }\r\n\r\n  // In order to earn C15 Exponent, stop runChallengeSweep() 5 seconds before the auto ascension\r\n  // runs during the C15, Auto Challenge Sweep, Autcension and Mode: Real Time.\r\n  if (autoAscensionChallengeSweepUnlock() && player.currentChallenge.ascension === 15 && player.shopUpgrades.challenge15Auto === 0 &&\r\n        (action === 'start' || action === 'enter') && player.autoAscend && player.challengecompletions[11] > 0 && player.cubeUpgrades[10] > 0 &&\r\n        player.autoAscendMode === 'realAscensionTime' && player.ascensionCounterRealReal >= Math.max(0.1, player.autoAscendThreshold - 5)) {\r\n    action = 'wait'\r\n    toggleAutoChallengeModeText('WAIT')\r\n    return\r\n  }\r\n\r\n  // Action: Exit challenge\r\n  if (G.autoChallengeTimerIncrement >= player.autoChallengeTimer.exit && action === 'exit') {\r\n\r\n    // Determine if you're in a reincarnation or transcension challenge\r\n    const challengeType = player.currentChallenge.reincarnation !== 0 ? 'reincarnation' : 'transcension'\r\n\r\n    // Reset our autochallenge timer\r\n    G.autoChallengeTimerIncrement = 0\r\n\r\n    // Increment our challenge index for when we enter (or start) next challenge\r\n    const nowChallenge = player.autoChallengeIndex\r\n    const nextChallenge = getNextChallenge(nowChallenge + 1)\r\n\r\n    // Reset based on challenge type\r\n    if (challengeType === 'transcension') {\r\n      void resetCheck('transcensionChallenge', undefined, true)\r\n    }\r\n    if (challengeType === 'reincarnation') {\r\n      void resetCheck('reincarnationChallenge', undefined, true)\r\n    }\r\n\r\n    // If you don't need to start all the challenges, the challenges will end.\r\n    if (nextChallenge <= 10) {\r\n      /* If the next challenge is before the current challenge,\r\n               it will be in 'START' mode, otherwise it will be in 'ENTER' mode. */\r\n      if (nextChallenge < nowChallenge) {\r\n        player.autoChallengeIndex = 1\r\n        toggleAutoChallengeModeText('START')\r\n      } else {\r\n        player.autoChallengeIndex = nextChallenge\r\n        toggleAutoChallengeModeText('ENTER')\r\n      }\r\n    }\r\n    return\r\n  }\r\n\r\n  // Action: Enter a challenge (not inside one)\r\n  if ((G.autoChallengeTimerIncrement >= player.autoChallengeTimer.start && action === 'start') || (G.autoChallengeTimerIncrement >= player.autoChallengeTimer.enter && action === 'enter')) {\r\n\r\n    // Reset our autochallenge timer\r\n    G.autoChallengeTimerIncrement = 0\r\n\r\n    // This calculates which challenge this algorithm will run first, based on\r\n    // the first challenge which has automation toggled ON\r\n    const nowChallenge = player.autoChallengeIndex\r\n    const nextChallenge = getNextChallenge(nowChallenge)\r\n\r\n    // Do not start the challenge if all the challenges have been completed.\r\n    if (nextChallenge === 11) {\r\n      return\r\n    }\r\n\r\n    // Set our index to calculated starting challenge and run the challenge\r\n    player.autoChallengeIndex = nextChallenge\r\n    toggleChallenges(player.autoChallengeIndex, true)\r\n\r\n    // Sets Mode to \"EXIT\" as displayed in the challenge tab\r\n    toggleAutoChallengeModeText('EXIT')\r\n    return\r\n  }\r\n}\r\n\r\n// Look for the next uncompleted challenge.\r\nexport const getNextChallenge = (startChallenge: number, maxSkip = false, min = 1, max = 10) => {\r\n  let nextChallenge = startChallenge\r\n  /* Calculate the smallest challenge index we want to enter.\r\n       Our minimum is the current index, but if that challenge is fully completed\r\n       or toggled off we shouldn't run it, so we increment upwards in these cases. */\r\n  for (let index = nextChallenge; index <= max; index++) {\r\n    if (!player.autoChallengeToggles[index] ||\r\n            (!maxSkip && index !== 15 && player.highestchallengecompletions[index] >= getMaxChallenges(index))) {\r\n      nextChallenge += 1\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n\r\n  /* If the above algorithm sets the index above 10, the loop is complete\r\n       and thus do not need to enter more challenges. This sets our index to 1\r\n       so in the next iteration it knows we want to start a loop. */\r\n  if (nextChallenge > max) {\r\n    // If the challenge reaches 11 or higher, return it to 1 and check again.\r\n    nextChallenge = min\r\n    for (let index = nextChallenge; index <= max; index++) {\r\n      if (!player.autoChallengeToggles[index] ||\r\n                (!maxSkip && index !== 15 && player.highestchallengecompletions[index] >= getMaxChallenges(index))) {\r\n        nextChallenge += 1\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return nextChallenge\r\n}\r\n\r\nexport const autoAscensionChallengeSweepUnlock = () => {\r\n  return player.highestSingularityCount >= 101 && player.shopUpgrades.instantChallenge2 > 0\r\n}\r\n\r\nexport const challenge15ScoreMultiplier = () => {\r\n  const arr = [\r\n    1 + 5/10000 * hepteractEffective('challenge'), // Challenge Hepteract\r\n    1 + 0.25 * player.platonicUpgrades[15] // Omega Upgrade\r\n  ]\r\n  return productContents(arr)\r\n}\r\n", "import { player, format, formatTimeShort } from './Synergism'\r\nimport type { DecimalSource } from 'break_infinity.js'\r\nimport Decimal from 'break_infinity.js'\r\nimport { antSacrificePointsToMultiplier } from './Ants'\r\nimport { Synergism } from './Events'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { Globals as G } from './Variables'\r\nimport { applyCorruptions } from './Corruptions'\r\nimport { Notification } from './UpdateHTML'\r\nimport { IconSets } from './Themes'\r\nimport i18next from 'i18next'\r\n\r\n// The categories are the different tables & storages for each type.\r\nexport type Category = 'ants' | 'reset' | 'ascend' | 'singularity'\r\n// The kinds are the different contents.\r\nexport type Kind = 'antsacrifice' | 'prestige' | 'transcend' | 'reincarnate' | 'ascend' | 'singularity'\r\n\r\n// Common to every kind\r\ninterface ResetHistoryEntryBase {\r\n    date: number\r\n    seconds: number\r\n    kind: Kind\r\n}\r\n\r\nexport type ResetHistoryEntryAntSacrifice = ResetHistoryEntryBase & {\r\n    antSacrificePointsAfter: number\r\n    antSacrificePointsBefore: number\r\n    baseELO: number\r\n    crumbs: string\r\n    crumbsPerSecond: string\r\n    effectiveELO: number\r\n    obtainium: number\r\n    offerings: number\r\n    kind: 'antsacrifice'\r\n}\r\n\r\nexport type ResetHistoryEntryPrestige = ResetHistoryEntryBase & {\r\n    offerings: number\r\n    diamonds: string\r\n    kind: 'prestige'\r\n}\r\nexport type ResetHistoryEntryTranscend = ResetHistoryEntryBase & {\r\n    offerings: number\r\n    mythos: string\r\n    kind: 'transcend'\r\n}\r\nexport type ResetHistoryEntryReincarnate = ResetHistoryEntryBase & {\r\n    offerings: number\r\n    particles: string\r\n    obtainium: number\r\n    kind: 'reincarnate'\r\n}\r\n\r\nexport type ResetHistoryEntryAscend = ResetHistoryEntryBase & {\r\n    c10Completions: number\r\n    usedCorruptions: number[]\r\n    corruptionScore: number\r\n    wowCubes: number\r\n    wowTesseracts: number\r\n    wowHypercubes: number\r\n    wowPlatonicCubes: number\r\n    wowHepteracts: number\r\n    currentChallenge?: number\r\n    kind: 'ascend'\r\n}\r\n\r\nexport interface ResetHistoryEntrySingularity extends ResetHistoryEntryBase {\r\n    singularityCount: number\r\n    quarks: number\r\n    goldenQuarks: number\r\n    wowTribs: number\r\n    tessTribs: number\r\n    hyperTribs: number\r\n    platTribs: number\r\n    octeracts: number\r\n    c15Score: number\r\n    quarkHept: number\r\n    kind: 'singularity'\r\n}\r\n\r\n// The set of common fields (in practice this is equal to the Base).\r\nexport type ResetHistoryEntryUnion =\r\n    ResetHistoryEntryAntSacrifice\r\n    | ResetHistoryEntryPrestige\r\n    | ResetHistoryEntryTranscend\r\n    | ResetHistoryEntryReincarnate\r\n    | ResetHistoryEntryAscend\r\n    | ResetHistoryEntrySingularity\r\n\r\n// The intersection of all of these types is invalid (\"never\") because of the conflicting `kind` field declarations.\r\n// Luckily, we can filter the more specific `kind` fields and still end up with a valid type declaration by using\r\n// the `kind` field from the base.\r\n// Fun fact: This exact field name also happens to be the example in the TypeScript documentation.\r\ntype RemoveKindField<T> = {\r\n    [K in keyof T as Exclude<K, 'kind'>]: T[K]\r\n}\r\n\r\n// The intersection of all possible fields we can possibly find in a history row. We'll keep the kind field from the\r\n// base, which is a simple string.\r\ntype ResetHistoryEntryIntersect =\r\n    ResetHistoryEntryBase\r\n    & Partial<RemoveKindField<ResetHistoryEntryAntSacrifice>>\r\n    & Partial<RemoveKindField<ResetHistoryEntryPrestige>>\r\n    & Partial<RemoveKindField<ResetHistoryEntryTranscend>>\r\n    & Partial<RemoveKindField<ResetHistoryEntryReincarnate>>\r\n    & Partial<RemoveKindField<ResetHistoryEntryAscend>>\r\n    & Partial<RemoveKindField<ResetHistoryEntrySingularity>>\r\n\r\n// The subset of keys that we'll directly print out using generic code.\r\nexport type ResetHistoryGainType = keyof Pick<ResetHistoryEntryIntersect,\r\n    'offerings'\r\n    | 'obtainium'\r\n    | 'particles'\r\n    | 'diamonds'\r\n    | 'mythos'\r\n    | 'wowCubes'\r\n    | 'wowTesseracts'\r\n    | 'wowHypercubes'\r\n    | 'wowPlatonicCubes'\r\n    | 'wowHepteracts'\r\n    | 'singularityCount'\r\n    | 'quarks'\r\n    | 'goldenQuarks'\r\n    | 'wowTribs'\r\n    | 'tessTribs'\r\n    | 'hyperTribs'\r\n    | 'platTribs'\r\n    | 'octeracts'\r\n    | 'c15Score'\r\n    | 'quarkHept'>\r\n\r\n// A formatter that allows formatting a string. The string should be in a form parsable by break_infinity.js.\r\nconst formatDecimalSource = (numOrStr: DecimalSource) => {\r\n  return format(typeof numOrStr === 'string' ? new Decimal(numOrStr) : numOrStr)\r\n}\r\n\r\n// A formatter that, if given a number, allows the data to be divided by the amount of seconds spent.\r\nconst conditionalFormatPerSecond = (numOrStr: DecimalSource, data: ResetHistoryEntryBase) => {\r\n  // Strings (decimals) are currently not supported.\r\n  if (typeof numOrStr === 'string') {\r\n    return formatDecimalSource(numOrStr)\r\n  }\r\n\r\n  if (typeof (numOrStr) === 'number' && player.historyShowPerSecond && data.seconds !== 0) {\r\n    if (numOrStr === 0) { // work around format(0, 3) return 0 instead of 0.000, for consistency\r\n      return '0.000/s'\r\n    }\r\n    // Use \"long\" display for smaller numbers, but once it exceeds 1000, use the \"short\" display.\r\n    // This'll keep decimals intact until 1000 instead of 10 without creating unwieldy numbers between e6-e13.\r\n    return format(numOrStr / data.seconds, 3, numOrStr < 1000) + '/s'\r\n  }\r\n  return format(numOrStr)\r\n}\r\n\r\n// Metadata and formatting tools for simple table cells (gains).\r\nconst historyGains: Record<\r\n    ResetHistoryGainType,\r\n    {\r\n        img: string\r\n        imgTitle: string\r\n        formatter?: (str: DecimalSource, data: ResetHistoryEntryUnion) => string\r\n        onlyif?: (data: ResetHistoryEntryUnion) => boolean\r\n    }\r\n> = {\r\n  offerings: {\r\n    img: 'Offering.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Offerings'\r\n  },\r\n  obtainium: {\r\n    img: 'Obtainium.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Obtainium'\r\n  },\r\n  particles: {\r\n    img: 'Particle.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Particles'\r\n  },\r\n  diamonds: {\r\n    img: 'Diamond.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Diamonds'\r\n  },\r\n  mythos: {\r\n    img: 'Mythos.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Mythos'\r\n  },\r\n  wowTesseracts: {\r\n    img: 'TinyWow4.png',\r\n    formatter: conditionalFormatPerSecond,\r\n    imgTitle: 'Wow! Tesseracts'\r\n  },\r\n  wowHypercubes: {\r\n    img: 'TinyWow5.png',\r\n    formatter: conditionalFormatPerSecond,\r\n    imgTitle: 'Wow! Hypercubes',\r\n    onlyif: () => player.challengecompletions[13] > 0\r\n  },\r\n  wowCubes: {\r\n    img: 'TinyWow3.png',\r\n    formatter: conditionalFormatPerSecond,\r\n    imgTitle: 'Wow! Cubes'\r\n  },\r\n  wowPlatonicCubes: {\r\n    img: 'TinyWow6.png',\r\n    formatter: conditionalFormatPerSecond,\r\n    imgTitle: 'Platonic Cubes',\r\n    onlyif: () => player.challengecompletions[14] > 0\r\n  },\r\n  wowHepteracts: {\r\n    img: 'TinyWow7.png',\r\n    formatter: conditionalFormatPerSecond,\r\n    imgTitle: 'Hepteracts',\r\n    onlyif: () => player.achievements[255] > 0\r\n  },\r\n  singularityCount: {\r\n    img: 'TinyS.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Singularity Count',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  quarks: {\r\n    img: 'Quark.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Quarks',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  goldenQuarks: {\r\n    img: 'GoldenQuark.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Golden Quarks',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  wowTribs: {\r\n    img: 'TinyWow3.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Cube Tributes',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  tessTribs: {\r\n    img: 'TinyWow4.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Tesseract Gifts',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  hyperTribs: {\r\n    img: 'TinyWow5.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Hypercube Bendictions',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  platTribs: {\r\n    img: 'TinyWow6.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Platonics Opened',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  octeracts: {\r\n    img: 'TinyWow8.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Octeracts',\r\n    onlyif: () => (player.singularityUpgrades.octeractUnlock.getEffect().bonus as number) > 0\r\n  },\r\n  c15Score: {\r\n    img: 'TinyChallenge15.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'C15 score',\r\n    onlyif: () => player.singularityCount > 0\r\n  },\r\n  quarkHept: {\r\n    img: 'TinyQuarkHept.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Quark Hept',\r\n    onlyif: () => player.singularityCount > 0\r\n  }\r\n}\r\n\r\n// Order in which to display the above\r\nconst historyGainsOrder: ResetHistoryGainType[] = [\r\n  'offerings', 'obtainium',\r\n  'particles', 'diamonds', 'mythos',\r\n  'wowCubes', 'wowTesseracts', 'wowHypercubes', 'wowPlatonicCubes', 'wowHepteracts',\r\n  'singularityCount', 'quarks', 'goldenQuarks', 'wowTribs', 'tessTribs',\r\n  'hyperTribs', 'platTribs', 'octeracts', 'c15Score', 'quarkHept'\r\n]\r\n\r\n// The various kinds and their associated images.\r\nconst historyKinds: Record<Kind, { img: string }> = {\r\n  'antsacrifice': { img: 'SacrificeNoBorder.png' },\r\n  'prestige': { img: 'TinyP.png' },\r\n  'transcend': { img: 'TinyT.png' },\r\n  'reincarnate': { img: 'TinyR.png' },\r\n  'ascend': { img: 'TinyA.png' },\r\n  'singularity': { img: 'TinyS.png' }\r\n}\r\n\r\n// List of categories and the IDs of the associated table in the DOM.\r\nconst resetHistoryTableMapping: Record<Category, string> = {\r\n  'ants': 'historyAntsTable',\r\n  'reset': 'historyResetTable',\r\n  'ascend': 'historyAscendTable',\r\n  'singularity': 'historySingularityTable'\r\n}\r\n\r\n// Images associated with the various corruptions.\r\nconst resetHistoryCorruptionImages = [\r\n  'CorruptViscocity.png',\r\n  'CorruptSpatialDilation.png',\r\n  'CorruptHyperchallenged.png',\r\n  'CorruptScientificIlliteracy.png',\r\n  'CorruptDeflation.png',\r\n  'CorruptExtinction.png',\r\n  'CorruptDrought.png',\r\n  'CorruptFinancialCollapse.png'\r\n]\r\n\r\nconst resetHistoryCorruptionTitles = [\r\n  'Viscosity [Accelerators and Multipliers]',\r\n  'Spacial Dilation [Time]',\r\n  'Hyperchallenged [Challenge Requirements]',\r\n  'Scientific Illiteracy [Obtainium]',\r\n  'Market Deflation [Diamonds]',\r\n  'Extinction [Ants]',\r\n  'Drought [Offering EXP]',\r\n  'Financial Recession [Coins]'\r\n]\r\n\r\n// A formatting aid that removes the mantissa from a formatted string. Converts \"2.5e1000\" to \"e1000\".\r\nconst extractStringExponent = (str: string) => {\r\n  let m: RegExpMatchArray | null\r\n  return (m = /e\\+?(.+)/.exec(str)) !== null ? `e${m[1]}` : str\r\n}\r\n\r\n// Add an entry to the history. This can be called via the event system.\r\nconst resetHistoryAdd = (category: Category, data: ResetHistoryEntryUnion) => {\r\n  while (player.history[category].length > (G.historyCountMax - 1)) {\r\n    player.history[category].shift()\r\n  }\r\n\r\n  player.history[category].push(data)\r\n  resetHistoryPushNewRow(category, data)\r\n}\r\n\r\nSynergism.on('historyAdd', resetHistoryAdd)\r\n\r\n// Add a row to the table, shifting out old ones as required.\r\nconst resetHistoryPushNewRow = (category: Category, data: ResetHistoryEntryUnion) => {\r\n  const row = resetHistoryRenderRow(category, data)\r\n  const table = DOMCacheGetOrSet(resetHistoryTableMapping[category])\r\n  const tbody = table.querySelector('tbody')!\r\n  tbody.insertBefore(row, tbody.childNodes[0])\r\n  while (tbody.childNodes.length > G.historyCountMax) {\r\n    tbody.removeChild(tbody.lastChild!)\r\n  }\r\n\r\n  if (category === 'ascend') {\r\n    const loadCorruptionsButtons = Array.from(row.getElementsByClassName('ascendHistoryLoadCorruptions'))\r\n    for (const btn of loadCorruptionsButtons) {\r\n      btn.addEventListener('click', (e) => clickHandlerForLoadCorruptionsButton((e.target as HTMLElement)))\r\n    }\r\n  }\r\n}\r\n\r\n// Render a table row.\r\nconst resetHistoryRenderRow = (\r\n  _category: Category,\r\n  data: ResetHistoryEntryUnion\r\n) => {\r\n  let colsUsed = 1\r\n  const row = document.createElement('tr')\r\n  let rowContentHtml = ''\r\n\r\n  const kindMeta = historyKinds[data.kind]\r\n\r\n  const localDate = new Date(data.date).toLocaleString()\r\n  rowContentHtml += `<td class=\"history-seconds\" title=\"${localDate}\"><img alt=\"${data.kind}\" src=\"Pictures/${IconSets[player.iconSet][0]}/${kindMeta.img}\">${formatTimeShort(data.seconds, 60)}</td>`\r\n\r\n  // Carefully loop through everything we need to print in the right order, and add it to the gains array if present.\r\n  const gains: string[] = []\r\n  const dataIntersection = data as ResetHistoryEntryIntersect\r\n  historyGainsOrder.forEach((listable) => {\r\n    if (Object.prototype.hasOwnProperty.call(data, listable)) {\r\n      const gainInfo = historyGains[listable]\r\n      if (gainInfo.onlyif && !gainInfo.onlyif(data)) {\r\n        return\r\n      }\r\n      const formatter = gainInfo.formatter ?? (() => { /* If no formatter is specified, don't display. */ })\r\n      const str = `<img alt=\"${gainInfo.imgTitle}\" src=\"Pictures/${IconSets[player.iconSet][0]}/${gainInfo.img}\" title=\"${gainInfo.imgTitle}\">${formatter(dataIntersection[listable]!, data)}`\r\n\r\n      gains.push(str)\r\n    }\r\n  })\r\n\r\n  // Kind-dependent rendering goes here. TypeScript will automatically cast to the appropriate structure based on\r\n  // the kind check.\r\n  const extra: string[] = []\r\n  if (data.kind === 'antsacrifice') {\r\n    const oldMulti = antSacrificePointsToMultiplier(data.antSacrificePointsBefore)\r\n    const newMulti = antSacrificePointsToMultiplier(data.antSacrificePointsAfter)\r\n    const diff = newMulti - oldMulti\r\n    extra.push(\r\n      `<span title=\"Ant Multiplier: ${format(oldMulti, 3, false)}--&gt;${format(newMulti, 3, false)}\"><img src=\"Pictures/${IconSets[player.iconSet][0]}/Multiplier.png\" alt=\"Ant Multiplier\">+${format(diff, 3, false)}</span>`,\r\n      `<span title=\"+${formatDecimalSource(data.crumbsPerSecond)} crumbs/s\"><img src=\"Pictures/${IconSets[player.iconSet][0]}/TinyCrumbs.png\" alt=\"Crumbs\">${extractStringExponent(formatDecimalSource(data.crumbs))}</span>`,\r\n      `<span title=\"${format(data.baseELO)} base\"><img src=\"Pictures/${IconSets[player.iconSet][0]}/TinyELO.png\" alt=\"ELO\">${format(data.effectiveELO)}</span>`\r\n    )\r\n  } else if (data.kind === 'ascend') {\r\n    extra.push(\r\n      `<img alt=\"C10\" src=\"Pictures/${IconSets[player.iconSet][0]}/TinyChallenge10.png\" title=\"Challenge 10 completions\">${data.c10Completions}`\r\n    )\r\n\r\n    const corruptions = resetHistoryFormatCorruptions(data)\r\n\r\n    extra.push(corruptions[0])\r\n    extra.push(corruptions[1])\r\n    extra.push(corruptions[2])\r\n  }\r\n\r\n  // This rendering is done this way so that all rows should have the same number of columns, which makes rows\r\n  // equal size and prevents bad rendering. We do 2 of these so that the history doesn't shift when\r\n  // hypercubes or platcubes get added as players unlock them.\r\n  // The 6 and 4 numbers are arbitrary but should never be less than the actual amount of columns that can be\r\n  // realistically displayed; you can increase them if more gains are added.\r\n\r\n  // Render the gains plus the gains filler\r\n  colsUsed += gains.length\r\n  rowContentHtml += gains.reduce((acc, value) => {\r\n    return `${acc}<td class=\"history-gain\">${value}</td>`\r\n  }, '')\r\n  rowContentHtml += `<td class=\"history-filler\" colspan=\"${7 - colsUsed}\"></td>`\r\n\r\n  // Render the other stuff\r\n  rowContentHtml += extra.reduce((acc, value) => {\r\n    return `${acc}<td class=\"history-extra\">${value}</td>`\r\n  }, '')\r\n  rowContentHtml += `<td class=\"history-filler\" colspan=\"${4 - extra.length}\"></td>`\r\n\r\n  row.innerHTML = rowContentHtml\r\n  return row\r\n}\r\n\r\n// Render a category into a given table.\r\nconst resetHistoryRenderFullTable = (categoryToRender: Category, targetTable: HTMLElement) => {\r\n  const tbody = targetTable.querySelector('tbody')!\r\n  tbody.innerHTML = ''\r\n\r\n  if (player.history[categoryToRender].length > 0) {\r\n    for (let i = player.history[categoryToRender].length - 1; i >= 0; --i) {\r\n      const row = resetHistoryRenderRow(categoryToRender, player.history[categoryToRender][i])\r\n      tbody.appendChild(row)\r\n    }\r\n  }\r\n\r\n  if (categoryToRender === 'ascend') {\r\n    const loadCorruptionsButtons = Array.from(document.getElementsByClassName('ascendHistoryLoadCorruptions'))\r\n    for (const btn of loadCorruptionsButtons) {\r\n      btn.addEventListener('click', (e) => clickHandlerForLoadCorruptionsButton((e.target as HTMLElement)))\r\n    }\r\n  }\r\n}\r\n\r\nfunction clickHandlerForLoadCorruptionsButton(btn: HTMLElement) {\r\n  const corruptions = btn.getAttribute('data-corr')\r\n  if (corruptions) {\r\n    applyCorruptions(corruptions)\r\n    void Notification(i18next.t('corruptions.loadoutApplied'), 5000)\r\n  }\r\n}\r\n\r\n// Render every category into their associated table.\r\nexport const resetHistoryRenderAllTables = () => {\r\n  (Object.keys(resetHistoryTableMapping) as Category[]).forEach(\r\n    key => resetHistoryRenderFullTable(key, DOMCacheGetOrSet(resetHistoryTableMapping[key]))\r\n  )\r\n}\r\n\r\n// Toggle the \"per second\" display for the ascension table.\r\nexport const resetHistoryTogglePerSecond = () => {\r\n  player.historyShowPerSecond = !player.historyShowPerSecond\r\n  resetHistoryRenderAllTables()\r\n  const button = DOMCacheGetOrSet('historyTogglePerSecondButton')\r\n  if (player.historyShowPerSecond) {\r\n    button.textContent = i18next.t('history.perSecondOn')\r\n  } else {\r\n    button.textContent = i18next.t('history.perSecondOff')\r\n  }\r\n  button.style.borderColor = player.historyShowPerSecond ? 'green' : 'red'\r\n}\r\n\r\n// Helper function to format the corruption display in the ascension table.\r\nconst resetHistoryFormatCorruptions = (data: ResetHistoryEntryAscend): [string, string, string] => {\r\n  let score = 'Score: ' + format(data.corruptionScore, 0, false)\r\n  let corruptions = ''\r\n  let loadout = ''\r\n  let corrs = 0\r\n  for (let i = 0; i < resetHistoryCorruptionImages.length; ++i) {\r\n    const corruptionIdx = i + 2\r\n    if (corruptionIdx in data.usedCorruptions && data.usedCorruptions[corruptionIdx] !== 0) {\r\n      corruptions += `<img alt=\"${corrs > 0 ? '/' : ''}\" src=\"Pictures/${IconSets[player.iconSet][0]}/${resetHistoryCorruptionImages[i]}\" title=\"${resetHistoryCorruptionTitles[i]}\">${data.usedCorruptions[corruptionIdx]}`\r\n    } else {\r\n      corruptions += `<span>${corrs > 0 ? '/0' : '0'}</span>`\r\n    }\r\n    corrs++\r\n  }\r\n  if (corruptions) {\r\n    loadout += `<button class=\"corrLoad ascendHistoryLoadCorruptions\" data-corr=\"${data.usedCorruptions.join('/')}\">Load</button>`\r\n  }\r\n  if (data.currentChallenge !== undefined) {\r\n    score += ` / C${data.currentChallenge}`\r\n  }\r\n\r\n  return [score, corruptions, loadout]\r\n}\r\n", "import { player } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { sumContents } from './Utility'\r\n\r\nimport Decimal from 'break_infinity.js'\r\nimport { CalcECC } from './Challenges'\r\nimport { achievementaward } from './Achievements'\r\n\r\nexport const calculatetax = () => {\r\n  let exp = 1\r\n  let compareB = new Decimal(0)\r\n  let compareC = new Decimal(0)\r\n  G.produceFirst = (player.firstGeneratedCoin.add(player.firstOwnedCoin)).times(G.globalCoinMultiplier).times(G.coinOneMulti)\r\n    .times(player.firstProduceCoin)\r\n  G.produceSecond = (player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G.globalCoinMultiplier).times(G.coinTwoMulti)\r\n    .times(player.secondProduceCoin)\r\n  G.produceThird = (player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G.globalCoinMultiplier).times(G.coinThreeMulti)\r\n    .times(player.thirdProduceCoin)\r\n  G.produceFourth = (player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G.globalCoinMultiplier).times(G.coinFourMulti)\r\n    .times(player.fourthProduceCoin)\r\n  G.produceFifth = (player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G.globalCoinMultiplier).times(G.coinFiveMulti)\r\n    .times(player.fifthProduceCoin)\r\n  G.produceTotal = G.produceFirst.add(G.produceSecond).add(G.produceThird).add(G.produceFourth)\r\n    .add(G.produceFifth)\r\n\r\n  if (G.produceFirst.lte(.0001)) {\r\n    G.produceFirst = new Decimal(0)\r\n  }\r\n  if (G.produceSecond.lte(.0001)) {\r\n    G.produceSecond = new Decimal(0)\r\n  }\r\n  if (G.produceThird.lte(.0001)) {\r\n    G.produceThird = new Decimal(0)\r\n  }\r\n  if (G.produceFourth.lte(.0001)) {\r\n    G.produceFourth = new Decimal(0)\r\n  }\r\n  if (G.produceFifth.lte(.0001)) {\r\n    G.produceFifth = new Decimal(0)\r\n  }\r\n\r\n  G.producePerSecond = G.produceTotal.times(40)\r\n\r\n  if (player.currentChallenge.reincarnation === 6) {\r\n    exp = 3 * Math.pow((1 + player.challengecompletions[6] / 25), 2)\r\n  }\r\n  if (player.currentChallenge.reincarnation === 9) {\r\n    exp = 0.005\r\n  }\r\n  if (player.currentChallenge.ascension === 15) {\r\n    exp = 0.000005\r\n  }\r\n  //im doing this to spite xander, basically changes w5x9 to not impact tax scaling in c13 || Sean#7236\r\n  const c13effcompletions = Math.max(0, sumContents(player.challengecompletions) - player.challengecompletions[11] - player.challengecompletions[12] - player.challengecompletions[13] - player.challengecompletions[14] - player.challengecompletions[15] - 3 * player.cubeUpgrades[49] - ((player.singularityCount >= 15)?4:0) - ((player.singularityCount >= 20)?1:0))\r\n  if (player.currentChallenge.ascension === 13) {\r\n    exp *= 700 * (1 + 1 / 6 * player.challengecompletions[13])\r\n    exp *= Math.pow(1.05, c13effcompletions)\r\n  }\r\n  if (player.challengecompletions[6] > 0) {\r\n    exp /= 1.075\r\n  }\r\n  let exponent = 1\r\n  exponent *= exp\r\n  exponent *= (1 - 1 / 20 * player.researches[51] - 1 / 40 * player.researches[52] - 1 / 80 * player.researches[53] - 1 / 160 * player.researches[54] - 1 / 320 * player.researches[55])\r\n  exponent *= (1 - 0.05 / 1800 * (player.achievements[45] + player.achievements[46] + 2 * player.achievements[47]) * Math.min(player.prestigecounter, 1800))\r\n  exponent *= Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6]))\r\n  exponent *= (0.001 + .999 * (Math.pow(6, -(G.rune2level * G.effectiveLevelMult) / 1000)))\r\n  exponent *= (0.01 + .99 * (Math.pow(4, Math.min(0, (400 - G.rune4level) / 1100))))\r\n  exponent *= (1 - 0.04 * player.achievements[82] - 0.04 * player.achievements[89] - 0.04 * player.achievements[96] - 0.04 * player.achievements[103] - 0.04 * player.achievements[110] - 0.0566 * player.achievements[117] - 0.0566 * player.achievements[124] - 0.0566 * player.achievements[131])\r\n  exponent *= Math.pow(0.9925, player.achievements[118] * (player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]))\r\n  exponent *= (0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[2]! + G.bonusant3))\r\n  exponent *= 1 / Math.pow((1 + Decimal.log(player.ascendShards.add(1), 10)), 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + (G.platonicBonusMultiplier[5]-1))\r\n  exponent *= (1 - 0.10 * (player.talismanRarity[1-1] - 1))\r\n  exponent *= Math.pow(0.98, 3 / 5 * Math.log(1 + player.rareFragments) / Math.log(10) * player.researches[159])\r\n  exponent *= Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13]))\r\n  exponent *= (1 - 0.666 * player.researches[200] / 100000)\r\n  exponent *= (1 - 0.666 * player.cubeUpgrades[50] / 100000)\r\n  exponent *= G.challenge15Rewards.taxes\r\n  if (player.upgrades[121] > 0) {\r\n    exponent *= 0.5\r\n  }\r\n  // Cap the calculation overflow bug || httpsnet\r\n  if (exponent < 1e-300) {\r\n    exponent = 1e-300\r\n  }\r\n  G.maxexponent = Math.floor(275 / (Decimal.log(1.01, 10) * exponent)) - 1\r\n  const a2 = Math.min(G.maxexponent, Math.floor(Decimal.log(G.produceTotal.add(1), 10)))\r\n\r\n  if (player.currentChallenge.ascension === 13 && G.maxexponent <= 99999 && player.achievements[249] < 1) {\r\n    //i don't think it makes sense to give the achievement as soon as the challenge is opened\r\n    //as soon as the challenge is opened you don't have enough tax reducers to have max exponent above 100000\r\n    //so for the achievement description to make sense i think it should require at least 1 challenge completion || Dorijanko\r\n    if (c13effcompletions >= 1) {\r\n      achievementaward(249)\r\n    }\r\n  }\r\n\r\n  if (a2 >= 1) {\r\n    compareB = Decimal.pow(a2, 2).div(550)\r\n  }\r\n\r\n  compareC = Decimal.pow(G.maxexponent, 2).div(550)\r\n\r\n  G.taxdivisor = Decimal.pow(1.01, Decimal.mul(compareB, exponent))\r\n  G.taxdivisorcheck = Decimal.pow(1.01, Decimal.mul(compareC, exponent))\r\n}\r\n", "// August 22, 2022: Creation of Exportable Statistics.\r\n\r\nimport { totalachievementpoints } from './Achievements'\r\nimport { calculateAscensionAcceleration, calculateGoldenQuarkGain, calculateMaxRunes, calculateTimeAcceleration, calculateTotalOcteractCubeBonus, calculateTotalOcteractQuarkBonus, octeractGainPerSecond } from './Calculate'\r\nimport { getMaxChallenges } from './Challenges'\r\nimport { version } from './Config'\r\nimport { saveFilename } from './ImportExport'\r\nimport { friendlyShopName, isShopUpgradeUnlocked, shopData, shopUpgradeTypes } from './Shop'\r\nimport { calculateEffectiveSingularities } from './singularity'\r\nimport { format, player } from './Synergism'\r\nimport type { Player } from './types/Synergism'\r\nimport { Alert } from './UpdateHTML'\r\nimport { formatS, sumContents } from './Utility'\r\nimport { Globals as G } from './Variables'\r\nimport ClipboardJS from 'clipboard'\r\nimport i18next from 'i18next'\r\n\r\nexport const generateExportSummary = async():Promise<void> => {\r\n  const titleText = '===== SUMMARY STATS ====='\r\n  const time = `Time Generated: ${(new Date()).toString()}`\r\n  const ver = `Version: ${version}`\r\n\r\n  const subCategoryDivisor = '-----+-----\\n'\r\n\r\n  const firstPlayed = `First Played: ${player.firstPlayed}\\n`\r\n\r\n  let resources = '===== RESOURCES =====\\n'\r\n  resources = resources + (player.reincarnationCount > 0 || player.highestSingularityCount > 0 ? `Quarks: ${format(Number(player.worlds), 0, true)}\\n` : '')\r\n  resources = resources + (player.highestSingularityCount > 0 ? `Golden Quarks: ${format(player.goldenQuarks, 2, true)}\\n` : '')\r\n  resources = resources + subCategoryDivisor\r\n  resources = resources + `Coins: ${format(player.coins, 2, true)}\\n`\r\n  if (player.prestigeCount > 0 || player.highestSingularityCount > 0) {\r\n    resources = resources + `Diamonds: ${format(player.prestigePoints, 2, true)}\\n`\r\n    resources = resources + `Crystals: ${format(player.prestigeShards, 2, true)}\\n`\r\n    resources = resources + `Offerings: ${format(player.runeshards, 0, true)}\\n`\r\n  }\r\n  if (player.transcendCount > 0 || player.highestSingularityCount > 0) {\r\n    resources = resources + `Mythos: ${format(player.transcendPoints, 2, true)}\\n`\r\n    resources = resources + `Mythos Shards: ${format(player.transcendShards, 2, true)}\\n`\r\n  }\r\n  if (player.reincarnationCount > 0 || player.highestSingularityCount > 0) {\r\n    resources = resources + `Particles: ${format(player.reincarnationPoints, 2, true)}\\n`\r\n    resources = resources + `Atoms: ${format(player.reincarnationShards, 2, true)}\\n`\r\n    resources = resources + `Obtainium: ${format(player.researchPoints, 0, true)}\\n`\r\n  }\r\n  if (player.ascensionCount > 0 || player.highestSingularityCount > 0) {\r\n    const cubeArray = [null, player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed]\r\n    const tesseractArray = [null, player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\r\n    const hypercubeArray = [null, player.hypercubeBlessings.accelerator, player.hypercubeBlessings.multiplier, player.hypercubeBlessings.offering, player.hypercubeBlessings.runeExp, player.hypercubeBlessings.obtainium, player.hypercubeBlessings.antSpeed, player.hypercubeBlessings.antSacrifice, player.hypercubeBlessings.antELO, player.hypercubeBlessings.talismanBonus, player.hypercubeBlessings.globalSpeed]\r\n    const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed]\r\n    const cubeSum = format(sumContents(cubeArray.slice(1) as number[]), 0, true)\r\n    const tesseractSum = format(sumContents(tesseractArray.slice(1) as number[]), 0, true)\r\n    const hypercubeSum = format(sumContents(hypercubeArray.slice(1) as number[]), 0, true)\r\n    const platonicSum = format(sumContents(platonicArray), 0, true)\r\n\r\n    resources = resources + subCategoryDivisor\r\n    resources = resources + `Wow! Cubes: ${format(Number(player.wowCubes), 0, true)} -+- Total Tributes: ${cubeSum}\\n`\r\n    resources = resources + `Wow! Tesseracts: ${format(Number(player.wowTesseracts), 0, true)} -+- Total Gifts: ${tesseractSum}\\n`\r\n    resources = resources + `Wow! Hypercubes: ${format(Number(player.wowHypercubes), 0, true)} -+- Total Benedictions: ${hypercubeSum}\\n`\r\n    resources = resources + `Wow! Platonic Cubes: ${format(Number(player.wowPlatonicCubes), 0, true)} -+- Total Plats Opened: ${platonicSum}\\n`\r\n    resources = resources + `Wow! Hepteracts: ${format(player.wowAbyssals, 0, true)}\\n`\r\n    if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\r\n      resources = resources + `Wow! Octeracts: ${format(player.wowOcteracts, 0, true)}\\n`\r\n    }\r\n  }\r\n\r\n  // Octeract Subportion!\r\n  let octeract = ''\r\n  if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\r\n    octeract = '===== OCTERACTS =====\\n'\r\n    octeract = octeract + `Current Octeracts: ${format(player.wowOcteracts, 2, true)}\\n`\r\n    octeract = octeract + `Current Per Second: ${format(octeractGainPerSecond(), 2, true)}\\n`\r\n    octeract = octeract + `Total Generated Octeracts: ${format(player.totalWowOcteracts, 2, true)}\\n`\r\n    octeract = octeract + `Octeract Cube Bonus: ${format(100 * (calculateTotalOcteractCubeBonus() - 1), 2, true)}%\\n`\r\n    octeract = octeract + `Octeract Quark Bonus: ${format(100 * (calculateTotalOcteractQuarkBonus() - 1), 2, true)}%\\n`\r\n  }\r\n\r\n  // Singularity Subportion!\r\n  let singularity = ''\r\n  if (player.highestSingularityCount > 0) {\r\n    singularity = '===== SINGULARITY =====\\n'\r\n    singularity = singularity + `Current Singularity: ${player.singularityCount}\\n`\r\n    singularity = singularity + `Highest Singularity Reached: ${player.highestSingularityCount}\\n`\r\n    singularity = singularity + `Golden Quarks: ${format(player.goldenQuarks, 2, true)}\\n`\r\n    singularity = singularity + `+Golden Quarks on Singularity: ${format(calculateGoldenQuarkGain(), 2, true)}\\n`\r\n    singularity = singularity + `Time in Singularity: ${formatS(player.singularityCounter)}\\n`\r\n    singularity = singularity + `Effective Singularity [for penalties]: ${format(calculateEffectiveSingularities(), 2, true)}\\n`\r\n    singularity = singularity + `Antiquity of Ant God Upgraded: ${(player.runelevels[6] > 0) ? '\u2714': '\u2716'}\\n`\r\n  }\r\n\r\n  // Ascension Subportion!\r\n  let ascension = ''\r\n  if (player.ascensionCount > 0 || player.highestSingularityCount > 0) {\r\n    ascension = '===== ASCENSION ===== \\n'\r\n    ascension = ascension + `Ascension Count: ${format(player.ascensionCount, 0, true)}\\n`\r\n    ascension = ascension + `Ascension Timer: ${formatS(player.ascensionCounter)}\\n`\r\n    ascension = ascension + `Real Life Ascension Timer: ${formatS(player.ascensionCounterReal)}\\n`\r\n    ascension = ascension + `Truly Real Life Ascension Timer: ${formatS(player.ascensionCounterRealReal)}\\n`\r\n    ascension = ascension + `Ascension Speed Multiplier: ${format(calculateAscensionAcceleration(), 2, true)}\\n`\r\n    ascension = ascension + `Challenge 11 Completions: ${player.challengecompletions[11]}/${getMaxChallenges(11)}\\n`\r\n    ascension = ascension + `Challenge 12 Completions: ${player.challengecompletions[12]}/${getMaxChallenges(12)}\\n`\r\n    ascension = ascension + `Challenge 13 Completions: ${player.challengecompletions[13]}/${getMaxChallenges(13)}\\n`\r\n    ascension = ascension + `Challenge 14 Completions: ${player.challengecompletions[14]}/${getMaxChallenges(14)}\\n`\r\n    if (player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0) {\r\n      ascension = ascension + `Challenge 15 Exponent: ${format(player.challenge15Exponent, 2, true)}\\n`\r\n      ascension = ascension + `Research [8x25] MAXED: ${(player.researches[200] === 1e5) ? '\u2714' : '\u2716'}\\n`\r\n      ascension = ascension + `Cube [w5x10] MAXED: ${(player.cubeUpgrades[50] === 1e5) ? '\u2714' : '\u2716'}\\n`\r\n      ascension = ascension + `Platonic \u03B1: ${player.platonicUpgrades[5] > 0 ? '\u2714' : '\u2716'}\\n`\r\n      ascension = ascension + `Platonic \u03B2: ${player.platonicUpgrades[10] > 0 ? '\u2714' : '\u2716'}\\n`\r\n      ascension = ascension + `Platonic \u03A9: ${player.platonicUpgrades[15] > 0 ? '\u2714' : '\u2716'}\\n`\r\n    }\r\n    if (player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0) {\r\n      ascension = ascension + '----- HEPTERACTS -----\\n'\r\n      ascension = ascension + `Chronos Hepteract: ${format(player.hepteractCrafts.chronos.BAL, 0, true)}/${format(player.hepteractCrafts.chronos.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Hyperreal Hepteract: ${format(player.hepteractCrafts.hyperrealism.BAL, 0, true)}/${format(player.hepteractCrafts.hyperrealism.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Quark Hepteract: ${format(player.hepteractCrafts.quark.BAL, 0, true)}/${format(player.hepteractCrafts.quark.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Challenge Hepteract: ${format(player.hepteractCrafts.challenge.BAL, 0, true)}/${format(player.hepteractCrafts.challenge.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Abyss Hepteract: ${format(player.hepteractCrafts.abyss.BAL, 0, true)}/${format(player.hepteractCrafts.abyss.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Accelerators Hepteract: ${format(player.hepteractCrafts.accelerator.BAL, 0, true)}/${format(player.hepteractCrafts.accelerator.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Accelerator Boosts Hepteract: ${format(player.hepteractCrafts.acceleratorBoost.BAL, 0, true)}/${format(player.hepteractCrafts.acceleratorBoost.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Multipliers Hepteract: ${format(player.hepteractCrafts.multiplier.BAL, 0, true)}/${format(player.hepteractCrafts.multiplier.CAP, 0, true)}\\n`\r\n      ascension = ascension + '----- POWDER & ORBS -----\\n'\r\n      ascension = ascension + `Orbs: ${format(player.overfluxOrbs, 0, true)}\\n`\r\n      ascension = ascension + `Powder: ${format(player.overfluxPowder, 2, true)}\\n`\r\n    }\r\n  }\r\n\r\n  // Reincarnation Portion!\r\n  let reincarnation = ''\r\n  if (player.reincarnationCount > 0 || player.highestSingularityCount > 0) {\r\n    reincarnation = '===== REINCARNATION =====\\n'\r\n    reincarnation = reincarnation + `Reincarnation Count: ${format(player.reincarnationCount, 0, true)}\\n`\r\n    reincarnation = reincarnation + `Reincarnation Timer: ${formatS(player.reincarnationcounter)}\\n`\r\n    reincarnation = reincarnation + `Fastest Reincarnation: ${formatS(player.fastestreincarnate)}\\n`\r\n    reincarnation = reincarnation + `Global Speed Multiplier: ${format(calculateTimeAcceleration().mult, 2, true)}\\n`\r\n    reincarnation = reincarnation + `Challenge 6 Completions: ${player.highestchallengecompletions[6]}/${getMaxChallenges(6)}\\n`\r\n    reincarnation = reincarnation + `Challenge 7 Completions: ${player.highestchallengecompletions[7]}/${getMaxChallenges(7)}\\n`\r\n    reincarnation = reincarnation + `Challenge 8 Completions: ${player.highestchallengecompletions[8]}/${getMaxChallenges(8)}\\n`\r\n    reincarnation = reincarnation + `Challenge 9 Completions: ${player.highestchallengecompletions[9]}/${getMaxChallenges(9)}\\n`\r\n    reincarnation = reincarnation + `Challenge 10 Completions: ${player.highestchallengecompletions[10]}/${getMaxChallenges(10)}\\n`\r\n  }\r\n\r\n  // Transcension Portion!\r\n  let transcension = ''\r\n  if (player.transcendCount > 0 || player.highestSingularityCount > 0) {\r\n    transcension = '===== TRANSCENSION =====\\n'\r\n    transcension = transcension + `Transcension Count: ${format(player.transcendCount, 0, true)}\\n`\r\n    transcension = transcension + `Transcension Timer: ${formatS(player.transcendcounter)}\\n`\r\n    transcension = transcension + `Fastest Transcension: ${formatS(player.fastesttranscend)}\\n`\r\n    transcension = transcension + `Challenge 1 Completions: ${player.highestchallengecompletions[1]}/${getMaxChallenges(1)}\\n`\r\n    transcension = transcension + `Challenge 2 Completions: ${player.highestchallengecompletions[2]}/${getMaxChallenges(2)}\\n`\r\n    transcension = transcension + `Challenge 3 Completions: ${player.highestchallengecompletions[3]}/${getMaxChallenges(3)}\\n`\r\n    transcension = transcension + `Challenge 4 Completions: ${player.highestchallengecompletions[4]}/${getMaxChallenges(4)}\\n`\r\n    transcension = transcension + `Challenge 5 Completions: ${player.highestchallengecompletions[5]}/${getMaxChallenges(5)}\\n`\r\n  }\r\n\r\n  // Prestige Portion!\r\n  let prestige = ''\r\n  if (player.prestigeCount > 0 || player.highestSingularityCount > 0) {\r\n    prestige = '===== PRESTIGE & RUNES =====\\n'\r\n    prestige = prestige + `Prestige Count: ${format(player.prestigeCount, 0, true)}\\n`\r\n    prestige = prestige + `Prestige Timer: ${formatS(player.prestigecounter)}\\n`\r\n    prestige = prestige + `Fastest Prestige: ${formatS(player.fastestprestige)}\\n`\r\n    prestige = prestige + i18next.t('achievements.totalPoints', {\r\n      x: format(player.achievementPoints),\r\n      y: format(totalachievementpoints),\r\n      z: (100 * player.achievementPoints / totalachievementpoints).toPrecision(4)\r\n    }) + '\\n'\r\n    prestige = prestige + `Speed Rune: Level ${format(player.runelevels[0], 0, true)}/${format(calculateMaxRunes(1))} [Bonus: ${format(G.rune1level - player.runelevels[0], 0, true)}]\\n`\r\n    if (player.achievements[38] > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Duplication Rune: Level ${format(player.runelevels[1], 0, true)}/${format(calculateMaxRunes(2))} [Bonus: ${format(G.rune2level - player.runelevels[1], 0, true)}]\\n`\r\n    }\r\n    if (player.achievements[44] > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Prism Rune: Level ${format(player.runelevels[2], 0, true)}/${format(calculateMaxRunes(3))} [Bonus: ${format(G.rune3level - player.runelevels[2], 0, true)}]\\n`\r\n    }\r\n    if (player.achievements[102] > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Thrift Rune: Level ${format(player.runelevels[3], 0, true)}/${format(calculateMaxRunes(4))} [Bonus: ${format(G.rune4level - player.runelevels[3], 0, true)}]\\n`\r\n    }\r\n    if (player.researches[82] > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Superior Intellect: Level ${format(player.runelevels[4], 0, true)}/${format(calculateMaxRunes(5))} [Bonus: ${format(G.rune5level - player.runelevels[4], 0, true)}]\\n`\r\n    }\r\n    if (player.shopUpgrades.infiniteAscent > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Infinite Ascent: Level ${format(player.runelevels[5], 0, true)}/${format(calculateMaxRunes(6))}\\n`\r\n    }\r\n    if (player.platonicUpgrades[20] > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Antiquities: Level ${format(player.runelevels[6], 0, true)}/${format(calculateMaxRunes(7))}\\n`\r\n    }\r\n  }\r\n\r\n  // Create Shop Stuffs\r\n  let shopUpgradeStats = '\\n'\r\n  if (player.reincarnationCount > 0 || player.highestSingularityCount > 0) {\r\n    shopUpgradeStats = '===== SHOP UPGRADES =====\\n - [\u2605]: Upgrade is MAXED - \\n - [\u2714]: Upgrade is unlocked - \\n - [\u2716]: Upgrade is locked - \\n'\r\n    const shopUpgrade = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\r\n    let totalShopUpgradeCount = 0\r\n    let totalShopUpgradeUnlocked = 0\r\n    let totalShopUpgradeMax = 0\r\n    let totalQuarksSpent = 0\r\n\r\n    for (const key of shopUpgrade) {\r\n\r\n      const shopUpg = player.shopUpgrades[key]\r\n      let upgradeText = ''\r\n\r\n      if (shopData[key].type !== shopUpgradeTypes.CONSUMABLE) {\r\n        totalShopUpgradeCount += 1\r\n        if (isShopUpgradeUnlocked(key)) {\r\n          totalShopUpgradeUnlocked += 1\r\n        }\r\n        if (shopUpg === shopData[key].maxLevel) {\r\n          totalShopUpgradeMax += 1\r\n        }\r\n      }\r\n\r\n      totalQuarksSpent += shopData[key].price * shopUpg +\r\n                                shopData[key].priceIncrease * shopUpg * (shopUpg - 1) / 2\r\n\r\n      upgradeText = upgradeText + (isShopUpgradeUnlocked(key) ?\r\n        (shopUpg === shopData[key].maxLevel ? '[\u2605]' : '[\u2714]'):\r\n        '[\u2716]')\r\n\r\n      upgradeText = upgradeText + ` ${friendlyShopName(key)}:`\r\n      upgradeText = upgradeText + ` ${(shopData[key].type !== shopUpgradeTypes.CONSUMABLE) ?\r\n        `Level ${shopUpg}/${shopData[key].maxLevel}`:\r\n        `${shopUpg}/${shopData[key].maxLevel}`}`\r\n\r\n      upgradeText = upgradeText + '\\n'\r\n      shopUpgradeStats = shopUpgradeStats + upgradeText\r\n    }\r\n    shopUpgradeStats = shopUpgradeStats + subCategoryDivisor\r\n    shopUpgradeStats = shopUpgradeStats + `Upgrades Unlocked: ${totalShopUpgradeUnlocked}/${totalShopUpgradeCount}\\n`\r\n    shopUpgradeStats = shopUpgradeStats + `Upgrades MAXED ${totalShopUpgradeMax}/${totalShopUpgradeCount}\\n`\r\n    shopUpgradeStats = shopUpgradeStats + `Quarks Spent in Shop: ${format(totalQuarksSpent, 0, true)}\\n`\r\n    shopUpgradeStats = shopUpgradeStats + subCategoryDivisor\r\n  }\r\n\r\n  // Create Singularity Stuffs\r\n  let singularityUpgradeStats = '\\n'\r\n  if (player.highestSingularityCount > 0) {\r\n    singularityUpgradeStats = '===== SINGULARITY UPGRADES =====\\n - [\u2605]: Upgrade is MAXED - \\n - [\u221E]: Upgrade is infinite - \\n - [\u2714]: Upgrade is unlocked - \\n - [\u2716]: Upgrade is locked - \\n'\r\n    const singUpgrade = Object.keys(player.singularityUpgrades) as (keyof Player['singularityUpgrades'])[]\r\n    let totalSingUpgradeCount = -1 // One upgrade cannot ever be leveled, by design, so subtract that from the actual count\r\n    let totalSingInfiniteLevel = 0\r\n    let totalSingUpgradeUnlocked = 0\r\n    let totalSingUpgradeMax = 0\r\n    let totalGoldenQuarksSpent = 0\r\n    for (const key of singUpgrade) {\r\n      let upgradeText = ''\r\n      const singUpg = player.singularityUpgrades[key]\r\n\r\n      totalSingUpgradeCount += 1\r\n      if (singUpg.maxLevel === -1) {\r\n        totalSingInfiniteLevel += 1\r\n      }\r\n      if (singUpg.level === singUpg.maxLevel) {\r\n        totalSingUpgradeMax += 1\r\n      }\r\n      if (player.singularityCount >= singUpg.minimumSingularity) {\r\n        totalSingUpgradeUnlocked += 1\r\n      }\r\n\r\n      totalGoldenQuarksSpent += singUpg.goldenQuarksInvested\r\n\r\n      let unicodeSymbol = '[\u2716]'\r\n      if (player.singularityCount >= singUpg.minimumSingularity) {\r\n        if (singUpg.maxLevel === -1) {\r\n          unicodeSymbol = '[\u221E]'\r\n        } else if (singUpg.level === singUpg.maxLevel) {\r\n          unicodeSymbol = '[\u2605]'\r\n        } else {\r\n          unicodeSymbol = '[\u2714]'\r\n        }\r\n      }\r\n\r\n      upgradeText = upgradeText + unicodeSymbol\r\n      upgradeText = upgradeText + ` ${singUpg.name}:`\r\n      upgradeText = upgradeText + (singUpg.maxLevel === -1 ?\r\n        ` Level ${singUpg.level}`:\r\n        ` Level ${singUpg.level}/${singUpg.maxLevel}`)\r\n      upgradeText = upgradeText + (singUpg.freeLevels > 0 ?\r\n        ` [+${format(singUpg.computeFreeLevelSoftcap(), 2, true)}]`:\r\n        '')\r\n\r\n      upgradeText = upgradeText + (singUpg.freeLevels > 0 ?\r\n        ` =+= Effective Level: ${format(singUpg.actualTotalLevels(), 2, true)}`:\r\n        '')\r\n\r\n      upgradeText =  upgradeText + '\\n'\r\n      singularityUpgradeStats = singularityUpgradeStats + upgradeText\r\n    }\r\n    singularityUpgradeStats = singularityUpgradeStats + subCategoryDivisor\r\n    singularityUpgradeStats = singularityUpgradeStats + `Upgrades Unlocked: ${totalSingUpgradeUnlocked}/${totalSingUpgradeCount}\\n`\r\n    singularityUpgradeStats = singularityUpgradeStats + `Upgrades MAXED: ${totalSingUpgradeMax}/${totalSingUpgradeCount - totalSingInfiniteLevel}\\n`\r\n    singularityUpgradeStats = singularityUpgradeStats + `Golden Quarks Spent on Upgrades: ${format(totalGoldenQuarksSpent, 0, true)}\\n`\r\n    singularityUpgradeStats = singularityUpgradeStats + subCategoryDivisor\r\n  }\r\n\r\n  // Create Octeract Stuff\r\n  let octeractUpgradeStats =  '\\n'\r\n  if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\r\n    octeractUpgradeStats =  '===== OCTERACT UPGRADES =====\\n - [\u2605]: Upgrade is MAXED - \\n - [\u221E]: Upgrade is infinite - \\n - [ ]: Upgrade INCOMPLETE - \\n'\r\n    const octUpgrade = Object.keys(player.octeractUpgrades) as (keyof Player['octeractUpgrades'])[]\r\n    let totalOctUpgradeCount = 0\r\n    let totalOctUpgradeMax = 0\r\n    let totalOcteractsSpent = 0\r\n\r\n    for (const key of octUpgrade) {\r\n      let upgradeText = ''\r\n      const octUpg = player.octeractUpgrades[key]\r\n\r\n      if (octUpg.maxLevel !== -1) {\r\n        totalOctUpgradeCount += 1\r\n      }\r\n      if (octUpg.level === octUpg.maxLevel) {\r\n        totalOctUpgradeMax += 1\r\n      }\r\n      totalOcteractsSpent += octUpg.octeractsInvested\r\n\r\n      let unicodeSymbol = '[ ]'\r\n      if (octUpg.maxLevel === -1) {\r\n        unicodeSymbol = '[\u221E]'\r\n      } else if (octUpg.level === octUpg.maxLevel) {\r\n        unicodeSymbol = '[\u2605]'\r\n      }\r\n\r\n      upgradeText = upgradeText + unicodeSymbol\r\n      upgradeText = upgradeText + octUpg.name + ':'\r\n      upgradeText = upgradeText + (octUpg.maxLevel === -1 ?\r\n        ` Level ${octUpg.level}`:\r\n        ` Level ${octUpg.level}/${octUpg.maxLevel}`)\r\n      upgradeText = upgradeText + (octUpg.freeLevels > 0 ?\r\n        ` [+${format(octUpg.computeFreeLevelSoftcap(), 2, true)}]`:\r\n        '')\r\n\r\n      upgradeText = upgradeText + (octUpg.freeLevels > 0 ?\r\n        ` =+= Effective Level: ${format(octUpg.actualTotalLevels(), 2, true)}`:\r\n        '')\r\n\r\n      upgradeText =  upgradeText + '\\n'\r\n      octeractUpgradeStats = octeractUpgradeStats + upgradeText\r\n    }\r\n    octeractUpgradeStats = octeractUpgradeStats + subCategoryDivisor\r\n    octeractUpgradeStats = octeractUpgradeStats + `Upgrades MAXED: ${totalOctUpgradeMax}/${totalOctUpgradeCount}\\n`\r\n    octeractUpgradeStats = octeractUpgradeStats + `Octeracts Spent on Upgrades: ${format(totalOcteractsSpent, 0, true)}\\n`\r\n    octeractUpgradeStats = octeractUpgradeStats + subCategoryDivisor\r\n  }\r\n\r\n\r\n  const returnString = titleText + '\\n' + time + '\\n' + ver + '\\n' + firstPlayed +\r\n                        resources + octeract + singularity + ascension +\r\n                        reincarnation + transcension + prestige +\r\n                        shopUpgradeStats + singularityUpgradeStats + octeractUpgradeStats\r\n\r\n\r\n  try {\r\n    await navigator.clipboard.writeText(returnString)\r\n  } catch (err) {\r\n    // So we fallback to the deprecated way of doing it,\r\n    // which isn't limited by any browser other than Safari\r\n    // because Apple is ran by a monkey in a human skin suit.\r\n\r\n    // Old/bad browsers (legacy Edge, Safari because of limitations)\r\n    const textArea = document.createElement('textarea')\r\n\r\n    textArea.setAttribute('style', 'top: 0; left: 0; position: fixed;')\r\n    textArea.setAttribute('data-clipboard-text', returnString)\r\n\r\n    document.body.appendChild(textArea)\r\n    textArea.focus()\r\n    textArea.select()\r\n\r\n    const clipboard = new ClipboardJS(textArea)\r\n\r\n    const cleanup = () => {\r\n      clipboard.destroy()\r\n      document.body.removeChild(textArea)\r\n    }\r\n\r\n    clipboard.on('success', () => {\r\n            document.getElementById('exportinfo')!.textContent = 'Copied save to clipboard!'\r\n            cleanup()\r\n    })\r\n\r\n    clipboard.on('error', () => {\r\n      void Alert('Unable to write the save to clipboard.').finally(cleanup)\r\n    })\r\n  }\r\n\r\n  const a = document.createElement('a')\r\n  a.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(returnString))\r\n  a.setAttribute('download', `Statistics-${saveFilename()}`)\r\n  a.setAttribute('id', 'downloadSave')\r\n  // \"Starting in Firefox 75, the click() function works even when the element is not attached to a DOM tree.\"\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\r\n  // so let's have it work on older versions of Firefox, doesn't change functionality.\r\n  document.body.appendChild(a)\r\n  a.click()\r\n  document.body.removeChild(a)\r\n\r\n  return Alert('Summary Stats saved to clipboard! We also gave you a file, for easy sharing, if that is available on your browser.')\r\n}\r\n", "import { DynamicUpgrade } from './DynamicUpgrade'\r\nimport type { IUpgradeData } from './DynamicUpgrade'\r\nimport { Alert, Prompt } from './UpdateHTML'\r\nimport { format, player } from './Synergism'\r\nimport type { Player } from './types/Synergism'\r\nimport i18next from 'i18next'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { visualUpdateAmbrosia } from './UpdateVisuals'\r\n\r\nexport type blueberryUpgradeNames = 'ambrosiaTutorial' | 'ambrosiaQuarks1' | 'ambrosiaCubes1' | 'ambrosiaLuck1' |\r\n                                    'ambrosiaCubeLuck1' | 'ambrosiaQuarkLuck1' | 'ambrosiaQuarkCube1' | 'ambrosiaLuckCube1' |\r\n                                    'ambrosiaCubeQuark1' | 'ambrosiaLuckQuark1'\r\n\r\ntype BlueberryOpt = Partial<Record<blueberryUpgradeNames, number>>\r\n\r\nexport interface IBlueberryData extends Omit<IUpgradeData, 'name' | 'description' | 'effect'> {\r\n    costFormula (this:void, level: number, baseCost: number): number\r\n    rewards(this:void, n: number): Record<string, number | boolean | string>\r\n    blueberryCost: number\r\n    ambrosiaInvested?: number\r\n    blueberriesInvested?: number\r\n    prerequisites?: BlueberryOpt\r\n    cacheUpdates?: (() => void)[] // TODO: Improve this type signature -Plat\r\n}\r\n\r\nexport class BlueberryUpgrade extends DynamicUpgrade {\r\n  readonly costFormula: (level: number, baseCost: number) => number\r\n  readonly rewards: (n: number) => Record<string, number | boolean | string>\r\n  public ambrosiaInvested = 0\r\n  public blueberriesInvested = 0\r\n  public blueberryCost: number\r\n  readonly preRequisites: BlueberryOpt | undefined\r\n  readonly cacheUpdates: (() => void)[] | undefined\r\n\r\n  constructor(data: IBlueberryData, key: string) {\r\n    const name = i18next.t(`ambrosia.data.${key}.name`)\r\n    const description = i18next.t(`ambrosia.data.${key}.description`)\r\n\r\n    super({ ...data, name, description })\r\n    this.blueberryCost = data.blueberryCost\r\n    this.costFormula = data.costFormula\r\n    this.rewards = data.rewards\r\n    this.ambrosiaInvested = data.ambrosiaInvested ?? 0\r\n    this.blueberriesInvested = data.blueberriesInvested ?? 0\r\n    this.preRequisites = data.prerequisites ?? undefined\r\n    this.cacheUpdates = data.cacheUpdates ?? undefined\r\n  }\r\n\r\n  getCostTNL(): number {\r\n    if (this.level === this.maxLevel) {\r\n      return 0\r\n    }\r\n    return this.costFormula(this.level, this.costPerLevel)\r\n  }\r\n\r\n  /**\r\n     * Buy levels up until togglebuy or maxed.\r\n     * @returns An alert indicating cannot afford, already maxed or purchased with how many\r\n     *          levels purchased\r\n     */\r\n  public async buyLevel(event: MouseEvent): Promise<void> {\r\n    let purchased = 0\r\n    let maxPurchasable = 1\r\n    let ambrosiaBudget = player.ambrosia\r\n\r\n    if (!this.checkPrerequisites())\r\n      return Alert(i18next.t('ambrosia.prereqNotMetAlert'))\r\n\r\n    if (event.shiftKey) {\r\n      maxPurchasable = 1000000\r\n      const buy = Number(await Prompt(i18next.t('ambrosia.ambrosiaBuyPrompt', { amount: format(player.ambrosia, 0, true) })))\r\n\r\n      if (isNaN(buy) || !isFinite(buy) || !Number.isInteger(buy)) { // nan + Infinity checks\r\n        return Alert(i18next.t('general.validation.finite'))\r\n      }\r\n\r\n      if (buy === -1) {\r\n        ambrosiaBudget = player.ambrosia\r\n      } else if (buy <= 0) {\r\n        return Alert(i18next.t('octeract.buyLevel.cancelPurchase')) // For some reason this is in the Octeract section (???)\r\n      } else {\r\n        ambrosiaBudget = buy\r\n      }\r\n      ambrosiaBudget = Math.min(player.ambrosia, ambrosiaBudget)\r\n    }\r\n\r\n    if (this.maxLevel > 0) {\r\n      maxPurchasable = Math.min(maxPurchasable, this.maxLevel - this.level)\r\n    }\r\n\r\n    if (maxPurchasable === 0) {\r\n      return Alert(i18next.t('octeract.buyLevel.alreadyMax')) // Once again\r\n    }\r\n\r\n    while (maxPurchasable > 0) {\r\n      const cost = this.getCostTNL()\r\n      if (player.ambrosia < cost || ambrosiaBudget < cost) {\r\n        break\r\n      } else {\r\n        if (this.level === 0) {\r\n          const availableBlueberries = player.caches.blueberryInventory.totalVal - player.spentBlueberries\r\n          if (availableBlueberries < this.blueberryCost) {\r\n            return Alert(i18next.t('ambrosia.notEnoughBlueberries'))\r\n          } else {\r\n            player.spentBlueberries += this.blueberryCost\r\n            this.blueberriesInvested = this.blueberryCost\r\n          }\r\n        }\r\n        player.ambrosia -= cost\r\n        ambrosiaBudget -= cost\r\n        this.ambrosiaInvested += cost\r\n        this.level += 1\r\n        purchased += 1\r\n        maxPurchasable -= 1\r\n      }\r\n    }\r\n\r\n    if (purchased === 0) {\r\n      return Alert(i18next.t('octeract.buyLevel.cannotAfford'))\r\n    }\r\n    if (purchased > 1) {\r\n      return Alert(`${i18next.t('octeract.buyLevel.multiBuy', { n: format(purchased) })}`)\r\n    }\r\n\r\n    this.updateUpgradeHTML()\r\n    this.updateCaches()\r\n  }\r\n\r\n  toString(): string {\r\n    const costNextLevel = this.getCostTNL()\r\n    const maxLevel = this.maxLevel === -1\r\n      ? ''\r\n      : `/${format(this.maxLevel, 0, true)}`\r\n    const isMaxLevel = this.maxLevel === this.level\r\n    const color = isMaxLevel ? 'plum' : 'white'\r\n\r\n    let freeLevelInfo = this.freeLevels > 0 ?\r\n      `<span style=\"color: orange\"> [+${format(this.freeLevels, 1, true)}]</span>` : ''\r\n\r\n    if (this.freeLevels > this.level) {\r\n      freeLevelInfo = freeLevelInfo + `<span style=\"color: var(--maroon-text-color)\">${i18next.t('general.softCapped')}</span>`\r\n    }\r\n\r\n    const isAffordable = costNextLevel <= player.ambrosia\r\n    const affordableInfo = isMaxLevel ? `<span style=\"color: plum\"> ${i18next.t('general.maxed')}</span>` :\r\n      isAffordable ? `<span style=\"color: var(--green-text-color)\"> ${i18next.t('general.affordable')}</span>` :\r\n        `<span style=\"color: yellow\"> ${i18next.t('octeract.buyLevel.cannotAfford')}</span>`\r\n\r\n    let preReqText = i18next.t('ambrosia.prerequisite')\r\n    if (this.preRequisites !== undefined) {\r\n      for (const [prereq, val] of Object.entries(this.preRequisites)) {\r\n        const k = prereq as keyof Player['blueberryUpgrades']\r\n        const color = (player.blueberryUpgrades[k].level >= val) ? 'green' : 'red'\r\n        const met = (player.blueberryUpgrades[k].level >= val) ? '' : i18next.t('ambrosia.prereqNotMet')\r\n        preReqText = preReqText + `<span style=\"color:${color}\"> ${player.blueberryUpgrades[k].name} lv.${val} ${met}</span> |`\r\n      }\r\n\r\n      preReqText = preReqText.slice(0, -1)\r\n    }\r\n\r\n    return `<span style=\"color: gold\">${this.name}</span>\r\n                ${preReqText}\r\n                <span style=\"color: lightblue\">${this.description}</span>\r\n                <span style=\"color: ${color}\"> ${i18next.t('general.level')} ${format(this.level, 0, true)}${maxLevel}${freeLevelInfo}</span>\r\n                <span style=\"color: gold\">${this.rewardDesc}</span>\r\n                ${i18next.t('octeract.toString.costNextLevel')}: <span style=\"color:orange\">${format(costNextLevel, 2, true, true, true)}</span> ${i18next.t('ambrosia.ambrosia')} ${affordableInfo}\r\n                ${i18next.t('ambrosia.blueberryCost')} <span style=\"color:blue\">${this.blueberryCost}</span>\r\n                ${i18next.t('general.spent')} ${i18next.t('ambrosia.ambrosia')}: <span style=\"color:orange\">${format(this.ambrosiaInvested, 2, true, true, true)}</span>`\r\n  }\r\n\r\n  updateUpgradeHTML(): void {\r\n    DOMCacheGetOrSet('singularityAmbrosiaMultiline').innerHTML = this.toString()\r\n    visualUpdateAmbrosia()\r\n  }\r\n\r\n  checkPrerequisites(): boolean {\r\n    if (this.preRequisites !== undefined) {\r\n      for (const [prereq, val] of Object.entries(this.preRequisites)) {\r\n        const k = prereq as keyof Player['blueberryUpgrades']\r\n        if (player.blueberryUpgrades[k].level < val) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  updateCaches(): void {\r\n    if (this.cacheUpdates !== undefined) {\r\n      for (const cache of this.cacheUpdates) {\r\n        cache()\r\n      }\r\n    }\r\n  }\r\n\r\n  refund(): void {\r\n    player.ambrosia += this.ambrosiaInvested\r\n    this.ambrosiaInvested = 0\r\n    this.level = 0\r\n\r\n    player.spentBlueberries -= this.blueberriesInvested\r\n    this.blueberriesInvested = 0\r\n  }\r\n\r\n  public get rewardDesc(): string {\r\n    if ('desc' in this.rewards(0)) {\r\n      return String(this.rewards(this.level).desc)\r\n    } else {\r\n      return 'Contact Platonic or Khafra if you see this (should never occur!)'\r\n    }\r\n  }\r\n\r\n  public get bonus() {\r\n    return this.rewards(this.level)\r\n  }\r\n}\r\n\r\nexport const blueberryUpgradeData: Record<keyof Player['blueberryUpgrades'], IBlueberryData> = {\r\n  ambrosiaTutorial: {\r\n    maxLevel: 10,\r\n    costPerLevel: 1,\r\n    blueberryCost: 0,\r\n    costFormula: (level: number, baseCost: number): number => {\r\n      return baseCost * (Math.pow(level + 1, 2) - Math.pow(level, 2))\r\n    },\r\n    rewards: (n: number) => {\r\n      const cubeAmount = 1 + 0.05 * n\r\n      const quarkAmount = 1 + 0.01 * n\r\n      return {\r\n        quarks: quarkAmount,\r\n        cubes: cubeAmount,\r\n        desc: String(i18next.t('ambrosia.data.ambrosiaTutorial.effect', { cubeAmount: format(100 * (cubeAmount - 1), 0, true), quarkAmount: format(100 * (quarkAmount - 1), 0, true) }))\r\n      }\r\n    }\r\n  },\r\n  ambrosiaQuarks1: {\r\n    maxLevel: 100,\r\n    costPerLevel: 1,\r\n    blueberryCost: 0,\r\n    costFormula: (level: number, baseCost: number): number => {\r\n      return baseCost * (Math.pow(level + 1, 3) - Math.pow(level, 3))\r\n    },\r\n    rewards: (n: number) => {\r\n      const quarkAmount = 1 + 0.01 * n\r\n      return {\r\n        quarks: quarkAmount,\r\n        desc: String(i18next.t('ambrosia.data.ambrosiaQuarks1.effect', { amount: format(100 * (quarkAmount - 1), 0, true) }))\r\n      }\r\n    },\r\n    prerequisites: {\r\n      'ambrosiaTutorial': 10\r\n    }\r\n  },\r\n  ambrosiaCubes1: {\r\n    maxLevel: 100,\r\n    costPerLevel: 1,\r\n    blueberryCost: 0,\r\n    costFormula: (level: number, baseCost: number): number => {\r\n      return baseCost * (Math.pow(level + 1, 3) - Math.pow(level, 3))\r\n    },\r\n    rewards: (n: number) => {\r\n      const cubeAmount = (1 + 0.05 * n) * Math.pow(1.1, Math.floor(n / 10))\r\n      return {\r\n        cubes: cubeAmount,\r\n        desc: String(i18next.t('ambrosia.data.ambrosiaCubes1.effect', { amount: format(100 * (cubeAmount - 1), 2, true) }))\r\n      }\r\n    },\r\n    prerequisites: {\r\n      'ambrosiaTutorial': 10\r\n    }\r\n  },\r\n  ambrosiaLuck1: {\r\n    maxLevel: 100,\r\n    costPerLevel: 1,\r\n    blueberryCost: 0,\r\n    costFormula: (level: number, baseCost: number): number => {\r\n      return baseCost * (Math.pow(level + 1, 3) - Math.pow(level, 3))\r\n    },\r\n    rewards: (n: number) => {\r\n      const val = 2 * n + 5 * Math.floor(n/10)\r\n      return {\r\n        ambrosiaLuck: val,\r\n        desc: String(i18next.t('ambrosia.data.ambrosiaLuck1.effect', { amount: format(val) }))\r\n      }\r\n    },\r\n    prerequisites: {\r\n      'ambrosiaTutorial': 10\r\n    },\r\n    cacheUpdates: [() => player.caches.ambrosiaLuck.updateVal('BlueberryUpgrade1')]\r\n  },\r\n  ambrosiaQuarkCube1: {\r\n    maxLevel: 25,\r\n    costPerLevel: 250,\r\n    blueberryCost: 1,\r\n    costFormula: (level: number, baseCost: number): number => {\r\n      return baseCost * (Math.pow(level + 1, 3) - Math.pow(level, 3))\r\n    },\r\n    rewards: (n: number) => {\r\n      const baseVal = 0.0005 * n\r\n      const val = 1 + baseVal * Math.floor(Math.pow(Math.log10(Number(player.worlds)+1) +1, 2))\r\n      return {\r\n        cubes: val,\r\n        desc: String(i18next.t('ambrosia.data.ambrosiaQuarkCube1.effect', { amount: format(100 * (val - 1), 2, true) }))\r\n      }\r\n    },\r\n    prerequisites: {\r\n      'ambrosiaCubes1': 30,\r\n      'ambrosiaQuarks1': 20\r\n    }\r\n  },\r\n  ambrosiaLuckCube1: {\r\n    maxLevel: 25,\r\n    costPerLevel: 250,\r\n    blueberryCost: 1,\r\n    costFormula: (level: number, baseCost: number): number => {\r\n      return baseCost * (Math.pow(level + 1, 3) - Math.pow(level, 3))\r\n    },\r\n    rewards: (n: number) => {\r\n      const baseVal = 0.0002 * n\r\n      const val = 1 + baseVal * player.caches.ambrosiaLuck.totalVal\r\n      return {\r\n        cubes: val,\r\n        desc: String(i18next.t('ambrosia.data.ambrosiaLuckCube1.effect', { amount: format(100 * (val - 1), 2, true) }))\r\n      }\r\n    },\r\n    prerequisites: {\r\n      'ambrosiaCubes1': 30,\r\n      'ambrosiaLuck1': 20\r\n    }\r\n  },\r\n  ambrosiaCubeQuark1: {\r\n    maxLevel: 25,\r\n    costPerLevel: 500,\r\n    blueberryCost: 1,\r\n    costFormula: (level: number, baseCost: number): number => {\r\n      return baseCost * (Math.pow(level + 1, 3) - Math.pow(level, 3))\r\n    },\r\n    rewards: (n: number) => {\r\n      const baseVal = 0.0001 * n\r\n      const val = 1 + baseVal * (Math.floor(Math.log10(Number(player.wowCubes) + 1)) +\r\n                                Math.floor(Math.log10(Number(player.wowTesseracts) + 1)) +\r\n                                Math.floor(Math.log10(Number(player.wowHypercubes) + 1)) +\r\n                                Math.floor(Math.log10(Number(player.wowPlatonicCubes) + 1)) +\r\n                                Math.floor(Math.log10(player.wowAbyssals + 1)) +\r\n                                Math.floor(Math.log10(player.wowOcteracts + 1)) + 6)\r\n      return {\r\n        quarks: val,\r\n        desc: String(i18next.t('ambrosia.data.ambrosiaCubeQuark1.effect', { amount: format(100 * (val - 1), 2, true) }))\r\n      }\r\n    },\r\n    prerequisites: {\r\n      'ambrosiaQuarks1': 30,\r\n      'ambrosiaCubes1': 20\r\n    }\r\n  },\r\n  ambrosiaLuckQuark1: {\r\n    maxLevel: 25,\r\n    costPerLevel: 500,\r\n    blueberryCost: 1,\r\n    costFormula: (level: number, baseCost: number): number => {\r\n      return baseCost * (Math.pow(level + 1, 3) - Math.pow(level, 3))\r\n    },\r\n    rewards: (n: number) => {\r\n      const baseVal = 0.0001 * n\r\n      const val = 1 + baseVal * player.caches.ambrosiaLuck.totalVal\r\n      return {\r\n        quarks: val,\r\n        desc: String(i18next.t('ambrosia.data.ambrosiaLuckQuark1.effect', { amount: format(100 * (val - 1), 2, true) }))\r\n      }\r\n    },\r\n    prerequisites: {\r\n      'ambrosiaQuarks1': 30,\r\n      'ambrosiaLuck1': 20\r\n    }\r\n  },\r\n  ambrosiaCubeLuck1: {\r\n    maxLevel: 25,\r\n    costPerLevel: 100,\r\n    blueberryCost: 1,\r\n    costFormula: (level: number, baseCost: number): number => {\r\n      return baseCost * (Math.pow(level + 1, 3) - Math.pow(level, 3))\r\n    },\r\n    rewards: (n: number) => {\r\n      const baseVal = 0.01 * n\r\n      const val = baseVal * (Math.floor(Math.log10(Number(player.wowCubes) + 1)) +\r\n                            Math.floor(Math.log10(Number(player.wowTesseracts) + 1)) +\r\n                            Math.floor(Math.log10(Number(player.wowHypercubes) + 1)) +\r\n                            Math.floor(Math.log10(Number(player.wowPlatonicCubes) + 1)) +\r\n                            Math.floor(Math.log10(player.wowAbyssals + 1)) +\r\n                            Math.floor(Math.log10(player.wowOcteracts + 1)) + 6)\r\n      return {\r\n        ambrosiaLuck: val,\r\n        desc: String(i18next.t('ambrosia.data.ambrosiaCubeLuck1.effect', { amount: val }))\r\n      }\r\n    },\r\n    prerequisites: {\r\n      'ambrosiaLuck1': 30,\r\n      'ambrosiaCubes1': 20\r\n    },\r\n    cacheUpdates: [() => player.caches.ambrosiaLuck.updateVal('BlueberryCubeLuck1')]\r\n  },\r\n  ambrosiaQuarkLuck1: {\r\n    maxLevel: 25,\r\n    costPerLevel: 100,\r\n    blueberryCost: 1,\r\n    costFormula: (level: number, baseCost: number): number => {\r\n      return baseCost * (Math.pow(level + 1, 3) - Math.pow(level, 3))\r\n    },\r\n    rewards: (n: number) => {\r\n      const baseVal = 0.01 * n\r\n      const val = baseVal * Math.floor(Math.pow(Math.log10(Number(player.worlds)+1)+1, 2))\r\n      return {\r\n        ambrosiaLuck: val,\r\n        desc: String(i18next.t('ambrosia.data.ambrosiaQuarkLuck1.effect', { amount: val }))\r\n      }\r\n    },\r\n    prerequisites: {\r\n      'ambrosiaLuck1': 30,\r\n      'ambrosiaQuarks1': 20\r\n    },\r\n    cacheUpdates: [() => player.caches.ambrosiaLuck.updateVal('BlueberryQuarkLuck1')]\r\n  }\r\n\r\n}\r\n\r\nexport const resetBlueberryTree = () => {\r\n  for (const upgrade of Object.keys(player.blueberryUpgrades)) {\r\n    const k = upgrade as keyof Player['blueberryUpgrades']\r\n    player.blueberryUpgrades[k].refund()\r\n  }\r\n  return Alert(i18next.t('ambrosia.refund'))\r\n}\r\n", "import { toggleAscStatPerSecond, toggleBuyAmount, toggleAutoTesseracts, toggleSettings, toggleautoreset, toggleautobuytesseract, toggleShops, toggleAutoSacrifice, toggleAutoBuyFragment, toggleautoenhance, toggleautofortify, updateRuneBlessingBuyAmount, toggleSaveOff, toggleChallenges, toggleAutoChallengesIgnore, toggleAutoChallengeRun, updateAutoChallenge, toggleResearchBuy, toggleAutoResearch, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleMaxBuyCube, toggleautoopensCubes, toggleCorruptionLevel, toggleAutoAscend, toggleShopConfirmation, toggleAutoResearchMode, toggleBuyMaxShop, toggleHideShop, toggleHepteractAutoPercentage, autoCubeUpgradesToggle, autoPlatonicUpgradesToggle } from './Toggles'\r\nimport { resetrepeat, updateAutoReset, updateTesseractAutoBuyAmount, updateAutoCubesOpens } from './Reset'\r\nimport { player, resetCheck, saveSynergy } from './Synergism'\r\nimport { boostAccelerator, buyAccelerator, buyMultiplier, buyProducer, buyCrystalUpgrades, buyParticleBuilding, buyTesseractBuilding, buyRuneBonusLevels, buyAllBlessings } from './Buy'\r\nimport { crystalupgradedescriptions, constantUpgradeDescriptions, buyConstantUpgrades, upgradedescriptions, clickUpgrades, categoryUpgrades } from './Upgrades'\r\nimport { achievementdescriptions, achievementpointvalues } from './Achievements'\r\nimport { displayRuneInformation, redeemShards } from './Runes'\r\nimport { toggleTalismanBuy, buyTalismanResources, buyAllTalismanResources, showTalismanPrices, buyTalismanLevels, buyTalismanEnhance, showRespecInformation, respecTalismanConfirm, respecTalismanCancel, changeTalismanModifier, updateTalismanCostDisplay, showTalismanEffect, showEnhanceTalismanPrices } from './Talismans'\r\nimport { challengeDisplay, toggleRetryChallenges } from './Challenges'\r\nimport { buyResearch, researchDescriptions } from './Research'\r\nimport { antRepeat, sacrificeAnts, buyAntProducers, updateAntDescription, antUpgradeDescription, buyAntUpgrade } from './Ants'\r\nimport { buyCubeUpgrades, cubeUpgradeDesc } from './Cubes'\r\nimport { buyPlatonicUpgrades, createPlatonicDescription } from './Platonic'\r\nimport { corruptionCleanseConfirm, corruptionDisplay } from './Corruptions'\r\nimport { exportSynergism, updateSaveString, promocodes, promocodesPrompt, promocodesInfo, importSynergism, resetGame, reloadDeleteGame, handleLastModified } from './ImportExport'\r\nimport { resetHistoryTogglePerSecond } from './History'\r\nimport { resetShopUpgrades, shopDescriptions, buyShopUpgrades, useConsumable, shopData, shopUpgradeTypes } from './Shop'\r\nimport { Globals as G } from './Variables'\r\nimport { changeTabColor, Confirm } from './UpdateHTML'\r\nimport { hepteractDescriptions, hepteractToOverfluxOrbDescription, tradeHepteractToOverfluxOrb, overfluxPowderDescription, overfluxPowderWarp, toggleAutoBuyOrbs } from './Hepteracts'\r\nimport { exitOffline, forcedDailyReset, timeWarp } from './Calculate'\r\nimport type { OneToFive, Player } from './types/Synergism'\r\nimport { displayStats } from './Statistics'\r\nimport { testing } from './Config'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { toggleAnnotation, toggleTheme, toggleIconSet, imgErrorHandler } from './Themes'\r\nimport { buyGoldenQuarks } from './singularity'\r\nimport { resetHotkeys } from './Hotkeys'\r\nimport { generateExportSummary } from './Summary'\r\nimport { shopMouseover } from './UpdateVisuals'\r\nimport i18next from 'i18next'\r\nimport { clickSmith } from './Event'\r\nimport { changeTab, changeSubTab } from './Tabs'\r\nimport { resetBlueberryTree } from './BlueberryUpgrades'\r\n\r\n/* STYLE GUIDE */\r\n/*\r\n    1) When adding event handlers please put it in respective tabs, in the correct subcategory.\r\n    Generally it would be preferred to put it in the lowest spot.\r\n    2) Please put any Mouseover events before Click events, if two event handlers are needed for an element.\r\n    3) Do *NOT* add event handlers to index.html. You may only add them in js/ts files!\r\n    4) Using for loops: be careful about passing arguments. If necessary, please use a currying function (See: Line 80-90)\r\n    5) If you are documenting a new tab or subtab, please comment out the order in which you add event handlers.\r\n    6) It is strongly recommended you only add event handlers in the generateEventHandlers() function, but if you are\r\n    creating new elements through js/ts you may do so outside of this file (E.g. corruptions)\r\n\r\n    Platonic and/or Khafra have the right to close PRs that do not conform to this style guide\r\n\r\n    If you are editing this script, please update the below time:\r\n    Last Edited: June 10, 2021 3:04 AM UTC-8\r\n*/\r\n\r\n/* eslint-disable @typescript-eslint/no-misused-promises */\r\n\r\nexport const generateEventHandlers = () => {\r\n  const ordinals = ['null', 'first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth'] as const\r\n\r\n  if (testing) {\r\n    const warp = document.createElement('button')\r\n    const dayReset = document.createElement('button')\r\n    warp.textContent = 'Click here to warp time! [TESTING ONLY]'\r\n    warp.setAttribute('style', 'width: auto; height: 30px; border: 6px solid gold;')\r\n    warp.addEventListener('click', () => timeWarp())\r\n    dayReset.textContent = 'Click to force a new day! [TESTING ONLY]'\r\n    dayReset.setAttribute('style', 'width: auto; height: 30px; border: 6px solid orange;')\r\n    dayReset.addEventListener('click', () => forcedDailyReset())\r\n\r\n    const consumables = DOMCacheGetOrSet('actualConsumables')\r\n    consumables.appendChild(warp)\r\n    consumables.appendChild(dayReset)\r\n  }\r\n  // Offline Button\r\n  DOMCacheGetOrSet('exitOffline').addEventListener('click', () => exitOffline())\r\n  DOMCacheGetOrSet('offlineContainer').addEventListener('dblclick', () => exitOffline())\r\n  // UPPER UI ELEMENTS\r\n  //Prelude: Cube/Tesseract/Hypercube/Platonic display UIs (Onclicks)\r\n  DOMCacheGetOrSet('ascCubeStats').addEventListener('click', () => toggleAscStatPerSecond(1))\r\n  DOMCacheGetOrSet('ascTessStats').addEventListener('click', () => toggleAscStatPerSecond(2))\r\n  DOMCacheGetOrSet('ascHyperStats').addEventListener('click', () => toggleAscStatPerSecond(3))\r\n  DOMCacheGetOrSet('ascPlatonicStats').addEventListener('click', () => toggleAscStatPerSecond(4))\r\n  DOMCacheGetOrSet('ascHepteractStats').addEventListener('click', () => toggleAscStatPerSecond(5))\r\n  DOMCacheGetOrSet('ascTimeTakenStats').addEventListener('click', () => toggleAscStatPerSecond(6))\r\n  //Part 1: Reset Tiers\r\n  //Onmouseover Events\r\n  DOMCacheGetOrSet('prestigebtn').addEventListener('mouseover', () => resetrepeat('prestige'))\r\n  DOMCacheGetOrSet('transcendbtn').addEventListener('mouseover', () => resetrepeat('transcension'))\r\n  DOMCacheGetOrSet('reincarnatebtn').addEventListener('mouseover', () => resetrepeat('reincarnation'))\r\n  DOMCacheGetOrSet('acceleratorboostbtn').addEventListener('mouseover', () => resetrepeat('acceleratorBoost'))\r\n  DOMCacheGetOrSet('challengebtn').addEventListener('mouseover', () => resetrepeat('transcensionChallenge'))\r\n  DOMCacheGetOrSet('reincarnatechallengebtn').addEventListener('mouseover', () => resetrepeat('reincarnationChallenge'))\r\n  DOMCacheGetOrSet('ascendChallengeBtn').addEventListener('mouseover', () => resetrepeat('ascensionChallenge'))\r\n  DOMCacheGetOrSet('ascendbtn').addEventListener('mouseover', () => resetrepeat('ascension'))\r\n  DOMCacheGetOrSet('singularitybtn').addEventListener('mouseover', () => resetrepeat('singularity'))\r\n\r\n  for (const resetButton of Array.from(document.getElementsByClassName('resetbtn'))) {\r\n    resetButton.addEventListener('mouseover', () => {\r\n      resetButton.classList.add('hover')\r\n    })\r\n\r\n    resetButton.addEventListener('mouseout', () => {\r\n      resetButton.classList.remove('hover')\r\n\r\n      if (player.currentChallenge.reincarnation) {\r\n        resetrepeat('reincarnationChallenge')\r\n      } else if (player.currentChallenge.transcension) {\r\n        resetrepeat('transcensionChallenge')\r\n      }\r\n    })\r\n  }\r\n\r\n  //Onclick Events (this is particularly bad)\r\n  DOMCacheGetOrSet('prestigebtn').addEventListener('click', () => resetCheck('prestige'))\r\n  DOMCacheGetOrSet('transcendbtn').addEventListener('click', () => resetCheck('transcension'))\r\n  DOMCacheGetOrSet('reincarnatebtn').addEventListener('click', () => resetCheck('reincarnation'))\r\n  DOMCacheGetOrSet('acceleratorboostbtn').addEventListener('click', () => boostAccelerator())\r\n  DOMCacheGetOrSet('challengebtn').addEventListener('click', () => resetCheck('transcensionChallenge', undefined, true))\r\n  DOMCacheGetOrSet('reincarnatechallengebtn').addEventListener('click', () => resetCheck('reincarnationChallenge', undefined, true))\r\n  DOMCacheGetOrSet('ascendChallengeBtn').addEventListener('click', () => resetCheck('ascensionChallenge'))\r\n  DOMCacheGetOrSet('ascendbtn').addEventListener('click', () => resetCheck('ascension'))\r\n  DOMCacheGetOrSet('singularitybtn').addEventListener('click', () => resetCheck('singularity'))\r\n  //Part 2: Tabs (sucks)\r\n  //Onmouseover Events\r\n  DOMCacheGetOrSet('buildingstab').addEventListener('click', () => changeTab('buildings'))\r\n  DOMCacheGetOrSet('upgradestab').addEventListener('click', () => changeTab('upgrades'))\r\n  DOMCacheGetOrSet('settingstab').addEventListener('click', () => changeTab('settings'))\r\n  DOMCacheGetOrSet('achievementstab').addEventListener('click', () => changeTab('achievements'))\r\n  DOMCacheGetOrSet('runestab').addEventListener('click', () => changeTab('runes'))\r\n  DOMCacheGetOrSet('challengetab').addEventListener('click', () => changeTab('challenge'))\r\n  DOMCacheGetOrSet('researchtab').addEventListener('click', () => changeTab('research'))\r\n  DOMCacheGetOrSet('shoptab').addEventListener('click', () => changeTab('shop'))\r\n  DOMCacheGetOrSet('anttab').addEventListener('click', () => changeTab('ant'))\r\n  DOMCacheGetOrSet('cubetab').addEventListener('click', () => changeTab('cube'))\r\n  DOMCacheGetOrSet('traitstab').addEventListener('click', () => changeTab('traits'))\r\n  DOMCacheGetOrSet('singularitytab').addEventListener('click', () => changeTab('singularity'))\r\n  DOMCacheGetOrSet('eventtab').addEventListener('click', () => changeTab('event'))\r\n\r\n  // BUILDINGS TAB\r\n  //Part 1: Upper portion (Subtab toggle)\r\n  const buildingTypes = ['Coin', 'Diamond', 'Mythos', 'Particle', 'Tesseract']\r\n  for (let index = 0; index < buildingTypes.length; index++) {\r\n    DOMCacheGetOrSet(`switchTo${buildingTypes[index]}Building`).addEventListener('click', () => changeSubTab('buildings', { page: index }))\r\n\r\n  }\r\n  //Part 2: Building Amount Toggles\r\n  const buildingTypesAlternate = ['coin', 'crystal', 'mythos', 'particle', 'tesseract', 'offering'] as const\r\n  const buildingOrds = ['one', 'ten', 'hundred', 'thousand', '10k', '100k']\r\n  const buildingOrdsToNum = [1, 10, 100, 1000, 10000, 100000] as const\r\n  for (let index = 0; index < buildingOrds.length; index++) {\r\n    for (let index2 = 0; index2 < buildingTypesAlternate.length; index2++) {\r\n      DOMCacheGetOrSet(buildingTypesAlternate[index2]+buildingOrds[index]).addEventListener('click', () =>\r\n        toggleBuyAmount(\r\n          buildingOrdsToNum[index],\r\n          buildingTypesAlternate[index2]\r\n        )\r\n      )\r\n    }\r\n  }\r\n  //Part 3: Building Purchasers + Upgrades\r\n  // Accelerator, Multiplier, Accelerator Boost\r\n  DOMCacheGetOrSet('buyaccelerator').addEventListener('click', () => buyAccelerator())\r\n  DOMCacheGetOrSet('buymultiplier').addEventListener('click', () => buyMultiplier())\r\n  DOMCacheGetOrSet('buyacceleratorboost').addEventListener('click', () => boostAccelerator())\r\n\r\n  // Coin, Diamond and Mythos Buildings\r\n  const buildingTypesAlternate2 = ['coin', 'diamond', 'mythos']\r\n  const buildingTypesAlternate3 = ['Coin', 'Diamonds', 'Mythos'] as const //TODO: A cleaner way to implement this dumb shit\r\n  for (let index = 0; index < 3; index++) {\r\n    for (let index2 = 1; index2 <= 5; index2++) {\r\n      DOMCacheGetOrSet(`buy${buildingTypesAlternate2[index]}${index2}`).addEventListener('click', () =>\r\n        buyProducer(ordinals[index2 as OneToFive], buildingTypesAlternate3[index], index === 0 ? index2 : index2 * (index2+1) / 2))\r\n    }\r\n  }\r\n\r\n  // Crystal Upgrades (Mouseover and Onclick)\r\n  for (let index = 1; index <= 5; index++) {\r\n\r\n    DOMCacheGetOrSet(`buycrystalupgrade${index}`).addEventListener('mouseover', () => crystalupgradedescriptions(index))\r\n    DOMCacheGetOrSet(`buycrystalupgrade${index}`).addEventListener('click', () => buyCrystalUpgrades(index))\r\n\r\n  }\r\n\r\n  // Particle Buildings\r\n  for (let index = 0; index < 5; index++) {\r\n    DOMCacheGetOrSet(`buyparticles${index+1}`).addEventListener('click', () => buyParticleBuilding(\r\n            index+1 as OneToFive\r\n    ))\r\n  }\r\n\r\n  // Tesseract Buildings\r\n  for (let index = 0; index < 5; index++) {\r\n    DOMCacheGetOrSet(`buyTesseracts${index+1}`).addEventListener('click', () => buyTesseractBuilding(index+1 as OneToFive))\r\n    DOMCacheGetOrSet(`tesseractAutoToggle${index+1}`).addEventListener('click', () => toggleAutoTesseracts(index+1))\r\n\r\n  }\r\n\r\n  // Constant Upgrades\r\n  for (let index = 0; index < 10; index++) {\r\n\r\n    DOMCacheGetOrSet(`buyConstantUpgrade${index+1}`).addEventListener('mouseover', () => constantUpgradeDescriptions(index+1))\r\n    DOMCacheGetOrSet(`buyConstantUpgrade${index+1}`).addEventListener('click', () => buyConstantUpgrades(index+1))\r\n\r\n  }\r\n\r\n  //Part 4: Toggles\r\n  // I'm just addressing all global toggles here\r\n  const toggles = document.querySelectorAll<HTMLElement>('.auto[toggleid]')\r\n  toggles.forEach(b => b.addEventListener('click', () => toggleSettings(b)))\r\n  // Toggles auto reset type (between TIME and AMOUNT for 3 first Tiers, and between PERCENTAGE and AMOUNT for Tesseracts)\r\n  DOMCacheGetOrSet('prestigeautotoggle').addEventListener('click', () => toggleautoreset(1))\r\n  DOMCacheGetOrSet('transcendautotoggle').addEventListener('click', () => toggleautoreset(2))\r\n  DOMCacheGetOrSet('reincarnateautotoggle').addEventListener('click', () => toggleautoreset(3))\r\n  DOMCacheGetOrSet('tesseractautobuymode').addEventListener('click', () => toggleautoreset(4))\r\n  // Toggles auto reset amount required to trigger\r\n  DOMCacheGetOrSet('prestigeamount').addEventListener('blur', () => updateAutoReset(1))\r\n  DOMCacheGetOrSet('transcendamount').addEventListener('blur', () => updateAutoReset(2))\r\n  DOMCacheGetOrSet('reincarnationamount').addEventListener('blur', () => updateAutoReset(3))\r\n  DOMCacheGetOrSet('ascensionAmount').addEventListener('blur', () => updateAutoReset(4))\r\n  DOMCacheGetOrSet('autoAntSacrificeAmount').addEventListener('blur', () => updateAutoReset(5))\r\n  // Tesseract-specific of the above. I don't know why I didn't standardize names here.\r\n  DOMCacheGetOrSet('tesseractautobuytoggle').addEventListener('click', () => toggleautobuytesseract())\r\n  DOMCacheGetOrSet('tesseractAmount').addEventListener('blur', () => updateTesseractAutoBuyAmount())\r\n  // Auto Opening of Cubes\r\n  DOMCacheGetOrSet('cubeOpensInput').addEventListener('blur', () => updateAutoCubesOpens(1))\r\n  DOMCacheGetOrSet('tesseractsOpensInput').addEventListener('blur', () => updateAutoCubesOpens(2))\r\n  DOMCacheGetOrSet('hypercubesOpensInput').addEventListener('blur', () => updateAutoCubesOpens(3))\r\n  DOMCacheGetOrSet('platonicCubeOpensInput').addEventListener('blur', () => updateAutoCubesOpens(4))\r\n  DOMCacheGetOrSet('openCubes').addEventListener('click', () => toggleautoopensCubes(1))\r\n  DOMCacheGetOrSet('openTesseracts').addEventListener('click', () => toggleautoopensCubes(2))\r\n  DOMCacheGetOrSet('openHypercubes').addEventListener('click', () => toggleautoopensCubes(3))\r\n  DOMCacheGetOrSet('openPlatonicCube').addEventListener('click', () => toggleautoopensCubes(4))\r\n\r\n\r\n  // UPGRADES TAB\r\n  // For all upgrades in the Upgrades Tab (125) count, we have the same mouseover event. So we'll work on those first.\r\n  for (let index = 1; index <= 125; index++) {\r\n    //Onmouseover events ()\r\n    DOMCacheGetOrSet(`upg${index}`).addEventListener('mouseover', () => upgradedescriptions(index))\r\n  }\r\n\r\n  // Generates all upgrade button events\r\n  for (let index = 1; index <= 125; index++) {\r\n    DOMCacheGetOrSet(`upg${index}`).addEventListener('click', () => clickUpgrades(index, false))\r\n  }\r\n\r\n  for (let index = 1; index <= 6; index++) {\r\n    DOMCacheGetOrSet(`upgrades${index}`).addEventListener('click', () => categoryUpgrades(index, false))\r\n  }\r\n\r\n  // Next part: Shop-specific toggles\r\n  DOMCacheGetOrSet('coinAutoUpgrade').addEventListener('click', () => toggleShops('coin'))\r\n  DOMCacheGetOrSet('prestigeAutoUpgrade').addEventListener('click', () => toggleShops('prestige'))\r\n  DOMCacheGetOrSet('transcendAutoUpgrade').addEventListener('click', () => toggleShops('transcend'))\r\n  DOMCacheGetOrSet('generatorsAutoUpgrade').addEventListener('click', () => toggleShops('generators'))\r\n  DOMCacheGetOrSet('reincarnateAutoUpgrade').addEventListener('click', () => toggleShops('reincarnate'))\r\n\r\n  // ACHIEVEMENTS TAB\r\n  // TODO: Remove 1 indexing\r\n  for (let index = 1; index <= achievementpointvalues.length - 1 ; index++) {\r\n\r\n    //Onmouseover events (Achievement descriptions)\r\n    DOMCacheGetOrSet(`ach${index}`).addEventListener('mouseover', () => achievementdescriptions(index))\r\n\r\n  }\r\n\r\n  // RUNES TAB [And all corresponding subtabs]\r\n  // Part 0: Upper UI portion\r\n  //Auto sacrifice toggle button\r\n  DOMCacheGetOrSet('toggleautosacrifice').addEventListener('click', () => toggleAutoSacrifice(0))\r\n  //Toggle subtabs of Runes tab\r\n  for (let index = 0; index < 4; index++) {\r\n\r\n    DOMCacheGetOrSet(`toggleRuneSubTab${index+1}`).addEventListener('click', () => changeSubTab('runes', { page: index }))\r\n\r\n  }\r\n\r\n  // Part 1: Runes Subtab\r\n  for (let index = 0; index < 7; index++) {\r\n\r\n    DOMCacheGetOrSet(`rune${index+1}`).addEventListener('mouseover', () => displayRuneInformation(index+1))\r\n    DOMCacheGetOrSet(`rune${index+1}`).addEventListener('click', () => toggleAutoSacrifice(index+1))\r\n\r\n    DOMCacheGetOrSet(`activaterune${index+1}`).addEventListener('mouseover', () => displayRuneInformation(index+1))\r\n    DOMCacheGetOrSet(`activaterune${index+1}`).addEventListener('click', () => redeemShards(index+1))\r\n\r\n  }\r\n\r\n  // Part 2: Talismans Subtab\r\n  const talismanBuyPercents = [10, 25, 50, 100]\r\n  const talismanBuyPercentsOrd = ['Ten', 'TwentyFive', 'Fifty', 'Hundred']\r\n\r\n  for (let index = 0; index < talismanBuyPercents.length; index++) {\r\n\r\n    DOMCacheGetOrSet(`talisman${talismanBuyPercentsOrd[index]}`).addEventListener('click', () => toggleTalismanBuy(talismanBuyPercents[index]))\r\n\r\n  }\r\n\r\n  DOMCacheGetOrSet('toggleautoBuyFragments').addEventListener('click', () => toggleAutoBuyFragment())\r\n  DOMCacheGetOrSet('toggleautoenhance').addEventListener('click', () => toggleautoenhance())\r\n  DOMCacheGetOrSet('toggleautofortify').addEventListener('click', () => toggleautofortify())\r\n\r\n  //Talisman Fragments/Shards\r\n  const talismanItemNames = ['shard', 'commonFragment', 'uncommonFragment', 'rareFragment', 'epicFragment', 'legendaryFragment', 'mythicalFragment'] as const\r\n  for (let index = 0; index < talismanItemNames.length; index++) {\r\n\r\n    DOMCacheGetOrSet(`buyTalismanItem${index+1}`).addEventListener('mouseover', () => updateTalismanCostDisplay(talismanItemNames[index]))\r\n    DOMCacheGetOrSet(`buyTalismanItem${index+1}`).addEventListener('click', () => buyTalismanResources(talismanItemNames[index]))\r\n\r\n  }\r\n\r\n  DOMCacheGetOrSet('buyTalismanAll').addEventListener('mouseover', () => updateTalismanCostDisplay(null))\r\n  DOMCacheGetOrSet('buyTalismanAll').addEventListener('click', () => buyAllTalismanResources())\r\n\r\n\r\n  for (let index = 0; index < 7; index++) {\r\n\r\n    DOMCacheGetOrSet(`talisman${index+1}`).addEventListener('click', () => showTalismanEffect(index))\r\n    DOMCacheGetOrSet(`leveluptalisman${index+1}`).addEventListener('mouseover', () => showTalismanPrices(index))\r\n    DOMCacheGetOrSet(`leveluptalisman${index+1}`).addEventListener('click', () => buyTalismanLevels(index))\r\n    DOMCacheGetOrSet(`enhancetalisman${index+1}`).addEventListener('mouseover', () => showEnhanceTalismanPrices(index))\r\n    DOMCacheGetOrSet(`enhancetalisman${index+1}`).addEventListener('click', () => buyTalismanEnhance(index))\r\n    DOMCacheGetOrSet(`respectalisman${index+1}`).addEventListener('click', () => showRespecInformation(index))\r\n\r\n  }\r\n\r\n  DOMCacheGetOrSet('respecAllTalismans').addEventListener('click', () => showRespecInformation(7))\r\n  DOMCacheGetOrSet('confirmTalismanRespec').addEventListener('click', () => respecTalismanConfirm(G.talismanRespec))\r\n  DOMCacheGetOrSet('cancelTalismanRespec').addEventListener('click', () => respecTalismanCancel(G.talismanRespec))\r\n\r\n  for (let index = 0; index < 5; index++) {\r\n\r\n    DOMCacheGetOrSet(`talismanRespecButton${index+1}`).addEventListener('click', () => changeTalismanModifier(index+1))\r\n\r\n  }\r\n\r\n  //Part 3: Blessings and Spirits\r\n  for (let index = 0; index < 5; index++) {\r\n\r\n    DOMCacheGetOrSet(`runeBlessingPurchase${index+1}`).addEventListener('click', () => buyRuneBonusLevels('Blessings', index+1))\r\n    DOMCacheGetOrSet(`runeSpiritPurchase${index+1}`).addEventListener('click', () => buyRuneBonusLevels('Spirits', index+1))\r\n\r\n  }\r\n  DOMCacheGetOrSet('buyRuneBlessingInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(1))\r\n  DOMCacheGetOrSet('buyRuneSpiritInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(2))\r\n\r\n  DOMCacheGetOrSet('buyAllBlessings').addEventListener('click', () => buyAllBlessings('Blessings'))\r\n  DOMCacheGetOrSet('buyAllSpirits').addEventListener('click', () => buyAllBlessings('Spirits'))\r\n\r\n  // CHALLENGES TAB\r\n  //Part 1: Challenges\r\n  // Challenge 1-15 buttons\r\n  for (let index = 0; index < 15; index++) {\r\n\r\n    DOMCacheGetOrSet(`challenge${index+1}`).addEventListener('click', () => challengeDisplay(index+1))\r\n    DOMCacheGetOrSet(`challenge${index+1}`).addEventListener('dblclick', () => {\r\n      challengeDisplay(index+1)\r\n      toggleChallenges(G.triggerChallenge, false)\r\n    })\r\n\r\n  }\r\n  //Part 2: QoL Buttons\r\n  // Individual buttons (Start, Retry)\r\n  DOMCacheGetOrSet('startChallenge').addEventListener('click', () => toggleChallenges(G.triggerChallenge, false))\r\n  DOMCacheGetOrSet('retryChallenge').addEventListener('click', () => toggleRetryChallenges())\r\n  // Autochallenge buttons\r\n  DOMCacheGetOrSet('toggleAutoChallengeIgnore').addEventListener('click', () => toggleAutoChallengesIgnore(G.triggerChallenge))\r\n  DOMCacheGetOrSet('toggleAutoChallengeStart').addEventListener('click', () => toggleAutoChallengeRun())\r\n  DOMCacheGetOrSet('startAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(1))\r\n  DOMCacheGetOrSet('exitAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(2))\r\n  DOMCacheGetOrSet('enterAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(3))\r\n\r\n  // RESEARCH TAB\r\n  //Part 1: Researches\r\n  // There are 200 researches, ideally in rewrite 200 would instead be length of research list/array\r\n  for (let index = 1; index < 200; index++) {\r\n\r\n    //Eliminates listeners on index.html 1404-1617\r\n    DOMCacheGetOrSet(`res${index}`).addEventListener('click', () => buyResearch(index))\r\n    DOMCacheGetOrSet(`res${index}`).addEventListener('mouseover', () => researchDescriptions(index))\r\n  }\r\n  //Research 200 is special, uses more params\r\n  DOMCacheGetOrSet('res200').addEventListener('click', () => buyResearch(200, false, 0.01))\r\n  DOMCacheGetOrSet('res200').addEventListener('mouseover', () => researchDescriptions(200, false, 0.01))\r\n\r\n  //Part 2: QoL buttons\r\n  DOMCacheGetOrSet('toggleresearchbuy').addEventListener('click', () => toggleResearchBuy())\r\n  DOMCacheGetOrSet('toggleautoresearch').addEventListener('click', () => toggleAutoResearch())\r\n  DOMCacheGetOrSet('toggleautoresearchmode').addEventListener('click', () => toggleAutoResearchMode())\r\n\r\n  // ANTHILL TAB\r\n  //Part 1: Ant Producers (Tiers 1-8)\r\n  const antProducerCostVals = ['null', '1e700', '3', '100', '10000', '1e12', '1e36', '1e100', '1e300']\r\n  for (let index = 1; index <= 8 ; index++) {\r\n\r\n    //Onmouse Events\r\n    DOMCacheGetOrSet(`anttier${index}`).addEventListener('mouseover', () => updateAntDescription(index))\r\n    DOMCacheGetOrSet(`anttier${index}`).addEventListener('mouseover', () => antRepeat(index))\r\n    //Onclick Events\r\n    DOMCacheGetOrSet(`anttier${index}`).addEventListener('click', () => buyAntProducers(\r\n        ordinals[index] as Parameters<typeof buyAntProducers>[0],\r\n        antProducerCostVals[index], index)\r\n    )\r\n  }\r\n  //Part 2: Ant Upgrades (1-12)\r\n  const antUpgradeCostVals = ['null', '100', '100', '1000', '1000', '1e5', '1e6', '1e8', '1e11', '1e15', '1e20', '1e40', '1e100']\r\n  for (let index = 1; index <= 12; index++) {\r\n\r\n    //Onmouse Event\r\n    DOMCacheGetOrSet(`antUpgrade${index}`).addEventListener('mouseover', () => antUpgradeDescription(index))\r\n    //Onclick Event\r\n    DOMCacheGetOrSet(`antUpgrade${index}`).addEventListener('click', () => buyAntUpgrade(antUpgradeCostVals[index], false, index))\r\n\r\n  }\r\n  //Part 3: Sacrifice\r\n  DOMCacheGetOrSet('antSacrifice').addEventListener('click', () => sacrificeAnts())\r\n\r\n  //Part 4: QoL Buttons\r\n  DOMCacheGetOrSet('toggleAntMax').addEventListener('click', () => toggleAntMaxBuy())\r\n  DOMCacheGetOrSet('toggleAutoSacrificeAnt').addEventListener('click', () => toggleAntAutoSacrifice(0))\r\n  DOMCacheGetOrSet('autoSacrificeAntMode').addEventListener('click', () => toggleAntAutoSacrifice(1))\r\n\r\n  // WOW! Cubes Tab\r\n  //Part 0: Subtab UI\r\n  for (let index = 0; index < 7; index++) {\r\n\r\n    DOMCacheGetOrSet(`switchCubeSubTab${index+1}`).addEventListener('click', () => changeSubTab('cube', { page: index }))\r\n\r\n  }\r\n\r\n  //Part 1: Cube Upgrades\r\n  for (let index = 1; index < player.cubeUpgrades.length; index++) {\r\n\r\n    DOMCacheGetOrSet(`cubeUpg${index}`).addEventListener('mouseover', () => cubeUpgradeDesc(index))\r\n    DOMCacheGetOrSet(`cubeUpg${index}`).addEventListener('click', () => buyCubeUpgrades(index))\r\n\r\n  }\r\n\r\n  // Toggle\r\n  DOMCacheGetOrSet('toggleCubeBuy').addEventListener('click', () => toggleMaxBuyCube())\r\n  DOMCacheGetOrSet('toggleAutoCubeUpgrades').addEventListener('click', () => autoCubeUpgradesToggle())\r\n\r\n  //Part 2: Cube Opening Buttons\r\n  //Wow Cubes\r\n  DOMCacheGetOrSet('open1Cube').addEventListener('click', () => player.wowCubes.open(1, false))\r\n  DOMCacheGetOrSet('open20Cube').addEventListener('click', () => player.wowCubes.open(Math.floor(Number(player.wowCubes) / 10), false))\r\n  DOMCacheGetOrSet('open1000Cube').addEventListener('click', () => player.wowCubes.open(Math.floor(Number(player.wowCubes) / 2), false))\r\n  DOMCacheGetOrSet('openCustomCube').addEventListener('click', () => player.wowCubes.openCustom())\r\n  DOMCacheGetOrSet('openMostCube').addEventListener('click', () => player.wowCubes.open(0, true))\r\n  //Wow Tesseracts\r\n  DOMCacheGetOrSet('open1Tesseract').addEventListener('click', () => player.wowTesseracts.open(1, false))\r\n  DOMCacheGetOrSet('open20Tesseract').addEventListener('click', () => player.wowTesseracts.open(Math.floor(Number(player.wowTesseracts) / 10), false))\r\n  DOMCacheGetOrSet('open1000Tesseract').addEventListener('click', () => player.wowTesseracts.open(Math.floor(Number(player.wowTesseracts) / 2), false))\r\n  DOMCacheGetOrSet('openCustomTesseract').addEventListener('click', () => player.wowTesseracts.openCustom())\r\n  DOMCacheGetOrSet('openMostTesseract').addEventListener('click', () => player.wowTesseracts.open(1, true))\r\n  //Wow Hypercubes\r\n  DOMCacheGetOrSet('open1Hypercube').addEventListener('click', () => player.wowHypercubes.open(1, false))\r\n  DOMCacheGetOrSet('open20Hypercube').addEventListener('click', () => player.wowHypercubes.open(Math.floor(Number(player.wowHypercubes) / 10), false))\r\n  DOMCacheGetOrSet('open1000Hypercube').addEventListener('click', () => player.wowHypercubes.open(Math.floor(Number(player.wowHypercubes) / 2), false))\r\n  DOMCacheGetOrSet('openCustomHypercube').addEventListener('click', () => player.wowHypercubes.openCustom())\r\n  DOMCacheGetOrSet('openMostHypercube').addEventListener('click', () => player.wowHypercubes.open(1, true))\r\n  //Wow Platonic Cubes\r\n  DOMCacheGetOrSet('open1PlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1, false))\r\n  DOMCacheGetOrSet('open40kPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(Math.floor(Number(player.wowPlatonicCubes) / 10), false))\r\n  DOMCacheGetOrSet('open1mPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(Math.floor(Number(player.wowPlatonicCubes) / 2), false))\r\n  DOMCacheGetOrSet('openCustomPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.openCustom())\r\n  DOMCacheGetOrSet('openMostPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1, true))\r\n\r\n  DOMCacheGetOrSet('saveOffToggle').addEventListener('click', () => toggleSaveOff())\r\n  //Part 3: Platonic Upgrade Section\r\n  const platonicUpgrades = document.getElementsByClassName('platonicUpgradeImage')\r\n  for (let index = 0; index < platonicUpgrades.length; index++) {\r\n\r\n    platonicUpgrades[index].addEventListener('mouseover', () => createPlatonicDescription(index+1))\r\n    platonicUpgrades[index].addEventListener('click', () => buyPlatonicUpgrades(index+1))\r\n\r\n  }\r\n  DOMCacheGetOrSet('toggleAutoPlatonicUpgrades').addEventListener('click', () => autoPlatonicUpgradesToggle())\r\n\r\n  //Part 4: Hepteract Subtab\r\n  DOMCacheGetOrSet('chronosHepteract').addEventListener('mouseover', () => hepteractDescriptions('chronos'))\r\n  DOMCacheGetOrSet('hyperrealismHepteract').addEventListener('mouseover', () => hepteractDescriptions('hyperrealism'))\r\n  DOMCacheGetOrSet('quarkHepteract').addEventListener('mouseover', () => hepteractDescriptions('quark'))\r\n  DOMCacheGetOrSet('challengeHepteract').addEventListener('mouseover', () => hepteractDescriptions('challenge'))\r\n  DOMCacheGetOrSet('abyssHepteract').addEventListener('mouseover', () => hepteractDescriptions('abyss'))\r\n  DOMCacheGetOrSet('acceleratorHepteract').addEventListener('mouseover', () => hepteractDescriptions('accelerator'))\r\n  DOMCacheGetOrSet('acceleratorBoostHepteract').addEventListener('mouseover', () => hepteractDescriptions('acceleratorBoost'))\r\n  DOMCacheGetOrSet('multiplierHepteract').addEventListener('mouseover', () => hepteractDescriptions('multiplier'))\r\n\r\n\r\n  DOMCacheGetOrSet('chronosHepteractCraft').addEventListener('click', () => player.hepteractCrafts.chronos.craft())\r\n  DOMCacheGetOrSet('hyperrealismHepteractCraft').addEventListener('click', () => player.hepteractCrafts.hyperrealism.craft())\r\n  DOMCacheGetOrSet('quarkHepteractCraft').addEventListener('click', () => player.hepteractCrafts.quark.craft())\r\n  DOMCacheGetOrSet('challengeHepteractCraft').addEventListener('click', () => player.hepteractCrafts.challenge.craft())\r\n  DOMCacheGetOrSet('abyssHepteractCraft').addEventListener('click', () => player.hepteractCrafts.abyss.craft())\r\n  DOMCacheGetOrSet('acceleratorHepteractCraft').addEventListener('click', () => player.hepteractCrafts.accelerator.craft())\r\n  DOMCacheGetOrSet('acceleratorBoostHepteractCraft').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.craft())\r\n  DOMCacheGetOrSet('multiplierHepteractCraft').addEventListener('click', () => player.hepteractCrafts.multiplier.craft())\r\n\r\n  DOMCacheGetOrSet('chronosHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.chronos.craft(true))\r\n  DOMCacheGetOrSet('hyperrealismHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.hyperrealism.craft(true))\r\n  DOMCacheGetOrSet('quarkHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.quark.craft(true))\r\n  DOMCacheGetOrSet('challengeHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.challenge.craft(true))\r\n  DOMCacheGetOrSet('abyssHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.abyss.craft(true))\r\n  DOMCacheGetOrSet('acceleratorHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.accelerator.craft(true))\r\n  DOMCacheGetOrSet('acceleratorBoostHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.craft(true))\r\n  DOMCacheGetOrSet('multiplierHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.multiplier.craft(true))\r\n\r\n  DOMCacheGetOrSet('chronosHepteractCap').addEventListener('click', () => player.hepteractCrafts.chronos.expand())\r\n  DOMCacheGetOrSet('hyperrealismHepteractCap').addEventListener('click', () => player.hepteractCrafts.hyperrealism.expand())\r\n  DOMCacheGetOrSet('quarkHepteractCap').addEventListener('click', () => player.hepteractCrafts.quark.expand())\r\n  DOMCacheGetOrSet('challengeHepteractCap').addEventListener('click', () => player.hepteractCrafts.challenge.expand())\r\n  DOMCacheGetOrSet('abyssHepteractCap').addEventListener('click', () => player.hepteractCrafts.abyss.expand())\r\n  DOMCacheGetOrSet('acceleratorHepteractCap').addEventListener('click', () => player.hepteractCrafts.accelerator.expand())\r\n  DOMCacheGetOrSet('acceleratorBoostHepteractCap').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.expand())\r\n  DOMCacheGetOrSet('multiplierHepteractCap').addEventListener('click', () => player.hepteractCrafts.multiplier.expand())\r\n\r\n  DOMCacheGetOrSet('chronosHepteractAuto').addEventListener('click', () => player.hepteractCrafts.chronos.toggleAutomatic())\r\n  DOMCacheGetOrSet('hyperrealismHepteractAuto').addEventListener('click', () => player.hepteractCrafts.hyperrealism.toggleAutomatic())\r\n  DOMCacheGetOrSet('quarkHepteractAuto').addEventListener('click', () => player.hepteractCrafts.quark.toggleAutomatic())\r\n  DOMCacheGetOrSet('challengeHepteractAuto').addEventListener('click', () => player.hepteractCrafts.challenge.toggleAutomatic())\r\n  DOMCacheGetOrSet('abyssHepteractAuto').addEventListener('click', () => player.hepteractCrafts.abyss.toggleAutomatic())\r\n  DOMCacheGetOrSet('acceleratorHepteractAuto').addEventListener('click', () => player.hepteractCrafts.accelerator.toggleAutomatic())\r\n  DOMCacheGetOrSet('acceleratorBoostHepteractAuto').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.toggleAutomatic())\r\n  DOMCacheGetOrSet('multiplierHepteractAuto').addEventListener('click', () => player.hepteractCrafts.multiplier.toggleAutomatic())\r\n\r\n  DOMCacheGetOrSet('hepteractToQuark').addEventListener('mouseover', () => hepteractToOverfluxOrbDescription())\r\n  DOMCacheGetOrSet('hepteractToQuarkTrade').addEventListener('click', () => tradeHepteractToOverfluxOrb())\r\n  DOMCacheGetOrSet('hepteractToQuarkTradeMax').addEventListener('click', () => tradeHepteractToOverfluxOrb(true))\r\n  DOMCacheGetOrSet('hepteractToQuarkTradeAuto').addEventListener('click', () => toggleAutoBuyOrbs())\r\n  DOMCacheGetOrSet('overfluxPowder').addEventListener('mouseover', () => overfluxPowderDescription())\r\n  DOMCacheGetOrSet('powderDayWarp').addEventListener('click', () => overfluxPowderWarp(false))\r\n  DOMCacheGetOrSet('warpAuto').addEventListener('click', () => overfluxPowderWarp(true))\r\n\r\n  DOMCacheGetOrSet('hepteractAutoPercentageButton').addEventListener('click', () => toggleHepteractAutoPercentage())\r\n\r\n  // CORRUPTION TAB\r\n  //Part 0: Subtabs\r\n  DOMCacheGetOrSet('corrStatsBtn').addEventListener('click', () => changeSubTab('traits', { page: 0 }))\r\n  DOMCacheGetOrSet('corrLoadoutsBtn').addEventListener('click', () => changeSubTab('traits', { page: 1 }))\r\n\r\n  //Part 1: Displays\r\n  DOMCacheGetOrSet('corruptionDisplays').addEventListener('click', () => corruptionDisplay(10))\r\n  DOMCacheGetOrSet('corruptionCleanse').addEventListener('click', () => corruptionCleanseConfirm())\r\n  DOMCacheGetOrSet('corruptionCleanseConfirm').addEventListener('click', () => toggleCorruptionLevel(10, 999))\r\n\r\n  //Extra toggle\r\n  DOMCacheGetOrSet('ascensionAutoEnable').addEventListener('click', () => toggleAutoAscend(0))\r\n  DOMCacheGetOrSet('ascensionAutoToggle').addEventListener('click', () => toggleAutoAscend(1))\r\n\r\n  // SETTNGS TAB\r\n  // Part 0: Subtabs\r\n  const settingSubTabs = Array.from<HTMLElement>(document.querySelectorAll('[id^=\"switchSettingSubTab\"]'))\r\n  for (const subtab of settingSubTabs) {\r\n    subtab.addEventListener('click', () => changeSubTab('settings', { page: settingSubTabs.indexOf(subtab) }))\r\n  }\r\n\r\n  const t = Array.from(document.querySelectorAll<HTMLElement>('button.statsNerds'))\r\n  for (const s of t) {\r\n    s.addEventListener('click', (e) => displayStats(e.target as HTMLElement))\r\n  }\r\n\r\n  DOMCacheGetOrSet('summaryGeneration').addEventListener('click', () => generateExportSummary())\r\n\r\n  // Various functions\r\n  DOMCacheGetOrSet('exportgame').addEventListener('click', () => exportSynergism())\r\n  DOMCacheGetOrSet('saveStringInput').addEventListener('blur', e => updateSaveString(e.target as HTMLInputElement))\r\n  DOMCacheGetOrSet('savegame').addEventListener('click', () => saveSynergy(true))\r\n  DOMCacheGetOrSet('deleteGame').addEventListener('click', () => resetGame())\r\n  DOMCacheGetOrSet('preloadDeleteGame').addEventListener('click', () => reloadDeleteGame())\r\n  DOMCacheGetOrSet('promocodes').addEventListener('click', () => promocodesPrompt())\r\n  DOMCacheGetOrSet('addCode').addEventListener('click', () => promocodes('add'))\r\n  DOMCacheGetOrSet('addCode').addEventListener('mouseover', () => promocodesInfo('add'))\r\n  DOMCacheGetOrSet('addCodeOne').addEventListener('click', () => promocodes('add', 1))\r\n  DOMCacheGetOrSet('addCodeOne').addEventListener('mouseover', () => promocodesInfo('add'))\r\n  DOMCacheGetOrSet('dailyCode').addEventListener('click', () => promocodes('daily'))\r\n  DOMCacheGetOrSet('dailyCode').addEventListener('mouseover', () => promocodesInfo('daily'))\r\n  DOMCacheGetOrSet('timeCode').addEventListener('click', () => promocodes('time'))\r\n  DOMCacheGetOrSet('timeCode').addEventListener('mouseover', () => promocodesInfo('time'))\r\n  DOMCacheGetOrSet('historyTogglePerSecondButton').addEventListener('click', () => resetHistoryTogglePerSecond())\r\n  DOMCacheGetOrSet('resetHotkeys').addEventListener('click', () => resetHotkeys())\r\n  DOMCacheGetOrSet('notation').addEventListener('click', () => toggleAnnotation())\r\n  DOMCacheGetOrSet('iconSet').addEventListener('click', () => toggleIconSet(player.iconSet + 1))\r\n\r\n  // SHOP TAB\r\n\r\n  /*\r\n\r\nTODO: Fix this entire tab it's utter shit\r\n\r\n*/\r\n\r\n  // Part 1: The Settings\r\n  /*Respec The Upgrades*/ DOMCacheGetOrSet('resetShopUpgrades').addEventListener('click', () => resetShopUpgrades())\r\n  /*Toggle Shop Confirmations*/ DOMCacheGetOrSet('toggleConfirmShop').addEventListener('click', () => toggleShopConfirmation())\r\n  /*Toggle Shop Buy Max*/ DOMCacheGetOrSet('toggleBuyMaxShop').addEventListener('click', (event) => toggleBuyMaxShop(event))\r\n  /*Toggle Hide Permanent Maxed*/ DOMCacheGetOrSet('toggleHideShop').addEventListener('click', () => toggleHideShop())\r\n\r\n  // Part 2: Potions\r\n  /*Offering Potion*/\r\n  DOMCacheGetOrSet('offeringPotions').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\r\n  DOMCacheGetOrSet('offeringpotionowned').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\r\n  DOMCacheGetOrSet('buyofferingpotion').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\r\n  DOMCacheGetOrSet('useofferingpotion').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\r\n  DOMCacheGetOrSet('buyofferingpotion').addEventListener('click', () => buyShopUpgrades('offeringPotion'))\r\n  //DOMCacheGetOrSet('offeringPotions').addEventListener('click', () => buyShopUpgrades(\"offeringPotion\"))  //Allow clicking of image to buy also\r\n  DOMCacheGetOrSet('useofferingpotion').addEventListener('click', () => useConsumable('offeringPotion'))\r\n  DOMCacheGetOrSet('toggle42').addEventListener('click', () => {\r\n    player.autoPotionTimer = 0\r\n  })\r\n  /*Obtainium Potion*/\r\n  DOMCacheGetOrSet('obtainiumPotions').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\r\n  DOMCacheGetOrSet('obtainiumpotionowned').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\r\n  DOMCacheGetOrSet('buyobtainiumpotion').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\r\n  DOMCacheGetOrSet('useobtainiumpotion').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\r\n  DOMCacheGetOrSet('buyobtainiumpotion').addEventListener('click', () => buyShopUpgrades('obtainiumPotion'))\r\n  //DOMCacheGetOrSet('obtainiumPotions').addEventListener('click', () => buyShopUpgrades(\"obtainiumPotion\"))  //Allow clicking of image to buy also\r\n  DOMCacheGetOrSet('useobtainiumpotion').addEventListener('click', () => useConsumable('obtainiumPotion'))\r\n  DOMCacheGetOrSet('toggle43').addEventListener('click', () => {\r\n    player.autoPotionTimerObtainium = 0\r\n  })\r\n  /* Permanent Upgrade Images */\r\n  const shopKeys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\r\n  for (const key of shopKeys) {\r\n    const shopItem = shopData[key]\r\n    if (shopItem.type === shopUpgradeTypes.UPGRADE) {\r\n      DOMCacheGetOrSet(`${key}`).addEventListener('mouseover', () => shopDescriptions(key))\r\n      DOMCacheGetOrSet(`${key}Level`).addEventListener('mouseover', () => shopDescriptions(key))\r\n      DOMCacheGetOrSet(`${key}Button`).addEventListener('mouseover', () => shopDescriptions(key))\r\n      //DOMCacheGetOrSet(`${key}`).addEventListener('click', () => buyShopUpgrades(key))  //Allow clicking of image to buy also\r\n      DOMCacheGetOrSet(`${key}Button`).addEventListener('click', () => buyShopUpgrades(key))\r\n    }\r\n  }\r\n  DOMCacheGetOrSet('buySingularityQuarksButton').addEventListener('click', () => buyGoldenQuarks())\r\n  // SINGULARITY TAB\r\n  const singularityUpgrades = Object.keys(player.singularityUpgrades) as (keyof Player['singularityUpgrades'])[]\r\n  for (const key of singularityUpgrades) {\r\n    if (key === 'offeringAutomatic') {\r\n      continue\r\n    }\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('mouseover', () => player.singularityUpgrades[`${String(key)}`].updateUpgradeHTML())\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('click', (event) => player.singularityUpgrades[`${String(key)}`].buyLevel(event))\r\n  }\r\n  DOMCacheGetOrSet('actualSingularityUpgradeContainer').addEventListener('mouseover', () => shopMouseover(true))\r\n  DOMCacheGetOrSet('actualSingularityUpgradeContainer').addEventListener('mouseout', () => shopMouseover(false))\r\n\r\n  // Octeract Upgrades\r\n  const octeractUpgrades = Object.keys(player.octeractUpgrades) as (keyof Player['octeractUpgrades'])[]\r\n  for (const key of octeractUpgrades) {\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('mouseover', () => player.octeractUpgrades[`${String(key)}`].updateUpgradeHTML())\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('click', (event) => player.octeractUpgrades[`${String(key)}`].buyLevel(event))\r\n  }\r\n\r\n  DOMCacheGetOrSet('octeractUpgradeContainer').addEventListener('mouseover', () => shopMouseover(true))\r\n  DOMCacheGetOrSet('octeractUpgradeContainer').addEventListener('mouseout', () => shopMouseover(false))\r\n\r\n  // EXALT\r\n  const singularityChallenges = Object.keys(player.singularityChallenges) as (keyof Player['singularityChallenges'])[]\r\n  for (const key of singularityChallenges) {\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('mouseover', () => player.singularityChallenges[`${String(key)}`].updateChallengeHTML())\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('click', () => player.singularityChallenges[`${String(key)}`].challengeEntryHandler())\r\n  }\r\n\r\n  // BLUEBERRY UPGRADES\r\n  const blueberryUpgrades = Object.keys(player.blueberryUpgrades) as (keyof Player['blueberryUpgrades'])[]\r\n  for (const key of blueberryUpgrades) {\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('mouseover', () => player.blueberryUpgrades[`${String(key)}`].updateUpgradeHTML())\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('click', (event) => player.blueberryUpgrades[`${String(key)}`].buyLevel(event))\r\n  }\r\n\r\n  DOMCacheGetOrSet('refundBlueberries').addEventListener('click', () => resetBlueberryTree())\r\n  //Toggle subtabs of Singularity tab\r\n  for (let index = 0; index < 6; index++) {\r\n    DOMCacheGetOrSet(`toggleSingularitySubTab${index+1}`).addEventListener('click', () => changeSubTab('singularity', { page: index }))\r\n  }\r\n\r\n  const tabs = document.querySelectorAll<HTMLElement>('#tabrow > button')\r\n  tabs.forEach(b => b.addEventListener('click', () => changeTabColor()))\r\n\r\n  // EVENT TAB (Replace as events are created)\r\n  DOMCacheGetOrSet('unsmith').addEventListener('click', () => clickSmith())\r\n\r\n  // Import button\r\n  DOMCacheGetOrSet('importfile').addEventListener('change', async e => {\r\n    const element = e.target as HTMLInputElement\r\n    const file = element.files![0]\r\n    let save = ''\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Blob/text\r\n    // not available in (bad) browsers like Safari 11\r\n    if (typeof Blob.prototype.text === 'function') {\r\n      save = await file.text()\r\n    } else {\r\n      const reader = new FileReader()\r\n      reader.readAsText(file)\r\n      const text = await new Promise<string>(res => {\r\n        reader.addEventListener('load', () => res(reader.result!.toString()))\r\n      })\r\n\r\n      save = text\r\n    }\r\n\r\n    element.value = ''\r\n    handleLastModified(file.lastModified)\r\n\r\n    return importSynergism(save)\r\n  })\r\n\r\n  for (let i = 1; i <= 5; i++) {\r\n    DOMCacheGetOrSet(`switchTheme${i}`).addEventListener('click', () => toggleTheme(false, i, true))\r\n  }\r\n\r\n  DOMCacheGetOrSet('saveType').addEventListener('click', async (event) => {\r\n    const element = event.target as HTMLInputElement\r\n\r\n    if (!element.checked) {\r\n      localStorage.removeItem('copyToClipboard')\r\n      event.stopPropagation()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    const confirmed = await Confirm(i18next.t('save.saveToClipboard'))\r\n\r\n    if (confirmed) {\r\n      element.checked = !element.checked\r\n      localStorage.setItem('copyToClipboard', '')\r\n    } else {\r\n      localStorage.removeItem('copyToClipboard')\r\n    }\r\n  })\r\n\r\n  // Window\r\n  window.addEventListener('error', imgErrorHandler, { capture: true })\r\n}\r\n", "import { format, player, formatTimeShort } from './Synergism'\r\nimport { Alert, Prompt } from './UpdateHTML'\r\nimport type { IUpgradeData } from './DynamicUpgrade'\r\nimport { DynamicUpgrade } from './DynamicUpgrade'\r\nimport type { Player } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { octeractGainPerSecond } from './Calculate'\r\nimport i18next from 'i18next'\r\n\r\nexport interface IOcteractData extends Omit<IUpgradeData, 'name' | 'description'> {\r\n    costFormula (this: void, level: number, baseCost: number): number\r\n    octeractsInvested?: number\r\n    qualityOfLife?: boolean\r\n}\r\n\r\nexport class OcteractUpgrade extends DynamicUpgrade {\r\n  readonly costFormula: (level: number, baseCost: number) => number\r\n  public octeractsInvested = 0\r\n  public qualityOfLife: boolean\r\n\r\n  constructor(data: IOcteractData, key: string) {\r\n    const name = i18next.t(`octeract.data.${key}.name`)\r\n    const description = i18next.t(`octeract.data.${key}.description`)\r\n    super({ ... data, name, description })\r\n    this.costFormula = data.costFormula\r\n    this.octeractsInvested = data.octeractsInvested ?? 0\r\n    this.qualityOfLife = data.qualityOfLife ?? false\r\n  }\r\n\r\n  getCostTNL(): number {\r\n\r\n    if (this.level === this.maxLevel) {\r\n      return 0\r\n    }\r\n\r\n    return this.costFormula(this.level, this.costPerLevel)\r\n  }\r\n\r\n  /**\r\n     * Buy levels up until togglebuy or maxed.\r\n     * @returns An alert indicating cannot afford, already maxed or purchased with how many\r\n     *          levels purchased\r\n     */\r\n  public async buyLevel(event: MouseEvent): Promise<void> {\r\n    let purchased = 0\r\n    let maxPurchasable = 1\r\n    let OCTBudget = player.wowOcteracts\r\n\r\n    if (event.shiftKey) {\r\n      maxPurchasable = 1000000\r\n      const buy = Number(await Prompt(`${i18next.t('octeract.buyLevel.buyPrompt', { n: format(player.wowOcteracts, 0, true) })}`))\r\n\r\n      if (isNaN(buy) || !isFinite(buy) || !Number.isInteger(buy)) { // nan + Infinity checks\r\n        return Alert(i18next.t('general.validation.finite'))\r\n      }\r\n\r\n      if (buy === -1) {\r\n        OCTBudget = player.wowOcteracts\r\n      } else if (buy <= 0) {\r\n        return Alert(i18next.t('octeract.buyLevel.cancelPurchase'))\r\n      } else {\r\n        OCTBudget = buy\r\n      }\r\n      OCTBudget = Math.min(player.wowOcteracts, OCTBudget)\r\n    }\r\n\r\n    if (this.maxLevel > 0) {\r\n      maxPurchasable = Math.min(maxPurchasable, this.maxLevel - this.level)\r\n    }\r\n\r\n    if (maxPurchasable === 0) {\r\n      return Alert(i18next.t('octeract.buyLevel.alreadyMax'))\r\n    }\r\n\r\n    while (maxPurchasable > 0) {\r\n      const cost = this.getCostTNL()\r\n      if (player.wowOcteracts < cost || OCTBudget < cost) {\r\n        break\r\n      } else {\r\n        player.wowOcteracts -= cost\r\n        OCTBudget -= cost\r\n        this.octeractsInvested += cost\r\n        this.level += 1\r\n        purchased += 1\r\n        maxPurchasable -= 1\r\n      }\r\n    }\r\n\r\n    if (purchased === 0) {\r\n      return Alert(i18next.t('octeract.buyLevel.cannotAfford'))\r\n    }\r\n    if (purchased > 1) {\r\n      return Alert(`${i18next.t('octeract.buyLevel.multiBuy', { n: format(purchased) })}`)\r\n    }\r\n\r\n    if (this.name === player.octeractUpgrades.octeractAmbrosiaLuck.name) {\r\n      player.caches.ambrosiaLuck.updateVal('OcteractBerries')\r\n    }\r\n\r\n    this.updateUpgradeHTML()\r\n  }\r\n\r\n  /**\r\n     * Given an upgrade, give a concise information regarding its data.\r\n     * @returns A string that details the name, description, level statistic, and next level cost.\r\n     */\r\n  toString(): string {\r\n    const costNextLevel = this.getCostTNL()\r\n    const maxLevel = this.maxLevel === -1\r\n      ? ''\r\n      : `/${format(this.maxLevel, 0, true)}`\r\n    const isMaxLevel = this.maxLevel === this.level\r\n    const color = isMaxLevel ? 'plum' : 'white'\r\n\r\n    let freeLevelInfo = this.freeLevels > 0 ?\r\n      `<span style=\"color: orange\"> [+${format(this.freeLevels, 1, true)}]</span>` : ''\r\n\r\n    if (this.freeLevels > this.level) {\r\n      freeLevelInfo = freeLevelInfo + `<span style=\"color: var(--maroon-text-color)\">${i18next.t('general.softCapped')}</span>`\r\n    }\r\n\r\n    const isAffordable = costNextLevel <= player.wowOcteracts\r\n    let affordTime = ''\r\n    if (!isMaxLevel && !isAffordable) {\r\n      const octPerSecond = octeractGainPerSecond()\r\n      affordTime = octPerSecond > 0 ? formatTimeShort((costNextLevel - player.wowOcteracts) / octPerSecond) : `${i18next.t('general.infinity')}`\r\n    }\r\n    const affordableInfo = isMaxLevel ? `<span style=\"color: plum\"> ${i18next.t('general.maxed')}</span>` :\r\n      isAffordable ? `<span style=\"color: var(--green-text-color)\"> ${i18next.t('general.affordable')}</span>` :\r\n        `<span style=\"color: yellow\"> ${i18next.t('octeract.toString.becomeAffordable', { n: affordTime })}</span>`\r\n\r\n    return `<span style=\"color: gold\">${this.name}</span>\r\n                <span style=\"color: lightblue\">${this.description}</span>\r\n                <span style=\"color: ${color}\"> ${i18next.t('general.level')} ${format(this.level, 0, true)}${maxLevel}${freeLevelInfo}</span>\r\n                <span style=\"color: gold\">${this.getEffect().desc}</span>\r\n                ${i18next.t('octeract.toString.costNextLevel')} ${format(costNextLevel, 2, true, true, true)} Octeracts${affordableInfo}\r\n                ${i18next.t('general.spent')} Octeracts: ${format(this.octeractsInvested, 2, true, true, true)}`\r\n  }\r\n\r\n  public updateUpgradeHTML(): void {\r\n    DOMCacheGetOrSet('singularityOcteractsMultiline').innerHTML = this.toString()\r\n    DOMCacheGetOrSet('octeractAmount').innerHTML = i18next.t('octeract.amount', { octeracts: format(player.wowOcteracts, 2, true, true, true) })\r\n  }\r\n\r\n  public computeFreeLevelSoftcap(): number {\r\n    return Math.min(this.level, this.freeLevels) + Math.sqrt(Math.max(0, this.freeLevels - this.level))\r\n  }\r\n\r\n  public actualTotalLevels(): number {\r\n    if (player.singularityChallenges.noOcteracts.enabled && !this.qualityOfLife) {\r\n      return 0\r\n    }\r\n    const actualFreeLevels = this.computeFreeLevelSoftcap()\r\n    const linearLevels = this.level + actualFreeLevels\r\n    return linearLevels // There is currently no 'improvement' to oct free upgrades.\r\n  }\r\n\r\n  public getEffect(): { bonus: number | boolean, desc: string } {\r\n    return this.effect(this.actualTotalLevels())\r\n  }\r\n\r\n  public refund(): void {\r\n    player.wowOcteracts += this.octeractsInvested\r\n    this.level = 0\r\n    this.octeractsInvested = 0\r\n  }\r\n\r\n}\r\n\r\nexport const octeractData: Record<keyof Player['octeractUpgrades'], IOcteractData> = {\r\n  octeractStarter: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * (level + 1)\r\n    },\r\n    maxLevel: 1,\r\n    costPerLevel: 1e-15,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractStarter.effect', { n: (n > 0) ? '' : 'not' })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractGain: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * (Math.pow(level + 1, 6) - Math.pow(level, 6))\r\n    },\r\n    maxLevel: 1e8,\r\n    costPerLevel: 1e-8,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.011 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractGain.effect', { n: format(n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractGain2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(10, Math.pow(level, 0.5) / 3)\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractGain2.effect', { n: format(n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractQuarkGain: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      if (level < 1000) {\r\n        return baseCost * (Math.pow(level + 1, 7) - Math.pow(level, 7))\r\n      } else {\r\n        const fasterMult = (level >= 10000) ? (Math.pow(10, (level - 10000) / 250)) : 1\r\n        const fasterMult2 = (level >= 15000) ? (Math.pow(10, (level - 15000) / 250)) : 1\r\n        return baseCost * (Math.pow(1001, 7) - Math.pow(1000, 7)) * Math.pow(10, level / 1000) * fasterMult * fasterMult2\r\n      }\r\n    },\r\n    maxLevel: 20000,\r\n    costPerLevel: 1e-7,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.011 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractQuarkGain.effect', { n: format(1.1*n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractQuarkGain2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e20, level)\r\n    },\r\n    maxLevel: 5,\r\n    costPerLevel: 1e22,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractQuarkGain2.effect', { n: n > 0 ? '' : 'NOT' })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractCorruption: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(10, level * 10)\r\n    },\r\n    maxLevel: 2,\r\n    costPerLevel: 10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractCorruption.effect', { n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractGQCostReduce: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(2, level)\r\n    },\r\n    maxLevel: 50,\r\n    costPerLevel: 1e-9,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 - n/100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractGQCostReduce.effect', { n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractExportQuarks: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 100,\r\n    costPerLevel: 1,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 4 * n/10 + 1,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractExportQuarks.effect', { n: format(40 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedDaily: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1.6, level)\r\n    },\r\n    maxLevel: 50,\r\n    costPerLevel: 1e-3,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedDaily.effect', { n })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  octeractImprovedDaily2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(2, level)\r\n    },\r\n    maxLevel: 50,\r\n    costPerLevel: 1e-2,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedDaily2.effect', { n })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  octeractImprovedDaily3: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(20, level)\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e20,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedDaily3.effect', { n: `${n} +${0.5 * n}%` })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  octeractImprovedQuarkHept: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e6, level)\r\n    },\r\n    maxLevel: 3,\r\n    costPerLevel: 1/10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n / 100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedQuarkHept.effect', { n: format(n/100, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedGlobalSpeed: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 1000,\r\n    costPerLevel: 1e-5,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n/100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedGlobalSpeed.effect', { n: format(n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedAscensionSpeed: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e9, level / 100)\r\n    },\r\n    maxLevel: 100,\r\n    costPerLevel: 100,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n / 2000,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedAscensionSpeed.effect', { n: format(n/20, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedAscensionSpeed2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e12, level / 250)\r\n    },\r\n    maxLevel: 250,\r\n    costPerLevel: 1e5,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n / 2000,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedAscensionSpeed2.effect', { n: format(n/50, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedFree: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 1,\r\n    costPerLevel: 100,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedFree.effect', { n: (n > 0) ? '' : 'NOT' })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedFree2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 1,\r\n    costPerLevel: 1e7,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 0.05 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedFree2.effect', { n: format(n / 20, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedFree3: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 1,\r\n    costPerLevel: 1e17,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 0.05 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedFree3.effect', { n: format(n/20, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedFree4: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e20, level / 40)\r\n    },\r\n    maxLevel: 40,\r\n    costPerLevel: 1e20,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 0.001 * n + ((n > 0)? 0.01: 0),\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedFree4.effect', { n: format(0.001 * n + ((n > 0)? 0.01: 0), 3, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractSingUpgradeCap: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e3, level)\r\n    },\r\n    maxLevel: 10,\r\n    costPerLevel: 1e10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractSingUpgradeCap.effect', { n })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  octeractOfferings1: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      if (level < 25) {\r\n        return baseCost * Math.pow(level + 1, 5)\r\n      } else {\r\n        return baseCost * 1e15 * Math.pow(10, level / 25 - 1)\r\n      }\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e-15,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractOfferings1.effect', { n: format(n) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractObtainium1: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      if (level < 25) {\r\n        return baseCost * Math.pow(level + 1, 5)\r\n      } else {\r\n        return baseCost * 1e15 * Math.pow(10, level / 25 - 1)\r\n      }\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e-15,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractObtainium1.effect', { n: format(n) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractAscensions: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 1000000,\r\n    costPerLevel: 1,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (1 + n / 100) * (1 + 2 * Math.floor(n / 10) / 100),\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAscensions.effect', { n: format((100 + n) * (1 + 2 * Math.floor(n/10) / 100) - 100, 1, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractAscensions2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(10, Math.pow(level, 0.5) / 3)\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e12,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (1 + n / 100) * (1 + 2 * Math.floor(n / 10) / 100),\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAscensions2.effect', { n: format((100 + n) * (1 + 2 * Math.floor(n/10) / 100) - 100, 1, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractAscensionsOcteractGain: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(40, level)\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1000,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n / 100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAscensionsOcteractGain.effect', { n: format(n, 1, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractFastForward: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e8, level)\r\n    },\r\n    maxLevel: 2,\r\n    costPerLevel: 1e8,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractFastForward.effect', { n100: 100 * n, n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractAutoPotionSpeed: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(10, level)\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e-10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 4 * n / 100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAutoPotionSpeed.effect', { n: 4 * n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractAutoPotionEfficiency: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(10, level)\r\n    },\r\n    maxLevel: 100,\r\n    costPerLevel: 1e-10 * Math.pow(10, 0.5),\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 2 * n / 100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAutoPotionEfficiency.effect', { n: 2 * n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractOneMindImprover: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      const fasterMult = (level >= 10) ? (Math.pow(1e3, level - 10)) : 1\r\n      return baseCost * Math.pow(1e5, level) * fasterMult\r\n    },\r\n    maxLevel: 16,\r\n    costPerLevel: 1e25,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 0.55 + n / 150,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractOneMindImprover.effect', { n: format(0.55 + n / 150, 3, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  octeractAmbrosiaLuck: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      const useLevel = level + 1\r\n      return baseCost * (Math.pow(10, useLevel) - Math.pow(10, useLevel - 1))\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e60 / 9,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 3 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAmbrosiaLuck.effect', { n: format(n) })\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n", "import i18next from 'i18next'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { calculateGoldenQuarkGain } from './Calculate'\r\nimport { singularity } from './Reset'\r\nimport { player } from './Synergism'\r\nimport type { Player } from './types/Synergism'\r\nimport { Alert, Confirm } from './UpdateHTML'\r\nimport { toOrdinal } from './Utility'\r\n\r\nexport interface ISingularityChallengeData {\r\n    baseReq: number\r\n    maxCompletions: number\r\n    unlockSingularity: number\r\n    HTMLTag: string\r\n    singularityRequirement: (baseReq: number, completions: number) => number\r\n    effect: (n: number) => Record<string, number | boolean>\r\n    completions?: number\r\n    enabled?: boolean\r\n    highestSingularityCompleted?: number\r\n}\r\n\r\nexport class SingularityChallenge {\r\n  public name\r\n  public description\r\n  public rewardDescription\r\n  public baseReq\r\n  public completions\r\n  public maxCompletions\r\n  public unlockSingularity\r\n  public HTMLTag\r\n  public highestSingularityCompleted\r\n  public enabled\r\n  public singularityRequirement\r\n  public effect\r\n  public constructor(data: ISingularityChallengeData, key: string) {\r\n    const name = i18next.t(`singularityChallenge.data.${key}.name`)\r\n    const description = i18next.t(`singularityChallenge.data.${key}.description`)\r\n    const rewardDescription = i18next.t(`singularityChallenge.data.${key}.rewardDescription`)\r\n    this.name = name\r\n    this.description = description\r\n    this.rewardDescription = rewardDescription\r\n    this.baseReq = data.baseReq\r\n    this.completions = data.completions ?? 0\r\n    this.maxCompletions = data.maxCompletions\r\n    this.unlockSingularity = data.unlockSingularity\r\n    this.HTMLTag = data.HTMLTag\r\n    this.highestSingularityCompleted = data.highestSingularityCompleted ?? 0\r\n    this.enabled = data.enabled ?? false\r\n    this.singularityRequirement = data.singularityRequirement\r\n    this.effect = data.effect\r\n\r\n    this.updateIconHTML()\r\n    this.updateChallengeCompletions()\r\n  }\r\n\r\n  public computeSingularityRquirement() {\r\n    return this.singularityRequirement(this.baseReq, this.completions)\r\n  }\r\n\r\n  public updateChallengeCompletions() {\r\n    let updateVal = 0\r\n    while (this.singularityRequirement(this.baseReq, updateVal) <= this.highestSingularityCompleted) {\r\n      updateVal += 1\r\n    }\r\n\r\n    this.completions = Math.min(this.maxCompletions, updateVal)\r\n  }\r\n\r\n  public challengeEntryHandler() {\r\n    if (!this.enabled) {\r\n      return this.enableChallenge()\r\n    } else {\r\n      return this.exitChallenge((player.runelevels[6] > 0))\r\n    }\r\n  }\r\n\r\n  public async enableChallenge() {\r\n    if (player.highestSingularityCount < this.unlockSingularity) {\r\n      return Alert(i18next.t('singularityChallenge.enterChallenge.lowSingularity'))\r\n    }\r\n    const confirmation = await(Confirm(i18next.t('singularityChallenge.enterChallenge.confirmation', { name: this.name })))\r\n\r\n    if (!confirmation) {\r\n      return Alert(i18next.t('singularityChallenge.enterChallenge.decline'))\r\n    }\r\n\r\n    if (!player.insideSingularityChallenge) {\r\n      const setSingularity = this.computeSingularityRquirement()\r\n      const holdSingTimer = player.singularityCounter\r\n      const holdQuarkExport = player.quarkstimer\r\n      const holdGoldenQuarkExport = player.goldenQuarksTimer\r\n      const goldenQuarkGain = calculateGoldenQuarkGain()\r\n      const currentGQ = player.goldenQuarks\r\n      this.enabled = true\r\n      player.insideSingularityChallenge = true\r\n      await singularity(setSingularity)\r\n      player.singularityCounter = holdSingTimer\r\n      player.goldenQuarks = currentGQ + goldenQuarkGain\r\n      player.quarkstimer = holdQuarkExport\r\n      player.goldenQuarksTimer = holdGoldenQuarkExport\r\n\r\n      this.updateChallengeHTML()\r\n      return Alert(i18next.t('singularityChallenge.enterChallenge.acceptSuccess', { name: this.name, tier: this.completions + 1, singReq: this.computeSingularityRquirement() }))\r\n    } else {\r\n      return Alert(i18next.t('singularityChallenge.exitChallenge.acceptFailure'))\r\n    }\r\n  }\r\n\r\n  public async exitChallenge(success: boolean) {\r\n    if (!success) {\r\n      const extra = (player.runelevels[6] === 0) ? i18next.t('singularityChallenge.exitChallenge.incompleteWarning') : ''\r\n      const confirmation = await(Confirm(i18next.t('singularityChallenge.exitChallenge.confirmation', { name: this.name, tier: this.completions + 1, warning: extra })))\r\n      if (!confirmation) {\r\n        return Alert(i18next.t('singularityChallenge.exitChallenge.decline'))\r\n      }\r\n\r\n    }\r\n\r\n    this.enabled = false\r\n    player.insideSingularityChallenge = false\r\n    const highestSingularityHold = player.highestSingularityCount\r\n    const holdSingTimer = player.singularityCounter\r\n    const holdQuarkExport = player.quarkstimer\r\n    const holdGoldenQuarkExport = player.goldenQuarksTimer\r\n    this.updateIconHTML()\r\n    if (success) {\r\n      this.highestSingularityCompleted = player.singularityCount\r\n      this.updateChallengeCompletions()\r\n      await singularity(highestSingularityHold)\r\n      player.singularityCounter = holdSingTimer\r\n      return Alert(i18next.t('singularityChallenge.exitChallenge.acceptSuccess', { tier: toOrdinal(this.completions), name: this.name }))\r\n    } else {\r\n      await singularity(highestSingularityHold)\r\n      player.singularityCounter = holdSingTimer\r\n      player.quarkstimer = holdQuarkExport\r\n      player.goldenQuarksTimer = holdGoldenQuarkExport\r\n      return Alert(i18next.t('singularityChallenge.exitChallenge.acceptFailure'))\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Given a Singularity Challenge, give a concise information regarding its data.\r\n     * @returns A string that details the name, description, metadata.\r\n     */\r\n  toString(): string {\r\n\r\n    const color = (this.completions === this.maxCompletions) ? 'var(--orchid-text-color)' : 'white'\r\n    const enabled = (this.enabled) ? `<span style=\"color: var(--red-text-color)\">${i18next.t('general.enabled')}</span>` : ''\r\n    return `<span style=\"color: gold\">${this.name}</span> ${enabled}\r\n                <span style=\"color: lightblue\">${this.description}</span>\r\n                <span style=\"color: pink\">${i18next.t('singularityChallenge.toString.canEnter', { unlockSing: this.unlockSingularity, highestSing: player.highestSingularityCount })}</span>\r\n                ${i18next.t('singularityChallenge.toString.tiersCompleted')}: <span style=\"color: ${color}\">${this.completions}/${this.maxCompletions}</span>\r\n                <span style=\"color: gold\">${i18next.t('singularityChallenge.toString.currentTierSingularity')} <span style=\"color: var(--orchid-text-color)\">${this.singularityRequirement(this.baseReq, this.completions)}</span></span>\r\n                <span>${this.rewardDescription}</span>`\r\n  }\r\n\r\n  public updateChallengeHTML(): void {\r\n    DOMCacheGetOrSet('singularityChallengesMultiline').innerHTML = this.toString()\r\n  }\r\n\r\n  public updateIconHTML(): void {\r\n    const color = (this.enabled) ? 'orchid' : ''\r\n    DOMCacheGetOrSet(`${this.HTMLTag}`).style.backgroundColor = color\r\n  }\r\n\r\n  public get rewards() {\r\n    return this.effect(this.completions)\r\n  }\r\n\r\n}\r\n\r\nexport const singularityChallengeData: Record<keyof Player['singularityUpgrades'], ISingularityChallengeData> = {\r\n  noSingularityUpgrades: {\r\n    baseReq: 1,\r\n    maxCompletions: 30,\r\n    unlockSingularity: 25,\r\n    HTMLTag: 'noSingularityUpgrades',\r\n    singularityRequirement: (baseReq: number, completions: number) => {\r\n      return baseReq + 8 * completions\r\n    },\r\n    effect: (n: number) => {\r\n      return {\r\n        cubes: 1 + 0.5 * n,\r\n        goldenQuarks: 1 + 0.12 * +(n > 0),\r\n        blueberries: +(n>0),\r\n        shopUpgrade: (n >= 20)\r\n      }\r\n    }\r\n  },\r\n  oneChallengeCap: {\r\n    baseReq: 10,\r\n    maxCompletions: 25,\r\n    unlockSingularity: 40,\r\n    HTMLTag: 'oneChallengeCap',\r\n    singularityRequirement: (baseReq: number, completions: number) => {\r\n      return baseReq + 11 * completions\r\n    },\r\n    effect: (n: number) => {\r\n      return {\r\n        corrScoreIncrease: 0.03 * n,\r\n        capIncrease: 3 * +(n > 0),\r\n        freeCorruptionLevel: (n >= 20)\r\n      }\r\n    }\r\n  },\r\n  noOcteracts: {\r\n    baseReq: 75,\r\n    maxCompletions: 10,\r\n    unlockSingularity: 100,\r\n    HTMLTag: 'noOcteracts',\r\n    singularityRequirement: (baseReq: number, completions: number) => {\r\n      return baseReq + 13 * completions\r\n    },\r\n    effect: (n: number) => {\r\n      return {\r\n        octeractPow: 0.02 * n,\r\n        offeringBonus: (n > 0),\r\n        obtainiumBonus: (n === 10)\r\n      }\r\n    }\r\n  },\r\n  limitedAscensions: {\r\n    baseReq: 10,\r\n    maxCompletions: 25,\r\n    unlockSingularity: 50,\r\n    HTMLTag: 'limitedAscensions',\r\n    singularityRequirement: (baseReq: number, completions: number) => {\r\n      return baseReq + 10 * completions\r\n    },\r\n    effect: (n: number) => {\r\n      return {\r\n        ascensionSpeedMult: 0.1 * n / 100,\r\n        hepteractCap: (n > 0),\r\n        calculatorUnlock: (n >= 25)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n", "import { calculateEventBuff, calculateSingularityMilestoneBlueberries } from './Calculate'\r\nimport { calculateAmbrosiaGenerationShopUpgrade, calculateAmbrosiaLuckShopUpgrade, calculateSingularityAmbrosiaLuckMilestoneBonus } from './Calculate'\r\nimport { player } from './Synergism'\r\nimport { productContents } from './Utility'\r\nimport { Globals } from './Variables'\r\n\r\ninterface StatCache<T> {\r\n\r\n    totalVal: number\r\n\r\n    /**\r\n     * Updates the cache value for a statistic\r\n     * @param key: Statistic which we must update for value\r\n     */\r\n    updateVal(key:T, init: boolean): void\r\n\r\n    /**\r\n     * Initializes the cache by establishing statistics for each value as well as\r\n     * updating the total statistic.\r\n     */\r\n    initialize(): void\r\n}\r\n\r\nabstract class AdditionCache<T extends string> implements StatCache<T> {\r\n\r\n  public totalVal = 0\r\n    abstract vals: Record<T, number>\r\n\r\n    /**\r\n     * Updates a particular statistic 'key' and updates total accordingly\r\n     * @param key The statistic to update\r\n     */\r\n    abstract updateVal(key: T, init: boolean): void\r\n\r\n    /**\r\n     * Initialize all statistics of interest and compute a total value as sum of all statistics\r\n     */\r\n    initialize(): void {\r\n      this.totalVal = 0\r\n      for (const val of (Object.keys(this.vals) as T[])) {\r\n        this.updateVal(val, true)\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Updates the value of total after updating individual statistic value, with key\r\n     * @param oldVal: Value present in values[key] before update\r\n     * @param newVal: Value present in values[key] after update\r\n     */\r\n    updateTotal(oldVal: number, newVal: number, init = false):void {\r\n      if (init) {\r\n        this.totalVal += newVal\r\n      } else {\r\n        this.totalVal += (newVal - oldVal)\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Flattens the value object into an array, for use in statistics.\r\n     * @returns Array consisting of all additive values as well as sum of elements\r\n     */\r\n    flatten(): number[] {\r\n      const arr:number[] = Object.values(this.vals)\r\n      arr.push(this.totalVal)\r\n      return arr\r\n    }\r\n}\r\n\r\nabstract class MultiplicationCache<T extends string> implements StatCache<T> {\r\n\r\n  public totalVal = 1\r\n  abstract vals: Record<T, number>\r\n\r\n    /**\r\n     * Updates a particular statistic 'key' and updates total accordingly\r\n     * @param key The statistic to update\r\n     */\r\n    abstract updateVal(key: T, init: boolean): void\r\n    /**\r\n     * Initialize all statistics of interest and compute a total value as product of all statistics\r\n     */\r\n    initialize(): void {\r\n      this.totalVal = 1\r\n      for (const val of (Object.keys(this.vals) as T[])) {\r\n        this.updateVal(val, true)\r\n      }\r\n    }\r\n\r\n    updateTotal(oldVal: number, newVal: number, init = false):void {\r\n      if (init) {\r\n        this.totalVal *= newVal\r\n      } else {\r\n        // Optimization: if neither old total or new val is 0 then we can safely just compute factor\r\n        if (this.totalVal != 0 && newVal != 0) this.totalVal *= (newVal / oldVal)\r\n        // Optimization: if newVal is 0 we don't have to care about computing\r\n        else if (newVal === 0) this.totalVal = 0\r\n        // Else: Brute force compute total val (TODO: Optimize)\r\n        else {\r\n          const arr = this.flatten()\r\n          // remove last elm\r\n          arr.pop()\r\n          this.totalVal = productContents(arr)\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Flattens the value object into an array, for use in statistics.\r\n     * @returns Array consisting of all additive values as well as sum of elements\r\n     */\r\n    flatten(): number[] {\r\n      const arr:number[] = Object.values(this.vals)\r\n      arr.push(this.totalVal)\r\n      return arr\r\n    }\r\n}\r\n\r\n/**\r\n * Define Types Below. For each one, the union is all statistics of a particular stat.\r\n*/\r\n\r\ntype AmbrosialLuck = 'SingPerks' | 'OcteractBerries' | 'ShopUpgrades' | 'BlueberryUpgrade1' | 'Event' |\r\n                     'BlueberryCubeLuck1' | 'BlueberryQuarkLuck1'\r\n\r\ntype AmbrosiaGeneration = 'DefaultVal' | 'SingularityBerries' | 'ShopUpgrades' | 'Event'\r\n\r\ntype BlueberryInventory = 'Exalt1' | 'SingularityUpgrade' | 'SingularityPerk'\r\n\r\nexport class AmbrosiaLuckCache extends AdditionCache<AmbrosialLuck> {\r\n\r\n  vals: Record<AmbrosialLuck, number>\r\n  public totalVal: number\r\n\r\n  constructor() {\r\n    super()\r\n    this.vals = {\r\n      'SingPerks': 0,\r\n      'OcteractBerries': 0,\r\n      'ShopUpgrades': 0,\r\n      'BlueberryUpgrade1': 0,\r\n      'BlueberryCubeLuck1': 0,\r\n      'BlueberryQuarkLuck1': 0,\r\n      'Event': 0\r\n    }\r\n    this.totalVal = 0\r\n  }\r\n\r\n  updateVal(key: AmbrosialLuck, init = false): void {\r\n    const oldVal = this.vals[key]\r\n    switch (key) {\r\n      case 'SingPerks': {\r\n        this.vals[key] = calculateSingularityAmbrosiaLuckMilestoneBonus()\r\n        break\r\n      }\r\n      case 'OcteractBerries': {\r\n        this.vals[key] = +player.octeractUpgrades.octeractAmbrosiaLuck.getEffect().bonus\r\n        break\r\n      }\r\n      case 'ShopUpgrades': {\r\n        this.vals[key] = calculateAmbrosiaLuckShopUpgrade()\r\n        break\r\n      }\r\n      case 'BlueberryUpgrade1': {\r\n        this.vals[key] = +player.blueberryUpgrades.ambrosiaLuck1.bonus.ambrosiaLuck\r\n        break\r\n      }\r\n      case 'BlueberryCubeLuck1': {\r\n        this.vals[key] = +player.blueberryUpgrades.ambrosiaCubeLuck1.bonus.ambrosiaLuck\r\n        break\r\n      }\r\n      case 'BlueberryQuarkLuck1': {\r\n        this.vals[key] = +player.blueberryUpgrades.ambrosiaQuarkLuck1.bonus.ambrosiaLuck\r\n        break\r\n      }\r\n      case 'Event': {\r\n        this.vals[key] = (Globals.isEvent) ? 100 * calculateEventBuff('Ambrosia Luck') : 0\r\n        break\r\n      }\r\n    }\r\n    const newVal = this.vals[key]\r\n    this.updateTotal(oldVal, newVal, init)\r\n  }\r\n}\r\n\r\nexport class AmbrosiaGenerationCache extends MultiplicationCache<AmbrosiaGeneration> {\r\n\r\n  vals: Record<AmbrosiaGeneration, number>\r\n  public totalVal: number\r\n\r\n  constructor() {\r\n    super()\r\n    this.vals = {\r\n      'DefaultVal': 1,\r\n      'SingularityBerries': 1,\r\n      'ShopUpgrades': 1,\r\n      'Event': 1\r\n    }\r\n    this.totalVal = 0\r\n  }\r\n\r\n  updateVal(key: AmbrosiaGeneration, init = false): void {\r\n    const oldVal = this.vals[key]\r\n    switch (key) {\r\n      case 'DefaultVal': {\r\n        this.vals[key] = 1 * +(player.visitedAmbrosiaSubtab)\r\n        break\r\n      }\r\n      case 'SingularityBerries': {\r\n        this.vals[key] = player.caches.blueberryInventory.totalVal\r\n        break\r\n      }\r\n      case 'ShopUpgrades': {\r\n        this.vals[key] = calculateAmbrosiaGenerationShopUpgrade()\r\n        break\r\n      }\r\n      case 'Event': {\r\n        this.vals[key] = (Globals.isEvent) ? 1 + calculateEventBuff('Blueberry Time') : 1\r\n        break\r\n      }\r\n    }\r\n    const newVal = this.vals[key]\r\n    this.updateTotal(oldVal, newVal, init)\r\n  }\r\n}\r\n\r\nexport class BlueberryInventoryCache extends AdditionCache<BlueberryInventory> {\r\n  vals: Record<BlueberryInventory, number>\r\n  public totalVal: number\r\n\r\n  constructor() {\r\n    super()\r\n    this.vals = {\r\n      'Exalt1': 0,\r\n      'SingularityUpgrade': 0,\r\n      'SingularityPerk': 0\r\n    }\r\n    this.totalVal = 0\r\n  }\r\n\r\n  updateVal(key: BlueberryInventory, init = false): void {\r\n    const oldVal = this.vals[key]\r\n    switch (key) {\r\n      case 'Exalt1': {\r\n        this.vals[key] = +(player.singularityChallenges.noSingularityUpgrades.completions > 0)\r\n        break\r\n      }\r\n      case 'SingularityUpgrade': {\r\n        this.vals[key] = +(player.singularityUpgrades.blueberries.getEffect().bonus)\r\n        break\r\n      }\r\n      case 'SingularityPerk': {\r\n        this.vals[key] = calculateSingularityMilestoneBlueberries()\r\n        break\r\n      }\r\n    }\r\n    const newVal = this.vals[key]\r\n    this.updateTotal(oldVal, newVal, init)\r\n    player.caches.ambrosiaGeneration.updateVal('SingularityBerries') // Dependant cache\r\n  }\r\n}\r\n\r\nexport const cacheReinitialize = () => {\r\n  // TODO: Create a hierarchy of cache dependencies (ambrosia generation depends on blueberry inventory)\r\n  player.caches.blueberryInventory.initialize()\r\n  player.caches.ambrosiaGeneration.initialize()\r\n  player.caches.ambrosiaLuck.initialize()\r\n}\r\n\r\n", "import { player, resetCheck, blankSave } from './Synergism'\r\nimport { testing } from './Config'\r\nimport type { Player } from './types/Synergism'\r\nimport Decimal from 'break_infinity.js'\r\nimport { calculateMaxRunes, calculateTimeAcceleration } from './Calculate'\r\nimport { buyResearch } from './Research'\r\nimport { c15RewardUpdate } from './Statistics'\r\nimport type { LegacyShopUpgrades, PlayerSave } from './types/LegacySynergism'\r\nimport { padArray } from './Utility'\r\nimport { AbyssHepteract, AcceleratorBoostHepteract, AcceleratorHepteract, ChallengeHepteract, ChronosHepteract, createHepteract, HyperrealismHepteract, MultiplierHepteract, QuarkHepteract } from './Hepteracts'\r\nimport { WowCubes, WowHypercubes, WowPlatonicCubes, WowTesseracts } from './CubeExperimental'\r\nimport { Alert } from './UpdateHTML'\r\nimport { getQuarkInvestment, shopData } from './Shop'\r\nimport type { ISingularityData } from './singularity'\r\nimport { singularityData, SingularityUpgrade } from './singularity'\r\nimport type { IOcteractData } from './Octeracts'\r\nimport { octeractData, OcteractUpgrade } from './Octeracts'\r\nimport type { ISingularityChallengeData } from './SingularityChallenges'\r\nimport { SingularityChallenge, singularityChallengeData } from './SingularityChallenges'\r\nimport i18next from 'i18next'\r\nimport { AmbrosiaGenerationCache, AmbrosiaLuckCache, BlueberryInventoryCache, cacheReinitialize } from './StatCache'\r\nimport type { IBlueberryData } from './BlueberryUpgrades'\r\nimport { BlueberryUpgrade, blueberryUpgradeData } from './BlueberryUpgrades'\r\n\r\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\r\n\r\n/**\r\n * Given player data, it checks, on load if variables are undefined\r\n * or set incorrectly, and corrects it. This should be where all new\r\n * variable declarations for `player` should go!\r\n * @param data\r\n */\r\nexport const checkVariablesOnLoad = (data: PlayerSave) => {\r\n  if (data.currentChallenge?.transcension === undefined) {\r\n    player.currentChallenge = {\r\n      transcension: 0,\r\n      reincarnation: 0,\r\n      ascension: 0\r\n    }\r\n  }\r\n\r\n  data.shopUpgrades ??= { ...blankSave.shopUpgrades }\r\n  data.ascStatToggles ??= { ...blankSave.ascStatToggles }\r\n\r\n  if (typeof data.promoCodeTiming === 'object' && data.promoCodeTiming != null) {\r\n    for (const key of Object.keys(data.promoCodeTiming)) {\r\n      const k = key as keyof typeof data.promoCodeTiming\r\n      player.promoCodeTiming[k] = data.promoCodeTiming[k]\r\n    }\r\n  } else {\r\n    player.promoCodeTiming.time = Date.now() - (60 * 1000 * 15)\r\n  }\r\n\r\n  // backwards compatibility for v1.0101 (and possibly older) saves\r\n  if (!Array.isArray(data.challengecompletions) && data.challengecompletions != null) {\r\n    player.challengecompletions = Object.values(data.challengecompletions)\r\n    padArray(player.challengecompletions, 0, blankSave.challengecompletions.length)\r\n  }\r\n\r\n  // backwards compatibility for v1.0101 (and possibly older) saves\r\n  if (!Array.isArray(data.highestchallengecompletions)) {\r\n    // if highestchallengecompletions is every added onto, this will need to be padded.\r\n    player.highestchallengecompletions = Object.values(data.highestchallengecompletions as unknown as object) as number[]\r\n  }\r\n\r\n  if (data.wowCubes === undefined) {\r\n    player.wowCubes = new WowCubes()\r\n    player.wowTesseracts = new WowTesseracts(0)\r\n    player.wowHypercubes = new WowHypercubes(0)\r\n    player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  }\r\n  if (data.shoptoggles?.reincarnate === undefined) {\r\n    player.shoptoggles.reincarnate = true\r\n  }\r\n  if (data.ascendBuilding1 === undefined) {\r\n    player.ascendBuilding1 = {\r\n      cost: 1,\r\n      owned: 0,\r\n      generated: new Decimal('0'),\r\n      multiplier: 0.01\r\n    }\r\n    player.ascendBuilding2 = {\r\n      cost: 10,\r\n      owned: 0,\r\n      generated: new Decimal('0'),\r\n      multiplier: 0.01\r\n    }\r\n    player.ascendBuilding3 = {\r\n      cost: 100,\r\n      owned: 0,\r\n      generated: new Decimal('0'),\r\n      multiplier: 0.01\r\n    }\r\n    player.ascendBuilding4 = {\r\n      cost: 1000,\r\n      owned: 0,\r\n      generated: new Decimal('0'),\r\n      multiplier: 0.01\r\n    }\r\n    player.ascendBuilding5 = {\r\n      cost: 10000,\r\n      owned: 0,\r\n      generated: new Decimal('0'),\r\n      multiplier: 0.01\r\n    }\r\n  }\r\n  if (data.tesseractbuyamount === undefined) {\r\n    player.tesseractbuyamount = 1\r\n  }\r\n  if (data.tesseractBlessings === undefined) {\r\n    player.tesseractBlessings = {\r\n      accelerator: 0,\r\n      multiplier: 0,\r\n      offering: 0,\r\n      runeExp: 0,\r\n      obtainium: 0,\r\n      antSpeed: 0,\r\n      antSacrifice: 0,\r\n      antELO: 0,\r\n      talismanBonus: 0,\r\n      globalSpeed: 0\r\n    }\r\n    player.hypercubeBlessings = {\r\n      accelerator: 0,\r\n      multiplier: 0,\r\n      offering: 0,\r\n      runeExp: 0,\r\n      obtainium: 0,\r\n      antSpeed: 0,\r\n      antSacrifice: 0,\r\n      antELO: 0,\r\n      talismanBonus: 0,\r\n      globalSpeed: 0\r\n    }\r\n  }\r\n  if (data.prototypeCorruptions === undefined) {\r\n    player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  }\r\n  if (data.constantUpgrades === undefined) {\r\n    player.ascendShards = new Decimal('0')\r\n    player.constantUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  }\r\n  if (data.roombaResearchIndex === undefined) {\r\n    player.roombaResearchIndex = 0\r\n  }\r\n  if (data.history === undefined) {\r\n    player.history = { ants: [], ascend: [], reset: [], singularity: [] }\r\n  }\r\n  if (data.autoChallengeRunning === undefined) {\r\n    player.autoChallengeRunning = false\r\n    player.autoChallengeIndex = 1\r\n    player.autoChallengeToggles = [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false]\r\n    player.autoChallengeStartExponent = 10\r\n    player.autoChallengeTimer = {\r\n      start: 10,\r\n      exit: 2,\r\n      enter: 2\r\n    }\r\n  }\r\n  if (data.autoAscend === undefined) {\r\n    player.autoAscend = false\r\n    player.autoAscendMode = 'c10Completions'\r\n    player.autoAscendThreshold = 1\r\n  }\r\n  if (data.runeBlessingLevels === undefined) {\r\n    player.runeBlessingLevels = [0, 0, 0, 0, 0, 0]\r\n    player.runeSpiritLevels = [0, 0, 0, 0, 0, 0]\r\n    player.runeBlessingBuyAmount = 0\r\n    player.runeSpiritBuyAmount = 0\r\n  }\r\n  if (data.autoBuyFragment === undefined) {\r\n    player.autoBuyFragment = false\r\n    player.saveOfferingToggle = false\r\n  }\r\n\r\n  if (data.autoTesseracts === undefined) {\r\n    player.autoTesseracts = [false, false, false, false, false, false]\r\n  }\r\n\r\n  if (data.autoOpenCubes === undefined) {\r\n    player.autoOpenCubes = false\r\n    player.openCubes = 0\r\n  }\r\n  if (data.autoOpenTesseracts === undefined) {\r\n    player.autoOpenTesseracts = false\r\n    player.openTesseracts = 0\r\n  }\r\n  if (data.autoOpenHypercubes === undefined) {\r\n    player.autoOpenHypercubes = false\r\n    player.openHypercubes = 0\r\n  }\r\n  if (data.autoOpenPlatonicsCubes === undefined) {\r\n    player.autoOpenPlatonicsCubes = false\r\n    player.openPlatonicsCubes = 0\r\n  }\r\n\r\n  if (player.prototypeCorruptions[0] === null || player.prototypeCorruptions[0] === undefined) {\r\n    player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  }\r\n\r\n  if (player.corruptionLoadouts === undefined) {\r\n    player.corruptionLoadouts = { ...blankSave.corruptionLoadouts }\r\n    player.corruptionShowStats = true\r\n  }\r\n\r\n  const corruptionLoadouts = Object.keys(\r\n    blankSave.corruptionLoadouts\r\n  ) as (`${keyof Player['corruptionLoadouts']}`)[]\r\n\r\n  for (const key of corruptionLoadouts.map(k => Number(k))) {\r\n    if (player.corruptionLoadouts[key] !== undefined) {\r\n      continue\r\n    }\r\n\r\n    player.corruptionLoadouts[key] = blankSave.corruptionLoadouts[key]\r\n  }\r\n\r\n  if (player.corruptionLoadoutNames.length < blankSave.corruptionLoadoutNames.length) {\r\n    const diff = blankSave.corruptionLoadoutNames.slice(player.corruptionLoadoutNames.length)\r\n\r\n    player.corruptionLoadoutNames.push(...diff)\r\n  }\r\n\r\n  for (let i = 0; i <= 4; i++) {\r\n    if (player.runelevels[i] > calculateMaxRunes(i + 1)) {\r\n      player.runelevels[i] = 0\r\n    }\r\n  }\r\n\r\n  if (data.shopUpgrades.challengeExtension === undefined) {\r\n    player.shopUpgrades.challengeExtension = 0\r\n    player.shopUpgrades.challengeTome = 0\r\n    player.shopUpgrades.seasonPass = 0\r\n    player.shopUpgrades.cubeToQuark = 0\r\n    player.shopUpgrades.tesseractToQuark = 0\r\n    player.shopUpgrades.hypercubeToQuark = 0\r\n  }\r\n  if (data.cubeUpgrades == null || data.cubeUpgrades[19] === 0 || player.cubeUpgrades[19] === 0) {\r\n    for (let i = 121; i <= 125; i++) {\r\n      player.upgrades[i] = 0\r\n    }\r\n  }\r\n\r\n  // assign the save's toggles to the player toggles\r\n  // will overwrite player.toggles keys that exist on both objects,\r\n  // but new keys will default to the values on the player object\r\n  Object.assign(player.toggles, data.toggles)\r\n\r\n  for (const key in blankSave.toggles) {\r\n    if (player.toggles[key] === undefined) {\r\n      player.toggles[key] = blankSave.toggles[key]\r\n    }\r\n  }\r\n\r\n  if (data.dayCheck === undefined) {\r\n    player.dayCheck = null\r\n    player.dayTimer = 0\r\n    player.cubeQuarkDaily = 0\r\n    player.tesseractQuarkDaily = 0\r\n    player.hypercubeQuarkDaily = 0\r\n    player.cubeOpenedDaily = 0\r\n    player.tesseractOpenedDaily = 0\r\n    player.hypercubeOpenedDaily = 0\r\n  }\r\n\r\n  player.singularityUpgrades = {\r\n    goldenQuarks1: new SingularityUpgrade(singularityData.goldenQuarks1, 'goldenQuarks1'),\r\n    goldenQuarks2: new SingularityUpgrade(singularityData.goldenQuarks2, 'goldenQuarks2'),\r\n    goldenQuarks3: new SingularityUpgrade(singularityData.goldenQuarks3, 'goldenQuarks3'),\r\n    starterPack: new SingularityUpgrade(singularityData.starterPack, 'starterPack'),\r\n    wowPass: new SingularityUpgrade(singularityData.wowPass, 'wowPass'),\r\n    cookies: new SingularityUpgrade(singularityData.cookies, 'cookies'),\r\n    cookies2: new SingularityUpgrade(singularityData.cookies2, 'cookies2'),\r\n    cookies3: new SingularityUpgrade(singularityData.cookies3, 'cookies3'),\r\n    cookies4: new SingularityUpgrade(singularityData.cookies4, 'cookies4'),\r\n    cookies5: new SingularityUpgrade(singularityData.cookies5, 'cookies5'),\r\n    ascensions: new SingularityUpgrade(singularityData.ascensions, 'ascensions'),\r\n    corruptionFourteen: new SingularityUpgrade(singularityData.corruptionFourteen, 'corruptionFourteen'),\r\n    corruptionFifteen: new SingularityUpgrade(singularityData.corruptionFifteen, 'corruptionFifteen'),\r\n    singOfferings1: new SingularityUpgrade(singularityData.singOfferings1, 'singOfferings1'),\r\n    singOfferings2: new SingularityUpgrade(singularityData.singOfferings2, 'singOfferings2'),\r\n    singOfferings3: new SingularityUpgrade(singularityData.singOfferings3, 'singOfferings3'),\r\n    singObtainium1: new SingularityUpgrade(singularityData.singObtainium1, 'singObtainium1'),\r\n    singObtainium2: new SingularityUpgrade(singularityData.singObtainium2, 'singObtainium2'),\r\n    singObtainium3: new SingularityUpgrade(singularityData.singObtainium3, 'singObtainium3'),\r\n    singCubes1: new SingularityUpgrade(singularityData.singCubes1, 'singCubes1'),\r\n    singCubes2: new SingularityUpgrade(singularityData.singCubes2, 'singCubes2'),\r\n    singCubes3: new SingularityUpgrade(singularityData.singCubes3, 'singCubes3'),\r\n    singCitadel: new SingularityUpgrade(singularityData.singCitadel, 'singCitadel'),\r\n    singCitadel2: new SingularityUpgrade(singularityData.singCitadel2, 'singCitadel2'),\r\n    octeractUnlock: new SingularityUpgrade(singularityData.octeractUnlock, 'octeractUnlock'),\r\n    singOcteractPatreonBonus: new SingularityUpgrade(singularityData.singOcteractPatreonBonus, 'singOcteractPatreonBonus'),\r\n    intermediatePack: new SingularityUpgrade(singularityData.intermediatePack, 'intermediatePack'),\r\n    advancedPack: new SingularityUpgrade(singularityData.advancedPack, 'advancedPack'),\r\n    expertPack: new SingularityUpgrade(singularityData.expertPack, 'expertPack'),\r\n    masterPack: new SingularityUpgrade(singularityData.masterPack, 'masterPack'),\r\n    divinePack: new SingularityUpgrade(singularityData.divinePack, 'divinePack'),\r\n    wowPass2: new SingularityUpgrade(singularityData.wowPass2, 'wowPass2'),\r\n    potionBuff: new SingularityUpgrade(singularityData.potionBuff, 'potionBuff'),\r\n    potionBuff2: new SingularityUpgrade(singularityData.potionBuff2, 'potionBuff2'),\r\n    potionBuff3: new SingularityUpgrade(singularityData.potionBuff3, 'potionBuff3'),\r\n    singChallengeExtension: new SingularityUpgrade(singularityData.singChallengeExtension, 'singChallengeExtension'),\r\n    singChallengeExtension2: new SingularityUpgrade(singularityData.singChallengeExtension2, 'singChallengeExtension2'),\r\n    singChallengeExtension3: new SingularityUpgrade(singularityData.singChallengeExtension3, 'singChallengeExtension3'),\r\n    singQuarkImprover1: new SingularityUpgrade(singularityData.singQuarkImprover1, 'singQuarkImprover1'),\r\n    singQuarkHepteract: new SingularityUpgrade(singularityData.singQuarkHepteract, 'singQuarkHepteract'),\r\n    singQuarkHepteract2: new SingularityUpgrade(singularityData.singQuarkHepteract2, 'singQuarkHepteract2'),\r\n    singQuarkHepteract3: new SingularityUpgrade(singularityData.singQuarkHepteract3, 'singQuarkHepteract3'),\r\n    singOcteractGain: new SingularityUpgrade(singularityData.singOcteractGain, 'singOcteractGain'),\r\n    singOcteractGain2: new SingularityUpgrade(singularityData.singOcteractGain2, 'singOcteractGain2'),\r\n    singOcteractGain3: new SingularityUpgrade(singularityData.singOcteractGain3, 'singOcteractGain3'),\r\n    singOcteractGain4: new SingularityUpgrade(singularityData.singOcteractGain4, 'singOcteractGain4'),\r\n    singOcteractGain5: new SingularityUpgrade(singularityData.singOcteractGain5, 'singOcteractGain5'),\r\n    wowPass3: new SingularityUpgrade(singularityData.wowPass3, 'wowPass3'),\r\n    ultimatePen: new SingularityUpgrade(singularityData.ultimatePen, 'ultimatePen'),\r\n    platonicTau: new SingularityUpgrade(singularityData.platonicTau, 'platonicTau'),\r\n    platonicAlpha: new SingularityUpgrade(singularityData.platonicAlpha, 'platonicAlpha'),\r\n    platonicDelta: new SingularityUpgrade(singularityData.platonicDelta, 'platonicDelta'),\r\n    platonicPhi: new SingularityUpgrade(singularityData.platonicPhi, 'platonicPhi'),\r\n    singFastForward: new SingularityUpgrade(singularityData.singFastForward, 'singFastForward'),\r\n    singFastForward2: new SingularityUpgrade(singularityData.singFastForward2, 'singFastForward2'),\r\n    singAscensionSpeed: new SingularityUpgrade(singularityData.singAscensionSpeed, 'singAscensionSpeed'),\r\n    singAscensionSpeed2: new SingularityUpgrade(singularityData.singAscensionSpeed2, 'singAscensionSpeed2'),\r\n    oneMind: new SingularityUpgrade(singularityData.oneMind, 'oneMind'),\r\n    wowPass4: new SingularityUpgrade(singularityData.wowPass4, 'wowPass4'),\r\n    offeringAutomatic: new SingularityUpgrade(singularityData.offeringAutomatic, 'offeringAutomatic'),\r\n    blueberries: new SingularityUpgrade(singularityData.blueberries, 'blueberries')\r\n  }\r\n\r\n  player.octeractUpgrades = {\r\n    octeractStarter: new OcteractUpgrade(octeractData.octeractStarter, 'octeractStarter'),\r\n    octeractGain: new OcteractUpgrade(octeractData.octeractGain, 'octeractGain'),\r\n    octeractGain2: new OcteractUpgrade(octeractData.octeractGain2, 'octeractGain2'),\r\n    octeractQuarkGain: new OcteractUpgrade(octeractData.octeractQuarkGain, 'octeractQuarkGain'),\r\n    octeractQuarkGain2: new OcteractUpgrade(octeractData.octeractQuarkGain2, 'octeractQuarkGain2'),\r\n    octeractCorruption: new OcteractUpgrade(octeractData.octeractCorruption, 'octeractCorruption'),\r\n    octeractGQCostReduce: new OcteractUpgrade(octeractData.octeractGQCostReduce, 'octeractGQCostReduce'),\r\n    octeractExportQuarks: new OcteractUpgrade(octeractData.octeractExportQuarks, 'octeractExportQuarks'),\r\n    octeractImprovedDaily: new OcteractUpgrade(octeractData.octeractImprovedDaily, 'octeractImprovedDaily'),\r\n    octeractImprovedDaily2: new OcteractUpgrade(octeractData.octeractImprovedDaily2, 'octeractImprovedDaily2'),\r\n    octeractImprovedDaily3: new OcteractUpgrade(octeractData.octeractImprovedDaily3, 'octeractImprovedDaily3'),\r\n    octeractImprovedQuarkHept: new OcteractUpgrade(octeractData.octeractImprovedQuarkHept, 'octeractImprovedQuarkHept'),\r\n    octeractImprovedGlobalSpeed: new OcteractUpgrade(octeractData.octeractImprovedGlobalSpeed, 'octeractImprovedGlobalSpeed'),\r\n    octeractImprovedAscensionSpeed: new OcteractUpgrade(octeractData.octeractImprovedAscensionSpeed, 'octeractImprovedAscensionSpeed'),\r\n    octeractImprovedAscensionSpeed2: new OcteractUpgrade(octeractData.octeractImprovedAscensionSpeed2, 'octeractImprovedAscensionSpeed2'),\r\n    octeractImprovedFree: new OcteractUpgrade(octeractData.octeractImprovedFree, 'octeractImprovedFree'),\r\n    octeractImprovedFree2: new OcteractUpgrade(octeractData.octeractImprovedFree2, 'octeractImprovedFree2'),\r\n    octeractImprovedFree3: new OcteractUpgrade(octeractData.octeractImprovedFree3, 'octeractImprovedFree3'),\r\n    octeractImprovedFree4: new OcteractUpgrade(octeractData.octeractImprovedFree4, 'octeractImprovedFree4'),\r\n    octeractSingUpgradeCap: new OcteractUpgrade(octeractData.octeractSingUpgradeCap, 'octeractSingUpgradeCap'),\r\n    octeractOfferings1: new OcteractUpgrade(octeractData.octeractOfferings1, 'octeractOfferings1'),\r\n    octeractObtainium1: new OcteractUpgrade(octeractData.octeractObtainium1, 'octeractObtainium1'),\r\n    octeractAscensions: new OcteractUpgrade(octeractData.octeractAscensions, 'octeractAscensions'),\r\n    octeractAscensions2: new OcteractUpgrade(octeractData.octeractAscensions2, 'octeractAscensions2'),\r\n    octeractAscensionsOcteractGain: new OcteractUpgrade(octeractData.octeractAscensionsOcteractGain, 'octeractAscensionsOcteractGain'),\r\n    octeractFastForward: new OcteractUpgrade(octeractData.octeractFastForward, 'octeractFastForward'),\r\n    octeractAutoPotionSpeed: new OcteractUpgrade(octeractData.octeractAutoPotionSpeed, 'octeractAutoPotionSpeed'),\r\n    octeractAutoPotionEfficiency: new OcteractUpgrade(octeractData.octeractAutoPotionEfficiency, 'octeractAutoPotionEfficiency'),\r\n    octeractOneMindImprover: new OcteractUpgrade(octeractData.octeractOneMindImprover, 'octeractOneMindImprover'),\r\n    octeractAmbrosiaLuck: new OcteractUpgrade(octeractData.octeractAmbrosiaLuck, 'octeractAmbrosiaLuck')\r\n  }\r\n\r\n  player.singularityChallenges = {\r\n    noSingularityUpgrades: new SingularityChallenge(singularityChallengeData.noSingularityUpgrades, 'noSingularityUpgrades'),\r\n    oneChallengeCap: new SingularityChallenge(singularityChallengeData.oneChallengeCap, 'oneChallengeCap'),\r\n    noOcteracts: new SingularityChallenge(singularityChallengeData.noOcteracts, 'noOcteracts'),\r\n    limitedAscensions: new SingularityChallenge(singularityChallengeData.limitedAscensions, 'limitedAscensions')\r\n  }\r\n\r\n  player.blueberryUpgrades = {\r\n    ambrosiaTutorial: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaTutorial, 'ambrosiaTutorial'),\r\n    ambrosiaQuarks1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaQuarks1, 'ambrosiaQuarks1'),\r\n    ambrosiaCubes1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaCubes1, 'ambrosiaQuarks1'),\r\n    ambrosiaLuck1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaLuck1, 'ambrosiaLuck1'),\r\n    ambrosiaCubeQuark1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaCubeQuark1, 'ambrosiaCubeQuark1'),\r\n    ambrosiaLuckQuark1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaLuckQuark1, 'ambrosiaLuckQuark1'),\r\n    ambrosiaLuckCube1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaLuckCube1, 'ambrosiaLuckCube1'),\r\n    ambrosiaQuarkCube1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaQuarkCube1, 'ambrosiaQuarkCube1'),\r\n    ambrosiaCubeLuck1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaCubeLuck1, 'ambrosiaCubeLuck1'),\r\n    ambrosiaQuarkLuck1: new BlueberryUpgrade(blueberryUpgradeData.ambrosiaQuarkLuck1, 'ambrosiaQuarkLuck1')\r\n  }\r\n\r\n  if (data.loadedOct4Hotfix === undefined || !player.loadedOct4Hotfix) {\r\n    player.loadedOct4Hotfix = true\r\n    // Only process refund if the save's researches array is already updated to v2\r\n    if (player.researches.length > 200) {\r\n      player.researchPoints += player.researches[200] * 1e56\r\n      player.researches[200] = 0\r\n      buyResearch(200, true, 0.01)\r\n      player.researchPoints += player.researches[195] * 1e60\r\n      player.worlds.add(250 * player.researches[195])\r\n      player.researches[195] = 0\r\n      player.wowCubes.add(player.cubeUpgrades[50] * 5e10)\r\n      player.cubeUpgrades[50] = 0\r\n    }\r\n  }\r\n\r\n  if (player.ascStatToggles === undefined || data.ascStatToggles === undefined) {\r\n    player.ascStatToggles = {\r\n      1: false,\r\n      2: false,\r\n      3: false,\r\n      4: false\r\n    }\r\n  }\r\n  if (player.ascStatToggles[4] === undefined || !('ascStatToggles' in data) || data.ascStatToggles[4] === undefined) {\r\n    player.ascStatToggles[4] = false\r\n  }\r\n\r\n  if (player.usedCorruptions[0] > 0 ||\r\n        (Array.isArray(data.usedCorruptions) && data.usedCorruptions[0] > 0)) {\r\n    player.prototypeCorruptions[0] = 0\r\n    player.usedCorruptions[0] = 0\r\n  }\r\n  if (player.antSacrificeTimerReal === undefined) {\r\n    player.antSacrificeTimerReal = player.antSacrificeTimer / calculateTimeAcceleration().mult\r\n  }\r\n  if (player.subtabNumber === undefined || data.subtabNumber === undefined) {\r\n    player.subtabNumber = 0\r\n  }\r\n  if (data.wowPlatonicCubes === undefined) {\r\n    player.wowPlatonicCubes = new WowPlatonicCubes(0)\r\n    player.wowAbyssals = 0\r\n  }\r\n  if (data.platonicBlessings === undefined) {\r\n    const ascCount = player.ascensionCount\r\n    if (player.currentChallenge.ascension !== 0 && player.currentChallenge.ascension !== 15) {\r\n      void resetCheck('ascensionChallenge', false, true)\r\n    }\r\n    if (player.currentChallenge.ascension === 15) {\r\n      void resetCheck('ascensionChallenge', false, true)\r\n      player.challenge15Exponent = 0\r\n      c15RewardUpdate()\r\n    }\r\n    player.ascensionCount = ascCount\r\n    player.challengecompletions[15] = 0\r\n    player.highestchallengecompletions[15] = 0\r\n    player.platonicBlessings = {\r\n      cubes: 0,\r\n      tesseracts: 0,\r\n      hypercubes: 0,\r\n      platonics: 0,\r\n      hypercubeBonus: 0,\r\n      taxes: 0,\r\n      scoreBonus: 0,\r\n      globalSpeed: 0\r\n    }\r\n    player.platonicUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    player.challenge15Exponent = 0\r\n    player.loadedNov13Vers = false\r\n  }\r\n  if (player.researches.some(k => typeof k !== 'number')) {\r\n    for (let i = 0; i < 200; i++) {\r\n      player.researches[i + 1] = player.researches[i + 1] || 0\r\n    }\r\n  }\r\n  if (data.loadedDec16Vers === false || data.loadedDec16Vers === undefined) {\r\n    if (player.currentChallenge.ascension === 15) {\r\n      void resetCheck('ascensionChallenge', false, true)\r\n      player.challenge15Exponent = 0\r\n      c15RewardUpdate()\r\n    }\r\n    player.challenge15Exponent = 0\r\n    c15RewardUpdate()\r\n    player.loadedDec16Vers = true\r\n  }\r\n\r\n  // in old versions of the game (pre 2.5.0), the import function will only work\r\n  // if this variable = \"YES!\". Don't ask Platonic why.\r\n  if (typeof data.exporttest === 'string') {\r\n    player.exporttest = !testing\r\n  } else {\r\n    player.exporttest = !!data.exporttest\r\n  }\r\n\r\n  const shop = data.shopUpgrades as LegacyShopUpgrades | Player['shopUpgrades']\r\n  if (shop && 'offeringTimerLevel' in shop) {\r\n    player.shopUpgrades = {\r\n      offeringPotion: shop.offeringPotion,\r\n      obtainiumPotion: shop.obtainiumPotion,\r\n      offeringEX: 0,\r\n      offeringAuto: Math.min(1, Number(shop.offeringAutoLevel)),\r\n      obtainiumEX: 0,\r\n      obtainiumAuto: Math.min(1, Number(shop.obtainiumAutoLevel)), //Number(shop.obtainiumAutoLevel),\r\n      instantChallenge: Number(shop.instantChallengeBought),\r\n      antSpeed: 0,\r\n      cashGrab: 0,\r\n      shopTalisman: Number(shop.talismanBought),\r\n      seasonPass: 0,\r\n      challengeExtension: shop.challengeExtension,\r\n      challengeTome: 0, // This was shop.challenge10Tomes\r\n      cubeToQuark: Number(shop.cubeToQuarkBought),\r\n      tesseractToQuark: Number(shop.tesseractToQuarkBought),\r\n      hypercubeToQuark: Number(shop.hypercubeToQuarkBought),\r\n      seasonPass2: 0,\r\n      seasonPass3: 0,\r\n      chronometer: 0,\r\n      infiniteAscent: 0,\r\n      calculator: 0,\r\n      calculator2: 0,\r\n      calculator3: 0,\r\n      calculator4: 0,\r\n      calculator5: 0,\r\n      calculator6: 0,\r\n      constantEX: 0,\r\n      powderEX: 0,\r\n      chronometer2: 0,\r\n      chronometer3: 0,\r\n      seasonPassY: 0,\r\n      seasonPassZ: 0,\r\n      challengeTome2: 0,\r\n      instantChallenge2: 0,\r\n      cashGrab2: 0,\r\n      cubeToQuarkAll: 0,\r\n      obtainiumEX2: 0,\r\n      offeringEX2: 0,\r\n      powderAuto: 0,\r\n      chronometerZ: 0,\r\n      seasonPassLost: 0,\r\n      challenge15Auto: 0,\r\n      extraWarp: 0,\r\n      autoWarp: 0,\r\n      improveQuarkHept: 0,\r\n      improveQuarkHept2: 0,\r\n      improveQuarkHept3: 0,\r\n      improveQuarkHept4: 0,\r\n      shopImprovedDaily: 0,\r\n      shopImprovedDaily2: 0,\r\n      shopImprovedDaily3: 0,\r\n      shopImprovedDaily4: 0,\r\n      offeringEX3: 0,\r\n      obtainiumEX3: 0,\r\n      improveQuarkHept5: 0,\r\n      seasonPassInfinity: 0,\r\n      chronometerInfinity: 0,\r\n      shopSingularityPenaltyDebuff: 0,\r\n      shopAmbrosiaGeneration1: 0,\r\n      shopAmbrosiaGeneration2: 0,\r\n      shopAmbrosiaGeneration3: 0,\r\n      shopAmbrosiaGeneration4: 0,\r\n      shopAmbrosiaLuck1: 0,\r\n      shopAmbrosiaLuck2: 0,\r\n      shopAmbrosiaLuck3: 0,\r\n      shopAmbrosiaLuck4: 0\r\n    }\r\n\r\n    player.worlds.add(150 * shop.offeringTimerLevel + 25/2 * (shop.offeringTimerLevel - 1) * shop.offeringTimerLevel, false)\r\n    player.worlds.add(150 * shop.obtainiumTimerLevel + 25/2 * (shop.obtainiumTimerLevel - 1) * shop.obtainiumTimerLevel, false)\r\n    player.worlds.add(150 * shop.offeringAutoLevel + 25/2 * (shop.offeringAutoLevel - 1) * shop.offeringAutoLevel - 150 * Math.min(1, shop.offeringAutoLevel), false)\r\n    player.worlds.add(150 * shop.obtainiumAutoLevel + 25/2 * (shop.obtainiumAutoLevel - 1) * shop.obtainiumAutoLevel - 150 * Math.min(1, shop.obtainiumAutoLevel), false)\r\n    player.worlds.add(100 * shop.cashGrabLevel + 100/2 * (shop.cashGrabLevel - 1) * shop.cashGrabLevel, false)\r\n    player.worlds.add(200 * shop.antSpeedLevel + 80/2 * (shop.antSpeedLevel - 1) * shop.antSpeedLevel, false)\r\n\r\n    const tomes = shop.challenge10Tomes ?? shop.challengeTome\r\n    player.worlds.add(500 * tomes + 250/2 * (tomes - 1) * (tomes), false)\r\n\r\n    player.worlds.add(\r\n      typeof shop.seasonPass === 'number'\r\n        ? 500 * shop.seasonPass + 250/2 * (shop.seasonPass - 1) * shop.seasonPass\r\n        : 500 * shop.seasonPassLevel + 250/2 * (shop.seasonPassLevel - 1) * shop.seasonPassLevel,\r\n      false\r\n    )\r\n  }\r\n\r\n  if (player.shopUpgrades.seasonPass2 === undefined) {\r\n    player.shopUpgrades.seasonPass2 = 0\r\n    player.shopUpgrades.seasonPass3 = 0\r\n    player.shopUpgrades.chronometer = 0\r\n    player.shopUpgrades.infiniteAscent = 0\r\n  }\r\n\r\n  if (player.runeexp[5] === undefined) {\r\n    player.runeexp[5] = player.runeexp[6] = 0\r\n    player.runelevels[5] = player.runelevels[6] = 0\r\n  }\r\n\r\n  // resets all hepteract values on the player object\r\n  player.hepteractCrafts = {\r\n    chronos: ChronosHepteract,\r\n    hyperrealism: HyperrealismHepteract,\r\n    quark: QuarkHepteract,\r\n    challenge: ChallengeHepteract,\r\n    abyss: AbyssHepteract,\r\n    accelerator: AcceleratorHepteract,\r\n    acceleratorBoost: AcceleratorBoostHepteract,\r\n    multiplier: MultiplierHepteract\r\n  }\r\n\r\n  // if the player has hepteracts, we need to overwrite the player values\r\n  // with the ones the save has.\r\n  if (data.hepteractCrafts != null) {\r\n    for (const item in blankSave.hepteractCrafts) {\r\n      const k = item as keyof Player['hepteractCrafts']\r\n      // if more crafts are added, some keys might not exist in the save\r\n      if (data.hepteractCrafts[k]) {\r\n        player.hepteractCrafts[k] = createHepteract({ ...player.hepteractCrafts[k], ...data.hepteractCrafts[k] })\r\n      }\r\n    }\r\n  }\r\n\r\n  if (data.platonicCubeOpenedDaily === undefined) {\r\n    player.platonicCubeOpenedDaily = 0\r\n    player.platonicCubeQuarkDaily = 0\r\n  }\r\n\r\n  if (data.shopUpgrades.calculator === undefined) {\r\n    player.shopUpgrades.calculator = 0\r\n    player.shopUpgrades.calculator2 = 0\r\n    player.shopUpgrades.calculator3 = 0\r\n    player.shopUpgrades.constantEX = 0\r\n  }\r\n\r\n  while (player.achievements[280] === undefined) {\r\n    player.achievements.push(0)\r\n  }\r\n\r\n  if (data.overfluxOrbs === undefined) {\r\n    player.overfluxOrbs = 0\r\n  }\r\n  if (data.overfluxOrbsAutoBuy === undefined) {\r\n    player.overfluxOrbsAutoBuy = false\r\n  }\r\n  if (data.overfluxPowder === undefined) {\r\n    player.overfluxPowder = 0\r\n    player.shopUpgrades.powderEX = 0\r\n    player.dailyPowderResetUses = 1\r\n  }\r\n\r\n  if (data.ascStatToggles[5] === undefined) {\r\n    player.ascStatToggles[5] = false\r\n  }\r\n\r\n  while (player.platonicUpgrades[20] === undefined) {\r\n    player.platonicUpgrades.push(0)\r\n  }\r\n\r\n  if (data.loadedV253 === undefined) {\r\n    player.loadedV253 = true\r\n    player.worlds.add(10000 * player.shopUpgrades.calculator + 10000 / 2 * (player.shopUpgrades.calculator - 1) * (player.shopUpgrades.calculator), false)\r\n    player.worlds.add(10000 * player.shopUpgrades.calculator2 + 5000 / 2 * (player.shopUpgrades.calculator2 - 1) * (player.shopUpgrades.calculator2), false)\r\n    player.worlds.add(25000 * player.shopUpgrades.calculator3 + 25000 / 2 * (player.shopUpgrades.calculator3 - 1) * (player.shopUpgrades.calculator3), false)\r\n    player.shopUpgrades.calculator = 0\r\n    player.shopUpgrades.calculator2 = 0\r\n    player.shopUpgrades.calculator3 = 0\r\n    player.wowAbyssals += 1e8 * player.platonicUpgrades[16] // Refund based off of abyss hepteracts spent\r\n    void Alert(i18next.t('general.updateAlerts.june282021'))\r\n  }\r\n\r\n  if (data.loadedV255 === undefined) {\r\n    player.loadedV255 = true\r\n    player.worlds.add(1000 * player.shopUpgrades.powderEX + 1000 / 2 * (player.shopUpgrades.powderEX - 1) * (player.shopUpgrades.powderEX), false)\r\n    player.shopUpgrades.powderEX = 0\r\n    void Alert(i18next.t('general.updateAlerts.july22021'))\r\n    player.firstCostAnts = new Decimal('1e700')\r\n    player.firstOwnedAnts = 0\r\n  }\r\n\r\n  if (data.autoResearchMode === undefined) {\r\n    player.autoResearchMode = 'manual'\r\n  }\r\n\r\n  if (data.singularityCount === undefined) {\r\n    player.singularityCount = 0\r\n    player.goldenQuarks = 0\r\n\r\n    player.quarksThisSingularity = 0\r\n    player.quarksThisSingularity += +player.worlds\r\n    const keys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\r\n    for (const key of keys) {\r\n      player.quarksThisSingularity += getQuarkInvestment(key)\r\n    }\r\n  }\r\n\r\n  if (data.totalQuarksEver === undefined) {\r\n    player.totalQuarksEver = 0\r\n  }\r\n\r\n  if (data.hotkeys === undefined) {\r\n    player.hotkeys = {}\r\n    player.theme = 'Dark Mode'\r\n    player.notation = 'Default'\r\n  }\r\n\r\n  // Update (read: check) for undefined shop upgrades. Also checks above max level.\r\n  const shopKeys = Object.keys(blankSave.shopUpgrades) as (keyof Player['shopUpgrades'])[]\r\n  for (const shopUpgrade of shopKeys) {\r\n    if (player.shopUpgrades[shopUpgrade] === undefined) {\r\n      player.shopUpgrades[shopUpgrade] = 0\r\n    }\r\n    if (player.shopUpgrades[shopUpgrade] > shopData[shopUpgrade].maxLevel) {\r\n      player.shopUpgrades[shopUpgrade] = shopData[shopUpgrade].maxLevel\r\n    }\r\n  }\r\n\r\n  if (data.singularityUpgrades != null) {\r\n    for (const item in blankSave.singularityUpgrades) {\r\n      const k = item as keyof Player['singularityUpgrades']\r\n      // if more crafts are added, some keys might not exist in the save\r\n      let updatedData:ISingularityData\r\n      if (data.singularityUpgrades[k]) {\r\n        const { level, goldenQuarksInvested, toggleBuy, freeLevels } = data.singularityUpgrades[k]\r\n\r\n        updatedData = {\r\n          maxLevel: singularityData[k].maxLevel,\r\n          costPerLevel: singularityData[k].costPerLevel,\r\n\r\n          level,\r\n          goldenQuarksInvested,\r\n          toggleBuy,\r\n          freeLevels,\r\n          minimumSingularity: singularityData[k].minimumSingularity,\r\n          effect: singularityData[k].effect,\r\n          canExceedCap: singularityData[k].canExceedCap,\r\n          specialCostForm: singularityData[k].specialCostForm,\r\n          qualityOfLife: singularityData[k].qualityOfLife,\r\n          cacheUpdates: singularityData[k].cacheUpdates\r\n        }\r\n        player.singularityUpgrades[k] = new SingularityUpgrade(updatedData, k.toString())\r\n\r\n        if (player.singularityUpgrades[k].minimumSingularity > player.highestSingularityCount) {\r\n          player.singularityUpgrades[k].refund()\r\n        }\r\n\r\n        const cost = player.singularityUpgrades[k].level * (player.singularityUpgrades[k].level + 1) *\r\n                             player.singularityUpgrades[k].costPerLevel / 2\r\n        if (player.singularityUpgrades[k].maxLevel !== -1 &&\r\n                    player.singularityUpgrades[k].level <= player.singularityUpgrades[k].maxLevel &&\r\n                    player.singularityUpgrades[k].goldenQuarksInvested !== cost &&\r\n                    player.singularityUpgrades[k].specialCostForm === 'Default') {\r\n          player.singularityUpgrades[k].refund()\r\n        }\r\n      } else {\r\n        player.singularityUpgrades[k].name = `[NEW!] ${player.singularityUpgrades[k].name}`\r\n      }\r\n    }\r\n  }\r\n\r\n  if (data.octeractUpgrades != null) { // TODO: Make this more DRY -Platonic, July 15 2022\r\n    for (const item in blankSave.octeractUpgrades) {\r\n      const k = item as keyof Player['octeractUpgrades']\r\n      let updatedData:IOcteractData\r\n      if (data.octeractUpgrades[k]) {\r\n        const { level, octeractsInvested, toggleBuy, freeLevels } = data.octeractUpgrades[k]\r\n        updatedData = {\r\n          maxLevel: octeractData[k].maxLevel,\r\n          costPerLevel: octeractData[k].costPerLevel,\r\n          level,\r\n          octeractsInvested,\r\n          toggleBuy,\r\n          effect: octeractData[k].effect,\r\n          costFormula: octeractData[k].costFormula,\r\n          freeLevels,\r\n          qualityOfLife: octeractData[k].qualityOfLife\r\n        }\r\n        player.octeractUpgrades[k] = new OcteractUpgrade(updatedData, k.toString())\r\n\r\n        if (player.octeractUpgrades[k].maxLevel !== -1 &&\r\n                    player.octeractUpgrades[k].level > player.octeractUpgrades[k].maxLevel) {\r\n          player.octeractUpgrades[k].refund()\r\n        }\r\n      } else {\r\n        player.octeractUpgrades[k].name = `[NEW!] ${player.octeractUpgrades[k].name}`\r\n      }\r\n    }\r\n  }\r\n\r\n  if (data.blueberryUpgrades != null) {\r\n    for (const item of Object.keys(blankSave.blueberryUpgrades)) {\r\n      const k = item as keyof Player['blueberryUpgrades']\r\n      let updatedData:IBlueberryData\r\n      if (data.blueberryUpgrades[k]) {\r\n        const { level, ambrosiaInvested, blueberriesInvested, toggleBuy, freeLevels } = data.blueberryUpgrades[k]\r\n        updatedData = {\r\n          maxLevel: blueberryUpgradeData[k].maxLevel,\r\n          costPerLevel: blueberryUpgradeData[k].costPerLevel,\r\n          level,\r\n          ambrosiaInvested,\r\n          blueberriesInvested,\r\n          toggleBuy,\r\n          blueberryCost: blueberryUpgradeData[k].blueberryCost,\r\n          rewards: blueberryUpgradeData[k].rewards,\r\n          costFormula: blueberryUpgradeData[k].costFormula,\r\n          freeLevels,\r\n          prerequisites: blueberryUpgradeData[k].prerequisites,\r\n          cacheUpdates: blueberryUpgradeData[k].cacheUpdates\r\n        }\r\n        player.blueberryUpgrades[k] = new BlueberryUpgrade(updatedData, k.toString())\r\n\r\n        if (player.blueberryUpgrades[k].maxLevel !== -1 &&\r\n                    player.blueberryUpgrades[k].level > player.blueberryUpgrades[k].maxLevel) {\r\n          player.blueberryUpgrades[k].refund()\r\n        }\r\n      } else {\r\n        player.blueberryUpgrades[k].name = `[NEW!] ${player.blueberryUpgrades[k].name}`\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  if (data.singularityChallenges != null) {\r\n    for (const item in blankSave.singularityChallenges) {\r\n      const k = item as keyof Player['singularityChallenges']\r\n      let updatedData:ISingularityChallengeData\r\n      if (data.singularityChallenges[k]) {\r\n\r\n        // This is a HOTFIX. Please do not remove unless you can think of a better way\r\n        if (data.loadedV2927Hotfix1 === undefined && k === 'noSingularityUpgrades') {\r\n          const comps = data.singularityChallenges[k].completions\r\n          if (comps > 0) {\r\n            data.singularityChallenges[k].highestSingularityCompleted = 4 * comps - 3\r\n          }\r\n        }\r\n\r\n        const { completions, highestSingularityCompleted, enabled } = data.singularityChallenges[k]\r\n        updatedData = {\r\n          baseReq: singularityChallengeData[k].baseReq,\r\n          completions,\r\n          maxCompletions: singularityChallengeData[k].maxCompletions,\r\n          unlockSingularity: singularityChallengeData[k].unlockSingularity,\r\n          HTMLTag: singularityChallengeData[k].HTMLTag,\r\n          highestSingularityCompleted,\r\n          enabled,\r\n          singularityRequirement: singularityChallengeData[k].singularityRequirement,\r\n          effect: singularityChallengeData[k].effect\r\n        }\r\n        player.singularityChallenges[k] = new SingularityChallenge(updatedData, k.toString())\r\n      }\r\n    }\r\n  }\r\n\r\n  while (player.cubeUpgrades.length < 71) {\r\n    player.cubeUpgrades.push(0)\r\n  }\r\n\r\n  if (data.dailyCodeUsed === undefined) {\r\n    player.dailyCodeUsed = false\r\n  }\r\n\r\n  if (player.usedCorruptions[1] > 0 || player.prototypeCorruptions[1] > 0) {\r\n    player.usedCorruptions[1] = 0\r\n    player.prototypeCorruptions[1] = 0\r\n  }\r\n\r\n  if (data.goldenQuarksTimer === undefined || player.goldenQuarksTimer === undefined) {\r\n    player.goldenQuarksTimer = 90000\r\n  }\r\n\r\n  if (data.hepteractAutoCraftPercentage === undefined) {\r\n    player.hepteractAutoCraftPercentage = 50\r\n  }\r\n\r\n  if (data.autoWarpCheck === undefined || player.shopUpgrades.autoWarp === 0) {\r\n    player.autoWarpCheck = false\r\n  }\r\n\r\n  if (data.loadedV297Hotfix1 === undefined) {\r\n    player.loadedV297Hotfix1 = true\r\n\r\n    player.singularityUpgrades.singCubes1.refund()\r\n    player.singularityUpgrades.singObtainium1.refund()\r\n    player.singularityUpgrades.singOfferings1.refund()\r\n    player.singularityUpgrades.ascensions.refund()\r\n\r\n    if (player.codes.get(40) && player.singularityCount > 0) {\r\n      player.singularityUpgrades.singCubes1.freeLevels += 5\r\n      player.singularityUpgrades.singOfferings1.freeLevels += 5\r\n      player.singularityUpgrades.singObtainium1.freeLevels += 5\r\n      player.singularityUpgrades.ascensions.freeLevels += 5\r\n    }\r\n\r\n    if (player.singularityCount > 0) {\r\n      void Alert(i18next.t('general.updateAlerts.v297hotfix1Sing'))\r\n    } else {\r\n      void Alert(i18next.t('general.updateAlerts.v297hotfix1NoSing'))\r\n    }\r\n  }\r\n\r\n  if (data.shopBuyMaxToggle === undefined) {\r\n    player.shopBuyMaxToggle = false\r\n    player.shopConfirmationToggle = true\r\n  }\r\n\r\n  if (data.wowOcteracts === undefined) {\r\n    player.wowOcteracts = 0\r\n    player.octeractTimer = 0\r\n  }\r\n\r\n  if (data.shopHideToggle === undefined) {\r\n    player.shopHideToggle = false\r\n  }\r\n\r\n  if (data.researchBuyMaxToggle === undefined) {\r\n    player.researchBuyMaxToggle = false\r\n  }\r\n\r\n  if (data.cubeUpgradesBuyMaxToggle === undefined) {\r\n    player.cubeUpgradesBuyMaxToggle = false\r\n  }\r\n\r\n  if (data.ascensionCounterRealReal === undefined) {\r\n    player.ascensionCounterRealReal = 0\r\n  }\r\n\r\n  if (data.totalWowOcteracts === undefined) {\r\n    player.totalWowOcteracts = 0\r\n  }\r\n\r\n  if (data.highestSingularityCount === undefined) {\r\n    player.highestSingularityCount = player.singularityCount\r\n    if (player.singularityCount > 0) {\r\n      player.goldenQuarks += 200\r\n      player.goldenQuarks += 100 * Math.min(10, player.singularityCount)\r\n\r\n      if (player.singularityCount >= 5) {\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 1\r\n      }\r\n\r\n      if (player.singularityCount >= 10) {\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 2\r\n      }\r\n    }\r\n  }\r\n\r\n  if (data.autoPotionTimer === undefined) {\r\n    player.autoPotionTimer = 0\r\n  }\r\n  if (data.autoPotionTimerObtainium === undefined) {\r\n    player.autoPotionTimerObtainium = 0\r\n  }\r\n  if (data.insideSingularityChallenge === undefined) {\r\n    player.insideSingularityChallenge = false\r\n  }\r\n\r\n  if (data.loadedV2930Hotfix1 === undefined) {\r\n    if (player.singularityCount > 230) {\r\n      player.singularityCount = 230\r\n    }\r\n    if (player.highestSingularityCount > 230) {\r\n      player.highestSingularityCount = 230\r\n      void Alert(i18next.t('general.updateAlerts.sing230Balancing'))\r\n    }\r\n    player.loadedV2930Hotfix1 = true\r\n  }\r\n\r\n  if (data.loadedV2931Hotfix1 === undefined) {\r\n    player.loadedV2931Hotfix1 = true\r\n    player.shopUpgrades.obtainiumEX3 = Math.min(1000, player.shopUpgrades.obtainiumEX3 * 2)\r\n    player.shopUpgrades.offeringEX3 = Math.min(1000, player.shopUpgrades.offeringEX3 * 2)\r\n    player.shopUpgrades.seasonPassInfinity = Math.min(1000, player.shopUpgrades.seasonPassInfinity * 2)\r\n    player.shopUpgrades.chronometerInfinity = Math.min(1000, player.shopUpgrades.chronometerInfinity * 2)\r\n    player.shopUpgrades.improveQuarkHept5 = Math.min(100, player.shopUpgrades.improveQuarkHept5 * 2)\r\n    player.singularityUpgrades.offeringAutomatic.refund()\r\n    void Alert(i18next.t('general.updateAlerts.december22xxxx'))\r\n  }\r\n\r\n  if (data.loadedV21003Hotfix1 === undefined) {\r\n    player.loadedV21003Hotfix1 = true\r\n    player.singularityUpgrades.blueberries.refund()\r\n    void Alert(i18next.t('general.updateAlerts.january42023'))\r\n  }\r\n\r\n  if (data.loadedV21007Hotfix1 === undefined) {\r\n    player.loadedV21007Hotfix1 = true\r\n    if (player.octeractUpgrades.octeractQuarkGain.level >= 10000) {\r\n      player.octeractUpgrades.octeractQuarkGain.refund()\r\n    }\r\n  }\r\n\r\n  if (data.ambrosia === undefined) {\r\n    player.ambrosia = 0\r\n    player.lifetimeAmbrosia = 0\r\n    player.ambrosiaRNG = 0 // NOW DEPRECIATED\r\n    player.visitedAmbrosiaSubtab = false\r\n  }\r\n\r\n  if (data.blueberryTime === undefined) {\r\n    player.blueberryTime = player.ambrosiaRNG\r\n  }\r\n\r\n  if (data.spentBlueberries === undefined) {\r\n    player.spentBlueberries = 0\r\n    if (player.singularityUpgrades.blueberries.level > 10) {\r\n      player.singularityUpgrades.blueberries.refund()\r\n    }\r\n\r\n    if (player.highestSingularityCount >= 100) {\r\n      const reduce = Math.min(6, Math.ceil(1/20 * (player.highestSingularityCount - 100)))\r\n      player.highestSingularityCount -= reduce\r\n      if (!player.insideSingularityChallenge) {\r\n        player.singularityCount -= reduce\r\n      }\r\n      void Alert(`Due to recent balance changes your highest singularity count was reduced by ${reduce}. This is for your own good!`)\r\n    }\r\n  }\r\n\r\n  player.caches = {\r\n    ambrosiaLuck: new AmbrosiaLuckCache(),\r\n    ambrosiaGeneration: new AmbrosiaGenerationCache(),\r\n    blueberryInventory: new BlueberryInventoryCache()\r\n  }\r\n\r\n  cacheReinitialize()\r\n\r\n  const oldest = localStorage.getItem('firstPlayed')\r\n\r\n  if (data.firstPlayed == undefined) {\r\n    // If the save is from before v2.9.7 staticians\r\n    player.firstPlayed = oldest ?? new Date().toISOString()\r\n  } else if (data.firstPlayed?.includes('Before')) {\r\n    // The first version with player.firstPlayed set the date to\r\n    // \"Before {date.toString}\"\r\n    player.firstPlayed = oldest ?? new Date().toISOString()\r\n  } else {\r\n    // Otherwise just set the firstPlayed time to either the oldest\r\n    // stored, or the date in the save being loaded.\r\n    player.firstPlayed = oldest ?? data.firstPlayed\r\n  }\r\n\r\n  if (data.autoCubeUpgradesToggle === undefined) {\r\n    player.autoCubeUpgradesToggle = false\r\n    player.autoPlatonicUpgradesToggle = false\r\n  }\r\n}\r\n", "import type { Module } from 'i18next'\r\n\r\nexport default {\r\n  type: 'postProcessor',\r\n  name: 'ColorText',\r\n  process: (value: string): string => {\r\n    if (!value.includes('<<')) {\r\n      return value\r\n    }\r\n\r\n    return value.replace(/<<(.*?)\\|(.*?)>>/g, '<span style=\"color:$1\">$2</span>')\r\n  }\r\n} as Module\r\n", "import i18next, { type Resource } from 'i18next'\r\nimport { prod } from './Config'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport ColorTextPlugin from './Plugins/ColorText'\r\nimport { Confirm } from './UpdateHTML'\r\n\r\n// For 'flag': https://emojipedia.org/emoji-flag-sequence/\r\n// Searching \"flag <country>\" in their search bar will help verify the code.\r\nconst supported: Record<string, { name: string, flag: string }> = {\r\n  // Define language properties and mappings here.\r\n  en: { name: 'English', flag: '\uD83C\uDDFA\uD83C\uDDF8' }, // Or '\uD83C\uDDFA\uD83C\uDDF8 / \uD83C\uDDEC\uD83C\uDDE7', no name?\r\n  zh: { name: 'Chinese', flag: '\uD83C\uDDE8\uD83C\uDDF3' },\r\n  fr: { name: 'French', flag: '\uD83C\uDFF3\uFE0F' },\r\n  de: { name: 'German', flag: '\uD83C\uDDE9\uD83C\uDDEA' },\r\n  pl: { name: 'Polish', flag: '\uD83C\uDDF5\uD83C\uDDF1' },\r\n  es: { name: 'Spanish', flag: '\uD83C\uDDEA\uD83C\uDDF8' },\r\n  ru: { name: 'Russian', flag: '\uD83C\uDDF7\uD83C\uDDFA' }\r\n}\r\n\r\nconst languageCache = new Map<string, { translation: Resource }>()\r\n\r\nexport const init = async (): Promise<void> => {\r\n  const resources: Record<string, Resource> = {}\r\n  const language = localStorage.getItem('language') ?? 'en'\r\n\r\n  const response = await fetch(`./translations/${language}.json`)\r\n  const file = await response.json() as Resource\r\n\r\n  languageCache.set(language, { translation: file })\r\n  resources[language] = { translation: file }\r\n\r\n  if (language !== 'en') {\r\n    // We always need to load English, to use as a fallback\r\n    const response = await fetch('./translations/en.json')\r\n    const file = await response.json() as Resource\r\n\r\n    languageCache.set('en', { translation: file })\r\n    resources.en = { translation: file }\r\n  }\r\n\r\n  await i18next.use(ColorTextPlugin).init({\r\n    lng: language,\r\n    fallbackLng: 'en',\r\n    debug: !prod,\r\n    resources,\r\n    postProcess: ['ColorText'],\r\n    // crowdin returns an empty string when a translation for\r\n    // a language isn't present\r\n    returnEmptyString: false,\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  })\r\n\r\n  buildLanguageTab()\r\n  translateHTML()\r\n}\r\n\r\nfunction buildLanguageButton(langID: string, name: string, flag: string) {\r\n  const mainButton = document.createElement('button')\r\n  mainButton.id = `language_${langID}`\r\n  mainButton.className = 'language-select'\r\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n  mainButton.addEventListener('click', async () => {\r\n    if (!languageCache.has(langID)) {\r\n      const response = await fetch(`./translations/${langID}.json`)\r\n      const file = await response.json() as Resource\r\n\r\n      languageCache.set(langID, { translation: file })\r\n      i18next.addResourceBundle(langID, 'translation', file)\r\n    }\r\n\r\n    // i18next.addResourceBundle\r\n    await i18next.changeLanguage(langID)\r\n    localStorage.setItem('language', langID)\r\n\r\n    const shouldReload = await Confirm(i18next.t('general.languageChange'))\r\n\r\n    if (shouldReload) {\r\n      location.reload()\r\n    }\r\n  })\r\n\r\n  const flagSpan = document.createElement('span')\r\n  flagSpan.className = 'lang-flag'\r\n  flagSpan.textContent = flag\r\n  mainButton.appendChild(flagSpan)\r\n\r\n  const nameSpan = document.createElement('span')\r\n  nameSpan.className = 'lang-name'\r\n  nameSpan.textContent = name\r\n  mainButton.appendChild(nameSpan)\r\n\r\n  return mainButton\r\n}\r\n\r\nfunction buildLanguageTab() {\r\n  const langSelector = DOMCacheGetOrSet('languageOptions')\r\n  for (const langID in supported) {\r\n    const langButton = buildLanguageButton(langID, supported[langID].name, supported[langID].flag)\r\n    langSelector.appendChild(langButton)\r\n  }\r\n}\r\n\r\nfunction translateHTML () {\r\n  const i18n = document.querySelectorAll('*[i18n]')\r\n\r\n  for (const element of Array.from(i18n)) {\r\n    const key = element.getAttribute('i18n')!\r\n    const value = i18next.t(key)\r\n\r\n    if (value.includes('<span')) {\r\n      element.innerHTML = value\r\n    } else {\r\n      element.textContent = value\r\n    }\r\n  }\r\n}\r\n\r\n"],
  "mappings": "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",
  "names": ["require_pad_end", "__commonJSMin", "exports", "module", "string", "maxLength", "fillString", "result", "targetLen", "length", "filled", "fillLen", "truncated", "require_lz_string", "__commonJSMin", "exports", "module", "LZString", "f", "keyStrBase64", "keyStrUriSafe", "baseReverseDic", "getBaseValue", "alphabet", "character", "i", "input", "res", "a", "index", "compressed", "uncompressed", "buf", "TotalLen", "current_value", "result", "c", "bitsPerChar", "getCharFromInt", "value", "context_dictionary", "context_dictionaryToCreate", "context_c", "context_wc", "context_w", "context_enlargeIn", "context_dictSize", "context_numBits", "context_data", "context_data_val", "context_data_position", "ii", "length", "resetValue", "getNextValue", "dictionary", "next", "enlargeIn", "dictSize", "numBits", "entry", "w", "bits", "resb", "maxpower", "power", "data", "require_eventemitter3", "__commonJSMin", "exports", "module", "has", "prefix", "Events", "EE", "fn", "context", "once", "addListener", "emitter", "event", "listener", "evt", "clearEvent", "EventEmitter", "names", "events", "name", "handlers", "i", "ee", "listeners", "a1", "a2", "a3", "a4", "a5", "len", "args", "length", "j", "require_bundle", "__commonJSMin", "exports", "module", "global", "factory", "createAddUniqueNumber", "generateUniqueNumber", "set", "number", "createCache", "lastNumberWeakMap", "collection", "nextNumber", "MAX_SAFE_INTEGER", "TWO_TO_THE_POWER_OF_TWENTY_NINE", "TWO_TO_THE_POWER_OF_THIRTY", "createGenerateUniqueNumber", "cache", "lastNumber", "LAST_NUMBER_WEAK_MAP", "addUniqueNumber", "require_localforage", "__commonJSMin", "exports", "module", "f", "g", "define", "e", "t", "n", "r", "s", "o", "u", "a", "__require", "i", "l", "_dereq_", "global", "Mutation", "scheduleDrain", "called", "observer", "nextTick", "element", "channel", "scriptEl", "draining", "queue", "oldQueue", "len", "immediate", "task", "INTERNAL", "handlers", "REJECTED", "FULFILLED", "PENDING", "Promise", "resolver", "safelyResolveThenable", "onRejected", "onFulfilled", "promise", "unwrap", "QueueItem", "value", "func", "returnValue", "self", "result", "tryCatch", "getThen", "thenable", "error", "obj", "then", "onError", "onSuccess", "tryToUnwrap", "out", "resolve", "reject", "reason", "all", "iterable", "values", "resolved", "allResolver", "resolveFromAll", "outValue", "race", "response", "_typeof", "_classCallCheck", "instance", "Constructor", "getIDB", "idb", "isIndexedDBValid", "isSafari", "hasFetch", "createBlob", "parts", "properties", "Builder", "builder", "Promise$1", "executeCallback", "callback", "executeTwoCallbacks", "errorCallback", "normalizeKey", "key", "getCallback", "DETECT_BLOB_SUPPORT_STORE", "supportsBlobs", "dbContexts", "toString", "READ_ONLY", "READ_WRITE", "_binStringToArrayBuffer", "bin", "length", "buf", "arr", "_checkBlobSupportWithoutCaching", "txn", "blob", "matchedChrome", "matchedEdge", "_checkBlobSupport", "_deferReadiness", "dbInfo", "dbContext", "deferredOperation", "_advanceReadiness", "_rejectReadiness", "err", "_getConnection", "upgradeNeeded", "createDbContext", "dbArgs", "openreq", "db", "ex", "_getOriginalConnection", "_getUpgradedConnection", "_isUpgradeNeeded", "defaultVersion", "isNewStore", "isDowngrade", "isUpgrade", "incVersion", "_encodeBlob", "reader", "base64", "_decodeBlob", "encodedBlob", "arrayBuff", "_isEncodedBlob", "_fullyReady", "_tryReconnect", "forages", "forage", "createTransaction", "mode", "retries", "tx", "_initStorage", "options", "initPromises", "ignoreErrors", "j", "k", "getItem", "transaction", "store", "req", "iterate", "iterator", "iterationNumber", "cursor", "setItem", "blobSupport", "removeItem", "clear", "advanced", "keys", "dropInstance", "currentConfig", "isCurrentDb", "dbPromise", "newVersion", "dropObjectPromise", "_forage2", "dropDBPromise", "_forage", "asyncStorage", "isWebSQLValid", "BASE_CHARS", "BLOB_TYPE_PREFIX", "BLOB_TYPE_PREFIX_REGEX", "SERIALIZED_MARKER", "SERIALIZED_MARKER_LENGTH", "TYPE_ARRAYBUFFER", "TYPE_BLOB", "TYPE_INT8ARRAY", "TYPE_UINT8ARRAY", "TYPE_UINT8CLAMPEDARRAY", "TYPE_INT16ARRAY", "TYPE_INT32ARRAY", "TYPE_UINT16ARRAY", "TYPE_UINT32ARRAY", "TYPE_FLOAT32ARRAY", "TYPE_FLOAT64ARRAY", "TYPE_SERIALIZED_MARKER_LENGTH", "toString$1", "stringToBuffer", "serializedString", "bufferLength", "p", "encoded1", "encoded2", "encoded3", "encoded4", "buffer", "bytes", "bufferToString", "base64String", "serialize", "valueType", "marker", "fileReader", "str", "deserialize", "type", "blobType", "matcher", "localforageSerializer", "createDbTable", "_initStorage$1", "dbInfoPromise", "tryExecuteSql", "sqlStatement", "args", "results", "getItem$1", "iterate$1", "rows", "item", "_setItem", "retriesLeft", "originalValue", "sqlError", "setItem$1", "removeItem$1", "clear$1", "length$1", "key$1", "keys$1", "getAllStoreNames", "storeNames", "dropInstance$1", "operationInfo", "dropTable", "storeName", "operations", "webSQLStorage", "isLocalStorageValid", "_getKeyPrefix", "defaultConfig", "keyPrefix", "checkIfLocalStorageThrows", "localStorageTestKey", "_isLocalStorageUsable", "_initStorage$2", "clear$2", "getItem$2", "iterate$2", "keyPrefixLength", "key$2", "keys$2", "itemKey", "length$2", "removeItem$2", "setItem$2", "dropInstance$2", "localStorageWrapper", "sameValue", "x", "y", "includes", "array", "searchElement", "isArray", "arg", "DefinedDrivers", "DriverSupport", "DefaultDrivers", "DefaultDriverOrder", "OptionalDriverMethods", "LibraryMethods", "DefaultConfig", "callWhenReady", "localForageInstance", "libraryMethod", "_args", "extend", "_key", "LocalForage", "driverTypeKey", "driver", "driverName", "driverObject", "complianceError", "driverMethods", "driverMethodName", "isRequired", "configureMissingMethods", "methodNotImplementedFactory", "methodName", "_i", "_len", "optionalDriverMethod", "setDriverSupport", "support", "getDriverPromise", "serializerPromise", "drivers", "supportedDrivers", "setDriverToConfig", "extendSelfWithDriver", "initDriver", "currentDriverIndex", "driverPromiseLoop", "oldDriverSetDone", "libraryMethodsAndProperties", "localforage_js", "require_clipboard", "__commonJSMin", "exports", "module", "root", "factory", "__webpack_modules__", "__unused_webpack_module", "__webpack_exports__", "__webpack_require__", "clipboard", "tiny_emitter", "tiny_emitter_default", "listen", "listen_default", "src_select", "select_default", "command", "type", "err", "ClipboardActionCut", "target", "selectedText", "actions_cut", "createFakeElement", "value", "isRTL", "fakeElement", "yPosition", "fakeCopyAction", "options", "ClipboardActionCopy", "actions_copy", "_typeof", "obj", "ClipboardActionDefault", "_options$action", "action", "container", "text", "actions_default", "clipboard_typeof", "_classCallCheck", "instance", "Constructor", "_defineProperties", "props", "i", "descriptor", "_createClass", "protoProps", "staticProps", "_inherits", "subClass", "superClass", "_setPrototypeOf", "o", "p", "_createSuper", "Derived", "hasNativeReflectConstruct", "_isNativeReflectConstruct", "Super", "_getPrototypeOf", "result", "NewTarget", "_possibleConstructorReturn", "self", "call", "_assertThisInitialized", "e", "getAttributeValue", "suffix", "element", "attribute", "Clipboard", "_Emitter", "_super", "trigger", "_this", "_this2", "selector", "actions", "support", "DOCUMENT_NODE_TYPE", "proto", "closest", "__unused_webpack_exports", "_delegate", "callback", "useCapture", "listenerFn", "listener", "delegate", "elements", "is", "listenNode", "listenNodeList", "listenSelector", "node", "nodeList", "select", "isReadOnly", "selection", "range", "E", "name", "ctx", "data", "evtArr", "len", "evts", "liveEvents", "__webpack_module_cache__", "moduleId", "getter", "definition", "key", "prop", "import_pad_end", "n", "e", "r", "a", "i", "o", "u", "s", "t", "h", "c", "p", "f", "break_infinity_esm_default", "import_lz_string", "DOMCache", "DOMCacheGetOrSet", "id", "cachedEl", "el", "isDecimal", "o", "break_infinity_esm_default", "smallestInc", "x", "sumContents", "array", "a", "b", "productContents", "sortWithIndices", "toSort", "getElementById", "id", "DOMCacheGetOrSet", "padArray", "a", "b", "length", "i", "updateClassList", "targetElement", "additions", "removals", "target", "DOMCacheGetOrSet", "addition", "removal", "btoa", "s", "err", "toOrdinal", "int", "suffix", "format", "formatMS", "ms", "f", "t", "formatS", "cleanString", "cleaned", "code", "assert", "condition", "limitRange", "number", "min", "max", "Globals", "break_infinity_esm_default", "blankGlobals", "__spreadValues", "import_eventemitter3", "Synergism", "EventEmitter", "_typeof", "obj", "_classCallCheck", "instance", "Constructor", "_toPrimitive", "input", "hint", "_typeof", "prim", "res", "_toPropertyKey", "arg", "key", "_toPrimitive", "_typeof", "_defineProperties", "target", "props", "i", "descriptor", "_toPropertyKey", "_createClass", "Constructor", "protoProps", "staticProps", "_assertThisInitialized", "self", "_setPrototypeOf", "o", "p", "_inherits", "subClass", "superClass", "_setPrototypeOf", "_possibleConstructorReturn", "self", "call", "_typeof", "_assertThisInitialized", "_getPrototypeOf", "o", "_defineProperty", "obj", "key", "value", "_toPropertyKey", "_arrayWithHoles", "arr", "_iterableToArray", "iter", "_arrayLikeToArray", "arr", "len", "i", "arr2", "_unsupportedIterableToArray", "o", "minLen", "_arrayLikeToArray", "n", "_nonIterableRest", "_toArray", "arr", "_arrayWithHoles", "_iterableToArray", "_unsupportedIterableToArray", "_nonIterableRest", "ownKeys$6", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread$6", "target", "i", "source", "key", "_defineProperty", "consoleLogger", "args", "type", "Logger", "concreteLogger", "options", "_classCallCheck", "_createClass", "bool", "_len", "_key", "_len2", "_key2", "_len3", "_key3", "_len4", "_key4", "lvl", "prefix", "debugOnly", "moduleName", "baseLogger", "EventEmitter", "events", "listener", "_this", "event", "l", "cloned", "observer", "_cloned", "defer", "res", "rej", "promise", "resolve", "reject", "makeString", "copy", "a", "s", "t", "m", "getLastOfPath", "path", "Empty", "cleanKey", "canNotTraverseDeeper", "stack", "setPath", "newValue", "_getLastOfPath", "obj", "k", "pushPath", "concat", "_getLastOfPath2", "getPath", "_getLastOfPath3", "getPathWithDefaults", "data", "defaultData", "value", "deepExtend", "overwrite", "prop", "regexEscape", "str", "_entityMap", "escape", "isIE10", "chars", "looksLikeObjectPath", "nsSeparator", "keySeparator", "possibleChars", "c", "r", "matched", "ki", "ownKeys$5", "_objectSpread$5", "_createSuper$3", "Derived", "hasNativeReflectConstruct", "_isNativeReflectConstruct$3", "Super", "_getPrototypeOf", "result", "NewTarget", "_possibleConstructorReturn", "e", "deepFind", "paths", "current", "j", "p", "mix", "joinedPath", "ResourceStore", "_EventEmitter", "_inherits", "_super", "_assertThisInitialized", "ns", "index", "lng", "ignoreJSONStructure", "resources", "deep", "pack", "n", "v", "postProcessor", "module", "processors", "translator", "processor", "ownKeys$4", "_objectSpread$4", "_createSuper$2", "_isNativeReflectConstruct$2", "checkedLoadedFor", "Translator", "services", "resolved", "namespaces", "wouldCheckForNsInKey", "seemsNaturalLanguage", "parts", "lastKey", "_this2", "_typeof", "returnDetails", "_this$extractFromKey", "namespace", "appendNamespaceToCIMode", "resUsedKey", "resExactUsedKey", "resType", "noObject", "joinArrays", "handleAsObjectInI18nFormat", "handleAsObject", "resTypeIsArray", "newKeyToUse", "deepKey", "usedDefault", "usedKey", "needsPluralHandling", "hasDefaultValue", "defaultValueSuffix", "defaultValue", "missingKeyNoValueFallbackToKey", "resForMissing", "updateMissing", "fk", "lngs", "fallbackLngs", "send", "specificDefaultValue", "defaultForMissing", "language", "suffix", "_this3", "skipOnVariables", "nestBef", "nb", "na", "nestAft", "postProcess", "postProcessorNames", "_this4", "found", "exactUsedKey", "usedLng", "usedNS", "extracted", "needsZeroSuffixLookup", "needsContextHandling", "codes", "code", "finalKeys", "pluralSuffix", "zeroSuffix", "contextKey", "possibleKey", "option", "capitalize", "string", "LanguageUtil", "specialCases", "part", "cleanedLng", "lngOnly", "supportedLng", "fallbacks", "fallbackCode", "fallbackCodes", "addCode", "fc", "sets", "_rulesPluralsTypes", "deprecatedJsonVersions", "suffixesOrder", "createRules", "rules", "set", "PluralResolver", "languageUtils", "_unused", "rule", "pluralCategory1", "pluralCategory2", "pluralCategory", "number", "count", "idx", "returnSuffix", "ownKeys$3", "_objectSpread$3", "Interpolator", "iOpts", "regexpStr", "regexpUnescapeStr", "nestingRegexpStr", "match", "replaces", "regexSafe", "val", "handleFormat", "f", "missingInterpolationHandler", "todos", "todo", "matchedVar", "temp", "safeValue", "clonedOptions", "handleHasOptions", "inheritedOptions", "sep", "optionsString", "matchedSingleQuotes", "matchedDoubleQuotes", "formatters", "doReduce", "elem", "ownKeys$2", "_objectSpread$2", "parseFormatStr", "formatStr", "formatName", "formatOptions", "optStr", "opts", "opt", "_opt$split", "_opt$split2", "_toArray", "rest", "createCachedFormatter", "fn", "cache", "formatter", "Formatter", "name", "_format", "formats", "mem", "_parseFormatStr", "formatted", "valOptions", "error", "ownKeys$1", "_objectSpread$1", "_createSuper$1", "_isNativeReflectConstruct$1", "removePending", "q", "Connector", "backend", "store", "languages", "callback", "toLoad", "pending", "toLoadLanguages", "toLoadNamespaces", "hasAllNamespaces", "err", "loaded", "loadedKeys", "fcName", "tried", "wait", "resolver", "next", "_this5", "fallbackValue", "isUpdate", "clb", "get", "ret", "transformOptions", "ownKeys", "_objectSpread", "_createSuper", "_isNativeReflectConstruct", "noop", "bindMemberFunctions", "inst", "mems", "I18n", "defOpts", "createClassOnDemand", "ClassOrObject", "lu", "storeApi", "_this2$store", "storeApiChained", "_this2$store2", "deferred", "load", "finish", "usedCallback", "append", "li", "lngInLngs", "setLngProps", "done", "setLng", "keyPrefix", "fixedT", "resultKey", "_this$translator", "_this$translator2", "_this6", "fallbackLng", "lastLng", "loadNotPending", "loadState", "preResult", "_this7", "preloaded", "newLngs", "rtlLngs", "_this8", "mergedOptions", "clone", "membersToCopy", "instance", "createInstance", "dir", "init", "loadResources", "reloadResources", "use", "changeLanguage", "getFixedT", "exists", "setDefaultNamespace", "hasLoadedNamespace", "loadNamespaces", "loadLanguages", "achievementpointvalues", "totalachievementpoints", "a", "b", "areward", "i", "corr", "CalcCorruptionStuff", "extra", "format", "player", "break_infinity_esm_default", "calculateTimeAcceleration", "obj", "map", "instance", "achievementAlerts", "num", "Alert", "resetachievementcheck", "achievementaward", "Globals", "challengeCompletionsBar", "challengeCompletionsNotAuto", "challengeachievementcheck", "auto", "generatorcheck", "sumContents", "bar", "ach", "o", "gte", "challengeArray", "j", "buildAchievementReq", "buildingAchievementCheck", "req", "idx", "ascensionAchievementCheck", "score", "ascendCountArray", "constantArray", "scoreArray", "getAchievementQuarks", "multiplier", "globalQuarkMultiplier", "actualMultiplier", "achievementdescriptions", "y", "z", "k", "DOMCacheGetOrSet", "description", "Notification", "revealStuff", "Synergism", "talismanResourceCosts", "num", "calculateMaxTalismanLevel", "i", "maxLevel", "player", "CalcECC", "getTalismanResourceInfo", "type", "percentage", "obtainiumCost", "offeringCost", "maxBuyObtainium", "maxBuyOffering", "amountToBuy", "updateTalismanCostDisplay", "el", "DOMCacheGetOrSet", "talismanCostInfo", "TalismanName", "instance", "format", "toggleTalismanBuy", "x", "updateTalismanInventory", "buyAllTalismanResources", "talismanItemNames", "index", "buyTalismanResources", "talismanResourcesData", "achievementaward", "showTalismanEffect", "a", "b", "c", "d", "e", "f", "h", "Globals", "showTalismanPrices", "m", "showEnhanceTalismanPrices", "array", "costArray", "showRespecInformation", "runeName", "runeModifier", "k", "j", "changeTalismanModifier", "respecTalismanConfirm", "calculateRuneLevels", "respecTalismanCancel", "updateTalismanAppearance", "la", "rarity", "buyTalismanLevels", "auto", "max", "hasPurchased", "checkSum", "priceMult", "buyTalismanEnhance", "displayRuneInformation", "i", "updatelevelup", "m", "Globals", "SILevelMult", "player", "calculateCorruptionPoints", "amountPerOffering", "calculateRuneExpGiven", "options", "format", "break_infinity_esm_default", "calculateEffectiveIALevel", "DOMCacheGetOrSet", "instance", "arr", "calculateOfferingsToLevelXTimes", "offerings", "j", "s", "resetofferings", "input", "calculateOfferings", "unlockedRune", "runeIndexPlusOne", "checkMaxRunes", "runeIndex", "maxed", "calculateMaxRunes", "redeemShards", "auto", "cubeUpgraded", "levelsToAdd", "levelsAdded", "all", "maxLevel", "amountArr", "toSpendTotal", "x", "y", "fact", "a", "add", "mult", "exp", "calculateRuneExpToLevel", "expPerOff", "toSpend", "runeToUpdate", "calculateRuneLevels", "runeLevel", "levels", "sum", "off", "amount", "calculateTesseractBlessings", "tesseractArray", "player", "i", "power", "mult", "Globals", "getReductionValue", "reduction", "Globals", "player", "CalcECC", "getCostAccelerator", "buyingTo", "originalCost", "cost", "break_infinity_esm_default", "num", "factorialBit", "multBit", "sumNum", "sumBit", "buymax", "newCost", "newExtra", "buyAccelerator", "autobuyer", "buyStart", "log10Resource", "log10QuadrillionCost", "hi", "lo", "mid", "buyable", "thisCost", "buydefault", "smallestInc", "buyTo", "cashToBuy", "stepdown", "buyFrom", "updateAllTick", "achievementaward", "getCostMultiplier", "powBit", "buyMultiplier", "updateAllMultiplier", "mantissaFactorialPartExtra", "exponentFactorialPartExtra", "factorialByExponent", "fact", "fact100exponent", "precision16_loss_addition_of_ones", "known_log10s", "needed", "nums", "chalcompletions", "i", "obj", "need", "coinBuildingCosts", "diamondBuildingCosts", "mythosAndParticleBuildingCosts", "getCostInternal", "type", "r", "mlog10125", "fastFactMultBuyTo", "fr", "fastFactMultBuyTo100", "extra", "getOriginalCostAndNum", "index", "originalCostArray", "getCost", "buyMax", "zeroIndex", "pos", "coinmax", "tag", "buyProducerTypes", "posOwnedType", "buyInc", "buyProducer", "amounttype", "buythisamount", "posCostType", "buyUpgrades", "state", "currency", "upgradeupdate", "calculateCrystalBuy", "u", "exponent", "buyCrystalUpgrades", "auto", "c", "toBuy", "crystalupgradedescriptions", "boostAccelerator", "automated", "buyamount", "j", "reset", "getAcceleratorBoostCost", "level", "base", "eff", "linSum", "n", "sqrSum", "getParticleCost", "DR", "buyParticleBuilding", "key", "tesseractBuildingCosts", "buyTessBuildingsToCheapestPrice", "ownedBuildings", "cheapestPrice", "buyToBuildings", "currentlyOwned", "price", "calculateTessBuildingsInBudget", "budget", "minCurrentPrice", "owned", "buildings", "remainingBudget", "currentPrices", "iteration", "minimum", "getTesseractCost", "amount", "checkCanAfford", "intCost", "subCost", "actualBuy", "actualCost", "buyTesseractBuilding", "ascendBuildingIndex", "buyRuneBonusLevels", "baseCost", "baseLevels", "levelCap", "calculateSummationLinear", "updateRuneBlessing", "requirementArray", "calculateRuneBonuses", "blessingMultiplierArray", "t", "DOMCacheGetOrSet", "instance", "format", "spiritMultiplierArray", "calculateCorruptionPoints", "buyAllBlessings", "percentage", "runeshards", "buyGenerator", "i", "state", "player", "q", "type", "cost", "break_infinity_esm_default", "Globals", "achievementCheck", "achievementaward", "upgradeupdate", "buyAutobuyers", "autoUpgrades", "j", "k", "l", "buyUpgrades", "clickUpgrades", "crystalupgdesc", "format", "player", "calculateCorruptionPoints", "Globals", "constantUpgDesc", "upgradetexts", "break_infinity_esm_default", "sumContents", "a", "b", "upgradeeffects", "i", "_a", "effect", "type", "element", "DOMCacheGetOrSet", "instance", "upgradedescriptions", "y", "z", "el", "clickUpgrades", "currency", "color", "auto", "buyUpgrades", "buyAutobuyers", "buyGenerator", "categoryUpgrades", "min", "max", "crystalupgeffect", "returnCrystalUpgDesc", "returnCrystalUpgEffect", "crystalupgradedescriptions", "p", "c", "q", "upgradeupdate", "num", "fast", "revealStuff", "ascendBuildingDR", "sum", "constUpgEffect", "returnConstUpgDesc", "returnConstUpgEffect", "getConstUpgradeMetadata", "toBuy", "cost", "constantUpgradeDescriptions", "level", "buyConstantUpgrades", "calculateAnts", "calculateRuneLevels", "DynamicUpgrade", "data", "_a", "_b", "_c", "_d", "n", "newToggle", "Prompt", "instance", "newToggleAmount", "Alert", "format", "m", "effectiveLevel", "updateSingularityPenalties", "singularityCount", "player", "platonic", "instance", "format", "calculateSingularityDebuff", "hepteract", "str", "getSingularityOridnalText", "calculateNextSpike", "DOMCacheGetOrSet", "toOrdinal", "SingularityUpgrade", "DynamicUpgrade", "data", "key", "_a", "_b", "_c", "_d", "_e", "_f", "name", "description", "__spreadProps", "__spreadValues", "costNextLevel", "maxLevel", "color", "minReqColor", "minimumSingularity", "freeLevelInfo", "costMultiplier", "event", "purchased", "maxPurchasable", "GQBudget", "buy", "Prompt", "Alert", "cost", "updateSingularityPerks", "revealStuff", "cap", "overclockPerks", "perk", "actualFreeLevels", "linearLevels", "polynomialLevels", "exponent", "cache", "singularityData", "n", "singularityPerks", "instance", "n", "levels", "format", "player", "overfluxBonus", "i", "counter", "singCount", "divisor", "amt", "updateSingularityPerks", "singularityCount", "strH", "toOrdinal", "strD", "str", "getAvailablePerksDescription", "DOMCacheGetOrSet", "getLastUpgradeInfo", "perk", "perksText", "availablePerks", "nextUpgrades", "singularityCountForNextPerk", "upgradeInfo", "p1", "p2", "availablePerk", "formatPerkDescription", "singularityCountForNextPerkUpgrade", "a", "b", "perkData", "singTolerance", "getFastForwardTotalMultiplier", "isNew", "levelInfo", "fastForward", "getGoldenQuarkCost", "costReduction", "perkDivisor", "buyGoldenQuarks", "goldenQuarkCost", "maxBuy", "buyAmount", "Alert", "buyPrompt", "Prompt", "cost", "calculateEffectiveSingularities", "effectiveSingularities", "calculateNextSpike", "singularityPenaltyThreshold", "penaltyDebuff", "sing", "calculateSingularityDebuff", "debuff", "constitutiveSingularityCount", "extraMult", "getResearchCost", "index", "buyAmount", "linGrowth", "Globals", "player", "calculateSummationNonLinear", "calculateSingularityDebuff", "updateAutoResearch", "auto", "autoResearchEnabled", "isResearchMaxed", "DOMCacheGetOrSet", "isResearchUnlocked", "idx", "doc", "updateClassList", "buyResearch", "hover", "_a", "_b", "_c", "_d", "metaData", "canBuy", "researchDescriptions", "revealStuff", "updateChallengeDisplay", "calculateRuneLevels", "calculateAnts", "maxRoombaResearchIndex", "p", "base", "c11", "c12", "c13", "c14", "cumuSum", "sum", "value", "indices", "chievos", "i", "y", "instance", "z", "format", "updateResearchBG", "j", "k", "calculateHypercubeBlessings", "keys", "player", "key", "obj", "idx", "power", "mult", "Globals", "toggleTheme", "initial", "themeNumber", "change", "_a", "themeButton", "DOMCacheGetOrSet", "body", "toggleAnnotation", "setting", "notationButton", "current", "instance", "player", "settingAnnotation", "userAnnotation", "maxAnnotations", "i", "IconSets", "IconSetsRegex", "toggleIconSet", "changeTo", "img", "imgErrorHandler", "evt", "whichImg", "iconSetName", "fallbackSetNum", "fallbackSetName", "maxCorruptionLevel", "max", "player", "corruptionDisplay", "index", "DOMCacheGetOrSet", "Globals", "currentExponent", "protoExponent", "bonusLevel", "bonusText", "corruptEffectValues", "iconExtensions", "text", "instance", "IconSets", "format", "corruptionStatsUpdate", "i", "a", "b", "corruptionButtonsAdd", "rows", "row", "p", "span", "btn", "toggleCorruptionLevel", "corruptionLoadoutTableCreate", "table", "getElementById", "j", "cell", "corruptionLoadoutGetExport", "importCorruptionsPrompt", "corruptionLoadoutSaveLoad", "corruptionLoadoutTableUpdate", "updateRow", "save", "loadout", "applyCorruptions", "corruptions", "newCorruptions", "corr", "value", "input", "Prompt", "Alert", "corruptionLoadoutGetNewName", "regex", "renamePrompt", "updateCorruptionLoadoutNames", "cells", "str", "e", "corruptionCleanseConfirm", "corrupt", "revealCorruptions", "c11Unlocks", "c12Unlocks", "c13Unlocks", "c14Unlocks", "corrChallengeMinimum", "calculatePlatonicBlessings", "platonicArray", "player", "DRThreshold", "i", "power", "mult", "effectiveAmount", "Globals", "getBonus", "e", "t", "quarkHandler", "maxTime", "player", "baseQuarkPerHour", "quarkResearches", "el", "quarkPerHour", "capacity", "quarkGain", "cubeMult", "calculateCubeQuarkMultiplier", "_a", "_QuarkHandler", "bonus", "quarks", "amount", "nonPatreon", "calculateQuarkMultiplier", "useBonus", "DOMCacheGetOrSet", "fetched", "b", "Alert", "val", "format", "QuarkHandler", "blessings", "x", "platonicBlessings", "Cube", "type", "v", "thisInPlayer", "player", "amount", "Prompt", "instance", "format", "Alert", "isPercentage", "cubesToOpen", "base", "mult", "cubes", "multiplier", "quarkHandler", "quarks", "h", "WowCubes", "value", "max", "toSpend", "achievementaward", "quarkMult", "gainQuarks", "actualQuarksGain", "toSpendModulo", "toSpendDiv20", "keys", "key", "CalcECC", "i", "num", "calculateCubeBlessings", "WowTesseracts", "calculateTesseractBlessings", "extraCubeBlessings", "WowHypercubes", "calculateHypercubeBlessings", "extraTesseractBlessings", "WowPlatonicCubes", "toSpendDiv40000", "RNGesus", "gainValues", "commonDrops", "calculatePlatonicBlessings", "extraHypercubes", "break_infinity_esm_default", "version", "lastUpdated", "prod", "import_lz_string", "shopData", "getShopCosts", "input", "priceIncreaseMult", "player", "shopDescriptions", "rofl", "DOMCacheGetOrSet", "lol", "refundable", "instance", "format", "calculateTimeAcceleration", "calculatePowderConversion", "friendlyShopName", "buyShopUpgrades", "shopItem", "Alert", "isShopUpgradeUnlocked", "buyData", "maxBuyAmount", "buyAmount", "buyCost", "calculateSummationNonLinear", "singular", "merch", "noRefunds", "maxPots", "buyInput", "Prompt", "buyAny", "other", "toSpend", "otherPot", "anyData", "revealStuff", "p", "Confirm", "useConsumable", "input", "automatic", "used", "spend", "player", "Confirm", "multiplier", "calculateTimeAcceleration", "resetShopUpgrades", "ignoreBoolean", "p", "singularityQuarks", "refunds", "shopItem", "shopData", "key", "item", "doNotRefund", "Alert", "getQuarkInvestment", "upgrade", "isShopUpgradeUnlocked", "import_fast_unique_numbers", "isCallNotification", "message", "isClearResponse", "message", "load", "url", "scheduledIntervalFunctions", "scheduledTimeoutFunctions", "unrespondedRequests", "worker", "data", "isCallNotification", "timerId", "timerType", "idOrFunc", "timerIdAndTimerType", "isClearResponse", "id", "message", "func", "delay", "workerTimers", "createLoadWorkerTimers", "load", "worker", "blob", "url", "worker", "loadWorkerTimers", "createLoadWorkerTimers", "load", "worker", "clearInterval", "timerId", "clearTimeout", "setInterval", "func", "delay", "setTimeout", "activeTimers", "setInterval", "fn", "delay", "timer", "clearInterval", "timerId", "setTimeout", "clearTimeout", "clearTimers", "id", "type", "antspecies", "calculateCrumbToCoinExp", "player", "calculateSigmoidExponential", "Globals", "antUpgradeTexts", "format", "break_infinity_esm_default", "calculateSigmoid", "repeatAnt", "antRepeat", "i", "clearInterval", "setInterval", "updateAntDescription", "el", "DOMCacheGetOrSet", "la", "ti", "me", "priceType", "tier", "x", "instance", "getAntCost", "originalCost", "buyTo", "index", "getAntUpgradeCost", "buyAntProducers", "pos", "sacrificeMult", "antSacrificePointsToMultiplier", "tag", "key", "buydefault", "smallestInc", "cashToBuy", "stepdown", "buyFrom", "thisCost", "calculateAntSacrificeELO", "achRequirements", "j", "achievementaward", "buyAntUpgrade", "auto", "calculateAnts", "calculateRuneLevels", "antUpgradeDescription", "revealStuff", "al", "content1", "content2", "bonuslevel", "c11", "points", "multiplier", "showSacrifice", "sacRewards", "calculateAntSacrificeRewards", "sacrificeAnts", "p", "Confirm", "antSacrificePointsBefore", "historyEntry", "resetAnts", "updateTalismanInventory", "linGrowth", "buyResearch", "Synergism", "autoBuyAnts", "canAffordUpgrade", "m", "ach", "cost", "_ach", "_cost", "res", "hepteractTypeList", "HepteractCraft", "data", "hepteractName", "player", "Alert", "instance", "multiplier", "max", "craftAmount", "heptCap", "craftCostMulti", "calculateSingularityDebuff", "format", "hepteractLimit", "itemLimits", "item", "smallestItemLimit", "amountToCraft", "craftingPrompt", "Prompt", "Confirm", "Cube", "currentBalance", "currHeptCapNoMulti", "_a", "_b", "_c", "_d", "_e", "amount", "newValue", "HTML", "DOMCacheGetOrSet", "heptAmount", "hepteractLimitCraft", "amountCrafted", "craft", "hepteractEffectiveValues", "createHepteract", "hepteractEffective", "effectiveValue", "exponentBoost", "hepteractDescriptions", "type", "unlockedText", "effectText", "currentEffectText", "balanceText", "costText", "bonusCapacityText", "currentEffectRecord", "oneCost", "record", "__spreadValues", "hepteractToOverfluxOrbDescription", "calculateCubeQuarkMultiplier", "tradeHepteractToOverfluxOrb", "buyMax", "maxBuy", "toUse", "hepteractInput", "buyAmount", "beforeEffect", "afterEffect", "powderGain", "calculatePowderConversion", "powderText", "toggleAutoBuyOrbs", "firstLoad", "overfluxPowderDescription", "powderEffectText", "calculateCubeMultFromPowder", "calculateQuarkMultFromPowder", "break_infinity_esm_default", "overfluxPowderWarp", "auto", "forcedDailyReset", "getAutoHepteractCrafts", "autoHepteracts", "craftName", "craftKey", "ChronosHepteract", "HyperrealismHepteract", "QuarkHepteract", "ChallengeHepteract", "AbyssHepteract", "AcceleratorHepteract", "AcceleratorBoostHepteract", "MultiplierHepteract", "associated", "displayStats", "btn", "e", "statsEl", "DOMCacheGetOrSet", "loadStatisticsUpdate", "activeStats", "i", "loadStatisticsMiscellaneous", "loadStatisticsAccelerator", "loadStatisticsMultiplier", "loadStatisticsOfferingMultipliers", "loadQuarkMultiplier", "loadGlobalSpeedMultiplier", "loadPowderMultiplier", "loadStatisticsAscensionSpeedMultipliers", "loadStatisticsGoldenQuarkMultipliers", "loadAddCodeModifiersAndEffects", "loadStatisticsAmbrosiaLuck", "loadStatisticsAmbrosiaGeneration", "loadStatisticsCubeMultipliers", "format", "player", "Globals", "formatTimeShort", "synergismStage", "calculateSigmoidExponential", "calculateQuarkMultiplier", "calculateEventBuff", "calculateEffectiveIALevel", "hepteractEffective", "calculateQuarkMultFromPowder", "calculateSingularityQuarkMilestoneMultiplier", "calculateTotalOcteractQuarkBonus", "calculateAmbrosiaQuarkMult", "globalSpeedStats", "calculateTimeAcceleration", "preDRlist", "drList", "postDRlist", "arr0", "calculateAllCubeMultiplier", "map0", "statGCMi", "arr", "calculateCubeMultiplier", "map", "statCMi", "arr2", "calculateTesseractMultiplier", "map2", "statTeMi", "arr3", "calculateHypercubeMultiplier", "map3", "statHyMi", "arr4", "calculatePlatonicMultiplier", "map4", "statPlMi", "arr5", "calculateHepteractMultiplier", "map5", "statHeMi", "octMults", "calculateOcteractMultiplier", "ascensionSpeedDesc", "map6", "statOcMi", "calculateOfferings", "statOffi", "calculatePowderConversion", "calculateAscensionSpeedMultiplier", "map7", "statASMi", "calculateGoldenQuarkMultiplier", "statGQMi", "intervalStats", "addCodeInterval", "capacityStats", "addCodeMaxUses", "availableCount", "addCodeAvailableUses", "timeToNext", "addCodeTimeToNextUse", "intervalMap", "statAddIntervalI", "capacityMap", "prefix", "addEffectStats", "addCodeBonuses", "qbr", "statALuckMi", "totalVal", "statAGenMi", "c15RewardUpdate", "exponentRequirements", "keys", "obj", "calculateSigmoid", "updateDisplayC15Rewards", "break_infinity_esm_default", "challenge15ScoreMultiplier", "isNum", "values", "keepExponent", "skip", "gameStages", "skipTier", "stages", "stage", "visualUpdateBuildings", "Globals", "upper", "names", "totalProductionDivisor", "break_infinity_esm_default", "i", "place", "ith", "DOMCacheGetOrSet", "instance", "format", "player", "percentage", "CalcECC", "warning", "perSecNames", "p", "ascendBuildingI", "visualUpdateUpgrades", "visualUpdateAchievements", "visualUpdateRunes", "talismans", "runeLevel", "maxLevel", "calculateMaxRunes", "calculateRuneExpToLevel", "displayRuneInformation", "calculateRecycle", "calculateRecycleMultiplier", "allRuneExpAdditiveMultiplier", "sumContents", "maxTalismanLevel", "calculateMaxTalismanLevel", "blessingMultiplierArray", "t", "levelsPurchasable", "calculateSummationLinear", "spiritMultiplierArray", "subtract", "calculateCorruptionPoints", "visualUpdateChallenges", "visualUpdateResearch", "calculateAutomaticObtainium", "calculateTimeAcceleration", "visualUpdateAnts", "calculateSigmoidExponential", "mode", "timer", "formatTimeShort", "showSacrifice", "visualUpdateCubes", "cubeMult", "tesseractMult", "hypercubeMult", "platonicMult", "toNextQuark", "name", "accuracy", "cubeArray", "augmentAccuracy", "aestheticMultiplier", "tesseractArray", "hypercubeArray", "platonicArray", "DRThreshold", "hepteractTypeList", "type", "UpdateHeptGridValues", "calculateCubeQuarkMultiplier", "text", "bar", "textEl", "barEl", "balance", "cap", "barWidth", "barColor", "visualUpdateCorruptions", "metaData", "CalcCorruptionStuff", "ascCount", "calcAscensionCount", "visualUpdateSettings", "version", "quarkData", "quarkHandler", "onExportQuarks", "maxExportQuarks", "goldenQuarkMultiplier", "loadStatisticsUpdate", "visualUpdateSingularity", "keys", "val", "key", "singItem", "el", "octItem", "shopMouseover", "value", "visualUpdateOcteracts", "perSecond", "octeractGainPerSecond", "cTOCB", "calculateTotalOcteractCubeBonus", "cTOQB", "calculateTotalOcteractQuarkBonus", "cTOOB", "calculateTotalOcteractOfferingBonus", "cTOOOB", "calculateTotalOcteractObtainiumBonus", "visualUpdateAmbrosia", "luck", "guaranteed", "chance", "requiredTime", "calculateRequiredBlueberryTime", "cubePercent", "calculateAmbrosiaCubeMult", "quarkPercent", "calculateAmbrosiaQuarkMult", "availableBlueberries", "visualUpdateShop", "shopItem", "shopData", "maxBuyablePotions", "getShopCosts", "isShopUpgradeUnlocked", "buyMaxAmount", "buyData", "calculateSummationNonLinear", "getGoldenQuarkCost", "visualUpdateEvent", "addTimers", "input", "time", "timeMultiplier", "calculateTimeAcceleration", "player", "ascensionSpeedMulti", "calculateAscensionAcceleration", "maxQuarkTimer", "quarkHandler", "amountOfGiveaways", "perSecond", "octeractGainPerSecond", "levels", "frac", "actualLevel", "sing", "i", "quarkFraction", "calculateGoldenQuarkGain", "visualUpdateOcteracts", "toggleOfferingOn", "toggleObtainiumOn", "timerThreshold", "effectiveOfferingThreshold", "effectiveObtainiumThreshold", "amountOfPotions", "useConsumable", "Globals", "ambrosiaLuck", "timeToAmbrosia", "calculateRequiredBlueberryTime", "RNG", "ambrosiaMult", "luckMult", "timeMult", "Notification", "format", "visualUpdateAmbrosia", "automaticTools", "calculateObtainium", "obtainiumGain", "calculateAutomaticObtainium", "visualUpdateResearch", "ratio", "buyAllBlessings", "buyAllTalismanResources", "maxi", "notMaxed", "checkMaxRunes", "baseAmount", "unlockedRune", "calculateMaxRunes", "redeemShards", "rune", "sacrificeAnts", "import_localforage", "events", "nowEvent", "getEvent", "eventCheck", "player", "now", "getTimePinnedToLoadDate", "start", "end", "e", "event", "nowFullYear", "happyHolidays", "DOMCacheGetOrSet", "eventBuffs", "updateIsEventCheck", "Globals", "buffs", "i", "eventBuffType", "eventBuff", "calculateEventSourceBuff", "format", "eventBuffName", "instance", "revealStuff", "buff", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "clickSmith", "Alert", "import_clipboard", "subtabInfo", "args", "setActiveSettingScreen", "player", "toggleBuildingScreen", "toggleRuneScreen", "toggleCubeSubTab", "toggleCorruptionLoadoutsStats", "toggleSingularityScreen", "tabsInfo", "Globals", "Tab", "element", "assert", "tabs", "tab", "index", "keyboardTabChange", "step", "changeSubtab", "limitRange", "changeSubTab", "changeTab", "tabOrName", "_a", "revealStuff", "hideStuff", "subTabList", "i", "id", "button", "DOMCacheGetOrSet", "btns", "page", "_b", "subTabs", "btn", "subTabsInMainTab", "name", "format24", "format12", "hour", "getRealTime", "type", "use12", "datePartsArr", "x", "p", "dateParts", "period", "weekday", "updateSaveString", "input", "value", "player", "blankSave", "cleanString", "DOMCacheGetOrSet", "getVer", "_a", "_b", "version", "saveFilename", "t", "_", "b", "format", "synergismStage", "exportSynergism", "quarkData", "quarkHandler", "bonusGQMultiplier", "saveSynergy", "toClipboard", "getElementById", "save", "localforage", "saveString", "Alert", "instance", "err", "textArea", "clipboard", "ClipboardJS", "cleanup", "a", "reloadDeleteGame", "resetGame", "result", "Prompt", "hold", "changeTab", "changeSubTab", "importSynergism", "btoa", "reset", "d", "LZString", "f", "saveCheck", "item", "reloadShit", "promocodesInfo", "textElement", "textMessage", "availableUses", "addCodeAvailableUses", "addCodeTimeToNextUse", "timeCodeAvailableUses", "timeCodeTimeToNextUse", "timeCodeRewardMultiplier", "promocodesPrompt", "promocodes", "amount", "el", "Globals", "getEvent", "addTimers", "achievementaward", "quarks", "rewardMessage", "rewards", "dailyCodeReward", "quarkMultiplier", "actualQuarkAward", "upgradeDistribution", "rolls", "keys", "key", "freeLevels", "i", "num", "dailyCodeFormatFreeLevelMessage", "maxUses", "addCodeMaxUses", "timeToNextUse", "timeInterval", "addCodeInterval", "attemptsUsed", "toUse", "addEffects", "addCodeBonuses", "realAttemptsUsed", "actualQuarks", "first", "second", "v", "remaining", "timeToNext", "ascensionTimer", "ascensionTimerText", "gqTimer", "gqTimerText", "octeractTime", "octeractTimeText", "freeLevelsText", "shopData", "options", "promptText", "addPrompt", "Confirm", "bet", "won", "rewardMult", "random", "start", "diff", "reward", "blueberryTime", "winText", "ambrosiaText", "perSecond", "octeractGainPerSecond", "Synergism", "addCodeSingularityPerkBonus", "levels", "count", "calc5uses", "arr", "sumContents", "productContents", "timeToFirst", "remainder", "perkRewardDivisor", "commonQuarkMult", "sampledMult", "minMult", "maxMult", "quarkBase", "ascMult", "upgradeKey", "freeLevelAmount", "upgradeNiceName", "singularityData", "goldenQuarks", "ascended", "singularity", "handleLastModified", "lastModified", "localStorageFirstPlayed", "lastModifiedDate", "cubeAutomationIndices", "researchAutomationIndices", "cubeBaseCost", "cubeMaxLevel", "getCubeCost", "i", "buyMax", "linGrowth", "cubic", "maxLevel", "getCubeMax", "amountToBuy", "cubeUpgrade", "player", "singularityMultiplier", "calculateSingularityDebuff", "metaData", "calculateCubicSumData", "calculateSummationNonLinear", "baseValue", "cubeUpgradeDesc", "a", "DOMCacheGetOrSet", "b", "c", "d", "instance", "format", "updateCubeUpgradeBG", "maxCubeLevel", "awardAutosCookieUpgrade", "calculateCubeBlessings", "Globals", "updateResearchBG", "buyCubeUpgrades", "auto", "j", "upgradeupdate", "revealStuff", "autoBuyCubeUpgrades", "cheapet", "update", "value", "platonicUpgradeDesc", "platUpgradeBaseCosts", "checkPlatonicUpgrade", "index", "auto", "checksum", "resources", "resourceNames", "checks", "priceMultiplier", "player", "calculateSingularityDebuff", "i", "createPlatonicDescription", "maxLevelAppend", "resourceCheck", "DOMCacheGetOrSet", "format", "updatePlatonicUpgradeBG", "a", "maxLevel", "buyPlatonicUpgrades", "Synergism", "Alert", "revealStuff", "autoBuyPlatonicUpgrades", "repeatreset", "resetrepeat", "input", "clearInterval", "setInterval", "resetdetails", "DOMCacheGetOrSet", "transcensionChallenge", "player", "reincarnationChallenge", "offering", "calculateOfferings", "offeringImage", "getElementById", "offeringText", "currencyImage1", "resetObtainiumImage", "resetObtainiumText", "resetInfo", "resetCurrencyGain", "format", "Globals", "IconSets", "challengeRequirement", "goal", "goaldesc", "CalcCorruptionStuff", "calculateGoldenQuarkGain", "updateAutoReset", "i", "value", "updateTesseractAutoBuyAmount", "updateAutoCubesOpens", "resetAddHistoryEntry", "from", "offeringsGiven", "isChallenge", "historyEntry", "Synergism", "corruptionMetaData", "reset", "fast", "resetofferings", "resetUpgrades", "break_infinity_esm_default", "ascensionAchievementCheck", "opscheck", "calculateCubeBlessings", "linGrowth", "buyResearch", "calculateRuneLevels", "calculateAnts", "metaData", "toggleAutoChallengeModeText", "resetResearches", "resetAnts", "resetTalismans", "j", "calcAscensionCount", "k", "updateClassList", "calculateAntSacrificeELO", "calculateTalismanEffects", "calculateObtainium", "updateTalismanInventory", "updateTalismanAppearance", "calculateTesseractBlessings", "calculateHypercubeBlessings", "maxLevel", "maxCorruptionLevel", "curr", "index", "corrChallengeMinimum", "corruptionStatsUpdate", "updateSingularityMilestoneAwards", "autoHepteractCrafts", "getAutoHepteractCrafts", "numberOfAutoCraftsAndOrbs", "heptAutoSpend", "craft", "orbsAmount", "calculatePowderConversion", "ownedBuildings", "percentageToSpend", "budget", "buyToBuildings", "calculateTessBuildingsInBudget", "buyFrom", "buyTo", "buyTesseractBuilding", "autoBuyPlatonicUpgrades", "autoBuyCubeUpgrades", "WowCubes", "revealStuff", "updateChallengeDisplay", "updateAll", "updateSingularityAchievements", "achievementaward", "singularityReset", "calculateSingularityDebuff", "shopItemPerk_5", "key", "shopItemPerk_20", "shopData", "awardAutosCookieUpgrade", "updatePlatonicUpgradeBG", "challengeachievementcheck", "updateCubeUpgradeBG", "updateResearchBG", "updateSingularityGlobalPerks", "perk_5", "perk_20", "perk_51", "shopItemPerk_51", "singularity", "setSingNumber", "_a", "_b", "_c", "_d", "_e", "Alert", "cubeArray", "tesseractArray", "hypercubeArray", "platonicArray", "sumContents", "incrementSingCount", "getFastForwardTotalMultiplier", "resetShopUpgrades", "hold", "blankSave", "changeTab", "changeSubTab", "QuarkHandler", "craftName", "craftKey", "saveCode42", "saveCode43", "saveCode44", "saveCode45", "saveCode46", "importSynergism", "saveSynergy", "m", "x", "upgradeupdate", "ant12", "destroy", "item", "defaultHotkeys", "buyAccelerator", "boostAccelerator", "toggleChallengeSweep", "player", "exitTranscendAndPrestigeChallenge", "buyMultiplier", "confirmReply", "resetCheck", "sacrificeAnts", "keyboardTabChange", "toggleCorruptionLevel", "promocodes", "useConsumable", "hotkeysEnabled", "hotkeys", "toggleAutoChallengeRun", "eventHotkeys", "event", "_a", "synergismHotkeys", "keyPrefix", "key", "DOMCacheGetOrSet", "hotkeyName", "Globals", "makeSlot", "descr", "div", "span", "e", "_b", "_c", "target", "oldKey", "name", "newKey", "Prompt", "toSet", "Alert", "old", "keys", "enableHotkeys", "p", "disableHotkeys", "changeHotkeys", "hotkey", "child", "resetHotkeys", "settext", "Confirm", "calculateTotalCoinOwned", "Globals", "player", "calculateTotalAcceleratorBoost", "b", "CalcECC", "calculateSigmoidExponential", "hepteractEffective", "calculateAcceleratorMultiplier", "calculateRecycleMultiplier", "sumContents", "calculateRuneExpGiven", "runeIndex", "all", "runeLevel", "returnFactors", "recycleMultiplier", "allRuneExpAdditiveMultiplier", "allRuneExpMultiplier", "productContents", "droughtEffect", "runeExpMultiplier", "fact", "lookupTableGen", "lookupTableRuneExp", "calculateRuneExpToLevel", "_", "i", "multiplier", "calculateMaxRunes", "max", "increaseAll", "increaseMaxLevel", "calculateEffectiveIALevel", "calculateOfferings", "input", "calcMult", "statistic", "q", "break_infinity_esm_default", "arr", "calculateEventBuff", "calculateSingularityDebuff", "calculateTotalOcteractOfferingBonus", "persecond", "calculateObtainium", "calculateCorruptionPoints", "calculateTotalOcteractObtainiumBonus", "calculateAutomaticObtainium", "calculateTalismanEffects", "positiveBonus", "negativeBonus", "talismansEffects", "runesTalisman", "talismanEffect", "levels", "runeNumber", "calculateRuneLevels", "_a", "antUpgrade8", "calculateRuneBonuses", "calculateAnts", "bonusLevels", "c11", "c11bonus", "calculateAntSacrificeELO", "antUpgradeSum", "calculateAntSacrificeMultipliers", "calculateAntSacrificeRewards", "maxCap", "rewardsMult", "timeWarp", "time", "Prompt", "instance", "timeUse", "Alert", "DOMCacheGetOrSet", "calculateOffline", "forceTime", "disableHotkeys", "maximumTimer", "updatedTime", "timeAdd", "timeTick", "resourceTicks", "format", "toggleTalismanBuy", "updateTalismanInventory", "offlineDialog", "calculateTimeAcceleration", "obtainiumGain", "resetAdd", "timerAdd", "quarkHandler", "addTimers", "runOffline", "setInterval", "resourceGain", "automaticTools", "updateAll", "clearInterval", "ascCount", "reset", "saveSynergy", "el", "exitOffline", "enableHotkeys", "calculateSigmoid", "constant", "factor", "divisor", "coefficient", "calculateCubeBlessings", "cubeArray", "powerBonus", "power", "mult", "calculateTotalOcteractCubeBonus", "bonus", "calculateTotalOcteractQuarkBonus", "calculateAllCubeMultiplier", "calculateCubeMultFromPowder", "calculateAmbrosiaCubeMult", "extraMult", "calculateCubeMultiplier", "score", "calculateAscensionScore", "calculateTesseractMultiplier", "corrSum", "calculateHypercubeMultiplier", "calculatePlatonicMultiplier", "calculateHepteractMultiplier", "getOcteractValueMultipliers", "corruptionLevelSum", "derpsmithCornucopiaBonus", "octeractGainPerSecond", "currentScore", "baseMultiplier", "valueMultipliers", "ascensionSpeed", "calculateAscensionAcceleration", "oneMindModifier", "calculateOcteractMultiplier", "ascensionSpeedMulti", "preCorruptionArr", "corruptionArr", "corruptableTimeMult", "softcapRatio", "plat2x2Ratio", "postCorruptionArr", "timeMult", "achievementaward", "calculateLimitedAscensionsDebuff", "exponent", "calculateAscensionSpeedMultiplier", "calculateSingularityQuarkMilestoneMultiplier", "singThresholds", "sing", "calculateQuarkMultiplier", "calculateQuarkMultFromPowder", "calculateAmbrosiaQuarkMult", "calculateGoldenQuarkMultiplier", "computeMultiplier", "base", "perkMultiplier", "getFastForwardTotalMultiplier", "calculateGoldenQuarkGain", "basePoints", "bonusLevel", "calculateSummationLinear", "baseLevel", "baseCost", "resourceAvailable", "differenceCap", "subtractCost", "buyToLevel", "realCost", "calculateSummationNonLinear", "diffPerLevel", "buyAmount", "c", "alreadySpent", "v", "totalCost", "calculateSummationCubic", "n", "solveQuadratic", "a", "positive", "determinant", "numeratorPos", "numeratorNeg", "calculateCubicSumData", "initialLevel", "amountToSpend", "maxLevel", "totalToSpend", "determinantRoot", "solution", "levelToBuy", "computeAscensionScoreBonusMultiplier", "baseScore", "corruptionMultiplier", "effectiveScore", "challengeScoreArrays1", "challengeScoreArrays2", "challengeScoreArrays3", "challengeScoreArrays4", "bonusVal", "bonusMultiplier", "CalcCorruptionStuff", "cubeBank", "challengeModifier", "scores", "cubeGain", "bonusCubeExponent", "tesseractGain", "hypercubeGain", "platonicGain", "hepteractGain", "calcAscensionCount", "calculatePowderConversion", "calculateCubeQuarkMultiplier", "calculateSingularityAmbrosiaLuckMilestoneBonus", "singThresholds1", "singThresholds2", "calculateAmbrosiaGenerationShopUpgrade", "multipliers", "calculateAmbrosiaLuckShopUpgrade", "vals", "calculateRequiredBlueberryTime", "val", "baseVal", "timeThresholds", "threshold", "calculateSingularityMilestoneBlueberries", "dailyResetCheck", "now", "getTimePinnedToLoadDate", "day", "h", "m", "s", "forcedDailyReset", "rewards", "buff", "calculateEventSourceBuff", "counter", "singCounts", "revealStuff", "example", "i", "player", "example2", "example3", "example4", "example5", "example6", "example7", "example8", "example9", "example10", "example11", "example12", "example13", "example14", "example15", "example16", "example17", "example18", "example19", "example20", "example21", "example22", "example23", "example24", "example25", "example26", "example27", "example28", "example29", "example30", "example31", "ex", "example32", "singularityHTMLs", "HTML", "count", "eventHTMLs", "Globals", "visualUpdateShop", "hepts", "DOMCacheGetOrSet", "cookies1", "cookies2", "cookies3", "cookies4", "goldenQuarks3", "z", "autoResearchEnabled", "octeractUnlocks", "item", "singChallengeUnlocks", "automationUnlocks", "key", "el", "revealCorruptions", "hideStuff", "tab", "instance", "format", "totalachievementpoints", "displayRuneInformation", "updateSingularityPenalties", "updateSingularityPerks", "visualTab", "visualUpdateBuildings", "visualUpdateUpgrades", "visualUpdateAchievements", "visualUpdateRunes", "visualUpdateChallenges", "visualUpdateResearch", "visualUpdateSettings", "visualUpdateAnts", "visualUpdateCubes", "visualUpdateCorruptions", "visualUpdateSingularity", "visualUpdateEvent", "htmlInserts", "playerRequirements", "domRequirements", "text", "dom", "updateAscensionStats", "buttoncolorchange", "a", "b", "c", "d", "e", "f", "g", "h", "j", "k", "break_infinity_esm_default", "arr", "toggle", "mythos", "costParticles", "ascendBuilding", "costAnts", "updateChallengeDisplay", "updateChallengeLevel", "maxChallenges", "getMaxChallenges", "updateAchievementBG", "fixDisplay1", "fixDisplay2", "achievementaward", "showCorruptionStatsLoadouts", "cubes", "tess", "hyper", "platonic", "hepteract", "CalcCorruptionStuff", "addedAsterisk", "fillers", "formatTimeShort", "calculateTimeAcceleration", "calculateAscensionAcceleration", "tabColors", "changeTabColor", "color", "ConfirmCB", "cb", "conf", "confWrap", "popup", "overlay", "ok", "cancel", "listener", "target", "targetEl", "kbListener", "AlertCB", "alertWrap", "PromptCB", "closeNotification", "closedNotification", "NotificationCB", "time", "notification", "textNode", "x", "closed", "close", "Alert", "res", "Prompt", "Confirm", "Notification", "toggleSettings", "toggle", "_a", "toggleId", "player", "format", "text", "instance", "finishedString", "toggleChallenges", "i", "auto", "reset", "resetrepeat", "resetCheck", "updateChallengeDisplay", "getChallengeConditions", "toggleAutoChallengeRun", "achievementaward", "toggleBuyAmount", "quantity", "type", "a", "DOMCacheGetOrSet", "toggleShops", "keys", "key", "color", "toggleautoreset", "toggleautobuytesseract", "toggleauto", "toggles", "tesseractAutos", "j", "toggleResearchBuy", "toggleAutoResearch", "el", "autoResearchEnabled", "Globals", "toggleAutoResearchMode", "toggleAutoSacrifice", "index", "calculateRuneLevels", "toggleAutoBuyFragment", "toggleBuildingScreen", "input", "screen", "toggleRuneScreen", "screens", "b", "toggleautofortify", "toggleautoenhance", "toggleSaveOff", "et", "toggleSingularityScreen", "visualUpdateOcteracts", "visualUpdateAmbrosia", "setActiveSettingScreen", "subtab", "clickedButton", "subtabEl", "credits", "artists", "contributor", "div", "img", "e", "err", "f", "user", "p", "toggleShopConfirmation", "toggleBuyMaxShop", "event", "toggleHideShop", "toggleAntMaxBuy", "toggleAntAutoSacrifice", "mode", "toggleMaxBuyCube", "autoCubeUpgradesToggle", "autoPlatonicUpgradesToggle", "toggleCubeSubTab", "numSubTabs", "subTabsInMainTab", "cubeTab", "visualUpdateCubes", "updateAutoChallenge", "t", "u", "v", "toggleAutoChallengesIgnore", "toggleAutoChallengeModeText", "toggleAutoAscend", "toggleautoopensCubes", "oc", "oci", "updateRuneBlessingBuyAmount", "toggleAutoTesseracts", "toggleCorruptionLevel", "value", "current", "maxCorruption", "maxCorruptionLevel", "corruptionDisplay", "corruptionLoadoutTableUpdate", "toggleCorruptionLoadoutsStats", "stats", "showCorruptionStatsLoadouts", "toggleAscStatPerSecond", "id", "toggleHepteractAutoPercentage", "amount", "Prompt", "Alert", "isPercentage", "rawPercentage", "confirmReply", "confirm", "getMaxChallenges", "i", "maxChallenge", "player", "challengeDisplay", "changefocus", "quarksMultiplier", "Globals", "DOMCacheGetOrSet", "maxChallenges", "instance", "format", "CalcECC", "descriptor", "a", "b", "c", "e", "f", "g", "h", "j", "k", "l", "m", "n", "completions", "special", "goal", "challengeRequirement", "current1", "current2", "current3", "break_infinity_esm_default", "scoreArray1", "scoreArray2", "scoreArray3", "scoreArray4", "scoreDisplay", "el", "autoAscensionChallengeSweepUnlock", "ella", "getChallengeConditions", "calculateRuneLevels", "toggleRetryChallenges", "highestChallengeRewards", "chalNum", "highestValue", "multiplier", "autoResearchEnabled", "calculateChallengeRequirementMultiplier", "type", "requirementMultiplier", "effective", "challenge", "completion", "base", "c10Reduction", "runChallengeSweep", "dt", "action", "toggleAutoChallengeModeText", "challengeType", "nowChallenge", "nextChallenge", "getNextChallenge", "resetCheck", "toggleChallenges", "startChallenge", "maxSkip", "min", "max", "index", "challenge15ScoreMultiplier", "arr", "hepteractEffective", "productContents", "formatDecimalSource", "numOrStr", "format", "break_infinity_esm_default", "conditionalFormatPerSecond", "data", "player", "historyGains", "historyGainsOrder", "historyKinds", "resetHistoryTableMapping", "resetHistoryCorruptionImages", "resetHistoryCorruptionTitles", "extractStringExponent", "str", "m", "resetHistoryAdd", "category", "Globals", "resetHistoryPushNewRow", "Synergism", "row", "resetHistoryRenderRow", "tbody", "DOMCacheGetOrSet", "loadCorruptionsButtons", "btn", "e", "clickHandlerForLoadCorruptionsButton", "_category", "colsUsed", "rowContentHtml", "kindMeta", "localDate", "IconSets", "formatTimeShort", "gains", "dataIntersection", "listable", "_a", "gainInfo", "formatter", "extra", "oldMulti", "antSacrificePointsToMultiplier", "newMulti", "diff", "corruptions", "resetHistoryFormatCorruptions", "acc", "value", "resetHistoryRenderFullTable", "categoryToRender", "targetTable", "i", "applyCorruptions", "Notification", "instance", "resetHistoryRenderAllTables", "key", "resetHistoryTogglePerSecond", "button", "score", "loadout", "corrs", "corruptionIdx", "calculatetax", "exp", "compareB", "break_infinity_esm_default", "compareC", "Globals", "player", "c13effcompletions", "sumContents", "exponent", "CalcECC", "a2", "achievementaward", "import_clipboard", "generateExportSummary", "titleText", "time", "ver", "version", "subCategoryDivisor", "firstPlayed", "player", "resources", "format", "cubeArray", "tesseractArray", "hypercubeArray", "platonicArray", "cubeSum", "sumContents", "tesseractSum", "hypercubeSum", "platonicSum", "octeract", "octeractGainPerSecond", "calculateTotalOcteractCubeBonus", "calculateTotalOcteractQuarkBonus", "singularity", "calculateGoldenQuarkGain", "formatS", "calculateEffectiveSingularities", "ascension", "calculateAscensionAcceleration", "getMaxChallenges", "reincarnation", "calculateTimeAcceleration", "transcension", "prestige", "instance", "totalachievementpoints", "calculateMaxRunes", "Globals", "shopUpgradeStats", "shopUpgrade", "totalShopUpgradeCount", "totalShopUpgradeUnlocked", "totalShopUpgradeMax", "totalQuarksSpent", "key", "shopUpg", "upgradeText", "shopData", "isShopUpgradeUnlocked", "friendlyShopName", "singularityUpgradeStats", "singUpgrade", "totalSingUpgradeCount", "totalSingInfiniteLevel", "totalSingUpgradeUnlocked", "totalSingUpgradeMax", "totalGoldenQuarksSpent", "singUpg", "unicodeSymbol", "octeractUpgradeStats", "octUpgrade", "totalOctUpgradeCount", "totalOctUpgradeMax", "totalOcteractsSpent", "octUpg", "returnString", "err", "textArea", "clipboard", "ClipboardJS", "cleanup", "Alert", "a", "saveFilename", "BlueberryUpgrade", "DynamicUpgrade", "data", "key", "_a", "_b", "_c", "_d", "name", "instance", "description", "__spreadProps", "__spreadValues", "event", "purchased", "maxPurchasable", "ambrosiaBudget", "player", "Alert", "buy", "Prompt", "format", "cost", "costNextLevel", "maxLevel", "isMaxLevel", "color", "freeLevelInfo", "isAffordable", "affordableInfo", "preReqText", "prereq", "val", "k", "met", "DOMCacheGetOrSet", "visualUpdateAmbrosia", "cache", "blueberryUpgradeData", "level", "baseCost", "n", "cubeAmount", "quarkAmount", "resetBlueberryTree", "upgrade", "generateEventHandlers", "ordinals", "warp", "dayReset", "timeWarp", "forcedDailyReset", "consumables", "DOMCacheGetOrSet", "exitOffline", "toggleAscStatPerSecond", "resetrepeat", "resetButton", "player", "resetCheck", "boostAccelerator", "changeTab", "buildingTypes", "index", "changeSubTab", "buildingTypesAlternate", "buildingOrds", "buildingOrdsToNum", "index2", "toggleBuyAmount", "buyAccelerator", "buyMultiplier", "buildingTypesAlternate2", "buildingTypesAlternate3", "buyProducer", "crystalupgradedescriptions", "buyCrystalUpgrades", "buyParticleBuilding", "buyTesseractBuilding", "toggleAutoTesseracts", "constantUpgradeDescriptions", "buyConstantUpgrades", "b", "toggleSettings", "toggleautoreset", "updateAutoReset", "toggleautobuytesseract", "updateTesseractAutoBuyAmount", "updateAutoCubesOpens", "toggleautoopensCubes", "upgradedescriptions", "clickUpgrades", "categoryUpgrades", "toggleShops", "achievementpointvalues", "achievementdescriptions", "toggleAutoSacrifice", "displayRuneInformation", "redeemShards", "talismanBuyPercents", "talismanBuyPercentsOrd", "toggleTalismanBuy", "toggleAutoBuyFragment", "toggleautoenhance", "toggleautofortify", "talismanItemNames", "updateTalismanCostDisplay", "buyTalismanResources", "buyAllTalismanResources", "showTalismanEffect", "showTalismanPrices", "buyTalismanLevels", "showEnhanceTalismanPrices", "buyTalismanEnhance", "showRespecInformation", "respecTalismanConfirm", "Globals", "respecTalismanCancel", "changeTalismanModifier", "buyRuneBonusLevels", "updateRuneBlessingBuyAmount", "buyAllBlessings", "challengeDisplay", "toggleChallenges", "toggleRetryChallenges", "toggleAutoChallengesIgnore", "toggleAutoChallengeRun", "updateAutoChallenge", "buyResearch", "researchDescriptions", "toggleResearchBuy", "toggleAutoResearch", "toggleAutoResearchMode", "antProducerCostVals", "updateAntDescription", "antRepeat", "buyAntProducers", "antUpgradeCostVals", "antUpgradeDescription", "buyAntUpgrade", "sacrificeAnts", "toggleAntMaxBuy", "toggleAntAutoSacrifice", "cubeUpgradeDesc", "buyCubeUpgrades", "toggleMaxBuyCube", "autoCubeUpgradesToggle", "toggleSaveOff", "platonicUpgrades", "createPlatonicDescription", "buyPlatonicUpgrades", "autoPlatonicUpgradesToggle", "hepteractDescriptions", "hepteractToOverfluxOrbDescription", "tradeHepteractToOverfluxOrb", "toggleAutoBuyOrbs", "overfluxPowderDescription", "overfluxPowderWarp", "toggleHepteractAutoPercentage", "corruptionDisplay", "corruptionCleanseConfirm", "toggleCorruptionLevel", "toggleAutoAscend", "settingSubTabs", "subtab", "t", "s", "e", "displayStats", "generateExportSummary", "exportSynergism", "updateSaveString", "saveSynergy", "resetGame", "reloadDeleteGame", "promocodesPrompt", "promocodes", "promocodesInfo", "resetHistoryTogglePerSecond", "resetHotkeys", "toggleAnnotation", "toggleIconSet", "resetShopUpgrades", "toggleShopConfirmation", "event", "toggleBuyMaxShop", "toggleHideShop", "shopDescriptions", "buyShopUpgrades", "useConsumable", "shopKeys", "key", "shopData", "buyGoldenQuarks", "singularityUpgrades", "shopMouseover", "octeractUpgrades", "singularityChallenges", "blueberryUpgrades", "resetBlueberryTree", "changeTabColor", "clickSmith", "element", "file", "save", "reader", "res", "handleLastModified", "importSynergism", "i", "toggleTheme", "Confirm", "instance", "imgErrorHandler", "OcteractUpgrade", "DynamicUpgrade", "data", "key", "_a", "_b", "name", "instance", "description", "__spreadProps", "__spreadValues", "event", "purchased", "maxPurchasable", "OCTBudget", "player", "buy", "Prompt", "format", "Alert", "cost", "costNextLevel", "maxLevel", "isMaxLevel", "color", "freeLevelInfo", "isAffordable", "affordTime", "octPerSecond", "octeractGainPerSecond", "formatTimeShort", "affordableInfo", "DOMCacheGetOrSet", "actualFreeLevels", "octeractData", "level", "baseCost", "n", "fasterMult", "fasterMult2", "useLevel", "SingularityChallenge", "data", "key", "_a", "_b", "_c", "name", "instance", "description", "rewardDescription", "updateVal", "player", "Alert", "Confirm", "setSingularity", "holdSingTimer", "holdQuarkExport", "holdGoldenQuarkExport", "goldenQuarkGain", "calculateGoldenQuarkGain", "currentGQ", "singularity", "success", "extra", "highestSingularityHold", "toOrdinal", "color", "enabled", "DOMCacheGetOrSet", "singularityChallengeData", "baseReq", "completions", "n", "AdditionCache", "val", "oldVal", "newVal", "init", "arr", "MultiplicationCache", "productContents", "AmbrosiaLuckCache", "key", "calculateSingularityAmbrosiaLuckMilestoneBonus", "player", "calculateAmbrosiaLuckShopUpgrade", "Globals", "calculateEventBuff", "AmbrosiaGenerationCache", "calculateAmbrosiaGenerationShopUpgrade", "BlueberryInventoryCache", "calculateSingularityMilestoneBlueberries", "cacheReinitialize", "checkVariablesOnLoad", "data", "_a", "_b", "_c", "_d", "_e", "_f", "player", "__spreadValues", "blankSave", "key", "k", "padArray", "WowCubes", "WowTesseracts", "WowHypercubes", "break_infinity_esm_default", "corruptionLoadouts", "diff", "i", "calculateMaxRunes", "SingularityUpgrade", "singularityData", "OcteractUpgrade", "octeractData", "SingularityChallenge", "singularityChallengeData", "BlueberryUpgrade", "blueberryUpgradeData", "buyResearch", "calculateTimeAcceleration", "WowPlatonicCubes", "ascCount", "resetCheck", "c15RewardUpdate", "shop", "tomes", "ChronosHepteract", "HyperrealismHepteract", "QuarkHepteract", "ChallengeHepteract", "AbyssHepteract", "AcceleratorHepteract", "AcceleratorBoostHepteract", "MultiplierHepteract", "item", "createHepteract", "Alert", "instance", "keys", "getQuarkInvestment", "shopKeys", "shopUpgrade", "shopData", "updatedData", "level", "goldenQuarksInvested", "toggleBuy", "freeLevels", "cost", "octeractsInvested", "ambrosiaInvested", "blueberriesInvested", "comps", "completions", "highestSingularityCompleted", "enabled", "reduce", "AmbrosiaLuckCache", "AmbrosiaGenerationCache", "BlueberryInventoryCache", "cacheReinitialize", "oldest", "import_localforage", "ColorText_default", "value", "supported", "languageCache", "init", "_a", "resources", "language", "file", "instance", "ColorText_default", "prod", "buildLanguageTab", "translateHTML", "buildLanguageButton", "langID", "name", "flag", "mainButton", "Confirm", "flagSpan", "nameSpan", "langSelector", "DOMCacheGetOrSet", "langButton", "i18n", "element", "key", "value", "player", "QuarkHandler", "break_infinity_esm_default", "_", "i", "WowCubes", "WowTesseracts", "WowHypercubes", "WowPlatonicCubes", "ChronosHepteract", "HyperrealismHepteract", "QuarkHepteract", "ChallengeHepteract", "AbyssHepteract", "AcceleratorHepteract", "AcceleratorBoostHepteract", "MultiplierHepteract", "version", "SingularityUpgrade", "singularityData", "OcteractUpgrade", "octeractData", "SingularityChallenge", "singularityChallengeData", "BlueberryUpgrade", "blueberryUpgradeData", "AmbrosiaLuckCache", "AmbrosiaGenerationCache", "BlueberryInventoryCache", "blankSave", "saveCheck", "saveSynergy", "button", "p", "key", "value", "save", "btoa", "saveBlob", "localforage", "Alert", "instance", "el", "DOMCacheGetOrSet", "setTimeout", "toAdapt", "data", "loadSynergy", "_a", "_b", "_c", "saveString", "prod", "Globals", "__spreadValues", "blankGlobals", "oldCodesUsed", "size", "oldPromoKeys", "k", "num", "stringProp", "prop", "isDecimal", "codes", "arr", "refundThese", "refundReward", "checkVariablesOnLoad", "keys", "historyKey", "updatedLast", "lastUpdated", "maxLevel", "maxCorruptionLevel", "curr", "index", "corrChallengeMinimum", "ascendBuildingI", "cleanString", "j", "upgradeupdate", "updateResearchBG", "updateCubeUpgradeBG", "platUpg", "updatePlatonicUpgradeBG", "q", "d", "e", "c", "curBuyAmount", "b", "testArray", "sortWithIndices", "toggleShops", "getChallengeConditions", "updateChallengeDisplay", "revealStuff", "toggleauto", "challengeDisplay", "corruptionStatsUpdate", "corrs", "corruptionLoadoutTableUpdate", "showCorruptionStatsLoadouts", "updateCorruptionLoadoutNames", "format", "c15RewardUpdate", "calculatePlatonicBlessings", "calculateHypercubeBlessings", "calculateTesseractBlessings", "calculateCubeBlessings", "updateTalismanAppearance", "id", "toggleAscStatPerSecond", "omit", "inputd", "inpute", "updateAutoChallenge", "updateAutoReset", "updateTesseractAutoBuyAmount", "updateAutoCubesOpens", "updateRuneBlessingBuyAmount", "autoCubeUpgradesToggle", "autoPlatonicUpgradesToggle", "toggleAntMaxBuy", "toggleAntAutoSacrifice", "toggleAutoAscend", "autoResearchEnabled", "toggleAutoBuyOrbs", "toggleTalismanBuy", "updateTalismanInventory", "calculateObtainium", "calculateAnts", "calculateRuneLevels", "resetHistoryRenderAllTables", "updateSingularityAchievements", "updateSingularityGlobalPerks", "updateAchievementBG", "resetrepeat", "h", "m", "s", "FormatList", "supportsFormatToParts", "IntlFormatter", "part", "group", "dec", "locOpts", "padEvery", "str", "places", "step", "newStr", "strParts", "input", "accuracy", "long", "truncate", "fractional", "power", "mantissa", "powerOver", "mantissaLook", "powerLook", "standard", "standardString", "powerDigits", "powerFront", "powerLookF", "powerLodge", "formatTimeShort", "seconds", "msMaxSeconds", "updateAllTick", "a", "CalcECC", "calculateAcceleratorMultiplier", "hepteractEffective", "updateAllMultiplier", "calculateSigmoidExponential", "c7", "multipliers", "crystalExponent", "calculateCorruptionPoints", "calculateCrumbToCoinExp", "first6CoinUp", "lol", "ascendBuildingDR", "resourceGain", "dt", "calculateTotalCoinOwned", "calculateTotalAcceleratorBoost", "calculatetax", "addcoin", "resetCurrency", "pm", "createAnts", "fiveMinusI", "ascensionAchievementCheck", "challengeachievementcheck", "updateChallengeLevel", "chal", "reinchal", "ascendchal", "challengeRequirement", "resetCheck", "updateAntMultipliers", "antSacrificePointsToMultiplier", "sumContents", "prestigePow", "transcendPow", "manual", "leaving", "resetConfirmation", "resetachievementcheck", "reset", "maxCompletions", "getMaxChallenges", "reqCheck", "comp", "maxInc", "counter", "highestChallengeRewards", "toggleAutoChallengeModeText", "conf", "Confirm", "c15SM", "challenge15ScoreMultiplier", "autoAscensionChallengeSweepUnlock", "thankSing", "confirmed", "nextSingularityNumber", "getFastForwardTotalMultiplier", "calculateGoldenQuarkGain", "singularity", "updateAll", "achievementaward", "autoUpgrades", "buyMax", "buyAccelerator", "buyMultiplier", "boostAccelerator", "buyCrystalUpgrades", "buyParticleBuilding", "getConstUpgradeMetadata", "buyConstantUpgrades", "ownedBuildings", "budget", "buyToBuildings", "calculateTessBuildingsInBudget", "buyFrom", "buyTo", "buyTesseractBuilding", "talismansUnlocked", "upgradedTalisman", "buyTalismanEnhance", "maxTalismanLevel", "calculateMaxTalismanLevel", "buyTalismanLevels", "autoBuyAnts", "ascension", "nextChallenge", "getNextChallenge", "metaData", "reductionValue", "getReductionValue", "resources", "res", "resource", "ord", "getCost", "particleOriginalCost", "fastUpdates", "htmlInserts", "slowUpdates", "buttoncolorchange", "buildingAchievementCheck", "constantIntervals", "setInterval", "exitOffline", "lastUpdate", "createTimer", "tick", "filterStrength", "deltaMean", "loadingDate", "loadingBasePerfTick", "getTimePinnedToLoadDate", "delta", "dtEffective", "tack", "timeMult", "calculateTimeAcceleration", "addTimers", "automaticTools", "maxRoombaResearchIndex", "maxCount", "linGrowth", "buyResearch", "runChallengeSweep", "time", "calculateOfferings", "synergismHotkeys", "event", "type", "Notification", "corruptionLoadoutSaveLoad", "categoryUpgrades", "redeemShards", "buyRuneBonusLevels", "toggleChallenges", "showExitOffline", "reloadShit", "clearTimers", "preloadDeleteGame", "disableHotkeys", "saveObject", "LZString", "blob", "calculateOffline", "toggleTheme", "settingAnnotation", "toggleIconSet", "changeTab", "changeSubTab", "dailyResetCheck", "changeTabColor", "eventCheck", "clearTimeout", "cacheReinitialize", "persistent", "saveType", "init", "ver", "addZero", "n", "textUpdate", "generateEventHandlers", "corruptionButtonsAdd", "corruptionLoadoutTableCreate"]
}
