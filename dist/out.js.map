{
  "version": 3,
  "sources": ["../node_modules/pad-end/index.js", "../node_modules/lz-string/libs/lz-string.js", "../node_modules/eventemitter3/index.js", "../node_modules/break_infinity.js/dist/break_infinity.esm.js", "../src/Synergism.ts", "../src/Utility.ts", "../src/Variables.ts", "../src/Events.ts", "../src/Achievements.ts", "../src/Talismans.ts", "../src/Runes.ts", "../src/Tesseracts.ts", "../src/Buy.ts", "../src/Generators.ts", "../src/Automation.ts", "../src/Upgrades.ts", "../src/Research.ts", "../src/Hypercubes.ts", "../src/Corruptions.ts", "../src/Reset.ts", "../src/PlatonicCubes.ts", "../src/Quark.ts", "../src/CubeExperimental.ts", "../src/Hepteracts.ts", "../src/Ants.ts", "../src/Config.ts", "../src/Shop.ts", "../src/UpdateVisuals.ts", "../src/Helper.ts", "../src/Calculate.ts", "../src/UpdateHTML.ts", "../src/Statistics.ts", "../src/Toggles.ts", "../src/Challenges.ts", "../src/History.ts", "../src/Tax.ts", "../src/Cubes.ts", "../src/Platonic.ts", "../src/ImportExport.ts", "../src/EventListeners.ts", "../src/CheckVariables.ts", "../src/Hotkeys.ts"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = function (string, maxLength, fillString) {\n\n  if (string == null || maxLength == null) {\n    return string;\n  }\n\n  var result    = String(string);\n  var targetLen = typeof maxLength === 'number'\n    ? maxLength\n    : parseInt(maxLength, 10);\n\n  if (isNaN(targetLen) || !isFinite(targetLen)) {\n    return result;\n  }\n\n\n  var length = result.length;\n  if (length >= targetLen) {\n    return result;\n  }\n\n\n  var filled = fillString == null ? '' : String(fillString);\n  if (filled === '') {\n    filled = ' ';\n  }\n\n\n  var fillLen = targetLen - length;\n\n  while (filled.length < fillLen) {\n    filled += filled;\n  }\n\n  var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;\n\n  return result + truncated;\n};\n", "// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "import padEnd from 'pad-end';\n\n// consider adding them together pointless, just return the larger one\n\nvar MAX_SIGNIFICANT_DIGITS = 17; // Highest value you can safely put here is Number.MAX_SAFE_INTEGER-MAX_SIGNIFICANT_DIGITS\n\nvar EXP_LIMIT = 9e15; // The largest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MAX = 308; // The smallest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MIN = -324; // Tolerance which is used for Number conversion to compensate floating-point error.\n\nvar ROUND_TOLERANCE = 1e-10;\n\nvar powerOf10 = function () {\n  // We need this lookup table because Math.pow(10, exponent)\n  // when exponent's absolute value is large is slightly inaccurate.\n  // You can fix it with the power of math... or just make a lookup table.\n  // Faster AND simpler\n  var powersOf10 = [];\n\n  for (var i = NUMBER_EXP_MIN + 1; i <= NUMBER_EXP_MAX; i++) {\n    powersOf10.push(Number(\"1e\" + i));\n  }\n\n  var indexOf0InPowersOf10 = 323;\n  return function (power) {\n    return powersOf10[power + indexOf0InPowersOf10];\n  };\n}();\n\nvar D = function D(value) {\n  return value instanceof Decimal ? value : new Decimal(value);\n};\n\nvar ME = function ME(mantissa, exponent) {\n  return new Decimal().fromMantissaExponent(mantissa, exponent);\n};\n\nvar ME_NN = function ME_NN(mantissa, exponent) {\n  return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n};\n\nfunction affordGeometricSeries(resourcesAvailable, priceStart, priceRatio, currentOwned) {\n  var actualStart = priceStart.mul(priceRatio.pow(currentOwned));\n  return Decimal.floor(resourcesAvailable.div(actualStart).mul(priceRatio.sub(1)).add(1).log10() / priceRatio.log10());\n}\n\nfunction sumGeometricSeries(numItems, priceStart, priceRatio, currentOwned) {\n  return priceStart.mul(priceRatio.pow(currentOwned)).mul(Decimal.sub(1, priceRatio.pow(numItems))).div(Decimal.sub(1, priceRatio));\n}\n\nfunction affordArithmeticSeries(resourcesAvailable, priceStart, priceAdd, currentOwned) {\n  // n = (-(a-d/2) + sqrt((a-d/2)^2+2dS))/d\n  // where a is actualStart, d is priceAdd and S is resourcesAvailable\n  // then floor it and you're done!\n  var actualStart = priceStart.add(currentOwned.mul(priceAdd));\n  var b = actualStart.sub(priceAdd.div(2));\n  var b2 = b.pow(2);\n  return b.neg().add(b2.add(priceAdd.mul(resourcesAvailable).mul(2)).sqrt()).div(priceAdd).floor();\n}\n\nfunction sumArithmeticSeries(numItems, priceStart, priceAdd, currentOwned) {\n  var actualStart = priceStart.add(currentOwned.mul(priceAdd)); // (n/2)*(2*a+(n-1)*d)\n\n  return numItems.div(2).mul(actualStart.mul(2).plus(numItems.sub(1).mul(priceAdd)));\n}\n\nfunction efficiencyOfPurchase(cost, currentRpS, deltaRpS) {\n  return cost.div(currentRpS).add(cost.div(deltaRpS));\n}\n/**\n * The Decimal's value is simply mantissa * 10^exponent.\n */\n\n\nvar Decimal =\n/** @class */\nfunction () {\n  function Decimal(value) {\n    /**\n     * A number (double) with absolute value between [1, 10) OR exactly 0.\n     * If mantissa is ever 10 or greater, it should be normalized\n     * (divide by 10 and add 1 to exponent until it is less than 10,\n     * or multiply by 10 and subtract 1 from exponent until it is 1 or greater).\n     * Infinity/-Infinity/NaN will cause bad things to happen.\n     */\n    this.mantissa = NaN;\n    /**\n     * A number (integer) between -EXP_LIMIT and EXP_LIMIT.\n     * Non-integral/out of bounds will cause bad things to happen.\n     */\n\n    this.exponent = NaN;\n\n    if (value === undefined) {\n      this.m = 0;\n      this.e = 0;\n    } else if (value instanceof Decimal) {\n      this.fromDecimal(value);\n    } else if (typeof value === \"number\") {\n      this.fromNumber(value);\n    } else {\n      this.fromString(value);\n    }\n  }\n\n  Object.defineProperty(Decimal.prototype, \"m\", {\n    get: function get() {\n      return this.mantissa;\n    },\n    set: function set(value) {\n      this.mantissa = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal.prototype, \"e\", {\n    get: function get() {\n      return this.exponent;\n    },\n    set: function set(value) {\n      this.exponent = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal.prototype, \"s\", {\n    get: function get() {\n      return this.sign();\n    },\n    set: function set(value) {\n      if (value === 0) {\n        this.e = 0;\n        this.m = 0;\n        return;\n      }\n\n      if (this.sgn() !== value) {\n        this.m = -this.m;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Decimal.fromMantissaExponent = function (mantissa, exponent) {\n    return new Decimal().fromMantissaExponent(mantissa, exponent);\n  };\n\n  Decimal.fromMantissaExponent_noNormalize = function (mantissa, exponent) {\n    return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n  };\n\n  Decimal.fromDecimal = function (value) {\n    return new Decimal().fromDecimal(value);\n  };\n\n  Decimal.fromNumber = function (value) {\n    return new Decimal().fromNumber(value);\n  };\n\n  Decimal.fromString = function (value) {\n    return new Decimal().fromString(value);\n  };\n\n  Decimal.fromValue = function (value) {\n    return new Decimal().fromValue(value);\n  };\n\n  Decimal.fromValue_noAlloc = function (value) {\n    return value instanceof Decimal ? value : new Decimal(value);\n  };\n\n  Decimal.abs = function (value) {\n    return D(value).abs();\n  };\n\n  Decimal.neg = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.negate = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.negated = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.sign = function (value) {\n    return D(value).sign();\n  };\n\n  Decimal.sgn = function (value) {\n    return D(value).sign();\n  };\n\n  Decimal.round = function (value) {\n    return D(value).round();\n  };\n\n  Decimal.floor = function (value) {\n    return D(value).floor();\n  };\n\n  Decimal.ceil = function (value) {\n    return D(value).ceil();\n  };\n\n  Decimal.trunc = function (value) {\n    return D(value).trunc();\n  };\n\n  Decimal.add = function (value, other) {\n    return D(value).add(other);\n  };\n\n  Decimal.plus = function (value, other) {\n    return D(value).add(other);\n  };\n\n  Decimal.sub = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.subtract = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.minus = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.mul = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.multiply = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.times = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.div = function (value, other) {\n    return D(value).div(other);\n  };\n\n  Decimal.divide = function (value, other) {\n    return D(value).div(other);\n  };\n\n  Decimal.recip = function (value) {\n    return D(value).recip();\n  };\n\n  Decimal.reciprocal = function (value) {\n    return D(value).recip();\n  };\n\n  Decimal.reciprocate = function (value) {\n    return D(value).reciprocate();\n  };\n\n  Decimal.cmp = function (value, other) {\n    return D(value).cmp(other);\n  };\n\n  Decimal.compare = function (value, other) {\n    return D(value).cmp(other);\n  };\n\n  Decimal.eq = function (value, other) {\n    return D(value).eq(other);\n  };\n\n  Decimal.equals = function (value, other) {\n    return D(value).eq(other);\n  };\n\n  Decimal.neq = function (value, other) {\n    return D(value).neq(other);\n  };\n\n  Decimal.notEquals = function (value, other) {\n    return D(value).notEquals(other);\n  };\n\n  Decimal.lt = function (value, other) {\n    return D(value).lt(other);\n  };\n\n  Decimal.lte = function (value, other) {\n    return D(value).lte(other);\n  };\n\n  Decimal.gt = function (value, other) {\n    return D(value).gt(other);\n  };\n\n  Decimal.gte = function (value, other) {\n    return D(value).gte(other);\n  };\n\n  Decimal.max = function (value, other) {\n    return D(value).max(other);\n  };\n\n  Decimal.min = function (value, other) {\n    return D(value).min(other);\n  };\n\n  Decimal.clamp = function (value, min, max) {\n    return D(value).clamp(min, max);\n  };\n\n  Decimal.clampMin = function (value, min) {\n    return D(value).clampMin(min);\n  };\n\n  Decimal.clampMax = function (value, max) {\n    return D(value).clampMax(max);\n  };\n\n  Decimal.cmp_tolerance = function (value, other, tolerance) {\n    return D(value).cmp_tolerance(other, tolerance);\n  };\n\n  Decimal.compare_tolerance = function (value, other, tolerance) {\n    return D(value).cmp_tolerance(other, tolerance);\n  };\n\n  Decimal.eq_tolerance = function (value, other, tolerance) {\n    return D(value).eq_tolerance(other, tolerance);\n  };\n\n  Decimal.equals_tolerance = function (value, other, tolerance) {\n    return D(value).eq_tolerance(other, tolerance);\n  };\n\n  Decimal.neq_tolerance = function (value, other, tolerance) {\n    return D(value).neq_tolerance(other, tolerance);\n  };\n\n  Decimal.notEquals_tolerance = function (value, other, tolerance) {\n    return D(value).notEquals_tolerance(other, tolerance);\n  };\n\n  Decimal.lt_tolerance = function (value, other, tolerance) {\n    return D(value).lt_tolerance(other, tolerance);\n  };\n\n  Decimal.lte_tolerance = function (value, other, tolerance) {\n    return D(value).lte_tolerance(other, tolerance);\n  };\n\n  Decimal.gt_tolerance = function (value, other, tolerance) {\n    return D(value).gt_tolerance(other, tolerance);\n  };\n\n  Decimal.gte_tolerance = function (value, other, tolerance) {\n    return D(value).gte_tolerance(other, tolerance);\n  };\n\n  Decimal.log10 = function (value) {\n    return D(value).log10();\n  };\n\n  Decimal.absLog10 = function (value) {\n    return D(value).absLog10();\n  };\n\n  Decimal.pLog10 = function (value) {\n    return D(value).pLog10();\n  };\n\n  Decimal.log = function (value, base) {\n    return D(value).log(base);\n  };\n\n  Decimal.log2 = function (value) {\n    return D(value).log2();\n  };\n\n  Decimal.ln = function (value) {\n    return D(value).ln();\n  };\n\n  Decimal.logarithm = function (value, base) {\n    return D(value).logarithm(base);\n  };\n\n  Decimal.pow10 = function (value) {\n    if (Number.isInteger(value)) {\n      return ME_NN(1, value);\n    }\n\n    return ME(Math.pow(10, value % 1), Math.trunc(value));\n  };\n\n  Decimal.pow = function (value, other) {\n    // Fast track: 10^integer\n    if (typeof value === \"number\" && value === 10 && typeof other === \"number\" && Number.isInteger(other)) {\n      return ME_NN(1, other);\n    }\n\n    return D(value).pow(other);\n  };\n\n  Decimal.exp = function (value) {\n    return D(value).exp();\n  };\n\n  Decimal.sqr = function (value) {\n    return D(value).sqr();\n  };\n\n  Decimal.sqrt = function (value) {\n    return D(value).sqrt();\n  };\n\n  Decimal.cube = function (value) {\n    return D(value).cube();\n  };\n\n  Decimal.cbrt = function (value) {\n    return D(value).cbrt();\n  };\n\n  Decimal.dp = function (value) {\n    return D(value).dp();\n  };\n\n  Decimal.decimalPlaces = function (value) {\n    return D(value).dp();\n  };\n  /**\n   * If you're willing to spend 'resourcesAvailable' and want to buy something\n   * with exponentially increasing cost each purchase (start at priceStart,\n   * multiply by priceRatio, already own currentOwned), how much of it can you buy?\n   * Adapted from Trimps source code.\n   */\n\n\n  Decimal.affordGeometricSeries = function (resourcesAvailable, priceStart, priceRatio, currentOwned) {\n    return affordGeometricSeries(D(resourcesAvailable), D(priceStart), D(priceRatio), currentOwned);\n  };\n  /**\n   * How much resource would it cost to buy (numItems) items if you already have currentOwned,\n   * the initial price is priceStart and it multiplies by priceRatio each purchase?\n   */\n\n\n  Decimal.sumGeometricSeries = function (numItems, priceStart, priceRatio, currentOwned) {\n    return sumGeometricSeries(numItems, D(priceStart), D(priceRatio), currentOwned);\n  };\n  /**\n   * If you're willing to spend 'resourcesAvailable' and want to buy something with additively\n   * increasing cost each purchase (start at priceStart, add by priceAdd, already own currentOwned),\n   * how much of it can you buy?\n   */\n\n\n  Decimal.affordArithmeticSeries = function (resourcesAvailable, priceStart, priceAdd, currentOwned) {\n    return affordArithmeticSeries(D(resourcesAvailable), D(priceStart), D(priceAdd), D(currentOwned));\n  };\n  /**\n   * How much resource would it cost to buy (numItems) items if you already have currentOwned,\n   * the initial price is priceStart and it adds priceAdd each purchase?\n   * Adapted from http://www.mathwords.com/a/arithmetic_series.htm\n   */\n\n\n  Decimal.sumArithmeticSeries = function (numItems, priceStart, priceAdd, currentOwned) {\n    return sumArithmeticSeries(D(numItems), D(priceStart), D(priceAdd), D(currentOwned));\n  };\n  /**\n   * When comparing two purchases that cost (resource) and increase your resource/sec by (deltaRpS),\n   * the lowest efficiency score is the better one to purchase.\n   * From Frozen Cookies:\n   * http://cookieclicker.wikia.com/wiki/Frozen_Cookies_(JavaScript_Add-on)#Efficiency.3F_What.27s_that.3F\n   */\n\n\n  Decimal.efficiencyOfPurchase = function (cost, currentRpS, deltaRpS) {\n    return efficiencyOfPurchase(D(cost), D(currentRpS), D(deltaRpS));\n  };\n\n  Decimal.randomDecimalForTesting = function (absMaxExponent) {\n    // NOTE: This doesn't follow any kind of sane random distribution, so use this for testing purposes only.\n    // 5% of the time, have a mantissa of 0\n    if (Math.random() * 20 < 1) {\n      return ME_NN(0, 0);\n    }\n\n    var mantissa = Math.random() * 10; // 10% of the time, have a simple mantissa\n\n    if (Math.random() * 10 < 1) {\n      mantissa = Math.round(mantissa);\n    }\n\n    mantissa *= Math.sign(Math.random() * 2 - 1);\n    var exponent = Math.floor(Math.random() * absMaxExponent * 2) - absMaxExponent;\n    return ME(mantissa, exponent);\n    /*\n      Examples:\n            randomly test pow:\n            var a = Decimal.randomDecimalForTesting(1000);\n      var pow = Math.random()*20-10;\n      if (Math.random()*2 < 1) { pow = Math.round(pow); }\n      var result = Decimal.pow(a, pow);\n      [\"(\" + a.toString() + \")^\" + pow.toString(), result.toString()]\n            randomly test add:\n            var a = Decimal.randomDecimalForTesting(1000);\n      var b = Decimal.randomDecimalForTesting(17);\n      var c = a.mul(b);\n      var result = a.add(c);\n      [a.toString() + \"+\" + c.toString(), result.toString()]\n    */\n  };\n  /**\n   * When mantissa is very denormalized, use this to normalize much faster.\n   */\n\n\n  Decimal.prototype.normalize = function () {\n    if (this.m >= 1 && this.m < 10) {\n      return this;\n    } // TODO: I'm worried about mantissa being negative 0 here which is why I set it again, but it may never matter\n\n\n    if (this.m === 0) {\n      this.m = 0;\n      this.e = 0;\n      return this;\n    }\n\n    var tempExponent = Math.floor(Math.log10(Math.abs(this.m)));\n    this.m = tempExponent === NUMBER_EXP_MIN ? this.m * 10 / 1e-323 : this.m / powerOf10(tempExponent);\n    this.e += tempExponent;\n    return this;\n  };\n\n  Decimal.prototype.fromMantissaExponent = function (mantissa, exponent) {\n    // SAFETY: don't let in non-numbers\n    if (!isFinite(mantissa) || !isFinite(exponent)) {\n      mantissa = Number.NaN;\n      exponent = Number.NaN;\n      return this;\n    }\n\n    this.m = mantissa;\n    this.e = exponent; // Non-normalized mantissas can easily get here, so this is mandatory.\n\n    this.normalize();\n    return this;\n  };\n  /**\n   * Well, you know what you're doing!\n   */\n\n\n  Decimal.prototype.fromMantissaExponent_noNormalize = function (mantissa, exponent) {\n    this.m = mantissa;\n    this.e = exponent;\n    return this;\n  };\n\n  Decimal.prototype.fromDecimal = function (value) {\n    this.m = value.m;\n    this.e = value.e;\n    return this;\n  };\n\n  Decimal.prototype.fromNumber = function (value) {\n    // SAFETY: Handle Infinity and NaN in a somewhat meaningful way.\n    if (isNaN(value)) {\n      this.m = Number.NaN;\n      this.e = Number.NaN;\n    } else if (value === Number.POSITIVE_INFINITY) {\n      this.m = 1;\n      this.e = EXP_LIMIT;\n    } else if (value === Number.NEGATIVE_INFINITY) {\n      this.m = -1;\n      this.e = EXP_LIMIT;\n    } else if (value === 0) {\n      this.m = 0;\n      this.e = 0;\n    } else {\n      this.e = Math.floor(Math.log10(Math.abs(value))); // SAFETY: handle 5e-324, -5e-324 separately\n\n      this.m = this.e === NUMBER_EXP_MIN ? value * 10 / 1e-323 : value / powerOf10(this.e); // SAFETY: Prevent weirdness.\n\n      this.normalize();\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.fromString = function (value) {\n    if (value.indexOf(\"e\") !== -1) {\n      var parts = value.split(\"e\");\n      this.m = parseFloat(parts[0]);\n      this.e = parseFloat(parts[1]); // Non-normalized mantissas can easily get here, so this is mandatory.\n\n      this.normalize();\n    } else if (value === \"NaN\") {\n      this.m = Number.NaN;\n      this.e = Number.NaN;\n    } else {\n      this.fromNumber(parseFloat(value));\n\n      if (isNaN(this.m)) {\n        throw Error(\"[DecimalError] Invalid argument: \" + value);\n      }\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.fromValue = function (value) {\n    if (value instanceof Decimal) {\n      return this.fromDecimal(value);\n    }\n\n    if (typeof value === \"number\") {\n      return this.fromNumber(value);\n    }\n\n    if (typeof value === \"string\") {\n      return this.fromString(value);\n    }\n\n    this.m = 0;\n    this.e = 0;\n    return this;\n  };\n\n  Decimal.prototype.toNumber = function () {\n    // Problem: new Decimal(116).toNumber() returns 115.99999999999999.\n    // TODO: How to fix in general case? It's clear that if toNumber() is\n    //  VERY close to an integer, we want exactly the integer.\n    //  But it's not clear how to specifically write that.\n    //  So I'll just settle with 'exponent >= 0 and difference between rounded\n    //  and not rounded < 1e-9' as a quick fix.\n    // var result = this.m*Math.pow(10, this.e);\n    if (!isFinite(this.e)) {\n      return Number.NaN;\n    }\n\n    if (this.e > NUMBER_EXP_MAX) {\n      return this.m > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n    }\n\n    if (this.e < NUMBER_EXP_MIN) {\n      return 0;\n    } // SAFETY: again, handle 5e-324, -5e-324 separately\n\n\n    if (this.e === NUMBER_EXP_MIN) {\n      return this.m > 0 ? 5e-324 : -5e-324;\n    }\n\n    var result = this.m * powerOf10(this.e);\n\n    if (!isFinite(result) || this.e < 0) {\n      return result;\n    }\n\n    var resultRounded = Math.round(result);\n\n    if (Math.abs(resultRounded - result) < ROUND_TOLERANCE) {\n      return resultRounded;\n    }\n\n    return result;\n  };\n\n  Decimal.prototype.mantissaWithDecimalPlaces = function (places) {\n    // https://stackoverflow.com/a/37425022\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return Number.NaN;\n    }\n\n    if (this.m === 0) {\n      return 0;\n    }\n\n    var len = places + 1;\n    var numDigits = Math.ceil(Math.log10(Math.abs(this.m)));\n    var rounded = Math.round(this.m * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n    return parseFloat(rounded.toFixed(Math.max(len - numDigits, 0)));\n  };\n\n  Decimal.prototype.toString = function () {\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\";\n    }\n\n    if (this.e < 21 && this.e > -7) {\n      return this.toNumber().toString();\n    }\n\n    return this.m + \"e\" + (this.e >= 0 ? \"+\" : \"\") + this.e;\n  };\n\n  Decimal.prototype.toExponential = function (places) {\n    // https://stackoverflow.com/a/37425022\n    // TODO: Some unfixed cases:\n    //  new Decimal(\"1.2345e-999\").toExponential()\n    //  \"1.23450000000000015e-999\"\n    //  new Decimal(\"1e-999\").toExponential()\n    //  \"1.000000000000000000e-999\"\n    // TBH I'm tempted to just say it's a feature.\n    // If you're doing pretty formatting then why don't you know how many decimal places you want...?\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\" + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\") + \"e+0\";\n    } // two cases:\n    // 1) exponent is < 308 and > -324: use basic toFixed\n    // 2) everything else: we have to do it ourselves!\n\n\n    if (this.e > NUMBER_EXP_MIN && this.e < NUMBER_EXP_MAX) {\n      return this.toNumber().toExponential(places);\n    }\n\n    if (!isFinite(places)) {\n      places = MAX_SIGNIFICANT_DIGITS;\n    }\n\n    var len = places + 1;\n    var numDigits = Math.max(1, Math.ceil(Math.log10(Math.abs(this.m))));\n    var rounded = Math.round(this.m * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n    return rounded.toFixed(Math.max(len - numDigits, 0)) + \"e\" + (this.e >= 0 ? \"+\" : \"\") + this.e;\n  };\n\n  Decimal.prototype.toFixed = function (places) {\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\" + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\");\n    } // two cases:\n    // 1) exponent is 17 or greater: just print out mantissa with the appropriate number of zeroes after it\n    // 2) exponent is 16 or less: use basic toFixed\n\n\n    if (this.e >= MAX_SIGNIFICANT_DIGITS) {\n      return this.m.toString().replace(\".\", \"\").padEnd(this.e + 1, \"0\") + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\");\n    }\n\n    return this.toNumber().toFixed(places);\n  };\n\n  Decimal.prototype.toPrecision = function (places) {\n    if (this.e <= -7) {\n      return this.toExponential(places - 1);\n    }\n\n    if (places > this.e) {\n      return this.toFixed(places - this.e - 1);\n    }\n\n    return this.toExponential(places - 1);\n  };\n\n  Decimal.prototype.valueOf = function () {\n    return this.toString();\n  };\n\n  Decimal.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  Decimal.prototype.toStringWithDecimalPlaces = function (places) {\n    return this.toExponential(places);\n  };\n\n  Decimal.prototype.abs = function () {\n    return ME_NN(Math.abs(this.m), this.e);\n  };\n\n  Decimal.prototype.neg = function () {\n    return ME_NN(-this.m, this.e);\n  };\n\n  Decimal.prototype.negate = function () {\n    return this.neg();\n  };\n\n  Decimal.prototype.negated = function () {\n    return this.neg();\n  };\n\n  Decimal.prototype.sign = function () {\n    return Math.sign(this.m);\n  };\n\n  Decimal.prototype.sgn = function () {\n    return this.sign();\n  };\n\n  Decimal.prototype.round = function () {\n    if (this.e < -1) {\n      return new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.round(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.floor = function () {\n    if (this.e < -1) {\n      return Math.sign(this.m) >= 0 ? new Decimal(0) : new Decimal(-1);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.floor(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.ceil = function () {\n    if (this.e < -1) {\n      return Math.sign(this.m) > 0 ? new Decimal(1) : new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.ceil(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.trunc = function () {\n    if (this.e < 0) {\n      return new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.trunc(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.add = function (value) {\n    // figure out which is bigger, shrink the mantissa of the smaller\n    // by the difference in exponents, add mantissas, normalize and return\n    // TODO: Optimizations and simplification may be possible, see https://github.com/Patashu/break_infinity.js/issues/8\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal;\n    }\n\n    if (decimal.m === 0) {\n      return this;\n    }\n\n    var biggerDecimal;\n    var smallerDecimal;\n\n    if (this.e >= decimal.e) {\n      biggerDecimal = this;\n      smallerDecimal = decimal;\n    } else {\n      biggerDecimal = decimal;\n      smallerDecimal = this;\n    }\n\n    if (biggerDecimal.e - smallerDecimal.e > MAX_SIGNIFICANT_DIGITS) {\n      return biggerDecimal;\n    } // Have to do this because adding numbers that were once integers but scaled down is imprecise.\n    // Example: 299 + 18\n\n\n    return ME(Math.round(1e14 * biggerDecimal.m + 1e14 * smallerDecimal.m * powerOf10(smallerDecimal.e - biggerDecimal.e)), biggerDecimal.e - 14);\n  };\n\n  Decimal.prototype.plus = function (value) {\n    return this.add(value);\n  };\n\n  Decimal.prototype.sub = function (value) {\n    return this.add(D(value).neg());\n  };\n\n  Decimal.prototype.subtract = function (value) {\n    return this.sub(value);\n  };\n\n  Decimal.prototype.minus = function (value) {\n    return this.sub(value);\n  };\n\n  Decimal.prototype.mul = function (value) {\n    // This version avoids an extra conversion to Decimal, if possible. Since the\n    // mantissa is -10...10, any number short of MAX/10 can be safely multiplied in\n    if (typeof value === \"number\") {\n      if (value < 1e307 && value > -1e307) {\n        return ME(this.m * value, this.e);\n      } // If the value is larger than 1e307, we can divide that out of mantissa (since it's\n      // greater than 1, it won't underflow)\n\n\n      return ME(this.m * 1e-307 * value, this.e + 307);\n    }\n\n    var decimal = typeof value === \"string\" ? new Decimal(value) : value;\n    return ME(this.m * decimal.m, this.e + decimal.e);\n  };\n\n  Decimal.prototype.multiply = function (value) {\n    return this.mul(value);\n  };\n\n  Decimal.prototype.times = function (value) {\n    return this.mul(value);\n  };\n\n  Decimal.prototype.div = function (value) {\n    return this.mul(D(value).recip());\n  };\n\n  Decimal.prototype.divide = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.divideBy = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.dividedBy = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.recip = function () {\n    return ME(1 / this.m, -this.e);\n  };\n\n  Decimal.prototype.reciprocal = function () {\n    return this.recip();\n  };\n\n  Decimal.prototype.reciprocate = function () {\n    return this.recip();\n  };\n  /**\n   * -1 for less than value, 0 for equals value, 1 for greater than value\n   */\n\n\n  Decimal.prototype.cmp = function (value) {\n    var decimal = D(value); // TODO: sign(a-b) might be better? https://github.com/Patashu/break_infinity.js/issues/12\n\n    /*\n    from smallest to largest:\n          -3e100\n    -1e100\n    -3e99\n    -1e99\n    -3e0\n    -1e0\n    -3e-99\n    -1e-99\n    -3e-100\n    -1e-100\n    0\n    1e-100\n    3e-100\n    1e-99\n    3e-99\n    1e0\n    3e0\n    1e99\n    3e99\n    1e100\n    3e100\n          */\n\n    if (this.m === 0) {\n      if (decimal.m === 0) {\n        return 0;\n      }\n\n      if (decimal.m < 0) {\n        return 1;\n      }\n\n      if (decimal.m > 0) {\n        return -1;\n      }\n    }\n\n    if (decimal.m === 0) {\n      if (this.m < 0) {\n        return -1;\n      }\n\n      if (this.m > 0) {\n        return 1;\n      }\n    }\n\n    if (this.m > 0) {\n      if (decimal.m < 0) {\n        return 1;\n      }\n\n      if (this.e > decimal.e) {\n        return 1;\n      }\n\n      if (this.e < decimal.e) {\n        return -1;\n      }\n\n      if (this.m > decimal.m) {\n        return 1;\n      }\n\n      if (this.m < decimal.m) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    if (this.m < 0) {\n      if (decimal.m > 0) {\n        return -1;\n      }\n\n      if (this.e > decimal.e) {\n        return -1;\n      }\n\n      if (this.e < decimal.e) {\n        return 1;\n      }\n\n      if (this.m > decimal.m) {\n        return 1;\n      }\n\n      if (this.m < decimal.m) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    throw Error(\"Unreachable code\");\n  };\n\n  Decimal.prototype.compare = function (value) {\n    return this.cmp(value);\n  };\n\n  Decimal.prototype.eq = function (value) {\n    var decimal = D(value);\n    return this.e === decimal.e && this.m === decimal.m;\n  };\n\n  Decimal.prototype.equals = function (value) {\n    return this.eq(value);\n  };\n\n  Decimal.prototype.neq = function (value) {\n    return !this.eq(value);\n  };\n\n  Decimal.prototype.notEquals = function (value) {\n    return this.neq(value);\n  };\n\n  Decimal.prototype.lt = function (value) {\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal.m > 0;\n    }\n\n    if (decimal.m === 0) {\n      return this.m <= 0;\n    }\n\n    if (this.e === decimal.e) {\n      return this.m < decimal.m;\n    }\n\n    if (this.m > 0) {\n      return decimal.m > 0 && this.e < decimal.e;\n    }\n\n    return decimal.m > 0 || this.e > decimal.e;\n  };\n\n  Decimal.prototype.lte = function (value) {\n    return !this.gt(value);\n  };\n\n  Decimal.prototype.gt = function (value) {\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal.m < 0;\n    }\n\n    if (decimal.m === 0) {\n      return this.m > 0;\n    }\n\n    if (this.e === decimal.e) {\n      return this.m > decimal.m;\n    }\n\n    if (this.m > 0) {\n      return decimal.m < 0 || this.e > decimal.e;\n    }\n\n    return decimal.m < 0 && this.e < decimal.e;\n  };\n\n  Decimal.prototype.gte = function (value) {\n    return !this.lt(value);\n  };\n\n  Decimal.prototype.max = function (value) {\n    var decimal = D(value);\n    return this.lt(decimal) ? decimal : this;\n  };\n\n  Decimal.prototype.min = function (value) {\n    var decimal = D(value);\n    return this.gt(decimal) ? decimal : this;\n  };\n\n  Decimal.prototype.clamp = function (min, max) {\n    return this.max(min).min(max);\n  };\n\n  Decimal.prototype.clampMin = function (min) {\n    return this.max(min);\n  };\n\n  Decimal.prototype.clampMax = function (max) {\n    return this.min(max);\n  };\n\n  Decimal.prototype.cmp_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) ? 0 : this.cmp(decimal);\n  };\n\n  Decimal.prototype.compare_tolerance = function (value, tolerance) {\n    return this.cmp_tolerance(value, tolerance);\n  };\n  /**\n   * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\n   * For example, if you put in 1e-9, then any number closer to the\n   * larger number than (larger number)*1e-9 will be considered equal.\n   */\n\n\n  Decimal.prototype.eq_tolerance = function (value, tolerance) {\n    var decimal = D(value); // https://stackoverflow.com/a/33024979\n    // return abs(a-b) <= tolerance * max(abs(a), abs(b))\n\n    return Decimal.lte(this.sub(decimal).abs(), Decimal.max(this.abs(), decimal.abs()).mul(tolerance));\n  };\n\n  Decimal.prototype.equals_tolerance = function (value, tolerance) {\n    return this.eq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.neq_tolerance = function (value, tolerance) {\n    return !this.eq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.notEquals_tolerance = function (value, tolerance) {\n    return this.neq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.lt_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return !this.eq_tolerance(decimal, tolerance) && this.lt(decimal);\n  };\n\n  Decimal.prototype.lte_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) || this.lt(decimal);\n  };\n\n  Decimal.prototype.gt_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return !this.eq_tolerance(decimal, tolerance) && this.gt(decimal);\n  };\n\n  Decimal.prototype.gte_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) || this.gt(decimal);\n  };\n\n  Decimal.prototype.log10 = function () {\n    return this.e + Math.log10(this.m);\n  };\n\n  Decimal.prototype.absLog10 = function () {\n    return this.e + Math.log10(Math.abs(this.m));\n  };\n\n  Decimal.prototype.pLog10 = function () {\n    return this.m <= 0 || this.e < 0 ? 0 : this.log10();\n  };\n\n  Decimal.prototype.log = function (base) {\n    // UN-SAFETY: Most incremental game cases are log(number := 1 or greater, base := 2 or greater).\n    // We assume this to be true and thus only need to return a number, not a Decimal,\n    return Math.LN10 / Math.log(base) * this.log10();\n  };\n\n  Decimal.prototype.log2 = function () {\n    return 3.32192809488736234787 * this.log10();\n  };\n\n  Decimal.prototype.ln = function () {\n    return 2.30258509299404568402 * this.log10();\n  };\n\n  Decimal.prototype.logarithm = function (base) {\n    return this.log(base);\n  };\n\n  Decimal.prototype.pow = function (value) {\n    // UN-SAFETY: Accuracy not guaranteed beyond ~9~11 decimal places.\n    // TODO: Decimal.pow(new Decimal(0.5), 0); or Decimal.pow(new Decimal(1), -1);\n    //  makes an exponent of -0! Is a negative zero ever a problem?\n    var numberValue = value instanceof Decimal ? value.toNumber() : value; // TODO: Fast track seems about neutral for performance.\n    //  It might become faster if an integer pow is implemented,\n    //  or it might not be worth doing (see https://github.com/Patashu/break_infinity.js/issues/4 )\n    // Fast track: If (this.e*value) is an integer and mantissa^value\n    // fits in a Number, we can do a very fast method.\n\n    var temp = this.e * numberValue;\n    var newMantissa;\n\n    if (Number.isSafeInteger(temp)) {\n      newMantissa = Math.pow(this.m, numberValue);\n\n      if (isFinite(newMantissa) && newMantissa !== 0) {\n        return ME(newMantissa, temp);\n      }\n    } // Same speed and usually more accurate.\n\n\n    var newExponent = Math.trunc(temp);\n    var residue = temp - newExponent;\n    newMantissa = Math.pow(10, numberValue * Math.log10(this.m) + residue);\n\n    if (isFinite(newMantissa) && newMantissa !== 0) {\n      return ME(newMantissa, newExponent);\n    } // return Decimal.exp(value*this.ln());\n    // UN-SAFETY: This should return NaN when mantissa is negative and value is non-integer.\n\n\n    var result = Decimal.pow10(numberValue * this.absLog10()); // this is 2x faster and gives same values AFAIK\n\n    if (this.sign() === -1 && Math.abs(numberValue % 2) === 1) {\n      return result.neg();\n    }\n\n    return result;\n  };\n\n  Decimal.prototype.pow_base = function (value) {\n    return D(value).pow(this);\n  };\n\n  Decimal.prototype.factorial = function () {\n    // Using Stirling's Approximation.\n    // https://en.wikipedia.org/wiki/Stirling%27s_approximation#Versions_suitable_for_calculators\n    var n = this.toNumber() + 1;\n    return Decimal.pow(n / Math.E * Math.sqrt(n * Math.sinh(1 / n) + 1 / (810 * Math.pow(n, 6))), n).mul(Math.sqrt(2 * Math.PI / n));\n  };\n\n  Decimal.prototype.exp = function () {\n    var x = this.toNumber(); // Fast track: if -706 < this < 709, we can use regular exp.\n\n    if (-706 < x && x < 709) {\n      return Decimal.fromNumber(Math.exp(x));\n    }\n\n    return Decimal.pow(Math.E, x);\n  };\n\n  Decimal.prototype.sqr = function () {\n    return ME(Math.pow(this.m, 2), this.e * 2);\n  };\n\n  Decimal.prototype.sqrt = function () {\n    if (this.m < 0) {\n      return new Decimal(Number.NaN);\n    }\n\n    if (this.e % 2 !== 0) {\n      return ME(Math.sqrt(this.m) * 3.16227766016838, Math.floor(this.e / 2));\n    } // Mod of a negative number is negative, so != means '1 or -1'\n\n\n    return ME(Math.sqrt(this.m), Math.floor(this.e / 2));\n  };\n\n  Decimal.prototype.cube = function () {\n    return ME(Math.pow(this.m, 3), this.e * 3);\n  };\n\n  Decimal.prototype.cbrt = function () {\n    var sign = 1;\n    var mantissa = this.m;\n\n    if (mantissa < 0) {\n      sign = -1;\n      mantissa = -mantissa;\n    }\n\n    var newMantissa = sign * Math.pow(mantissa, 1 / 3);\n    var mod = this.e % 3;\n\n    if (mod === 1 || mod === -1) {\n      return ME(newMantissa * 2.1544346900318837, Math.floor(this.e / 3));\n    }\n\n    if (mod !== 0) {\n      return ME(newMantissa * 4.6415888336127789, Math.floor(this.e / 3));\n    } // mod != 0 at this point means 'mod == 2 || mod == -2'\n\n\n    return ME(newMantissa, Math.floor(this.e / 3));\n  }; // Some hyperbolic trig functions that happen to be easy\n\n\n  Decimal.prototype.sinh = function () {\n    return this.exp().sub(this.negate().exp()).div(2);\n  };\n\n  Decimal.prototype.cosh = function () {\n    return this.exp().add(this.negate().exp()).div(2);\n  };\n\n  Decimal.prototype.tanh = function () {\n    return this.sinh().div(this.cosh());\n  };\n\n  Decimal.prototype.asinh = function () {\n    return Decimal.ln(this.add(this.sqr().add(1).sqrt()));\n  };\n\n  Decimal.prototype.acosh = function () {\n    return Decimal.ln(this.add(this.sqr().sub(1).sqrt()));\n  };\n\n  Decimal.prototype.atanh = function () {\n    if (this.abs().gte(1)) {\n      return Number.NaN;\n    }\n\n    return Decimal.ln(this.add(1).div(new Decimal(1).sub(this))) / 2;\n  };\n  /**\n   * Joke function from Realm Grinder\n   */\n\n\n  Decimal.prototype.ascensionPenalty = function (ascensions) {\n    if (ascensions === 0) {\n      return this;\n    }\n\n    return this.pow(Math.pow(10, -ascensions));\n  };\n  /**\n   * Joke function from Cookie Clicker. It's 'egg'\n   */\n\n\n  Decimal.prototype.egg = function () {\n    return this.add(9);\n  };\n\n  Decimal.prototype.lessThanOrEqualTo = function (other) {\n    return this.cmp(other) < 1;\n  };\n\n  Decimal.prototype.lessThan = function (other) {\n    return this.cmp(other) < 0;\n  };\n\n  Decimal.prototype.greaterThanOrEqualTo = function (other) {\n    return this.cmp(other) > -1;\n  };\n\n  Decimal.prototype.greaterThan = function (other) {\n    return this.cmp(other) > 0;\n  };\n\n  Decimal.prototype.decimalPlaces = function () {\n    return this.dp();\n  };\n\n  Decimal.prototype.dp = function () {\n    if (!isFinite(this.mantissa)) {\n      return NaN;\n    }\n\n    if (this.exponent >= MAX_SIGNIFICANT_DIGITS) {\n      return 0;\n    }\n\n    var mantissa = this.mantissa;\n    var places = -this.exponent;\n    var e = 1;\n\n    while (Math.abs(Math.round(mantissa * e) / e - mantissa) > ROUND_TOLERANCE) {\n      e *= 10;\n      places++;\n    }\n\n    return places > 0 ? places : 0;\n  };\n\n  Object.defineProperty(Decimal, \"MAX_VALUE\", {\n    get: function get() {\n      return MAX_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"MIN_VALUE\", {\n    get: function get() {\n      return MIN_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"NUMBER_MAX_VALUE\", {\n    get: function get() {\n      return NUMBER_MAX_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"NUMBER_MIN_VALUE\", {\n    get: function get() {\n      return NUMBER_MIN_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Decimal;\n}();\nvar MAX_VALUE = ME_NN(1, EXP_LIMIT);\nvar MIN_VALUE = ME_NN(1, -EXP_LIMIT);\nvar NUMBER_MAX_VALUE = D(Number.MAX_VALUE);\nvar NUMBER_MIN_VALUE = D(Number.MIN_VALUE);\n\nexport default Decimal;\n", "import Decimal from 'break_infinity.js';\nimport LZString from 'lz-string';\n\nimport { isDecimal, getElementById, sortWithIndices, sumContents } from './Utility';\nimport { blankGlobals, Globals as G } from './Variables';\nimport { CalcECC, getChallengeConditions, challengeDisplay, highestChallengeRewards, challengeRequirement, runChallengeSweep, getMaxChallenges, challenge15ScoreMultiplier } from './Challenges';\n\nimport type { OneToFive, Player, ZeroToFour } from './types/Synergism';\nimport { upgradeupdate, getConstUpgradeMetadata, buyConstantUpgrades, ascendBuildingDR } from './Upgrades';\nimport { updateResearchBG, maxRoombaResearchIndex, buyResearch } from './Research';\nimport { updateChallengeDisplay, revealStuff, showCorruptionStatsLoadouts, CSSAscend, updateAchievementBG, updateChallengeLevel, buttoncolorchange, htmlInserts, hideStuff, changeTabColor, Confirm, Alert } from './UpdateHTML';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport { calculateCubeBlessings, calculateObtainium, calculateAnts, calculateRuneLevels, calculateOffline, calculateSigmoidExponential, calculateCorruptionPoints, calculateTotalCoinOwned, calculateTotalAcceleratorBoost, dailyResetCheck, calculateOfferings, calculateAcceleratorMultiplier, calculateTimeAcceleration, eventCheck } from './Calculate';\nimport { updateTalismanAppearance, toggleTalismanBuy, updateTalismanInventory, buyTalismanEnhance, buyTalismanLevels } from './Talismans';\nimport { toggleAscStatPerSecond, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleChallenges, toggleauto, toggleAutoChallengeModeText, toggleShops } from './Toggles';\nimport { c15RewardUpdate } from './Statistics';\nimport { resetHistoryRenderAllTables } from './History';\nimport { calculatePlatonicBlessings } from './PlatonicCubes';\nimport { antSacrificePointsToMultiplier, autoBuyAnts, calculateCrumbToCoinExp } from './Ants';\nimport { calculatetax } from './Tax';\nimport { ascensionAchievementCheck, challengeachievementcheck, achievementaward, resetachievementcheck, buildingAchievementCheck } from './Achievements';\nimport { reset } from './Reset';\nimport { buyMax, buyAccelerator, buyMultiplier, boostAccelerator, buyCrystalUpgrades, buyParticleBuilding, getReductionValue, getCost, buyRuneBonusLevels, buyTesseractBuilding, TesseractBuildings, calculateTessBuildingsInBudget } from './Buy';\nimport { autoUpgrades } from './Automation';\nimport { redeemShards } from './Runes';\nimport { updateCubeUpgradeBG } from './Cubes';\nimport { corruptionLoadoutTableUpdate, corruptionButtonsAdd, corruptionLoadoutTableCreate, corruptionStatsUpdate } from './Corruptions';\nimport { generateEventHandlers } from './EventListeners';\nimport { addTimers, automaticTools } from './Helper';\n//import { LegacyShopUpgrades } from './types/LegacySynergism';\n\nimport { checkVariablesOnLoad } from './CheckVariables';\nimport { AbyssHepteract, AcceleratorBoostHepteract, AcceleratorHepteract, ChallengeHepteract, ChronosHepteract, hepteractEffective, HyperrealismHepteract, MultiplierHepteract, QuarkHepteract } from './Hepteracts';\nimport { QuarkHandler } from './Quark';\nimport { WowCubes, WowHypercubes, WowPlatonicCubes, WowTesseracts } from './CubeExperimental';\nimport './Hotkeys';\nimport { startHotkeys } from './Hotkeys';\nimport { updatePlatonicUpgradeBG } from './Platonic';\nimport { testing, version, lastUpdated } from './Config';\n\n/**\n * Whether or not the current version is a testing version or a main version.\n * This should be detected when importing a file.\n */\n//export const isTesting = false;\n//export const version = '2.5.5';\n\nexport const intervalHold = new Set<ReturnType<typeof setInterval>>();\nexport const interval = new Proxy(setInterval, {\n    apply(target, thisArg, args: Parameters<typeof setInterval>) {\n        const set = target.apply(thisArg, args);\n        intervalHold.add(set);\n        return set;\n    }\n});\n\nexport const clearInt = new Proxy(clearInterval, {\n    apply(target, thisArg, args: [ReturnType<typeof setInterval>]) {\n        const id = args[0];\n        if (intervalHold.has(id))\n            intervalHold.delete(id);\n\n        return target.apply(thisArg, args);\n    }\n});\n\nexport const player: Player = {\n    worlds: new QuarkHandler({ quarks: 0 }),\n    coins: new Decimal(\"1e2\"),\n    coinsThisPrestige: new Decimal(\"1e2\"),\n    coinsThisTranscension: new Decimal(\"1e2\"),\n    coinsThisReincarnation: new Decimal(\"1e2\"),\n    coinsTotal: new Decimal(\"100\"),\n\n    firstOwnedCoin: 0,\n    firstGeneratedCoin: new Decimal(\"0\"),\n    firstCostCoin: new Decimal(\"100\"),\n    firstProduceCoin: 0.25,\n\n    secondOwnedCoin: 0,\n    secondGeneratedCoin: new Decimal(\"0\"),\n    secondCostCoin: new Decimal(\"2e3\"),\n    secondProduceCoin: 2.5,\n\n    thirdOwnedCoin: 0,\n    thirdGeneratedCoin: new Decimal(\"0\"),\n    thirdCostCoin: new Decimal(\"4e4\"),\n    thirdProduceCoin: 25,\n\n    fourthOwnedCoin: 0,\n    fourthGeneratedCoin: new Decimal(\"0\"),\n    fourthCostCoin: new Decimal(\"8e5\"),\n    fourthProduceCoin: 250,\n\n    fifthOwnedCoin: 0,\n    fifthGeneratedCoin: new Decimal(\"0\"),\n    fifthCostCoin: new Decimal(\"16e6\"),\n    fifthProduceCoin: 2500,\n\n    firstOwnedDiamonds: 0,\n    firstGeneratedDiamonds: new Decimal(\"0\"),\n    firstCostDiamonds: new Decimal(\"100\"),\n    firstProduceDiamonds: 0.05,\n\n    secondOwnedDiamonds: 0,\n    secondGeneratedDiamonds: new Decimal(\"0\"),\n    secondCostDiamonds: new Decimal(\"1e5\"),\n    secondProduceDiamonds: 0.0005,\n\n    thirdOwnedDiamonds: 0,\n    thirdGeneratedDiamonds: new Decimal(\"0\"),\n    thirdCostDiamonds: new Decimal(\"1e15\"),\n    thirdProduceDiamonds: 0.00005,\n\n    fourthOwnedDiamonds: 0,\n    fourthGeneratedDiamonds: new Decimal(\"0\"),\n    fourthCostDiamonds: new Decimal(\"1e40\"),\n    fourthProduceDiamonds: 0.000005,\n\n    fifthOwnedDiamonds: 0,\n    fifthGeneratedDiamonds: new Decimal(\"0\"),\n    fifthCostDiamonds: new Decimal(\"1e100\"),\n    fifthProduceDiamonds: 0.000005,\n\n    firstOwnedMythos: 0,\n    firstGeneratedMythos: new Decimal(\"0\"),\n    firstCostMythos: new Decimal(\"1\"),\n    firstProduceMythos: 1,\n\n    secondOwnedMythos: 0,\n    secondGeneratedMythos: new Decimal(\"0\"),\n    secondCostMythos: new Decimal(\"100\"),\n    secondProduceMythos: 0.01,\n\n    thirdOwnedMythos: 0,\n    thirdGeneratedMythos: new Decimal(\"0\"),\n    thirdCostMythos: new Decimal(\"1e4\"),\n    thirdProduceMythos: 0.001,\n\n    fourthOwnedMythos: 0,\n    fourthGeneratedMythos: new Decimal(\"0\"),\n    fourthCostMythos: new Decimal(\"1e8\"),\n    fourthProduceMythos: 0.0002,\n\n    fifthOwnedMythos: 0,\n    fifthGeneratedMythos: new Decimal(\"0\"),\n    fifthCostMythos: new Decimal(\"1e16\"),\n    fifthProduceMythos: 0.00004,\n\n    firstOwnedParticles: 0,\n    firstGeneratedParticles: new Decimal(\"0\"),\n    firstCostParticles: new Decimal(\"1\"),\n    firstProduceParticles: .25,\n\n    secondOwnedParticles: 0,\n    secondGeneratedParticles: new Decimal(\"0\"),\n    secondCostParticles: new Decimal(\"100\"),\n    secondProduceParticles: .20,\n\n    thirdOwnedParticles: 0,\n    thirdGeneratedParticles: new Decimal(\"0\"),\n    thirdCostParticles: new Decimal(\"1e4\"),\n    thirdProduceParticles: .15,\n\n    fourthOwnedParticles: 0,\n    fourthGeneratedParticles: new Decimal(\"0\"),\n    fourthCostParticles: new Decimal(\"1e8\"),\n    fourthProduceParticles: .10,\n\n    fifthOwnedParticles: 0,\n    fifthGeneratedParticles: new Decimal(\"0\"),\n    fifthCostParticles: new Decimal(\"1e16\"),\n    fifthProduceParticles: .5,\n\n    firstOwnedAnts: 0,\n    firstGeneratedAnts: new Decimal(\"0\"),\n    firstCostAnts: new Decimal(\"1e700\"),\n    firstProduceAnts: .0001,\n\n    secondOwnedAnts: 0,\n    secondGeneratedAnts: new Decimal(\"0\"),\n    secondCostAnts: new Decimal(\"3\"),\n    secondProduceAnts: .00005,\n\n    thirdOwnedAnts: 0,\n    thirdGeneratedAnts: new Decimal(\"0\"),\n    thirdCostAnts: new Decimal(\"100\"),\n    thirdProduceAnts: .00002,\n\n    fourthOwnedAnts: 0,\n    fourthGeneratedAnts: new Decimal(\"0\"),\n    fourthCostAnts: new Decimal(\"1e4\"),\n    fourthProduceAnts: .00001,\n\n    fifthOwnedAnts: 0,\n    fifthGeneratedAnts: new Decimal(\"0\"),\n    fifthCostAnts: new Decimal(\"1e12\"),\n    fifthProduceAnts: .000005,\n\n    sixthOwnedAnts: 0,\n    sixthGeneratedAnts: new Decimal(\"0\"),\n    sixthCostAnts: new Decimal(\"1e36\"),\n    sixthProduceAnts: .000002,\n\n    seventhOwnedAnts: 0,\n    seventhGeneratedAnts: new Decimal(\"0\"),\n    seventhCostAnts: new Decimal(\"1e100\"),\n    seventhProduceAnts: .000001,\n\n    eighthOwnedAnts: 0,\n    eighthGeneratedAnts: new Decimal(\"0\"),\n    eighthCostAnts: new Decimal(\"1e300\"),\n    eighthProduceAnts: .00000001,\n\n    ascendBuilding1: {\n        cost: 1,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding2: {\n        cost: 10,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding3: {\n        cost: 100,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding4: {\n        cost: 1000,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding5: {\n        cost: 10000,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n\n    multiplierCost: new Decimal(\"1e5\"),\n    multiplierBought: 0,\n\n    acceleratorCost: new Decimal(\"500\"),\n    acceleratorBought: 0,\n\n    acceleratorBoostBought: 0,\n    acceleratorBoostCost: new Decimal(\"1e3\"),\n\n    upgrades: Array(141).fill(0),\n\n    prestigeCount: 0,\n    transcendCount: 0,\n    reincarnationCount: 0,\n\n    prestigePoints: new Decimal(\"0\"),\n    transcendPoints: new Decimal(\"0\"),\n    reincarnationPoints: new Decimal(\"0\"),\n\n    prestigeShards: new Decimal(\"0\"),\n    transcendShards: new Decimal(\"0\"),\n    reincarnationShards: new Decimal(\"0\"),\n\n    toggles: {\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false,\n        9: false,\n        10: false,\n        11: false,\n        12: false,\n        13: false,\n        14: false,\n        15: false,\n        16: false,\n        17: false,\n        18: false,\n        19: false,\n        20: false,\n        21: false,\n        22: false,\n        23: false,\n        24: false,\n        25: false,\n        26: false,\n        27: false,\n        28: true,\n        29: true,\n        30: true,\n        31: true,\n        32: true,\n        33: false,\n    },\n\n    challengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    highestchallengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    challenge15Exponent: 0,\n    highestChallenge15Exponent: 0,\n\n    retrychallenges: false,\n    currentChallenge: {\n        transcension: 0,\n        reincarnation: 0,\n        ascension: 0,\n    },\n    researchPoints: 0,\n    obtainiumtimer: 0,\n    obtainiumpersecond: 0,\n    maxobtainiumpersecond: 0,\n    maxobtainium: 0,\n    // Ignore the first index. The other 25 are shaped in a 5x5 grid similar to the production appearance\n    researches: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\n    unlocks: {\n        coinone: false,\n        cointwo: false,\n        cointhree: false,\n        coinfour: false,\n        prestige: false,\n        generation: false,\n        transcend: false,\n        reincarnate: false,\n        rrow1: false,\n        rrow2: false,\n        rrow3: false,\n        rrow4: false\n    },\n    achievements: Array(281).fill(0),\n\n    achievementPoints: 0,\n\n    prestigenomultiplier: true,\n    prestigenoaccelerator: true,\n    transcendnomultiplier: true,\n    transcendnoaccelerator: true,\n    reincarnatenomultiplier: true,\n    reincarnatenoaccelerator: true,\n    prestigenocoinupgrades: true,\n    transcendnocoinupgrades: true,\n    transcendnocoinorprestigeupgrades: true,\n    reincarnatenocoinupgrades: true,\n    reincarnatenocoinorprestigeupgrades: true,\n    reincarnatenocoinprestigeortranscendupgrades: true,\n    reincarnatenocoinprestigetranscendorgeneratorupgrades: true,\n\n    crystalUpgrades: [0, 0, 0, 0, 0, 0, 0, 0],\n    crystalUpgradesCost: [7, 15, 20, 40, 100, 200, 500, 1000],\n\n    runelevels: [1, 1, 1, 1, 1, 0, 0],\n    runeexp: [0, 0, 0, 0, 0, 0, 0],\n    runeshards: 0,\n    maxofferings: 0,\n    offeringpersecond: 0,\n\n    prestigecounter: 0,\n    transcendcounter: 0,\n    reincarnationcounter: 0,\n    offlinetick: 0,\n\n    prestigeamount: 0,\n    transcendamount: 0,\n    reincarnationamount: 0,\n\n    fastestprestige: 9999999999,\n    fastesttranscend: 99999999999,\n    fastestreincarnate: 999999999999,\n\n    resettoggle1: 1,\n    resettoggle2: 1,\n    resettoggle3: 1,\n\n    tesseractAutoBuyerToggle: 0,\n    tesseractAutoBuyerAmount: 0,\n\n    coinbuyamount: 1,\n    crystalbuyamount: 1,\n    mythosbuyamount: 1,\n    particlebuyamount: 1,\n    offeringbuyamount: 1,\n    tesseractbuyamount: 1,\n\n\n    shoptoggles: {\n        coin: true,\n        prestige: true,\n        transcend: true,\n        generators: true,\n        reincarnate: true,\n    },\n    tabnumber: 1,\n    subtabNumber: 0,\n\n    // create a Map with keys defaulting to false\n    codes: new Map(\n        Array.from({ length: 35 }, (_, i) => [i + 1, false])\n    ),\n\n    loaded1009: true,\n    loaded1009hotfix1: true,\n    loaded10091: true,\n    loaded1010: true,\n    loaded10101: true,\n\n    shopUpgrades: {\n        offeringPotion: 1,\n        obtainiumPotion: 1,\n        offeringEX: 0,\n        offeringAuto: 0,\n        obtainiumEX: 0,\n        obtainiumAuto: 0,\n        instantChallenge: 0,\n        antSpeed: 0,\n        cashGrab: 0,\n        shopTalisman: 0,\n        seasonPass: 0,\n        challengeExtension: 0,\n        challengeTome: 0,\n        cubeToQuark: 0,\n        tesseractToQuark: 0,\n        hypercubeToQuark: 0,\n        seasonPass2: 0,\n        seasonPass3: 0,\n        chronometer: 0,\n        infiniteAscent: 0,\n        calculator: 0,\n        calculator2: 0,\n        calculator3: 0,\n        constantEX: 0,\n        powderEX: 0,\n    },\n    autoSacrificeToggle: false,\n    autoFortifyToggle: false,\n    autoEnhanceToggle: false,\n    autoResearchToggle: false,\n    autoResearch: 0,\n    autoSacrifice: 0,\n    sacrificeTimer: 0,\n    quarkstimer: 90000,\n\n    antPoints: new Decimal(\"1\"),\n    antUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    antSacrificePoints: 0,\n    antSacrificeTimer: 900,\n    antSacrificeTimerReal: 900,\n\n    talismanLevels: [0, 0, 0, 0, 0, 0, 0],\n    talismanRarity: [1, 1, 1, 1, 1, 1, 1],\n    talismanOne: [null, -1, 1, 1, 1, -1],\n    talismanTwo: [null, 1, 1, -1, -1, 1],\n    talismanThree: [null, 1, -1, 1, 1, -1],\n    talismanFour: [null, -1, -1, 1, 1, 1],\n    talismanFive: [null, 1, 1, -1, -1, 1],\n    talismanSix: [null, 1, 1, 1, -1, -1],\n    talismanSeven: [null, -1, 1, -1, 1, 1],\n    talismanShards: 0,\n    commonFragments: 0,\n    uncommonFragments: 0,\n    rareFragments: 0,\n    epicFragments: 0,\n    legendaryFragments: 0,\n    mythicalFragments: 0,\n\n    buyTalismanShardPercent: 10,\n\n    autoAntSacrifice: false,\n    autoAntSacTimer: 900,\n    autoAntSacrificeMode: 0,\n    antMax: false,\n\n    ascensionCount: 0,\n    ascensionCounter: 0,\n    cubeUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    platonicUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    wowCubes: new WowCubes(0),\n    wowTesseracts: new WowTesseracts(0),\n    wowHypercubes: new WowHypercubes(0),\n    wowPlatonicCubes: new WowPlatonicCubes(0),\n    wowAbyssals: 0,\n    cubeBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    tesseractBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    hypercubeBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    platonicBlessings: {\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 0,\n        platonics: 0,\n        hypercubeBonus: 0,\n        taxes: 0,\n        scoreBonus: 0,\n        globalSpeed: 0,\n\n    },\n\n    hepteractCrafts: {\n        chronos: ChronosHepteract,\n        hyperrealism: HyperrealismHepteract,\n        quark: QuarkHepteract,\n        challenge: ChallengeHepteract,\n        abyss: AbyssHepteract,\n        accelerator: AcceleratorHepteract,\n        acceleratorBoost: AcceleratorBoostHepteract,\n        multiplier: MultiplierHepteract\n    },\n\n    ascendShards: new Decimal(\"0\"),\n    autoAscend: false,\n    autoAscendMode: \"c10Completions\",\n    autoAscendThreshold: 1,\n    roombaResearchIndex: 0,\n    ascStatToggles: { // false here means show per second\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n    },\n\n    prototypeCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    usedCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    corruptionLoadouts: {\n        1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    corruptionShowStats: true,\n\n    constantUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    history: { ants: [], ascend: [], reset: [] },\n    historyCountMax: 10,\n    historyShowPerSecond: false,\n\n    autoChallengeRunning: false,\n    autoChallengeIndex: 1,\n    autoChallengeToggles: [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false],\n    autoChallengeStartExponent: 10,\n    autoChallengeTimer: {\n        start: 10,\n        exit: 2,\n        enter: 2\n    },\n\n    runeBlessingLevels: [0, 0, 0, 0, 0, 0],\n    runeSpiritLevels: [0, 0, 0, 0, 0, 0],\n    runeBlessingBuyAmount: 0,\n    runeSpiritBuyAmount: 0,\n\n    autoTesseracts: [false, false, false, false, false, false],\n\n    saveString: \"Synergism-$VERSION$-$TIME$.txt\",\n    exporttest: !testing,\n\n    dayCheck: null,\n    dayTimer: 0,\n    cubeOpenedDaily: 0,\n    cubeQuarkDaily: 0,\n    tesseractOpenedDaily: 0,\n    tesseractQuarkDaily: 0,\n    hypercubeOpenedDaily: 0,\n    hypercubeQuarkDaily: 0,\n    platonicCubeOpenedDaily: 0,\n    platonicCubeQuarkDaily: 0,\n    overfluxOrbs: 0,\n    overfluxPowder: 0,\n    dailyPowderResetUses: 1,\n    loadedOct4Hotfix: false,\n    loadedNov13Vers: true,\n    loadedDec16Vers: true,\n    loadedV253: true,\n    loadedV255: true,\n    version,\n    rngCode: 0,\n    promoCodeTiming: {\n        time: 0\n    }\n}\n\nexport const blankSave = Object.assign({}, player, {\n    codes: new Map(Array.from({ length: 35 }, (_, i) => [i + 1, false]))\n});\n\nexport const saveSynergy = (button?: boolean) => {\n    player.offlinetick = Date.now();\n    player.loaded1009 = true;\n    player.loaded1009hotfix1 = true;\n\n    // shallow hold, doesn't modify OG object nor is affected by modifications to OG\n    const p = Object.assign({}, player, { \n        codes: Array.from(player.codes),\n        worlds: Number(player.worlds),\n        wowCubes: Number(player.wowCubes),\n        wowTesseracts: Number(player.wowTesseracts),\n        wowHypercubes: Number(player.wowHypercubes),\n        wowPlatonicCubes: Number(player.wowPlatonicCubes)\n    });\n\n    localStorage.removeItem('Synergysave2');\n    localStorage.setItem('Synergysave2', btoa(JSON.stringify(p)));\n\n    if (button) {\n        const el = document.getElementById('saveinfo');\n        el.textContent = 'Game saved successfully!';\n        setTimeout(() => el.textContent = '', 4000);\n    }\n}\n\n/**\n * Map of properties on the Player object to adapt\n */\nconst toAdapt = new Map<keyof Player, (data: Player) => unknown>([\n    ['worlds', data => new QuarkHandler({ quarks: Number(data.worlds) })],\n    ['wowCubes', data => new WowCubes(Number(data.wowCubes))],\n    ['wowTesseracts', data => new WowTesseracts(Number(data.wowTesseracts))],\n    ['wowHypercubes', data => new WowHypercubes(Number(data.wowHypercubes))],\n    ['wowPlatonicCubes', data => new WowPlatonicCubes(Number(data.wowPlatonicCubes))]\n]);\n\nconst loadSynergy = () => {\n    console.log('loaded attempted')\n    const save = localStorage.getItem(\"Synergysave2\");\n    const data = save ? JSON.parse(atob(save)) : null;\n\n    if (testing) {\n        Object.defineProperty(window, 'player', {\n            value: player\n        });\n    }\n\n    Object.assign(G, { ...blankGlobals });\n\n    if (data) {\n        if (\n            (data.exporttest === false || data.exporttest === 'NO!') &&\n            !testing\n        ) {\n            return Alert(`You can't load this save anymore!`);\n        }\n\n        const oldCodesUsed = Array.from(\n            { length: 24 }, // old codes only went up to 24\n            (_, i) => 'offerpromo' + (i + 1) + 'used'\n        );\n\n        // size before loading\n        const size = player.codes.size;\n\n        const oldPromoKeys = Object.keys(data).filter(k => k.includes('offerpromo'));\n        if (oldPromoKeys.length > 0) {\n            oldPromoKeys.forEach(k => {\n                const value = data[k];\n                const num = +k.replace(/[^\\d]/g, '');\n                player.codes.set(num, Boolean(value));\n            });\n        }\n\n        Object.keys(data).forEach((stringProp) => {\n            const prop = stringProp as keyof Player;\n            if (toAdapt.has(prop)) {\n                return ((player[prop] as unknown) = toAdapt.get(prop)(data));\n            }\n\n            if (isDecimal(player[prop])) {\n                return ((player[prop] as Decimal) = new Decimal(data[prop]));\n            } else if (prop === 'codes') {\n                return (player.codes = new Map(data[prop]));\n            } else if (oldCodesUsed.includes(prop)) {\n                return;\n            } else if (Array.isArray(data[prop])) {\n                // in old savefiles, some arrays may be 1-based instead of 0-based (newer)\n                // so if the lengths of the savefile key is greater than that of the player obj\n                // it means a key was removed; likely a 1-based index where array[0] was null\n                // so we can get rid of it entirely.\n                if ((player[prop] as unknown[]).length < data[prop].length) {\n                    return (player[prop] as unknown[]) = data[prop].slice(data[prop].length - (player[prop] as unknown[]).length);\n                }\n            }\n\n            return ((player[prop] as unknown) = data[prop]);\n        });\n\n        if (data.offerpromo24used !== undefined) {\n            player.codes.set(25, false)\n        }\n\n        // sets all non-existent codes to default value false\n        if (player.codes.size < size) {\n            for (let i = player.codes.size + 1; i <= size; i++) {\n                if (!player.codes.has(i)) {\n                    player.codes.set(i, false);\n                }\n            }\n        }\n\n        // sets all non-existent codes to default value false\n        if (player.codes.size < size) {\n            for (let i = player.codes.size + 1; i <= size; i++) {\n                if (!player.codes.has(i)) {\n                    player.codes.set(i, false);\n                }\n            }\n        }\n\n        if(!('rngCode' in data)) {\n            player.rngCode = 0;\n        }\n\n        if (data.loaded1009 === undefined || !data.loaded1009) {\n            player.loaded1009 = false;\n        }\n        if (data.loaded1009hotfix1 === undefined || !data.loaded1009hotfix1) {\n            player.loaded1009hotfix1 = false;\n        }\n        if (data.loaded10091 === undefined) {\n            player.loaded10091 = false;\n        }\n        if (data.loaded1010 === undefined) {\n            player.loaded1010 = false;\n        }\n        if (data.loaded10101 === undefined) {\n            player.loaded10101 = false;\n        }\n\n        //Fix dumb shop stuff\n        //First, if shop isn't even defined we just define it as so\n        if(data.shopUpgrades === undefined){\n            player.shopUpgrades = Object.assign({}, blankSave.shopUpgrades);\n        }\n\n        if (player.researches[76] === undefined) {\n            player.codes.set(13, false);\n            player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n            player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n            player.maxofferings = player.runeshards;\n            player.maxobtainium = player.researchPoints;\n            player.researchPoints += 51200 * player.researches[50];\n            player.researches[50] = 0;\n        }\n\n        player.maxofferings = player.maxofferings || 0;\n        player.maxobtainium = player.maxobtainium || 0;\n        player.runeshards = player.runeshards || 0;\n        player.researchPoints = player.researchPoints || 0;\n\n        if (!data.loaded1009 || data.loaded1009hotfix1 === null || data.shopUpgrades.offeringPotion === undefined) {\n            player.firstOwnedParticles = 0;\n            player.secondOwnedParticles = 0;\n            player.thirdOwnedParticles = 0;\n            player.fourthOwnedParticles = 0;\n            player.fifthOwnedParticles = 0;\n            player.firstCostParticles = new Decimal(\"1\");\n            player.secondCostParticles = new Decimal(\"1e2\");\n            player.thirdCostParticles = new Decimal(\"1e4\");\n            player.fourthCostParticles = new Decimal(\"1e8\");\n            player.fifthCostParticles = new Decimal(\"1e16\");\n            player.autoSacrificeToggle = false;\n            player.autoResearchToggle = false;\n            player.autoResearch = 0;\n            player.autoSacrifice = 0;\n            player.sacrificeTimer = 0;\n            player.loaded1009 = true;\n            player.codes.set(18, false);\n        }\n        if (!data.loaded1009hotfix1) {\n            player.loaded1009hotfix1 = true;\n            player.codes.set(19, true);\n            player.firstOwnedParticles = 0;\n            player.secondOwnedParticles = 0;\n            player.thirdOwnedParticles = 0;\n            player.fourthOwnedParticles = 0;\n            player.fifthOwnedParticles = 0;\n            player.firstCostParticles = new Decimal(\"1\");\n            player.secondCostParticles = new Decimal(\"1e2\");\n            player.thirdCostParticles = new Decimal(\"1e4\");\n            player.fourthCostParticles = new Decimal(\"1e8\");\n            player.fifthCostParticles = new Decimal(\"1e16\");\n        }\n        if (data.loaded10091 === undefined || !data.loaded10091 || player.researches[86] > 100 || player.researches[87] > 100 || player.researches[88] > 100 || player.researches[89] > 100 || player.researches[90] > 10) {\n            player.loaded10091 = true;\n            player.researchPoints += 7.5e8 * player.researches[82];\n            player.researchPoints += 2e8 * player.researches[83];\n            player.researchPoints += 4.5e9 * player.researches[84];\n            player.researchPoints += 2.5e7 * player.researches[86];\n            player.researchPoints += 7.5e7 * player.researches[87];\n            player.researchPoints += 3e8 * player.researches[88];\n            player.researchPoints += 1e9 * player.researches[89];\n            player.researchPoints += 2.5e7 * player.researches[90];\n            player.researchPoints += 1e8 * player.researches[91];\n            player.researchPoints += 2e9 * player.researches[92];\n            player.researchPoints += 9e9 * player.researches[93];\n            player.researchPoints += 7.25e10 * player.researches[94];\n            player.researches[86] = 0;\n            player.researches[87] = 0;\n            player.researches[88] = 0;\n            player.researches[89] = 0;\n            player.researches[90] = 0;\n            player.researches[91] = 0;\n            player.researches[92] = 0;\n        }\n\n        //const shop = data.shopUpgrades as LegacyShopUpgrades & Player['shopUpgrades'];\n        if (\n            data.achievements[169] === undefined || \n            player.achievements[169] === undefined || \n        //    (shop.antSpeed === undefined && shop.antSpeedLevel === undefined) || \n        //    (shop.antSpeed === undefined && typeof shop.antSpeedLevel === 'undefined') || \n            data.loaded1010 === undefined || \n            data.loaded1010 === false\n        ) {\n            player.loaded1010 = true;\n            player.codes.set(21, false);\n\n            player.firstOwnedAnts = 0;\n            player.firstGeneratedAnts = new Decimal(\"0\");\n            player.firstCostAnts = new Decimal(\"1e700\");\n            player.firstProduceAnts = .0001;\n\n            player.secondOwnedAnts = 0;\n            player.secondGeneratedAnts = new Decimal(\"0\");\n            player.secondCostAnts = new Decimal(\"3\");\n            player.secondProduceAnts = .00005;\n\n            player.thirdOwnedAnts = 0;\n            player.thirdGeneratedAnts = new Decimal(\"0\");\n            player.thirdCostAnts = new Decimal(\"100\");\n            player.thirdProduceAnts = .00002;\n\n            player.fourthOwnedAnts = 0;\n            player.fourthGeneratedAnts = new Decimal(\"0\");\n            player.fourthCostAnts = new Decimal(\"1e4\");\n            player.fourthProduceAnts = .00001;\n\n            player.fifthOwnedAnts = 0;\n            player.fifthGeneratedAnts = new Decimal(\"0\");\n            player.fifthCostAnts = new Decimal(\"1e12\");\n            player.fifthProduceAnts = .000005;\n\n            player.sixthOwnedAnts = 0;\n            player.sixthGeneratedAnts = new Decimal(\"0\");\n            player.sixthCostAnts = new Decimal(\"1e36\");\n            player.sixthProduceAnts = .000002;\n\n            player.seventhOwnedAnts = 0;\n            player.seventhGeneratedAnts = new Decimal(\"0\");\n            player.seventhCostAnts = new Decimal(\"1e100\");\n            player.seventhProduceAnts = .000001;\n\n            player.eighthOwnedAnts = 0;\n            player.eighthGeneratedAnts = new Decimal(\"0\");\n            player.eighthCostAnts = new Decimal(\"1e300\");\n            player.eighthProduceAnts = .00000001;\n\n            player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            player.antPoints = new Decimal(\"1\");\n\n            player.upgrades[38] = 0;\n            player.upgrades[39] = 0;\n            player.upgrades[40] = 0;\n\n            player.upgrades[76] = 0;\n            player.upgrades[77] = 0;\n            player.upgrades[78] = 0;\n            player.upgrades[79] = 0;\n            player.upgrades[80] = 0;\n\n\n        //    player.shopUpgrades.antSpeed = 0;\n        //    player.shopUpgrades.shopTalisman = 0;\n\n            player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n            player.unlocks.rrow4 = false;\n            player.researchPoints += 3e7 * player.researches[50];\n            player.researchPoints += 2e9 * player.researches[96];\n            player.researchPoints += 5e9 * player.researches[97];\n            player.researchPoints += 3e10 * player.researches[98];\n            player.researches[50] = 0;\n            player.researches[96] = 0;\n            player.researches[97] = 0;\n            player.researches[98] = 0;\n            player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\n            player.talismanLevels = [0, 0, 0, 0, 0, 0, 0];\n            player.talismanRarity = [1, 1, 1, 1, 1, 1, 1];\n\n            player.talismanShards = 0;\n            player.commonFragments = 0;\n            player.uncommonFragments = 0;\n            player.rareFragments = 0;\n            player.epicFragments = 0;\n            player.legendaryFragments = 0;\n            player.mythicalFragments = 0;\n            player.buyTalismanShardPercent = 10;\n\n            player.talismanOne = [null, -1, 1, 1, 1, -1];\n            player.talismanTwo = [null, 1, 1, -1, -1, 1];\n            player.talismanThree = [null, 1, -1, 1, 1, -1];\n            player.talismanFour = [null, -1, -1, 1, 1, 1];\n            player.talismanFive = [null, 1, 1, -1, -1, 1];\n            player.talismanSix = [null, 1, 1, 1, -1, -1];\n            player.talismanSeven = [null, -1, 1, -1, 1, 1];\n\n            player.antSacrificePoints = 0;\n            player.antSacrificeTimer = 0;\n\n            player.obtainiumpersecond = 0;\n            player.maxobtainiumpersecond = 0;\n\n        }\n\n        if (data.loaded10101 === undefined || data.loaded10101 === false) {\n            player.loaded10101 = true;\n\n            const refundThese = [0, 31, 32, 61, 62, 63, 64, 76, 77, 78, 79, 80,\n                81, 98, 104, 105, 106, 107, 108,\n                109, 110, 111, 112, 113, 114, 115, 116,\n                117, 118, 119, 120, 121, 122, 123, 125];\n            const refundReward = [0, 2, 20, 5, 10, 80, 5e3, 1e7, 1e7, 2e7, 3e7, 4e7,\n                2e8, 3e10, 1e11, 1e12, 2e11, 1e12, 2e10,\n                2e11, 1e12, 2e13, 5e13, 1e14, 2e14, 5e14, 1e15,\n                2e15, 1e16, 1e15, 1e16, 1e14, 1e15, 1e15, 1e20];\n            for (let i = 1; i < refundThese.length; i++) {\n                player.researchPoints += player.researches[refundThese[i]] * refundReward[i]\n                player.researches[refundThese[i]] = 0;\n            }\n            player.autoAntSacrifice = false;\n            player.antMax = false;\n        }\n\n        if (player.firstOwnedAnts < 1 && player.firstCostAnts.gte(\"1e1200\")) {\n            player.firstCostAnts = new Decimal(\"1e700\");\n            player.firstOwnedAnts = 0;\n        }\n\n        checkVariablesOnLoad(data)\n        if (data.ascensionCount === undefined || player.ascensionCount === 0) {\n            player.ascensionCount = 0;\n            if (player.ascensionCounter === undefined || (player.ascensionCounter === 0 && player.prestigeCount > 0)) {\n                player.ascensionCounter = 86400 * 90;\n            }\n            player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            player.wowCubes = new WowCubes(0);\n            player.wowTesseracts = new WowTesseracts(0);\n            player.wowHypercubes = new WowHypercubes(0);\n            player.cubeBlessings = {\n                accelerator: 0,\n                multiplier: 0,\n                offering: 0,\n                runeExp: 0,\n                obtainium: 0,\n                antSpeed: 0,\n                antSacrifice: 0,\n                antELO: 0,\n                talismanBonus: 0,\n                globalSpeed: 0\n            }\n        }\n        if (data.autoAntSacTimer === undefined) {\n            player.autoAntSacTimer = 900;\n        }\n        if (data.autoAntSacrificeMode === undefined) {\n            player.autoAntSacrificeMode = 0;\n        }\n\n        if (player.cubeUpgrades[7] === 0 && player.toggles[22]) {\n            for (let i = 22; i <= 26; i++) {\n                player.toggles[i] = false\n            }\n        }\n\n        if (player.transcendCount < 0) {\n            player.transcendCount = 0\n        }\n        if (player.reincarnationCount < 0) {\n            player.reincarnationCount = 0;\n        }\n        if (player.runeshards < 0) {\n            player.runeshards = 0;\n        }\n        if (player.researchPoints < 0) {\n            player.researchPoints = 0;\n        }\n\n        if (player.resettoggle1 === 0) {\n            player.resettoggle1 = 1;\n            player.resettoggle2 = 1;\n            player.resettoggle3 = 1;\n        }\n        if (player.tesseractAutoBuyerToggle === 0) {\n            player.tesseractAutoBuyerToggle = 1;\n        }\n        if (player.reincarnationCount < 0.5 && player.unlocks.rrow4 === true) {\n            player.unlocks = {\n                coinone: false,\n                cointwo: false,\n                cointhree: false,\n                coinfour: false,\n                prestige: false,\n                generation: false,\n                transcend: false,\n                reincarnate: false,\n                rrow1: false,\n                rrow2: false,\n                rrow3: false,\n                rrow4: false\n            }\n        }\n\n        if (data.history === undefined || player.history === undefined) {\n            player.history = { ants: [], ascend: [], reset: [] };\n        }\n        if (data.historyShowPerSecond === undefined || player.historyShowPerSecond === undefined) {\n            player.historyShowPerSecond = false;\n            player.historyCountMax = 10;\n        }\n\n        if (!Number.isInteger(player.ascendBuilding1.cost)) {\n            player.ascendBuilding1.cost = 1;\n            player.ascendBuilding1.owned = 0;\n            player.ascendBuilding2.cost = 10;\n            player.ascendBuilding2.owned = 0;\n            player.ascendBuilding3.cost = 100;\n            player.ascendBuilding3.owned = 0;\n            player.ascendBuilding4.cost = 1000;\n            player.ascendBuilding4.owned = 0;\n            player.ascendBuilding5.cost = 10000;\n            player.ascendBuilding5.owned = 0;\n        }\n\n        if (!player.dayCheck) {\n            player.dayCheck = new Date(player.dayCheck)\n        }\n\n        for (let i = 1; i <= 5; i++) {\n            const ascendBuildingI = `ascendBuilding${i as OneToFive}` as const;\n            player[ascendBuildingI].generated = new Decimal(player[ascendBuildingI].generated)\n        }\n\n        while (player.achievements[252] === undefined) {\n            player.achievements.push(0)\n        }\n        while (player.researches[200] === undefined) {\n            player.researches.push(0)\n        }\n        while (player.upgrades[140] === undefined) {\n            player.upgrades.push(0)\n        }\n\n\n        if (player.saveString === undefined || player.saveString === \"\" || player.saveString === \"Synergism-v1011Test.txt\") {\n            player.saveString = \"Synergism-$VERSION$-$TIME$.txt\"\n        }\n        getElementById<HTMLInputElement>(\"saveStringInput\").value = player.saveString\n\n        player.wowCubes = new WowCubes(Number(player.wowCubes) || 0);\n\n        for (let j = 1; j < 126; j++) {\n            upgradeupdate(j);\n        }\n\n        for (let j = 1; j <= (200); j++) {\n            updateResearchBG(j);\n        }\n        for (let j = 1; j <= 50; j++) {\n            updateCubeUpgradeBG(j);\n        }\n        const platUpg = document.querySelectorAll('img[id^=\"platUpg\"]');\n        for (let j = 1; j <= platUpg.length; j++) {\n            updatePlatonicUpgradeBG(j);\n        }\n\n        const q = ['coin', 'crystal', 'mythos', 'particle', 'offering', 'tesseract'] as const;\n        if (player.coinbuyamount !== 1 && player.coinbuyamount !== 10 && player.coinbuyamount !== 100 && player.coinbuyamount !== 1000) {\n            player.coinbuyamount = 1;\n        }\n        if (player.crystalbuyamount !== 1 && player.crystalbuyamount !== 10 && player.crystalbuyamount !== 100 && player.crystalbuyamount !== 1000) {\n            player.crystalbuyamount = 1;\n        }\n        if (player.mythosbuyamount !== 1 && player.mythosbuyamount !== 10 && player.mythosbuyamount !== 100 && player.mythosbuyamount !== 1000) {\n            player.mythosbuyamount = 1;\n        }\n        if (player.particlebuyamount !== 1 && player.particlebuyamount !== 10 && player.particlebuyamount !== 100 && player.particlebuyamount !== 1000) {\n            player.particlebuyamount = 1;\n        }\n        if (player.offeringbuyamount !== 1 && player.offeringbuyamount !== 10 && player.offeringbuyamount !== 100 && player.offeringbuyamount !== 1000) {\n            player.offeringbuyamount = 1;\n        }\n        if (player.tesseractbuyamount !== 1 && player.tesseractbuyamount !== 10 && player.tesseractbuyamount !== 100 && player.tesseractbuyamount !== 1000) {\n            player.tesseractbuyamount = 1;\n        }\n        for (let j = 0; j <= 5; j++) {\n            for (let k = 0; k < 4; k++) {\n                let d;\n                if (k === 0) {\n                    d = 'one';\n                }\n                if (k === 1) {\n                    d = 'ten'\n                }\n                if (k === 2) {\n                    d = 'hundred'\n                }\n                if (k === 3) {\n                    d = 'thousand'\n                }\n                const e = q[j] + d;\n                document.getElementById(e).style.backgroundColor = \"\"\n            }\n            let c;\n            const curBuyAmount = player[`${q[j]}buyamount` as const];\n            if (curBuyAmount === 1) {\n                c = 'one'\n            }\n            if (curBuyAmount === 10) {\n                c = 'ten'\n            }\n            if (curBuyAmount === 100) {\n                c = 'hundred'\n            }\n            if (curBuyAmount === 1000) {\n                c = 'thousand'\n            }\n\n            const b = q[j] + c;\n            document.getElementById(b).style.backgroundColor = \"green\"\n\n        }\n\n        const testArray = []\n        //Creates a copy of research costs array\n        for (let i = 0; i < G['researchBaseCosts'].length; i++) {\n            testArray.push(G['researchBaseCosts'][i]);\n        }\n        //Sorts the above array, and returns the index order of sorted array\n        G['researchOrderByCost'] = sortWithIndices(testArray)\n        player.roombaResearchIndex = 0;\n\n        // June 09, 2021: Updated toggleShops() and removed boilerplate - Platonic\n        toggleShops();\n        getChallengeConditions();\n        updateChallengeDisplay();\n        revealStuff();\n        toggleauto();\n\n        document.getElementById(\"startTimerValue\").textContent = format(player.autoChallengeTimer.start, 2, true) + \"s\"\n        getElementById<HTMLInputElement>(\"startAutoChallengeTimerInput\").value = player.autoChallengeTimer.start + '';\n        document.getElementById(\"exitTimerValue\").textContent = format(player.autoChallengeTimer.exit, 2, true) + \"s\"\n        getElementById<HTMLInputElement>(\"exitAutoChallengeTimerInput\").value = player.autoChallengeTimer.exit + '';\n        document.getElementById(\"enterTimerValue\").textContent = format(player.autoChallengeTimer.enter, 2, true) + \"s\"\n        getElementById<HTMLInputElement>(\"enterAutoChallengeTimerInput\").value = player.autoChallengeTimer.enter + '';\n\n        corruptionStatsUpdate();\n        for (let i = 0; i < 4; i++) {\n            corruptionLoadoutTableUpdate(i);\n        }\n        showCorruptionStatsLoadouts()\n\n        for (let j = 1; j <= 5; j++) {\n            const ouch = document.getElementById(\"tesseractAutoToggle\" + j);\n            (player.autoTesseracts[j]) ?\n                (ouch.textContent = \"Auto [ON]\", ouch.style.border = \"2px solid green\") :\n                (ouch.textContent = \"Auto [OFF]\", ouch.style.border = \"2px solid red\");\n        }\n\n        document.getElementById(\"buyRuneBlessingToggleValue\").textContent = format(player.runeBlessingBuyAmount, 0, true);\n        document.getElementById(\"buyRuneSpiritToggleValue\").textContent = format(player.runeSpiritBuyAmount, 0, true);\n\n        document.getElementById(\"researchrunebonus\").textContent = \"Thanks to researches, your effective levels are increased by \" + (100 * G['effectiveLevelMult'] - 100).toPrecision(4) + \"%\";\n\n        document.getElementById(\"talismanlevelup\").style.display = \"none\"\n        document.getElementById(\"talismanrespec\").style.display = \"none\"\n        calculatePlatonicBlessings();\n        calculateHypercubeBlessings();\n        calculateTesseractBlessings();\n        calculateCubeBlessings();\n        updateTalismanAppearance(1);\n        updateTalismanAppearance(2);\n        updateTalismanAppearance(3);\n        updateTalismanAppearance(4);\n        updateTalismanAppearance(5);\n        updateTalismanAppearance(6);\n        updateTalismanAppearance(7);\n        for (const id in player.ascStatToggles) {\n            toggleAscStatPerSecond(+id); // toggle each stat twice to make sure the displays are correct and match what they used to be\n            toggleAscStatPerSecond(+id);\n        }\n\n\n        if (player.resettoggle1 === 1) {\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: AMOUNT\"\n        }\n        if (player.resettoggle2 === 1) {\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: AMOUNT\"\n        }\n        if (player.resettoggle3 === 1) {\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: AMOUNT\"\n        }\n\n        if (player.resettoggle1 === 2) {\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: TIME\"\n        }\n        if (player.resettoggle2 === 2) {\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: TIME\"\n        }\n        if (player.resettoggle3 === 2) {\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: TIME\"\n        }\n\n        if (player.tesseractAutoBuyerToggle === 1) {\n            document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: ON\"\n            document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid green\"\n        }\n        if (player.tesseractAutoBuyerToggle === 2) {\n            document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: OFF\"\n            document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid red\"\n        }\n\n        if (player.autoResearchToggle) {\n            document.getElementById(\"toggleautoresearch\").textContent = \"Automatic: ON\"\n        }\n        if (!player.autoResearchToggle) {\n            document.getElementById(\"toggleautoresearch\").textContent = \"Automatic: OFF\"\n        }\n        if (player.autoSacrificeToggle == true) {\n            document.getElementById(\"toggleautosacrifice\").textContent = \"Auto Rune: ON\"\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid green\"\n        }\n        if (player.autoSacrificeToggle == false) {\n            document.getElementById(\"toggleautosacrifice\").textContent = \"Auto Rune: OFF\"\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid red\"\n        }\n        if (player.autoFortifyToggle == true) {\n            document.getElementById(\"toggleautofortify\").textContent = \"Auto Fortify: ON\"\n            document.getElementById(\"toggleautofortify\").style.border = \"2px solid green\"\n        }\n        if (player.autoFortifyToggle == false) {\n            document.getElementById(\"toggleautofortify\").textContent = \"Auto Fortify: OFF\"\n            document.getElementById(\"toggleautofortify\").style.border = \"2px solid red\"\n        }\n        if (player.autoEnhanceToggle == true) {\n            document.getElementById(\"toggleautoenhance\").textContent = \"Auto Enhance: ON\"\n            document.getElementById(\"toggleautoenhance\").style.border = \"2px solid green\"\n        }\n        if (player.autoEnhanceToggle == false) {\n            document.getElementById(\"toggleautoenhance\").textContent = \"Auto Enhance: OFF\"\n            document.getElementById(\"toggleautoenhance\").style.border = \"2px solid red\"\n        }\n        if (!player.autoAscend) {\n            document.getElementById(\"ascensionAutoEnable\").textContent = \"Auto Ascend [OFF]\";\n            document.getElementById(\"ascensionAutoEnable\").style.border = \"2px solid red\"\n        }\n\n        for (let i = 1; i <= 2; i++) {\n            toggleAntMaxBuy();\n            toggleAntAutoSacrifice(0);\n            toggleAntAutoSacrifice(1);\n        }\n\n        document.getElementById(\"historyTogglePerSecondButton\").textContent = \"Per second: \" + (player.historyShowPerSecond ? \"ON\" : \"OFF\");\n        document.getElementById(\"historyTogglePerSecondButton\").style.borderColor = (player.historyShowPerSecond ? \"green\" : \"red\");\n\n        if (!player.autoAscend) {\n            document.getElementById(\"ascensionAutoEnable\").textContent = \"Auto Ascend [OFF]\";\n            document.getElementById(\"ascensionAutoEnable\").style.border = \"2px solid red\"\n        }\n\n        player.autoResearch = Math.min(200, player.autoResearch)\n        player.autoSacrifice = Math.min(5, player.autoSacrifice)\n\n\n        if (player.researches[61] === 0) {\n            document.getElementById('automaticobtainium').textContent = \"[LOCKED - Buy Research 3x11]\"\n        }\n\n        if (player.autoSacrificeToggle && player.autoSacrifice > 0.5) {\n            document.getElementById(\"rune\" + player.autoSacrifice).style.backgroundColor = \"orange\"\n        }\n\n        toggleTalismanBuy(player.buyTalismanShardPercent);\n        updateTalismanInventory();\n        calculateObtainium();\n        calculateAnts();\n        calculateRuneLevels();\n        resetHistoryRenderAllTables();\n        c15RewardUpdate();\n    }\n    CSSAscend();\n    updateAchievementBG();\n\n    const d = new Date()\n    const h = d.getHours()\n    const m = d.getMinutes()\n    const s = d.getSeconds()\n    player.dayTimer = (60 * 60 * 24 - (s + 60 * m + 60 * 60 * h))\n}\n\n// Bad browsers (like Safari) only recently implemented this.\n// \nconst supportsFormatToParts = typeof Intl?.NumberFormat?.prototype?.formatToParts === 'function';\n\n// In some browsers, this will return an empty-1 length array (?), causing a \"TypeError: Cannot read property 'value' of undefined\"\n// if we destructure it... To reproduce: ` const [ { value } ] = []; `\n// https://discord.com/channels/677271830838640680/730669616870981674/830218436201283584\nconst IntlFormatter = !supportsFormatToParts ? null : Intl.NumberFormat()\n    .formatToParts(1000.1)\n    .filter(part => part.type === 'decimal' || part.type === 'group');\n\n// gets the system number delimiter and decimal values, defaults to en-US\nconst [{ value: group }, { value: dec }] = IntlFormatter?.length !== 2\n    ? [{ value: ',' }, { value: '.' }]\n    : IntlFormatter;\n\n// Number.toLocaleString opts for 2 decimal places\nconst locOpts = { minimumFractionDigits: 2, maximumFractionDigits: 2 };\n\n/**\n * This function displays the numbers such as 1,234 or 1.00e1234 or 1.00e1.234M.\n * @param input value to format\n * @param accuracy\n * how many decimal points that are to be displayed (Values <10 if !long, <1000 if long).\n * only works up to 305 (308 - 3), however it only worked up to ~14 due to rounding errors regardless\n * @param long dictates whether or not a given number displays as scientific at 1,000,000. This auto defaults to short if input >= 1e13\n */\nexport const format = (\n    input: Decimal | number | { [Symbol.toPrimitive]: unknown } | bigint, \n    accuracy = 0, \n    long = false,\n    truncate = true\n): string => {\n    if (\n        typeof input === 'object' && \n        input !== null &&\n        Symbol.toPrimitive in input\n    ) {\n        input = Number(input);\n    }\n\n    if ( // invalid parameter\n        !(input instanceof Decimal) && \n        typeof input !== 'number' || \n        isNaN(input as number)\n    )\n        return '0 [und.]';\n    else if ( // this case handles numbers less than 1e-6 and greater than 0\n        typeof input === 'number' && \n        input < 1e-3 && // arbitrary number, can be changed\n        input > 0 // don't handle negative numbers, probably could be removed\n    )\n        return input.toExponential(accuracy);\n\n    let power;\n    let mantissa;\n    if (isDecimal(input)) {\n        // Gets power and mantissa if input is of type decimal\n        power = input.e;\n        mantissa = input.mantissa;\n    } else if (typeof input === 'number') {\n        if (input === 0) {\n            return '0';\n        }\n\n        // Gets power and mantissa if input is of type number and isn't 0\n        power = Math.floor(Math.log10(Math.abs(input)));\n        mantissa = input / Math.pow(10, power);\n    }\n\n    // This prevents numbers from jittering between two different powers by rounding errors\n    if (mantissa > 9.9999999) {\n        mantissa = 1;\n        ++power;\n    }\n\n    if (mantissa < 1 && mantissa > 0.9999999) {\n        mantissa = 1;\n    }\n\n    // If the power is less than 12 it's effectively 0\n    if (power < -12) {\n        return '0';\n    } else if (power < 6 || (long && power < 13)) {\n        // If the power is less than 6 or format long and less than 13 use standard formatting (123,456,789)\n        // Gets the standard representation of the number, safe as power is guaranteed to be > -12 and < 13\n        let standard = mantissa * Math.pow(10, power);\n        let standardString;\n        // Rounds up if the number experiences a rounding error\n        if (standard - Math.floor(standard) > 0.9999999) {\n            standard = Math.ceil(standard);\n        }\n        // If the power is less than 1 or format long and less than 3 apply toFixed(accuracy) to get decimal places\n        if ((power < 1 || (long && power < 3)) && accuracy > 0) {\n            standardString = standard.toFixed(accuracy);\n        } else {\n            // If it doesn't fit those criteria drop the decimal places\n            standard = Math.floor(standard);\n            standardString = standard.toString();\n        }\n\n        // Split it on the decimal place\n        const [front, back] = standardString.split('.');\n        // Apply a number group 3 comma regex to the front\n        const frontFormatted = typeof BigInt === 'function'\n            ? BigInt(front).toLocaleString()\n            : front.replace(/(\\d)(?=(\\d{3})+$)/g, `$1${group}`);\n\n        // if the back is undefined that means there are no decimals to display, return just the front\n        return !back \n            ? frontFormatted\n            : `${frontFormatted}${dec}${back}`;\n    } else if (power < 1e6) {\n        // If the power is less than 1e6 then apply standard scientific notation\n        // Makes mantissa be rounded down to 2 decimal places\n        const mantissaLook = (Math.floor(mantissa * 100) / 100).toLocaleString(undefined, locOpts);\n        // Makes the power group 3 with commas\n        const powerLook = typeof BigInt === 'function'\n            ? BigInt(power).toLocaleString()\n            : power.toString().replace(/(\\d)(?=(\\d{3})+$)/g, `$1${group}`);\n        // returns format (1.23e456,789)\n        return `${mantissaLook}e${powerLook}`;\n    } else if (power >= 1e6) {\n        // if the power is greater than 1e6 apply notation scientific notation\n        // Makes mantissa be rounded down to 2 decimal places\n        const mantissaLook = testing && truncate ? '' : (Math.floor(mantissa * 100) / 100).toLocaleString(undefined, locOpts);\n        \n        // Drops the power down to 4 digits total but never greater than 1000 in increments that equate to notations, (1234000 -> 1.234) ( 12340000 -> 12.34) (123400000 -> 123.4) (1234000000 -> 1.234)\n        const powerDigits = Math.ceil(Math.log10(power));\n        let powerFront = ((powerDigits - 1) % 3) + 1;\n        let powerLook = power / Math.pow(10, powerDigits - powerFront);\n        if (powerLook === 1000) {\n            powerLook = 1;\n            powerFront = 1;\n        }\n\n        const powerLookF = powerLook.toLocaleString(undefined, {\n            minimumFractionDigits: 4 - powerFront, maximumFractionDigits: 4 - powerFront\n        });\n        // Return relevant notations alongside the \"look\" power based on what the power actually is\n        if (power < 1e9) {\n            return `${mantissaLook}e${powerLookF}M`;\n        }\n        if (power < 1e12) {\n            return `${mantissaLook}e${powerLookF}B`;\n        }\n        if (power < 1e15) {\n            return `${mantissaLook}e${powerLookF}T`;\n        }\n        if (power < 1e18) {\n            return `${mantissaLook}e${powerLookF}Qa`;\n        }\n        if (power < 1e21) {\n            return `${mantissaLook}e${powerLookF}Qi`;\n        }\n        if (power < 1e24) {\n            return `${mantissaLook}e${powerLookF}Sx`;\n        }\n        if (power < 1e27) {\n            return `${mantissaLook}e${powerLookF}Sp`;\n        }\n        if (power < 1e30) {\n            return `${mantissaLook}e${powerLookF}Oc`;\n        }\n        if (power < 1e33) {\n            return `${mantissaLook}e${powerLookF}No`;\n        }\n        if (power < 1e36) {\n            return `${mantissaLook}e${powerLookF}Dc`;\n        }\n        if (power < 1e39) {\n            return `${mantissaLook}e${powerLookF}UDc`;\n        }\n        if (power < 1e42) {\n            return `${mantissaLook}e${powerLookF}DDc`;\n        }\n        if (power < 1e45) {\n            return `${mantissaLook}e${powerLookF}TDc`;\n        }\n        if (power < 1e48) {\n            return `${mantissaLook}e${powerLookF}QaDc`;\n        }\n        if (power < 1e51) {\n            return `${mantissaLook}e${powerLookF}QiDc`;\n        }\n        if (power < 1e54) {\n            return `${mantissaLook}e${powerLookF}AAAA`;\n        }\n        \n        // If it doesn't fit a notation then default to mantissa e power\n        return `${mantissa}e${power}`;\n    } else {\n        return `0 [und.]`;\n    }\n}\n\nexport const formatTimeShort = (seconds: number, msMaxSeconds?: number): string => {\n    return ((seconds >= 86400)\n        ? format(Math.floor(seconds / 86400)) + \"d\"\n        : '') +\n        ((seconds >= 3600)\n            ? format(Math.floor(seconds / 3600) % 24) + \"h\"\n            : '') +\n        ((seconds >= 60)\n            ? format(Math.floor(seconds / 60) % 60) + \"m\"\n            : '') +\n        format(Math.floor(seconds) % 60) +\n        ((msMaxSeconds && seconds < msMaxSeconds)\n            ? \".\" + (Math.floor((seconds % 1) * 1000).toString().padStart(3, '0'))\n            : '') + \"s\";\n}\n\nexport const updateAllTick = (): void => {\n    let a = 0;\n    \n    G['totalAccelerator'] = player.acceleratorBought;\n    G['costDivisor'] = 1;\n\n    if (player.upgrades[8] !== 0) {\n        a += Math.floor(player.multiplierBought / 7);\n    }\n    if (player.upgrades[21] !== 0) {\n        a += 5;\n    }\n    if (player.upgrades[22] !== 0) {\n        a += 4;\n    }\n    if (player.upgrades[23] !== 0) {\n        a += 3;\n    }\n    if (player.upgrades[24] !== 0) {\n        a += 2;\n    }\n    if (player.upgrades[25] !== 0) {\n        a += 1;\n    }\n    if (player.upgrades[27] !== 0) {\n        a += Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.min(1750, Math.max(0, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50));\n    }\n    if (player.upgrades[29] !== 0) {\n        a += Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))\n    }\n    if (player.upgrades[32] !== 0) {\n        a += Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)));\n    }\n    if (player.upgrades[45] !== 0) {\n        a += Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)));\n    }\n    if (player.achievements[5] !== 0) {\n        a += Math.floor(player.firstOwnedCoin / 500)\n    }\n    if (player.achievements[12] !== 0) {\n        a += Math.floor(player.secondOwnedCoin / 500)\n    }\n    if (player.achievements[19] !== 0) {\n        a += Math.floor(player.thirdOwnedCoin / 500)\n    }\n    if (player.achievements[26] !== 0) {\n        a += Math.floor(player.fourthOwnedCoin / 500)\n    }\n    if (player.achievements[33] !== 0) {\n        a += Math.floor(player.fifthOwnedCoin / 500)\n    }\n    if (player.achievements[60] !== 0) {\n        a += 2\n    }\n    if (player.achievements[61] !== 0) {\n        a += 2\n    }\n    if (player.achievements[62] !== 0) {\n        a += 2\n    }\n\n    a += 5 * CalcECC('transcend', player.challengecompletions[2])\n    G['freeUpgradeAccelerator'] = a;\n    a += G['totalAcceleratorBoost'] * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G['cubeBonusMultiplier'][1]);\n    if (player.unlocks.prestige === true) {\n        a += Math.floor(Math.pow(G['rune1level'] * G['effectiveLevelMult'] / 4, 1.25));\n        a *= (1 + G['rune1level'] * 1 / 400 * G['effectiveLevelMult']);\n    }\n    \n    calculateAcceleratorMultiplier();\n    a *= G['acceleratorMultiplier']\n    a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['maladaptivePower'][player.usedCorruptions[2]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))))\n    a += 2000 * hepteractEffective('accelerator');\n    a *= G['challenge15Rewards'].accelerator\n    a *= (1 + 3/10000 * hepteractEffective('accelerator'))\n    a = Math.floor(a)\n\n    G['freeAccelerator'] = a;\n    G['totalAccelerator'] += G['freeAccelerator'];\n\n    G['tuSevenMulti'] = 1;\n\n\n    if (player.upgrades[46] > 0.5) {\n        G['tuSevenMulti'] = 1.05;\n    }\n\n    G['acceleratorPower'] = Math.pow(\n        1.1 + G['tuSevenMulti'] * \n        (G['totalAcceleratorBoost'] / 100) \n        * (1 + CalcECC('transcend', player.challengecompletions[2]) / 20), \n        1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7])\n    );\n    G['acceleratorPower'] += 1 / 200 * Math.floor(CalcECC('transcend', player.challengecompletions[2]) / 2) * 100 / 100\n    for (let i = 1; i <= 5; i++) {\n        if (player.achievements[7 * i - 4] > 0) {\n            G['acceleratorPower'] += 0.0005 * i\n        }\n    }\n\n    //No MA and Sadistic will always overwrite Transcend challenges starting in v2.0.0\n    if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\n        if (player.currentChallenge.transcension === 1) {\n            G['acceleratorPower'] *= 25 / (50 + player.challengecompletions[1]);\n            G['acceleratorPower'] += 0.55\n            G['acceleratorPower'] = Math.max(1, G['acceleratorPower'])\n        }\n        if (player.currentChallenge.transcension === 2) {\n            G['acceleratorPower'] = 1;\n        }\n        if (player.currentChallenge.transcension === 3) {\n            G['acceleratorPower'] = \n                1.05 + \n                2 * G['tuSevenMulti'] * \n                (G['totalAcceleratorBoost'] / 300) * \n                (1 + CalcECC('transcend', player.challengecompletions[2]) / 20\n            );\n        }\n    }\n    if (player.currentChallenge.reincarnation === 7) {\n        G['acceleratorPower'] = 1;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        G['acceleratorPower'] = 1;\n    }\n\n    if (player.currentChallenge.transcension !== 1) {\n        G['acceleratorEffect'] = Decimal.pow(G['acceleratorPower'], G['totalAccelerator']);\n    }\n\n    if (player.currentChallenge.transcension === 1) {\n        G['acceleratorEffect'] = Decimal.pow(G['acceleratorPower'], G['totalAccelerator'] + G['totalMultiplier']);\n    }\n    G['acceleratorEffectDisplay'] = new Decimal(G['acceleratorPower'] * 100 - 100);\n    if (player.currentChallenge.reincarnation === 10) {\n        G['acceleratorEffect'] = new Decimal(1);\n    }\n    G['generatorPower'] = new Decimal(1);\n    if (player.upgrades[11] > 0.5 && player.currentChallenge.reincarnation !== 7) {\n        G['generatorPower'] = Decimal.pow(1.02, G['totalAccelerator'])\n    }\n\n}\n\nexport const updateAllMultiplier = (): void => {\n    let a = 0;\n\n    if (player.upgrades[7] > 0) {\n        a += Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10)));\n    }\n    if (player.upgrades[9] > 0) {\n        a += Math.floor(player.acceleratorBought / 10);\n    }\n    if (player.upgrades[21] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[22] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[23] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[24] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[25] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[28] > 0) {\n        a += Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))\n    }\n    if (player.upgrades[30] > 0) {\n        a += Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)));\n    }\n    if (player.upgrades[33] > 0) {\n        a += G['totalAcceleratorBoost']\n    }\n    if (player.upgrades[49] > 0) {\n        a += Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)));\n    }\n    if (player.upgrades[68] > 0) {\n        a += Math.min(2500, Math.floor(Decimal.log(G['taxdivisor'], 10) * 1 / 1000))\n    }\n    if (player.challengecompletions[1] > 0) {\n        a += 1\n    }\n    if (player.achievements[6] > 0.5) {\n        a += Math.floor(player.firstOwnedCoin / 1000)\n    }\n    if (player.achievements[13] > 0.5) {\n        a += Math.floor(player.secondOwnedCoin / 1000)\n    }\n    if (player.achievements[20] > 0.5) {\n        a += Math.floor(player.thirdOwnedCoin / 1000)\n    }\n    if (player.achievements[27] > 0.5) {\n        a += Math.floor(player.fourthOwnedCoin / 1000)\n    }\n    if (player.achievements[34] > 0.5) {\n        a += Math.floor(player.fifthOwnedCoin / 1000)\n    }\n    if (player.achievements[57] > 0.5) {\n        a += 1\n    }\n    if (player.achievements[58] > 0.5) {\n        a += 1\n    }\n    if (player.achievements[59] > 0.5) {\n        a += 1\n    }\n    a += 20 * player.researches[94] * Math.floor(\n        (G['rune1level'] + G['rune2level'] + G['rune3level'] + G['rune4level'] + G['rune5level']) / 8\n    );\n\n    G['freeUpgradeMultiplier'] = a\n\n    if (player.achievements[38] > 0.5) {\n        a += Math.floor(Math.floor(\n            G['rune2level'] / 10 * G['effectiveLevelMult']) * \n            Math.floor(1 + G['rune2level'] / 10 * G['effectiveLevelMult']) / 2\n        ) * 100 / 100;\n    }\n\n    a *= (1 + player.achievements[57] / 100)\n    a *= (1 + player.achievements[58] / 100)\n    a *= (1 + player.achievements[59] / 100)\n    a *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25])\n    if (player.upgrades[34] > 0.5) {\n        a *= 1.03 * 100 / 100\n    }\n    if (player.upgrades[35] > 0.5) {\n        a *= 1.05 / 1.03 * 100 / 100\n    }\n    a *= (1 + 1 / 5 * player.researches[2] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\n    a *= (1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15])\n    a *= (1 + G['rune2level'] / 400 * G['effectiveLevelMult'])\n    a *= (1 + 1 / 20 * player.researches[87])\n    a *= (1 + 1 / 100 * player.researches[128])\n    a *= (1 + 0.8 / 100 * player.researches[143])\n    a *= (1 + 0.6 / 100 * player.researches[158])\n    a *= (1 + 0.4 / 100 * player.researches[173])\n    a *= (1 + 0.2 / 100 * player.researches[188])\n    a *= (1 + 0.01 / 100 * player.researches[200])\n    a *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\n    a *= calculateSigmoidExponential(40, (player.antUpgrades[5-1] + G['bonusant5']) / 1000 * 40 / 39)\n    a *= G['cubeBonusMultiplier'][2]\n    if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\n        a *= 1.25\n    }\n    a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['divisivenessPower'][player.usedCorruptions[1]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))))\n    a += 1000 * hepteractEffective('multiplier')\n    a *= G['challenge15Rewards'].multiplier\n    a *= (1 + 3/10000 * hepteractEffective('multiplier'))\n    a = Math.floor(a)\n    G['freeMultiplier'] = a;\n    G['totalMultiplier'] = G['freeMultiplier'] + player.multiplierBought;\n\n    G['challengeOneLog'] = 3;\n\n    let b = 0;\n    let c = 0;\n    b += Decimal.log(player.transcendShards.add(1), 3);\n    b *= (1 + 11 * player.researches[33] / 100)\n    b *= (1 + 11 * player.researches[34] / 100)\n    b *= (1 + 11 * player.researches[35] / 100)\n    b *= (1 + player.researches[89] / 5)\n    b *= (1 + 10 * G['effectiveRuneBlessingPower'][2])\n\n    c += Math.floor((0.1 * b * CalcECC('transcend', player.challengecompletions[1])))\n    c += (CalcECC('transcend', player.challengecompletions[1]) * 10);\n    G['freeMultiplierBoost'] = c;\n    G['totalMultiplierBoost'] = Math.pow(Math.floor(b) + c, 1 + CalcECC('reincarnation', player.challengecompletions[7]) * 0.04);\n\n    let c7 = 1\n    if (player.challengecompletions[7] > 0.5) {\n        c7 = 1.25\n    }\n\n    G['multiplierPower'] = 2 + 0.005 * G['totalMultiplierBoost'] * c7\n\n    //No MA and Sadistic will always override Transcend Challenges starting in v2.0.0\n    if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\n        if (player.currentChallenge.transcension === 1) {\n            G['multiplierPower'] = 1;\n        }\n        if (player.currentChallenge.transcension === 2) {\n            G['multiplierPower'] = (1.25 + 0.0012 * (b + c) * c7)\n        }\n    }\n\n    if (player.currentChallenge.reincarnation === 7) {\n        G['multiplierPower'] = 1;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        G['multiplierPower'] = 1;\n    }\n\n    G['multiplierEffect'] = Decimal.pow(G['multiplierPower'], G['totalMultiplier']);\n}\n\nexport const multipliers = (): void => {\n    let s = new Decimal(1);\n    let c = new Decimal(1);\n    let crystalExponent = 1 / 3\n    crystalExponent += Math.min(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][3], 0.05 * player.crystalUpgrades[3])\n    crystalExponent += 0.04 * CalcECC('transcend', player.challengecompletions[3])\n    crystalExponent += 0.08 * player.researches[28]\n    crystalExponent += 0.08 * player.researches[29]\n    crystalExponent += 0.04 * player.researches[30]\n    crystalExponent += 8 * player.cubeUpgrades[17]\n    G['prestigeMultiplier'] = Decimal.pow(player.prestigeShards, crystalExponent).add(1);\n\n    let c7 = 1;\n    if (player.currentChallenge.reincarnation === 7) {\n        c7 = 0.05\n    }\n    if (player.currentChallenge.reincarnation === 8) {\n        c7 = 0\n    }\n\n    G['buildingPower'] = \n        1 + (1 - Math.pow(2, -1 / 160)) * c7 * Decimal.log(\n            player.reincarnationShards.add(1), 10) * \n            (1 + 1 / 20 * player.researches[36] + \n            1 / 40 * player.researches[37] + 1 / 40 * \n            player.researches[38]) + \n            (c7 + 0.2) * 0.25 / 1.2 * \n            CalcECC('reincarnation', player.challengecompletions[8]\n        );\n\n    G['buildingPower'] = Math.pow(G['buildingPower'], 1 + player.cubeUpgrades[12] * 0.09)\n    G['buildingPower'] = Math.pow(G['buildingPower'], 1 + player.cubeUpgrades[36] * 0.05)\n    G['reincarnationMultiplier'] = Decimal.pow(G['buildingPower'], G['totalCoinOwned']);\n\n    G['antMultiplier'] = Decimal.pow(Decimal.max(1, player.antPoints), calculateCrumbToCoinExp());\n\n    s = s.times(G['multiplierEffect']);\n    s = s.times(G['acceleratorEffect']);\n    s = s.times(G['prestigeMultiplier']);\n    s = s.times(G['reincarnationMultiplier']);\n    s = s.times(G['antMultiplier'])\n    // PLAT - check\n    const first6CoinUp = new Decimal(G['totalCoinOwned'] + 1).times(Decimal.min(1e30, Decimal.pow(1.008, G['totalCoinOwned'])));\n\n    if (player.upgrades[6] > 0.5) {\n        s = s.times(first6CoinUp);\n    }\n    if (player.upgrades[12] > 0.5) {\n        s = s.times(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)));\n    }\n    if (player.upgrades[20] > 0.5) {\n        // PLAT - check\n        s = s.times(Math.pow(G['totalCoinOwned'] / 4 + 1, 10));\n    }\n    if (player.upgrades[41] > 0.5) {\n        s = s.times(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2)));\n    }\n    if (player.upgrades[43] > 0.5) {\n        s = s.times(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)));\n    }\n    if (player.upgrades[48] > 0.5) {\n        s = s.times(Decimal.pow((G['totalMultiplier'] * G['totalAccelerator'] / 1000 + 1), 8));\n    }\n    if (player.currentChallenge.reincarnation === 6) {\n        s = s.dividedBy(1e250)\n    }\n    if (player.currentChallenge.reincarnation === 7) {\n        s = s.dividedBy(\"1e1250\")\n    }\n    if (player.currentChallenge.reincarnation === 9) {\n        s = s.dividedBy(\"1e2000000\")\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        s = s.dividedBy(\"1e12500000\")\n    }\n    c = Decimal.pow(s, 1 + 0.001 * player.researches[17]);\n    let lol = Decimal.pow(c, 1 + 0.025 * player.upgrades[123])\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[5] > 0) {\n        lol = Decimal.pow(lol, 1.1)\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[14] > 0) {\n        lol = Decimal.pow(lol, 1 + 1 / 20 * player.usedCorruptions[9] * Decimal.log(player.coins.add(1), 10) / (1e7 + Decimal.log(player.coins.add(1), 10)))\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[15] > 0) {\n        lol = Decimal.pow(lol, 1.1)\n    }\n    lol = Decimal.pow(lol, G['challenge15Rewards'].coinExponent)\n    G['globalCoinMultiplier'] = lol;\n    G['globalCoinMultiplier'] = Decimal.pow(G['globalCoinMultiplier'], G['financialcollapsePower'][player.usedCorruptions[9]])\n\n    G['coinOneMulti'] = new Decimal(1);\n    if (player.upgrades[1] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[10] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)));\n    }\n    if (player.upgrades[56] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(\"1e5000\")\n    }\n\n    G['coinTwoMulti'] = new Decimal(1);\n    if (player.upgrades[2] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[13] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)));\n    }\n    if (player.upgrades[19] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1)));\n    }\n    if (player.upgrades[57] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(\"1e7500\")\n    }\n\n    G['coinThreeMulti'] = new Decimal(1);\n    if (player.upgrades[3] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[18] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(Decimal.min(1e125, player.transcendShards.add(1)));\n    }\n    if (player.upgrades[58] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(\"1e15000\")\n    }\n\n    G['coinFourMulti'] = new Decimal(1);\n    if (player.upgrades[4] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[17] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(1e100);\n    }\n    if (player.upgrades[59] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(\"1e25000\")\n    }\n\n    G['coinFiveMulti'] = new Decimal(1);\n    if (player.upgrades[5] > 0.5) {\n        G['coinFiveMulti'] = G['coinFiveMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[60] > 0.5) {\n        G['coinFiveMulti'] = G['coinFiveMulti'].times(\"1e35000\")\n    }\n\n    G['globalCrystalMultiplier'] = new Decimal(1)\n    if (player.achievements[36] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(2)\n    }\n    if (player.achievements[37] > 0.5 && player.prestigePoints.gte(10)) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.log(player.prestigePoints.add(1), 10))\n    }\n    if (player.achievements[43] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier']\n            .times(Decimal.pow(G['rune3level'] / 2 * G['effectiveLevelMult'], 2)\n            .times(Decimal.pow(2, G['rune3level'] * G['effectiveLevelMult'] / 2 - 8))\n            .add(1));\n    }\n    if (player.upgrades[36] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(\"1e5000\", Decimal.pow(player.prestigePoints, 1 / 500)))\n    }\n    if (player.upgrades[63] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(\"1e6000\", Decimal.pow(player.reincarnationPoints.add(1), 6)))\n    }\n    if (player.researches[39] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(G['reincarnationMultiplier'], 1 / 50))\n    }\n\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(Decimal.pow(10, 50 + 2 * player.crystalUpgrades[0]), Decimal.pow(1.05, player.achievementPoints * player.crystalUpgrades[0])))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(Decimal.pow(10, 100 + 5 * player.crystalUpgrades[1]), Decimal.pow(Decimal.log(player.coins.add(1), 10), player.crystalUpgrades[1] / 3)))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1 + Math.min(0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4), 0.001 * player.crystalUpgrades[2]), player.firstOwnedDiamonds + player.secondOwnedDiamonds + player.thirdOwnedDiamonds + player.fourthOwnedDiamonds + player.fifthOwnedDiamonds))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1.01, (player.challengecompletions[1] + player.challengecompletions[2] + player.challengecompletions[3] + player.challengecompletions[4] + player.challengecompletions[5]) * player.crystalUpgrades[4]))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(10, CalcECC('transcend', player.challengecompletions[5])))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1e4, player.researches[5] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(2.5, player.researches[26]))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(2.5, player.researches[27]))\n\n    G['globalMythosMultiplier'] = new Decimal(1)\n\n    if (player.upgrades[37] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2))\n    }\n    if (player.upgrades[42] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)));\n    }\n    if (player.upgrades[47] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Math.pow(1.05, player.achievementPoints)).times(player.achievementPoints + 1)\n    }\n    if (player.upgrades[51] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['totalAcceleratorBoost'], 2))\n    }\n    if (player.upgrades[52] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['globalMythosMultiplier'], 0.025))\n    }\n    if (player.upgrades[64] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(player.reincarnationPoints.add(1), 2))\n    }\n    if (player.researches[40] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['reincarnationMultiplier'], 1 / 250))\n    }\n    G['grandmasterMultiplier'] = new Decimal(1);\n    G['totalMythosOwned'] = player.firstOwnedMythos + player.secondOwnedMythos + player.thirdOwnedMythos + player.fourthOwnedMythos + player.fifthOwnedMythos;\n\n    G['mythosBuildingPower'] = 1 + (CalcECC('transcend', player.challengecompletions[3]) / 200);\n    G['challengeThreeMultiplier'] = Decimal.pow(G['mythosBuildingPower'], G['totalMythosOwned']);\n\n    G['grandmasterMultiplier'] = G['grandmasterMultiplier'].times(G['challengeThreeMultiplier']);\n\n    G['mythosupgrade13'] = new Decimal(1);\n    G['mythosupgrade14'] = new Decimal(1);\n    G['mythosupgrade15'] = new Decimal(1);\n    if (player.upgrades[53] === 1) {\n        G['mythosupgrade13'] = G['mythosupgrade13'].times(Decimal.min(\"1e1250\", Decimal.pow(G['acceleratorEffect'], 1 / 125)))\n    }\n    if (player.upgrades[54] === 1) {\n        G['mythosupgrade14'] = G['mythosupgrade14'].times(Decimal.min(\"1e2000\", Decimal.pow(G['multiplierEffect'], 1 / 180)))\n    }\n    if (player.upgrades[55] === 1) {\n        G['mythosupgrade15'] = G['mythosupgrade15'].times(Decimal.pow(\"1e1000\", Math.min(1000, G['buildingPower'] - 1)))\n    }\n\n/*    //Update 2.5.0: Updated to have a base of 10 instead of 1x\n    G['globalAntMult'] = new Decimal(10);\n    G['globalAntMult'] = G['globalAntMult'].times(1 + 1 / 2500 * Math.pow(G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)), 2))\n    if (player.upgrades[76] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(5)\n    }\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + player.upgrades[77] / 250 + player.researches[96] / 5000, player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts))\n    G['globalAntMult'] = G['globalAntMult'].times(1 + player.upgrades[78] * 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1.11 + player.researches[101] / 1000 + player.researches[162] / 10000, player.antUpgrades[1-1] + G['bonusant1']));\n    G['globalAntMult'] = G['globalAntMult'].times(antSacrificePointsToMultiplier(player.antSacrificePoints))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Math.max(1, player.researchPoints), G['effectiveRuneBlessingPower'][5]))\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1 + G['runeSum'] / 100, G['talisman6Power']))\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])))\n    G['globalAntMult'] = G['globalAntMult'].times(G['cubeBonusMultiplier'][6])\n    if (player.achievements[169] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10))\n    }\n    if (player.achievements[171] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1.16666)\n    }\n    if (player.achievements[172] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1 + 2 * (1 - Math.pow(2, -Math.min(1, player.reincarnationcounter / 7200))))\n    }\n    if (player.upgrades[39] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1.60)\n    }\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])))\n    if (player.researches[147] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10))\n    }\n    if (player.researches[177] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Decimal.log(player.antPoints.add(10), 10), player.researches[177]))\n    }\n\n    if (player.currentChallenge.ascension === 12) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.5)\n    }\n    if (player.currentChallenge.ascension === 13) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.23)\n    }\n    if (player.currentChallenge.ascension === 14) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.2)\n    }\n\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1 - 0.9 / 90 * Math.min(99, sumContents(player.usedCorruptions)))\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], G['extinctionMultiplier'][player.usedCorruptions[7]])\n    G['globalAntMult'] = G['globalAntMult'].times(G['challenge15Rewards'].antSpeed)\n    //V2.5.0: Moved ant shop upgrade as 'uncorruptable'\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1.125, player.shopUpgrades.antSpeed));\n\n\n    if (player.platonicUpgrades[12] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 1 / 100 * player.platonicUpgrades[12], sumContents(player.highestchallengecompletions)))\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[10] > 0) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1.25)\n    } */\n\n    G['globalConstantMult'] = new Decimal(\"1\")\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(1.05 + 0.01 * player.achievements[270] + 0.001 * player.platonicUpgrades[18], player.constantUpgrades[1]))\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(1 + 0.001 * Math.min(100 + 10 * player.achievements[270] + 10 * player.shopUpgrades.constantEX + 1000 * (G['challenge15Rewards'].exponent - 1) + 3 * player.platonicUpgrades[18], player.constantUpgrades[2]), ascendBuildingDR()))\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 2 / 100 * player.researches[139])\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 3 / 100 * player.researches[154])\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 4 / 100 * player.researches[169])\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 5 / 100 * player.researches[184])\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 10 / 100 * player.researches[199])\n    G['globalConstantMult'] = G['globalConstantMult'].times(G['challenge15Rewards'].constantBonus)\n    if (player.platonicUpgrades[5] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(2)\n    }\n    if (player.platonicUpgrades[10] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(10)\n    }\n    if (player.platonicUpgrades[15] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(1e250)\n    }\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(player.overfluxPowder + 1, 10 * player.platonicUpgrades[16]))\n}\n\nexport const resourceGain = (dt: number): void => {\n\n    calculateTotalCoinOwned();\n    calculateTotalAcceleratorBoost();\n\n    updateAllTick();\n    updateAllMultiplier();\n    multipliers();\n    calculatetax();\n    if (G['produceTotal'].gte(0.001)) {\n        const addcoin = Decimal.min(G['produceTotal'].dividedBy(G['taxdivisor']), Decimal.pow(10, G['maxexponent'] - Decimal.log(G['taxdivisorcheck'], 10)))\n        player.coins = player.coins.add(addcoin.times(dt / 0.025));\n        player.coinsThisPrestige = player.coinsThisPrestige.add(addcoin.times(dt / 0.025));\n        player.coinsThisTranscension = player.coinsThisTranscension.add(addcoin.times(dt / 0.025));\n        player.coinsThisReincarnation = player.coinsThisReincarnation.add(addcoin.times(dt / 0.025));\n        player.coinsTotal = player.coinsTotal.add(addcoin.times(dt / 0.025))\n    }\n\n    resetCurrency();\n    if (player.upgrades[93] === 1 && player.coinsThisPrestige.gte(1e16)) {\n        player.prestigePoints = player.prestigePoints.add(Decimal.floor(G['prestigePointGain'].dividedBy(4000).times(dt / 0.025)))\n    }\n    if (player.upgrades[100] === 1 && player.coinsThisTranscension.gte(1e100)) {\n        player.transcendPoints = player.transcendPoints.add(Decimal.floor(G['transcendPointGain'].dividedBy(4000).times(dt / 0.025)))\n    }\n    if (player.cubeUpgrades[28] > 0 && player.transcendShards.gte(1e300)) {\n        player.reincarnationPoints = player.reincarnationPoints.add(Decimal.floor(G['reincarnationPointGain'].dividedBy(4000).times(dt / 0.025)))\n    }\n    G['produceFirstDiamonds'] = player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).times(player.firstProduceDiamonds).times(G['globalCrystalMultiplier'])\n    G['produceSecondDiamonds'] = player.secondGeneratedDiamonds.add(player.secondOwnedDiamonds).times(player.secondProduceDiamonds).times(G['globalCrystalMultiplier'])\n    G['produceThirdDiamonds'] = player.thirdGeneratedDiamonds.add(player.thirdOwnedDiamonds).times(player.thirdProduceDiamonds).times(G['globalCrystalMultiplier'])\n    G['produceFourthDiamonds'] = player.fourthGeneratedDiamonds.add(player.fourthOwnedDiamonds).times(player.fourthProduceDiamonds).times(G['globalCrystalMultiplier'])\n    G['produceFifthDiamonds'] = player.fifthGeneratedDiamonds.add(player.fifthOwnedDiamonds).times(player.fifthProduceDiamonds).times(G['globalCrystalMultiplier'])\n\n    player.fourthGeneratedDiamonds = player.fourthGeneratedDiamonds.add(G['produceFifthDiamonds'].times(dt / 0.025))\n    player.thirdGeneratedDiamonds = player.thirdGeneratedDiamonds.add(G['produceFourthDiamonds'].times(dt / 0.025))\n    player.secondGeneratedDiamonds = player.secondGeneratedDiamonds.add(G['produceThirdDiamonds'].times(dt / 0.025))\n    player.firstGeneratedDiamonds = player.firstGeneratedDiamonds.add(G['produceSecondDiamonds'].times(dt / 0.025))\n    G['produceDiamonds'] = G['produceFirstDiamonds'];\n\n    if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\n        player.prestigeShards = player.prestigeShards.add(G['produceDiamonds'].times(dt / 0.025))\n    }\n\n    G['produceFifthMythos'] = player.fifthGeneratedMythos.add(player.fifthOwnedMythos).times(player.fifthProduceMythos).times(G['globalMythosMultiplier']).times(G['grandmasterMultiplier']).times(G['mythosupgrade15'])\n    G['produceFourthMythos'] = player.fourthGeneratedMythos.add(player.fourthOwnedMythos).times(player.fourthProduceMythos).times(G['globalMythosMultiplier'])\n    G['produceThirdMythos'] = player.thirdGeneratedMythos.add(player.thirdOwnedMythos).times(player.thirdProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade14'])\n    G['produceSecondMythos'] = player.secondGeneratedMythos.add(player.secondOwnedMythos).times(player.secondProduceMythos).times(G['globalMythosMultiplier'])\n    G['produceFirstMythos'] = player.firstGeneratedMythos.add(player.firstOwnedMythos).times(player.firstProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade13'])\n    player.fourthGeneratedMythos = player.fourthGeneratedMythos.add(G['produceFifthMythos'].times(dt / 0.025));\n    player.thirdGeneratedMythos = player.thirdGeneratedMythos.add(G['produceFourthMythos'].times(dt / 0.025));\n    player.secondGeneratedMythos = player.secondGeneratedMythos.add(G['produceThirdMythos'].times(dt / 0.025));\n    player.firstGeneratedMythos = player.firstGeneratedMythos.add(G['produceSecondMythos'].times(dt / 0.025));\n\n\n    G['produceMythos'] = new Decimal(\"0\");\n    G['produceMythos'] = (player.firstGeneratedMythos.add(player.firstOwnedMythos)).times(player.firstProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade13']);\n    G['producePerSecondMythos'] = G['produceMythos'].times(40);\n\n    let pm = new Decimal('1');\n    if (player.upgrades[67] > 0.5) {\n        pm = pm.times(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles))\n    }\n    G['produceFifthParticles'] = player.fifthGeneratedParticles.add(player.fifthOwnedParticles).times(player.fifthProduceParticles)\n    G['produceFourthParticles'] = player.fourthGeneratedParticles.add(player.fourthOwnedParticles).times(player.fourthProduceParticles)\n    G['produceThirdParticles'] = player.thirdGeneratedParticles.add(player.thirdOwnedParticles).times(player.thirdProduceParticles)\n    G['produceSecondParticles'] = player.secondGeneratedParticles.add(player.secondOwnedParticles).times(player.secondProduceParticles)\n    G['produceFirstParticles'] = player.firstGeneratedParticles.add(player.firstOwnedParticles).times(player.firstProduceParticles).times(pm)\n    player.fourthGeneratedParticles = player.fourthGeneratedParticles.add(G['produceFifthParticles'].times(dt / 0.025));\n    player.thirdGeneratedParticles = player.thirdGeneratedParticles.add(G['produceFourthParticles'].times(dt / 0.025));\n    player.secondGeneratedParticles = player.secondGeneratedParticles.add(G['produceThirdParticles'].times(dt / 0.025));\n    player.firstGeneratedParticles = player.firstGeneratedParticles.add(G['produceSecondParticles'].times(dt / 0.025));\n\n    G['produceParticles'] = new Decimal(\"0\");\n    G['produceParticles'] = (player.firstGeneratedParticles.add(player.firstOwnedParticles)).times(player.firstProduceParticles).times(pm);\n    G['producePerSecondParticles'] = G['produceParticles'].times(40);\n\n    if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\n        player.transcendShards = player.transcendShards.add(G['produceMythos'].times(dt / 0.025));\n    }\n    if (player.currentChallenge.reincarnation !== 10) {\n        player.reincarnationShards = player.reincarnationShards.add(G['produceParticles'].times(dt / 0.025))\n    }\n\n    createAnts(dt);\n    for (let i = 1; i <= 5; i++) {\n        G['ascendBuildingProduction'][G['ordinals'][5 - i as ZeroToFour]] = (player[`ascendBuilding${6 - i as OneToFive}` as const]['generated']).add(player[`ascendBuilding${6 - i as OneToFive}` as const]['owned']).times(player[`ascendBuilding${i as OneToFive}` as const]['multiplier']).times(G['globalConstantMult'])\n\n        if (i !== 5) {\n            const fiveMinusI = 5 - i as 1|2|3|4;\n            player[`ascendBuilding${fiveMinusI}` as const]['generated'] = player[`ascendBuilding${fiveMinusI}` as const]['generated']\n                .add(G['ascendBuildingProduction'][G['ordinals'][fiveMinusI]].times(dt))\n        }\n    }\n\n    player.ascendShards = player.ascendShards.add(G['ascendBuildingProduction'].first.times(dt))\n\n    if (player.ascensionCount > 0) {\n        ascensionAchievementCheck(2)\n    }\n\n    if (player.researches[71] > 0.5 && player.challengecompletions[1] < (Math.min(player.highestchallengecompletions[1], 25 + 5 * player.researches[66] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.25 * G['challengeBaseRequirements'][0] * Math.pow(1 + player.challengecompletions[1], 2)))) {\n        player.challengecompletions[1] += 1;\n        challengeDisplay(1, false);\n        challengeachievementcheck(1, true)\n        updateChallengeLevel(1)\n    }\n    if (player.researches[72] > 0.5 && player.challengecompletions[2] < (Math.min(player.highestchallengecompletions[2], 25 + 5 * player.researches[67] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.6 * G['challengeBaseRequirements'][1] * Math.pow(1 + player.challengecompletions[2], 2)))) {\n        player.challengecompletions[2] += 1\n        challengeDisplay(2, false)\n        challengeachievementcheck(2, true)\n        updateChallengeLevel(2)\n    }\n    if (player.researches[73] > 0.5 && player.challengecompletions[3] < (Math.min(player.highestchallengecompletions[3], 25 + 5 * player.researches[68] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.7 * G['challengeBaseRequirements'][2] * Math.pow(1 + player.challengecompletions[3], 2)))) {\n        player.challengecompletions[3] += 1\n        challengeDisplay(3, false)\n        challengeachievementcheck(3, true)\n        updateChallengeLevel(3)\n    }\n    if (player.researches[74] > 0.5 && player.challengecompletions[4] < (Math.min(player.highestchallengecompletions[4], 25 + 5 * player.researches[69] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.45 * G['challengeBaseRequirements'][3] * Math.pow(1 + player.challengecompletions[4], 2)))) {\n        player.challengecompletions[4] += 1\n        challengeDisplay(4, false)\n        challengeachievementcheck(4, true)\n        updateChallengeLevel(4)\n    }\n    if (player.researches[75] > 0.5 && player.challengecompletions[5] < (Math.min(player.highestchallengecompletions[5], 25 + 5 * player.researches[70] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 2 * G['challengeBaseRequirements'][4] * Math.pow(1 + player.challengecompletions[5], 2)))) {\n        player.challengecompletions[5] += 1\n        challengeDisplay(5, false)\n        challengeachievementcheck(5, true)\n        updateChallengeLevel(5)\n    }\n\n    if (player.coins.gte(1000) && player.unlocks.coinone === false) {\n        player.unlocks.coinone = true;\n        revealStuff();\n    }\n    if (player.coins.gte(20000) && player.unlocks.cointwo === false) {\n        player.unlocks.cointwo = true;\n        revealStuff();\n    }\n    if (player.coins.gte(100000) && player.unlocks.cointhree === false) {\n        player.unlocks.cointhree = true;\n        revealStuff();\n    }\n    if (player.coins.gte(8e6) && player.unlocks.coinfour === false) {\n        player.unlocks.coinfour = true;\n        revealStuff();\n    }\n    if (player.antPoints.gte(3) && player.achievements[169] === 0) {\n        achievementaward(169)\n    }\n    if (player.antPoints.gte(1e5) && player.achievements[170] === 0) {\n        achievementaward(170)\n    }\n    if (player.antPoints.gte(666666666) && player.achievements[171] === 0) {\n        achievementaward(171)\n    }\n    if (player.antPoints.gte(1e20) && player.achievements[172] === 0) {\n        achievementaward(172)\n    }\n    if (player.antPoints.gte(1e40) && player.achievements[173] === 0) {\n        achievementaward(173)\n    }\n    if (player.antPoints.gte(\"1e500\") && player.achievements[174] === 0) {\n        achievementaward(174)\n    }\n    if (player.antPoints.gte(\"1e2500\") && player.achievements[175] === 0) {\n        achievementaward(175)\n    }\n\n    const chal = player.currentChallenge.transcension;\n    const reinchal = player.currentChallenge.reincarnation;\n    const ascendchal = player.currentChallenge.ascension;\n    if (chal !== 0) {\n        if (player.coinsThisTranscension.gte(challengeRequirement(chal, player.challengecompletions[chal], chal))) { \n            resetCheck('challenge', false);\n            G['autoChallengeTimerIncrement'] = 0;\n        }\n    }\n    if (reinchal < 9 && reinchal !== 0) {\n        if (player.transcendShards.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\n            resetCheck('reincarnationchallenge', false)\n            G['autoChallengeTimerIncrement'] = 0;\n        }\n    }\n    if (reinchal >= 9) {\n        if (player.coins.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\n            resetCheck('reincarnationchallenge', false)\n            G['autoChallengeTimerIncrement'] = 0;\n        }\n    }\n    if (ascendchal !== 0 && ascendchal < 15) {\n        if (player.challengecompletions[10] >= challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal)) {\n            resetCheck('ascensionChallenge', false)\n            challengeachievementcheck(ascendchal, true)\n        }\n    }\n    if (ascendchal === 15) {\n        if (player.coins.gte(challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal))) {\n            resetCheck('ascensionChallenge', false)\n        }\n    }\n}\n\nexport const updateAntMultipliers = (): void => {\n    //Update 2.5.0: Updated to have a base of 10 instead of 1x\n    G['globalAntMult'] = new Decimal(10);\n    G['globalAntMult'] = G['globalAntMult'].times(1 + 1 / 2500 * Math.pow(G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)), 2))\n    if (player.upgrades[76] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(5)\n    }\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + player.upgrades[77] / 250 + player.researches[96] / 5000, player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts))\n    G['globalAntMult'] = G['globalAntMult'].times(1 + player.upgrades[78] * 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1.11 + player.researches[101] / 1000 + player.researches[162] / 10000, player.antUpgrades[1-1] + G['bonusant1']));\n    G['globalAntMult'] = G['globalAntMult'].times(antSacrificePointsToMultiplier(player.antSacrificePoints))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Math.max(1, player.researchPoints), G['effectiveRuneBlessingPower'][5]))\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1 + G['runeSum'] / 100, G['talisman6Power']))\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])))\n    G['globalAntMult'] = G['globalAntMult'].times(G['cubeBonusMultiplier'][6])\n    if (player.achievements[169] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10))\n    }\n    if (player.achievements[171] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1.16666)\n    }\n    if (player.achievements[172] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1 + 2 * (1 - Math.pow(2, -Math.min(1, player.reincarnationcounter / 7200))))\n    }\n    if (player.upgrades[39] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1.60)\n    }\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])))\n    if (player.researches[147] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10))\n    }\n    if (player.researches[177] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Decimal.log(player.antPoints.add(10), 10), player.researches[177]))\n    }\n\n    if (player.currentChallenge.ascension === 12) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.5)\n    }\n    if (player.currentChallenge.ascension === 13) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.23)\n    }\n    if (player.currentChallenge.ascension === 14) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.2)\n    }\n\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1 - 0.9 / 90 * Math.min(99, sumContents(player.usedCorruptions)))\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], G['extinctionMultiplier'][player.usedCorruptions[7]])\n    G['globalAntMult'] = G['globalAntMult'].times(G['challenge15Rewards'].antSpeed)\n    //V2.5.0: Moved ant shop upgrade as 'uncorruptable'\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1.125, player.shopUpgrades.antSpeed));\n\n\n    if (player.platonicUpgrades[12] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 1 / 100 * player.platonicUpgrades[12], sumContents(player.highestchallengecompletions)))\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[10] > 0) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1.25)\n    }\n}\n\nexport const createAnts = (dt: number): void => {\n    updateAntMultipliers();\n    G['antEightProduce'] = player.eighthGeneratedAnts.add(player.eighthOwnedAnts).times(player.eighthProduceAnts).times(G['globalAntMult'])\n    G['antSevenProduce'] = player.seventhGeneratedAnts.add(player.seventhOwnedAnts).times(player.seventhProduceAnts).times(G['globalAntMult'])\n    G['antSixProduce'] = player.sixthGeneratedAnts.add(player.sixthOwnedAnts).times(player.sixthProduceAnts).times(G['globalAntMult'])\n    G['antFiveProduce'] = player.fifthGeneratedAnts.add(player.fifthOwnedAnts).times(player.fifthProduceAnts).times(G['globalAntMult'])\n    G['antFourProduce'] = player.fourthGeneratedAnts.add(player.fourthOwnedAnts).times(player.fourthProduceAnts).times(G['globalAntMult'])\n    G['antThreeProduce'] = player.thirdGeneratedAnts.add(player.thirdOwnedAnts).times(player.thirdProduceAnts).times(G['globalAntMult'])\n    G['antTwoProduce'] = player.secondGeneratedAnts.add(player.secondOwnedAnts).times(player.secondProduceAnts).times(G['globalAntMult'])\n    G['antOneProduce'] = player.firstGeneratedAnts.add(player.firstOwnedAnts).times(player.firstProduceAnts).times(G['globalAntMult'])\n    player.seventhGeneratedAnts = player.seventhGeneratedAnts.add(G['antEightProduce'].times(dt / 1))\n    player.sixthGeneratedAnts = player.sixthGeneratedAnts.add(G['antSevenProduce'].times(dt / 1))\n    player.fifthGeneratedAnts = player.fifthGeneratedAnts.add(G['antSixProduce'].times(dt / 1))\n    player.fourthGeneratedAnts = player.fourthGeneratedAnts.add(G['antFiveProduce'].times(dt / 1))\n    player.thirdGeneratedAnts = player.thirdGeneratedAnts.add(G['antFourProduce'].times(dt / 1))\n    player.secondGeneratedAnts = player.secondGeneratedAnts.add(G['antThreeProduce'].times(dt / 1))\n    player.firstGeneratedAnts = player.firstGeneratedAnts.add(G['antTwoProduce'].times(dt / 1))\n\n    player.antPoints = player.antPoints.add(G['antOneProduce'].times(dt / 1))\n}\n\nexport const resetCurrency = (): void => {\n    let prestigePow = 0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100\n    let transcendPow = 0.03\n\n    // Calculates the conversion exponent for resets (Challenges 5 and 10 reduce the exponent accordingly).\n    if (player.currentChallenge.transcension === 5) {\n        prestigePow = 0.01 / (1 + player.challengecompletions[5]);\n        transcendPow = 0.001;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        prestigePow = (1e-4) / (1 + player.challengecompletions[10]);\n        transcendPow = 0.001;\n    }\n    prestigePow *= G['deflationMultiplier'][player.usedCorruptions[6]]\n    //Prestige Point Formulae\n    G['prestigePointGain'] = Decimal.floor(Decimal.pow(player.coinsThisPrestige.dividedBy(1e12), prestigePow));\n    if (player.upgrades[16] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\n        G['prestigePointGain'] = G['prestigePointGain'].times(Decimal.min(Decimal.pow(10, 1e33), Decimal.pow(G['acceleratorEffect'], 1 / 3 * G['deflationMultiplier'][player.usedCorruptions[6]])));\n    }\n\n    //Transcend Point Formulae\n    G['transcendPointGain'] = Decimal.floor(Decimal.pow(player.coinsThisTranscension.dividedBy(1e100), transcendPow));\n    if (player.upgrades[44] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\n        G['transcendPointGain'] = G['transcendPointGain'].times(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)));\n    }\n\n    //Reincarnation Point Formulae\n    G['reincarnationPointGain'] = Decimal.floor(Decimal.pow(player.transcendShards.dividedBy(1e300), 0.01));\n    if (player.currentChallenge.reincarnation !== 0) {\n        G['reincarnationPointGain'] = Decimal.pow(G['reincarnationPointGain'], 0.01)\n    }\n    if (player.achievements[50] === 1) {\n        G['reincarnationPointGain'] = G['reincarnationPointGain'].times(2)\n    }\n    if (player.upgrades[65] > 0.5) {\n        G['reincarnationPointGain'] = G['reincarnationPointGain'].times(5)\n    }\n    if (player.currentChallenge.ascension === 12) {\n        G['reincarnationPointGain'] = new Decimal(\"0\")\n    }\n}\n\nexport const resetCheck = async (i: string, manual = true, leaving = false): Promise<void> => {\n    if (i === 'prestige') {\n        if (player.coinsThisPrestige.gte(1e16) || G['prestigePointGain'].gte(100)) {\n            if (manual) {\n                resetConfirmation('prestige');\n            } else {\n                resetachievementcheck(1);\n                reset(\"prestige\");\n            }\n        }\n    }\n    if (i === 'transcend') {\n        if ((player.coinsThisTranscension.gte(1e100) || G['transcendPointGain'].gte(0.5)) && player.currentChallenge.transcension === 0) {\n            if (manual) {\n                resetConfirmation('transcend');\n            }\n            if (!manual) {\n                resetachievementcheck(2);\n                reset(\"transcension\");\n            }\n        }\n    }\n    if (i === 'challenge') {\n        const q = player.currentChallenge.transcension;\n        const maxCompletions = getMaxChallenges(q);\n        if (player.currentChallenge.transcension !== 0) {\n            const reqCheck = (comp: number) => player.coinsThisTranscension.gte(challengeRequirement(q, comp, q));\n\n            if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\n                const maxInc = player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.ascension !== 13 ? 10 : 1; // TODO: Implement the shop upgrade levels here\n                let counter = 0;\n                let comp = player.challengecompletions[q];\n                while (counter < maxInc) {\n                    if (reqCheck(comp) && comp < maxCompletions) {\n                        comp++;\n                    }\n                    counter++;\n                }\n                player.challengecompletions[q] = comp;\n                challengeDisplay(q, false)\n                updateChallengeLevel(q)\n            }\n            if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                    player.highestchallengecompletions[q] += 1;\n                    challengeDisplay(q, false)\n                    updateChallengeLevel(q)\n                    highestChallengeRewards(q, player.highestchallengecompletions[q])\n                    calculateCubeBlessings();\n                }\n\n            }\n\n            challengeachievementcheck(q);\n            if (player.shopUpgrades.instantChallenge === 0 || leaving) {\n                reset(\"transcensionChallenge\", false, \"leaveChallenge\");\n                player.transcendCount -= 1;\n            }\n\n        }\n        if (!player.retrychallenges || manual || player.challengecompletions[q] >= (maxCompletions)) {\n            toggleAutoChallengeModeText(\"ENTER\");\n            player.currentChallenge.transcension = 0;\n            updateChallengeDisplay();\n        }\n    }\n\n    if (i === \"reincarnate\") {\n        if (G['reincarnationPointGain'].gt(0.5) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n            if (manual) {\n                resetConfirmation('reincarnate');\n            }\n            if (!manual) {\n                resetachievementcheck(3);\n                reset(\"reincarnation\");\n            }\n        }\n    }\n    if (i === \"reincarnationchallenge\" && player.currentChallenge.reincarnation !== 0) {\n        const q = player.currentChallenge.reincarnation;\n        const maxCompletions = getMaxChallenges(q);\n        if (player.currentChallenge.transcension !== 0) {\n            player.currentChallenge.transcension = 0\n        }\n        const reqCheck = (comp: number) => {\n            if (q <= 8) {\n                return player.transcendShards.gte(challengeRequirement(q, comp, q))\n            } else { // challenges 9 and 10\n                return player.coins.gte(challengeRequirement(q, comp, q))\n            }\n        }\n        if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\n            const maxInc = player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.ascension !== 13 ? 10 : 1; // TODO: Implement the shop upgrade levels here\n            let counter = 0;\n            let comp = player.challengecompletions[q];\n            while (counter < maxInc) {\n                if (reqCheck(comp) && comp < maxCompletions) {\n                    comp++;\n                }\n                counter++;\n            }\n            player.challengecompletions[q] = comp;\n            challengeDisplay(q, true);\n            updateChallengeLevel(q);\n        }\n        if (player.shopUpgrades.instantChallenge === 0 || leaving) { // TODO: Implement the upgrade levels here\n            reset(\"reincarnationChallenge\", false, \"leaveChallenge\");\n            player.reincarnationCount -= 1;\n        }\n        challengeachievementcheck(q);\n        if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n            while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                player.highestchallengecompletions[q] += 1;\n                highestChallengeRewards(q, player.highestchallengecompletions[q])\n                calculateHypercubeBlessings();\n                calculateTesseractBlessings();\n                calculateCubeBlessings();\n            }\n        }\n        if (!player.retrychallenges || manual || player.challengecompletions[q] === maxCompletions) {\n            reset(\"reincarnationChallenge\", false, \"leaveChallenge\");\n            toggleAutoChallengeModeText(\"ENTER\");\n            player.currentChallenge.reincarnation = 0;\n            if (player.shopUpgrades.instantChallenge > 0) {\n                for (let i = 1; i <= 5; i++) {\n                    player.challengecompletions[i] = player.highestchallengecompletions[i];\n                }\n            }\n            updateChallengeDisplay();\n            calculateRuneLevels();\n            calculateAnts();\n        }\n    }\n\n    if (i === \"ascend\") {\n        if (player.challengecompletions[10] > 0) {\n            if (manual) {\n                resetConfirmation('ascend');\n            }\n        }\n    }\n\n    if (i === \"ascensionChallenge\" && player.currentChallenge.ascension !== 0) {\n        let conf = true\n        if (manual) {\n            conf = await Confirm('Are you absolutely sure that you want to exit the Ascension Challenge? You will need to clear challenge 10 again before you can attempt the challenge again!')\n        }\n        if (!conf) {\n            return;\n        }\n        const a = player.currentChallenge.ascension;\n        const r = player.currentChallenge.reincarnation;\n        const t = player.currentChallenge.transcension;\n\n        if (player.challengecompletions[10] >= 50 && a === 11 && player.usedCorruptions[7] >= 5 && player.achievements[247] < 1) {\n            achievementaward(247)\n        }\n\n        const maxCompletions = getMaxChallenges(a)\n        if (a !== 0 && a < 15) {\n            if (player.challengecompletions[10] >= challengeRequirement(a, player.challengecompletions[a], a) && player.challengecompletions[a] < maxCompletions) {\n                player.challengecompletions[a] += 1;\n            }\n        }\n        if (a === 15) {\n            if (player.coins.gte(challengeRequirement(a, player.challengecompletions[a], a)) && player.challengecompletions[a] < maxCompletions) {\n                player.challengecompletions[a] += 1;\n            } else {\n                if (player.coins.gte(Decimal.pow(10, player.challenge15Exponent / challenge15ScoreMultiplier()))) {\n                    player.challenge15Exponent = Decimal.log(player.coins.add(1), 10) * challenge15ScoreMultiplier();\n                    c15RewardUpdate();\n                }\n            }\n        }\n        if (r !== 0) {\n            // bandaid\n            if (typeof player.currentChallenge === 'string') {\n                player.currentChallenge = { ...blankSave.currentChallenge };\n            }\n        }\n        if (t !== 0) {\n            player.currentChallenge.transcension = 0;\n        }\n        challengeDisplay(a, true)\n        reset(\"ascensionChallenge\")\n\n        if (player.challengecompletions[a] > player.highestchallengecompletions[a]) {\n            player.highestchallengecompletions[a] += 1;\n            player.wowHypercubes.add(1);\n        }\n\n        if (!player.retrychallenges || manual || player.challengecompletions[a] >= maxCompletions || a === 15) {\n            player.currentChallenge.ascension = 0;\n        }\n        updateChallengeDisplay();\n        challengeachievementcheck(a, true)\n    }\n}\n\nexport const resetConfirmation = async (i: string): Promise<void> => {\n    if (i === 'prestige') {\n        if (player.toggles[28] === true) {\n            const r = await Confirm(`Prestige will reset coin upgrades, coin producers AND crystals. The first prestige unlocks new features. Would you like to prestige? [Toggle this message in settings.]`)\n            if (r === true) {\n                resetachievementcheck(1);\n                reset(\"prestige\");\n            }\n        } else {\n            resetachievementcheck(1);\n            reset(\"prestige\");\n        }\n    }\n    if (i === 'transcend') {\n        if (player.toggles[29] === true) {\n            const z = await Confirm(\"Transcends will reset coin and prestige upgrades, coin producers, crystal producers AND diamonds. The first transcension unlocks new features. Would you like to prestige? [Toggle this message in settings.]\")\n            if (z === true) {\n                resetachievementcheck(2);\n                reset(\"transcension\");\n            }\n        } else {\n            resetachievementcheck(2);\n            reset(\"transcension\");\n        }\n    }\n    if (i === 'reincarnate') {\n        if (player.currentChallenge.ascension !== 12) {\n            if (player.toggles[30] === true) {\n                const z = await Confirm(\"Reincarnating will reset EVERYTHING but in return you will get extraordinarily powerful Particles, and unlock some very strong upgrades and some new features. would you like to Reincarnate? [Disable this message in settings]\")\n                if (z === true) {\n                    resetachievementcheck(3);\n                    reset(\"reincarnation\");\n                }\n            } else {\n                resetachievementcheck(3);\n                reset(\"reincarnation\");\n            }\n        }\n    }\n    if (i === 'ascend') {\n        const z = !player.toggles[31] || \n                  await Confirm(\"Ascending will reset all buildings, rune levels [NOT CAP!], talismans, most researches, and the anthill feature for Cubes of Power. Continue? [It is strongly advised you get R5x24 first.]\")\n        if (z) {\n            reset(\"ascension\");\n        }\n    }\n}\n\nexport const updateAll = (): void => {\n    G['uFourteenMulti'] = new Decimal(1);\n    G['uFifteenMulti'] = new Decimal(1);\n\n    if (player.upgrades[14] > 0.5) {\n        G['uFourteenMulti'] = Decimal.pow(1.15, G['freeAccelerator'])\n    }\n    if (player.upgrades[15] > 0.5) {\n        G['uFifteenMulti'] = Decimal.pow(1.15, G['freeAccelerator'])\n    }\n\n    if (player.researches[200] >= 1e5 && player.achievements[250] < 1) {\n        achievementaward(250)\n    }\n    if (player.cubeUpgrades[50] >= 1e5 && player.achievements[251] < 1) {\n        achievementaward(251)\n    }\n\n//Autobuy \"Building\" Tab\n\n    if (player.toggles[1] === true && player.upgrades[81] === 1 && player.coins.gte(player.firstCostCoin)) {\n        buyMax(1, 'Coin')\n    }\n    if (player.toggles[2] === true && player.upgrades[82] === 1 && player.coins.gte(player.secondCostCoin)) {\n        buyMax(2, 'Coin')\n    }\n    if (player.toggles[3] === true && player.upgrades[83] === 1 && player.coins.gte(player.thirdCostCoin)) {\n        buyMax(3, 'Coin')\n    }\n    if (player.toggles[4] === true && player.upgrades[84] === 1 && player.coins.gte(player.fourthCostCoin)) {\n        buyMax(4, 'Coin')\n    }\n    if (player.toggles[5] === true && player.upgrades[85] === 1 && player.coins.gte(player.fifthCostCoin)) {\n        buyMax(5, 'Coin')\n    }\n    if (player.toggles[6] === true && player.upgrades[86] === 1 && player.coins.gte(player.acceleratorCost)) {\n        buyAccelerator(true);\n    }\n    if (player.toggles[7] === true && player.upgrades[87] === 1 && player.coins.gte(player.multiplierCost)) {\n        buyMultiplier(true);\n    }\n    if (player.toggles[8] === true && player.upgrades[88] === 1 && player.prestigePoints.gte(player.acceleratorBoostCost)) {\n        boostAccelerator(true);\n    }\n\n//Autobuy \"Prestige\" Tab\n\n    if (player.toggles[10] === true && player.achievements[78] === 1 && player.prestigePoints.gte(player.firstCostDiamonds)) {\n        buyMax(1, 'Diamonds')\n    }\n    if (player.toggles[11] === true && player.achievements[85] === 1 && player.prestigePoints.gte(player.secondCostDiamonds)) {\n        buyMax(2, 'Diamonds')\n    }\n    if (player.toggles[12] === true && player.achievements[92] === 1 && player.prestigePoints.gte(player.thirdCostDiamonds)) {\n        buyMax(3, 'Diamonds')\n    }\n    if (player.toggles[13] === true && player.achievements[99] === 1 && player.prestigePoints.gte(player.fourthCostDiamonds)) {\n        buyMax(4, 'Diamonds')\n    }\n    if (player.toggles[14] === true && player.achievements[106] === 1 && player.prestigePoints.gte(player.fifthCostDiamonds)) {\n        buyMax(5, 'Diamonds')\n    }\n\n    let c = 0;\n    c += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        c += 10\n    }\n    if (player.achievements[79] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][0] + G['crystalUpgradeCostIncrement'][0] * Math.floor(Math.pow(player.crystalUpgrades[0] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(1, true)\n    }\n    if (player.achievements[86] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][1] + G['crystalUpgradeCostIncrement'][1] * Math.floor(Math.pow(player.crystalUpgrades[1] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(2, true)\n    }\n    if (player.achievements[93] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][2] + G['crystalUpgradeCostIncrement'][2] * Math.floor(Math.pow(player.crystalUpgrades[2] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(3, true)\n    }\n    if (player.achievements[100] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][3] + G['crystalUpgradeCostIncrement'][3] * Math.floor(Math.pow(player.crystalUpgrades[3] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(4, true)\n    }\n    if (player.achievements[107] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][4] + G['crystalUpgradeCostIncrement'][4] * Math.floor(Math.pow(player.crystalUpgrades[4] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(5, true)\n    }\n\n//Autobuy \"Transcension\" Tab\n\n    if (player.toggles[16] === true && player.upgrades[94] === 1 && player.transcendPoints.gte(player.firstCostMythos)) {\n        buyMax(1, 'Mythos')\n    }\n    if (player.toggles[17] === true && player.upgrades[95] === 1 && player.transcendPoints.gte(player.secondCostMythos)) {\n        buyMax(2, 'Mythos')\n    }\n    if (player.toggles[18] === true && player.upgrades[96] === 1 && player.transcendPoints.gte(player.thirdCostMythos)) {\n        buyMax(3, 'Mythos')\n    }\n    if (player.toggles[19] === true && player.upgrades[97] === 1 && player.transcendPoints.gte(player.fourthCostMythos)) {\n        buyMax(4, 'Mythos')\n    }\n    if (player.toggles[20] === true && player.upgrades[98] === 1 && player.transcendPoints.gte(player.fifthCostMythos)) {\n        buyMax(5, 'Mythos')\n    }\n\n//Autobuy \"Reincarnation\" Tab\n\n    if (player.toggles[22] === true && player.reincarnationPoints.gte(player.firstCostParticles)) {\n        buyParticleBuilding(1, true)\n    }\n    if (player.toggles[23] === true && player.reincarnationPoints.gte(player.secondCostParticles)) {\n        buyParticleBuilding(2, true)\n    }\n    if (player.toggles[24] === true && player.reincarnationPoints.gte(player.thirdCostParticles)) {\n        buyParticleBuilding(3, true)\n    }\n    if (player.toggles[25] === true && player.reincarnationPoints.gte(player.fourthCostParticles)) {\n        buyParticleBuilding(4, true)\n    }\n    if (player.toggles[26] === true && player.reincarnationPoints.gte(player.fifthCostParticles)) {\n        buyParticleBuilding(5, true)\n    }\n\n//Autobuy \"ascension\" tab\n    if (player.researches[175] > 0) {\n        for (let i = 1; i <= 10; i++) {\n            if (player.ascendShards.gte(getConstUpgradeMetadata(i).pop())) {\n                buyConstantUpgrades(i, true);\n            }\n        }\n    }\n\n//Autobuy tesseract buildings\n    if ((player.researches[190] > 0) && (player.tesseractAutoBuyerToggle == 1)) {\n        const ownedBuildings: TesseractBuildings = [null, null, null, null, null];\n        for (let i = 1; i <= 5; i++) {\n            if (player.autoTesseracts[i]) {\n                ownedBuildings[i-1] = player[`ascendBuilding${i as OneToFive}` as const]['owned'];\n            }\n        }\n        const budget = Number(player.wowTesseracts) - player.tesseractAutoBuyerAmount;\n        const buyToBuildings = calculateTessBuildingsInBudget(ownedBuildings, budget);\n        // Prioritise buying buildings from highest tier to lowest,\n        // in case there are any off-by-ones or floating point errors.\n        for (let i = 5; i >= 1; i--) {\n            const buyFrom = ownedBuildings[i-1];\n            const buyTo = buyToBuildings[i-1];\n            if (buyFrom !== null && buyTo !== null && buyTo !== buyFrom) {\n                buyTesseractBuilding(i as OneToFive, buyTo - buyFrom);\n            }\n        }\n    }\n\n\n//Generation\n\n\n    if (player.upgrades[101] > 0.5) {\n        player.fourthGeneratedCoin = player.fourthGeneratedCoin.add((player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G['uFifteenMulti']).times(G['generatorPower']));\n    }\n    if (player.upgrades[102] > 0.5) {\n        player.thirdGeneratedCoin = player.thirdGeneratedCoin.add((player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G['uFourteenMulti']).times(G['generatorPower']));\n    }\n    if (player.upgrades[103] > 0.5) {\n        player.secondGeneratedCoin = player.secondGeneratedCoin.add((player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G['generatorPower']));\n    }\n    if (player.upgrades[104] > 0.5) {\n        player.firstGeneratedCoin = player.firstGeneratedCoin.add((player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G['generatorPower']));\n    }\n    if (player.upgrades[105] > 0.5) {\n        player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(player.firstOwnedCoin);\n    }\n    let p = 1;\n    p += 1 / 100 * (player.achievements[71] + player.achievements[72] + player.achievements[73] + player.achievements[74] + player.achievements[75] + player.achievements[76] + player.achievements[77])\n\n    let a = 0;\n    if (player.upgrades[106] > 0.5) {\n        a += 0.10\n    }\n    if (player.upgrades[107] > 0.5) {\n        a += 0.15\n    }\n    if (player.upgrades[108] > 0.5) {\n        a += 0.25\n    }\n    if (player.upgrades[109] > 0.5) {\n        a += 0.25\n    }\n    if (player.upgrades[110] > 0.5) {\n        a += 0.25\n    }\n    a *= p\n\n    let b = 0;\n    if (player.upgrades[111] > 0.5) {\n        b += 0.08\n    }\n    if (player.upgrades[112] > 0.5) {\n        b += 0.08\n    }\n    if (player.upgrades[113] > 0.5) {\n        b += 0.08\n    }\n    if (player.upgrades[114] > 0.5) {\n        b += 0.08\n    }\n    if (player.upgrades[115] > 0.5) {\n        b += 0.08\n    }\n    b *= p\n\n    c = 0;\n    if (player.upgrades[116] > 0.5) {\n        c += 0.05\n    }\n    if (player.upgrades[117] > 0.5) {\n        c += 0.05\n    }\n    if (player.upgrades[118] > 0.5) {\n        c += 0.05\n    }\n    if (player.upgrades[119] > 0.5) {\n        c += 0.05\n    }\n    if (player.upgrades[120] > 0.5) {\n        c += 0.05\n    }\n    c *= p\n\n    if (a !== 0) {\n        player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(Decimal.pow(player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).add(1), a))\n    }\n    if (b !== 0) {\n        player.fifthGeneratedDiamonds = player.fifthGeneratedDiamonds.add(Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), b))\n    }\n    if (c !== 0) {\n        player.fifthGeneratedMythos = player.fifthGeneratedMythos.add(Decimal.pow(player.firstGeneratedParticles.add(player.firstOwnedParticles).add(1), c))\n    }\n\n    if (player.runeshards > player.maxofferings) {\n        player.maxofferings = player.runeshards;\n    }\n    if (player.researchPoints > player.maxobtainium) {\n        player.maxobtainium = player.researchPoints;\n    }\n\n    G['effectiveLevelMult'] = 1;\n    G['effectiveLevelMult'] *= (1 + player.researches[4] / 10 * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))) //Research 1x4\n    G['effectiveLevelMult'] *= (1 + player.researches[21] / 100) //Research 2x6\n    G['effectiveLevelMult'] *= (1 + player.researches[90] / 100) //Research 4x15\n    G['effectiveLevelMult'] *= (1 + player.researches[131] / 200) //Research 6x6\n    G['effectiveLevelMult'] *= (1 + player.researches[161] / 200 * 3 / 5) //Research 7x11\n    G['effectiveLevelMult'] *= (1 + player.researches[176] / 200 * 2 / 5) //Research 8x1\n    G['effectiveLevelMult'] *= (1 + player.researches[191] / 200 * 1 / 5) //Research 8x16\n    G['effectiveLevelMult'] *= (1 + player.researches[146] / 200 * 4 / 5) //Research 6x21\n    G['effectiveLevelMult'] *= (1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]))\n    G['effectiveLevelMult'] *= G['challenge15Rewards'].runeBonus\n\n    G['optimalOfferingTimer'] = 600 + 30 * player.researches[85] + 0.4 * G['rune5level'] + 120 * player.shopUpgrades.offeringEX;\n    G['optimalObtainiumTimer'] = 3600 + 120 * player.shopUpgrades.obtainiumEX;\n    autoBuyAnts()\n\n    if (player.autoAscend) {\n        if (player.autoAscendMode === \"c10Completions\" && player.challengecompletions[10] >= Math.max(1, player.autoAscendThreshold)) {\n            reset(\"ascension\", true)\n        }\n    }\n    let metaData = null;\n    if (player.researches[175] > 0) {\n        for (let i = 1; i <= 10; i++) {\n            metaData = getConstUpgradeMetadata(i)\n            if (player.ascendShards.gte(metaData[1])) {\n                buyConstantUpgrades(i, true);\n            }\n        }\n    }\n\n    const reductionValue = getReductionValue();\n    if (reductionValue !== G['prevReductionValue']) {\n        G['prevReductionValue'] = reductionValue;\n        const resources = [\"Coin\", \"Diamonds\", \"Mythos\"] as const;\n\n        for (let res = 0; res < resources.length; ++res) {\n            const resource = resources[res];\n            for (let ord = 0; ord < 5; ++ord) {\n                const num = G['ordinals'][ord as ZeroToFour];\n                player[`${num}Cost${resource}` as const] = getCost(ord+1 as OneToFive, resource, player[`${num}Owned${resource}` as const] + 1, reductionValue);\n            }\n        }\n\n        for (let i = 0; i <= 4; i++) {\n            const particleOriginalCost = [1, 1e2, 1e4, 1e8, 1e16];\n            const num = G['ordinals'][i as ZeroToFour];\n            const buyTo = player[`${num}OwnedParticles` as const] + 1\n            player[`${num}CostParticles` as const] = new Decimal(Decimal.pow(2, buyTo - 1).times(Decimal.pow(1.001, Math.max(0, (buyTo - 325000)) * Math.max(0, (buyTo - 325000) + 1) / 2))).times(particleOriginalCost[i])\n        }\n    }\n}\n\nexport const constantIntervals = (): void => {\n    interval(saveSynergy, 5000);\n    interval(autoUpgrades, 200);\n    interval(buttoncolorchange, 200)\n    interval(htmlInserts, 16)\n    interval(updateAll, 100)\n    interval(buildingAchievementCheck, 200)\n\n    if (!G['timeWarp']) {\n        document.getElementById(\"preload\").style.display = \"none\";\n        document.getElementById(\"offlineContainer\").style.display = \"none\"\n    }\n}\n\nlet lastUpdate = 0;\n\nexport const createTimer = (): void => {\n    lastUpdate = performance.now();\n    interval(tick, 5);\n}\n\nconst dt = 5;\nconst filterStrength = 20;\nlet deltaMean = 0;\n\nconst tick = () => {\n    const now = performance.now();\n    let delta = now - lastUpdate;\n    // compute pseudo-average delta cf. https://stackoverflow.com/a/5111475/343834\n    deltaMean += (delta - deltaMean) / filterStrength;\n    let dtEffective;\n    while (delta > 5) {\n        // tack will compute dtEffective milliseconds of game time\n        dtEffective = dt;\n        // If the mean lag (deltaMean) is more than a whole frame (16ms), compensate by computing deltaMean - dt ms, up to 1 hour\n        dtEffective += deltaMean > 16 ? Math.min(3600 * 1000, deltaMean - dt) : 0;\n        // compute at max delta ms to avoid negative delta\n        dtEffective = Math.min(delta, dtEffective);\n        // run tack and record timings\n        tack(dtEffective / 1000);\n        lastUpdate += dtEffective;\n        delta -= dtEffective;\n    }\n}\n\nfunction tack(dt: number) {\n    if (document.readyState === 'complete')\n        eventCheck();\n        \n    if (!G['timeWarp']) {\n        dailyResetCheck();\n        //Adds Resources (coins, ants, etc)\n        const timeMult = calculateTimeAcceleration();\n        resourceGain(dt * timeMult)\n        //Adds time (in milliseconds) to all reset functions, and quarks timer.\n        addTimers(\"prestige\", dt)\n        addTimers(\"transcension\", dt)\n        addTimers(\"reincarnation\", dt)\n        addTimers(\"ascension\", dt)\n        addTimers(\"quarks\", dt)\n\n        //Triggers automatic rune sacrifice (adds milliseconds to payload timer)\n        if (player.shopUpgrades.offeringAuto > 0.5 && player.autoSacrificeToggle) {\n            automaticTools(\"runeSacrifice\", dt)\n        }\n\n        //Triggers automatic ant sacrifice (adds milliseonds to payload timers)\n        if (player.achievements[173] === 1) {\n            automaticTools(\"antSacrifice\", dt);\n        }\n\n      /*Triggers automatic obtainium gain if research [2x11] is unlocked,\n        Otherwise it just calculates obtainium multiplier values. */\n        if (player.researches[61] === 1) {\n            automaticTools(\"addObtainium\", dt)\n        }\n        else {\n            calculateObtainium();\n        }\n\n        //Automatically tries and buys researches lol\n        if (player.autoResearchToggle && player.autoResearch <= maxRoombaResearchIndex(player)) {\n                // buyResearch() probably shouldn't even be called if player.autoResearch exceeds the highest unlocked research\n                let counter = 0;\n                const maxCount = 1 + player.challengecompletions[14];\n                while (counter < maxCount) {\n                    if (player.autoResearch > 0) {\n                        const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n                        if (!buyResearch(player.autoResearch, true, linGrowth)) {\n                            break;\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                    counter++;\n                }\n            }\n        }\n\n        // Adds an offering every 2 seconds\n        if (player.highestchallengecompletions[3] > 0) {\n            automaticTools(\"addOfferings\", dt/2)\n        }\n\n        // Adds an offering every 1/(cube upgrade 1x2) seconds. It shares a timer with the one above.\n        if (player.cubeUpgrades[2] > 0) {\n            automaticTools(\"addOfferings\", dt * player.cubeUpgrades[2])\n        }\n\n        if (player.researches[130] > 0 || player.researches[135] > 0) {\n            const talismansUnlocked = [\n                player.achievements[119] > 0,\n                player.achievements[126] > 0,\n                player.achievements[133] > 0,\n                player.achievements[140] > 0,\n                player.achievements[147] > 0,\n                player.antUpgrades[12-1] > 0 || player.ascensionCount > 0,\n                player.shopUpgrades.shopTalisman > 0,\n            ];\n            let upgradedTalisman = false;\n\n            // First, we need to enhance all of the talismans. Then, we can fortify all of the talismans.\n            // If we were to do this in one loop, the players resources would be drained on individual expensive levels\n            // of early talismans before buying important enhances for the later ones. This results in drastically\n            // reduced overall gains when talisman resources are scarce.\n            if (player.autoEnhanceToggle) {\n                for (let i = 0; i < talismansUnlocked.length; ++i) {\n                    if (talismansUnlocked[i]) {\n                        // TODO: Remove + 1 here when talismans are fully zero-indexed\n                        upgradedTalisman = buyTalismanEnhance(i + 1, true) || upgradedTalisman;\n                    }\n                }\n            }\n\n            if (player.autoFortifyToggle) {\n                for (let i = 0; i < talismansUnlocked.length; ++i) {\n                    if (talismansUnlocked[i]) {\n                        // TODO: Remove + 1 here when talismans are fully zero-indexed\n                        upgradedTalisman = buyTalismanLevels(i + 1, true) || upgradedTalisman;\n                    }\n                }\n            }\n\n            // Recalculate talisman-related upgrades and display on success\n            if (upgradedTalisman) {\n                updateTalismanInventory();\n                calculateRuneLevels();\n            }\n        }\n\n        runChallengeSweep(dt);\n\n        //Check for automatic resets\n        //Auto Prestige. === 1 indicates amount, === 2 indicates time.\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n            if (player.toggles[15] === true && player.achievements[43] === 1 && G['prestigePointGain'].gte(player.prestigePoints.times(Decimal.pow(10, player.prestigeamount))) && player.coinsThisPrestige.gte(1e16)) {\n                resetachievementcheck(1);\n                reset(\"prestige\", true)\n            }\n        }\n        if (player.resettoggle1 === 2) {\n            G['autoResetTimers'].prestige += dt;\n            const time = Math.max(0.01, player.prestigeamount);\n            if (player.toggles[15] === true && player.achievements[43] === 1 && G['autoResetTimers'].prestige >= time && player.coinsThisPrestige.gte(1e16)) {\n                resetachievementcheck(1);\n                reset(\"prestige\", true);\n            }\n        }\n\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n            if (player.toggles[21] === true && player.upgrades[89] === 1 && G['transcendPointGain'].gte(player.transcendPoints.times(Decimal.pow(10, player.transcendamount))) && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\n                resetachievementcheck(2);\n                reset(\"transcension\", true);\n            }\n        }\n        if (player.resettoggle2 === 2) {\n            G['autoResetTimers'].transcension += dt\n            const time = Math.max(0.01, player.transcendamount);\n            if (player.toggles[21] === true && player.upgrades[89] === 1 && G['autoResetTimers'].transcension >= time && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\n                resetachievementcheck(2);\n                reset(\"transcension\", true);\n            }\n        }\n\n        if (player.currentChallenge.ascension !== 12) {\n            G['autoResetTimers'].reincarnation += dt;\n            if (player.resettoggle3 === 2) {\n                const time = Math.max(0.01, player.reincarnationamount);\n                if (player.toggles[27] === true && player.researches[46] > 0.5 && player.transcendShards.gte(\"1e300\") && G['autoResetTimers'].reincarnation >= time && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n                    resetachievementcheck(3);\n                    reset(\"reincarnation\", true);\n                }\n            }\n            if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n                if (player.toggles[27] === true && player.researches[46] > 0.5 && G['reincarnationPointGain'].gte(player.reincarnationPoints.times(Decimal.pow(10, player.reincarnationamount))) && player.transcendShards.gte(1e300) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n                    resetachievementcheck(3);\n                    reset(\"reincarnation\", true)\n                }\n            }\n        }\n        calculateOfferings(\"reincarnation\")\n    }\n\ndocument.addEventListener('keydown', (event) => {\n    if (document.activeElement && document.activeElement.localName === 'input') {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\n        // finally fixes the bug where hotkeys would be activated when typing in an input field\n        event.stopPropagation();\n        return;\n    }\n\n    const types = {\n        coin: 'Coin',\n        diamond: 'Diamonds',\n        mythos: 'Mythos',\n        particle: 'Particles',\n        tesseract: 'Tesseracts',\n    } as const;\n\n    const type = types[G['buildingSubTab']];\n\n    const key = event.key.toUpperCase();\n    switch (key) {\n        case \"1\":\n        case \"2\":\n        case \"3\":\n        case \"4\":\n        case \"5\": {\n            const num = Number(key) as OneToFive;\n\n            if (G['currentTab'] === \"buildings\") {\n                if (type === 'Particles') {\n                    buyParticleBuilding(num);\n                } else if (type === 'Tesseracts') {\n                    buyTesseractBuilding(num);\n                } else {\n                    buyMax(num, type);\n                }\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(num)\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', num)\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', num)\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(num)\n                challengeDisplay(num);\n            }\n            break;\n        }\n\n        case \"6\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(1)\n            }\n            if (G['currentTab'] === \"challenges\" && player.reincarnationCount > 0) {\n                toggleChallenges(6)\n                challengeDisplay(6);\n            }\n            break;\n        case \"7\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(2)\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[113] === 1) {\n                toggleChallenges(7)\n                challengeDisplay(7);\n            }\n            break;\n        case \"8\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(3)\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[120] === 1) {\n                toggleChallenges(8)\n                challengeDisplay(8);\n            }\n            break;\n        case \"9\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(4)\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[127] === 1) {\n                toggleChallenges(9)\n                challengeDisplay(9);\n            }\n            break;\n        case \"0\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(5)\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[134] === 1) {\n                toggleChallenges(10)\n                challengeDisplay(10);\n            }\n            break;\n    }\n\n});\n\n/**\n * Reloads shit.\n */\nexport const reloadShit = async (reset = false) => {\n    for (const timer of intervalHold)\n        clearInt(timer);\n\n    intervalHold.clear();\n\n    const dec = LZString.decompressFromBase64(localStorage.getItem('Synergysave2'));\n    const isLZString = dec !== '';\n\n    if (isLZString) {\n        localStorage.clear();\n        localStorage.setItem('Synergysave2', btoa(dec));\n        await Alert('Transferred save to new format successfully!');\n    }\n\n    loadSynergy();\n    if (!reset) \n            calculateOffline();\n    else\n        player.worlds = new QuarkHandler({quarks: 0})\n    saveSynergy();\n    toggleauto();\n    revealStuff();\n    hideStuff();\n    htmlInserts();\n    createTimer();\n    constantIntervals();\n    changeTabColor();\n    startHotkeys();\n}\n\nwindow.addEventListener('load', () => {\n    const ver = document.getElementById('versionnumber');\n    ver && (ver.textContent = \n        `You're ${testing ? 'testing' : 'playing'} v${version} - Seal of the Merchant` +\n        ` [Last Update: ${lastUpdated.getHours()}:${lastUpdated.getMinutes()} UTC ${lastUpdated.getDate()}-${lastUpdated.toLocaleString('en-us', {month: 'short'})}-${lastUpdated.getFullYear()}].` + \n        ` ${testing ? 'Savefiles cannot be used in live!' : ''}`\n    );\n    document.title = `Synergism v${version}`;\n\n    generateEventHandlers();\n    corruptionButtonsAdd();\n    corruptionLoadoutTableCreate();\n\n    reloadShit();\n});\n", "import Decimal from 'break_infinity.js';\n\nexport const isDecimal = (o: unknown): o is Decimal =>\n    o instanceof Decimal ||\n    (typeof o === 'object' &&\n    o !== null &&\n    Object.keys(o).length === 2 &&\n    'mantissa' in o &&\n    'exponent' in o)\n;\n\n/**\n * This function calculates the smallest integer increment/decrement that can be applied to a number that is\n * guaranteed to affect the numbers value\n * @param x\n * @returns {number} 1 if x < 2^53 and 2^ceil(log2(x)-53) otherwise\n */\nexport const smallestInc = (x = 0): number => {\n    if (x <= Number.MAX_SAFE_INTEGER) {\n        return 1;\n    } else {\n        return 2**Math.ceil(Math.log2(x)-53)\n    }\n}\n\n/** \n * Returns the sum of all contents in an array\n * @param array {(number|string)[]}\n * @returns {number}\n */\nexport const sumContents = (array: number[]): number => {\n    array = Array.isArray(array)\n        ? array\n        : Object.values(array);\n\n    return array.reduce((a, b) => a + b, 0);\n}\n\n/** \n * Returns the product of all contents in an array\n * @param array {number[]}\n * @returns {number}\n */\nexport const productContents = (array: number[]): number => array.reduce((a, b) => a * b);\n\nexport const sortWithIndices = (toSort: number[]) => {\n    return Array\n        .from([...toSort.keys()])\n        .sort((a, b) => toSort[a] < toSort[b] ? -1 : +(toSort[b] < toSort[a]));\n}\n\n/**\n * Identical to @see {Document.getElementById} but casts the type.\n * @param id {string}\n */\nexport const getElementById = <T extends HTMLElement>(id: string) => document.getElementById(id) as T;\n\n/**\n * Remove leading indents at the beginning of new lines in a template literal. \n */\ntype ValidInterpolatedType = string | number | Date;\nexport const stripIndents = (temp: TemplateStringsArray, ...args: ValidInterpolatedType[]) => {\n    const s = temp.raw;\n    let f = '';\n    for (let i = 0; i < s.length; i++) {\n        // rather than using \\s+ for all whitespace, we use a normal space\n        // this fixes a bug where two+ new lines will be transformed into 1\n        f += `${s[i].replace(/\\n +/g, '\\n')}${args.shift() ?? ''}`\n    }\n\n    return f.trim();\n}\n\n/**\n * Pads an array (a) with param (b) (c) times\n * @param a array to be padded\n * @param b item to pad to array\n * @param length Length to pad array to\n */\nexport const padArray = <T extends unknown>(a: T[], b: T, length: number) => {\n    for (let i = 0; i < length; i++)\n        if (!(i in a)) a[i] = b;\n\n    return a;\n} \n\nexport const updateClassList = (targetElement: string, additions: Array<string>, removals: Array<string>) => {\n    const target = document.getElementById(targetElement);\n    for (const addition of additions) {\n        target.classList.add(addition);\n    }\n    for (const removal of removals) {\n        target.classList.remove(removal);\n    }\n}\n", "import Decimal from 'break_infinity.js';\nimport { GlobalVariables } from './types/Synergism';\n\nexport const Globals: GlobalVariables = {\n    runediv: [1.5, 2, 3, 5, 8, 1, 1],\n    runeexpbase: [1, 4, 9, 16, 1000, 1e75, 1e200],\n\n    // this shows the logarithm of costs. ex: upgrade one will cost 1e+6 coins, upgrade 2 1e+7, etc.\n    upgradeCosts: [0, 6, 7, 8, 10, 12, 20, 25, 30, 35, 45, 55, 75, 110, 150, 200, 250, 500, 750, 1000, 1500,\n        2, 3, 4, 5, 6, 7, 10, 13, 20, 30, 150, 400, 800, 1600, 3200, 10000, 20000, 50000, 100000, 200000,\n        1, 2, 3, 5, 6, 7, 42, 65, 87, 150, 300, 500, 1000, 1500, 2000, 3000, 6000, 12000, 25000, 75000,\n        0, 1, 2, 2, 3, 5, 6, 10, 15, 22, 30, 37, 45, 52, 60, 1900, 2500, 3000, 7482, 21397,\n        3, 6, 9, 12, 15, 20, 30, 6, 8, 8, 10, 13, 60, 1, 2, 4, 8, 16, 25, 40,\n        12, 16, 20, 30, 50, 500, 1250, 5000, 25000, 125000, 1500, 7500, 30000, 150000, 1000000, 250, 1000, 5000, 25000, 125000,\n        1e3, 1e6, 1e9, 1e12, 1e15],\n\n    // Mega list of Variables to be used elsewhere\n    crystalUpgradesCost: [6, 15, 20, 40, 100, 200, 500, 1000],\n    crystalUpgradeCostIncrement: [8, 15, 20, 40, 100, 200, 500, 1000],\n    researchBaseCosts: [1e200,\n        1, 1, 1, 1, 1,\n        1, 1e2, 1e4, 1e6, 1e8,\n        2, 2e2, 2e4, 2e6, 2e8,\n        4e4, 4e8, 10, 1e5, 1e9,\n        100, 100, 1e4, 2e3, 2e5,\n        40, 200, 50, 5000, 20000000,\n        777, 7777, 50000, 500000, 5000000,\n        2e3, 2e6, 2e9, 1e5, 1e9,\n        1, 1, 5, 25, 125,\n        2, 5, 320, 1280, 2.5e9,\n        10, 2e3, 4e5, 8e7, 2e9,\n        5, 400, 1e4, 3e6, 9e8,\n        100, 2500, 100, 2000, 2e5,\n        1, 20, 3e3, 4e5, 5e7,\n        10, 40, 160, 1000, 10000,\n        4e9, 7e9, 1e10, 1.2e10, 1.5e10,\n        1e12, 1e13, 3e12, 2e13, 2e13,\n        2e14, 6e14, 2e15, 6e15, 2e16,\n        1e16, 2e16, 2e17, 4e17, 1e18,\n        1e13, 1e14, 1e15, 7.777e18, 7.777e20,\n        1e16, 3e16, 1e17, 3e17, 1e20,\n        1e18, 3e18, 1e19, 3e19, 1e20,\n        1e20, 2e20, 4e20, 8e20, 1e21,\n        2e21, 4e21, 8e21, 2e22, 4e22,\n        3.2e21, 2e23, 4e23, 1e21, 7.777e32,\n        5e8, 5e12, 5e16, 5e20, 5e24, /*ascension tier */\n        1e25, 2e25, 4e25, 8e25, 1e26,\n        4e26, 8e26, 1e27, 2e27, 1e28,\n        5e9, 5e15, 5e21, 5e27, 1e28, /*challenge 11 tier */\n        1e29, 2e29, 4e29, 8e29, 1e27,\n        2e30, 4e30, 8e30, 1e31, 2e31,\n        5e31, 1e32, 2e32, 4e32, 8e32, /*challenge 12 tier */\n        1e33, 2e33, 4e33, 8e33, 1e34,\n        3e34, 1e35, 3e35, 6e35, 1e36,\n        3e36, 1e37, 3e37, 1e38, 3e38, /*challenge 13 tier */\n        1e39, 3e39, 1e40, 3e40, 1e50,\n        3e41, 1e42, 3e42, 6e42, 1e43,\n        3e43, 1e44, 3e44, 1e45, 3e45, /*challenge 14 tier */\n        2e46, 6e46, 2e47, 6e47, 1e64,\n        6e48, 2e49, 1e50, 1e51, 4e56\n    ],\n\n    researchMaxLevels: [0, 1, 1, 1, 1, 1,\n        10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10,\n        10, 10, 1, 1, 1,\n        25, 25, 25, 20, 20,\n        10, 10, 10, 10, 10,\n        12, 12, 10, 10, 10,\n        10, 10, 10, 1, 1,\n        1, 1, 1, 1, 1,\n        1, 1, 1, 1, 1,\n        10, 10, 10, 10, 10,\n        20, 20, 20, 20, 20,\n        1, 5, 4, 5, 5,\n        10, 10, 10, 10, 10,\n        1, 1, 1, 1, 1,\n        10, 50, 50, 50, 50,\n        10, 1, 20, 20, 20,\n        20, 20, 20, 20, 10,\n        20, 20, 20, 20, 1,\n        20, 5, 5, 3, 2,\n        10, 10, 10, 10, 1,\n        10, 10, 20, 25, 25,\n        50, 50, 50, 50, 100,\n        10, 10, 10, 100, 100,\n        25, 25, 25, 1, 5,\n        10, 10, 10, 10, 1,\n        10, 10, 10, 1, 1,\n        25, 25, 25, 15, 1,\n        10, 10, 10, 10, 1,\n        10, 1, 6, 10, 1,\n        25, 25, 1, 15, 1,\n        10, 10, 10, 1, 1,\n        10, 10, 10, 10, 1,\n        25, 25, 25, 15, 1,\n        10, 10, 10, 1, 1,\n        10, 3, 6, 10, 5,\n        25, 25, 1, 15, 1,\n        20, 20, 20, 1, 1,\n        20, 1, 50, 50, 10,\n        25, 25, 25, 15, 100000\n    ],\n\n    ticker: 0,\n\n    costDivisor: 1,\n\n    freeAccelerator: 0,\n    totalAccelerator: 0,\n    freeAcceleratorBoost: 0,\n    totalAcceleratorBoost: 0,\n    acceleratorPower: 1.10,\n    acceleratorEffect: new Decimal(1),\n    acceleratorEffectDisplay: new Decimal(1),\n    generatorPower: new Decimal(1),\n\n    freeMultiplier: 0,\n    totalMultiplier: 0,\n    multiplierPower: 2,\n    multiplierEffect: new Decimal(1),\n    challengeOneLog: 3,\n    freeMultiplierBoost: 0,\n    totalMultiplierBoost: 0,\n\n    globalCoinMultiplier: new Decimal(1),\n    totalCoinOwned: 0,\n    prestigeMultiplier: new Decimal(1),\n    buildingPower: 1,\n    reincarnationMultiplier: new Decimal(1),\n\n    coinOneMulti: new Decimal(1),\n    coinTwoMulti: new Decimal(1),\n    coinThreeMulti: new Decimal(1),\n    coinFourMulti: new Decimal(1),\n    coinFiveMulti: new Decimal(1),\n\n    globalCrystalMultiplier: new Decimal(1),\n    globalMythosMultiplier: new Decimal(0.01),\n    grandmasterMultiplier: new Decimal(1),\n\n    atomsMultiplier: new Decimal(1),\n\n    mythosBuildingPower: 1,\n    challengeThreeMultiplier: new Decimal(1),\n    totalMythosOwned: 0,\n\n    prestigePointGain: new Decimal(0),\n    challengeFivePower: 1 / 3,\n\n    transcendPointGain: new Decimal(0),\n    reincarnationPointGain: new Decimal(0),\n\n    produceFirst: new Decimal(0),\n    produceSecond: new Decimal(0),\n    produceThird: new Decimal(0),\n    produceFourth: new Decimal(0),\n    produceFifth: new Decimal(0),\n    produceTotal: new Decimal(0),\n\n    produceFirstDiamonds: new Decimal(0),\n    produceSecondDiamonds: new Decimal(0),\n    produceThirdDiamonds: new Decimal(0),\n    produceFourthDiamonds: new Decimal(0),\n    produceFifthDiamonds: new Decimal(0),\n    produceDiamonds: new Decimal(0),\n\n    produceFirstMythos: new Decimal(0),\n    produceSecondMythos: new Decimal(0),\n    produceThirdMythos: new Decimal(0),\n    produceFourthMythos: new Decimal(0),\n    produceFifthMythos: new Decimal(0),\n    produceMythos: new Decimal(0),\n\n    produceFirstParticles: new Decimal(0),\n    produceSecondParticles: new Decimal(0),\n    produceThirdParticles: new Decimal(0),\n    produceFourthParticles: new Decimal(0),\n    produceFifthParticles: new Decimal(0),\n    produceParticles: new Decimal(0),\n\n    producePerSecond: new Decimal(0),\n    producePerSecondDiamonds: new Decimal(0),\n    producePerSecondMythos: new Decimal(0),\n    producePerSecondParticles: new Decimal(0),\n\n    uFourteenMulti: new Decimal(1),\n    uFifteenMulti: new Decimal(1),\n    tuSevenMulti: 1,\n    currentTab: 'buildings',\n\n    researchfiller1: \"Hover over the grid to get details about researches!\",\n    researchfiller2: \"Level: \",\n\n    ordinals: [\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\", \"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\", \"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\", \"eighteenth\", \"nineteenth\", \"twentieth\"] as const,\n    cardinals: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\", \"twentyone\", \"twentytwo\", \"twentythree\", \"twentyfour\", \"twentyfive\", \"twentysix\", \"twentyseven\", \"twentyeight\", \"twentynine\", \"thirty\", \"thirtyone\", \"thirtytwo\", \"thirtythree\", \"thirtyfour\"],\n\n    challengeBaseRequirements: [10, 20, 60, 100, 200, 125, 500, 7500, 2.0e8, 3.5e9],\n\n    prestigeamount: 1,\n    taxdivisor: new Decimal(\"1\"),\n    taxdivisorcheck: new Decimal(\"1\"),\n    runemultiplierincrease: {\n        one: 1,\n        two: 1,\n        three: 1,\n        four: 1,\n        five: 1\n    },\n\n    mythosupgrade13: new Decimal(\"1\"),\n    mythosupgrade14: new Decimal(\"1\"),\n    mythosupgrade15: new Decimal(\"1\"),\n    challengefocus: 0,\n\n    maxexponent: 10000,\n\n    maxbuyresearch: false,\n\n    effectiveLevelMult: 1,\n    optimalOfferingTimer: 600,\n    optimalObtainiumTimer: 3600,\n\n    runeSum: 0,\n\n    shopConfirmation: true,\n\n    globalAntMult: new Decimal(\"1\"),\n    antMultiplier: new Decimal(\"1\"),\n\n    antOneProduce: new Decimal(\"1\"),\n    antTwoProduce: new Decimal(\"1\"),\n    antThreeProduce: new Decimal(\"1\"),\n    antFourProduce: new Decimal(\"1\"),\n    antFiveProduce: new Decimal(\"1\"),\n    antSixProduce: new Decimal(\"1\"),\n    antSevenProduce: new Decimal(\"1\"),\n    antEightProduce: new Decimal(\"1\"),\n\n    antCostGrowth: [1e41, 3, 10, 1e2, 1e4, 1e8, 1e16, 1e32],\n\n    antUpgradeBaseCost: [100, 100, 1000, 1000, 1e5, 1e6, 1e8, 1e11, 1e15, 1e20, 1e40, 1e100],\n    antUpgradeCostIncreases: [10, 10, 10, 10, 100, 100, 100, 100, 1000, 1000, 1000, 1e100],\n\n    bonusant1: 0,\n    bonusant2: 0,\n    bonusant3: 0,\n    bonusant4: 0,\n    bonusant5: 0,\n    bonusant6: 0,\n    bonusant7: 0,\n    bonusant8: 0,\n    bonusant9: 0,\n    bonusant10: 0,\n    bonusant11: 0,\n    bonusant12: 0,\n\n    rune1level: 1,\n    rune2level: 1,\n    rune3level: 1,\n    rune4level: 1,\n    rune5level: 1,\n    rune1Talisman: 0,\n    rune2Talisman: 0,\n    rune3Talisman: 0,\n    rune4Talisman: 0,\n    rune5Talisman: 0,\n\n\n    talisman1Effect: [null, 0, 0, 0, 0, 0],\n    talisman2Effect: [null, 0, 0, 0, 0, 0],\n    talisman3Effect: [null, 0, 0, 0, 0, 0],\n    talisman4Effect: [null, 0, 0, 0, 0, 0],\n    talisman5Effect: [null, 0, 0, 0, 0, 0],\n    talisman6Effect: [null, 0, 0, 0, 0, 0],\n    talisman7Effect: [null, 0, 0, 0, 0, 0],\n\n    talisman6Power: 0,\n    talisman7Quarks: 0,\n\n    runescreen: \"runes\",\n    settingscreen: \"settings\",\n\n    talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24],\n    talismanResourceOfferingCosts: [100, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9],\n\n\n    talismanLevelCostMultiplier: [null, 1, 4, 1e4, 1e8, 1e13, 10, 100],\n\n    talismanPositiveModifier: [null, 0.75, 1.5, 2.25, 3, 3.75, 4.5],\n    talismanNegativeModifier: [null, 0, 0, 0, 0, 0, 0],\n\n    commonTalismanEnhanceCost: [null, 0, 3000, 1000, 0, 0, 0, 0],\n    uncommonTalismanEnchanceCost: [null, 0, 10000, 3000, 1000, 0, 0, 0],\n    rareTalismanEnchanceCost: [null, 0, 100000, 20000, 2000, 500, 0, 0],\n    epicTalismanEnhanceCost: [null, 0, 2e6, 2e5, 2e4, 2000, 1000, 0],\n    legendaryTalismanEnchanceCost: [null, 0, 4e7, 2e6, 1e5, 20000, 2500, 200],\n    mythicalTalismanEnchanceCost: [null, 0, 0, 0, 0, 0, 0, 0],\n\n    talismanRespec: 1,\n\n    obtainiumGain: 0,\n\n    mirrorTalismanStats: [null, 1, 1, 1, 1, 1],\n    antELO: 0,\n    effectiveELO: 0,\n\n    timeWarp: false,\n\n    blessingMultiplier: 1,\n    spiritMultiplier: 1,\n    runeBlessings: [0, 0, 0, 0, 0, 0],\n    runeSpirits: [0, 0, 0, 0, 0, 0],\n\n    effectiveRuneBlessingPower: [0, 0, 0, 0, 0, 0],\n    effectiveRuneSpiritPower: [0, 0, 0, 0, 0, 0],\n\n    blessingBaseCost: 1e6,\n    spiritBaseCost: 1e20,\n\n    triggerChallenge: 0,\n\n    prevReductionValue: -1,\n\n    buildingSubTab: \"coin\",\n    //1,000 of each before Diminishing Returns\n    blessingbase: [null, 1 / 500, 1 / 5000, 1 / 2000, 1 / 750, 1 / 200, 1 / 10000, 1 / 5000, 1 / 10, 1 / 10000, 1 / 1000],\n    blessingDRPower: [null, 1 / 3, 1 / 3, 2 / 3, 1 / 2, 2 / 3, 2, 1 / 3, 1 / 3, 1 / 16, 1 / 16],\n    giftbase: [1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\n    giftDRPower: [1 / 6, 1 / 6, 1 / 3, 1 / 4, 1 / 3, 1, 1 / 6, 1 / 6, 1 / 32, 1 / 32],\n    benedictionbase: [null, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\n    benedictionDRPower: [null, 1 / 12, 1 / 12, 1 / 6, 1 / 8, 1 / 6, 1 / 2, 1 / 12, 1 / 12, 1 / 64, 1 / 64],\n    //10 Million of each before Diminishing returns on first 3, 200k for second, and 10k for the last few\n    platonicCubeBase: [2/4e6, 1.5/4e6, 1/4e6, 1/8e4, 1/1e4, 1/1e5, 1/1e4, 1/1e4],\n    platonicDRPower: [1/5, 1/5, 1/5, 1/5, 1/16, 1/16, 1/4, 1/8],\n\n    cubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    tesseractBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    hypercubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    platonicBonusMultiplier: [1, 1, 1, 1, 1, 1, 1, 1],\n\n    buyMaxCubeUpgrades: false,\n    autoOfferingCounter: 0,\n    researchOrderByCost: [],\n\n    divisivenessPower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1, 0.05],\n    maladaptivePower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1, 0.05],\n    lazinessMultiplier: [1, 1 / 3, 1 / 10, 1 / 40, 1 / 200, 1 / 1e5, 1 / 1e7, 1 / 1e10, 1/1e13, 1/1e16, 1/1e20, 1/1e25, 1/1e35, 1/1e50],\n    hyperchallengedMultiplier: [1, 1.2, 1.5, 1.7, 3, 5, 8, 13, 21, 34, 55, 100, 400, 1600],\n    illiteracyPower: [1, 0.8, 0.7, 0.6, 0.5, 0.3, 0.2, 0.15, 0.10, 0.06, 0.04, 0.02, 0.01, 0.005],\n    deflationMultiplier: [1, 0.3, 0.1, 0.03, 0.01, 1/1e6, 1/1e8, 1/1e10, 1/1e12, 1/1e15, 1/1e18, 1/1e25, 1/1e35, 1/1e50],\n    extinctionMultiplier: [1, 0.92, 0.86, 0.8, 0.74, 0.65, 0.55, 0.5, 0.45, 0.4, 0.35, 0.3, 0.1, 0],\n    droughtMultiplier: [1, 5, 25, 200, 1e4, 1e7, 1e11, 1e16, 1e22, 1e30, 1e40, 1e55, 1e80, 1e120],\n    financialcollapsePower: [1, 0.9, 0.7, 0.6, 0.5, 0.37, 0.30, 0.23, 0.18, 0.15, 0.12, 0.09, 0.03, 0.01],\n\n    corruptionPointMultipliers: [1, 2, 2.75, 3.5, 4.25, 5, 5.75, 6.5, 7, 7.5, 8, 9, 10, 11],\n    ascendBuildingProduction: {\n        first: new Decimal('0'),\n        second: new Decimal('0'),\n        third: new Decimal('0'),\n        fourth: new Decimal('0'),\n        fifth: new Decimal('0'),\n    },\n    freeUpgradeAccelerator: 0,\n    freeUpgradeMultiplier: 0,\n\n    acceleratorMultiplier: 1,\n    multiplierMultiplier: 1,\n\n    constUpgradeCosts: [null, 1, 13, 17, 237, 316, 4216, 5623, 74989, 1e10, 1e24],\n\n    globalConstantMult: new Decimal(\"1\"),\n    autoTalismanTimer: 0,\n\n    autoChallengeTimerIncrement: 0,\n    corruptionTrigger: 1,\n\n    challenge15Rewards: {\n        cube1: 1,\n        ascensions: 1,\n        coinExponent: 1,\n        taxes: 1,\n        obtainium: 1,\n        offering: 1,\n        accelerator: 1,\n        multiplier: 1,\n        runeExp: 1,\n        runeBonus: 1,\n        cube2: 1,\n        transcendChallengeReduction: 1,\n        reincarnationChallengeReduction: 1,\n        antSpeed: 1,\n        bonusAntLevel: 1,\n        cube3: 1,\n        talismanBonus: 1,\n        globalSpeed: 1,\n        blessingBonus: 1,\n        constantBonus: 1,\n        cube4: 1,\n        spiritBonus: 1,\n        score: 1,\n        quarks: 1,\n        hepteractUnlocked: 0,\n        cube5: 1,\n        powder: 1,\n        exponent: 1,\n        freeOrbs: 0,\n        ascensionSpeed: 1,\n    },\n\n    autoResetTimers: {\n        prestige: 0,\n        transcension: 0,\n        reincarnation: 0,\n        ascension: 0\n    },\n\n    timeMultiplier: 1,\n    upgradeMultiplier: 1,\n    \n    isEvent: false,\n\n    // talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24]\n    // talismanResourceOfferingCosts: [0, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9]\n}\n\nexport const blankGlobals = { ...Globals };", "// EventTarget is lacking.\nimport EventEmitter from 'eventemitter3';\nimport { SynergismEvents } from './types/Synergism';\n\nexport const Synergism = new EventEmitter<SynergismEvents>();", "import { format, player } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { Alert, revealStuff } from './UpdateHTML';\nimport { Synergism } from './Events';\nimport { sumContents } from './Utility';\nimport Decimal from 'break_infinity.js';\nimport { CalcCorruptionStuff, calculateTimeAcceleration } from './Calculate';\n\nconst achievementpointvalues = [0, \n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    2, 8, 10, 2, 8, 10, 10,\n    2, 8, 10, 10, 10, 10, 10,\n    2, 4, 6, 8, 10, 10, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    10, 10, 10, 10, 10, 10, 10,\n    10, 10, 10, 10, 10, 10, 10,\n    20, 20, 20, 40, 60, 60, 100,\n    20, 20, 40, 40, 60, 60, 100,\n    20, 20, 40, 40, 60, 60, 100,\n    20, 40, 40, 40, 60, 60, 100,\n    40, 40, 40, 60, 60, 100, 100,\n    40, 40, 60, 60, 100, 100, 100,\n    20, 40, 40, 60, 60, 100, 100,\n    40, 60, 100, 60, 100, 100, 40,\n    40, 40, 40, 40, 40, 40, 40,\n    40, 40, 40, 40, 100, 100, 0,\n    50, 75, 75, 75, 100, 100, 150,\n    50, 75, 75, 75, 100, 100, 150,\n    50, 75, 75, 75, 100, 100, 150,\n    50, 50, 50, 75, 75, 75, 250\n];\n\nexport const totalachievementpoints = achievementpointvalues.reduce((a, b) => a + b, 0);\n\nconst adesc = {\n    adesc1: \"[1] A Loyal Employee: Hire your first worker.\",\n    adesc2: \"[2] Small Business: Hire 10 workers.\",\n    adesc3: \"[3] Now we're synergizing!: Hire 100 workers.\",\n    adesc4: \"[4] Gaining Redundancies: Hire 1,000 workers.\",\n    adesc5: \"[5] A cog in the machine: Hire 5,000 workers.\",\n    adesc6: \"[6] A nail in the machine: Hire 10,000 workers.\",\n    adesc7: \"[7] Are we even in the machine anymore?: Hire 20,000 workers.\",\n    adesc8: \"[8] STONKS!!!: Purchase 1 Investment.\",\n    adesc9: \"[9] Planning ahead: Purchase 10 Investments.\",\n    adesc10: \"[10] Inside Trading: Purchase 100 Investments.\",\n    adesc11: \"[11] Outside Trading?: Purchase 1,000 Investments.\",\n    adesc12: \"[12] Market Takeover: Purchase 5,000 Investments.\",\n    adesc13: \"[13] Trickle-Down Economics: Purchase 10,000 Investments.\",\n    adesc14: \"[14] Eliminated Regulation: Purchase 20,000 Investments.\",\n    adesc15: \"[15] Stationery!: Build 1 Printer.\",\n    adesc16: \"[16] Printing Press: Build 10 Printers.\",\n    adesc17: \"[17] It prints free money!: Build 100 Printers.\",\n    adesc18: \"[18] Solving Our Debts: Build 1,000 Printers.\",\n    adesc19: \"[19] Monopolizing the market: Build 5,000 Printers.\",\n    adesc20: \"[20] We're running out of Ink!: Build 10,000 Printers.\",\n    adesc21: \"[21] 3D-printing the universe: Build 20,000 Printers.\",\n    adesc22: \"[22] A national treasure: Establish 1 Coin Mint.\",\n    adesc23: \"[23] Now with competition!: Establish 10 Coin Mints.\",\n    adesc24: \"[24] Counterfeiting with Style!: Establish 100 Coin Mints.\",\n    adesc25: \"[25] Why do we need all these?: Establish 1000 Coin Mints.\",\n    adesc26: \"[26] No really, why??: Establish 5,000 Coin Mints.\",\n    adesc27: \"[27] Is no one to stop us???: Establish 10,000 Coin Mints.\",\n    adesc28: \"[28] Oh well, time to mint: Establish 20,000 Coin Mints.\",\n    adesc29: \"[29] Newton's Apprentice: Create 1 Alchemy.\",\n    adesc30: \"[30] Lab Work: Create 10 Alchemies.\",\n    adesc31: \"[31] Satanic Becomings: Create 66 Alchemies.\",\n    adesc32: \"[32] Satan Incarnate: Create 666 Alchemies.\",\n    adesc33: \"[33] Is this more demonic?: Create 6,666 Alchemies.\",\n    adesc34: \"[34] Golden Paradise: Create 17,777 Alchemies.\",\n    adesc35: \"[35] Unlocking secrets to the world: Create 42,777 Alchemies.\",\n    adesc36: \"[36] Leveling up: Prestige for at least 1 Diamond.\",\n    adesc37: \"[37] High-Tiered: Prestige for at least 1e+6 Diamonds.\",\n    adesc38: \"[38] Highly Regarded: Prestige for at least 1e+100 Diamonds.\",\n    adesc39: \"[39] Prestigious: Prestige for at least 1e+1000 Diamonds.\",\n    adesc40: \"[40] Legendary: Prestige for at least 1e+10000 Diamonds.\",\n    adesc41: \"[41] Divine: Prestige for at least 1e+77777 Diamonds.\",\n    adesc42: \"[42] Perfectly Respected: Prestige for at least 1e+250000 Diamonds.\",\n    adesc43: \"[43] A Simple Detour: Transcend for at least 1 Mythos.\",\n    adesc44: \"[44] Tunnel Vision: Transcend for at least 1e+6 Mythos.\",\n    adesc45: \"[45] Risen from the Ashes: Transcend for at least 1e+50 Mythos.\",\n    adesc46: \"[46] Paradigm Shift: Transcend for at least 1e+308 Mythos.\",\n    adesc47: \"[47] Preparation: Transcend for at least 1e+2000 Mythos.\",\n    adesc48: \"[48] Revising the Plan: Transcend for at least 1e+25000 Mythos.\",\n    adesc49: \"[49] Leaving the Universe: Transcend for at least 1e+100000 Mythos.\",\n    adesc50: \"[50] Going Quantum: Reincarnate for at least 1 Particle.\",\n    adesc51: \"[51] Tunneling Vision: Reincarnate for at least 100,000 Particles.\",\n    adesc52: \"[52] Simulating the World: Reincarnate for at least 1e+30 Particles.\",\n    adesc53: \"[53] Multidimensional Creation: Reincarnate for at least 1e+200 Particles.\",\n    adesc54: \"[54] Lepton Dance: Reincarnate for at least 1e+1500 Particles.\",\n    adesc55: \"[55] Do we have enough yet?: Reincarnate for at least 1e+5000 Particles.\",\n    adesc56: \"[56] I Feel Luck in My Cells: Reincarnate for at least 1e+7777 Particles.\",\n    adesc57: \"[57] One Way Only: Prestige without buying multipliers.\",\n    adesc58: \"[58] Authentic Shifting: Transcend without having bought a multiplier.\",\n    adesc59: \"[59] The Singularity: Reincarnate without having bought a multiplier.\",\n    adesc60: \"[60] Gotta go SLOW!: Prestige without buying Accelerators or Accelerator Boosts.\",\n    adesc61: \"[61] I'm really going slow: Transcend without having bought Accelerators or Boosts.\",\n    adesc62: \"[62] Are we there yet?: Reincarnate without having bought Accelerators or Boosts.\",\n    adesc63: \"[63] A careful search for Diamonds: Get 1e120,000 Coins in [Reduced Diamonds] without buying Accelerators or Boosts.\",\n    adesc64: \"[64] Very Based: Prestige without purchasing Coin Upgrades.\",\n    adesc65: \"[65] Miser: Transcend without purchasing Coin Upgrades.\",\n    adesc66: \"[66] True Miser: Transcend without purchasing Coin or Diamond Upgrades.\",\n    adesc67: \"[67] Coinless Pursuit: Reincarnate without purchasing Coin Upgrades.\",\n    adesc68: \"[68] Diamonds don't matter to me!: Reincarnate without purchasing Coin or Diamond Upgrades.\",\n    adesc69: \"[69] Leave nothing behind: Reincarnate without purchasing Coin, Diamond or Mythos Upgrades.\",\n    adesc70: \"[70] Leave NOTHING behind.: Reincarnate without purchasing Coin, Diamond, Mythos, or Generator Upgrades.\",\n    adesc71: \"[71] Out of Order: Buy Generator Upgrade Row 1, #2 first in a transcension (IV -> III)\",\n    adesc72: \"[72] More Out of Order: Buy Generator Upgrade Row 1, #3 first in a transcension (III -> II)\",\n    adesc73: \"[73] Four's a Company: Buy Generator Upgrade Row 1, #4 first in a transcension (II -> I)\",\n    adesc74: \"[74] Five's a Croud: Buy Generator Upgrade Row 1, #5 first in a transcension (I -> V)\",\n    adesc75: \"[75] Vaseline without the Machine: Exit [No Multiplier] with at least 1e1000 coins and without any of the row 1 generator upgrades.\",\n    adesc76: \"[76] Rage against the Machine: Exit [No Accelerator] with at least 1e1000 coins and without any of the row 1 generator upgrades.\",\n    adesc77: \"[77] Amish Paradise: Exit [No Shards] with at least 1e99,999 coins and without any of the row 1 generator upgrades.\",\n    adesc78: \"[78] Single-Cell: Complete [No Multiplier] once.\",\n    adesc79: \"[79] Solidarity: Complete [No Multiplier] three times.\",\n    adesc80: \"[80] Duplication-Free!: Complete [No Multiplier] five times.\",\n    adesc81: \"[81] Multitasking Challenged: Complete [No Multiplier] ten times.\",\n    adesc82: \"[82] No Deaths: Complete [No Multiplier] twenty times.\",\n    adesc83: \"[83] Population One: Complete [No Multiplier] fifty times.\",\n    adesc84: \"[84] Insert Another Token: Complete [No Multiplier] seventy-five times.\",\n    adesc85: \"[85] Slow Start: Complete [No Accelerator] once\",\n    adesc86: \"[86] Respawn Rate -12%: Complete [No Accelerator] three times.\",\n    adesc87: \"[87] Putting the Breaks On: Complete [No Accelerator] five times.\",\n    adesc88: \"[88] Racing a Sloth...: Complete [No Accelerator] ten times.\",\n    adesc89: \"[89] ... and Losing.: Complete [No Accelerator] twenty times.\",\n    adesc90: \"[90] Planck Distance Traveled: Complete [No Accelerator] fifty times.\",\n    adesc91: \"[91] Inverse-Ackermann Growth: Complete [No Accelerator] seventy-five times.\",\n    adesc92: \"[92] Intact: Complete [No Shards] once.\",\n    adesc93: \"[93] Augments are Stupid!: Complete [No Shards] three times.\",\n    adesc94: \"[94] Grandmasters are Brilliant!: Complete [No Shards] five times.\",\n    adesc95: \"[95] Gotta get those Grandmasters Stronger: Complete [No Shards] ten times.\",\n    adesc96: \"[96] Summoning Enhancements: Complete [No Shards] twenty times.\",\n    adesc97: \"[97] Magic 99/99: Complete [No Shards] fifty times.\",\n    adesc98: \"[98] Perfect Foresight: Complete [No Shards] seventy-five times.\",\n    adesc99: \"[99] Inflation: Complete [Cost+] once.\",\n    adesc100: \"[100] Hyperinflation: Complete [Cost+] three times.\",\n    adesc101: \"[101] Market Bubble: Complete [Cost+] five times.\",\n    adesc102: \"[102] Bull Market: Complete [Cost+] ten times.\",\n    adesc103: \"[103] Wealth Inequality: Complete [Cost+] twenty times.\",\n    adesc104: \"[104] Severe Overpay: Complete [Cost+] fifty times.\",\n    adesc105: \"[105] Societal Collapse: Complete [Cost+] seventy-five times.\",\n    adesc106: \"[106] Excavation: Complete [Reduced Diamonds] once.\",\n    adesc107: \"[107] Digging Deep: Complete [Reduced Diamonds] three times.\",\n    adesc108: \"[108] Frack As Needed: Complete [Reduced Diamonds] five times.\",\n    adesc109: \"[109] Unobtainium Pickaxe: Complete [Reduced Diamonds] ten times.\",\n    adesc110: \"[110] Fortune III: Complete [Reduced Diamonds] twenty times.\",\n    adesc111: \"[111] Every kiss...: Complete [Reduced Diamonds] fifty times.\",\n    adesc112: \"[112] ...begins with K.: Complete [Reduced Diamonds] seventy-five times.\",\n    adesc113: \"[113] Tax evasion!: Complete {[Tax+]} once.\",\n    adesc114: \"[114] Keeping up with the Joneses: Complete {[Tax+]} twice.\",\n    adesc115: \"[115] Offshore deposits: Complete {[Tax+]} three times.\",\n    adesc116: \"[116] Bribing officials: Complete {[Tax+]} five times.\",\n    adesc117: \"[117] Becoming President: Complete {[Tax+]} ten times.\",\n    adesc118: \"[118] Charitable Donation: Complete {[Tax+]} fifteen times.\",\n    adesc119: \"[119] IRS Audit: Complete {[Tax+]} twenty-five times.\",\n    adesc120: \"[120] Is there anybody in there?: Complete {[No Accelerator/Multiplier]} once.\",\n    adesc121: \"[121] Human being: Complete {[No Accelerator/Multiplier]} twice.\",\n    adesc122: \"[122] Interdimensional: Complete {[No Accelerator/Multiplier]} three times.\",\n    adesc123: \"[123] A slow nickel: Complete {[No Accelerator/Multiplier]} five times.\",\n    adesc124: \"[124] Multipliers don't even work 0/5: Complete {[No Accelerator/Multiplier]} ten times.\",\n    adesc125: \"[125] Accelerators don't even work -5/5: Complete {[No Accelerator/Multiplier]} fifteen times.\",\n    adesc126: \"[126] ACCELERATOR BOOSTS DON'T EVEN WORK -100/5: Complete {[No Accelerator/Multiplier]} twenty-five times.\",\n    adesc127: \"[127] I hate this challenge: Complete Cost++ Once.\",\n    adesc128: \"[128] A costly mistake: Complete Cost++ Twice.\",\n    adesc129: \"[129] Impetus: Complete Cost++ Three Times.\",\n    adesc130: \"[130] Are you broke yet? Complete Cost++ Five Times.\",\n    adesc131: \"[131] The world of Finance: Complete Cost++ Ten Times.\",\n    adesc132: \"[132] Marginal Gains: Complete Cost++ Twenty Times.\",\n    adesc133: \"[133] I buy these: Complete Cost++ Twenty-Five Times.\",\n    adesc134: \"[134] Agnostic: Complete No Runes Once.\",\n    adesc135: \"[135] Ant-i Runes: Complete No Runes Twice.\",\n    adesc136: \"[136] Isn't it getting tiresome?: Complete No Runes Three Times.\",\n    adesc137: \"[137] Machine does not accept offerings: Complete No Runes Five Times.\",\n    adesc138: \"[138] Runes Suck 1/5: Complete No Runes Ten Times.\",\n    adesc139: \"[139] I didn't even notice Prism was gone: Complete No Runes Twenty Times.\",\n    adesc140: \"[140] Atheist: Complete No Runes Twenty-Five Times.\",\n    adesc141: \"[141] Sadism: Complete {[Sadistic I]} Once.\",\n    adesc142: \"[142] Masochism: Complete {[Sadistic I]} Twice.\",\n    adesc143: \"[143] Insanity: Complete {[Sadistic I]} Three Times.\",\n    adesc144: \"[144] How? Complete {[Sadistic I]} Five Times.\",\n    adesc145: \"[145] Why? Complete {[Sadistic I]} Ten Times.\",\n    adesc146: \"[146] Descend: Complete {[Sadistic I]} Twenty Times.\",\n    adesc147: \"[147] End of the Universe: Complete {[Sadistic I]} Twenty-Five Times.\",\n    adesc148: \"[148] Gas gas gas: Purchase 5 Accelerators.\",\n    adesc149: \"[149] 0 to 25: Purchase 25 Accelerators.\",\n    adesc150: \"[150] 0 to 100: Purchase 100 Accelerators\",\n    adesc151: \"[151] Highway to Hell: Purchase 666 Accelerators.\",\n    adesc152: \"[152] Perhaps you should brake: Purchase 2,000 Accelerators.\",\n    adesc153: \"[153] Exit the vehicle now!: Purchase 12,500 Accelerators.\",\n    adesc154: \"[154] Faster than light: Purchase 100,000 Accelerators.\",\n    adesc155: \"[155] I've been duped!: Purchase 2 Multipliers.\",\n    adesc156: \"[156] Funhouse Mirrors: Purchase 20 Multipliers.\",\n    adesc157: \"[157] Friend of binary: Purchase 100 Multipliers.\",\n    adesc158: \"[158] Feeling the cost growth yet?: Purchase 500 Multipliers.\",\n    adesc159: \"[159] Perhaps you'll feel the cost now: Purchase 2,000 Multipliers.\",\n    adesc160: \"[160] Exponential Synergy: Purchase 12,500 Multipliers.\",\n    adesc161: \"[161] Cloned: Purchase 100,000 Multipliers.\",\n    adesc162: \"[162] Jerk > 0: Purchase 2 Accelerator Boosts.\",\n    adesc163: \"[163] Can't the speedometer move any faster?: Purchase 10 Accelerator Boosts.\",\n    adesc164: \"[164] 50 G rotations: Purchase 50 Accelerator Boosts.\",\n    adesc165: \"[165] Dematerialize: Purchase 200 Accelerator Boosts.\",\n    adesc166: \"[166] Breaking the laws of Physics: Purchase 1,000 Accelerator Boosts.\",\n    adesc167: \"[167] Decayed Realism: Purchase 5,000 Accelerator Boosts.\",\n    adesc168: \"[168] Kinda fast: Purchase 15,000 Accelerator Boosts.\",\n    adesc169: \"[169] The Galactic Feast: Obtain 3 Galactic Crumbs.\",\n    adesc170: \"[170] Only the finest: Obtain 100,000 Galactic Crumbs.\",\n    adesc171: \"[171] Six-Course Meal: Obtain 666,666,666 Galactic Crumbs.\",\n    adesc172: \"[172] Accumulation of Food: Obtain 1e20 Galactic Crumbs.\",\n    adesc173: \"[173] Cookie Clicking: Obtain 1e40 Galactic Crumbs.\",\n    adesc174: \"[174] Unlimited Bread Sticks!: Obtain 1e500 Galactic Crumbs.\",\n    adesc175: \"[175] Restaurant at the end of the Universe: Obtain 1e2500 Galactic Crumbs.\",\n    adesc176: \"[176] Ant-icipation!: Amass a 2x Ant Multiplier through sacrifice and own a Tier 2 ant.\",\n    adesc177: \"[177] Ant-ecedent: Amass a 6x Ant Multiplier through sacrifice and own a Tier 3 ant.\",\n    adesc178: \"[178] Ants are friends, not food!: Amass a 20x Ant Multiplier through sacrifice and own a Tier 4 Ant.\",\n    adesc179: \"[179] Ant Devil?: Amass a 100x Ant Multiplier through sacrifice and own a Tier 5 Ant.\",\n    adesc180: \"[180] The world's best chef: Amass a 500x Ant Multiplier through sacrifice and own a Tier 6 Ant.\",\n    adesc181: \"[181] 6 Michelin Stars: Amass a 6,666x Ant Multiplier through sacrifice and own a Tier 7 Ant.\",\n    adesc182: \"[182] Keys to the Restaurant at the end of the Universe: Amass a 77,777x Ant Multiplier through sacrifice and own a Tier 8 Ant.\",\n    adesc183: \"[183] Up: Ascend Once.\",\n    adesc184: \"[184] Double-Up: Ascend Twice.\",\n    adesc185: \"[185] Give me Ten!: Ascend Ten Times.\",\n    adesc186: \"[186] Give me a Hundred: Ascend 100 Times.\",\n    adesc187: \"[187] Give me a Thousand: Ascend 1,000 Times.\",\n    adesc188: \"[188] Give me some arbitrary number I: Ascend 14,142 Times.\",\n    adesc189: \"[189] Give me some arbitrary number II: Ascend 141,421 Times.\",\n    adesc190: \"[190] Now that's what I call getting some Pi!: Attain a constant of 3.14.\",\n    adesc191: \"[191] One in a million: Attain a constant of 1,000,000 [1e6].\",\n    adesc192: \"[192] A number: Attain a constant of 4.32e10.\",\n    adesc193: \"[193] The coolest of numbers: Attain a constant of 6.9e21.\",\n    adesc194: \"[194] Planck^(-1): Attain a constant of 1.509e33.\",\n    adesc195: \"[195] Epsilon > a lot: Attain a constant of 1e66.\",\n    adesc196: \"[196] NUM_MAX: Attain a constant of 1.8e308.\",\n    adesc197: \"[197] Casualties: Clear 'Reduced Ants' challenge once.\",\n    adesc198: \"[198] Fatalities: Clear 'Reduced Ants' challenge twice.\",\n    adesc199: \"[199] Destruction: Clear 'Reduced Ants' challenge three times.\",\n    adesc200: \"[200] War, what is it good for?: Clear 'Reduced Ants' challenge five times.\",\n    adesc201: \"[201] Absolutely everything.: Clear 'Reduced Ants' challenge ten times.\",\n    adesc202: \"[202] Perfect Storm: Clear 'Reduced Ants' challenge twenty times.\",\n    adesc203: \"[203] Immaculate Storm: Clear 'Reduced Ants' challenge thirty times.\",\n    adesc204: \"[204] I didn't need those stupid reincarnations anyway!: Clear 'No Reincarnation' challenge once.\",\n    adesc205: \"[205] [x1,x2,0,x3]: Clear 'No Reincarnation' challenge twice.\",\n    adesc206: \"[206] Nonmetaphysical: Clear 'No Reincarnation' challenge three times.\",\n    adesc207: \"[207] Living alone: Clear 'No Reincarnation' challenge five times.\",\n    adesc208: \"[208] DM me on discord if you read these names: Clear 'No Reincarnation' challenge ten times.\",\n    adesc209: \"[209] Yeah: Clear 'No Reincarnation' challenge twenty times.\",\n    adesc210: \"[210] Science! Clear 'No Reincarnation' challenge thirty times.\",\n    adesc211: \"[211] The IRS strikes back: Clear 'Tax+++' challenge once.\",\n    adesc212: \"[212] Fiscal Policy: Clear 'Tax+++' challenge twice.\",\n    adesc213: \"[213] Economic Boom: Clear 'Tax+++' challenge three times.\",\n    adesc214: \"[214] Ant-onomics: Clear 'Tax+++' challenge five times.\",\n    adesc215: \"[215] 'Wow Platonic Tax sucks 1/5': Clear 'Tax+++' challenge ten times.\",\n    adesc216: \"[216] Haha this is hard for some reason: Clear 'Tax+++' challenge twenty times.\",\n    adesc217: \"[217] Taxes are hard: Clear 'Tax+++' challenge thirty times.\",\n    adesc218: \"[218] Shiny Blue Rock: Clear 'No Research' once.\",\n    adesc219: \"[219] It's like Avatar: Clear 'No Research' twice.\",\n    adesc220: \"[220] It's like Unobtainium: Clear 'No Research' three times.\",\n    adesc221: \"[221] It's like a thing: Clear 'No Research' five times.\",\n    adesc222: \"[222] It's like: Clear 'No Research' ten times.\",\n    adesc223: \"[223] It's: Clear 'No Research' twenty times.\",\n    adesc224: \"[224] It: Clear 'No Research' thirty times.\",\n    adesc225: \"[225] Pretty Corrupt: Clear an Ascension with above 100,000 score.\",\n    adesc226: \"[226] Bought out: Clear an Ascension with above 1 million score.\",\n    adesc227: \"[227] Utterly Corrupt: Clear an Ascension with above 10 million score.\",\n    adesc228: \"[228] Antitrust: Clear an Ascension with above 100 million score.\",\n    adesc229: \"[229] Ant-i-trust: Clear an Ascension with above 1 billion score.\",\n    adesc230: \"[230] This is pretty unfair: Clear an Ascension with above 5 billion score.\",\n    adesc231: \"[231] Antichrist: Clear an Ascension with above 25 billion score.\",\n    adesc232: \"[232] Highly Blessed: Level your Speed Rune blessing to 100,000.\",\n    adesc233: \"[233] Divine Blessing: Level your Speed Rune blessing to 100,000,000.\",\n    adesc234: \"[234] Blessing III: Level your Speed Rune blessing to 100 billion.\",\n    adesc235: \"[235] Spirit I: Level your Speed Spirit to 1 Million.\",\n    adesc236: \"[236] Spirit II: Level your Speed Spirit to 1 Billion.\",\n    adesc237: \"[237] Spirit III: Level your Speed Spirit to 1 Trillion.\",\n    adesc238: \"[238] Three-folded: [Hint: you may want to look into the inception]\",\n    adesc239: \"[239] Seeing red: [Hint: you may need a lot of red items]\",\n    adesc240: \"[240] ASCENDED: [Hint: you may need a LOT of ascensions OR an particularly amazing ascension]\",\n    adesc241: \"[241] Aesop: [Hint: you gotta be pretty dang slow]\",\n    adesc242: \"[242] Aesop's Revenge: [Hint: you gotta be pretty dang fast]\",\n    adesc243: \"[243] Unsmith: [Hint: unsmith emoji :unsmith: can be a pretty good input]\",\n    adesc244: \"[244] Smith: [Hint: :antismith: looks promising as well]\",\n    adesc245: \"[245] BLESSED: [Hint: Your Speed Blessing best be unreasonably high!]\",\n    adesc246: \"[246] Why? [Hint: Sometimes even 1 in over a Trillion counts!]\",\n    adesc247: \"[247] Challenging! [Hint: Challenge 11 is calling your name, but with even less ants]\",\n    adesc248: \"[248] Seeing Red but not Blue: [Hint: Can you get red stuff without getting blue stuff?]\",\n    adesc249: \"[249] Overtaxed: [Hint: It might pay not to read!]\",\n    adesc250: \"[250] The Thousand Suns: [Hint: You need to fully research into becoming GOD]\",\n    adesc251: \"[251] The Thousand Moons: [Hint: You may need to cube yourself up]\",\n    adesc252: \"[252] Ultimate: Complete 'SADISTIC II' challenge.\",\n    adesc253: \"[253] Platonicism: Clear an ascension with 1e12 score.\",\n    adesc254: \"[254] That's a handful!: Clear an ascension with 1e14 score.\",\n    adesc255: \"[255] The game where everything is made up: Clear an ascension with 1e17 score.\",\n    adesc256: \"[256] ... and the points don't matter: Clear an ascension with 2e18 score.\",\n    adesc257: \"[257] Arguably moral: Clear an ascension with 4e19 score.\",\n    adesc258: \"[258] Khafra's Personal Best: Clear an ascension with 1e21 score.\",\n    adesc259: \"[259] 100 million million million!: Clear an ascension with 1e23 score.\",\n    adesc260: \"[260] Highly Dimensional Being: Ascend a total of 10 million times.\",\n    adesc261: \"[261] Ant God's upheaval: Ascend a total of 100 million times.\",\n    adesc262: \"[262] Did you forget about ant god?: Ascend a total of 2 billion times.\",\n    adesc263: \"[263] Ant god is unemployed thanks to you: Ascend a total of 40 billion times.\",\n    adesc264: \"[264] I hope you're happy with yourself: Ascend a total of 800 billion times.\",\n    adesc265: \"[265] Oh well: Ascend a total of 16 trillion times.\",\n    adesc266: \"[266] Keep up the gradual numerical increase: Ascend a total of 100 trillion times.\",\n    adesc267: \"[267] Eigenvalued: Achieve a constant of 1e1,000.\",\n    adesc268: \"[268] Achieve Mathematics: Achieve a constant of 1e5,000.\",\n    adesc269: \"[269] Ramsay (5,5): Achieve a constant of 1e15,000.\",\n    adesc270: \"[270] What comes after this?: Achieve a constant of 1e50,000.\",\n    adesc271: \"[271] LARGE BOY: Achieve a constant of 1e100,000.\",\n    adesc272: \"[272] LARGER BOY: Achieve a constant of 1e300,000.\",\n    adesc273: \"[273] LARGEST BOY: Achieve a constant of 1e1,000,000.\",\n    adesc274: \"[274] Triskaidekaphobia [WIP]: Get a huge exponent with some absurd corruption setup.\",\n    adesc275: \"[275] ASCENDEDDDDDD [WIP]: So many damn ascensions, so little time!.\",\n    adesc276: \"[276] Two Hepteract, One Abyss [WIP]: Probably the worst investment you'll ever make.\",\n    adesc277: \"[277] Surprise Mechanic [WIP]: Get !!!!! quarks from the loot- WOW! Industry Content.\",\n    adesc278: \"[278] Shhhh [WIP]: Input the answer to this clue in the promotion codes, cAsE-sEnSiTiVe.\",\n    adesc279: \"[279] Perfect Customer [WIP]: What's a hundred upgrades towards a merchant? Apparently a lot.\",\n    adesc280: \"[280] Transcended [WIP]: Okay, maybe I won't leave this a secret. Get 20,000 summative challenge 1-5 completions!\",\n\n}\n\nexport const areward = (i: number): string => {\n    // May 22, 2021: Allow achievement bonus values display directly in the description\n    // Using areward as const object did not allow ${player object}\n\n    //Effective score is 3rd index\n    const corr = CalcCorruptionStuff();\n\n    const descs: {[key: number]: string} = {\n        3: \"Gain +.05% to Accelerator Power.\",\n        4: \"Start transcensions/challenges with Worker Autobuyer unlocked.\",\n        5: \"Gain +1 Accelerator per 500 Workers owned.\",\n        6: \"Gain +1 Multiplier per 1,000 Workers owned.\",\n        7: \"Gain +1 Accelerator Boost per 2,000 workers owned.\",\n        10: \"Gain +.10% to Accelerator Power.\",\n        11: \"Start transcensions/challenges with Investment Autobuyer unlocked.\",\n        12: \"Gain +1 Accelerator per 500 Investments owned.\",\n        13: \"Gain +1 Multiplier per 1,000 Investments owned.\",\n        14: \"Gain +1 Accelerator Boost per 2,000 Investments owned.\",\n        17: \"Gain +.15% to Accelerator Power.\",\n        18: \"Start transcensions/challenges with Printer Autobuyer unlocked.\",\n        19: \"Gain +1 Accelerator per 500 Printers owned.\",\n        20: \"Gain +1 Multiplier per 1,000 Printers owned.\",\n        21: \"Gain +1 Accelerator Boost per 2,000 Printers owned.\",\n        24: \"Gain +.20% to Accelerator Power.\",\n        25: \"Start transcensions/challenges with Coin Mint Autobuyer unlocked.\",\n        26: \"Gain +1 Accelerator per 500 Mints owned.\",\n        27: \"Gain +1 Multiplier per 1,000 Mints owned.\",\n        28: \"Gain +1 Accelerator Boost per 2,000 Mints owned.\",\n        31: \"Gain +.25% to Accelerator Power.\",\n        32: \"Start transcensions/challenges with Alchemy Autobuyer unlocked.\",\n        33: \"Gain 10% more offerings from resets || +1 Accelerator per 500 Alchemies!\",\n        34: \"Gain 15% more offerings from resets (stacks multiplicatively!) || +1 Multiplier per 1,000 Alchemies!\",\n        35: \"Gain 25% more offerings from resets (stacks multiplicatively!) || +1 Accelerator Boost per 2,000 Alchemies!\",\n        36: \"Multiply Crystal Production by 2x.\",\n        37: \"Multiply Crystal Production by the common logarithm of owned Diamonds. Prestiges give more offerings based on time spent (Up to +15 at 1800 seconds)\",\n        38: \"Unlock the Duplication rune!\",\n        43: \"Accelerator Boosts can be purchased from any screen. Unlock the Auto-Prestige feature.\",\n        44: \"Unlock the Prism Rune! Transcensions give more offerings based on time spent (Up to +15 at 1800 seconds)\",\n        45: \"Reduce tax scaling by up to 5%, depending on the length of prestige.\",\n        46: \"Reduce tax scaling by up to another 5%, depending on length of prestige.\",\n        47: \"Reduce tax scaling by up to ANOTHER 10%, depending on length of prestige!\",\n        50: \"Unlock new Atomic production and unlock 3 new incredibly difficult challenges! Gain 2x particles on all future Reincarnations!\",\n        51: \"Manual Reincarnations give +4 Obtainium (unaffected by multipliers except time multiplier)!\",\n        52: \"Reincarnations give more offerings based on time spent (Up to +25 at 1800 seconds)\",\n        53: \"Increase the amount of obtainium gained through all features by 0.125% additive for each rune level.\",\n        57: \"Gain +1, +1% free Multipliers!\",\n        58: \"Gain +1, +1% more free Multipliers!\",\n        59: \"Gain +1, +1% more, MORE free Multipliers!\",\n        60: \"Gain +2, +1% free Accelerators!\",\n        61: \"Gain +2, +1% more free Accelerators!\",\n        62: \"Gain +2, +1% more, MORE free Accelerators!\",\n        71: \"+1% Conversion Exponent on all generator upgrades!\",\n        72: \"+1% Conversion Exponent on all generator upgrades!\",\n        73: \"+1% Conversion Exponent on all generator upgrades!\",\n        74: \"+1% Conversion Exponent on all generator upgrades!\",\n        75: \"+1% Conversion Exponent on all generator upgrades!\",\n        76: \"+1% Conversion Exponent on all generator upgrades!\",\n        77: \"+1% Conversion Exponent on all generator upgrades! They're in overdrive now!\",\n        78: \"Start transcensions/challenges with 1 Refinery and automatically buy Refineries.\",\n        79: \"Automatically buy the first crystal upgrade if you can afford it!\",\n        80: \"Start transcensions/challenges with Multiplier Autobuyer unlocked. +5% offering recycle.\",\n        82: \"Delay tax growth by 4%.\",\n        84: \"+1% obtainium (stacks additively with other achievement rewards)\",\n        85: \"Start transcensions/challenges with 1 Coal Plant and automatically buy Coal Plants.\",\n        86: \"Automatically buy the second crystal upgrade if you can afford it!\",\n        87: \"Start transcensions/challenges with Accelerator Autobuyer unlocked. +5% offering recycle.\",\n        89: \"Delay tax growth by 4%.\",\n        91: \"+3% obtainium (stacks additively with other achievement rewards)\",\n        92: \"Start transcensions/challenges with 1 Coal Rig and automatically buy Coal Rigs.\",\n        93: \"Automatically buy the third crystal upgrade if you can afford it!\",\n        94: \"+5% offering recycle.\",\n        96: \"Delay tax growth by 4%.\",\n        98: \"+5% obtainium (stacks additively with other achievement rewards)\",\n        99: \"Start transcensions/challenges with 1 Diamond Pickaxe and automatically buy Diamond Pickaxes.\",\n        100: \"Automatically buy the fourth crystal upgrade if you can afford it!\",\n        101: \"+5% offering recycle.\",\n        102: \"Unlock the Thrift rune!\",\n        103: \"Delay tax growth by 4%.\",\n        105: \"+7% obtainium (stacks additively with other achievement rewards)\",\n        106: \"Start transcensions/challenges with 1 Pandora's Box and automatically buy Pandora's Boxes.\",\n        107: \"Automatically buy the fifth crystal upgrade if you can afford it!\",\n        108: \"+5% offering recycle.\",\n        110: \"Delay tax growth by 4%.\",\n        112: \"+9% obtainium (stacks additively with other achievement rewards)\",\n        115: \"+5% offering recycle.\",\n        117: \"Delay tax growth by 5.66%.\",\n        118: `Each Reincarnation challenge completion delays tax growth by 0.75% per level, multiplicative. Effect: ${format(Math.pow(0.9925, player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]), 4)}x`,\n        119: \"+11% obtainium. Unlock a nice trinket somewhere...\",\n        122: \"+7.5% offering recycle.\",\n        124: \"Delay tax growth by 5.66%. Unlock 5 new incredibly powerful researches!\",\n        126: \"+13% obtainium. You get an accessory to commemorate this moment!\",\n        127: \"Unlock 20 new incredibly expensive yet good researches. Unlock the [Anthill] feature!\",\n        128: \"Make researches go Cost-- with 1.5x Obtainium!\",\n        129: \"+7.5% offering recycle. Gain another 1.25x Obtainium multiplier!\",\n        131: \"Delay tax growth by 5.66%.\",\n        132: \"Permanently gain +25% more sacrifice reward!\",\n        133: \"+15% obtainium. Obtain the gift of Midas himself.\",\n        134: \"Unlock 10 newer incredibly expensive yet good researches. Unlock <<Talismans>> in the Runes Tab!\",\n        135: \"Talisman positive bonuses are now +0.05 stronger per level.\",\n        136: \"Talisman positive bonuses are now +0.05 even stronger per level.\",\n        137: \"Permanently gain +25% more sacrifice reward!\",\n        140: \"+17% obtainium. Lazy joke about not leaking talismans here [You get a new one]\",\n        141: \"Unlock a new reset tier!\",\n        147: \"+19% obtainium (Achievement total is up to 100%!). Gain the Polymath Talisman!\",\n        169: `ALL Ant speed multiplied by ${format(Decimal.log(player.antPoints.add(10), 10), 2)}`,\n        171: \"+16.666% ALL Ant speed!\",\n        172: \"Gain more ants the longer your reincarnation lasts (max speed achieved in 2 hours)\",\n        173: \"Unlock Ant Sacrifice, allowing you to reset your ants and ant upgrades in exchange for amazing rewards! Automatically buy Worker Ants.\",\n        174: `Ant Multiplier from sacrifice is multiplied by another logarithm: x${format(0.4 * Decimal.log(player.antPoints.add(1), 10), 2)}`,\n        176: \"Unlock Tier 2 Ant autobuy, and autobuy Inceptus and Fortunae ants! Add +25 Base Ant ELO.\",\n        177: \"Unlock Tier 3 Ant autobuy, and autobuy Tributum ants! Add +50 Base Ant ELO.\",\n        178: \"Unlock Tier 4 Ant autobuy, and autobuy Celeritas and Multa ants! Add +75 Base Ant ELO.\",\n        179: \"Unlock Tier 5 Ant autobuy, and autobuy Sacrificium ants! Add +100 Base Ant ELO.\",\n        180: \"Unlock Tier 6 Ant autobuy, and autobuy Hic and Experientia ants! Add +1% Base Ant ELO.\",\n        181: \"Unlock Tier 7 Ant autobuy, and autobuy Praemoenio ants! Add +2% Base Ant ELO.\",\n        182: \"Unlock Tier 8 Ant autobuy, and autobuy Scientia and Phylacterium ants! Add +3% Base Ant ELO.\",\n        187: `Gain an Ascension cubes multiplier based on your score: x${format(Math.max(1, Math.log10(corr[3]+1) - 7), 2)}. Also: Offerings +${format(Math.min(100, player.ascensionCount / 10000), 2)}% [Max: 100% at 1M Ascensions]`,\n        188: `Gain +100 ascension count for all ascensions longer than 10 seconds. Also: Obtainium +${format(Math.min(100, player.ascensionCount / 50000), 2)}% [Max: 100% at 5M Ascensions]`,\n        189: `Gain 20% of excess time after 10 seconds each Ascension as a linear multiplier to ascension count. Also: Cubes +${format(Math.min(200, player.ascensionCount / 2.5e6), 2)}% [Max: 200% at 500M Ascensions]`,\n        193: `Gain ${format(Decimal.log(player.ascendShards.add(1), 10) / 4, 2)}% more Cubes on ascension!`,\n        195: `Gain ${format(Math.min(25000, Decimal.log(player.ascendShards.add(1), 10) / 4, 2))}% more Cubes and Tesseracts on ascension! Multiplicative with the other Ach. bonus [MAX: 25,000% at e100,000 Const]`,\n        196: `Gain ${format(Math.min(2000, Decimal.log(player.ascendShards.add(1), 10) / 50, 2))}% more Platonic Cubes on ascension! [MAX: 2,000% at e100,000 Const]`,\n        197: \"You will unlock a stat tracker for ascensions.\",\n        198: \"Gain +4% Cubes on ascension!\",\n        199: \"Gain +4% Cubes on ascension!\",\n        200: \"Gain +4% Cubs on ascension! Did I spell that wrong? You bet I did.\",\n        201: \"Gain +3% Cubes on ascension!\",\n        202: `Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascension count. Also: Tesseracts +${format(Math.min(200, player.ascensionCount / 5e6), 2)}% [Max: 200% at 1B Ascensions]`,\n        204: \"You will gain 25% of excess time after 10 seconds each Ascension as a linear multiplier to rewards.\",\n        205: \"Gain +4% Tesseracts on ascension!\",\n        206: \"Gain +4% Tesseracts on ascension!\",\n        207: \"Gain +4% Tesseracts on ascension!\",\n        208: \"Gain +3% Tesseracts on ascension!\",\n        209: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascension count.\",\n        211: \"You will gain 25% MORE excess time (Total: 50%) after 10 seconds each Ascension as a linear multiplier to rewards.\",\n        212: \"Gain +4% Hypercubes on ascension!\",\n        213: \"Gain +4% Hypercubes on ascension!\",\n        214: \"Gain +4% Hypercubes on ascension!\",\n        215: \"Gain +3% Hypercubes on ascension!\",\n        216: `Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascension count. Also: Hypercubes +${format(Math.min(200, player.ascensionCount / 1e7), 2)}% [Max: 200% at 2B Ascensions]`,\n        218: \"You gain gain 50% MORE MORE excess time (Total: 100%) after 10 seconds each Ascension as a linear multiplier to rewards.\",\n        219: \"Gain +4% Platonic Cubes on ascension!\",\n        220: \"Gain +4% Platonic Cubes on ascension!\",\n        221: \"Gain +4% Platonic Cubes on ascension!\",\n        222: \"Gain +3% Platonic Cubes on ascension!\",\n        223: `Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascension count. Also: Platonic Cubes +${format(Math.min(200, player.ascensionCount / 13370000), 2)}% [Max: 200% at 2.674B Ascensions]`,\n        240: `Ascension Cube Gain Multipliers is VERY slightly affected by global speed multipliers: ${format(Math.min(1.5, 1 + Math.max(2, Math.log10(calculateTimeAcceleration()))/20), 2)}x (Min: 1.10x, Max: 1.50x)`, \n        250: \"You gain a permanent +60% Obtainium and Offering bonus, with +6% all cube types!\",\n        251: \"You gain a permanent +100% Obtainium and Offering bonus, with +10% all cube types!\",\n        253: \"You will gain +10% Hypercubes! Why? I don't know.\",\n        254: `Cube Gain +${format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true)}% [Max: +15% at 1e25 Ascension Score]`,\n        255: `Tesseract Gain +${format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true)}% [Max: +15% at 1e25 Ascension Score], and allow gain of Hepteracts.`,\n        256: `Hypercube Gain +${format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true)}% [Max: +15% at 1e25 Ascension Score]. Also, Overflux Powder conversion rate is 5% better!`,\n        257: `Platonic Gain +${format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true)}% [Max: +15% at 1e25 Ascension Score]. Also, Overflux Powder conversion rate is 5% better!`,\n        258: `Hepteract Gain +${format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true)}% [Max: +15% at 1e25 Ascension Score]`,\n        259: \"Ascensions are 25% faster, forever!\",\n        260: \"You will gain 10% more ascension count, forever!\",\n        261: \"You will gain 10% more ascension count, forever!\",\n        262: `Ascensions are ${format(Math.min(10, Math.log10(player.ascensionCount+1)), 2)}% faster! Max: +10%`,\n        263: `Ascensions are ${format(Math.min(10, Math.log10(player.ascensionCount+1)), 2)}% faster! Max: +10%`,\n        264: `Hepteracts +${format(Math.min(40, player.ascensionCount / 2e11), 2)}% [Max: 40% at 8T Ascensions]!`,\n        265: `Hepteracts +${format(Math.min(20, player.ascensionCount / 8e12), 2)}% [Max: 20% at 160T Ascensions]!`,\n        266: `Quarks +${format(Math.min(10, player.ascensionCount / 1e14), 2)}% [Max: 10% at 1Qa Ascensions]!`,\n        267: `Ascension Score is boosted by ${format(Math.min(100, Decimal.log(player.ascendShards.add(1), 10) / 1000), 2)}% [Max: 100% at 1e100,000 Const]`,\n        270: `Hepteract Gain is boosted by ${format(Decimal.log(player.ascendShards.add(1), 10) / 10000, 2)}% [Max: 100% at 1e1,000,000 const], Constant Upgrade 1 boosted to 1.06 (from 1.05), Constant Upgrade 2 boosted to 1.11 (from 1.10).`,\n        271: `When you open a Platonic Cube, gain ${format(Math.max(0, Math.min(1, (Decimal.log(player.ascendShards.add(1), 10) - 1e5) / 9e5)), 2, true)} Hypercubes, rounded down [Max: 1 at 1e1,000,000 Const]`\n    }\n\n    if(i in descs)\n        return descs[i]\n    else\n        return ''\n}\n\nexport const achievementAlerts = async (num: number) => {\n    let text = ''\n    switch(num){\n        case 36:\n            text = 'Congratulations on your first prestige. The first of many. You obtain offerings. You can use them in the new Runes tab! [Unlocked Runes, Achievements, Diamond Buildings and some Upgrades!]'\n            break;\n        case 38:\n            text = 'Hmm, it seems you are getting richer, being able to get 1 Googol diamonds in a single prestige. How about we give you another rune? [Unlocked Duplication rune in Runes tab!]'\n            break;\n        case 255:\n            text = 'Wow! You gained 1e17 (100 Quadrillion) score in a single Ascension. For that, you can now generate Hepteracts if you get above 6.66e16 (66.6 Quadrillion) score in an Ascension. Good luck!'\n    }\n\n    if (text !== '')\n        return Alert(text)\n}\n//${format(Decimal.log(player.ascendShards.add(1), 10) / 1000, 2)} (log(constant)/1000)%!\n\n// TODO: clean this up\nexport const resetachievementcheck = (i: number) => {\n    if (i === 1) {\n        if (player.prestigenoaccelerator === true) {\n            achievementaward(60)\n        }\n        if (player.prestigenomultiplier === true) {\n            achievementaward(57)\n        }\n        if (player.prestigenocoinupgrades === true) {\n            achievementaward(64)\n        }\n        if (G['prestigePointGain'].gte(1)) {\n            achievementaward(36)\n\n        }\n        if (G['prestigePointGain'].gte(1e6)) {\n            achievementaward(37)\n\n        }\n        if (G['prestigePointGain'].gte(1e100)) {\n            achievementaward(38)\n        }\n        if (G['prestigePointGain'].gte(\"1e1000\")) {\n            achievementaward(39)\n\n        }\n        if (G['prestigePointGain'].gte(\"1e10000\")) {\n            achievementaward(40)\n\n        }\n        if (G['prestigePointGain'].gte(\"1e77777\")) {\n            achievementaward(41)\n\n        }\n        if (G['prestigePointGain'].gte(\"1e250000\")) {\n            achievementaward(42)\n\n        }\n    }\n    if (i === 2) {\n        if (player.transcendnoaccelerator === true) {\n            achievementaward(61)\n        }\n        if (player.transcendnomultiplier === true) {\n            achievementaward(58)\n        }\n        if (player.transcendnocoinupgrades === true) {\n            achievementaward(65)\n        }\n        if (player.transcendnocoinorprestigeupgrades === true) {\n            achievementaward(66)\n        }\n        if (G['transcendPointGain'].gte(1)) {\n            achievementaward(43)\n        }\n        if (G['transcendPointGain'].gte(1e6)) {\n            achievementaward(44)\n        }\n        if (G['transcendPointGain'].gte(1e50)) {\n            achievementaward(45)\n        }\n        if (G['transcendPointGain'].gte(1e308)) {\n            achievementaward(46)\n        }\n        if (G['transcendPointGain'].gte(\"1e1500\")) {\n            achievementaward(47)\n        }\n        if (G['transcendPointGain'].gte(\"1e25000\")) {\n            achievementaward(48)\n        }\n        if (G['transcendPointGain'].gte(\"1e100000\")) {\n            achievementaward(49)\n        }\n    }\n    if (i === 3) {\n        if (player.reincarnatenoaccelerator === true) {\n            achievementaward(62)\n        }\n        if (player.reincarnatenomultiplier === true) {\n            achievementaward(59)\n        }\n        if (player.reincarnatenocoinupgrades === true) {\n            achievementaward(67)\n        }\n        if (player.reincarnatenocoinorprestigeupgrades === true) {\n            achievementaward(68)\n        }\n        if (player.reincarnatenocoinprestigeortranscendupgrades === true) {\n            achievementaward(69)\n        }\n        if (player.reincarnatenocoinprestigetranscendorgeneratorupgrades === true) {\n            achievementaward(70)\n        }\n        if (G['reincarnationPointGain'].gte(1)) {\n            achievementaward(50)\n\n        }\n        if (G['reincarnationPointGain'].gte(1e5)) {\n            achievementaward(51)\n\n        }\n        if (G['reincarnationPointGain'].gte(1e30)) {\n            achievementaward(52)\n\n        }\n        if (G['reincarnationPointGain'].gte(1e200)) {\n            achievementaward(53)\n\n        }\n        if (G['reincarnationPointGain'].gte(\"1e1500\")) {\n            achievementaward(54)\n\n        }\n        if (G['reincarnationPointGain'].gte(\"1e5000\")) {\n            achievementaward(55)\n\n        }\n        if (G['reincarnationPointGain'].gte(\"1e7777\")) {\n            achievementaward(56)\n\n        }\n    }\n}\n\n/**\n * Array of [index, bar to get achievement if greater than, achievement number]\n */\nconst challengeCompletionsBar: [number, number, number][] = [\n    [1, 0.5, 78], [1, 2.5, 79], [1, 4.5, 80], [1, 9.5, 81], [1, 19.5, 82], [1, 49.5, 83], [1, 74.5, 84],\n    [2, 0.5, 85], [2, 2.5, 86], [2, 4.5, 87], [2, 9.5, 88], [2, 19.5, 89], [2, 49.5, 90], [2, 74.5, 91],\n    [3, 0.5, 92], [3, 2.5, 93], [3, 4.5, 94], [3, 9.5, 95], [3, 19.5, 96], [3, 49.5, 97], [3, 74.5, 98], \n    [4, 0.5, 99], [4, 2.5, 100], [4, 4.5, 101], [4, 9.5, 102], [4, 19.5, 103], [4, 49.5, 104], [4, 74.5, 105],\n    [5, 0.5, 106], [5, 2.5, 107], [5, 4.5, 108], [5, 9.5, 109], [5, 19.5, 110], [5, 49.5, 111], [5, 74.5, 112],\n    [6, 0.5, 113], [6, 1.5, 114], [6, 2.5, 115], [6, 4.5, 116], [6, 9.5, 117], [6, 14.5, 118], [6, 24.5, 119],\n    [7, 0.5, 120], [7, 1.5, 121], [7, 2.5, 122], [7, 4.5, 123], [7, 9.5, 124], [7, 14.5, 125], [7, 24.5, 126],\n    [8, 0.5, 127], [8, 1.5, 128], [8, 2.5, 129], [8, 4.5, 130], [8, 9.5, 131], [8, 19.5, 132], [8, 24.5, 133],\n    [9, 0.5, 134], [9, 1.5, 135], [9, 2.5, 136], [9, 4.5, 137], [9, 9.5, 138], [9, 19.5, 139], [9, 24.5, 140],\n    [10, 0.5, 141], [10, 1.5, 142], [10, 2.5, 143], [10, 4.5, 144], [10, 9.5, 145], [10, 19.5, 146], [10, 24.5, 147]\n];\n\nconst challengeCompletionsNotAuto: Record<number, [string, number]> = {\n    1: ['1e1000', 75],\n    2: ['1e1000', 76],\n    3: ['1e99999', 77],\n    5: ['1e120000', 63]\n}\n\nexport const challengeachievementcheck = (i: number, auto?: boolean) => {\n    const generatorcheck = sumContents(player.upgrades.slice(101, 106));\n    \n    for (const [, bar, ach] of challengeCompletionsBar.filter(([o]) => o === i)) {\n        if (player.challengecompletions[i] > bar) {\n            achievementaward(ach);\n        }\n    }\n\n    // Challenges 1, 2, 3 check for not buying generators and getting X coins\n    // Challenge 5 check for not buying Acc/Acc Boosts and getting 1.00e120,000 coins\n    if ([1, 2, 3, 5].includes(i) && !auto) {\n        const [gte, ach] = challengeCompletionsNotAuto[i];\n        if (i === 5) {\n            if (player.coinsThisTranscension.gte(gte) && player.acceleratorBought === 0 && player.acceleratorBoostBought === 0) {\n                achievementaward(ach)\n            }\n        } else if (player.coinsThisTranscension.gte(gte) && generatorcheck === 0) {\n            achievementaward(ach);\n        }\n    }\n\n    if (i >= 11 && i <= 14) {\n        const challengeArray = [0, 1, 2, 3, 5, 10, 20, 30]\n        for (let j = 1; j <= 7; j++) {\n            if (player.challengecompletions[i] >= challengeArray[j] && player.achievements[119 + 7 * i + j] < 1) {\n                achievementaward(119 + 7 * i + j)\n            }\n        }\n    }\n}\n\n// \\) \\{\\n\\s+achievementaward\\(\\d+\\)\\n\\s+\\}\n\n/**\n * Requirements for each building achievement\n * @type {(() => boolean)[]}\n */\nconst buildAchievementReq: (() => boolean)[] = [\n    () => player.firstOwnedCoin >= 1 && player.achievements[1] < 0.5,\n    () => player.firstOwnedCoin >= 10 && player.achievements[2] < 0.5,\n    () => player.firstOwnedCoin >= 100 && player.achievements[3] < 0.5,\n    () => player.firstOwnedCoin >= 1000 && player.achievements[4] < 0.5,\n    () => player.firstOwnedCoin >= 5000 && player.achievements[5] < 0.5,\n    () => player.firstOwnedCoin >= 10000 && player.achievements[6] < 0.5,\n    () => player.firstOwnedCoin >= 20000 && player.achievements[7] < 0.5,\n    () => player.secondOwnedCoin >= 1 && player.achievements[8] < 0.5,\n    () => player.secondOwnedCoin >= 10 && player.achievements[9] < 0.5,\n    () => player.secondOwnedCoin >= 100 && player.achievements[10] < 0.5,\n    () => player.secondOwnedCoin >= 1000 && player.achievements[11] < 0.5,\n    () => player.secondOwnedCoin >= 5000 && player.achievements[12] < 0.5,\n    () => player.secondOwnedCoin >= 10000 && player.achievements[13] < 0.5,\n    () => player.secondOwnedCoin >= 20000 && player.achievements[14] < 0.5,\n    () => player.thirdOwnedCoin >= 1 && player.achievements[15] < 0.5,\n    () => player.thirdOwnedCoin >= 10 && player.achievements[16] < 0.5,\n    () => player.thirdOwnedCoin >= 100 && player.achievements[17] < 0.5,\n    () => player.thirdOwnedCoin >= 1000 && player.achievements[18] < 0.5,\n    () => player.thirdOwnedCoin >= 5000 && player.achievements[19] < 0.5,\n    () => player.thirdOwnedCoin >= 10000 && player.achievements[20] < 0.5,\n    () => player.thirdOwnedCoin >= 20000 && player.achievements[21] < 0.5,\n    () => player.fourthOwnedCoin >= 1 && player.achievements[22] < 0.5,\n    () => player.fourthOwnedCoin >= 10 && player.achievements[23] < 0.5,\n    () => player.fourthOwnedCoin >= 100 && player.achievements[24] < 0.5,\n    () => player.fourthOwnedCoin >= 1000 && player.achievements[25] < 0.5,\n    () => player.fourthOwnedCoin >= 5000 && player.achievements[26] < 0.5,\n    () => player.fourthOwnedCoin >= 10000 && player.achievements[27] < 0.5,\n    () => player.fourthOwnedCoin >= 20000 && player.achievements[28] < 0.5,\n    () => player.fifthOwnedCoin >= 1 && player.achievements[29] < 0.5,\n    () => player.fifthOwnedCoin >= 10 && player.achievements[30] < 0.5,\n    () => player.fifthOwnedCoin >= 66 && player.achievements[31] < 0.5,\n    () => player.fifthOwnedCoin >= 666 && player.achievements[32] < 0.5,\n    () => player.fifthOwnedCoin >= 6666 && player.achievements[33] < 0.5,\n    () => player.fifthOwnedCoin >= 17777 && player.achievements[34] < 0.5,\n    () => player.fifthOwnedCoin >= 42777 && player.achievements[35] < 0.5,\n];\n\nexport const buildingAchievementCheck = () => {\n    for (const req of buildAchievementReq) {\n        if(req()) {\n            const idx = buildAchievementReq.indexOf(req) + 1;\n            achievementaward(idx);\n        }\n    }\n}\n\nexport const ascensionAchievementCheck = (i: number, score = 0) => {\n    if (i === 1) {\n        const ascendCountArray = [0, 1, 2, 10, 100, 1000, 14142, 141421, 1414213, //Column 1\n                                  1e7, 1e8, 2e9, 4e10, 8e11, 1.6e13, 1e14] //Column 2\n        for (let j = 1; j <= 7; j++) {\n            if (player.ascensionCount >= ascendCountArray[j] && player.achievements[182 + j] < 1) {\n                achievementaward(182 + j)\n            }\n            if (player.ascensionCount >= ascendCountArray[j + 8] && player.achievements[259 + j] < 1) {\n                achievementaward(259 + j)\n            }\n        }\n        if (player.ascensionCount >= ascendCountArray[8] && player.achievements[240] < 1) {\n            achievementaward(240)\n        }\n    }\n    if (i === 2) {\n        const constantArray = [0, 3.14, 1e6, 4.32e10, 6.9e21, 1.509e33, 1e66, \"1.8e308\", //Column 1\n                               \"1e1000\", \"1e5000\", \"1e15000\", \"1e50000\", \"1e100000\", \"1e300000\", \"1e1000000\"] //Column 2\n        for (let j = 1; j <= 7; j++) {\n            if (player.ascendShards.gte(constantArray[j]) && player.achievements[189 + j] < 1) {\n                achievementaward(189 + j)\n            }\n            if (player.ascendShards.gte(constantArray[j + 7]) && player.achievements[266 + j] < 1) {\n                achievementaward(266 + j)\n            }\n        }\n    }\n    if (i === 3) {\n        const scoreArray = [0, 1e5, 1e6, 1e7, 1e8, 1e9, 5e9, 2.5e10, //Column 1\n                            1e12, 1e14, 1e17, 2e18, 4e19, 1e21, 1e23] //Column 2\n        for (let j = 1; j <= 7; j++) {\n            if (score >= scoreArray[j] && player.achievements[224 + j] < 1) {\n                achievementaward(224 + j)\n            }\n\n            if (score >= scoreArray[7 + j] && player.achievements[252 + j] < 1) {\n                achievementaward(252 + j)\n            }\n        }\n    }\n}\n\nexport const achievementdescriptions = (i: number) => {\n    const y = adesc[`adesc${i}` as keyof typeof adesc];\n    const z = player.achievements[i] > 0.5 ? ' COMPLETED!' : '';\n    const k = areward(i)\n    //const k = areward[`areward${i}` as keyof typeof areward] || '';\n    let multiplier = 1\n    if (i >= 183) \n        multiplier = 5\n    if (i >= 253)\n        multiplier = 40\n\n    document.getElementById(\"achievementdescription\").textContent = y + z\n    document.getElementById(\"achievementreward\").textContent = \"Reward: \" + achievementpointvalues[i] + \" AP. \" + format(achievementpointvalues[i] * multiplier) + \" Quarks! \" + k\n    if (player.achievements[i] > 0.5) {\n        document.getElementById(\"achievementdescription\").style.color = \"gold\"\n    } else {\n        document.getElementById(\"achievementdescription\").style.color = \"white\"\n    }\n}\n\nexport const achievementaward = (num: number) => {\n    if (player.achievements[num] < 1) {\n        achievementAlerts(num)\n        player.achievementPoints += achievementpointvalues[num]\n        let multiplier = 1\n        if (num >= 183)\n            multiplier = 5\n        if (num >= 253)\n            multiplier = 40\n        player.worlds.add(achievementpointvalues[num] * multiplier);\n        document.getElementById(\"achievementprogress\").textContent = \"Achievement Points: \" + player.achievementPoints + \"/\" + totalachievementpoints + \" [\" + (100 * player.achievementPoints / totalachievementpoints).toPrecision(4) + \"%]\"\n        player.achievements[num] = 1;\n        revealStuff()\n    }\n    document.getElementById(`ach${num}`).style.backgroundColor = \"Green\";\n    Synergism.emit('achievement', num);\n}\n\n", "import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { CalcECC } from './Challenges';\nimport { calculateRuneLevels } from './Calculate';\nimport { achievementaward } from './Achievements';\n\nconst talismanResourceCosts = {\n    shard: {\n        obtainium: 1e13,\n        offerings: 1e2,\n        name: \"Talisman Shard\"\n    },\n    commonFragment: {\n        obtainium: 1e14,\n        offerings: 1e4,\n        name: \"Common Fragment\"\n    },\n    uncommonFragment: {\n        obtainium: 1e16,\n        offerings: 1e5,\n        name: \"Uncommon Fragment\"\n    },\n    rareFragment: {\n        obtainium: 1e18,\n        offerings: 1e6,\n        name: \"Rare Fragment\"\n    },\n    epicFragment: {\n        obtainium: 1e20,\n        offerings: 1e7,\n        name: \"Epic Fragment\"\n    },\n    legendaryFragment: {\n        obtainium: 1e22,\n        offerings: 1e8,\n        name: \"Legendary Fragment\"\n    },\n    mythicalFragment: {\n        obtainium: 1e24,\n        offerings: 1e9,\n        name: \"Mythical Fragment\"\n    },\n}\n\nconst num = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"] as const;\n\nconst getTalismanResourceInfo = (type: keyof typeof talismanResourceCosts, percentage = player.buyTalismanShardPercent) => {\n    const obtainiumCost = talismanResourceCosts[type].obtainium;\n    const offeringCost = talismanResourceCosts[type].offerings;\n\n    const maxBuyObtainium = Math.max(1, Math.floor(player.researchPoints / obtainiumCost));\n    const maxBuyOffering = Math.max(1, Math.floor(player.runeshards / (offeringCost)));\n    const amountToBuy = Math.max(1, Math.floor(percentage / 100 * Math.min(maxBuyObtainium, maxBuyOffering)));\n    const canBuy = (obtainiumCost <= player.researchPoints && offeringCost <= player.runeshards) ? true : false;\n    return {\n        canBuy: canBuy, //Boolean, if false will not buy any fragments\n        buyAmount: amountToBuy, //Integer, will buy as specified above.\n        obtainiumCost: obtainiumCost * amountToBuy, //Integer, cost in obtainium to buy (buyAmount) resource\n        offeringCost: offeringCost * amountToBuy //Integer, cost in offerings to buy (buyAmount) resource\n    };\n};\n\nexport const updateTalismanCostDisplay = (type: keyof typeof talismanResourceCosts, percentage = player.buyTalismanShardPercent) => {\n    const el = document.getElementById(\"talismanFragmentCost\");\n    const talismanCostInfo = getTalismanResourceInfo(type, percentage);\n    const TalismanName = talismanResourceCosts[type].name;\n\n    el.textContent = \"Cost to buy \" + format(talismanCostInfo.buyAmount) + \" \" + TalismanName + (talismanCostInfo.buyAmount>1?\"s\":\"\") + \": \" + format(talismanCostInfo.obtainiumCost) + \" Obtainium and \" + format(talismanCostInfo.offeringCost) + \" offerings.\"\n}\n\nexport const toggleTalismanBuy = (i = player.buyTalismanShardPercent) => {\n    document.getElementById(\"talismanTen\").style.backgroundColor = \"\"\n    document.getElementById(\"talismanTwentyFive\").style.backgroundColor = \"\"\n    document.getElementById(\"talismanFifty\").style.backgroundColor = \"\"\n    document.getElementById(\"talismanHundred\").style.backgroundColor = \"\"\n    player.buyTalismanShardPercent = i\n    let x = \"Ten\";\n    if (i === 25) {\n        x = \"TwentyFive\"\n    }\n    if (i === 50) {\n        x = \"Fifty\"\n    }\n    if (i === 100) {\n        x = \"Hundred\"\n    }\n\n    document.getElementById(`talisman${x}`).style.backgroundColor = \"green\"\n}\n\nexport const updateTalismanInventory = () => {\n    document.getElementById(\"talismanShardInventory\").textContent = format(player.talismanShards);\n    document.getElementById(\"commonFragmentInventory\").textContent = format(player.commonFragments);\n    document.getElementById(\"uncommonFragmentInventory\").textContent = format(player.uncommonFragments);\n    document.getElementById(\"rareFragmentInventory\").textContent = format(player.rareFragments);\n    document.getElementById(\"epicFragmentInventory\").textContent = format(player.epicFragments);\n    document.getElementById(\"legendaryFragmentInventory\").textContent = format(player.legendaryFragments);\n    document.getElementById(\"mythicalFragmentInventory\").textContent = format(player.mythicalFragments);\n}\n\nexport const buyTalismanResources = (type: keyof typeof talismanResourceCosts, percentage = player.buyTalismanShardPercent) => {\n    const talismanResourcesData = getTalismanResourceInfo(type, percentage)\n\n    if (talismanResourcesData.canBuy) {\n        if (type === 'shard') {\n            player.talismanShards += talismanResourcesData.buyAmount\n        } else {\n            player[`${type}s` as const] += talismanResourcesData.buyAmount\n        }\n        if (type === 'mythicalFragment' && player.mythicalFragments >= 1e25 && player.achievements[239] < 1) {\n            achievementaward(239)\n        }\n\n        player.researchPoints -= talismanResourcesData.obtainiumCost;\n        player.runeshards -= talismanResourcesData.offeringCost;\n\n        // When dealing with high values, calculations can be very slightly off due to floating point precision\n        // and result in buying slightly (usually 1) more than the player can actually afford.\n        // This results in negative obtainium or offerings with further calcs somehow resulting in NaN/undefined.\n        // Instead of trying to work around floating point limits, just make sure nothing breaks as a result.\n        // The calculation being done overall is similar to the following calculation:\n        // 2.9992198253874083e47 - (Math.floor(2.9992198253874083e47 / 1e20) * 1e20)\n        // which, for most values, returns 0, but values like this example will return a negative number instead.\n        if (player.researchPoints < 0) {\n            player.researchPoints = 0;\n        }\n        if (player.runeshards < 0) {\n            player.runeshards = 0;\n        }\n    }\n    updateTalismanCostDisplay(type, percentage)\n    updateTalismanInventory()\n}\n\nexport const showTalismanEffect = (i: number) => {\n    document.getElementById(\"talismanlevelup\").style.display = \"none\"\n    document.getElementById(\"talismanEffect\").style.display = \"block\"\n    document.getElementById(\"talismanrespec\").style.display = \"none\"\n    const a = document.getElementById(\"talismanSummary\")\n    const b = document.getElementById(\"talismanBonus\")\n    const c = document.getElementById(\"talismanRune1Effect\")\n    const d = document.getElementById(\"talismanRune2Effect\")\n    const e = document.getElementById(\"talismanRune3Effect\")\n    const f = document.getElementById(\"talismanRune4Effect\")\n    const g = document.getElementById(\"talismanRune5Effect\")\n    const h = document.getElementById(\"talismanMythicEffect\")\n\n    switch (i) {\n        case 1:\n            a.textContent = \"=-=-=-= Exemption Talisman Effects =-=-=-=\";\n            b.textContent = \"Taxes -\" + format(10 * (player.talismanRarity[1-1] - 1)) + \"%\"\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman1Effect'][1], 2, true)\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman1Effect'][2], 2, true)\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman1Effect'][3], 2, true)\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman1Effect'][4], 2, true)\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman1Effect'][5], 2, true)\n            h.textContent = \"Mythic Effect: +400 Duplication Rune Levels!\"\n            break;\n        case 2:\n            a.textContent = \"=-=-=-= Chronos Talisman Effects =-=-=-=\";\n            b.textContent = \"Gain +\" + format(10 * (player.talismanRarity[2-1] - 1)) + \"% Global Speed Acceleration.\"\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman2Effect'][1], 2, true)\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman2Effect'][2], 2, true)\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman2Effect'][3], 2, true)\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman2Effect'][4], 2, true)\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman2Effect'][5], 2, true)\n            h.textContent = \"Mythic Effect: +400 Speed Rune Levels!\"\n            break;\n        case 3:\n            a.textContent = \"=-=-=-= Midas Talisman Effects =-=-=-=\";\n            b.textContent = \"Rune Blessing bonuses +\" + format(10 * (player.talismanRarity[3-1] - 1)) + \"%\"\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman3Effect'][1], 2, true)\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman3Effect'][2], 2, true)\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman3Effect'][3], 2, true)\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman3Effect'][4], 2, true)\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman3Effect'][5], 2, true)\n            h.textContent = \"Mythic Effect: +400 Thrift Rune Levels!\"\n            break;\n        case 4:\n            a.textContent = \"=-=-=-= Metaphysics Talisman Effects =-=-=-=\";\n            b.textContent = \"Talismans' Bonus Rune Levels +\" + format(0.05 * (player.talismanRarity[4-1] - 1), 2) + \" per level\"\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman4Effect'][1], 2, true)\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman4Effect'][2], 2, true)\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman4Effect'][3], 2, true)\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman4Effect'][4], 2, true)\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman4Effect'][5], 2, true)\n            h.textContent = \"Mythic Effect: +400 Prism Rune Levels!\"\n            break;\n        case 5:\n            a.textContent = \"=-=-=-= Polymath Talisman Effects =-=-=-=\";\n            b.textContent = \"Rune Spirit Bonuses +\" + format(1 * (player.talismanRarity[5-1] - 1)) + \"%\"\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman5Effect'][1], 2, true)\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman5Effect'][2], 2, true)\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman5Effect'][3], 2, true)\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman5Effect'][4], 2, true)\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman5Effect'][5], 2, true)\n            h.textContent = \"Mythic Effect: +400 SI Rune Levels!\"\n            break;\n        case 6:\n            a.textContent = \"=-=-=-= Mortuus Est Talisman Effects =-=-=-=\";\n            b.textContent = \"Bonus Ant Levels: +\" + format(2 * (player.talismanRarity[6-1] - 1))\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman6Effect'][1], 2, true)\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman6Effect'][2], 2, true)\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman6Effect'][3], 2, true)\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman6Effect'][4], 2, true)\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman6Effect'][5], 2, true)\n            h.textContent = \"Mythic Effect: Gain ant speed based on your total rune level!\"\n            break;\n        case 7:\n            a.textContent = \"=-=-=-= Plastic Talisman Effects =-=-=-=\";\n            b.textContent = \"Gain 1x normal production (Joke)!\"\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman7Effect'][1], 2, true)\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman7Effect'][2], 2, true)\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman7Effect'][3], 2, true)\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman7Effect'][4], 2, true)\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman7Effect'][5], 2, true)\n            h.textContent = \"Mythic Effect: Gain 1x your normal quark values (Joke)!\"\n            break;\n    }\n    if (player.talismanRarity[i-1] !== 6) {\n        h.textContent = \"Get Max Enhance for a Mythical bonus effect!\"\n    }\n}\n\nexport const showTalismanPrices = (i: number) => {\n    document.getElementById(\"talismanEffect\").style.display = \"none\"\n    document.getElementById(\"talismanlevelup\").style.display = \"block\"\n    document.getElementById(\"talismanrespec\").style.display = \"none\"\n    const a = document.getElementById(\"talismanShardCost\")\n    const b = document.getElementById(\"talismanCommonFragmentCost\")\n    const c = document.getElementById(\"talismanUncommonFragmentCost\")\n    const d = document.getElementById(\"talismanRareFragmentCost\")\n    const e = document.getElementById(\"talismanEpicFragmentCost\")\n    const f = document.getElementById(\"talismanLegendaryFragmentCost\")\n    const g = document.getElementById(\"talismanMythicalFragmentCost\")\n\n    document.getElementById(\"talismanLevelUpSummary\").textContent = \"-=-=- Resources Required to Level Up -=-=-\"\n    document.getElementById(\"talismanLevelUpSummary\").style.color = \"silver\"\n\n    let m = G['talismanLevelCostMultiplier'][i]\n    if (player.talismanLevels[i-1] >= 120) {\n        m *= (player.talismanLevels[i-1] - 90) / 30\n    }\n    if (player.talismanLevels[i-1] >= 150) {\n        m *= (player.talismanLevels[i-1] - 120) / 30\n    }\n    if (player.talismanLevels[i-1] >= 180) {\n        m *= (player.talismanLevels[i-1] - 170) / 10\n    }\n    a.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i-1], 3))));\n    b.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i-1] - 30, 3))));\n    c.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i-1] - 60, 3))));\n    d.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i-1] - 90, 3))));\n    e.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i-1] - 120, 3))));\n    f.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i-1] - 150, 3))));\n    g.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i-1] - 150, 3))));\n}\n\nexport const showEnhanceTalismanPrices = (i: number) => {\n    document.getElementById(\"talismanEffect\").style.display = \"none\"\n    document.getElementById(\"talismanlevelup\").style.display = \"block\"\n    document.getElementById(\"talismanrespec\").style.display = \"none\"\n    const a = document.getElementById(\"talismanShardCost\")\n    const b = document.getElementById(\"talismanCommonFragmentCost\")\n    const c = document.getElementById(\"talismanUncommonFragmentCost\")\n    const d = document.getElementById(\"talismanRareFragmentCost\")\n    const e = document.getElementById(\"talismanEpicFragmentCost\")\n    const f = document.getElementById(\"talismanLegendaryFragmentCost\")\n    const g = document.getElementById(\"talismanMythicalFragmentCost\")\n\n    document.getElementById(\"talismanLevelUpSummary\").textContent = \"=-=-= Resources Required to ENHANCE =-=-=\"\n    document.getElementById(\"talismanLevelUpSummary\").style.color = \"gold\"\n\n    const array = [G['commonTalismanEnhanceCost'], G['uncommonTalismanEnchanceCost'], G['rareTalismanEnchanceCost'], G['epicTalismanEnhanceCost'], G['legendaryTalismanEnchanceCost'], G['mythicalTalismanEnchanceCost']]\n    const index = player.talismanRarity[i-1];\n    const costArray = array[index-1];\n    const m = G['talismanLevelCostMultiplier'][i]\n    a.textContent = format(m * costArray[1]);\n    b.textContent = format(m * costArray[2]);\n    c.textContent = format(m * costArray[3]);\n    d.textContent = format(m * costArray[4]);\n    e.textContent = format(m * costArray[5]);\n    f.textContent = format(m * costArray[6]);\n    g.textContent = format(m * costArray[7]);\n}\n\nexport const showRespecInformation = (i: number) => {\n    G['talismanRespec'] = i;\n    document.getElementById(\"talismanEffect\").style.display = \"none\"\n    document.getElementById(\"talismanlevelup\").style.display = \"none\"\n    document.getElementById(\"talismanrespec\").style.display = \"block\"\n\n    const runeName = [\"Speed Rune\", \"Duplication Rune\", \"Prism Rune\", \"Thrift Rune\", \"SI Rune\"]\n    const runeModifier = [\"Positive\", \"Positive\", \"Positive\", \"Positive\"]\n    if (i <= 7) {\n        for (let k = 1; k <= 5; k++) {\n            G['mirrorTalismanStats'][k] = player[`talisman${num[i-1]}` as const][k];\n        }\n        document.getElementById(\"confirmTalismanRespec\").textContent = \"Confirm [-100,000 Offerings]\"\n    }\n    if (i === 8) {\n        for (let k = 1; k <= 5; k++) {\n            G['mirrorTalismanStats'][k] = 1;\n        }\n        document.getElementById(\"confirmTalismanRespec\").textContent = \"Confirm ALL [-400,000 Offerings]\"\n    }\n    for (let j = 1; j <= 5; j++) {\n        if (G['mirrorTalismanStats'][j] === 1) {\n            document.getElementById(\"talismanRespecButton\" + j).style.border = \"2px solid limegreen\";\n            runeModifier[j-1] = \"Positive\"\n        } else if (G['mirrorTalismanStats'][j] === -1) {\n            document.getElementById(\"talismanRespecButton\" + j).style.border = \"2px solid crimson\";\n            runeModifier[j-1] = \"Negative\"\n        }\n        document.getElementById(\"talismanRespecButton\" + j).textContent = runeName[j-1] + \": \" + runeModifier[j-1]\n    }\n\n    document.getElementById(\"confirmTalismanRespec\").style.display = \"none\"\n}\n\nexport const changeTalismanModifier = (i: number) => {\n    const runeName = [null, \"Speed Rune\", \"Duplication Rune\", \"Prism Rune\", \"Thrift Rune\", \"SI Rune\"];\n    const el = document.getElementById(\"talismanRespecButton\" + i);\n    if (G['mirrorTalismanStats'][i] === 1) {\n        G['mirrorTalismanStats'][i] = (-1);\n        el.textContent = runeName[i] + \": Negative\";\n        el.style.border = \"2px solid crimson\";\n    } else {\n        G['mirrorTalismanStats'][i] = (1);\n        el.textContent = runeName[i] + \": Positive\";\n        el.style.border = \"2px solid limegreen\";\n    }\n\n    const checkSum = G['mirrorTalismanStats'].reduce(function (a, b) {\n        return a + b;\n    }, 0);\n\n    if (checkSum === 1) {\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"block\";\n    } else {\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n    }\n\n}\n\nexport const respecTalismanConfirm = (i: number) => {\n    if (player.runeshards >= 100000 && i <= 7) {\n        for (let j = 1; j <= 5; j++) {\n            player[`talisman${num[i-1]}` as const][j] = G['mirrorTalismanStats'][j];\n        }\n        player.runeshards -= 100000;\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n        document.getElementById(\"talismanrespec\").style.display = \"none\";\n        document.getElementById(\"talismanEffect\").style.display = \"block\";\n        showTalismanEffect(i);\n    } else if (player.runeshards >= 400000 && i === 8) {\n        player.runeshards -= 400000\n        for (let j = 1; j <= 7; j++) {\n            for (let k = 1; k <= 5; k++) {\n                player[`talisman${num[j-1]}` as const][k] = G['mirrorTalismanStats'][k];\n            }\n        }\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n    }\n\n    calculateRuneLevels();\n}\n\nexport const respecTalismanCancel = (i: number) => {\n    document.getElementById(\"talismanrespec\").style.display = \"none\"\n    if (i <= 7) {\n        document.getElementById(\"talismanEffect\").style.display = \"block\";\n        showTalismanEffect(i);\n    }\n}\n\nexport const updateTalismanAppearance = (i: number) => {\n    const el = document.getElementById(\"talisman\" + i)\n    const la = document.getElementById(\"talisman\" + i + \"level\")\n\n    const rarity = player.talismanRarity[i-1];\n    if (rarity === 1) {\n        el.style.border = \"4px solid white\";\n        la.style.color = \"white\"\n    }\n    if (rarity === 2) {\n        el.style.border = \"4px solid limegreen\";\n        la.style.color = \"limegreen\"\n    }\n    if (rarity === 3) {\n        el.style.border = \"4px solid lightblue\";\n        la.style.color = \"lightblue\"\n    }\n    if (rarity === 4) {\n        el.style.border = \"4px solid plum\";\n        la.style.color = \"plum\"\n    }\n    if (rarity === 5) {\n        el.style.border = \"4px solid orange\";\n        la.style.color = \"orange\"\n    }\n    if (rarity === 6) {\n        el.style.border = \"4px solid crimson\";\n        la.style.color = \"crimson\"\n    }\n}\n\n// Attempt to buy a fixed number of levels (number varies based on\n// ascension). Returns true if any levels were bought, false otherwise.\nexport const buyTalismanLevels = (i: number, auto = false): boolean => {\n    let max = 1;\n    if (player.ascensionCount > 0) {\n        max = 30\n    }\n    let hasPurchased = false;\n    for (let j = 1; j <= max; j++) {\n        let checkSum = 0;\n        let priceMult = G['talismanLevelCostMultiplier'][i]\n        if (player.talismanLevels[i-1] >= 120) {\n            priceMult *= (player.talismanLevels[i-1] - 90) / 30\n        }\n        if (player.talismanLevels[i-1] >= 150) {\n            priceMult *= (player.talismanLevels[i-1] - 120) / 30\n        }\n        if (player.talismanLevels[i-1] >= 180) {\n            priceMult *= (player.talismanLevels[i-1] - 170) / 10\n        }\n\n        if (player.talismanLevels[i-1] < (player.talismanRarity[i-1] * 30 + 6 * CalcECC('ascension', player.challengecompletions[13]) + Math.floor(player.researches[200] / 400))) {\n            if (player.talismanShards >= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i-1], 3)))) {\n                checkSum++\n            }\n            if (player.commonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i-1] - 30, 3)))) {\n                checkSum++\n            }\n            if (player.uncommonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i-1] - 60, 3)))) {\n                checkSum++\n            }\n            if (player.rareFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i-1] - 90, 3)))) {\n                checkSum++\n            }\n            if (player.epicFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i-1] - 120, 3)))) {\n                checkSum++\n            }\n            if (player.legendaryFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i-1] - 150, 3)))) {\n                checkSum++\n            }\n            if (player.mythicalFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i-1] - 150, 3)))) {\n                checkSum++\n            }\n        }\n\n        if (checkSum === 7) {\n            player.talismanShards -= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i-1], 3)))\n            player.commonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i-1] - 30, 3)))\n            player.uncommonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i-1] - 60, 3)))\n            player.rareFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i-1] - 90, 3)))\n            player.epicFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i-1] - 120, 3)))\n            player.legendaryFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i-1] - 150, 3)))\n            player.mythicalFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i-1] - 150, 3)))\n            player.talismanLevels[i-1] += 1;\n            hasPurchased = true;\n        } else {\n            break;\n        }\n    }\n\n    if (!auto && hasPurchased) {\n        showTalismanPrices(i);\n        // When adding game state recalculations, update the talisman autobuyer in tack() as well\n        updateTalismanInventory();\n        calculateRuneLevels();\n    }\n\n    return hasPurchased;\n}\n\nexport const buyTalismanEnhance = (i: number, auto = false): boolean => {\n    let checkSum = 0;\n    if (player.talismanRarity[i-1] < 6) {\n        const priceMult = G['talismanLevelCostMultiplier'][i];\n        const array = [G['commonTalismanEnhanceCost'], G['uncommonTalismanEnchanceCost'], G['rareTalismanEnchanceCost'], G['epicTalismanEnhanceCost'], G['legendaryTalismanEnchanceCost'], G['mythicalTalismanEnchanceCost']];\n        const index = player.talismanRarity[i-1] - 1;\n        const costArray = array[index];\n        if (player.commonFragments >= priceMult * costArray[2]) {\n            checkSum++\n        }\n        if (player.uncommonFragments >= priceMult * costArray[3]) {\n            checkSum++\n        }\n        if (player.rareFragments >= priceMult * costArray[4]) {\n            checkSum++\n        }\n        if (player.epicFragments >= priceMult * costArray[5]) {\n            checkSum++\n        }\n        if (player.legendaryFragments >= priceMult * costArray[6]) {\n            checkSum++\n        }\n        if (player.mythicalFragments >= priceMult * costArray[7]) {\n            checkSum++\n        }\n\n\n        if (checkSum === 6) {\n            player.commonFragments -= (priceMult * costArray[2])\n            player.uncommonFragments -= (priceMult * costArray[3])\n            player.rareFragments -= (priceMult * costArray[4])\n            player.epicFragments -= (priceMult * costArray[5])\n            player.legendaryFragments -= (priceMult * costArray[6])\n            player.mythicalFragments -= (priceMult * costArray[7])\n            player.talismanRarity[i-1] += 1\n\n            // Appearance always needs updating if bought\n            updateTalismanAppearance(i);\n            if (!auto) {\n                showEnhanceTalismanPrices(i);\n                // When adding game state recalculations, update the talisman autobuyer in tack() as well\n                updateTalismanInventory();\n                calculateRuneLevels();\n            }\n\n            return true;\n        }\n    }\n    return false;\n}\n", "import { player, format } from './Synergism';\nimport { calculateRuneExpGiven, calculateCorruptionPoints, calculateOfferings, calculateMaxRunes, calculateRuneExpToLevel, calculateRuneLevels } from './Calculate';\nimport { Globals as G } from './Variables';\n\nimport Decimal from 'break_infinity.js';\nimport { resetNames } from './types/Synergism';\n\nexport const displayRuneInformation = (i: number, updatelevelup = true) => {\n    const m = G['effectiveLevelMult']\n    const SILevelMult = (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints()/400))\n    const amountPerOffering = calculateRuneExpGiven(i - 1, false, player.runelevels[i - 1]);\n\n\n    if (i === 1) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+(Level/4)^1.25 Accelerator, +0.25% Accelerators per level. +1 Accelerator Boost every 20 levels!\"\n        }\n        document.getElementById(\"runeshowpower1\").textContent = \"Speed Rune Bonus: \" + \"+\" + format(Math.floor(Math.pow(G['rune1level'] * m / 4, 1.25))) + \" Accelerators, +\" + format((G['rune1level'] / 4 * m), 2, true) + \"% Accelerators, +\" + format(Math.floor(G['rune1level'] / 20 * m)) + \" Accelerator Boosts.\"\n    }\n    if (i === 2) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+(Level/10) Multipliers every 10th level, +0.25% Multipliers per level. Tax growth is delayed more for each level!\"\n        }\n        document.getElementById(\"runeshowpower2\").textContent = \"Duplication Rune Bonus: \" + \"+\" + format(Math.floor(G['rune2level'] * m / 10) * Math.floor(1 + G['rune2level'] * m / 10) / 2) + \" Multipliers, +\" + format(m * G['rune2level'] / 4, 1, true) + \"% Multipliers, -\" + (99.9 * (1 - Math.pow(6, -(G['rune2level'] * m) / 1000))).toPrecision(4) + \"% Tax Growth.\"\n    }\n    if (i === 3) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"~(1 + (Level/2)^2 * 2^(Level/2) / 256)x Crystal Production. +1 free level for each Crystal upgrade per 16 levels!\"\n        }\n        document.getElementById(\"runeshowpower3\").textContent = \"Prism Rune Bonus: \" + \"All Crystal Producer production multiplied by \" + format(Decimal.pow(G['rune3level'] * m / 2, 2).times(Decimal.pow(2, G['rune3level'] * m / 2 - 8)).add(1), 3) + \", gain +\" + format(Math.floor(G['rune3level'] / 16 * m)) + \" free crystal levels.\"\n    }\n    if (i === 4) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+0.125% building cost growth delay per level, +0.0625% offering recycle chance per level [MAX: 25%], 2^((1000 - Level)/1100) Tax growth multiplier AFTER level 400\"\n        }\n        document.getElementById(\"runeshowpower4\").textContent = \"Thrift Rune Bonus: \" + \"Delay all producer cost increases by \" + (G['rune4level'] / 8 * m).toPrecision(3) + \"%. Offering recycle chance: +\" + Math.min(25, G['rune4level'] / 16) + \"%. -\" + (99 * (1 - Math.pow(4, Math.min(0, (400 - G['rune4level']) / 1100)))).toPrecision(4) + \"% Tax Growth\"\n    }\n    if (i === 5) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"~(1 + level/200)x Obtainium, (1 + Level^2/2500)x Ant Hatch Speed, +0.005 base offerings for each tier per level\"\n        }\n        document.getElementById(\"runeshowpower5\").textContent = \"S. Intellect Rune Bonus: \" + \"Obtainium gain x\" + format((1 + G['rune5level'] / 200 * m * SILevelMult), 2, true) + \". Ant Speed: x\" + format(1 + Math.pow(G['rune5level'] * m * SILevelMult, 2) / 2500) + \". Base Offerings: +\" + format((G['rune5level'] * m * SILevelMult * 0.005), 3, true)\n    }\n    if (i === 6) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+0.2% Quarks, +1% all cube types per level! Start with +10% Quarks.\"\n        }\n        document.getElementById(\"runeshowpower6\").textContent = \"IA Rune Bonus: \" + \" Quark Gain +\" + format(10 + 15/75 * player.runelevels[5], 1, true) + \"%, Ascensions give +\" + format(1 * player.runelevels[5], 0, true) + \"% more of all cube types.\"\n    }\n    if (updatelevelup) {\n        const arr = calculateOfferingsToLevelXTimes(i - 1, player.runelevels[i - 1], player.offeringbuyamount);\n        let offerings = 0;\n        let j = 0;\n        while (offerings < player.runeshards && j < arr.length) {\n            offerings += arr[j]\n            j++;\n        }\n        const check = player.offeringbuyamount === j && offerings <= player.runeshards\n        const s = player.offeringbuyamount === 1 ? \"once\" : `${check ? j : Math.max(j - 1, 0)} times`\n        document.getElementById(\"runeDisplayInfo\").textContent = `+${format(amountPerOffering)} EXP per offering. ${format(offerings)} Offerings to level up ${s}.`\n    }\n\n}\n\nexport const resetofferings = (input: resetNames) => {\n    player.runeshards += calculateOfferings(input);\n}\n\nexport const redeemShards = (runeIndexPlusOne: number, auto = false, cubeUpgraded = 0) => {\n    // if automated && 2x10 cube upgrade bought, this will be >0.\n    // runeIndex, the rune being added to\n    const runeIndex = runeIndexPlusOne - 1;\n\n    // Whether or not a rune is unlocked array\n    const unlockedRune = [\n        true,\n        player.achievements[38] > 0.5,\n        player.achievements[44] > 0.5,\n        player.achievements[102] > 0.5,\n        player.researches[82] > 0.5,\n        player.shopUpgrades.infiniteAscent,\n        false,\n    ];\n\n    let levelsToAdd = player.offeringbuyamount\n    if (auto) {\n        levelsToAdd = Math.pow(2, player.shopUpgrades.offeringAuto);\n    }\n    if (auto && cubeUpgraded > 0) {\n        levelsToAdd = Math.min(1e4, calculateMaxRunes(runeIndex + 1)) // limit to max 10k levels per call so the execution doesn't take too long if things get stuck\n    }\n    let levelsAdded = 0\n    if (player.runeshards > 0 && player.runelevels[runeIndex] < calculateMaxRunes(runeIndex + 1) && unlockedRune[runeIndex]) {\n        let all = 0\n        const maxLevel = calculateMaxRunes(runeIndex + 1)\n        const amountArr = calculateOfferingsToLevelXTimes(runeIndex, player.runelevels[runeIndex], levelsToAdd)\n        let toSpendTotal = Math.min(player.runeshards, amountArr.reduce((x, y) => x + y, 0))\n        if (cubeUpgraded > 0) {\n            toSpendTotal = Math.min(player.runeshards, cubeUpgraded)\n        }\n        const fact = calculateRuneExpGiven(runeIndex, false, player.runelevels[runeIndex], true)\n        const a = player.upgrades[71] / 25\n        const add = fact[0] - a * player.runelevels[runeIndex]\n        const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1)\n        while (toSpendTotal > 0 && levelsAdded < levelsToAdd && player.runelevels[runeIndex] < maxLevel) {\n            const exp = calculateRuneExpToLevel(runeIndex, player.runelevels[runeIndex]) - player.runeexp[runeIndex]\n            const expPerOff = (add + a * player.runelevels[runeIndex]) * mult;\n            let toSpend = Math.min(toSpendTotal, Math.ceil(exp / expPerOff))\n            if (toSpend === undefined || isNaN(toSpend)) {\n                toSpend = toSpendTotal\n            }\n            toSpendTotal -= toSpend\n            player.runeshards -= toSpend\n            player.runeexp[runeIndex] += toSpend * expPerOff\n            all += toSpend\n            while (player.runeexp[runeIndex] >= calculateRuneExpToLevel(runeIndex) && player.runelevels[runeIndex] < maxLevel) {\n                player.runelevels[runeIndex] += 1;\n                levelsAdded++;\n            }\n        }\n        for (let runeToUpdate = 0; runeToUpdate < 5; ++runeToUpdate) {\n            if (unlockedRune[runeToUpdate]) {\n                if (runeToUpdate !== runeIndex) {\n                    player.runeexp[runeToUpdate] += all * calculateRuneExpGiven(runeToUpdate, true)\n                }\n                while (player.runeexp[runeToUpdate] >= calculateRuneExpToLevel(runeToUpdate) && player.runelevels[runeToUpdate] < calculateMaxRunes(runeToUpdate + 1)) {\n                    player.runelevels[runeToUpdate] += 1;\n                }\n            }\n        }\n        displayRuneInformation(runeIndexPlusOne);\n    }\n    calculateRuneLevels();\n    if (player.runeshards < 0 || player.runeshards === undefined) {\n        player.runeshards = 0\n    }\n}\n\nexport const calculateOfferingsToLevelXTimes = (runeIndex: number, runeLevel: number, levels: number) => {\n    let exp = calculateRuneExpToLevel(runeIndex, runeLevel) - player.runeexp[runeIndex]\n    const maxLevel = calculateMaxRunes(runeIndex + 1)\n    const arr = []\n    let sum = 0\n    const off = player.runeshards\n    let levelsAdded = 0\n    const fact = calculateRuneExpGiven(runeIndex, false, runeLevel, true);\n    const a = player.upgrades[71] / 25\n    const add = fact[0] - a * runeLevel\n    const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1)\n    while (levelsAdded < levels && runeLevel + levelsAdded < maxLevel && sum < off) {\n        const expPerOff = (add + a * (runeLevel + levelsAdded)) * mult\n        const amount = Math.ceil(exp / expPerOff)\n        sum += amount\n        arr.push(amount)\n        levelsAdded += 1\n        exp = calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded)\n            - calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded - 1)\n    }\n    return arr;\n}\n", "import { player } from './Synergism';\nimport { Globals as G } from './Variables';\n\nexport const calculateTesseractBlessings = () => {\n    // The visual updates are handled in visualUpdateCubes()\n    const tesseractArray = [player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\n\n    for (let i = 0; i < 10; i++) {\n        let power = 1;\n        let mult = 1;\n        if (tesseractArray[i] >= 1000 && i !== 5) {\n            power = G['giftDRPower'][i];\n            mult *= Math.pow(1000, (1 - G['giftDRPower'][i]));\n        }\n\n        G['tesseractBonusMultiplier'][i+1] = 1 + mult * G['giftbase'][i] * Math.pow(tesseractArray[i], power) * G['hypercubeBonusMultiplier'][i+1];\n    }\n}", "import { player, updateAllTick, updateAllMultiplier, format } from './Synergism';\nimport { CalcECC } from './Challenges';\nimport Decimal, { DecimalSource } from 'break_infinity.js';\nimport { achievementaward } from './Achievements';\nimport { smallestInc } from './Utility';\nimport { upgradeupdate, crystalupgradedescriptions} from './Upgrades';\nimport { reset } from './Reset';\nimport { calculateSummationLinear, calculateCorruptionPoints, calculateRuneBonuses } from './Calculate';\nimport { Globals as G } from './Variables';\nimport type { FirstToFifth, OneToFive, ZeroToFour } from './types/Synergism';\n\nexport const getReductionValue = () => {\n    let reduction = 1;\n    reduction += (G['rune4level'] * G['effectiveLevelMult']) / 160;\n    reduction += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200;\n    reduction += CalcECC('transcend', player.challengecompletions[4]) / 200;\n    reduction += Math.min(99999.9, (3 * (player.antUpgrades[7-1] + G['bonusant7'])) / 100);\n    return reduction;\n}\n\nconst getCostAccelerator = (buyingTo: number) => {\n    --buyingTo;\n\n    const originalCost = 500;\n    let cost = new Decimal(originalCost);\n\n    cost = cost.times(Decimal.pow(4 / G['costDivisor'], buyingTo));\n\n    if (buyingTo > (125 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const num = buyingTo - 125 - 5 * CalcECC('transcend', player.challengecompletions[4]);\n        const factorialBit = new Decimal(num).factorial();\n        const multBit = Decimal.pow(4, num);\n        cost = cost.times(multBit.times(factorialBit));\n    }\n\n    if (buyingTo > (2000 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const sumNum = buyingTo - 2000 - 5 * CalcECC('transcend', player.challengecompletions[4]);\n        const sumBit = sumNum * (sumNum + 1) / 2\n        cost = cost.times(Decimal.pow(2, sumBit));\n    }\n\n    if (player.currentChallenge.transcension === 4) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(10, sumBit));\n    }\n\n    if (player.currentChallenge.reincarnation === 8) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(1e50, sumBit));\n    }\n    return cost;\n}\n\nexport const buyAccelerator = (autobuyer?: boolean) => {\n    // Start buying at the current amount bought + 1\n    let buyTo = player.acceleratorBought + 1;\n    if (player.acceleratorBought >= 1e15 || player.coins.gte(Decimal.pow(10, 1e30))){\n        player.acceleratorBought = 1e15;\n        player.acceleratorCost = Decimal.pow(10, 1e30);\n        return;\n    }\n\n    let cashToBuy = getCostAccelerator(buyTo);\n    while (player.coins.gte(cashToBuy)) {\n        // then multiply by 4 until it reaches just above the amount needed\n        buyTo = buyTo * 4;\n        cashToBuy = getCostAccelerator(buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n\n        // if step down would push it below out of expense range then divide step down by 2\n        if (getCostAccelerator(buyTo - stepdown).lte(player.coins)) {\n            stepdown = Math.floor(stepdown / 2);\n        } else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n\n    if (!autobuyer && (player.coinbuyamount as number | string) !== \"max\") {\n        if (player.acceleratorBought + player.coinbuyamount < buyTo) {\n            buyTo = player.acceleratorBought + player.coinbuyamount;\n        }\n    }\n\n    let buyFrom = Math.max(buyTo - 7, player.acceleratorBought + 1);\n    let thisCost = getCostAccelerator(buyFrom);\n    while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\n        player.coins = player.coins.sub(thisCost);\n        player.acceleratorBought = buyFrom;\n        buyFrom = buyFrom + 1;\n        thisCost = getCostAccelerator(buyFrom);\n        player.acceleratorCost = thisCost;\n    }\n\n    player.prestigenoaccelerator = false;\n    player.transcendnoaccelerator = false;\n    player.reincarnatenoaccelerator = false;\n    updateAllTick();\n    if (player.acceleratorBought >= 5 && player.achievements[148] === 0) {\n        achievementaward(148)\n    }\n    if (player.acceleratorBought >= 25 && player.achievements[149] === 0) {\n        achievementaward(149)\n    }\n    if (player.acceleratorBought >= 100 && player.achievements[150] === 0) {\n        achievementaward(150)\n    }\n    if (player.acceleratorBought >= 666 && player.achievements[151] === 0) {\n        achievementaward(151)\n    }\n    if (player.acceleratorBought >= 2000 && player.achievements[152] === 0) {\n        achievementaward(152)\n    }\n    if (player.acceleratorBought >= 12500 && player.achievements[153] === 0) {\n        achievementaward(153)\n    }\n    if (player.acceleratorBought >= 100000 && player.achievements[154] === 0) {\n        achievementaward(154)\n    }\n}\n\nconst getCostMultiplier = (buyingTo: number) => {\n    --buyingTo;\n\n    const originalCost = 1e5;\n    let cost = new Decimal(originalCost);\n    cost = cost.times(Decimal.pow(10, buyingTo / G['costDivisor']));\n\n    if (buyingTo > (75 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const num = buyingTo - 75 - 2 * CalcECC('transcend', player.challengecompletions[4]);\n        const factorialBit = new Decimal(num).factorial();\n        const powBit = Decimal.pow(10, num);\n        cost = cost.times(factorialBit.times(powBit));\n    }\n\n    if (buyingTo > (2000 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const sumNum = buyingTo - 2000 - 2 * CalcECC('transcend', player.challengecompletions[4]);\n        const sumBit = sumNum * (sumNum + 1) / 2;\n        cost = cost.times(Decimal.pow(2, sumBit));\n    }\n    if (player.currentChallenge.transcension === 4) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(10, sumBit));\n    }\n    if (player.currentChallenge.reincarnation === 8) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(1e50, sumBit));\n    }\n    return cost;\n}\n\nexport const buyMultiplier = (autobuyer?: boolean) => {\n    // Start buying at the current amount bought + 1\n    let buyTo = player.multiplierBought + 1;\n    if (player.multiplierBought >= 1e15 || player.coins.gte(Decimal.pow(10, 1e30))){\n        player.multiplierBought = 1e15;\n        player.multiplierCost = Decimal.pow(10, 1e30);\n        return;\n    }\n    let cashToBuy = getCostMultiplier(buyTo);\n    while (player.coins.gte(cashToBuy)) {\n        // then multiply by 4 until it reaches just above the amount needed\n        buyTo = buyTo * 4;\n        cashToBuy = getCostMultiplier(buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n\n        // if step down would push it below out of expense range then divide step down by 2\n        if (getCostMultiplier(buyTo - stepdown).lte(player.coins)) {\n            stepdown = Math.floor(stepdown / 2);\n        } else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n\n    if (!autobuyer && (player.coinbuyamount as number | string) !== \"max\") {\n        if (player.multiplierBought + player.coinbuyamount < buyTo) {\n            buyTo = player.multiplierBought + player.coinbuyamount;\n        }\n    }\n\n    let buyFrom = Math.max(buyTo - 7, player.multiplierBought + 1);\n    let thisCost = getCostMultiplier(buyFrom);\n    while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\n        player.coins = player.coins.sub(thisCost);\n        player.multiplierBought = buyFrom;\n        if (buyFrom >= 1e15){\n            player.multiplierBought = 1e15;\n            return;\n        }\n        buyFrom = buyFrom + 1;\n        thisCost = getCostMultiplier(buyFrom);\n        player.multiplierCost = thisCost;\n    }\n\n    player.prestigenomultiplier = false;\n    player.transcendnomultiplier = false;\n    player.reincarnatenomultiplier = false;\n    updateAllMultiplier();\n    if (player.multiplierBought >= 2 && player.achievements[155] === 0) {\n        achievementaward(155)\n    }\n    if (player.multiplierBought >= 20 && player.achievements[156] === 0) {\n        achievementaward(156)\n    }\n    if (player.multiplierBought >= 100 && player.achievements[157] === 0) {\n        achievementaward(157)\n    }\n    if (player.multiplierBought >= 500 && player.achievements[158] === 0) {\n        achievementaward(158)\n    }\n    if (player.multiplierBought >= 2000 && player.achievements[159] === 0) {\n        achievementaward(159)\n    }\n    if (player.multiplierBought >= 12500 && player.achievements[160] === 0) {\n        achievementaward(160)\n    }\n    if (player.multiplierBought >= 100000 && player.achievements[161] === 0) {\n        achievementaward(161)\n    }\n}\n\n/*\n// Uses same as Decimal prototype but does so without creating new objects\nDecimal.prototype.factorial = function () {\n  // Using Stirling's Approximation.\n  // https://en.wikipedia.org/wiki/Stirling%27s_approximation#Versions_suitable_for_calculators\n  var n = this.toNumber() + 1;\n  return Decimal.pow(n / Math.E * Math.sqrt(n * Math.sinh(1 / n) + 1 / (810 * Math.pow(n, 6))), n).mul(Math.sqrt(2 * Math.PI / n));\n};\n*/\n\nconst mantissaFactorialPartExtra = Math.log10(2 * Math.PI);\nconst exponentFactorialPartExtra = Math.log10(Math.E);\n\nconst factorialByExponent = (fact: number) => {\n    if (++fact === 0) {\n        return 0;\n    }\n    return ((Math.log10(fact * Math.sqrt(fact * Math.sinh(1 / fact) + 1 / (810 * Math.pow(fact, 6)))) - exponentFactorialPartExtra) * fact) + ((mantissaFactorialPartExtra - Math.log10(fact)) / 2);\n}\n\nconst fact100exponent = Math.log10(9.3326215443944152681699238856267e+157);\n\n// system of equations\n// 16 digits of precision\n// log10(1.25)xn = log10(x)+16\n// see: https://www.wolframalpha.com/input/?i=log10%28x%29%2B16+%3D+log10%281.25%29x\n// xn ~= 188.582\n// x ~= 188.582/n\nconst precision16_loss_addition_of_ones = 188.582;\nconst known_log10s = function () {\n    // needed logs\n    const needed = [1.03, 1.25];\n    const nums = [1, 2, 3, 4, 5, 6, 10, 15];\n    for (const num of nums) {\n        needed.push(100 + (100 * num));\n        needed.push(10 + (10 * num));\n    }\n\n    // Gets all possible challenge 8 completion amounts\n    const chalcompletions = 1000;\n    for (let i = 0; i < chalcompletions; ++i) {\n        needed.push(1 + (i / 2));\n    }\n\n    // constructing all logs\n    const obj: Record<number, number> = {};\n    for (const need of needed) {\n        if (obj[need] === undefined) {\n            obj[need] = Math.log10(need);\n        }\n    }\n    return obj;\n}();\n\nconst coinBuildingCosts = [100, 2000, 4e4, 8e5, 1.6e7] as const;\nconst diamondBuildingCosts = [100, 1e5, 1e15, 1e40, 1e100] as const;\nconst mythosAndParticleBuildingCosts = [1, 1e2, 1e4, 1e8, 1e16] as const;\n\nconst getCostInternal = (originalCost: DecimalSource, buyingTo: number, type: keyof typeof buyProducerTypes, num: number, r: number) => {\n    // It's 0 indexed by mistake so you have to subtract 1 somewhere.\n    --buyingTo;\n    // Accounts for the multiplies by 1.25^num buyingTo times\n    const cost = new Decimal(originalCost);\n    let mlog10125 = num * buyingTo;\n    // Accounts for the add 1s\n    if (buyingTo < precision16_loss_addition_of_ones / num) {\n        cost.mantissa += buyingTo / Math.pow(10, cost.exponent);\n    }\n    let fastFactMultBuyTo = 0;\n    // floored r value gets used a lot in removing calculations\n    let fr = Math.floor(r * 1000);\n    if (buyingTo >= r * 1000) {\n        // This code is such a mess at this point, just know that this is equivalent to what it was before\n        ++fastFactMultBuyTo;\n        cost.exponent -= factorialByExponent(fr);\n        cost.exponent += (-3 + Math.log10(1 + (num / 2))) * (buyingTo - fr);\n    }\n\n    fr = Math.floor(r * 5000);\n    if (buyingTo >= r * 5000) {\n        // This code is such a mess at this point, just know that this is equivalent to what it was before\n        ++fastFactMultBuyTo;\n        cost.exponent -= factorialByExponent(fr);\n        cost.exponent += ((known_log10s[10 + num * 10] + 1) * (buyingTo - fr - 1)) + 1;\n    }\n\n    fr = Math.floor(r * 20000);\n    if (buyingTo >= r * 20000) {\n        // This code is such a mess at this point, just know that this is equivalent to what it was before\n        fastFactMultBuyTo += 3;\n        cost.exponent -= factorialByExponent(fr) * 3;\n        cost.exponent += (known_log10s[100 + (100 * num)] + 5) * (buyingTo - fr);\n    }\n\n    fr = Math.floor(r * 250000);\n    if (buyingTo >= r * 250000) {\n        //1.03^x*1.03^y = 1.03^(x+y), we'll abuse this for this section of the algorithm\n        // 1.03^(x+y-((number of terms)250000*r))\n        // up to 250003 case\n        // assume r = 1 for this case\n        // (1.03^250000-250000)(1.03^250001-250000)(1.03^250002-250000)(1.03^250003) = (1.03^0*1.03^1*1.03^2*1.03^3)\n        // so in reality we just need to take buyingTo - fr and sum the power up to it\n        // (1.03^(sum from 0 to buyingTo - fr)) is the multiplier\n        // so (1.03^( (buyingTo-fr)(buyingTo-fr+1)/2 )\n        // god damn that was hard to make an algo for\n        cost.exponent += Math.log10(1.03) * (buyingTo - fr) * ((buyingTo - fr + 1) / 2);\n    }\n    // Applies the factorials from earlier without computing them 5 times\n    cost.exponent += factorialByExponent(buyingTo) * fastFactMultBuyTo;\n    let fastFactMultBuyTo100 = 0;\n    if ((player.currentChallenge.transcension === 4) && (type === \"Coin\" || type === \"Diamonds\")) {\n        // you would not fucking believe how long it took me to figure this out\n        // (100*costofcurrent + 10000)^n = (((100+buyingTo)!/100!)*100^buyingTo)^n\n        ++fastFactMultBuyTo100;\n        if (buyingTo >= (1000 - (10 * player.challengecompletions[4]))) {\n            // and I changed this to be a summation of all the previous buys 1.25 to the sum from 1 to buyingTo\n            mlog10125 += (buyingTo * (buyingTo + 1) / 2);\n        }\n    }\n    if ((player.currentChallenge.reincarnation === 10) && (type === \"Coin\" || type === \"Diamonds\")) {\n        // you would not fucking believe how long it took me to figure this out\n        // (100*costofcurrent + 10000)^n = (((100+buyingTo)!/100!)*100^buyingTo)^n\n        ++fastFactMultBuyTo100;\n        if (buyingTo >= (r * 25000)) {\n            // and I changed this to be a summation of all the previous buys 1.25 to the sum from 1 to buyingTo\n            mlog10125 += (buyingTo * (buyingTo + 1) / 2);\n        }\n    }\n    // Applies the factorial w/ formula from earlier n times to avoid multiple computations\n    cost.exponent += fastFactMultBuyTo100 * ((factorialByExponent(buyingTo + 100) - fact100exponent + (2 * buyingTo)) * (1.25 + (player.challengecompletions[4] / 4)));\n    // Applies all the Math.log10(1.25)s from earlier n times to avoid multiple computations\n    // log10(1.25)\n    cost.exponent += known_log10s[1.25] * mlog10125;\n    fr = Math.floor(r * 1000 * player.challengecompletions[8]);\n    if (player.currentChallenge.reincarnation === 8 && (type === \"Coin\" || type === \"Diamonds\" || type === \"Mythos\") && buyingTo >= (1000 * player.challengecompletions[8] * r)) {\n        cost.exponent += ((known_log10s[2] * ((buyingTo - fr + 1) / 2)) - known_log10s[1 + (player.challengecompletions[8] / 2)]) * (buyingTo - fr);\n    }\n\n    const extra = cost.exponent - Math.floor(cost.exponent);\n    cost.exponent = Math.floor(cost.exponent);\n    cost.mantissa *= Math.pow(10, extra);\n    cost.normalize();\n    return cost;\n}\n\nconst getOriginalCostAndNum = (index: OneToFive, type: keyof typeof buyProducerTypes) => {\n    const originalCostArray = (\n        type === 'Coin'\n            ? coinBuildingCosts\n            : type === 'Diamonds'\n                ? diamondBuildingCosts\n                : mythosAndParticleBuildingCosts);\n    const num = type === 'Coin' ? index : index * (index + 1) / 2;\n    const originalCost = originalCostArray[index - 1 as ZeroToFour];\n    return [originalCost, num] as const;\n}\n\nexport const getCost = (index: OneToFive, type: keyof typeof buyProducerTypes, buyingTo: number, r?: number) => {\n    const [originalCost, num] = getOriginalCostAndNum(index, type);\n    return getCostInternal(originalCost, buyingTo, type, num, r ?? getReductionValue());\n}\n\nexport const buyMax = (index: OneToFive, type: keyof typeof buyProducerTypes) => {\n    const zeroIndex = index-1 as ZeroToFour;\n    const pos = G['ordinals'][zeroIndex];\n    const [originalCost, num] = getOriginalCostAndNum(index, type);\n    \n    const BUYMAX = (Math.pow(10, 99) - 1);\n    const COINMAX = 1e99;\n    const r = getReductionValue();\n    const tag = buyProducerTypes[type][0];\n\n    const posOwnedType = `${pos}Owned${type}` as const;\n\n    // Start buying at the current amount bought + 1\n    const buyStart = player[posOwnedType];\n    // Degenerate Case: return the maximum if applicable\n    if (buyStart >= BUYMAX) {\n        player[posOwnedType] = BUYMAX;\n        return;\n    }\n    // Degenerate Case: return maximum if coins is too large\n    if (player[tag].gte(Decimal.pow(10, COINMAX))) {\n        player[posOwnedType] = BUYMAX;\n        return;\n    }\n\n    let buyInc = 1;\n    let cashToBuy = getCostInternal(originalCost, buyStart + buyInc, type, num, r);\n    while (player[tag].gte(cashToBuy)) {\n        // then multiply by 4 until it reaches just above the amount needed\n        buyInc = buyInc * 4;\n        cashToBuy = getCostInternal(originalCost, buyStart + buyInc, type, num, r);\n    }\n    let stepdown = Math.floor(buyInc / 8);\n    while (stepdown !== 0) {\n        // if step down would push it below out of expense range then divide step down by 2\n        if (getCostInternal(originalCost, buyStart + buyInc - stepdown, type, num, r).lte(player[tag])) {\n            stepdown = Math.floor(stepdown / 2);\n        } else {\n            buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown);\n        }\n    }\n    // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\n    let buyFrom = Math.max(buyStart + buyInc - 7, player[posOwnedType] + 1);\n    let thisCost = getCostInternal(originalCost, buyFrom, type, num, r);\n    while (buyFrom < buyStart + buyInc && player[tag].gte(thisCost)) {\n        player[tag] = player[tag].sub(thisCost);\n        player[posOwnedType] = buyFrom;\n        buyFrom = buyFrom + smallestInc(buyFrom);\n        thisCost = getCostInternal(originalCost, buyFrom, type, num, r);\n        player[`${pos}Cost${type}` as const] = thisCost;\n    }\n}\n\nconst buyProducerTypes = {\n    Diamonds: ['prestigePoints', 'crystal'],\n    Mythos: ['transcendPoints', 'mythos'],\n    Particles: ['reincarnationPoints', 'particle'],\n    Coin: ['coins', 'coin']\n} as const;\n\nexport const buyProducer = (pos: FirstToFifth, type: keyof typeof buyProducerTypes, num: number, autobuyer?: boolean) => {\n    const [tag, amounttype] = buyProducerTypes[type];\n    const buythisamount = autobuyer ? 500 : player[`${amounttype}buyamount` as const];\n    let r = 1;\n    r += (G['rune4level'] * G['effectiveLevelMult']) / 160;\n    r += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200;\n    r += CalcECC('transcend', player.challengecompletions[4]) / 200\n    r += (3 * (G['bonusant7'] + player.antUpgrades[7-1])) / 100;\n\n    const posCostType = `${pos}Cost${type}` as const;\n    const posOwnedType = `${pos}Owned${type}` as const;\n\n    \n    while (player[tag].gte(player[posCostType]) && G['ticker'] < buythisamount) {\n        player[tag] = player[tag].sub(player[posCostType]);\n        player[posOwnedType] += 1;\n        player[posCostType] = player[posCostType].times(Decimal.pow(1.25, num));\n        player[posCostType] = player[posCostType].add(1);\n        if (player[posOwnedType] >= (1000 * r)) {\n            player[posCostType] = player[posCostType].times(player[posOwnedType]).dividedBy(1000).times(1 + num / 2);\n        }\n        if (player[posOwnedType] >= (5000 * r)) {\n            player[posCostType] = player[posCostType].times(player[posOwnedType]).times(10).times(10 + num * 10);\n        }\n        if (player[posOwnedType] >= (20000 * r)) {\n            player[posCostType] = player[posCostType].times(Decimal.pow(player[posOwnedType], 3)).times(100000).times(100 + num * 100)\n        }\n        if (player[posOwnedType] >= (250000 * r)) {\n            player[posCostType] = player[posCostType].times(Decimal.pow(1.03, player[posOwnedType] - 250000 * r))\n        }\n        if (player.currentChallenge.transcension === 4 && (type === \"Coin\" || type === \"Diamonds\")) {\n            player[posCostType] = player[posCostType].times(Math.pow(100 * player[posOwnedType] + 10000, 1.25 + 1 / 4 * player.challengecompletions[4]));\n            if (player[posOwnedType] >= 1000 - (10 * player.challengecompletions[4])) {\n                player[posCostType] = player[posCostType].times(Decimal.pow(1.25, player[posOwnedType]));\n            }\n        }\n        if (player.currentChallenge.reincarnation === 8 && (type === \"Coin\" || type === \"Diamonds\" || type === \"Mythos\") && player[posOwnedType] >= (1000 * player.challengecompletions[8] * r)) {\n            player[posCostType] = player[posCostType].times(Decimal.pow(2, (player[posOwnedType] - (1000 * player.challengecompletions[8] * r)) / (1 + (player.challengecompletions[8] / 2))));\n        }\n        G['ticker'] += 1;\n    }\n    G['ticker'] = 0;\n}\n\ntype Upgrade = 'prestige' | 'transcend' | 'reincarnation' | 'coin';\n\nconst upgradeToCurrency = (type: Upgrade) => {\n    if (type === 'coin') {\n        return 'coins' as const;\n    }\n    return `${type}Points` as const;\n}\n\nexport const buyUpgrades = (type: Upgrade, pos: number, state?: boolean) => {\n    const currency = upgradeToCurrency(type);\n    if (player[currency].gte(Decimal.pow(10, G['upgradeCosts'][pos])) && player.upgrades[pos] === 0) {\n        player[currency] = player[currency].sub(Decimal.pow(10, G['upgradeCosts'][pos]))\n        player.upgrades[pos] = 1;\n        upgradeupdate(pos, state)\n    }\n\n    if (type === \"transcend\") {\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    if (type === \"prestige\") {\n        player.transcendnocoinorprestigeupgrades = false;\n        player.reincarnatenocoinorprestigeupgrades = false;\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    if (type === \"coin\") {\n        player.prestigenocoinupgrades = false;\n        player.transcendnocoinupgrades = false;\n        player.transcendnocoinorprestigeupgrades = false;\n        player.reincarnatenocoinupgrades = false;\n        player.reincarnatenocoinorprestigeupgrades = false;\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n\n}\n\nexport const calculateCrystalBuy = (i: number) => {\n    const u = i - 1;\n    const exponent = Decimal.log(player.prestigeShards.add(1), 10);\n\n    const toBuy = Math.floor(Math.pow(Math.max(0, 2 * (exponent - G['crystalUpgradesCost'][u]) / G['crystalUpgradeCostIncrement'][u] + 1 / 4), 1 / 2) + 1 / 2)\n    return toBuy;\n}\n\nexport const buyCrystalUpgrades = (i: number, auto = false) => {\n    const u = i - 1;\n\n    let c = 0;\n    c += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        c += 10\n    }\n\n    const toBuy = calculateCrystalBuy(i);\n\n    if (toBuy + c > player.crystalUpgrades[u]) {\n        player.crystalUpgrades[u] = 100 / 100 * (toBuy + c)\n        if (toBuy > 0) {\n            player.prestigeShards = player.prestigeShards.sub(Decimal.pow(10, G['crystalUpgradesCost'][u] + G['crystalUpgradeCostIncrement'][u] * (1 / 2 * Math.pow(toBuy - 1 / 2, 2) - 1 / 8)))\n            if (!auto) {\n                crystalupgradedescriptions(i)\n            }\n        }\n    }\n}\n\nexport const boostAccelerator = (automated?: boolean) => {\n    let buyamount = 1;\n    if (player.upgrades[46] === 1) {\n        buyamount = automated ? 9999 : player.coinbuyamount;\n    }\n\n    if (player.upgrades[46] < 1) {\n        while (player.prestigePoints.gte(player.acceleratorBoostCost) && G['ticker'] < buyamount) {\n            if (player.prestigePoints.gte(player.acceleratorBoostCost)) {\n                player.acceleratorBoostBought += 1;\n                player.acceleratorBoostCost = player.acceleratorBoostCost.times(1e10).times(Decimal.pow(10, player.acceleratorBoostBought));\n                if (player.acceleratorBoostBought > (1000 * (1 + 2 * G['effectiveRuneBlessingPower'][4]))) {\n                    player.acceleratorBoostCost = player.acceleratorBoostCost.times(Decimal.pow(10, Math.pow(player.acceleratorBoostBought - (1000 * (1 + 2 * G['effectiveRuneBlessingPower'][4])), 2) / (1 + 2 * G['effectiveRuneBlessingPower'][4])))\n                }\n                player.transcendnoaccelerator = false;\n                player.reincarnatenoaccelerator = false;\n                if (player.upgrades[46] < 0.5) {\n                    for (let j = 21; j < 41; j++) {\n                        player.upgrades[j] = 0;\n                    }\n                    reset(\"prestige\");\n                    player.prestigePoints = new Decimal(0);\n                }\n            }\n        }\n    } else {\n        const buyStart = player.acceleratorBoostBought;\n        let buyInc = 1;\n        let cost = getAcceleratorBoostCost(buyStart + buyInc);\n        while (player.prestigePoints.gte(cost)) {\n            buyInc *= 4;\n            cost = getAcceleratorBoostCost(buyStart + buyInc);\n        }\n        let stepdown = Math.floor(buyInc / 8)\n        while (stepdown !== 0) {\n            // if step down would push it below out of expense range then divide step down by 2\n            if (getAcceleratorBoostCost(buyStart + buyInc - stepdown).lte(player.prestigePoints)) {\n                stepdown = Math.floor(stepdown / 2);\n            } else {\n                buyInc = buyInc - Math.max(smallestInc(buyInc),stepdown);\n            }\n        }\n        // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\n        let buyFrom = Math.max(buyStart + buyInc - 7, player.acceleratorBoostBought + 1);\n        let thisCost = getAcceleratorBoostCost(player.acceleratorBoostBought);\n        while (buyFrom < buyStart + buyInc && player.prestigePoints.gte(getAcceleratorBoostCost(buyFrom))) {\n            player.prestigePoints = player.prestigePoints.sub(thisCost);\n            player.acceleratorBoostBought = buyFrom;\n            buyFrom = buyFrom + smallestInc(buyInc);\n            thisCost = getAcceleratorBoostCost(buyFrom);\n            player.acceleratorBoostCost = thisCost;\n\n            player.transcendnoaccelerator = false;\n            player.reincarnatenoaccelerator = false;\n        }\n    }\n\n    G['ticker'] = 0;\n    if (player.acceleratorBoostBought >= 2 && player.achievements[162] === 0) {\n        achievementaward(162)\n    }\n    if (player.acceleratorBoostBought >= 10 && player.achievements[163] === 0) {\n        achievementaward(163)\n    }\n    if (player.acceleratorBoostBought >= 50 && player.achievements[164] === 0) {\n        achievementaward(164)\n    }\n    if (player.acceleratorBoostBought >= 200 && player.achievements[165] === 0) {\n        achievementaward(165)\n    }\n    if (player.acceleratorBoostBought >= 1000 && player.achievements[166] === 0) {\n        achievementaward(166)\n    }\n    if (player.acceleratorBoostBought >= 5000 && player.achievements[167] === 0) {\n        achievementaward(167)\n    }\n    if (player.acceleratorBoostBought >= 15000 && player.achievements[168] === 0) {\n        achievementaward(168)\n    }\n\n\n}\n\nconst getAcceleratorBoostCost = (level = 1) => {\n    // formula starts at 0 but buying starts at 1\n    level--;\n    const base = new Decimal(1e3)\n    const eff = 1 + 2 * G['effectiveRuneBlessingPower'][4]\n    const linSum = (n: number) => n * (n + 1) / 2\n    const sqrSum = (n: number) => n * (n + 1) * (2 * n + 1) / 6\n    if (level > 1000 * eff) {\n        return base.times(Decimal.pow(10, 10 * level\n            + linSum(level) // each level increases the exponent by 1 more each time\n            + sqrSum(level - 1000 * eff) / eff)) // after cost delay is passed each level increases the cost by the square each time\n    } else {\n        return base.times(Decimal.pow(10, 10 * level + linSum(level)))\n    }\n}\n\nconst getParticleCost = (originalCost: DecimalSource, buyTo: number) => {\n    --buyTo;\n    originalCost = new Decimal(originalCost)\n    let cost = originalCost.times(Decimal.pow(2, buyTo));\n\n    const DR = (player.currentChallenge.ascension !== 15)? 325000: 1000;\n\n    if (buyTo > DR) {\n        cost = cost.times(Decimal.pow(1.001, (buyTo - DR) * ((buyTo - DR + 1) / 2)));\n    }\n    return (cost)\n}\n\nexport const buyParticleBuilding = (\n    index: OneToFive,\n    autobuyer = false\n) => {\n    const zeroIndex = index-1 as ZeroToFour;\n    const originalCost = mythosAndParticleBuildingCosts[zeroIndex];\n    const pos = G['ordinals'][zeroIndex];\n    const key = `${pos}OwnedParticles` as const;\n    let buyTo = player[key] + 1;\n    let cashToBuy = getParticleCost(originalCost, buyTo);\n    while (player.reincarnationPoints.gte(cashToBuy)) {\n        // then multiply by 4 until it reaches just above the amount needed\n        buyTo = buyTo * 4;\n        cashToBuy = getParticleCost(originalCost, buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n\n        // if step down would push it below out of expense range then divide step down by 2\n        if (getParticleCost(originalCost, buyTo - stepdown).lte(player.reincarnationPoints)) {\n            stepdown = Math.floor(stepdown / 2);\n        } else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n\n    if (!autobuyer) {\n        if (player.particlebuyamount + player[key] < buyTo) {\n            buyTo = player[key] + player.particlebuyamount + 1;\n        }\n    }\n\n    // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\n    let buyFrom = Math.max(buyTo - 7, player[key] + 1);\n    let thisCost = getParticleCost(originalCost, buyFrom);\n    while (buyFrom < buyTo && player.reincarnationPoints.gte(getParticleCost(originalCost, buyFrom))) {\n        player.reincarnationPoints = player.reincarnationPoints.sub(thisCost);\n        player[key] = buyFrom;\n        buyFrom = buyFrom + 1;\n        thisCost = getParticleCost(originalCost, buyFrom);\n        player[`${pos}CostParticles` as const] = thisCost;\n    }\n}\n\nexport const tesseractBuildingCosts = [1, 10, 100, 1000, 10000] as const;\n\n// The nth tesseract building of tier i costs\n//   tesseractBuildingCosts[i-1] * n^3.\n// so the first n tesseract buildings of tier i costs\n//   cost(n) = tesseractBuildingCosts[i-1] * (n * (n+1) / 2)^2\n// in total. Use cost(owned+buyAmount) - cost(owned) to figure the cost of\n// buying multiple buildings.\n\nexport type TesseractBuildings = [number|null, number|null, number|null, number|null, number|null];\n\nconst buyTessBuildingsToCheapestPrice = (ownedBuildings: TesseractBuildings, cheapestPrice: number): [number, TesseractBuildings] => {\n    const buyToBuildings = ownedBuildings.map((currentlyOwned, index) => {\n        if (currentlyOwned === null) {\n            return null;\n        }\n        // thisPrice >= cheapestPrice = tesseractBuildingCosts[index] * (buyTo+1)^3\n        // buyTo = cuberoot(cheapestPrice / tesseractBuildingCosts[index]) - 1\n        // If buyTo has a fractional part, we want to round UP so that this\n        // price costs more than the cheapest price.\n        // If buyTo doesn't have a fractional part, thisPrice = cheapestPrice.\n        const buyTo = Math.ceil(Math.pow(cheapestPrice / tesseractBuildingCosts[index], 1/3) - 1);\n        // It could be possible that cheapestPrice is less than the CURRENT\n        // price of this building, so take the max of the number of buildings\n        // we currently have.\n        return Math.max(currentlyOwned, buyTo);\n    }) as TesseractBuildings;\n\n    let price = 0;\n    for (let i = 0; i < ownedBuildings.length; i++) {\n        const buyFrom = ownedBuildings[i];\n        const buyTo = buyToBuildings[i];\n        if (buyFrom === null || buyTo === null) {\n            continue;\n        }\n        price += tesseractBuildingCosts[i] * (Math.pow(buyTo * (buyTo + 1) / 2, 2) - Math.pow(buyFrom * (buyFrom + 1) / 2, 2));\n    }\n\n    return [price, buyToBuildings];\n};\n\n/**\n * Calculate the result of repeatedly buying the cheapest tesseract building,\n * given an initial list of owned buildings and a budget.\n * \n * This function is pure and does not rely on any global state other than\n * constants for ease of testing.\n * \n * For tests:\n * calculateInBudget([0, 0, 0, 0, 0], 100) = [3, 1, 0, 0, 0]\n * calculateInBudget([null, 0, 0, 0, 0], 100) = [null, 2, 0, 0, 0]\n * calculateInBudget([3, 1, 0, 0, 0], 64+80-1) = [4, 1, 0, 0, 0]\n * calculateInBudget([3, 1, 0, 0, 0], 64+80) = [4, 2, 0, 0, 0]\n * calculateInBudget([9, 100, 100, 0, 100], 1000) = [9, 100, 100, 1, 100]\n * calculateInBudget([9, 100, 100, 0, 100], 2000) = [10, 100, 100, 1, 100]\n * \n * and calculateInBudget([0, 0, 0, 0, 0], 1e46) should run in less than a\n * second.\n * \n * @param ownedBuildings The amount of buildings owned, or null if the building\n * should not be bought.\n * @param budget The number of tesseracts to spend.\n * @returns The amount of buildings owned after repeatedly buying the cheapest\n * building with the budget.\n */\nexport const calculateTessBuildingsInBudget = (ownedBuildings: TesseractBuildings, budget: number): TesseractBuildings => {\n    // Nothing is affordable.\n    // Also catches the case when budget <= 0, and all values are null.\n    let minCurrentPrice: number|null = null;\n    for (let i = 0; i < ownedBuildings.length; i++) {\n        const owned = ownedBuildings[i];\n        if (owned === null) {\n            continue;\n        }\n        const price = tesseractBuildingCosts[i] * Math.pow(owned + 1, 3);\n        if (minCurrentPrice === null || price < minCurrentPrice) {\n            minCurrentPrice = price;\n        }\n    }\n\n    if (minCurrentPrice === null || minCurrentPrice > budget) {\n        return ownedBuildings;\n    }\n\n    // Every time the cheapest building is bought, the cheapest price either\n    // stays constant (if there are two or more cheapest buildings), or\n    // increases.\n    //\n    // Additionally, given the price of a building, calculating\n    // - the amount of buildings needed to hit that price and\n    // - the cumulative cost to buy to that amount of buildings\n    // can be done with a constant number of floating point operations.\n    //\n    // Therefore, by binary searching over \"cheapest price when finished\", we\n    // are able to efficiently (O(log budget)) determine the number of buildings\n    // owned after repeatedly buying the cheapest building. Calculating the\n    // cheapest building and buying one at a time would take O(budget^(1/4))\n    // time - and as the budget could get very large (this is Synergism after\n    // all), this is probably too slow.\n    //\n    // That is, we have a function f(cheapestPrice) which returns the cost of\n    // buying buildings until all prices to buy are cheapestPrice or higher, and\n    // we want to find the maximum value of cheapestPrice such that\n    // f(cheapestPrice) <= budget.\n    // In this case, f(x) = buyTessBuildingsToCheapestPrice(ownedBuildings, x)[0].\n    \n    // f(minCurrentPrice) = 0 < budget. We also know that we can definitely buy\n    // at least one thing.\n    let lo = minCurrentPrice;\n    // Do an exponential search to find the upper bound.\n    let hi = lo * 2;\n    while (buyTessBuildingsToCheapestPrice(ownedBuildings, hi)[0] <= budget) {\n        lo = hi;\n        hi *= 2;\n    }\n    // Invariant:\n    // f(lo) <= budget < f(hi).\n    while (hi - lo > 0.5) {\n        const mid = lo + (hi - lo) / 2;\n        // It's possible to get into an infinite loop if mid here is equal to\n        // the boundaries, even if hi !== lo (due to floating point inaccuracy).\n        if (mid === lo || mid === hi) {\n            break;\n        }\n        if (buyTessBuildingsToCheapestPrice(ownedBuildings, mid)[0] <= budget) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n\n    // Binary search is done (with lo being the best candidate).\n    const [cost, buildings] = buyTessBuildingsToCheapestPrice(ownedBuildings, lo);\n\n    // Note that this has a slight edge case when 2 <= N <= 5 buildings are the\n    // same price, and it is optimal to buy only M < N of them at that price.\n    // The result of this edge case is that we can finish the binary search with\n    // a set of buildings which are affordable, but more buildings can still be\n    // bought. To fix this, we greedily buy the cheapest building one at a time,\n    // which should take 4 or less iterations to run out of budget.\n    let remainingBudget = budget - cost;\n    const currentPrices = buildings.map((num, index) => {\n        if (num === null) {\n            return null;\n        }\n        return tesseractBuildingCosts[index] * Math.pow(num+1, 3);\n    });\n\n    for (let iteration = 1; iteration <= 5; iteration++) {\n        let minimum: {price: number, index: number}|null = null;\n        for (let index = 0; index < currentPrices.length; index++) {\n            const price = currentPrices[index];\n            if (price === null) {\n                continue;\n            }\n            // <= is used instead of < to prioritise the higher tier buildings\n            // over the lower tier ones if they have the same price.\n            if (minimum === null || price <= minimum.price) {\n                minimum = {price, index};\n            }\n        }\n        if (minimum !== null && minimum.price <= remainingBudget) {\n            remainingBudget -= minimum.price;\n            // buildings[minimum.index] should always be a number.\n            // In extreme situations (when buildings[minimum.index] is bigger\n            // than Number.MAX_SAFE_INTEGER), this below increment won't work.\n            // However, that requires 1e47 tesseracts to get to, which shouldn't\n            // ever happen.\n            buildings[minimum.index]!++;\n            currentPrices[minimum.index] = tesseractBuildingCosts[minimum.index] * Math.pow(buildings[minimum.index]!+1, 3);\n            if (iteration === 5) {\n                console.warn(`Error in calculateInBudget(${JSON.stringify(ownedBuildings)}, ${JSON.stringify(budget)}). Copy this message and report this to a developer.`);\n            }\n        } else {\n            // Can't afford cheapest any more - break.\n            break;\n        }\n    }\n\n    return buildings;\n};\n\n/**\n * @param index Which tesseract building to get the cost of.\n * @param amount The amount to buy. Defaults to tesseract buy amount.\n * @param checkCanAfford Whether to limit the purchase amount to the number of buildings the player can afford.\n * @returns A pair of [number of buildings after purchase, cost of purchase].\n */\nexport const getTesseractCost = (index: OneToFive, amount?: number, checkCanAfford = true, buyFrom?: number): [number, number] => {\n    amount ??= player.tesseractbuyamount;\n    buyFrom ??= player[`ascendBuilding${index}` as const]['owned'];\n    const intCost = tesseractBuildingCosts[index - 1];\n    const subCost = intCost * Math.pow(buyFrom * (buyFrom + 1) / 2, 2);\n\n    let actualBuy: number;\n    if (checkCanAfford) {\n        const buyTo = Math.floor(-1 / 2 + 1 / 2 * Math.pow(1 + 8 * Math.pow((Number(player.wowTesseracts) + subCost) / intCost, 1 / 2), 1 / 2));\n        actualBuy = Math.min(buyTo, buyFrom + amount);\n    } else {\n        actualBuy = buyFrom + amount;\n    }\n    const actualCost = intCost * Math.pow(actualBuy * (actualBuy + 1) / 2, 2) - subCost;\n    return [actualBuy, actualCost];\n}\n\nexport const buyTesseractBuilding = (index: OneToFive, amount = player.tesseractbuyamount) => {\n    const intCost = tesseractBuildingCosts[index - 1];\n    const ascendBuildingIndex = `ascendBuilding${index}` as const;\n    // Destructuring FTW!\n    const [buyTo, actualCost] = getTesseractCost(index, amount);\n\n    player[ascendBuildingIndex]['owned'] = buyTo;\n    player.wowTesseracts.sub(actualCost);\n    player[ascendBuildingIndex]['cost'] = intCost * Math.pow(1 + buyTo, 3)\n}\n\nexport const buyRuneBonusLevels = (type: 'Blessings' | 'Spirits', index: number) => {\n    let baseCost\n    let baseLevels\n    let levelCap\n    (type === 'Spirits') ?\n        (baseCost = G['spiritBaseCost'], baseLevels = player.runeSpiritLevels[index], levelCap = player.runeSpiritBuyAmount) :\n        (baseCost = G['blessingBaseCost'], baseLevels = player.runeBlessingLevels[index], levelCap = player.runeBlessingBuyAmount);\n\n    const [level, cost] = calculateSummationLinear(baseLevels, baseCost, player.runeshards, levelCap);\n    (type === 'Spirits') ?\n        player.runeSpiritLevels[index] = level :\n        player.runeBlessingLevels[index] = level;\n\n    player.runeshards -= cost;\n\n    if (index === 1) {\n        const requirementArray = [0, 1e5, 1e8, 1e11]\n        for (let i = 1; i <= 3; i++) {\n            if (player.runeBlessingLevels[1] >= requirementArray[i] && player.achievements[231 + i] < 1) {\n                achievementaward(231 + i)\n            }\n            if (player.runeSpiritLevels[1] >= 10 * requirementArray[i] && player.achievements[234 + i] < 1) {\n                achievementaward(234 + i)\n            }\n        }\n        if (player.runeBlessingLevels[1] >= 1e22 && player.achievements[245] < 1) {\n            achievementaward(245)\n        }\n    }\n\n    calculateRuneBonuses()\n\n    if (type === 'Blessings') {\n        const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1]\n        const t = (index === 5) ? 1 : 0;\n        document.getElementById('runeBlessingPower' + index + 'Value1').textContent = format(G['runeBlessings'][index])\n        document.getElementById('runeBlessingPower' + index + 'Value2').textContent = format(1 - t + blessingMultiplierArray[index] * G['effectiveRuneBlessingPower'][index], 4, true)\n    }\n    if (type === 'Spirits') {\n        const spiritMultiplierArray = [0, 1, 1, 20, 1, 100]\n        spiritMultiplierArray[index] *= (calculateCorruptionPoints() / 400)\n        const t = (index === 3) ? 1 : 0;\n        document.getElementById('runeSpiritPower' + index + 'Value1').textContent = format(G['runeSpirits'][index])\n        document.getElementById('runeSpiritPower' + index + 'Value2').textContent = format(1 - t + spiritMultiplierArray[index] * G['effectiveRuneSpiritPower'][index], 4, true)\n    }\n}\n", "import { upgradeupdate } from \"./Upgrades\"\nimport { player } from \"./Synergism\"\nimport Decimal from \"break_infinity.js\"\nimport { achievementaward } from \"./Achievements\"\nimport { revealStuff } from \"./UpdateHTML\"\nimport { Globals as G } from './Variables';\n\nexport const buyGenerator = (i: number, state?: boolean) => {\n    if (i === 1 && player.prestigePoints.gte(1e12) && player.unlocks.generation === false) {\n        player.unlocks.generation = true\n    }\n    const q = 100 + i\n    let type: \"coins\" | \"prestigePoints\" | \"transcendPoints\" = \"transcendPoints\"\n    if (q <= 110 && q >= 106) {\n        type = \"coins\"\n    } else if (q <= 115) {\n        type = \"prestigePoints\"\n    }\n\n    const cost = Decimal.pow(10, G['upgradeCosts'][q])\n    const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105])\n\n    if (player.upgrades[q] === 0 && player[type].gte(cost)) {\n\n        if (achievementCheck === 0) {\n            if([102, 103, 104, 105].includes(q)) {\n                achievementaward(q - 31);\n            }\n        }\n\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state)\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    revealStuff()\n}\n", "import { player } from './Synergism';\nimport { achievementaward } from './Achievements';\nimport Decimal from 'break_infinity.js';\nimport { upgradeupdate } from './Upgrades';\nimport { revealStuff } from './UpdateHTML';\nimport { Globals as G } from './Variables';\nimport { buyUpgrades } from './Buy';\n\nconst buyGenerator = (i: number, state: boolean, auto: boolean) => {\n    if (i === 1 && player.prestigePoints.gte(1e12) && player.unlocks.generation === false) {\n        player.unlocks.generation = true\n    }\n    const q = 100 + i\n    let type: \"transcendPoints\" | \"coins\" | \"prestigePoints\" = \"transcendPoints\"\n    if (q <= 110 && q >= 106) {\n        type = \"coins\"\n    } else if (q <= 115) {\n        type = \"prestigePoints\"\n    }\n\n    const cost = Decimal.pow(10, G['upgradeCosts'][q])\n    const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105])\n\n    if (player.upgrades[q] === 0 && player[type].gte(cost)) {\n        if (achievementCheck === 0 && q >= 102 && q <= 105) {\n            achievementaward(q - 31);\n        }\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state)\n    }\n\n    if (!auto) {\n        revealStuff()\n    }\n}\n\nexport const buyAutobuyers = (i: number, state?: boolean) => {\n    const q = i + 80\n    let type: \"prestigePoints\" | \"transcendPoints\" | \"reincarnationPoints\" = \"reincarnationPoints\";\n    if (q <= 87) {\n        type = \"prestigePoints\"\n    } else if (q <= 93) {\n        type = \"transcendPoints\"\n    }\n\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\n    if (player[type].gte(cost) && player.upgrades[q] === 0) {\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state);\n    }\n}\n\nexport const autoUpgrades = () => {\n    if (player.upgrades[90] > 0.5 && player.shoptoggles.generators === true) {\n\n        for (let i = 1; i < 6; i++) {\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + i)])) && player.shoptoggles.generators === true) {\n                buyGenerator(i, true, true)\n            }\n        }\n        for (let j = 6; j < 11; j++) {\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][(100 + j)])) && player.shoptoggles.generators === true) {\n                buyGenerator(j, true, true)\n            }\n        }\n        for (let k = 11; k < 16; k++) {\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + k)])) && player.shoptoggles.generators === true) {\n                buyGenerator(k, true, true)\n            }\n        }\n        for (let l = 16; l < 21; l++) {\n            if (player.transcendPoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + l)])) && player.shoptoggles.generators === true) {\n                buyGenerator(l, true, true)\n            }\n        }\n    }\n    if (player.upgrades[91] > 0.5) {\n        for (let i = 1; i < 21; i++) {\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.coin === true) {\n                buyUpgrades('coin', i, true)\n            }\n        }\n        for (let i = 121; i <= 125; i++){\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.coin === true && player.cubeUpgrades[19] > 0) {\n                buyUpgrades('coin',i,true)\n            }\n        }\n    }\n    if (player.upgrades[92] > 0.5) {\n        for (let i = 21; i < 38; i++) {\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.prestige === true) {\n                buyUpgrades('prestige', i, true)\n            }\n        }\n        if (player.prestigePoints.gte(Decimal.pow(10, 50000)) && player.shoptoggles.prestige === true && player.achievements[120] === 1) {\n            buyUpgrades('prestige', 38, true)\n        }\n        if (player.prestigePoints.gte(Decimal.pow(10, 100000)) && player.shoptoggles.prestige === true && player.achievements[127] === 1) {\n            buyUpgrades('prestige', 39, true)\n        }\n        if (player.prestigePoints.gte(Decimal.pow(10, 200000)) && player.shoptoggles.prestige === true && player.achievements[134] === 1) {\n            buyUpgrades('prestige', 40, true)\n        }\n\n    }\n    if (player.upgrades[99] > 0.5) {\n        for (let i = 41; i < 61; i++) {\n            if (player.transcendPoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.transcend === true) {\n                buyUpgrades('transcend', i, true)\n            }\n        }\n    }\n\n    if (player.cubeUpgrades[8] > 0) {\n        for (let i = 61; i <= 80; i++) {\n            if (player.reincarnationPoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.reincarnate) {\n                buyUpgrades('reincarnation', i, true)\n            }\n        }\n    }\n}\n", "import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { calculateAnts, calculateCorruptionPoints, calculateRuneLevels } from './Calculate';\nimport { sumContents } from './Utility';\nimport { buyUpgrades } from './Buy';\nimport { buyGenerator } from './Generators';\nimport { buyAutobuyers } from './Automation';\nimport { revealStuff } from './UpdateHTML';\n\nconst upgdesc: Record<string, string> = {\n    upgdesc1: \"Increase production of Workers per producer bought.\", //Coin Upgrades 1-20\n    upgdesc2: \"Increase production of Investments per producer bought.\",\n    upgdesc3: \"Increase production of Printers per producer bought.\",\n    upgdesc4: \"Increase production of Mints per producer bought.\",\n    upgdesc5: \"Increase production of Alchemies per producer bought.\",\n    upgdesc6: \"Increase all production based on producer bought.\",\n    upgdesc7: \"Gain free multipliers based on your purchased Alchemies.\",\n    upgdesc8: \"Gain 1 free Accelerator per 7 purchased Multipliers.\",\n    upgdesc9: \"Gain 1 free Multiplier per 10 purchased Accelerators.\",\n    upgdesc10: \"Improve Workers based on the first 750 purchased Investments.\",\n    upgdesc11: \"Accelerators improve generation production by 2% each.\",\n    upgdesc12: \"Each prestige multiplies production by 1.01, multiplicatively (Max: 1e4x).\",\n    upgdesc13: \"Augments buff the production of Investments.\",\n    upgdesc14: \"Free Accelerators buff generation of Printers.\",\n    upgdesc15: \"Free Accelerators buff generation of Mints.\",\n    upgdesc16: \"Acceleration Multiplier buffs Diamond gain.\",\n    upgdesc17: \"Multiply Mint production by 1e+100.\",\n    upgdesc18: \"Multiply Printer production based on Mythos Shards.\",\n    upgdesc19: \"Multiply Investment production based on Mythos.\",\n    upgdesc20: \"Coin upgrade 1 is raised to the eleventh power.\",\n    upgdesc21: \"Gain 1 Multiplier and 5 Accelerators plus 1% more free Multipliers/Accelerators.\", //Prestige Upgrades 21-40\n    upgdesc22: \"Gain 1 Multiplier and 4 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc23: \"Gain 1 Multiplier and 3 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc24: \"Gain 1 Multiplier and 2 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc25: \"Gain 1 Multiplier and 1 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc26: \"Gain a free Accelerator Boost.\",\n    upgdesc27: \"Gain free Accelerators based on unspent Coins.\",\n    upgdesc28: \"Gain a free Multiplier per 160 Coin producers bought.\",\n    upgdesc29: \"Gain a free Accelerator per 80 Coin producers bought.\",\n    upgdesc30: \"Gain free Multipliers based on unspent Coins.\",\n    upgdesc31: \"Gain 1 free Accelerator Boost per 2,000 Coin producers bought.\",\n    upgdesc32: \"Gain free Accelerators based on Unspent Diamonds.\",\n    upgdesc33: \"Gain 1 free Multiplier for each Accelerator Boost owned.\",\n    upgdesc34: \"Gain 3% more free Multipliers.\",\n    upgdesc35: \"Gain 2% more free Multipliers.\",\n    upgdesc36: \"Multiply crystal production by Diamonds, maximum 1e5000x.\",\n    upgdesc37: \"Multiply mythos shard production by the squared logarithm of Diamonds.\",\n    upgdesc38: \"Gain +15% more offerings thanks to generous Discord Server Boosters!\",\n    upgdesc39: \"Gain +50% more Ant Speed thanks to generous Discord Server Boosters!\",\n    upgdesc40: \"Gain +25% more Ant Sacrifice rewards thanks to generous Discord Server Boosters!\",\n    upgdesc41: \"Multiply production based on unspent Mythos.\",\n    upgdesc42: \"Multiply Mythos Shard production based on unspent Diamonds.\",\n    upgdesc43: \"Multiply coin production by 1.01 per transcension (Max: 1e30x).\",\n    upgdesc44: \"Multiply Mythos gain on Transcend by 1.01 per transcension (Max: 1e6x).\",\n    upgdesc45: \"Gain free Accelerators based on Mythos Shards.\",\n    upgdesc46: \"Accelerator Boosts are 5% stronger and do not reset prestige features.\",\n    upgdesc47: \"Multiply Mythos Shard production based on your AP.\",\n    upgdesc48: \"Multiply production based on owned Accelerators and Multipliers.\",\n    upgdesc49: \"Gain free Multipliers based on unspent Mythos.\",\n    upgdesc50: \"Gain +25% free Accelerators and Multipliers, but ONLY while doing challenges.\",\n    upgdesc51: \"Increase production of all Mythos buildings based on owned Accelerator Boosts.\",\n    upgdesc52: \"Mythos building exponent +0.025.\",\n    upgdesc53: \"Augments produce more Shards based on Acceleration Multiplier.\",\n    upgdesc54: \"Wizards produce more Enchantments based on Multiplier.\",\n    upgdesc55: \"Grandmasters produce more Oracles based on Building power.\",\n    upgdesc56: \"Worker production is multiplied by 1e+5000.\",\n    upgdesc57: \"Investment production is multiplied by 1e+7500.\",\n    upgdesc58: \"Printer production is multiplied by 1e+15000.\",\n    upgdesc59: \"Coin Mint production is multiplied by 1e+25000.\",\n    upgdesc60: \"Alchemies production is multiplied by 1e+35000.\", //Reincarnation Upgrades 61-100\n    upgdesc61: \"Welcome to reincarnation! +5% Offering Recycle, +5 EXP/Offering!\",\n    upgdesc62: \"Completing challenges, automatically or manually, increase offerings gained in Reincarnation. Bonus subject to time multiplier!\",\n    upgdesc63: \"Crystal Production is multiplied based on Particles to the sixth power [Caps at 1e6000x].\",\n    upgdesc64: \"Mythos Shard Production is multiplied by your Particles squared.\",\n    upgdesc65: \"Multiply the gain of Particles from Reincarnation by 5x!\",\n    upgdesc66: \"When you use an Offering, every unlocked rune will get 3 free experience.\",\n    upgdesc67: \"Atom gain is increased by 3% per Particle producer purchased!\",\n    upgdesc68: \"Gain a free multiplier for every 1e1000x increase in tax.\",\n    upgdesc69: \"Gain more Obtainium based on your particle gain. [Works with automation at a reduced rate!]\",\n    upgdesc70: \"Time seems to go +0.333*log10(MAX obtainium +1)% faster when you buy this.\",\n    upgdesc71: \"Runes will gain (Rune Level/25) additional EXP per offering used.\",\n    upgdesc72: \"Obtainium gain from Reincarnations is multiplied (1 + 2C) where C is #Reincarnation Challenges completed, up to 50x!\",\n    upgdesc73: \"Gain +100% free accelerator boosts and +10 free Crystal Upgrade levels, but only in Reincarnation Challenges.\",\n    upgdesc74: \"Obtainium gain is increased based on highest ever unspent offerings. [Max: 100,000 unspent]\",\n    upgdesc75: \"Offering gain is increased based on highest ever unspent obtainium [Max: 30,000,000 obtainium]\",\n    upgdesc76: \"Ant generation kinda slow? I agree! Make all ant tiers 5x faster!\",\n    upgdesc77: \"This is Synergism, right? Let's make each purchased ant make all ants 0.4% faster.\",\n    upgdesc78: \"Gain an ant speed multiplier equivalent to (1 + 0.005 * (log10(MAX offerings + 1))^2).\",\n    upgdesc79: \"The Ant God will accept an arbitrary number of Particles in order to give you 10% more from sacrifices.\",\n    upgdesc80: \"The Ant God will accept a larger arbitrary number of Particles to give you more ant ELO.\",\n    upgdesc81: \"Automatically buy Workers if affordable.\", //Automation Upgrades 81-100\n    upgdesc82: \"Automatically buy Investments if affordable.\",\n    upgdesc83: \"Automatically buy Printers if affordable.\",\n    upgdesc84: \"Automatically buy Coin Mints if affordable.\",\n    upgdesc85: \"Automatically buy Alchemies if affordable.\",\n    upgdesc86: \"Automatically buy Accelerators if affordable.\",\n    upgdesc87: \"Automatically buy Multipliers if affordable.\",\n    upgdesc88: \"Automatically buy Accelerator Boosts if affordable.\",\n    upgdesc89: \"Unlock Automatic Transcensions.\",\n    upgdesc90: \"Automatically buy from the Generator Shop.\",\n    upgdesc91: \"Automatically buy Coin Upgrades.\",\n    upgdesc92: \"Automatically buy Diamond Upgrades.\",\n    upgdesc93: \"Generate 1% of Diamond Gain from prestiging per second.\",\n    upgdesc94: \"Automatically buy Augments if affordable.\",\n    upgdesc95: \"Automatically buy Enchantments if affordable.\",\n    upgdesc96: \"Automatically buy Wizards if affordable.\",\n    upgdesc97: \"Automatically buy Oracles if affordable.\",\n    upgdesc98: \"Automatically buy Grandmasters if affordable.\",\n    upgdesc99: \"Automatically buy Mythos Upgrades if affordable.\",\n    upgdesc100: \"Generate 1% of Mythos Gain from transcending per second.\",\n    upgdesc101: \"Alchemies will produce Coin Mints.\", // Generator Upgrades 101-120\n    upgdesc102: \"Coin Mints will produce Printers.\",\n    upgdesc103: \"Printers will produce Investments.\",\n    upgdesc104: \"Investments will produce Workers.\",\n    upgdesc105: \"Purchased Workers will produce Alchemies.\",\n    upgdesc106: \"Refineries can produce Alchemies equal to Refineries owned raised to 0.10\",\n    upgdesc107: \"Refinery -> Alchemy exponent increased from 0.10 to 0.25.\",\n    upgdesc108: \"Refinery -> Alchemy exponent increased from 0.25 to 0.50\",\n    upgdesc109: \"Refinery -> Alchemy exponent increased from 0.50 to 0.75\",\n    upgdesc110: \"Refinery -> Alchemy exponent increased from 0.75 to 1\",\n    upgdesc111: \"Augments can produce Pandora Boxes equal to Augments owned raised to 0.08\",\n    upgdesc112: \"Augment -> Box exponent increased from 0.08 to 0.16\",\n    upgdesc113: \"Augment -> Box exponent increased from 0.16 to 0.24\",\n    upgdesc114: \"Augment -> Box exponent increased from 0.24 to 0.32\",\n    upgdesc115: \"Augment -> Box exponent increased from 0.32 to 0.40\",\n    upgdesc116: \"Protons can produce Grandmasters equal to Protons owned raised to 0.05\",\n    upgdesc117: \"Protons -> Grandmaster exponent increased from 0.05 to 0.10\",\n    upgdesc118: \"Protons -> Grandmaster exponent increased from 0.10 to 0.15\",\n    upgdesc119: \"Protons -> Grandmaster exponent increased from 0.15 to 0.20\",\n    upgdesc120: \"Protons -> Grandmaster exponent increased from 0.20 to 0.25\",\n    upgdesc121: \"You probably autobought this. -50% taxes!\",\n    upgdesc122: \"Increase Crystal Upgrade 3 cap from +12% to +100%!\",\n    upgdesc123: \"Raise coin production to the power of 1.025. More EXPONENTS.\",\n    upgdesc124: \"Gain +3% more effective ELO.\",\n    upgdesc125: \"Constant Tax divisor is 0.333% stronger per challenge 10 completion. [Divisor^(1 + upgrade)]\"\n}\n\nconst crystalupgdesc: Record<number, () => string> = {\n    1: () => \"Gain a 5% multiplicative boost to crystals per AP per level.\",\n    2: () => \"Gain a boost to crystals based on held coins per level.\",\n    3: () => `Each purchased Crystal producer increases generation of Crystal producers by .1% per level. [MAX: ${format(100 * (0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4)), 2, true)}%]`,\n    4: () => `Improve the multiplier to coin production by .05 exponent per level. [MAX: +${format(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][3])}]`,\n    5: () => `Every challenge completion increases crystal gain by 1% per level.`,\n    6: () => \"Coming SOON!\",\n    7: () => \"Coming SOON!\",\n    8: () => \"Coming SOON!\"\n}\n\nconst constantUpgDesc: Record<number, () => string> = {\n    1: () => `Make all Tesseract buildings ${format(5 + player.achievements[270] + 0.1 * player.platonicUpgrades[18], 1, true)}% more productive per level.`,\n    2: () => `Each Tesseract building bought increases the production of all of them by 0.1% per level [Max ${format(10 + player.achievements[270] + player.shopUpgrades.constantEX + 100 * (G['challenge15Rewards'].exponent - 1) + 0.3 * player.platonicUpgrades[18], 2, true)}%].`,\n    3: () => \"Increase offering gain +2% per level.\",\n    4: () => \"Increase obtainium gain +4% per level.\",\n    5: () => \"Multiply ant speed by (1 + log10(Constant + 1)/10)^level\",\n    6: () => \"Add +2 free Ant Levels per level.\",\n    7: () => \"Provides 7 free rune levels and increases the rune cap by 3 per level.\",\n    8: () => \"Increase the rune EXP given by offerings by 10% per level [Additive]\",\n    9: () => \"When bought, rune effectiveness is increased by Log4(Talisman Shards +1) %\",\n    10:() => \"When bought, gain Log4(Constant + 1)% more Wow! Cubes and Tesseracts on ascension.\"\n}\n\nconst upgradetexts = [\n    () => \"Worker Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Investment Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Printer Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Mint Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Alchemy Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"All Coin production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Gain \" + Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10))) + \" free multipliers from bought Alchemies.\",\n    () => \"+\" + Math.floor(player.multiplierBought / 7) + \" free Accelerators.\",\n    () => \"+\" + Math.floor(player.acceleratorBought / 10) + \" free Multipliers.\",\n    () => \"Worker Production x\" + format(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)), 2),\n    () => \"Generator efficiency x\" + format(Decimal.pow(1.02, G['freeAccelerator']), 2),\n    () => \"All Coin production x\" + format(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)), 2),\n    () => \"Investment Production x\" + format(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)), 2),\n    () => \"Printer Generation x\" + format(Decimal.pow(1.15, G['freeAccelerator']), 2),\n    () => \"Mint Generation x\" + format(Decimal.pow(1.15, G['freeAccelerator']), 2),\n    () => \"Gain \" + format(Decimal.pow(G['acceleratorEffect'], 1 / 3), 2) + \"x more Diamonds on prestige\",\n    () => \"Mint Production x1e100 (Duh)\",\n    () => \"Printer Production x\" + format(Decimal.min(1e125, player.transcendShards.add(1))),\n    () => \"Investment Production x\" + format(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1))),\n    () => \"All coin production is further multiplied by \" + format(Decimal.pow((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 10), 2) + \" [Stacks with upgrade 1]!\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((5 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((4 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((3 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((2 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((1 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+1 Accelerator Boost.\",\n    () => \"+\" + format(Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.max(0, Math.min(1750, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50))) + \" Accelerators.\",\n    () => \"+\" + format(Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))) + \" Multipliers.\",\n    () => \"+\" + format(Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))) + \" Accelerators.\",\n    () => \"+\" + format(Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)))) + \" Multipliers.\",\n    () => \"+\" + format(Math.floor(G['totalCoinOwned'] / 2000)) + \" Accelerator Boosts\",\n    () => \"+\" + format(Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)))) + \" Accelerators\",\n    () => \"+\" + format(G['totalAcceleratorBoost']) + \" Multipliers\",\n    () => \"+\" + format(Math.floor(3 / 103 * G['freeMultiplier'])) + \" Multipliers\",\n    () => \"+\" + format(Math.floor(2 / 102 * G['freeMultiplier'])) + \" Multipliers\",\n    () => \"All Crystal producers x\" + format(Decimal.min(\"1e5000\", Decimal.pow(player.prestigePoints, 1 / 500)), 2),\n    () => \"All Mythos producers production x\" + format(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2), 2),\n    () => \"Thank you for getting the server above 30 boosts!\",\n    () => \"Thank you for getting the server above 30 boosts!\",\n    () => \"Thank you for getting the server above 30 boosts!\",\n    () => \"Welcome to Transcension! Coin production is multiplied by \" + format(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2))) + \".\",\n    () => \"All mythos shard producers are going into overdrive: x\" + format(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)), 2) + \" the production!\",\n    () => \"Multiply all coin production by \" + format(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)), 2) + \"!\",\n    () => \"Multiply Mythos gained in Transcension by \" + format(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)), 2) + \"!\",\n    () => \"+\" + format(Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)))) + \" Accelerators!\",\n    () => \"It's kinda self-evident, ain't it?\",\n    () => \"Mythos-tier producers production x\" + format(Math.pow(1.05, player.achievementPoints) * (player.achievementPoints + 1), 2),\n    () => \"Multiply coin production by a factor of \" + format(Math.pow((G['totalMultiplier'] * G['totalAccelerator'] / 1000 + 1), 8)) + \"!\",\n    () => \"+\" + format(Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)))) + \" Multipliers through magic!\",\n    () => \"It's quite obvious what the benefit is, but you must be in a challenge for it to be in use!\",\n    () => \"Mythos-tier producers production x\" + format(Math.pow(G['totalAcceleratorBoost'], 2), 2) + \"!\",\n    () => \"Mythos-tier producers production x\" + format(Decimal.pow(G['globalMythosMultiplier'], 0.025), 2) + \"! It's like inception, or something.\",\n    () => \"Augments will produce \" + format(Decimal.min(\"1e1250\", Decimal.pow(G['acceleratorEffect'], 1 / 125)), 2) + \"x as many Mythos Shards.\",\n    () => \"Wizards will produce \" + format(Decimal.min(\"1e2000\", Decimal.pow(G['multiplierEffect'], 1 / 180)), 2) + \"x as many Enchantments; what productive spirits!\",\n    () => \"Grandmasters will produce \" + format((Decimal.pow(\"1e1000\", Math.min(1000, G['buildingPower'] - 1))), 2) + \"x as many Oracles!\",\n    () => \"It's quite obvious, ain't it?\",\n    () => \"Look above!\",\n    () => \"Look above!\",\n    () => \"Look above!\",\n    () => \"Look above!\",\n    () => \"+5% Offering Recycle/+5EXP per Offerings. Duh!\",\n    () => \"Base offering amount for Reincarnations +\" + Math.floor(1 / 5 * (sumContents(player.challengecompletions))) + \". Challenge yourself!\",\n    () => \"All crystal production x\" + format(Decimal.min(\"1e6000\", Decimal.pow(player.reincarnationPoints.add(1), 6))),\n    () => \"All mythos shard production x\" + format(Decimal.pow(player.reincarnationPoints.add(1), 2)),\n    () => \"5x Particle gain from Reincarnations. Duh!\",\n    () => \"It's quite clear in the description!\",\n    () => \"The first particle-tier producer is \" + format(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles), 2) + \"x as productive.\",\n    () => \"Your compliance with tax laws provides you with \" + format(Math.min(2500, Math.floor(1 / 1000 * Decimal.log(G['taxdivisor'], 10)))) + \" free Multipliers, for some reason.\",\n    () => {\n        const a = Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5);\n        const b = Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5);\n        return \"Cosmic Magnetics will allow you to gain \" + \n            format(Math.min(10, new Decimal(a).toNumber()), 2) + \n            \"x as much Obtainium reincarnating, x\" + \n            format(Math.min(3, new Decimal(b).toNumber()), 2) + \n            \" automation gain.\";\n    },\n    () => \"Contracted time makes your game timers run \" + format(1/3 * Math.log(player.maxobtainium + 1)/Math.log(10),2,true) + \"% more quickly.\",\n    () => \"Writing's on the wall. Look above!\",\n    () => \"Obtainium multiplier: x\" + Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10])),\n    () => \"Same as Transcend upgrade 10, except you MUST be in a Reincarnation challenge in particular.\",\n    () => \"Obtainium multiplier: x\" + format((1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5))), 2),\n    () => \"Offering Multiplier: x\" + format((1 + 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5))), 2),\n    () => \"Epic 5x Ants!\",\n    () => \"Ant Speed Multiplier: x\" + format((Decimal.pow(1.004 + 4 / 100000 * player.researches[96], player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts)), 3),\n    () => \"Ant Speed Multiplier: x\" + format(1 + 0.005 * Math.pow(Math.log(player.maxofferings + 1)/Math.log(10),2),2,true),\n    () => \"You will gain +10% rewards =)\",\n    () => \"Ant Elo +75 if this upgrade is purchased.\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"-50% Taxes duh!\",\n    () => \"+88% cap to Crystal Upgrade 3, duh!\",\n    () => \"Coin Production ^1.025, duh!\",\n    () => \"+3% Effective Ant ELO, duh!\",\n    () => \"+\" + format(0.333 * player.challengecompletions[10], 0) + \"% Constant Divisor power.\"\n]\n\nexport const upgradeeffects = (i: number) => {\n    document.getElementById(\"upgradeeffect\").textContent = \"Effect: \" + upgradetexts[i - 1]();\n}\n\nexport const upgradedescriptions = (i: number) => {\n    const y = upgdesc[`upgdesc${i}`];\n    const z = player.upgrades[i] > 0.5 ? ' BOUGHT!' : '';\n\n    const el = document.getElementById(\"upgradedescription\");\n    el.textContent = y + z;\n    el.style.color = player.upgrades[i] > 0.5 ? 'gold' : 'white';\n\n    if (player.toggles[9] === true) {\n        let type = ''\n        if (i <= 20 && i >= 1) {\n            type = 'coin'\n        }\n        if (i <= 40 && i >= 21) {\n            type = 'prestige'\n        }\n        if (i <= 60 && i >= 41) {\n            type = 'transcend'\n        }\n        if (i <= 80 && i >= 61) {\n            type = 'reincarnation'\n        }\n        if (i <= 87 && i >= 81) {\n            type = 'prestige'\n        }\n        if (i <= 93 && i >= 88) {\n            type = 'transcend'\n        }\n        if (i <= 100 && i >= 94) {\n            type = 'reincarnation'\n        }\n        if (type !== '' && i <= 80 && i >= 1) {\n            buyUpgrades(type as Parameters<typeof buyUpgrades>[0], i)\n        }\n        if (type !== '' && i <= 100 && i >= 81) {\n            buyAutobuyers(i - 80);\n        }\n        if (i <= 120 && i >= 101) {\n            buyGenerator(i - 100);\n        }\n    }\n\n    let currency = ''\n    let color = ''\n    if ((i <= 20 && i >= 1) || (i <= 110 && i >= 106) || (i <= 125 && i >= 121)) {\n        currency = \"Coins\";\n        color = \"yellow\"\n    }\n    if ((i <= 40 && i >= 21) || (i <= 105 && i >= 101) || (i <= 115 && i >= 111) || (i <= 87 && i >= 81)) {\n        currency = \"Diamonds\";\n        color = \"cyan\"\n    }\n    if ((i <= 60 && i >= 41) || (i <= 120 && i >= 116) || (i <= 93 && i >= 88)) {\n        currency = \"Mythos\";\n        color = \"plum\"\n    }\n    if ((i <= 80 && i >= 61) || (i <= 100 && i >= 94)) {\n        currency = \"Particles\";\n        color = \"limegreen\"\n    }\n\n    document.getElementById(\"upgradecost\").textContent = \"Cost: \" + format(Decimal.pow(10, G['upgradeCosts'][i])) + \" \" + currency\n    document.getElementById(\"upgradecost\").style.color = color\n    upgradeeffects(i)\n}\n\nconst returnCrystalUpgDesc = (i: number) => crystalupgdesc[i]?.()\n\nexport const crystalupgradedescriptions = (i: number) => {\n    const p = player.crystalUpgrades[i - 1];\n    const c = \n        (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0 ? 10 : 0) +\n        (Math.floor(G['rune3level'] * G['effectiveLevelMult'] /16) * 100 / 100);\n    \n    const q = Decimal.pow(10, (G['crystalUpgradesCost'][i - 1] + G['crystalUpgradeCostIncrement'][i - 1] * Math.floor(Math.pow(player.crystalUpgrades[i - 1] + 0.5 - c, 2) / 2)))\n    document.getElementById(\"crystalupgradedescription\").textContent = returnCrystalUpgDesc(i)\n    document.getElementById(\"crystalupgradeslevel\").textContent = \"Level: \" + p;\n    document.getElementById(\"crystalupgradescost\").textContent = \"Cost: \" + format(q) + \" crystals\"\n}\n\n\nexport const upgradeupdate = (num: number, fast?: boolean) => {\n    const el = document.getElementById(`upg${num}`);\n    if (player.upgrades[num] > 0.5 && ((num <= 60 || num > 80) && (num <= 93 || num > 100))) {\n        el.style.backgroundColor = \"green\"\n    } else if (player.upgrades[num] > 0.5 && ((num > 60 && num <= 80) || (num > 93 && num <= 100) || (num > 120))) {\n        el.style.backgroundColor = \"white\"\n    }\n\n    const b = upgdesc[`upgdesc${num}`];\n    const c = player.upgrades[num] > 0.5 ? ' BOUGHT!' : '';\n    if (player.upgrades[num] > 0.5) {\n        if (!fast) {\n            document.getElementById(\"upgradedescription\").textContent = b + c\n            document.getElementById(\"upgradedescription\").style.color = \"gold\"\n        }\n    } else {\n        el.style.backgroundColor = \"Black\"\n    }\n\n    if (!fast) revealStuff()\n}\n\nexport const ascendBuildingDR = () => {\n    const sum = player.ascendBuilding1.owned + player.ascendBuilding2.owned + player.ascendBuilding3.owned + player.ascendBuilding4.owned + player.ascendBuilding5.owned\n\n    if (sum > 100000)\n        return Math.pow(100000, 0.5) * Math.pow(sum, 0.5)\n    else\n        return sum\n}\n\nconst constUpgEffect: Record<number, () => string> = {\n    1: () => `Tesseract building production x${format(Decimal.pow(1.05 + 0.01 * player.achievements[270] + 0.001 * player.platonicUpgrades[18], player.constantUpgrades[1]), 2, true)}`,\n    2: () => `Tesseract building production x${format(Decimal.pow(1 + 0.001 * Math.min(100 + 10 * player.achievements[270] + 10 * player.shopUpgrades.constantEX + 3 * player.platonicUpgrades[18] + 1000 * (G['challenge15Rewards'].exponent - 1), player.constantUpgrades[2]), ascendBuildingDR()), 2, true)}`,\n    3: () => `Offering gain x${format(1 + 0.02 * player.constantUpgrades[3], 2, true)}`,\n    4: () => `Obtainium gain x${format(1 + 0.04 * player.constantUpgrades[4], 2, true)}`,        \n    5: () => `Ant Speed x${format(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]), 2, true)}`,\n    6: () => `+ ${format(2 * player.constantUpgrades[6])} free Ant Levels`,\n    7: () => `+${format(7 * player.constantUpgrades[7])} free Rune Levels, +${format(3 * player.constantUpgrades[7])} to Rune Cap`,\n    8: () => `Rune EXP x${format(1 + 1 / 10 * player.constantUpgrades[8], 2, true)}`,\n    9: () => `Runes effectiveness x${format(1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]), 4, true)}`,\n    10: () => `Cubes/Tesseracts on Ascension x${format(1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]), 4, true)}` \n}\n\nconst returnConstUpgDesc = (i: number) => constantUpgDesc[i]?.();\nconst returnConstUpgEffect = (i: number) => constUpgEffect[i]?.();\n\nexport const getConstUpgradeMetadata = (i: number): [number, Decimal] => {\n    const toBuy = Math.max(0, Math.floor(1 + Decimal.log(Decimal.max(0.01, player.ascendShards), 10) - Math.log(G['constUpgradeCosts'][i]) / Math.log(10)));\n    let cost = new Decimal(\"1\");\n    if (toBuy > player.constantUpgrades[i]) {\n        cost = Decimal.pow(10, toBuy - 1).times(G['constUpgradeCosts'][i])\n    } else {\n        cost = Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i])\n    }\n\n    return [Math.max(1, toBuy - player.constantUpgrades[i]), cost]\n}\n\nexport const constantUpgradeDescriptions = (i: number) => {\n    const [level, cost] = getConstUpgradeMetadata(i)\n    document.getElementById(\"constUpgradeDescription\").textContent = returnConstUpgDesc(i)\n    document.getElementById(\"constUpgradeLevel2\").textContent = format(player.constantUpgrades[i])\n    document.getElementById(\"constUpgradeCost2\").textContent = format(cost) + \" [+\" + format(level) + \" LVL]\"\n    document.getElementById(\"constUpgradeEffect2\").textContent = returnConstUpgEffect(i)\n}\n\nexport const buyConstantUpgrades = (i: number, fast = false) => {\n    const [level, cost] = getConstUpgradeMetadata(i)\n    if (player.ascendShards.gte(cost)) {\n        player.constantUpgrades[i] += level;\n        if (player.researches[175] === 0) {\n            player.ascendShards = player.ascendShards.sub(cost);\n        }\n        if (!fast) {\n            constantUpgradeDescriptions(i);\n        }\n    }\n    calculateAnts();\n    calculateRuneLevels();\n}", "import { player, format } from './Synergism';\nimport { calculateSummationNonLinear, calculateRuneLevels, calculateAnts } from './Calculate';\nimport { revealStuff } from './UpdateHTML';\nimport { Globals as G } from './Variables';\nimport { updateClassList } from './Utility';\n\nconst getResearchCost = (index: number, buyAmount = 1, linGrowth = 0): [number, number] => {\n    buyAmount = Math.min(G['researchMaxLevels'][index] - player.researches[index], buyAmount)\n    const metaData = calculateSummationNonLinear(player.researches[index], G['researchBaseCosts'][index], player.researchPoints, linGrowth, buyAmount)\n    return [metaData[0], metaData[1]]\n}\n\nexport const updateAutoResearch = (index: number, auto: boolean) => {\n    /* If Cube Upgrade 9 (1x9) is purchased, then automation behaves differently.\n     You cannot manually put in your research index of interest; instead it does it for you.\n     If not purchased, then clicking on a research icon while auto toggled will update research for you.*/\n    if (player.cubeUpgrades[9] > 0 && auto) {\n\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n\n        // Checks if this is maxed. If so we proceed to the next research.\n        if (isResearchMaxed(player.autoResearch)) {\n            document.getElementById(`res${player.autoResearch || 1}`).classList.remove(\"researchRoomba\");\n            player.roombaResearchIndex += 1;\n        }\n\n        // Checks against researches invalid or not unlocked.\n        while (!isResearchUnlocked(player.autoResearch) && player.autoResearch < 200 && player.autoResearch >= 1) {\n            player.roombaResearchIndex += 1;\n            player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n        }\n\n        // Researches that are unlocked work\n        if (isResearchUnlocked(player.autoResearch)) {\n            const doc = document.getElementById(\"res\" + G['researchOrderByCost'][player.roombaResearchIndex]);\n            if (doc && player.researches[player.autoResearch] < G['researchMaxLevels'][player.autoResearch])\n                doc.classList.add(\"researchRoomba\");\n        }\n\n        return\n    }\n    else if (!auto && player.cubeUpgrades[9] < 1){\n        /* We remove the old research HTML from the 'roomba' class and make the new index our 'roomba'\n           class. We then update the index and consequently the coloring of the background based\n           on what level (if any) the research has. This functionality is useless after\n           Cube Upgrade 9 (1x9) has been purchased. */\n        document.getElementById(`res${player.autoResearch || 1}`).classList.remove(\"researchRoomba\");\n        document.getElementById(`res${index}`).classList.add(\"researchRoomba\");\n        player.autoResearch = index;\n        \n        // Research is maxed\n        if (player.researches[index] >= G['researchMaxLevels'][index])\n            updateClassList(`res${player.autoResearch}`, [\"researchMaxed\"], [\"researchPurchased\", \"researchUnpurchased\"]);\n        // Research purchased above level 0 but not maxed\n        else if (player.researches[index] >= 1)\n            updateClassList(`res${player.autoResearch}`, [\"researchPurchased\"], [\"researchUnpurchased\", \"researchMaxed\"]);\n        // Research has not been purchased yet\n        else\n            updateClassList(`res${player.autoResearch}`, [\"researchUnpurchased\"], [\"researchPurchased\", \"researchMaxed\"]);\n        \n        return\n    }\n    else\n        return //There might be code needed here. I don't quite know yet. -Platonic\n}\n\n/**\n * Attempts to buy the research of the index selected. This is hopefully an improvement over buyResearch. Fuck\n * @param index \n * @param auto \n * @param linGrowth \n * @returns \n */\nexport const buyResearch = (index: number, auto = false, linGrowth = 0): boolean => {\n\n    // Get our costs, and determine if anything is purchasable.\n    const buyAmount = (G['maxbuyresearch'] || auto) ? 1e5: 1;\n    const [buyTo, cost] = getResearchCost(index, buyAmount, linGrowth); /* Destructuring FTW! */\n    const canBuy = (player.researchPoints >= cost);\n\n    if (canBuy && isResearchUnlocked(index) && !isResearchMaxed(index)) {\n        player.researches[index] = buyTo;\n        player.researchPoints -= cost;\n        // Quick check after upgrading for max. This is to update any automation regardless of auto state\n        if (isResearchMaxed(index)) \n            document.getElementById(`res${player.autoResearch || 1}`).classList.remove(\"researchRoomba\");\n\n        // Update the progress description\n        G['researchfiller2'] = 'Level: ' + player.researches[index] + \"/\" + (G['researchMaxLevels'][index]);\n        researchDescriptions(index, auto, linGrowth)\n\n        // Handle special cases: Researches 47-50 (2x21-2x25)\n        // I love the ||= operator -Platonic\n        player.unlocks.rrow1 ||= true;\n        player.unlocks.rrow2 ||= true;\n        player.unlocks.rrow3 ||= true;\n        player.unlocks.rrow4 ||= true;\n        if (index >= 47 && index <= 50)\n            revealStuff();\n        \n        // Update ants and runes.\n        calculateRuneLevels();\n        calculateAnts();\n    }\n\n    // Update HTML for auto stuff if auto research is ever toggled.\n    if (player.autoResearchToggle)\n        updateAutoResearch(index, auto);\n\n    // Note to anyone reading this code: I forget why this needs to return a Boolean.\n    // -Platonic\n    return canBuy\n}\n\n/**\n * Calculates the max research index for the research roomba\n */\nexport const maxRoombaResearchIndex = (p = player) => {\n    const base = p.ascensionCount > 0 ? 140 : 125; // 125 researches pre-A + 15 from A\n    const c11 = p.challengecompletions[11] > 0 ? 15 : 0;\n    const c12 = p.challengecompletions[12] > 0 ? 15 : 0;\n    const c13 = p.challengecompletions[13] > 0 ? 15 : 0;\n    const c14 = p.challengecompletions[14] > 0 ? 15 : 0;\n    return base + c11 + c12 + c13 + c14;\n}\n\nexport const isResearchUnlocked = (index: number) => {\n    // https://stackoverflow.com/questions/20477177/creating-an-array-of-cumulative-sum-in-javascript\n    const cumuSum = (sum => (value: number) => sum += value)(0);\n    const indices = [3 * 25, 5, 20, 10, 15, 15, 15, 15, 15, 15].map(cumuSum);\n    const chievos = [50, 124, 127, 134, 141, 183, 197, 204, 211, 218];\n    for (let i = 0; i < indices.length; i++) {\n        if (i === 3 && (index === 121 || index === 124 || index === 150)) {\n            return player.achievements[chievos[i]] > 0;\n        }\n        if (index <= indices[i]) {\n            return player.achievements[chievos[i]] > 0;\n        }\n    }\n    return false;\n}\n\nconst isResearchMaxed = (index: number) => G['researchMaxLevels'][index] <= player.researches[index];\n\nconst resdesc = [\n    \"[1x1] Increase the number of free Accelerators gained by 20% from all sources.\",\n    \"[1x2] Increase the number of free Multipliers gained by 20% from all sources.\",\n    \"[1x3] Increase the number of free Accelerator Boosts gained by 20% from all sources.\",\n    \"[1x4] Increase most rune effects by 10%. (Excludes any recycle chance bonus)\",\n    \"[1x5] Multiply the production of all crystal producers by 1e4.\",\n    \"[1x6] Gain +5% free accelerators per level.\",\n    \"[1x7] Gain +4% free accelerators per level.\",\n    \"[1x8] Gain +3% free accelerators per level.\",\n    \"[1x9] Gain +2% free accelerators per level.\",\n    \"[1x10] Gain +2% free accelerators per level.\",\n    \"[1x11] Gain +5% free multipliers per level.\",\n    \"[1x12] Gain +4% free multipliers per level.\",\n    \"[1x13] Gain +2.5% free multipliers per level.\",\n    \"[1x14] Gain +1.5% free multipliers per level.\",\n    \"[1x15] Gain +0.5% free multipliers per level.\",\n    \"[1x16] Gain +5% free accelerator boosts per level.\",\n    \"[1x17] Gain +5% free accelerator boosts per level.\",\n    \"[1x18] Gain +2 free accelerator per accelerator boost.\",\n    \"[1x19] Gain +2 free accelerator per accelerator boost.\",\n    \"[1x20] Gain +3 free accelerator per accelerator boost!\",\n    \"[1x21] Most rune effects are increased by 1% per level. (Excludes any recycle chance bonus)\",\n    \"[1x22] Each Offering used increases Rune EXP by 0.6 per level.\",\n    \"[1x23] Each Offering used increases Rune EXP by another 0.3 per level!\",\n    \"[1x24] Prestige and Transcensions base Offering is increased by 0.2 per level.\",\n    \"[1x25] Reincarnations base Offering is increased by 0.6 per level.\",\n    \"[2x1] Multiply all crystal producer production by 150% per level (multiplicative).\",\n    \"[2x2] Multiply all crystal producer production by 150% per level (multiplicative).\",\n    \"[2x3] Coin Exponent is increased by 0.08 per level.\",\n    \"[2x4] Coin Exponent is increased by another 0.08 per level.\",\n    \"[2x5] Coin Exponent is increased by ANOTHER 0.04 per level.\",\n    \"[2x6] Want to bake cookies instead? You can go offline for 4 additional hours per level (base 72hr).\",\n    \"[2x7] Want to bake a lot of cookies instead? Extend the offline maximum timer by another 4 hours per level!\",\n    \"[2x8] Gain +11% more multiplier boosts from Mythos Shards per level.\",\n    \"[2x9] Gain another +11% more multiplier boosts from Mythos Shards per level.\",\n    \"[2x10] Gain ANOTHER +11% more multiplier boosts from Mythos Shards per level.\",\n    \"[2x11] Building power scales 5% faster per level.\",\n    \"[2x12] Building power scales 2.5% faster per level.\",\n    \"[2x13] Building power scales 2.5% faster per level.\",\n    \"[2x14] Building power affects crystal production at a reduced rate.\",\n    \"[2x15] Building power affects mythos shard production at a reduced rate.\",\n    \"[2x16] Start Reincarnations with automatic A.Boosts unlocked. Note: this research doesn't affect earning achievements.\",\n    \"[2x17] Start Reincarnations with automatic Generators unlocked.\",\n    \"[2x18] Start Reincarnations with automatic C.Upgrades unlocked.\",\n    \"[2x19] Start Reincarnations with automatic D.Upgrades unlocked.\",\n    \"[2x20] Start Reincarnations with automatic Diamond production unlocked.\",\n    \"[2x21] Unlock the ability to automatically Reincarnate!\",\n    \"[2x22] Unlock Reincarnation upgrades 1-5. [Upgrades cost between 1 and 1,000 Particles]\",\n    \"[2x23] Unlock Reincarnation upgrades 6-10. [Upgrades cost between 100,000 and 1e22 Particles]\",\n    \"[2x24] Unlock Reincarnation upgrades 11-15. [Upgrades cost between 1e30 and 1e60 Particles]\",\n    \"[2x25] Unlock Reincarnation upgrades 16-20. [You might want to wait until challenge 8 is doable!]\",\n    \"[3x1] Taxation scales 5.0% slower per level. [Up to -50%]\",\n    \"[3x2] Taxation scales 2.5% slower per level. [Up to -75%]\",\n    \"[3x3] Taxation scales 1.25% slower per level. [Up to -87.5%]\",\n    \"[3x4] Taxation scales 0.625% slower per level. [Up to -93.75%]\",\n    \"[3x5] Taxation scales 0.3125% slower per level. [Up to -96.875%]\",\n    \"[3x6] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x7] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x8] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x9] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x10] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x11] Gain +50% of your best obtainium per second AUTOMATICALLY!\",\n    \"[3x12] Gain an additional +10% of your best obtainium per second automatically.\",\n    \"[3x13] If your Reincarnation lasts at least 2 seconds you gain +1 obtainium per level.\",\n    \"[3x14] If your Reincarnation lasts at least 5 seconds you gain +2 obtainium per level.\",\n    \"[3x15] Increase the rate of gaining obtainium through reincarnations by 20% per level.\",\n    \"[3x16] Increase the maximum number of [No Multipliers] completions by 5 per level.\",\n    \"[3x17] Increase the maximum number of [No Accelerators] completions by 5 per level.\",\n    \"[3x18] Increase the maximum number of [No Shards] completions by 5 per level.\",\n    \"[3x19] Increase the maximum number of [Cost+] completions by 5 per level.\",\n    \"[3x20] Increase the maximum number of [Reduced Diamonds] completions by 5 per level.\",\n    \"[3x21] Automatically gain completions for Challenge 1 while running a Reincarnation challenge\",\n    \"[3x22] Automatically gain completions for Challenge 2 while running a Reincarnation challenge\",\n    \"[3x23] Automatically gain completions for Challenge 3 while running a Reincarnation challenge\",\n    \"[3x24] Automatically gain completions for Challenge 4 while running a Reincarnation challenge\",\n    \"[3x25] Automatically gain completions for Challenge 5 while running a Reincarnation challenge\",\n    \"[4x1] Welcome to the land of expensive researches. Here's +10% obtainium per level to help you out!\",\n    \"[4x2] Increase the level cap of Thrift rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x3] Increase the level cap of Speed rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x4] Increase the level cap of Prism rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x5] Increase the level cap of Duplication rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x6] You thought the previous researches are expensive? You're going to need this! [+10% Obtainium/level]\",\n    \"[4x7] Permanently UNLOCK the Rune of Superior Intellect! [+%Ob / +Ant Speed / +Base Offerings.]\",\n    \"[4x8] Taking forever to level up that SI Rune? Here's +5% SI Rune EXP per level.\",\n    \"[4x9] Does the new rune kinda suck? Power it up! +0.5% level effectiveness for SI rune per level!\",\n    \"[4x10] Gain +0.01% more offerings per level per challenge completion!\",\n    \"[4x11] Yeah, going back to basics. +5% Accelerators/Level.\",\n    \"[4x12] 0/5 Multipliers SUCK: +5% Multipliers/Level.\",\n    \"[4x13] -1/5 A.Boosts SUCK: +5% Accelerator Boosts/Level.\",\n    \"[4x14] -5/5 MULTIPLIERS STILL SUCK: +20% Multiplier Boosts/Level\",\n    \"[4x15] Runes don't suck at all, but why not make them even BETTER? +1% Rune Effectiveness/level!\",\n    \"[4x16] A simple +5% Rune EXP for all runes!\",\n    \"[4x17] Another simple +5% Rune EXP for all runes!\",\n    \"[4x18] +1 Accelerator Boost per 20 Summative Rune Levels, per level.\",\n    \"[4x19] +20 Multiplier per 8 Summative Rune Levels, per level.\",\n    \"[4x20] Gain +4 base Offerings from Reincarnations by purchasing this. Math Nerds will love this!\",\n    \"[4x21] Ants slow? Add +0.0002 to ant efficiency increase per ant purchased per level.\",\n    \"[4x22] Add +4 level to the first six upgradable ants per level!\",\n    \"[4x23] Add +4 level to the next five upgradable ants per level!\",\n    \"[4x24] Is the Quark Shop too hot to resist? Get +1 Quark per hour from Exporting for each level!\",\n    \"[4x25] Alright, Platonic is off his rocker. I don't expect you to get this but this will give +1 MORE Quark per hour from Exporting for each level!\",\n    \"[5x1] Alright, you're past the big wall. How about adding +.001 to Inceptus Ant efficiency per level?\",\n    \"[5x2] Gain +1 bonus level to ALL ants per level! A rainbow attack!\",\n    \"[5x3] Pray to Ant God for +5% sacrifice rewards per level!\",\n    \"[5x4] You're beginning to feel like an ant god (ant god): +5% sacrifice reward per level!\",\n    \"[5x5] Buy this and be able to run the first five challenges 9,001 times! (Note that requirements scale a LOT faster after 75, and again after 1,000)\",\n    \"[5x6] Engrave your talismans with obtainium to get +0.03 Rune Levels per talisman level per level.\",\n    \"[5x7] Refine your talismans with the powder of Obtainium to get +0.03 Rune Levels per talisman level per level again.\",\n    \"[5x8] A simple trick makes your base ant ELO increase by 25 per level!\",\n    \"[5x9] A more convoluted trick makes your base ant ELO increase by 25 per level again!\",\n    \"[5x10] Gain +1% more ELO from ant sources per level because why not?\",\n    \"[5x11] Gotta go fast [+10 max Speed Rune Level per level, +1% EXP to that rune]\",\n    \"[5x12] Double Trouble [+10 max Duplication Rune level per level, +1% EXP to that rune]\",\n    \"[5x13] Newton's Delight [+10 max Prism Rune Level per level, +1% EXP to that rune]\",\n    \"[5x14] Five-Finger discounts [+10 max Thrift Rune Level per level, +1% EXP to that rune]\",\n    \"[5x15] Scientific Breakthrough [+10 max SI Rune Level per level +1% EXP to that rune]\",\n    \"[5x16] Talismans have +0.015 Rune levels per talisman level per level. Levelception!\",\n    \"[5x17] Talismans have another +0.015 Rune levels per talisman level per level!\",\n    \"[5x18] For 'neutral' talisman effects, increase by +0.06 per level!\",\n    \"[5x19] Gain +0.25% Wow! Cubes per level upon Ascension.\",\n    \"[5x20] Gain another +0.25% Wow! Cubes per level upon Ascension.\",\n    \"[5x21] Bend time to your will, making all ticks 2% faster each level.\",\n    \"[5x22] Adds +2% ant sacrifice reward per level.\",\n    \"[5x23] Adds +40 base ant ELO per level.\",\n    \"[5x24] Unlock the automator for Ant Sacrifice! [Good luck buying this.]\",\n    \"[5x25] Good luck, buddy. [+1 Export Quark/hour per level]\",\n    \"[6x1] 6 rows? That can't be... You've angered ant god (+1% Accelerators / level)\",\n    \"[6x2] Ant God gets angrier (+1% Accelerator Boosts / level)\",\n    \"[6x3] Ant God cannot believe your bravery (+1% Multipliers / level)\",\n    \"[6x4] Add +1 extra level to Crystal upgrade caps multiplied by Level * Log4(Common Fragments + 1)\",\n    \"[6x5] Unlock automation for Fortifying talismans! Activates every 2 real life seconds.\",\n    \"[6x6] Turn some Ant Disciples against Ant God, giving +0.5% Rune Effectiveness per level.\",\n    \"[6x7] Recruit a couple other ants towards your side as well, giving +2 free ant levels per level.\",\n    \"[6x8] Using some coalesced Obtainium, you can make Ant Sacrifice 3% better per level.\",\n    \"[6x9 lol] The funny number. Gain a +6.9% bonus to blessing level.\",\n    \"[6x10] Unlock automation for Enhancing talismans! Activates every 2 real life seconds.\",\n    \"[6x11] It may be time to look back. Makes all ticks 1.5% faster each level.\",\n    \"[6x12] Paying off Wow! Industries, they'll sponsor +1% cubes per level towards your Ascension bank.\",\n    \"[6x13] When you open Wow! Cubes you will get +0.1% tributes per level!\",\n    \"[6x14] Make all Tesseract buildings produce 2% faster per level.\",\n    \"[6x15] The first of a Tetralogy, this tome reduces the base requirements of Challenge 10 by dividing it by 1e100M! A must-read!\",\n    \"[6x16] The Ant God has infiltrated your mind. Run away from your conscience! (+0.8% Accelerators / level)\",\n    \"[6x17] Run... RUN FASTER from your nightmares! (+0.8% Accelerator Boosts / level)\",\n    \"[6x18] Your resilience somehow gives you +0.8% Multipliers / level!\",\n    \"[6x19] Your obtainium gain is increased by 3 * Log4(Uncommon Fragments + 1) * level%! Why is this? I don't know.\",\n    \"[6x20] Your knowledge from the ant war will help you automatically gain Mortuus Est Ant levels.\",\n    \"[6x21] Feed your Disciples pure Obtainium to make your runes +0.4% more effective per level.\",\n    \"[6x22] Feed your ants their own crumbs to make them Log(Crumbs + 10)x faster!\",\n    \"[6x23] Increase your base Ant ELO by 2.5% per level!\",\n    \"[6x24] You will gain +0.03% more Offerings per level per level in the Midas Talisman!\",\n    \"[6x25] Auto Challenge. Enough said. (Lets you automatically run and complete challenges!)\",\n    \"[7x1] A new row, old upgrade. Makes all ticks 1.2% faster each level.\",\n    \"[7x2] Wow! Industries sponsors another +0.9% cubes per level towards your Ascension bank!\",\n    \"[7x3] Hey, I totally didn't steal this idea. You gain 12 tributes of Wow! Cube tier for every Tesseract opened.\",\n    \"[7x4] Make all Tesseract buildings produce 3% faster per level. Hey, isn't that more than the last research tier?\",\n    \"[7x5] Tome 2 of 4: How to win over the Ant universe. Another e100M Divider to Challenge 10 Base Requirement on purchase.\",\n    \"[7x6] What, again? Alright. +0.6% Accelerators / level.\",\n    \"[7x7] Gas, gas, gas. +0.6% Accelerator Boosts / level.\",\n    \"[7x8] Dupe DUPE DUPE. +0.6% Multipliers / level.\",\n    \"[7x9] Somehow, I can't explain why, you reduce your taxes by 2% multiplicative, based on 3/5 * log10(Rare Fragments)!\",\n    \"[7x10] Want a permanent blessing boost? I know you do. A permanent +25% effect to all blessings.\",\n    \"[7x11] SIGMA KAPPA: +0.3% Rune Effectiveness each level!\",\n    \"[7x12] More exponentiation! +0.0001% more inceptus power per level!\",\n    \"[7x13] Ant God's wanting blood: +2% Ant Sacrifice rewards / level\",\n    \"[7x14] Spirit power still sucks, so add +8% power per level!\",\n    \"[7x15] Gain 2x the Spirit buffs in ascension challenges!\",\n    \"[7x16] < T I M E >: +0.9% faster ticks / level \",\n    \"[7x17] Because of sponsorships, Wow! Industries is raising cubes gained in Ascension by 0.8% per level.\",\n    \"[7x18] Gain +0.08% tributes from cubes per level. You know, you should expect it at this point.\",\n    \"[7x19] +4% faster Tesseract Buildings / level. It's GROWING.\",\n    \"[7x20] Tome 3 of 4: How to totally ROCK challenge 10. e100m divisor!\",\n    \"[7x21] You should know how this goes. +0.4% Accelerator Boosts / level\",\n    \"[7x22] Accelerator Boosts += 0.004 * Accelerator Boosts\",\n    \"[7x23] A lot of a small +0.4% Multipliers per level\",\n    \"[7x24] Epic Fragments boost Blessing power by 10% * Log10(Epic Shards + 1)\",\n    \"[7x25] Automatically buy Constant Upgrades, if they are affordable! They also no longer subtract from your constant.\",\n    \"[8x1] Row 8 baby! +0.2% Rune Effectiveness / level.\",\n    \"[8x2] +Log10(Crumbs)% to ant production per level. Pretty cool buff ain't it?\",\n    \"[8x3] +666 Base ELO per level! Spooky number of the devil.\",\n    \"[8x4] +0.04% more offerings per level per midas level!\",\n    \"[8x5] +1 Export Quark per hour per level, yet again.\",\n    \"[8x6] +0.6% faster ticks / level because why not? You're already the speed of light.\",\n    \"[8x7] +0.7% cubes in ascension bank / level, from dividends in Wow! Stock.\",\n    \"[8x8] When you open a Hypercube, you also open 100 Tesseracts! (This works with 7x3, if you were curious.)\",\n    \"[8x9] +5% faster Tesseract Buildings / level. ASCENDED.\",\n    \"[8x10] Tome 4 of 4: You need to prepare for your ascent. e100m divisor!\",\n    \"[8x11] Something something +0.2% Accelerators pretty cool!\",\n    \"[8x12] Something somewhere, +0.2% Accelerator Boosts!\",\n    \"[8x13] You are DUPLICATED. +0.2% Multipliers/level\",\n    \"[8x14] Legendary Fragments increase Spirit power by +15% multiplied by Log10(Legendary Fragments + 1)\",\n    \"[8x15] Unlock Automations for all 5 of the Tesseract buildings.\",\n    \"[8x16] +0.1% Rune Effectiveness / level. Does this even do anything at this point?\",\n    \"[8x17] Each purchased level of Mortuus Est also increases Ascension Cube reward by +0.03%\",\n    \"[8x18] +1% Ant Sacrifice Reward per level. Singularity HYPE.\",\n    \"[8x19] Increases both Spirit AND Blessing power by 2% per level.\",\n    \"[8x20] Gain +1 export Quark per level, and increases the max timer to redeem quarks by 5 hours each!\",\n    \"[8x21] +0.3% faster ticks / level, because you just can't wait to become the singularity.\",\n    \"[8x22] +0.6% cubes in Ascension Bank / level. No one knows how. Bank error perhaps.\",\n    \"[8x23] +0.06% tributes from cubes / level!. Wow! Cubes really has a lot of manufacturing errors in your favor.\",\n    \"[8x24] +10% faster Tesseract Buildings / level. THE ARISEN. WITH THE PRAISE OF THE SINGULARITY.\",\n    \"[8x25] Gain the power of a thousand suns! +0.01% Accelerators, A. Boosts, Multipliers, Offerings, and +0.004% Cubes, +0.04 Max Rune level, +(level/400) max Talisman Level, +(level/200) free ants, 0.000666% Tax reduction per level.\"\n];\n\nexport const researchDescriptions = (i: number, auto = false, linGrowth = 0) => {\n    const buyAmount = (G['maxbuyresearch'] || auto) ? 100000 : 1;\n    const y = resdesc[i-1];\n    let z = \"\"\n    const p = \"res\" + i\n    const metaData = getResearchCost(i, buyAmount, linGrowth);\n    z = \" Cost: \" + (format(metaData[1], 0, false)) + \" Obtainium [+\" + format(metaData[0] - player.researches[i], 0, true) + \" Levels]\"\n    if (player.researches[i] === (G['researchMaxLevels'][i])) {\n        document.getElementById(\"researchcost\").style.color = \"Gold\"\n        document.getElementById(\"researchinfo3\").style.color = \"plum\"\n        updateClassList(p, [\"researchMaxed\"], [\"researchAvailable\", \"researchPurchased\", \"researchPurchasedAvailable\"])\n        z = z + \" || MAXED!\"\n    } else {\n        document.getElementById(\"researchcost\").style.color = \"limegreen\"\n        document.getElementById(\"researchinfo3\").style.color = \"white\"\n        if (player.researches[i] > 0) {\n            updateClassList(p, [\"researchPurchased\", \"researchPurchasedAvailable\"], [\"researchAvailable\", \"researchMaxed\", \"researchUnpurchased\"])\n        } else {\n            updateClassList(p, [\"researchAvailable\"], [\"researchPurchased\", \"researchMaxed\", \"researchUnpurchased\"])\n        }\n    }\n\n    if (player.researchPoints < G['researchBaseCosts'][i] && player.researches[i] < (G['researchMaxLevels'][i])) {\n        document.getElementById(\"researchcost\").style.color = \"crimson\"\n        updateClassList(p, [], [\"researchMaxed\", \"researchAvailable\", \"researchPurchasedAvailable\"])\n    }\n\n    document.getElementById(\"researchinfo2\").textContent = y\n    document.getElementById(\"researchcost\").textContent = z\n    document.getElementById(\"researchinfo3\").textContent = \"Level \" + player.researches[i] + \"/\" + (G['researchMaxLevels'][i])\n}\n\nexport const updateResearchBG = (j: number) => {\n\n    if (player.researches[j] > G['researchMaxLevels'][j]) {\n        player.researchPoints += (player.researches[j] - G['researchMaxLevels'][j]) * G['researchBaseCosts'][j]\n        player.researches[j] = G['researchMaxLevels'][j]\n    }\n\n    const k = `res${j}`\n    if (player.researches[j] > 0.5 && player.researches[j] < G['researchMaxLevels'][j]) {\n        updateClassList(k, [\"researchPurchased\"], [\"researchUnpurchased\", \"researchMaxed\"])\n    } else if (player.researches[j] > 0.5 && player.researches[j] >= G['researchMaxLevels'][j]) {\n        updateClassList(k, [\"researchMaxed\"], [\"researchUnpurchased\", \"researchPurchased\"])\n    } else {\n        updateClassList(k, [\"researchUnpurchased\"], [\"researchPurchased\", \"researchMaxed\"])\n    }\n}\n", "import { player } from './Synergism';\nimport { Globals as G } from './Variables';\n\ntype Bless = keyof typeof player['hypercubeBlessings'];\n\nexport const calculateHypercubeBlessings = () => {\n    // The visual updates are handled in visualUpdateCubes()\n\n    // we use Object.keys here instead of a for-in loop because we need the index of the key.\n    const keys = Object.keys(player.hypercubeBlessings);\n\n    for (const key of keys) {\n        const obj = player.hypercubeBlessings[key as Bless];\n        const idx = keys.indexOf(key) + 1;\n\n        let power = 1;\n        let mult = 1;\n        if (obj >= 1000) {\n            power = G['benedictionDRPower'][idx];\n            mult *= Math.pow(1000, (1 - G['benedictionDRPower'][idx]));\n        }\n\n        G['hypercubeBonusMultiplier'][idx] = 1 + mult * G['benedictionbase'][idx] * Math.pow(obj, power) * G['platonicBonusMultiplier'][4];\n    }\n}", "import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { toggleCorruptionLevel } from './Toggles';\nimport { getElementById } from './Utility';\n\nexport const corruptionDisplay = (index: number) => {\n    if (document.getElementById(\"corruptionDetails\").style.visibility !== \"visible\") {\n        document.getElementById(\"corruptionDetails\").style.visibility = \"visible\"\n    }\n    if (document.getElementById(\"corruptionSelectedPic\").style.visibility !== \"visible\") {\n        document.getElementById(\"corruptionSelectedPic\").style.visibility = \"visible\"\n    }\n    G['corruptionTrigger'] = index\n    const currentExponent = ((index === 1 || index === 2) && player.usedCorruptions[index] >= 10) ? 1 + 0.02 * player.platonicUpgrades[17] + 0.75 * Math.min(1, player.platonicUpgrades[17]) : 1;\n    const protoExponent = ((index === 1 || index === 2) && player.prototypeCorruptions[index] >= 10) ? 1 + 0.02 * player.platonicUpgrades[17] + 0.75 * Math.min(1, player.platonicUpgrades[17]) : 1;\n    const corruptionTexts: Record<'name' | 'description' | 'current' | 'planned' | 'multiplier' | 'spiritContribution' | 'image', string>[] = [\n        {\n            name: \"Corruption I: Divisiveness\",\n            description: \"Your multipliers get disintegrated! Is extra devious without also using Maladaption Corruption\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[1]) + \". Effect: Free Mult Exponent ^\" + format(G['divisivenessPower'][player.usedCorruptions[1]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[1]) + \". Effect: Free Multiplier Exponent ^\" + format(G['divisivenessPower'][player.prototypeCorruptions[1]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(Math.pow(G['corruptionPointMultipliers'][player.usedCorruptions[1]], currentExponent), 1) + \" / Next Ascension Score Multiplier: \" + format(Math.pow(G['corruptionPointMultipliers'][player.prototypeCorruptions[1]], protoExponent), 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[1],2),1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[1],2),1) + \"%\", \n            image: \"Pictures/Divisiveness Level 7.png\"\n        },\n        {\n            name: \"Corruption II: Maladaption\",\n            description: \"Insert Cool Text Here. Is extra devious without also using Divisiveness Corruption. Yin/Yang!\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[2]) + \". Effect: Free Accel. Exponent ^\" + format(G['maladaptivePower'][player.usedCorruptions[2]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[2]) + \". Effect: Free Accelerator Exponent ^\" + format(G['maladaptivePower'][player.prototypeCorruptions[2]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(Math.pow(G['corruptionPointMultipliers'][player.usedCorruptions[2]], currentExponent), 1) + \" / Next Ascension Score Multiplier: \" + format(Math.pow(G['corruptionPointMultipliers'][player.prototypeCorruptions[2]], protoExponent), 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[2],2),1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[2],2),1) + \"%\", \n            image: \"Pictures/Maladaption Lvl 7.png\"\n        },\n        {\n            name: \"Corruption III: Spacial Dilation\",\n            description: \"Way to go, Albert.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[3]) + \". Effect: Time Speed is divided by \" + format(1 / G['lazinessMultiplier'][player.usedCorruptions[3]], 5),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[3]) + \". Effect: Time is divided by \" + format(1 / G['lazinessMultiplier'][player.prototypeCorruptions[3]], 5),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[3]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[3]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[3],2),1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[3],2),1) + \"%\", \n            image: \"Pictures/Laziness Lvl 7.png\"\n        },\n        {\n            name: \"Corruption IV: Hyperchallenged\",\n            description: \"What's in a challenge?\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[4]) + \". Effect: Challenge Exponent Reqs.  x\" + format(G['hyperchallengedMultiplier'][player.usedCorruptions[4]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[4]) + \". Effect: Challenge Exponent Reqs.  x\" + format(G['hyperchallengedMultiplier'][player.prototypeCorruptions[4]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[4]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[4]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[4],2),1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[4],2),1) + \"%\", \n            image: \"Pictures/Hyperchallenged Lvl 7.png\"\n        },\n        {\n            name: \"Corruption V: Scientific Illiteracy\",\n            description: \"Maybe Albert wouldn't have theorized Dilation after all.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[5]) + \". Effect: Obtainium gain ^\" + format(G['illiteracyPower'][player.usedCorruptions[5]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[5]) + \". Effect: Obtainium gain ^\" + format(G['illiteracyPower'][player.prototypeCorruptions[5]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[5]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[5]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[5],2),1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[5],2),1) + \"%\", \n            image: \"Pictures/Scientific Illiteracy Lvl 7.png\"\n        },\n        {\n            name: \"Corruption VI: Market Deflation\",\n            description: \"Diamond Mine destroyed... no more monopolies!\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[6]) + \". Effect: Diamond gain ^1/\" + format(1 / G['deflationMultiplier'][player.usedCorruptions[6]], 2),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[6]) + \". Effect: Diamond gain ^1/\" + format(1 / G['deflationMultiplier'][player.prototypeCorruptions[6]], 2),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[6]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[6]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[6],2),1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[6],2),1) + \"%\", \n            image: \"Pictures/Deflation Lvl 7.png\"\n        },\n        {\n            name: \"Corruption VII: Extinction\",\n            description: \"It killed the dinosaurs too, ya dingus.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[7]) + \". Effect: Ant Production ^\" + format(G['extinctionMultiplier'][player.usedCorruptions[7]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[7]) + \". Effect: Ant Production ^\" + format(G['extinctionMultiplier'][player.prototypeCorruptions[7]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[7]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[7]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[7],2),1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[7],2),1) + \"%\", \n            image: \"Pictures/Extinction Lvl 7.png\"\n        },\n        {\n            name: \"Corruption VIII: Drought\",\n            description: \"More like California, am I right?\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[8]) + \". Effect: Offering EXP divided by \" + format(G['droughtMultiplier'][player.usedCorruptions[8]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[8]) + \". Effect: Offering EXP divided by \" + format(G['droughtMultiplier'][player.prototypeCorruptions[8]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[8]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[8]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[8],2),1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[8],2),1) + \"%\", \n            image: \"Pictures/Drought Lvl 7.png\"\n        },\n        {\n            name: \"Corruption IX: Financial Recession\",\n            description: \"2008.exe has stopped working.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[9]) + \". Effect: Coin Gain ^\" + format(G['financialcollapsePower'][player.usedCorruptions[9]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[9]) + \". Effect: Coin Gain ^\" + format(G['financialcollapsePower'][player.prototypeCorruptions[9]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[9]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[9]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[9],2),1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[9],2),1) + \"%\", \n            image: \"Pictures/Financial Collapse Lvl 7.png\"\n        },\n        {\n            name: \"CLEANSE THE CORRUPTION\",\n            description: \"Free this world of sin.\",\n            current: \"Reset all Corruptions to level 0 for your current ascension. Does not reset your current ascension.\",\n            planned: \"Push that big 'Reset Corruptions' button to confirm your decision.\",\n            multiplier: \"Note: if you need to do this, you may have bitten off more than you can chew.\",\n            spiritContribution: \"\",\n            image: \"Pictures/ExitCorruption.png\"\n        }\n    ];\n    const text = corruptionTexts[index-1];\n    document.getElementById(\"corruptionName\").textContent = text.name\n    document.getElementById(\"corruptionDescription\").textContent = text.description\n    document.getElementById(\"corruptionLevelCurrent\").textContent = text.current\n    document.getElementById(\"corruptionLevelPlanned\").textContent = text.planned\n    document.getElementById(\"corruptionMultiplierContribution\").textContent = text.multiplier\n    document.getElementById(\"corruptionSpiritContribution\").textContent = text.spiritContribution\n    document.getElementById(\"corruptionSelectedPic\").setAttribute(\"src\", text.image)\n\n    if (index < 10) {\n        document.getElementById(`corrCurrent${index}`).textContent = format(player.usedCorruptions[index])\n        document.getElementById(`corrNext${index}`).textContent = format(player.prototypeCorruptions[index])\n    }\n}\n\nexport const corruptionStatsUpdate = () => {\n    for (let i = 1; i <= 9; i++) {\n        // https://discord.com/channels/677271830838640680/706329553639047241/841749032841379901\n        const a = document.getElementById(`corrCurrent${i}`);\n        const b = document.getElementById(`corrNext${i}`)\n        if (a) a.textContent = format(player.usedCorruptions[i])\n        else console.log(`Send to Platonic: corrCurrent${i} is null`);\n        if (b) b.textContent = format(player.prototypeCorruptions[i])\n        else console.log(`Send to Platonic: corrNext${i} is null`);\n    }\n}\n\nexport const corruptionButtonsAdd = () => {\n    const rows = document.getElementsByClassName(\"corruptionStatRow\");\n    for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        const p = document.createElement(\"p\");\n        p.className = \"corrDesc\"\n        let text = document.createTextNode(\"Current: \")\n        p.appendChild(text)\n        let span = document.createElement(\"span\");\n        span.id = `corrCurrent${i + 1}`;\n        span.textContent = player.usedCorruptions[i + 1] + '';\n        p.appendChild(span);\n\n        text = document.createTextNode(\" / Next: \");\n        p.appendChild(text);\n\n        span = document.createElement(\"span\");\n        span.id = `corrNext${i + 1}`;\n        span.textContent = player.prototypeCorruptions[i + 1] + '';\n        p.appendChild(span);\n        row.appendChild(p);\n\n        let btn;\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionMax\";\n        btn.textContent = \"+13\";\n        btn.onclick = () => toggleCorruptionLevel(i + 1, 13);\n        row.appendChild(btn);\n\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionUp\";\n        btn.textContent = \"+1\";\n        btn.onclick = () => toggleCorruptionLevel(i + 1, 1);\n        row.appendChild(btn);\n\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionDown\";\n        btn.textContent = \"-1\";\n        btn.onclick = () => toggleCorruptionLevel(i + 1, -1);\n        row.appendChild(btn);\n\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionReset\";\n        btn.textContent = \"-13\";\n        btn.addEventListener('click', () => toggleCorruptionLevel(i + 1, -13));\n        row.appendChild(btn);\n        row.addEventListener('click', () => corruptionDisplay(i + 1));\n    }\n}\n\nexport const corruptionLoadoutTableCreate = () => {\n    const corrCount = 9\n    const table = getElementById<HTMLTableElement>(\"corruptionLoadoutTable\")\n    for (let i = 0; i < Object.keys(player.corruptionLoadouts).length + 1; i++) {\n        const row = table.insertRow()\n        for (let j = 0; j <= corrCount; j++) {\n            const cell = row.insertCell();\n            if (j === 0) {\n                cell.textContent = (i === 0) ? \"Next:\" : `Loadout ${i}:`;\n            } else if (j <= corrCount) {\n                cell.textContent = ((i === 0) ? player.prototypeCorruptions[j] : player.corruptionLoadouts[i][j]).toString();\n                cell.style.textAlign = \"center\"\n            }\n        }\n        if (i === 0) continue;\n        let cell = row.insertCell();\n        let btn = document.createElement(\"button\");\n        btn.className = \"corrSave\"\n        btn.textContent = \"Save\"\n        btn.onclick = () => corruptionLoadoutSaveLoad(true, i);\n        cell.appendChild(btn);\n\n        cell = row.insertCell();\n        btn = document.createElement(\"button\");\n        btn.className = \"corrLoad\"\n        btn.textContent = \"Load\"\n        btn.onclick = () => corruptionLoadoutSaveLoad(false, i);\n        cell.appendChild(btn);\n    }\n}\n\nexport const corruptionLoadoutTableUpdate = (updateRow = 0) => {\n    const row = getElementById<HTMLTableElement>(\"corruptionLoadoutTable\").rows[updateRow + 1].cells;\n    for (let i = 1; i < row.length; i++) {\n        if (i > 9) break;\n        row[i].textContent = ((updateRow === 0) ? player.prototypeCorruptions[i] : player.corruptionLoadouts[updateRow][i]).toString();\n    }\n}\n\nconst corruptionLoadoutSaveLoad = (save = true, loadout = 1) => {\n    if (save) {\n        player.corruptionLoadouts[loadout] = Array.from(player.prototypeCorruptions)\n        corruptionLoadoutTableUpdate(loadout)\n    } else {\n        player.prototypeCorruptions = Array.from(player.corruptionLoadouts[loadout])\n        corruptionLoadoutTableUpdate()\n        corruptionStatsUpdate();\n    }\n}\n\nexport const corruptionCleanseConfirm = () => {\n    const corrupt = document.getElementById('corruptionCleanseConfirm');\n    corrupt.style.visibility = 'visible';\n    setTimeout(() => corrupt.style.visibility = 'hidden', 10000);\n}\n", "import { player, clearInt, interval, format } from './Synergism';\nimport { calculateOfferings, CalcCorruptionStuff, calculateCubeBlessings, calculateRuneLevels, calculateAnts, calculateObtainium, calculateTalismanEffects, calculateAntSacrificeELO } from './Calculate';\nimport { resetofferings } from './Runes';\nimport { updateTalismanInventory, updateTalismanAppearance } from './Talismans';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport { revealStuff, updateChallengeDisplay } from './UpdateHTML';\nimport { upgradeupdate } from './Upgrades';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { getElementById } from './Utility';\nimport { ascensionAchievementCheck } from './Achievements';\nimport { buyResearch } from './Research';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport type {\n    ResetHistoryEntryPrestige,\n    ResetHistoryEntryTranscend,\n    ResetHistoryEntryReincarnate,\n    ResetHistoryEntryAscend,\n} from './History';\nimport { challengeRequirement } from './Challenges';\nimport { Synergism } from './Events';\nimport { resetNames } from './types/Synergism';\nimport { updateClassList } from './Utility';\nimport { corruptionStatsUpdate } from './Corruptions';\nimport { toggleAutoChallengeModeText } from './Toggles';\n\nlet repeatreset: ReturnType<typeof setTimeout>;\n\nexport const resetrepeat = (input: resetNames) => {\n    clearInt(repeatreset);\n    repeatreset = interval(() => resetdetails(input), 50)\n}\n\nexport const resetdetails = (input: resetNames) => {\n    document.getElementById('resetofferings1').style.display = \"block\"\n\n    const transcensionChallenge = player.currentChallenge.transcension;\n    const reincarnationChallenge = player.currentChallenge.reincarnation;\n\n    const offering = calculateOfferings(input);\n    const offeringImage = getElementById<HTMLImageElement>(\"resetofferings1\");\n    const offeringText = document.getElementById(\"resetofferings2\");\n    const currencyImage1 = getElementById<HTMLImageElement>(\"resetcurrency1\");\n    const resetObtainiumImage = document.getElementById(\"resetobtainium\");\n    const resetObtainiumText = document.getElementById(\"resetobtainium2\");\n    const resetInfo = document.getElementById('resetinfo');\n    const resetCurrencyGain = document.getElementById(\"resetcurrency2\");\n\n    (input == \"reincarnation\") ? \n        (resetObtainiumImage.style.display = \"block\", resetObtainiumText.textContent = format(Math.floor(G['obtainiumGain']))):\n        (resetObtainiumImage.style.display = \"none\", resetObtainiumText.textContent = \"\");\n\n    (input == \"ascensionChallenge\" || input == \"ascension\")?\n        offeringImage.style.display = offeringText.style.display = \"none\":\n        offeringImage.style.display = offeringText.style.display = \"block\";\n\n    switch(input){\n        case \"prestige\":\n            if (!currencyImage1.src.endsWith(\"Pictures/Diamond.png\")) {\n                currencyImage1.src = \"Pictures/Diamond.png\"\n            }\n            currencyImage1.style.display = \"block\"\n            resetCurrencyGain.textContent = \"+\" + format(G['prestigePointGain']);\n            resetInfo.textContent = \"Coins, Coin Producers, Coin Upgrades, and Crystals are reset, but in return you gain diamonds and a few offerings. Required: \" + format(player.coinsThisPrestige) + \"/1e16 Coins || TIME SPENT: \" + format(player.prestigecounter) + \" seconds.\";\n            resetInfo.style.color = \"turquoise\";\n            break;\n        case \"transcension\":\n            if (!currencyImage1.src.endsWith(\"Pictures/Mythos.png\")) {\n                currencyImage1.src = \"Pictures/Mythos.png\"\n            }\n            currencyImage1.style.display = \"block\"\n            resetCurrencyGain.textContent = \"+\" + format(G['transcendPointGain']);\n            resetInfo.textContent = \"Reset all Coin and Diamond Upgrades/Features, Crystal Upgrades & Producers, for Mythos/Offerings. Required: \" + format(player.coinsThisTranscension) + \"/1e100 Coins || TIME SPENT: \" + format(player.transcendcounter) + \" seconds.\";\n            resetInfo.style.color = \"orchid\";\n            break;\n        case \"reincarnation\":\n            if (!currencyImage1.src.endsWith(\"Pictures/Particle.png\")) {\n                currencyImage1.src = \"Pictures/Particle.png\"\n            }\n            currencyImage1.style.display = \"block\"\n            resetCurrencyGain.textContent = \"+\" + format(G['reincarnationPointGain']);\n            resetInfo.textContent = \"Reset ALL previous reset tiers, but gain Particles, Obtainium and Offerings! Required: \" + format(player.transcendShards) + \"/1e300 Mythos Shards || TIME SPENT: \" + format(player.reincarnationcounter) + \" seconds.\";\n            resetInfo.style.color = \"limegreen\";\n            break;\n        case \"acceleratorBoost\":\n            if (!currencyImage1.src.endsWith(\"Pictures/Diamond.png\")) {\n                currencyImage1.src = \"Pictures/Diamond.png\"\n            }\n            currencyImage1.style.display = \"block\"\n            resetCurrencyGain.textContent = \"-\" + format(player.acceleratorBoostCost);\n            resetInfo.textContent = \"Reset Coin Producers/Upgrades, Crystals and Diamonds in order to increase the power of your Accelerators. Required: \" + format(player.prestigePoints) + \"/\" + format(player.acceleratorBoostCost) + \" Diamonds.\";\n            resetInfo.style.color = \"cyan\";\n            break;\n        case \"transcensionChallenge\":\n            currencyImage1.style.display = \"none\"\n            resetCurrencyGain.textContent = \"\";\n\n            (transcensionChallenge !== 0)?\n            (resetInfo.style.color = \"aquamarine\", resetInfo.textContent = \"Are you tired of being in your challenge or stuck? Click to leave challenge \" + transcensionChallenge + \". Progress: \" + format(player.coinsThisTranscension) + \"/\" + format(challengeRequirement(transcensionChallenge, player.challengecompletions[transcensionChallenge])) + \" Coins. TIME SPENT: \" + format(player.transcendcounter) + \" seconds.\"):\n            (resetInfo.style.color = \"crimson\", resetInfo.textContent = \"You're not in a Transcension Challenge right now. Get in one before you can leave it, duh!\");\n            break;\n        case \"reincarnationChallenge\":\n            currencyImage1.style.display = \"none\"\n            resetCurrencyGain.textContent = \"\";\n\n            if (reincarnationChallenge !== 0) {\n                const goal = reincarnationChallenge >= 9 ? \"coins\" : \"transcendShards\";\n                const goaldesc = reincarnationChallenge >= 9 ? \" Coins\" : \" Mythos Shards\";\n\n                resetInfo.style.color = \"silver\";\n                resetInfo.textContent = \"Are you done or tired of being in your challenge? Click to leave challenge \" + reincarnationChallenge + \". Progress: \" + format(player[goal]) + \"/\" + format(challengeRequirement(reincarnationChallenge, player.challengecompletions[reincarnationChallenge], reincarnationChallenge)) + goaldesc + \". TIME SPENT: \" + format(player.reincarnationcounter) + \" Seconds.\";\n            } else {\n                resetInfo.style.color = \"crimson\";\n                resetInfo.textContent = \"You're not in a Reincarnation Challenge right now. How could you leave what you are not in?\";\n            }\n            break;\n        case \"ascensionChallenge\":\n            currencyImage1.style.display = \"none\"\n            resetCurrencyGain.textContent = \"\";\n            resetInfo.textContent = \"Click this if you're in an Ascension Challenge and want to leave. You get it already!\";\n            resetInfo.style.color = \"gold\";\n            break;\n        case \"ascension\":\n            currencyImage1.style.display = \"none\"\n            resetCurrencyGain.textContent = \"\";\n            resetInfo.textContent = \"Ascend. 10x1 is required! +\" + format(CalcCorruptionStuff()[4], 0, true) + \" Wow! Cubes for doing it! Time: \" + format(player.ascensionCounter, 0, false) + \" Seconds.\";\n            resetInfo.style.color = \"gold\";\n            break;\n    }\n    document.getElementById(\"resetofferings2\").textContent = \"+\" + format(offering)\n}\n\nexport const updateAutoReset = (i: number) => {\n    if (i === 1) {\n        const t = +getElementById<HTMLInputElement>(\"prestigeamount\").value;\n        if (t >= 0) {\n            player.prestigeamount = t;\n        } else {\n            player.prestigeamount = 0;\n        }\n    } else if (i === 2) {\n        const u = +getElementById<HTMLInputElement>(\"transcendamount\").value;\n        if (u >= 0) {\n            player.transcendamount = u;\n        } else {\n            player.transcendamount = 0;\n        }\n    } else if (i === 3) {\n        const v = +getElementById<HTMLInputElement>(\"reincarnationamount\").value\n        if (v >= 0) {\n            player.reincarnationamount = v;\n        } else {\n            player.reincarnationamount = 0;\n        }\n    } else if (i === 4) {\n        let v = parseFloat(getElementById<HTMLInputElement>(\"ascensionAmount\").value);\n        v = Math.floor(v)\n        if (v >= 1) {\n            player.autoAscendThreshold = v\n        } else {\n            player.autoAscendThreshold = 1;\n        }\n    } else if (i === 5) {\n        const v = parseFloat(getElementById<HTMLInputElement>(\"autoAntSacrificeAmount\").value);\n        player.autoAntSacTimer = Math.max(0, v);\n    }\n}\n\nexport const updateTesseractAutoBuyAmount = () => {\n    let v = parseFloat(getElementById<HTMLInputElement>(\"tesseractAmount\").value);\n    v = Math.floor(v)\n    if (v >= 0) {\n        player.tesseractAutoBuyerAmount = v\n    } else {\n        player.tesseractAutoBuyerAmount = 0;\n    }\n}\n\nconst resetAddHistoryEntry = (input: resetNames, from = 'unknown') => {\n    const offeringsGiven = calculateOfferings(input);\n    const isChallenge = [\"enterChallenge\", \"leaveChallenge\"].includes(from);\n\n    if (input === \"prestige\") {\n        const historyEntry: ResetHistoryEntryPrestige = {\n            seconds: player.prestigecounter,\n            date: Date.now(),\n            offerings: offeringsGiven,\n            kind: \"prestige\",\n            diamonds: G['prestigePointGain'].toString(),\n        }\n\n        Synergism.emit('historyAdd', 'reset', historyEntry);\n    } else if (input === \"transcension\" || input === \"transcensionChallenge\") {\n        // Heuristics: transcend entries are not added when entering or leaving a challenge,\n        // unless a meaningful gain in particles was made. This prevents spam when using the challenge automator.\n        const historyEntry: ResetHistoryEntryTranscend = {\n            seconds: player.transcendcounter,\n            date: Date.now(),\n            offerings: offeringsGiven,\n            kind: \"transcend\",\n            mythos: G['transcendPointGain'].toString(),\n        }\n\n        Synergism.emit('historyAdd', 'reset', historyEntry);\n    } else if (input === \"reincarnation\" || input === \"reincarnationChallenge\") {\n        // Heuristics: reincarnate entries are not added when entering or leaving a challenge,\n        // unless a meaningful gain in particles was made. This prevents spam when using the challenge automator.\n        if (!isChallenge || G['reincarnationPointGain'].gte(player.reincarnationPoints.div(10))) {\n            const historyEntry: ResetHistoryEntryReincarnate = {\n                seconds: player.reincarnationcounter,\n                date: Date.now(),\n                offerings: offeringsGiven,\n                kind: \"reincarnate\",\n                particles: G['reincarnationPointGain'].toString(),\n                obtainium: G['obtainiumGain'],\n            }\n\n            Synergism.emit('historyAdd', 'reset', historyEntry);\n        }\n    } else if (input === \"ascension\" || input === \"ascensionChallenge\") {\n        // Ascension entries will only be logged if C10 was completed.\n        if (player.challengecompletions[10] > 0) {\n            const corruptionMetaData = CalcCorruptionStuff();\n            const historyEntry: ResetHistoryEntryAscend = {\n                seconds: player.ascensionCounter,\n                date: Date.now(),\n                c10Completions: player.challengecompletions[10],\n                usedCorruptions: player.usedCorruptions.slice(0), // shallow copy,\n                corruptionScore: corruptionMetaData[3],\n                wowCubes: corruptionMetaData[4],\n                wowTesseracts: corruptionMetaData[5],\n                wowHypercubes: corruptionMetaData[6],\n                wowPlatonicCubes: corruptionMetaData[7],\n                wowHepteracts: corruptionMetaData[8],\n                kind: \"ascend\",\n            }\n\n            // If we are _leaving_ an ascension challenge, log that too.\n            if (from !== \"enterChallenge\" && player.currentChallenge.ascension !== 0) {\n                historyEntry.currentChallenge = player.currentChallenge.ascension;\n            }\n\n            Synergism.emit('historyAdd', 'ascend', historyEntry);\n        }\n    }\n};\n\nexport const reset = (input: resetNames, fast = false, from = 'unknown') => {\n    // Handle adding history entries before actually resetting data, to ensure optimal accuracy.\n    resetAddHistoryEntry(input, from);\n\n    resetofferings(input)\n    resetUpgrades(1);\n    player.coins = new Decimal(\"102\");\n    player.coinsThisPrestige = new Decimal(\"100\");\n    player.firstOwnedCoin = 0;\n    player.firstGeneratedCoin = new Decimal(\"0\");\n    player.firstCostCoin = new Decimal(\"100\");\n    player.secondOwnedCoin = 0;\n    player.secondGeneratedCoin = new Decimal(\"0\");\n    player.secondCostCoin = new Decimal(\"2e3\");\n    player.thirdOwnedCoin = 0;\n    player.thirdGeneratedCoin = new Decimal(\"0\");\n    player.thirdCostCoin = new Decimal(\"4e4\");\n    player.fourthOwnedCoin = 0;\n    player.fourthGeneratedCoin = new Decimal(\"0\");\n    player.fourthCostCoin = new Decimal(\"8e5\");\n    player.fifthOwnedCoin = 0;\n    player.fifthGeneratedCoin = new Decimal(\"0\");\n    player.fifthCostCoin = new Decimal(\"1.6e7\");\n    player.firstGeneratedDiamonds = new Decimal(\"0\");\n    player.secondGeneratedDiamonds = new Decimal(\"0\");\n    player.thirdGeneratedDiamonds = new Decimal(\"0\");\n    player.fourthGeneratedDiamonds = new Decimal(\"0\");\n    player.fifthGeneratedDiamonds = new Decimal(\"0\");\n    player.multiplierCost = new Decimal(\"1e5\");\n    player.multiplierBought = 0;\n    player.acceleratorCost = new Decimal(\"500\");\n    player.acceleratorBought = 0;\n\n    player.prestigeCount += 1;\n\n    player.prestigePoints = player.prestigePoints.add(G['prestigePointGain']);\n    player.prestigeShards = new Decimal(\"0\");\n    player.prestigenoaccelerator = true;\n    player.prestigenomultiplier = true;\n    player.prestigenocoinupgrades = true;\n\n    player.unlocks.prestige = true;\n\n    if (player.prestigecounter < player.fastestprestige) {\n        player.fastestprestige = player.prestigecounter;\n    }\n\n    G['prestigePointGain'] = new Decimal('0');\n\n    player.prestigecounter = 0;\n    G['autoResetTimers'].prestige = 0;\n\n    const types = ['transcension', 'transcensionChallenge', 'reincarnation', 'reincarnationChallenge', 'ascension', 'ascensionChallenge'];\n    if (types.includes(input)) {\n        resetUpgrades(2);\n        player.coinsThisTranscension = new Decimal(\"100\");\n        player.firstOwnedDiamonds = 0;\n        player.firstCostDiamonds = new Decimal(\"100\");\n        player.secondOwnedDiamonds = 0;\n        player.secondCostDiamonds = new Decimal(\"1e5\");\n        player.thirdOwnedDiamonds = 0;\n        player.thirdCostDiamonds = new Decimal(\"1e15\");\n        player.fourthOwnedDiamonds = 0;\n        player.fourthCostDiamonds = new Decimal(\"1e40\");\n        player.fifthOwnedDiamonds = 0;\n        player.fifthCostDiamonds = new Decimal(\"1e100\");\n        player.firstGeneratedMythos = new Decimal(\"0\");\n        player.secondGeneratedMythos = new Decimal(\"0\");\n        player.thirdGeneratedMythos = new Decimal(\"0\");\n        player.fourthGeneratedMythos = new Decimal(\"0\");\n        player.fifthGeneratedMythos = new Decimal(\"0\");\n        player.acceleratorBoostBought = 0;\n        player.acceleratorBoostCost = new Decimal(\"1e3\");\n\n        player.transcendCount += 1;\n\n        player.prestigePoints = new Decimal(\"0\");\n        player.transcendPoints = player.transcendPoints.add(G['transcendPointGain']);\n        player.transcendShards = new Decimal(\"0\");\n        player.transcendnocoinupgrades = true;\n        player.transcendnocoinorprestigeupgrades = true;\n        player.transcendnoaccelerator = true;\n        player.transcendnomultiplier = true;\n\n        G['transcendPointGain'] = new Decimal('0')\n\n        if (player.achievements[78] > 0.5) {\n            player.firstOwnedDiamonds += 1\n        }\n        if (player.achievements[85] > 0.5) {\n            player.secondOwnedDiamonds += 1\n        }\n        if (player.achievements[92] > 0.5) {\n            player.thirdOwnedDiamonds += 1\n        }\n        if (player.achievements[99] > 0.5) {\n            player.fourthOwnedDiamonds += 1\n        }\n        if (player.achievements[106] > 0.5) {\n            player.fifthOwnedDiamonds += 1\n        }\n\n        if (player.achievements[4] > 0.5) {\n            player.upgrades[81] = 1\n        }\n        if (player.achievements[11] > 0.5) {\n            player.upgrades[82] = 1\n        }\n        if (player.achievements[18] > 0.5) {\n            player.upgrades[83] = 1\n        }\n        if (player.achievements[25] > 0.5) {\n            player.upgrades[84] = 1\n        }\n        if (player.achievements[32] > 0.5) {\n            player.upgrades[85] = 1\n        }\n        if (player.achievements[80] > 0.5) {\n            player.upgrades[87] = 1\n        }\n\n        if (player.transcendcounter < player.fastesttranscend && player.currentChallenge.transcension === 0) {\n            player.fastesttranscend = player.transcendcounter;\n        }\n\n        player.transcendcounter = 0;\n        G['autoResetTimers'].transcension = 0;\n    }\n\n\n    if (input === 'reincarnation' || input === 'reincarnationChallenge' || input === 'ascension' || input === 'ascensionChallenge') {\n        // Fail safe if for some reason ascension achievement isn't awarded. hacky solution but am too tired to fix right now\n        if (player.ascensionCount > 0 && player.achievements[183] < 1) {\n            ascensionAchievementCheck(1);\n        }\n\n        player.researchPoints += Math.floor(G['obtainiumGain']);\n\n        const opscheck = G['obtainiumGain'] / (1 + player.reincarnationcounter)\n        if (opscheck > player.obtainiumpersecond) {\n            player.obtainiumpersecond = opscheck\n        }\n        player.currentChallenge.transcension = 0;\n        resetUpgrades(3);\n        player.coinsThisReincarnation = new Decimal(\"100\");\n        player.firstOwnedMythos = 0;\n        player.firstCostMythos = new Decimal(\"1\");\n        player.secondOwnedMythos = 0;\n        player.secondCostMythos = new Decimal(\"1e2\");\n        player.thirdOwnedMythos = 0;\n        player.thirdCostMythos = new Decimal(\"1e4\");\n        player.fourthOwnedMythos = 0;\n        player.fourthCostMythos = new Decimal(\"1e8\");\n        player.fifthOwnedMythos = 0;\n        player.fifthCostMythos = new Decimal(\"1e16\");\n        player.firstGeneratedParticles = new Decimal(\"0\");\n        player.secondGeneratedParticles = new Decimal(\"0\");\n        player.thirdGeneratedParticles = new Decimal(\"0\");\n        player.fourthGeneratedParticles = new Decimal(\"0\");\n        player.fifthGeneratedParticles = new Decimal(\"0\");\n\n        player.reincarnationCount += 1;\n\n        player.transcendPoints = new Decimal(\"0\");\n        player.reincarnationPoints = player.reincarnationPoints.add(G['reincarnationPointGain']);\n        if (player.usedCorruptions[6] > 10 && player.platonicUpgrades[11] > 0) {\n            player.prestigePoints = player.prestigePoints.add(G['reincarnationPointGain'])\n        }\n        player.reincarnationShards = new Decimal(\"0\");\n        player.challengecompletions[1] = 0;\n        player.challengecompletions[2] = 0;\n        player.challengecompletions[3] = 0;\n        player.challengecompletions[4] = 0;\n        player.challengecompletions[5] = 0;\n\n        G['reincarnationPointGain'] = new Decimal('0');\n\n        if (player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.reincarnation === 0) {\n            player.challengecompletions[1] = player.highestchallengecompletions[1]\n            player.challengecompletions[2] = player.highestchallengecompletions[2]\n            player.challengecompletions[3] = player.highestchallengecompletions[3]\n            player.challengecompletions[4] = player.highestchallengecompletions[4]\n            player.challengecompletions[5] = player.highestchallengecompletions[5]\n\n        }\n\n        player.reincarnatenocoinupgrades = true;\n        player.reincarnatenocoinorprestigeupgrades = true;\n        player.reincarnatenocoinprestigeortranscendupgrades = true;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = true;\n        player.reincarnatenoaccelerator = true;\n        player.reincarnatenomultiplier = true;\n\n        if (player.reincarnationcounter < player.fastestreincarnate && player.currentChallenge.reincarnation === 0) {\n            player.fastestreincarnate = player.reincarnationcounter;\n        }\n\n        calculateCubeBlessings();\n        player.reincarnationcounter = 0;\n        G['autoResetTimers'].reincarnation = 0;\n\n        if (player.autoResearchToggle && player.autoResearch > 0.5) {\n            const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n            buyResearch(player.autoResearch, true, linGrowth)\n        }\n\n        calculateRuneLevels();\n        calculateAnts();\n    }\n\n    if (input === 'ascension' || input === 'ascensionChallenge') {\n        const metaData = CalcCorruptionStuff()\n        ascensionAchievementCheck(3, metaData[3])\n        // reset auto challenges\n        player.currentChallenge.transcension = 0;\n        player.currentChallenge.reincarnation = 0;\n        player.autoChallengeIndex = 1;\n        toggleAutoChallengeModeText(\"START\");\n        G['autoChallengeTimerIncrement'] = 0;\n        //reset rest\n        resetResearches();\n        resetAnts();\n        resetTalismans();\n        player.reincarnationPoints = new Decimal(\"0\");\n        player.reincarnationShards = new Decimal(\"0\");\n        player.obtainiumpersecond = 0;\n        player.maxobtainiumpersecond = 0;\n        player.offeringpersecond = 0;\n        player.antSacrificePoints = 0;\n        player.antSacrificeTimer = 0;\n        player.antSacrificeTimerReal = 0;\n        player.antUpgrades[12-1] = 0;\n        for (let j = 61; j <= 80; j++) {\n            player.upgrades[j] = 0;\n        }\n        for (let j = 94; j <= 100; j++) {\n            player.upgrades[j] = 0;\n        }\n        player.firstOwnedParticles = 0;\n        player.secondOwnedParticles = 0;\n        player.thirdOwnedParticles = 0;\n        player.fourthOwnedParticles = 0;\n        player.fifthOwnedParticles = 0;\n        player.firstCostParticles = new Decimal(\"1\");\n        player.secondCostParticles = new Decimal(\"100\");\n        player.thirdCostParticles = new Decimal(\"1e4\");\n        player.fourthCostParticles = new Decimal(\"1e8\");\n        player.fifthCostParticles = new Decimal(\"1e16\");\n        player.runeexp = [0, 0, 0, 0, 0, player.runeexp[5], player.runeexp[6]];\n        player.runelevels = [0, 0, 0, 0, 0, player.runelevels[5], player.runelevels[6]];\n        player.runeshards = 0;\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\n\n        player.runelevels[0] = 3 * player.cubeUpgrades[26];\n        player.runelevels[1] = 3 * player.cubeUpgrades[26];\n        player.runelevels[2] = 3 * player.cubeUpgrades[26];\n        player.runelevels[3] = 3 * player.cubeUpgrades[26];\n        player.runelevels[4] = 3 * player.cubeUpgrades[26];\n\n        if (player.cubeUpgrades[27] === 1) {\n            player.firstOwnedParticles = 1;\n            player.secondOwnedParticles = 1;\n            player.thirdOwnedParticles = 1;\n            player.fourthOwnedParticles = 1;\n            player.fifthOwnedParticles = 1;\n        }\n\n        if (player.cubeUpgrades[48] > 0) {\n            player.firstOwnedAnts += 1\n        }\n        if (player.challengecompletions[10] > 0) {\n            let ascCount = 1\n            if (player.ascensionCounter >= 10) {\n                if (player.achievements[188] > 0) {\n                    ascCount += 99\n                }\n                ascCount *= 1 + (player.ascensionCounter / 10 - 1 ) * 0.2 * (player.achievements[189] + player.achievements[202] + player.achievements[209] + player.achievements[216] + player.achievements[223])\n            }\n            if (player.achievements[187] > 0 && metaData[3] > 1e8) {\n                ascCount *= (Math.log(metaData[3]) / Math.log(10) - 1)\n            }\n            ascCount *= G['challenge15Rewards'].ascensions\n            if (player.achievements[260] > 0)\n                ascCount *= 1.10\n            if (player.achievements[261] > 0)\n                ascCount *= 1.10\n            if (player.platonicUpgrades[15] > 0)\n                ascCount *= 2\n            ascCount *= (1 + 0.02 * player.platonicUpgrades[16])\n            ascCount *= (1 + 0.02 * player.platonicUpgrades[16] * Math.min(1, player.overfluxPowder / 100000))\n            ascCount = Math.floor(ascCount)\n            player.ascensionCount += ascCount;\n            player.wowCubes.add(metaData[4]); //Metadata is defined up in the top of the (i > 3.5) case\n            player.wowTesseracts.add(metaData[5]);\n            player.wowHypercubes.add(metaData[6]);\n            player.wowPlatonicCubes.add(metaData[7]);\n            player.wowAbyssals += metaData[8];\n        }\n\n        for (let j = 1; j <= 10; j++) {\n            player.challengecompletions[j] = 0;\n            player.highestchallengecompletions[j] = 0;\n        }\n\n        player.challengecompletions[6] = player.highestchallengecompletions[6] = player.cubeUpgrades[49]\n        player.challengecompletions[7] = player.highestchallengecompletions[7] = player.cubeUpgrades[49]\n        player.challengecompletions[8] = player.highestchallengecompletions[8] = player.cubeUpgrades[49]\n\n        document.getElementById(`res${player.autoResearch || 1}`).classList.remove(\"researchRoomba\");\n        player.roombaResearchIndex = 0;\n        player.autoResearch = 1;\n\n        for (let j = 1; j <= (200); j++) {\n            const k = `res${j}`;\n            if (player.researches[j] > 0.5 && player.researches[j] < G['researchMaxLevels'][j]) {\n                updateClassList(k, [\"researchPurchased\"], [\"researchAvailable\", \"researchMaxed\", \"researchPurchasedAvailable\", \"researchUnpurchased\"])\n            } else if (player.researches[j] > 0.5 && player.researches[j] >= G['researchMaxLevels'][j]) {\n                updateClassList(k, [\"researchMaxed\"], [\"researchAvailable\", \"researchPurchased\", \"researchPurchasedAvailable\", \"researchUnpurchased\"])\n            } else {\n                updateClassList(k, [\"researchUnpurchased\"], [\"researchAvailable\", \"researchPurchased\", \"researchPurchasedAvailable\", \"researchMaxed\"])\n            }\n        }\n\n        calculateAnts();\n        calculateRuneLevels();\n        calculateAntSacrificeELO();\n        calculateTalismanEffects();\n        calculateObtainium();\n        ascensionAchievementCheck(1);\n        \n        player.ascensionCounter = 0;\n\n        updateTalismanInventory();\n        updateTalismanAppearance(1);\n        updateTalismanAppearance(2);\n        updateTalismanAppearance(3);\n        updateTalismanAppearance(4);\n        updateTalismanAppearance(5);\n        updateTalismanAppearance(6);\n        updateTalismanAppearance(7);\n        calculateCubeBlessings();\n        calculateTesseractBlessings();\n        calculateHypercubeBlessings();\n\n        if (player.cubeUpgrades[4] === 1) {\n            player.upgrades[94] = 1;\n            player.upgrades[95] = 1;\n            player.upgrades[96] = 1;\n            player.upgrades[97] = 1;\n            player.upgrades[98] = 1;\n        }\n        if (player.cubeUpgrades[5] === 1) {\n            player.upgrades[99] = 1;\n        }\n        if (player.cubeUpgrades[6] === 1) {\n            player.upgrades[100] = 1\n        }\n\n        for (let j = 61; j <= 80; j++) {\n            document.getElementById(\"upg\" + j).style.backgroundColor = \"black\"\n        }\n        for (let j = 94; j <= 100; j++) {\n            if (player.upgrades[j] === 0) {\n                document.getElementById(\"upg\" + j).style.backgroundColor = \"black\"\n            }\n        }\n        player.usedCorruptions = Array.from(player.prototypeCorruptions)\n        corruptionStatsUpdate();\n    }\n\n    //Always unlocks\n    player.unlocks.prestige = true\n    \n    if (input == \"transcension\" || input == \"transcensionChallenge\") {\n        player.unlocks.transcend = true\n    }\n    if (input == \"reincarnation\" || input == \"reincarnationChallenge\") {\n        player.unlocks.reincarnate = true\n    }\n    if (!fast) {\n        revealStuff();\n        updateChallengeDisplay();\n    }\n}\n\nconst resetUpgrades = (i: number) => {\n    if (i > 2.5) {\n        for (let i = 41; i < 61; i++) {\n            if (i !== 46) {\n                player.upgrades[i] = 0;\n            }\n        }\n\n        if (player.researches[41] === 0) {\n            player.upgrades[46] = 0;\n        }\n\n        if (player.researches[41] < 0.5) {\n            player.upgrades[88] = 0;\n        }\n        if (player.achievements[50] === 0) {\n            player.upgrades[89] = 0;\n        }\n        if (player.researches[42] < 0.5) {\n            player.upgrades[90] = 0;\n        }\n        if (player.researches[43] < 0.5) {\n            player.upgrades[91] = 0;\n        }\n        if (player.researches[44] < 0.5) {\n            player.upgrades[92] = 0;\n        }\n        if (player.researches[45] < 0.5) {\n            player.upgrades[93] = 0;\n        }\n\n        player.upgrades[116] = 0;\n        player.upgrades[117] = 0;\n        player.upgrades[118] = 0;\n        player.upgrades[119] = 0;\n        player.upgrades[120] = 0;\n    }\n\n    for (let j = 1; j <= 20; j++) {\n        player.upgrades[j] = 0;\n    }\n\n    // both indices go up by 5, so we can put them together!\n    for (let j = 121, k = 106; j <= 125; j++, k++) {\n        player.upgrades[j] = 0;\n        player.upgrades[k] = 0;\n    }\n\n    if (i > 1.5) {\n        if (player.achievements[4] < 0.5) {\n            player.upgrades[81] = 0;\n        }\n        if (player.achievements[11] < 0.5) {\n            player.upgrades[82] = 0;\n        }\n        if (player.achievements[18] < 0.5) {\n            player.upgrades[83] = 0;\n        }\n        if (player.achievements[25] < 0.5) {\n            player.upgrades[84] = 0;\n        }\n        if (player.achievements[32] < 0.5) {\n            player.upgrades[85] = 0;\n        }\n        if (player.achievements[87] < 0.5) {\n            player.upgrades[86] = 0;\n        }\n        if (player.achievements[80] < 0.5) {\n            player.upgrades[87] = 0;\n        }\n\n\n        player.upgrades[101] = 0;\n        player.upgrades[102] = 0;\n        player.upgrades[103] = 0;\n        player.upgrades[104] = 0;\n        player.upgrades[105] = 0;\n\n\n    }\n\n    if (i > 1.5) {\n        for (let k = 21; k < 41; k++) {\n            player.upgrades[k] = 0;\n        }\n\n        player.upgrades[111] = 0;\n        player.upgrades[112] = 0;\n        player.upgrades[113] = 0;\n        player.upgrades[114] = 0;\n        player.upgrades[115] = 0;\n    }\n\n    if (i > 1.5) {\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0]\n        player.crystalUpgradesCost = [7, 15, 20, 40, 100, 200, 500, 1000]\n\n        let m = 0;\n        m += Math.floor(G['rune3level'] * G['effectiveLevelMult'] / 16) * 100 / 100\n        if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n            m += 10\n        }\n        player.crystalUpgrades = [m, m, m, m, m, m, m, m]\n    }\n\n    for (let x = 1; x <= 125; x++) {\n        upgradeupdate(x, true)\n    }\n    if (player.achievements[87] > 0.5) {\n        player.upgrades[86] = 1\n    }\n}\n\nexport const resetAnts = () => {\n    player.firstOwnedAnts = 0;\n    if (player.cubeUpgrades[48] > 0) {\n        player.firstOwnedAnts = 1\n    }\n\n    player.secondOwnedAnts = 0;\n    player.thirdOwnedAnts = 0;\n    player.fourthOwnedAnts = 0;\n    player.fifthOwnedAnts = 0;\n    player.sixthOwnedAnts = 0;\n    player.seventhOwnedAnts = 0;\n    player.eighthOwnedAnts = 0;\n\n    player.firstGeneratedAnts = new Decimal(\"0\");\n    player.secondGeneratedAnts = new Decimal(\"0\");\n    player.thirdGeneratedAnts = new Decimal(\"0\");\n    player.fourthGeneratedAnts = new Decimal(\"0\");\n    player.fifthGeneratedAnts = new Decimal(\"0\");\n    player.sixthGeneratedAnts = new Decimal(\"0\");\n    player.seventhGeneratedAnts = new Decimal(\"0\");\n    player.eighthGeneratedAnts = new Decimal(\"0\");\n\n    player.firstCostAnts = new Decimal(\"1e700\");\n    player.secondCostAnts = new Decimal(\"3\");\n    player.thirdCostAnts = new Decimal(\"100\");\n    player.fourthCostAnts = new Decimal(\"1e4\");\n    player.fifthCostAnts = new Decimal(\"1e12\");\n    player.sixthCostAnts = new Decimal(\"1e36\");\n    player.seventhCostAnts = new Decimal(\"1e100\");\n    player.eighthCostAnts = new Decimal(\"1e300\");\n\n    const ant12 = player.antUpgrades[12-1];\n    player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ant12];\n    player.antPoints = new Decimal(\"1\");\n\n    if (player.currentChallenge.ascension === 12) {\n        player.antPoints = new Decimal(\"7\")\n    }\n\n    calculateAnts();\n    calculateRuneLevels();\n}\n\nconst resetResearches = () => {\n    player.researchPoints = 0;\n    //Array listing all the research indexes deserving of removal\n    const destroy = [\n        6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25,\n        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n        51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70,\n        76, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98,\n        101, 102, 103, 104, 106, 107, 108, 109, 110, 116, 117, 118, 121, 122, 123,\n        126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149,\n        151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174,\n        176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199\n    ];\n\n    for (const item of destroy) {\n        player.researches[item] = 0;\n    }\n}\n\nconst resetTalismans = () => {\n    player.talismanLevels = [0, 0, 0, 0, 0, 0, 0];\n    player.talismanRarity = [1, 1, 1, 1, 1, 1, 1];\n\n    player.talismanShards = 0;\n    player.commonFragments = 0;\n    player.uncommonFragments = 0;\n    player.rareFragments = 0;\n    player.epicFragments = 0;\n    player.legendaryFragments = 0;\n    player.mythicalFragments = 0;\n}\n", "import { player } from './Synergism';\nimport { Globals as G } from './Variables';\n\nexport const calculatePlatonicBlessings = () => {\n    // The visual updates are handled in visualUpdateCubes()\n    const platonicArray = Object.values(player.platonicBlessings);\n    const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4]\n    for (let i = 0; i < platonicArray.length; i++) {\n        let power = 1;\n        let mult = 1;\n        if (platonicArray[i] >= DRThreshold[i]) {\n            power = G['platonicDRPower'][i];\n            mult *= Math.pow(DRThreshold[i], (1 - G['platonicDRPower'][i]));\n        }\n\n        G['platonicBonusMultiplier'][i] = 1 + mult * G['platonicCubeBase'][i] * Math.pow(platonicArray[i], power);\n    }\n}\n", "/* Functions which Handle Quark Gains,  */\n\nimport { calculateCubeQuarkMultiplier, calculateQuarkMultFromPowder} from \"./Calculate\";\nimport { hepteractEffective } from \"./Hepteracts\"\nimport { player } from \"./Synergism\"\nimport { Alert } from \"./UpdateHTML\";\nimport { Globals as G } from \"./Variables\"\n\nexport const getQuarkMultiplier = () => {\n    let multiplier = 1;\n    if (player.achievementPoints > 0) { // Achievement Points\n        multiplier += player.achievementPoints / 25000; // Cap of +0.20 at 5,000 Pts\n    }\n    if (player.achievements[250] > 0) { // Max research 8x25\n        multiplier += 0.10;\n    }\n    if (player.achievements[251] > 0) { // Max Wow! Cube Upgrade 5x10\n        multiplier += 0.10;\n    }\n    if (player.platonicUpgrades[5] > 0) { // Platonic ALPHA upgrade\n        multiplier += 0.10;\n    }\n    if (player.platonicUpgrades[10] > 0) { // Platonic BETA Upgrade\n        multiplier += 0.15;\n    }\n    if (player.platonicUpgrades[15] > 0) { // Platonic OMEGA upgrade\n        multiplier += 0.20;\n    }\n    if (player.challenge15Exponent >= 1e11) { // Challenge 15: Exceed 1e11 exponent reward\n        multiplier += (G['challenge15Rewards'].quarks - 1);\n    }\n    if (player.shopUpgrades.infiniteAscent) { // Purchased Infinite Ascent Rune\n        multiplier *= (1.1 + 0.15 / 75 * player.runelevels[5]);\n    }\n    if (player.challenge15Exponent >= 1e15) { // Challenge 15: Exceed 1e15 exponent reward\n        multiplier *= (1 + 5/10000 * hepteractEffective('quark'));\n    }\n    if (player.overfluxPowder > 0) { // Overflux Powder [Max: 10% at 10,000]\n        multiplier *= calculateQuarkMultFromPowder();      \n    }\n    if (player.achievements[266] > 0) { // Achievement 266 [Max: 10% at 1Qa Ascensions]\n        multiplier *= (1 + Math.min(0.1, (player.ascensionCount) / 1e16))\n    }\n    return multiplier\n}\n\nexport const quarkHandler = () => {\n    let maxTime = 90000 //In Seconds\n    if (player.researches[195] > 0) {\n        maxTime += 18000 * player.researches[195] // Research 8x20\n    }\n\n    //Part 2: Calculate quark gain per hour\n    let baseQuarkPerHour = 5;\n\n    const quarkResearches = [99, 100, 125, 180, 195]\n    for (const el of quarkResearches) {\n        baseQuarkPerHour += player.researches[el]\n    }\n    const quarkMultiplier = getQuarkMultiplier();\n    const quarkPerHour = baseQuarkPerHour * quarkMultiplier\n\n    //Part 3: Calculates capacity of quarks on export\n    const capacity = Math.floor(quarkPerHour * maxTime / 3600)\n\n    //Part 4: Calculate how many quarks are to be gained.\n    const quarkGain = Math.floor(player.quarkstimer * quarkPerHour / 3600);\n\n    //Part 5 [June 9, 2021]: Calculate bonus awarded to cube quarks.\n    const cubeMult = calculateCubeQuarkMultiplier();\n    //Return maxTime, quarkPerHour, capacity and quarkGain as object\n    return {\n        maxTime: maxTime,\n        perHour: quarkPerHour,\n        capacity: capacity,\n        gain: quarkGain,\n        cubeMult: cubeMult\n    };\n}\n\nexport class QuarkHandler {\n    /** Global quark bonus */\n    private BONUS = 0;\n    /** Quark amount */\n    private QUARKS = 0;\n\n    private static interval: ReturnType<typeof setInterval> | null = null;\n\n    constructor({ bonus, quarks }: { bonus?: number, quarks: number }) {\n        this.QUARKS = quarks;\n        if (bonus)\n            this.BONUS = bonus;\n        else\n            this.getBonus();\n\n        if (QuarkHandler.interval === null) // although the values are cached for 15 mins, refresh every 5\n            QuarkHandler.interval = setInterval(this.getBonus.bind(this), 60 * 1000 * 5);\n    }\n\n    /*** Calculates the number of quarks to give with the current bonus. */\n    applyBonus(amount: number) {\n        return amount * (1 + (this.BONUS / 100));\n    }\n\n    /** Subtracts quarks, as the name suggests. */\n    add(amount: number, useBonus = true) {\n        if (useBonus)\n            this.QUARKS += this.applyBonus(amount);\n        else\n            this.QUARKS += amount;\n        return this;\n    }\n\n    /** Add quarks, as suggested by the function's name. */\n    sub(amount: number) {\n        this.QUARKS -= amount;\n        if (this.QUARKS < 0) this.QUARKS = 0;\n\n        return this;\n    }\n\n    public get _BONUS() : number {\n        return this.BONUS\n    }    \n\n    async getBonus() {\n        const el = document.getElementById('currentBonus');\n        if (localStorage.getItem('quarkBonus') !== null) { // is in cache\n            const { bonus, fetched } = JSON.parse(localStorage.getItem('quarkBonus'));\n            if (Date.now() - fetched < 60 * 1000 * 15) { // cache is younger than 15 minutes\n                console.log(\n                    `%c \\tBonus of ${bonus}% quarks has been applied! \\n\\t(Cached at ${fetched})`, \n                    'color:gold; font-size:60px; font-weight:bold; font-family:helvetica;'\n                );\n                el.textContent = `Generous patrons give you a bonus of ${bonus}% more quarks!`;\n                return this.BONUS = bonus;\n            }\n        } else if (!navigator.onLine) {\n            return el.textContent = `Current Bonus: N/A (offline)%!`;\n        }\n\n        try {\n            const r = await fetch('https://api.github.com/gists/44be6ad2dcf0d44d6a29dffe1d66a84a', {\n                headers: {\n                    'Accept': 'application/vnd.github.v3+json'\n                }\n            });\n            const t = await r.json();\n            const b = Number(t.files['SynergismQuarkBoost.txt'].content);\n\n            if (Number.isNaN(b)) \n                return Alert('No bonus could be applied, an error occurred. [NaN] :(');\n            else if (!Number.isFinite(b))\n                return Alert('No bonus could be applied, an error occurred. [Infinity] :(');\n            else if (b < 0)\n                return Alert('No bonus could be applied, an error occurred. [Zero] :(');\n\n            console.log(`%c \\tBonus of ${b}% quarks has been applied!`, 'color:gold; font-size:60px; font-weight:bold; font-family:helvetica;');\n            el.textContent = `Generous patrons give you a bonus of ${b}% more quarks!`;\n            localStorage.setItem('quarkBonus', JSON.stringify({ bonus: b, fetched: Date.now() }));\n            this.BONUS = b;\n        } catch {\n            console.log(`If you see an error with \"fetch\" or \"network\" in it, you can safely ignore it!`);\n            // there are a few examples where this request might fail:\n            //      1. tab is in the background, browser throttles it.\n            //      2. idle too long, network connection is severed\n            // there's nothing we can do if an error occurs so we should ignore it.\n        }\n    }\n\n    [Symbol.toPrimitive] = (t: string) => t === 'number' ? this.QUARKS : null;\n}", "\n\n/* Note by Platonic, April 1 2021\nThis is an experimental file for making cubes their own class\nand make them easily re-used for later purposes.\nPlease do not change the *file name* or use anything developed in this\nfile without asking me first. You may edit this file as much as you\nwant, though!\nThank you! */\n\nimport Decimal from 'break_infinity.js';\nimport { achievementaward } from './Achievements';\nimport { calculateCubeBlessings } from './Calculate';\nimport { CalcECC } from './Challenges';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport { calculatePlatonicBlessings } from './PlatonicCubes';\nimport { getQuarkMultiplier, quarkHandler } from './Quark';\nimport { player } from './Synergism';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport { Player } from './types/Synergism';\nimport { Prompt, Alert } from './UpdateHTML';\n// import { Prompt, Alert } from './UpdateHTML';\n\n/* Constants */\n\nconst blessings: Record<\n    keyof Player['cubeBlessings'], \n    { weight: number, pdf: (x: number) => boolean }\n> = {\n    accelerator:   {weight: 4, pdf: (x: number) => 0 <= x && x <= 20},\n    multiplier:    {weight: 4, pdf: (x: number) => 20 < x && x <= 40},\n    offering:      {weight: 2, pdf: (x: number) => 40 < x && x <= 50},\n    runeExp:       {weight: 2, pdf: (x: number) => 50 < x && x <= 60},\n    obtainium:     {weight: 2, pdf: (x: number) => 60 < x && x <= 70},\n    antSpeed:      {weight: 2, pdf: (x: number) => 70 < x && x <= 80},\n    antSacrifice:  {weight: 1, pdf: (x: number) => 80 < x && x <= 85},\n    antELO:        {weight: 1, pdf: (x: number) => 85 < x && x <= 90},\n    talismanBonus: {weight: 1, pdf: (x: number) => 90 < x && x <= 95},\n    globalSpeed:   {weight: 1, pdf: (x: number) => 95 < x && x <= 100}\n}\n\nconst platonicBlessings: Record <\n    keyof Player['platonicBlessings'],\n    { weight: number, pdf: (x: number) => boolean }\n> = {\n    cubes:          {weight: 13200, pdf: (x: number) => 0 <= x && x <= 33.000},\n    tesseracts:     {weight: 13200, pdf: (x: number) => 33.000 < x && x <= 66.000},\n    hypercubes:     {weight: 13200, pdf: (x: number) => 66.000 < x && x <= 99.000},\n    platonics:      {weight: 396, pdf: (x: number) => 99.000 < x && x <= 99.990},\n    hypercubeBonus: {weight: 1, pdf: (x: number) => 99.990 < x && x <= 99.9925},\n    taxes:          {weight: 1, pdf: (x: number) => 99.9925 < x && x <= 99.995},\n    scoreBonus:     {weight: 1, pdf: (x: number) => 99.995 < x && x <= 99.9975},\n    globalSpeed:    {weight: 1, pdf: (x: number) => 99.9975 < x && x <= 100},\n}\n\n/**\n * @description Generic class for handling cube subsets.\n * @example\n * class PlatCubes extends Currency {\n *   constructor() {\n *       super('wowPlatonicCubes', player.wowPlatonicCubes);\n *   }\n *\n *   async open(amount: number, value: boolean) {\n *       // implement open logic here\n *   }\n * }\n * \n * new PlatCubes().openCustom(); \n */\nexport abstract class Cube {\n    /** key on the player object */\n    private key: keyof Player;\n    private value: number;\n\n    constructor (\n        type: keyof Player,\n        v = 0\n    ) {\n        this.key = type;\n        this.value = v;\n    }\n\n    /**\n     * @description Open a given amount of cubes\n     * @param amount Number of cubes to open\n     * @param max if true, overwrites amount and opens the max amount of cubes.\n     */\n    abstract open(amount: number, max: boolean): Promise<void> | void;\n\n    /** Open a custom amount of cubes */\n    async openCustom() {\n        // TODO: Replace this with `this`?\n        const thisInPlayer = player[this.key] as Cube;\n        const amount = await Prompt(`How many cubes would you like to open? You have ${thisInPlayer.value.toLocaleString()}!`);\n        if (amount === null)\n            return Alert('OK. No cubes opened.');\n        const cubesToOpen = Number(amount);\n\n        if (Number.isNaN(cubesToOpen) || !Number.isFinite(cubesToOpen)) // nan + Infinity checks\n            return Alert('Value must be a finite number!');\n        else if (thisInPlayer.value < cubesToOpen) // not enough cubes to open\n            return Alert('You don\\'t have enough cubes to open!');\n        else if (cubesToOpen <= 0) // 0 or less cubes to open\n            return Alert('You can\\'t open a negative number of cubes.');\n\n        return this.open(cubesToOpen, cubesToOpen === thisInPlayer.value);\n    }\n\n    /** @description Check how many quarks you should have gained through opening cubes today */\n    checkQuarkGain(base: number, mult: number, cubes: number): number {\n        if (cubes < 1) {\n            return 0;\n        }\n        // General quark multiplier from other in-game features\n        // Multiplier from passed parameter\n        const multiplier = getQuarkMultiplier() * mult * quarkHandler().cubeMult;\n        return Math.floor(Math.log10(cubes) * base * multiplier);\n    }\n\n    /** @description Check how many cubes you need to gain an additional quark from opening */\n    checkCubesToNextQuark(base: number, mult: number, quarks: number, cubes: number): number {\n        // General quark multiplier from other in-game features\n        // Multiplier from passed parameter\n        const multiplier = getQuarkMultiplier() * mult * quarkHandler().cubeMult;\n\n        return Math.ceil(Math.pow(10, (quarks + 1) / (multiplier * base)) - cubes)\n    }\n\n    add(amount: number): Cube {\n        this.value += amount;\n        return this;\n    }\n\n    sub(amount: number): Cube {\n        this.value = Math.max(0, this.value - amount);\n        return this;\n    }\n\n    [Symbol.toPrimitive](h: string) {\n        switch (h) {\n            case 'string': return this.value.toString();\n            case 'number': return this.value;\n            default: return null;\n        }\n    }\n}\n\nexport class WowCubes extends Cube {\n    constructor(amount = Number(player.wowCubes)) {\n        super('wowCubes', amount);\n    }\n\n    open(value: number, max = false) {\n        let toSpend = max ? Number(this) : Math.min(Number(this), value);\n\n        if (value === 1 && player.cubeBlessings.accelerator >= 2e11 && player.achievements[246] < 1) {\n            achievementaward(246)\n        }\n\n        this.sub(toSpend);\n        player.cubeOpenedDaily += toSpend\n\n        const quarkMult = (player.shopUpgrades.cubeToQuark) ? 1.5 : 1;\n        const gainQuarks = Number(this.checkQuarkGain(5, quarkMult, player.cubeOpenedDaily));\n        const actualQuarksGain = Math.max(0, gainQuarks - player.cubeQuarkDaily)\n        player.cubeQuarkDaily += actualQuarksGain;\n        player.worlds.add(actualQuarksGain);\n\n        toSpend *= (1 + player.researches[138] / 1000)\n        toSpend *= (1 + 0.8 * player.researches[168] / 1000)\n        toSpend *= (1 + 0.6 * player.researches[198] / 1000)\n\n        toSpend = Math.floor(toSpend)\n        let toSpendModulo = toSpend % 20\n        let toSpendDiv20 = Math.floor(toSpend / 20)\n        \n        if (toSpendDiv20 > 0 && player.cubeUpgrades[13] === 1) {\n            toSpendModulo += toSpendDiv20\n        }\n        if (toSpendDiv20 > 0 && player.cubeUpgrades[23] === 1) {\n            toSpendModulo += toSpendDiv20\n        }\n        if (toSpendDiv20 > 0 && player.cubeUpgrades[33] === 1) {\n            toSpendModulo += toSpendDiv20\n        }\n\n        toSpendDiv20 += 100 / 100 * Math.floor(toSpendModulo / 20);\n        toSpendModulo = toSpendModulo % 20;\n\n        const keys = Object.keys(player.cubeBlessings) as (keyof Player['cubeBlessings'])[];\n\n        // If you're opening more than 20 cubes, it will consume all cubes until remainder mod 20, giving expected values.\n        for (const key of keys) {\n            player.cubeBlessings[key] += blessings[key].weight * toSpendDiv20 * (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])));\n        }\n\n        // Then, the remaining cubes will be opened, simulating the probability [RNG Element]\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key of keys) {\n                if (blessings[key].pdf(num))\n                    player.cubeBlessings[key] += (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])));\n            }\n        }\n\n        calculateCubeBlessings();\n    }\n}\n\nexport class WowTesseracts extends Cube {\n    constructor(amount = Number(player.wowTesseracts)) {\n        super('wowTesseracts', amount);\n    }\n\n    open(value: number, max = false) {\n        const toSpend = max ? Number(this) : Math.min(Number(this), value);\n\n        player.wowTesseracts.sub(toSpend);\n        player.tesseractOpenedDaily += toSpend\n\n        const quarkMult = (player.shopUpgrades.tesseractToQuark) ? 1.5 : 1;\n        const gainQuarks = Number(this.checkQuarkGain(7, quarkMult, player.tesseractOpenedDaily));\n        const actualQuarksGain = Math.max(0, gainQuarks - player.tesseractQuarkDaily)\n        player.tesseractQuarkDaily += actualQuarksGain\n        player.worlds.add(actualQuarksGain);\n\n        const toSpendModulo = toSpend % 20\n        const toSpendDiv20 = Math.floor(toSpend / 20)\n\n        // If you're opening more than 20 Tesseracts, it will consume all Tesseracts until remainder mod 20, giving expected values.\n        for (const key in player.tesseractBlessings) {\n            player.tesseractBlessings[key as keyof Player['tesseractBlessings']] += blessings[key as keyof typeof blessings].weight * toSpendDiv20;\n        }\n        // Then, the remaining tesseract will be opened, simulating the probability [RNG Element]\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key in player.tesseractBlessings) {\n                if (blessings[key as keyof typeof blessings].pdf(num))\n                    player.tesseractBlessings[key as keyof Player['tesseractBlessings']] += 1;\n            }\n        }\n\n        calculateTesseractBlessings();\n        const extraCubeBlessings = Math.floor(12 * toSpend * player.researches[153])\n        player.wowCubes.add(extraCubeBlessings);\n        player.wowCubes.open(extraCubeBlessings, false)\n    }\n}\n\nexport class WowHypercubes extends Cube {\n    constructor(amount = Number(player.wowHypercubes)) {\n        super('wowHypercubes', amount);\n    }\n\n    open(value: number, max = false) {\n        const toSpend = max ? Number(this) : Math.min(Number(this), value);\n\n        player.wowHypercubes.sub(toSpend);\n        player.hypercubeOpenedDaily += toSpend\n\n        const quarkMult = (player.shopUpgrades.hypercubeToQuark) ? 1.5 : 1;\n        const gainQuarks = this.checkQuarkGain(10, quarkMult, player.hypercubeOpenedDaily);\n        const actualQuarksGain = Math.max(0, gainQuarks - player.hypercubeQuarkDaily)\n        player.hypercubeQuarkDaily += actualQuarksGain\n        player.worlds.add(actualQuarksGain);\n\n        const toSpendModulo = toSpend % 20;\n        const toSpendDiv20 = Math.floor(toSpend/20)\n\n        // If you're opening more than 20 Hypercubes, it will consume all Hypercubes until remainder mod 20, giving expected values.\n        for (const key in player.hypercubeBlessings) {\n            player.hypercubeBlessings[key as keyof Player['hypercubeBlessings']] += blessings[key as keyof typeof blessings].weight * toSpendDiv20;\n        }\n        // Then, the remaining hypercubes will be opened, simulating the probability [RNG Element]\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key in player.hypercubeBlessings) {\n                if (blessings[key as keyof typeof blessings].pdf(num))\n                    player.hypercubeBlessings[key as keyof Player['hypercubeBlessings']] += 1;\n            }\n        }\n\n        calculateHypercubeBlessings();\n        const extraTesseractBlessings = Math.floor(100 * toSpend * player.researches[153])\n        player.wowTesseracts.add(extraTesseractBlessings);\n        player.wowTesseracts.open(extraTesseractBlessings, false)\n    }\n}\n\nexport class WowPlatonicCubes extends Cube {\n    constructor(amount = Number(player.wowPlatonicCubes)) {\n        super('wowPlatonicCubes', amount);\n    }\n\n    open(value: number, max = false) {\n        const toSpend = max ? Number(this) : Math.min(Number(this), value);\n\n        player.wowPlatonicCubes.sub(toSpend);\n        player.platonicCubeOpenedDaily += toSpend;\n\n        const quarkMult = 1.5 // There's no platonic to quark upgrade, default as 1.5\n        const gainQuarks = this.checkQuarkGain(15, quarkMult, player.platonicCubeOpenedDaily);\n        const actualQuarksGain = Math.max(0, gainQuarks - player.platonicCubeQuarkDaily);\n        player.platonicCubeQuarkDaily += actualQuarksGain;\n        player.worlds.add(actualQuarksGain);\n\n        let toSpendModulo = toSpend % 40000;\n        const toSpendDiv40000 = Math.floor(toSpend / 40000);\n\n        //If you're opening more than 40,000 Platonics, it will consume all Platonics until remainder mod 40,000, giving expected values.\n        for (const key in player.platonicBlessings) {\n            player.platonicBlessings[key as keyof Player['platonicBlessings']] += platonicBlessings[key as keyof typeof platonicBlessings].weight * toSpendDiv40000;\n        }\n        //Then, the remaining hypercube will be opened, simulating the probability [RNG Element]\n        const RNGesus = ['hypercubeBonus', 'taxes', 'scoreBonus', 'globalSpeed']\n        for (let i = 0; i < RNGesus.length; i++) {\n            const num = Math.random();\n            if (toSpendModulo / 40000 >= num && toSpendModulo !== 0) {\n                player.platonicBlessings[RNGesus[i] as keyof Player['platonicBlessings']] += 1;\n                toSpendModulo -= 1\n            }\n        }\n        const gainValues = [Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(396 * toSpendModulo / 40000)]\n        const commonDrops = ['cubes', 'tesseracts', 'hypercubes', 'platonics'] as const;\n        for (let i = 0; i < commonDrops.length; i++) {\n            player.platonicBlessings[commonDrops[i]] += gainValues[i]\n            toSpendModulo -= gainValues[i]\n        }\n\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key in player.platonicBlessings) {\n                if (platonicBlessings[key as keyof typeof platonicBlessings].pdf(num))\n                    player.platonicBlessings[key as keyof Player['platonicBlessings']] += 1;\n            }\n        }\n        calculatePlatonicBlessings();\n        if (player.achievements[271] > 0) {\n            const extraHypercubes = Math.floor(toSpend * Math.max(0, Math.min(1, (Decimal.log(player.ascendShards.add(1), 10) - 1e5) / 9e5)))\n            player.wowHypercubes.add(extraHypercubes);\n            player.wowHypercubes.open(extraHypercubes, false)\n        }\n    }\n}\n", "import Decimal from \"break_infinity.js\";\nimport { calculateCubeMultFromPowder, calculateCubeQuarkMultiplier, calculatePowderConversion, calculateQuarkMultFromPowder, forcedDailyReset } from \"./Calculate\";\nimport { Cube } from \"./CubeExperimental\";\nimport { format, player } from \"./Synergism\";\nimport type { Player } from \"./types/Synergism\";\nimport { Alert, Confirm, Prompt } from \"./UpdateHTML\";\n\nexport interface IHepteractCraft {\n    BASE_CAP: number,\n    HEPTERACT_CONVERSION: number,\n    OTHER_CONVERSIONS: {[key:string]:number},\n    UNLOCKED?: boolean,\n    BAL?: number,\n    CAP?: number,\n    DISCOUNT?: number \n}\n\ntype hepteractTypes = 'chronos' | 'hyperrealism' | 'quark' | 'challenge' |\n                      'abyss' | 'accelerator' | 'acceleratorBoost' | 'multiplier'\n\nexport class HepteractCraft {\n    /**\n     * Craft is unlocked or not (Default is locked)\n     */\n    UNLOCKED = false;\n\n    /**\n     * Current Inventory (amount) of craft you possess\n     */\n    BAL = 0;\n\n    /**\n     * Maximum Inventory (amount) of craft you can hold\n     * base_cap is the smallest capacity for such item.\n     */\n    CAP = 0;\n    BASE_CAP = 0;\n\n    /**\n     * Conversion rate of hepteract to synthesized items\n     */\n    HEPTERACT_CONVERSION = 0;\n\n    /**\n     * Conversion rate of additional items\n     * This is in the form of keys being player variables,\n     * values being the amount player has.\n     */\n    OTHER_CONVERSIONS: {\n        [key in keyof Player]?: number\n    }\n\n    /**\n     * Discount Factor (number from [0, 1))\n     */\n    DISCOUNT = 0;\n\n    constructor(data: IHepteractCraft) {\n        this.BASE_CAP = data.BASE_CAP;\n        this.HEPTERACT_CONVERSION = data.HEPTERACT_CONVERSION;\n        this.OTHER_CONVERSIONS = data.OTHER_CONVERSIONS\n        this.UNLOCKED = data.UNLOCKED ?? false; //This would basically always be true if this parameter is provided\n        this.BAL = data.BAL ?? 0;\n        this.CAP = data.CAP ?? this.BASE_CAP // This sets cap either as previous value or keeps it to default.\n        this.DISCOUNT = data.DISCOUNT ?? 0;\n    }\n\n    // Unlock a synthesizer craft\n    unlock = (hepteractName: string): HepteractCraft | Promise<void> => {\n        if (this.UNLOCKED === true) {\n            return this;\n        }\n        this.UNLOCKED = true;\n        return Alert('Congratulations. You have unlocked the ability to craft ' + hepteractName + ' in the hepteract forge!');\n    }\n\n    // Add to balance through crafting.\n    craft = async() : Promise<HepteractCraft> => {\n        //Prompt used here. Thank you Khafra for the already made code! -Platonic\n        const craftingPrompt = await Prompt('How many would you like to craft?');\n        if (craftingPrompt === null) // Number(null) is 0. Yeah..\n            return Alert('Okay, maybe next time.');\n        const craftAmount = Number(craftingPrompt)\n\n        //Check these lol\n        if (Number.isNaN(craftAmount) || !Number.isFinite(craftAmount)) // nan + Infinity checks\n            return Alert('Value must be a finite number!');\n        else if (craftAmount <= 0) // 0 or less selected\n            return Alert('You can\\'t craft a nonpositive amount of these fucks, lol!');\n\n        // If craft is unlocked, we return object\n        if (!this.UNLOCKED) \n            return Alert('This is not an unlocked craft, thus you cannot craft this item!');\n\n        // Calculate the largest craft amount possible, with an upper limit being craftAmount\n        const hepteractLimit = Math.floor((player.wowAbyssals / this.HEPTERACT_CONVERSION) * 1 / (1 - this.DISCOUNT))\n\n        // Create an array of how many we can craft using our conversion limits for additional items\n        const itemLimits: Array<number> = []\n        for (const item in this.OTHER_CONVERSIONS) {\n            // The type of player[item] is number | Decimal | Cube.\n            itemLimits.push(Math.floor((player[item as keyof Player] as number) / this.OTHER_CONVERSIONS[item as keyof Player]) * 1 / (1 - this.DISCOUNT))\n        }\n\n        // Get the smallest of the array we created\n        const smallestItemLimit = Math.min(...itemLimits)\n\n        // Get the smallest of hepteract limit, limit found above and specified input\n        const amountToCraft = Math.min(smallestItemLimit, hepteractLimit, craftAmount, this.CAP - this.BAL)\n        this.BAL += amountToCraft\n\n        // Subtract spent items from player\n        player.wowAbyssals -= amountToCraft * this.HEPTERACT_CONVERSION\n        for (const item in this.OTHER_CONVERSIONS) {\n            if (typeof player[item as keyof Player] === 'number')\n                (player[item as keyof Player] as number) -= amountToCraft * this.OTHER_CONVERSIONS[item as keyof Player];\n            else if (Object.prototype.isPrototypeOf.call(Cube, player[item as keyof Player]))\n                (player[item as keyof Player] as Cube).sub(amountToCraft * this.OTHER_CONVERSIONS[item as keyof Player]);\n            else if (item == 'worlds')\n                player.worlds.sub(amountToCraft * this.OTHER_CONVERSIONS[item])\n        }\n        return Alert('You have successfully crafted ' + format(amountToCraft, 0, true) + ' hepteracts. If this is less than your input, you either hit the inventory limit or you had insufficient resources.');\n    }\n\n    // Reduce balance through spending\n    spend(amount: number): HepteractCraft {\n        if (!this.UNLOCKED)\n            return this;\n\n        this.BAL -= amount;\n        return this;\n    }\n\n    // Expand your capacity\n    /**\n     * Expansion can only happen if your current balance is full.\n     */\n    expand = async(): Promise<HepteractCraft> => {\n        const expandPrompt = await Confirm('This will empty your balance, but double your capacity. Agree to the terms and conditions and stuff?')\n        if (!expandPrompt) {\n            return this;\n        }\n        if (!this.UNLOCKED)\n            return Alert('This is not an unlocked craft. Sorry!');\n\n        // Below capacity\n        if (this.BAL < this.CAP)\n            return Alert('Insufficient inventory to expand. 404 909 error.');\n        \n        // Empties inventory in exchange for doubling maximum capacity.\n        this.BAL = 0\n        this.CAP *= 2\n        return Alert('Successfully expanded your inventory. You can now fit ' + format(this.CAP, 0, true) + '.');\n    }\n\n    // Add some percentage points to your discount\n    /**\n     * Discount has boundaries [0, 1), and upper limit\n     *  is defined by (1 - EPSILON). Craft amount is multiplied by 1 / (1 - Discount)\n     */\n    addDiscount(amount: number): HepteractCraft {\n        // If amount would put Discount to 1 or higher set to upper limit\n        if (this.DISCOUNT + amount > (1 - Number.EPSILON)) {\n            this.DISCOUNT = 1 - Number.EPSILON;\n            return this;\n        }\n\n        this.DISCOUNT += amount;\n        return this;\n    }\n\n    // Get balance of item\n    get amount() {\n        return this.BAL;\n    }\n    get capacity() {\n        return this.CAP\n    }\n    get discount() {\n        return this.DISCOUNT\n    }\n    \n}\n\nconst hepteractEffectiveValues = {\n    'chronos': {\n        LIMIT: 1000,\n        DR: 1/6,\n    },\n    'hyperrealism': {\n        LIMIT: 1000,\n        DR: 0.33\n    },\n    'quark': {\n        LIMIT: 1000,\n        DR: 0.5\n    },\n    'challenge': {\n        LIMIT: 1000,\n        DR: 1/6\n    },\n    'abyss': {\n        LIMIT: 1,\n        DR: 0\n    },\n    'accelerator': {\n        LIMIT: 1000,\n        DR: 0.2\n    },\n    'acceleratorBoost': {\n        LIMIT: 1000,\n        DR: 0.2\n    },\n    'multiplier': {\n        LIMIT: 1000,\n        DR: 0.2\n    }\n}\n\nexport const createHepteract = (data: IHepteractCraft) => {\n    return new HepteractCraft(data)\n}\n\nexport const hepteractEffective = (data: hepteractTypes) => {\n    let effectiveValue = Math.min(player.hepteractCrafts[data].BAL, hepteractEffectiveValues[data].LIMIT)\n    let exponentBoost = 0;\n    if (data === 'chronos') {\n        exponentBoost += 1/300 * player.platonicUpgrades[19]\n    }\n    if (player.hepteractCrafts[data].BAL > hepteractEffectiveValues[data].LIMIT) {\n        effectiveValue *= Math.pow(player.hepteractCrafts[data].BAL / hepteractEffectiveValues[data].LIMIT, hepteractEffectiveValues[data].DR + exponentBoost)\n    }\n\n    return effectiveValue\n}\n\nexport const hepteractDescriptions = (type: hepteractTypes) => {\n    document.getElementById('hepteractUnlockedText').style.display = 'block'\n    document.getElementById('hepteractCurrentEffectText').style.display = 'block'\n    document.getElementById('hepteractBalanceText').style.display = 'block'\n    document.getElementById('powderDayWarpText').style.display = 'none'\n    document.getElementById('hepteractCostText').style.display = 'block'\n\n    const unlockedText = document.getElementById('hepteractUnlockedText')\n    const effectText = document.getElementById('hepteractEffectText')\n    const currentEffectText = document.getElementById('hepteractCurrentEffectText')\n    const balanceText = document.getElementById('hepteractBalanceText')\n    const costText = document.getElementById('hepteractCostText')\n    switch(type){\n        case 'chronos':\n            unlockedText.textContent = (player.hepteractCrafts.chronos.UNLOCKED) ? \"< UNLOCKED >\": \"< LOCKED >\"\n            effectText.textContent = \"This hepteract bends time, in your favor. +0.06% Ascension Speed per Chronos Hepteract.\"\n            currentEffectText.textContent = \"Current Effect: Ascension Speed +\" + format(hepteractEffective('chronos') * 6 / 100, 2, true) + \"%\"\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.chronos.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.chronos.CAP)\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.chronos.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 1e115 Obtainium [WIP]\"\n            break;\n        case 'hyperrealism':\n            unlockedText.textContent = (player.hepteractCrafts.hyperrealism.UNLOCKED) ? \"< UNLOCKED >\": \"< LOCKED >\"\n            effectText.textContent = \"This bad boy can make hypercube gain skyrocket. +0.06% Hypercubes per Hyperreal Hepteract.\"\n            currentEffectText.textContent = \"Current Effect: Hypercubes +\" + format(hepteractEffective('hyperrealism') * 6 / 100, 2, true) + \"%\"\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.hyperrealism.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.hyperrealism.CAP)\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.hyperrealism.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 1e80 Offerings.\"\n            break;\n        case 'quark':\n            unlockedText.textContent = (player.hepteractCrafts.quark.UNLOCKED) ? \"< UNLOCKED >\": \"< LOCKED >\"\n            effectText.textContent = \"One pound, two pound fish, fishy grant +0.05% Quarks per Quark Hepteract fish fish.\"\n            currentEffectText.textContent = \"Current Effect: Quarks +\" + format(hepteractEffective('quark') * 5 / 100, 2, true) + \"%\"\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.quark.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.quark.CAP)\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.quark.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 100 Quarks.\"\n            break;\n        case 'challenge':\n            unlockedText.textContent = (player.hepteractCrafts.challenge.UNLOCKED) ? \"< UNLOCKED >\": \"< LOCKED >\"\n            effectText.textContent = \"That's preposterous. How are you going to gain +0.05% C15 Exponent per Challenge Hepteract? How!?\"\n            currentEffectText.textContent = \"Current Effect: C15 Exponent +\" + format(hepteractEffective('challenge') * 5 / 100, 2, true) + \"%\"\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.challenge.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.challenge.CAP)\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.challenge.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts, 1e11 Platonic Cubes and 1e22 Cubes.\"\n            break;\n        case 'abyss':\n            unlockedText.textContent = (player.hepteractCrafts.abyss.UNLOCKED) ? \"< UNLOCKED >\": \"< LOCKED >\"\n            effectText.textContent = \"It seems like this holds the power to be at the End of Time. Do you remember why you need this?\"\n            currentEffectText.textContent = \"<[You will submit to the Omega Entity of Time]>\"\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.abyss.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.abyss.CAP)\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.abyss.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 69 Wow! Cubes (lol)\"\n            break;\n        case 'accelerator':\n            unlockedText.textContent = (player.hepteractCrafts.accelerator.UNLOCKED) ? \"< UNLOCKED >\": \"< LOCKED >\"\n            effectText.textContent = \"Haha, stupid Corruptions. +2,000 +0.03% Uncorruptable Accelerators per 'Way too many accelerators' Hepteract!\"\n            currentEffectText.textContent = \"Current Effect: Uncorruptable Accelerators +\"+ format(2000 * hepteractEffective('accelerator'), 2, true) +\" +\" + format(hepteractEffective('accelerator') * 3 / 100, 2, true) + \"%\"\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.accelerator.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.accelerator.CAP)\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.accelerator.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 1e14 Wow! Tesseracts\"\n            break;\n        case 'acceleratorBoost':\n            unlockedText.textContent = (player.hepteractCrafts.acceleratorBoost.UNLOCKED) ? \"< UNLOCKED >\": \"< LOCKED >\"\n            effectText.textContent = \"Haha, stupid Corruptions. +0.1% Accelerator Boosts per 'Way too many accelerator boosts' Hepteract!\"\n            currentEffectText.textContent = \"Current Effect: Accelerator Boosts +\" +format(hepteractEffective('acceleratorBoost') / 10, 2, true) + \"%\"\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.acceleratorBoost.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.acceleratorBoost.CAP)\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.acceleratorBoost.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 1e10 Hypercubes\"\n            break;\n        case 'multiplier':\n            unlockedText.textContent = (player.hepteractCrafts.multiplier.UNLOCKED) ? \"< UNLOCKED >\": \"< LOCKED >\"\n            effectText.textContent = \"Haha, stupid Corruptions. +1,000 +0.03% Uncorruptable Multipliers per 'Way too many multipliers' Hepteract!\"\n            currentEffectText.textContent = \"Current Effect: Uncorruptable Multipliers +\" + format(1000 * hepteractEffective('multiplier'), 2, true) +\" +\" + format(hepteractEffective('multiplier') * 3 / 100, 2, true) + \"%\"\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.multiplier.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.multiplier.CAP)\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.multiplier.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 1e130 Obtainium\"\n            break;\n    }\n}\n\n/**\n * Generates the description at the bottom of the page for Overflux Orb crafting\n */\nexport const hepteractToOverfluxOrbDescription = () => {\n    document.getElementById('hepteractUnlockedText').style.display = 'none'\n    document.getElementById('powderDayWarpText').style.display = 'none'\n    document.getElementById('hepteractCostText').style.display = 'block'\n\n    document.getElementById('hepteractCurrentEffectText').textContent = 'Orb Effect: Opening Cubes gives ' + format(100 *(-1 + calculateCubeQuarkMultiplier()), 2, true) + \"% more Quarks.\"\n    document.getElementById('hepteractBalanceText').textContent = 'Orbs Purchased Today: ' + format(player.overfluxOrbs, 0, true) + '.'\n    document.getElementById('hepteractEffectText').textContent = \"You can amalgamate Overflux Orbs here. [NOTE: these expire at the end of your current day]\"\n    document.getElementById('hepteractCostText').textContent = \"Cost: 250,000 Hepteracts per Overflux Orb\"\n}\n\n/**\n * Trades Hepteracts for Overflux Orbs at 250,000 : 1 ratio. If null or invalid will gracefully terminate.\n * @returns Alert of either purchase failure or success\n */\nexport const tradeHepteractToOverfluxOrb = async () => {\n    const maxBuy = Math.floor(player.wowAbyssals / 250000)\n    const hepteractInput = await Prompt('How many Orbs would you like to purchase? You can buy up to ' + format(maxBuy, 0, true) +  ' with your hepteracts.')\n    const toUse = Number(hepteractInput);\n    if (\n        Number.isNaN(toUse) ||\n        !Number.isInteger(toUse) ||\n        toUse <= 0\n    )\n        return Alert(`Hey! That's not a valid number!`);\n    \n    const buyAmount = Math.min(maxBuy, toUse)\n    const beforeEffect = calculateCubeQuarkMultiplier();\n    player.overfluxOrbs += buyAmount\n    player.wowAbyssals -= 250000 * buyAmount\n    const afterEffect = calculateCubeQuarkMultiplier();\n\n    return Alert(`You have purchased ` + format(buyAmount, 0, true) + ` Overflux Orbs [+${format(100 * (afterEffect - beforeEffect), 2, true)}% to effect]. Enjoy!`)\n\n}\n\n/**\n * Generates the description at the bottom of the page for Overflux Powder Properties\n */\nexport const overfluxPowderDescription = () => {\n    let powderEffectText = \"ALL Cube Gain +\" + format(100 * (calculateCubeMultFromPowder() - 1), 2, true) + \"% [Multiplicative], +\" + format(100 * (calculateQuarkMultFromPowder() - 1), 3, true) + \"% Quarks [Multiplicative]\"\n    if (player.platonicUpgrades[16] > 0)\n        powderEffectText += \", Ascension Count +\" + format(2 * player.platonicUpgrades[16] * Math.min(1, player.overfluxPowder / 1e5), 2, true) + \"%, \" + \"Tesseract Building Production x\" + format(Decimal.pow(player.overfluxPowder + 1, 10 * player.platonicUpgrades[16])) + \" [From Platonic Upgrade 4x1]\" \n    document.getElementById('hepteractUnlockedText').style.display = 'none'\n    document.getElementById('hepteractCurrentEffectText').textContent = \"Powder effect: \" + powderEffectText\n    document.getElementById('hepteractBalanceText').textContent = 'You have ' + format(player.overfluxPowder, 2, true) + ' lumps of Overflux Powder.'\n    document.getElementById('hepteractEffectText').textContent = `Expired Overflux Orbs become powder at a rate of ${format(1 / calculatePowderConversion().mult, 1, true)} Orbs per powder lump!`\n    document.getElementById('hepteractCostText').style.display = 'none'\n\n    document.getElementById('powderDayWarpText').style.display = 'block'\n    document.getElementById('powderDayWarpText').textContent = `Day Warps remaining today: ${player.dailyPowderResetUses}`\n}\n\n/**\n * Attempts to operate a 'Day Reset' which, if successful, resets Daily Cube counters for the player.\n * Note by Platonic: kinda rushed job but idk if it can be improved.\n * @returns Alert, either for success or failure of warping\n */\nexport const overfluxPowderWarp = async () => {\n    if (player.overfluxPowder < 25)\n        return Alert('Sorry, but you need 25 powder to operate the warp machine.')\n    if (player.dailyPowderResetUses <= 0)\n        return Alert('Sorry, but this machine is on cooldown.')\n    const c = await Confirm('You stumble upon a mysterious machine. A note attached says that you can reset daily Cube openings for 25 Powder. However it only works once each real life day. You in?')\n    if (!c)\n        return Alert('You walk away from the machine, powder intact.')\n    else {\n        player.overfluxPowder -= 25\n        player.dailyPowderResetUses -= 1;\n        forcedDailyReset();\n        return Alert('Upon using the machine, your cubes feel just a little more rewarding. Daily cube opening counts have been reset! [-25 Powder]')\n    }\n}\n\n// Hepteract of Chronos [UNLOCKED]\nexport const ChronosHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e4,\n    OTHER_CONVERSIONS: {'researchPoints': 1e115},\n    UNLOCKED: true\n});\n\n// Hepteract of Hyperrealism [UNLOCKED]\nexport const HyperrealismHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e4,\n    OTHER_CONVERSIONS: {'runeshards': 1e80},\n    UNLOCKED: true\n});\n\n// Hepteract of Too Many Quarks [UNLOCKED]\nexport const QuarkHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e4,\n    OTHER_CONVERSIONS: {'worlds': 100},\n    UNLOCKED: true\n}); \n\n// Hepteract of Challenge [LOCKED]\nexport const ChallengeHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 5e4,\n    OTHER_CONVERSIONS: {'wowPlatonicCubes': 1e11, 'wowCubes': 1e22} \n});\n\n// Hepteract of The Abyssal [LOCKED]\nexport const AbyssHepteract = new HepteractCraft({\n    BASE_CAP: 1,\n    HEPTERACT_CONVERSION: 1e8,\n    OTHER_CONVERSIONS: {'wowCubes': 69}\n})\n\n// Hepteract of Too Many Accelerator [LOCKED]\nexport const AcceleratorHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e5,\n    OTHER_CONVERSIONS: {'wowTesseracts': 1e14}\n})\n\n// Hepteract of Too Many Accelerator Boost [LOCKED]\nexport const AcceleratorBoostHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 2e5,\n    OTHER_CONVERSIONS: {'wowHypercubes': 1e10}\n})\n\n// Hepteract of Too Many Multiplier [LOCKED]\nexport const MultiplierHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 3e5,\n    OTHER_CONVERSIONS: {'researchPoints': 1e130}\n})\n", "import { player, format, clearInt, interval } from './Synergism';\nimport { calculateSigmoidExponential, calculateSigmoid, calculateAnts, calculateRuneLevels, calculateMaxRunes, calculateAntSacrificeELO, calculateAntSacrificeRewards } from './Calculate';\nimport { Globals as G } from './Variables';\n\nimport Decimal, { DecimalSource } from 'break_infinity.js';\nimport { achievementaward } from './Achievements';\nimport { Confirm, revealStuff } from './UpdateHTML';\nimport { redeemShards } from './Runes';\nimport { updateTalismanInventory } from './Talismans';\nimport { buyResearch } from './Research';\nimport { resetAnts } from './Reset';\nimport type { ResetHistoryEntryAntSacrifice } from './History';\nimport { Synergism } from './Events';\nimport type { FirstToEighth, ZeroToSeven } from './types/Synergism';\n\nconst antdesc: Record<string, string> = {\n    antdesc1: \"Gain a worker ant for your everyday life. Gathers Galactic Crumbs. Essential!\",\n    antdesc2: \"Gain a breeder ant that produces worker ants automatically!\",\n    antdesc3: \"Gain a meta-breeder ant that produces breeder ants automatically!\",\n    antdesc4: \"Gain a mega-breeder ant that produces meta-breeder ants automatically!\",\n    antdesc5: \"Gain a Queen ant that produces mega-breeder ants automatically!\",\n    antdesc6: \"Gain a Lord Royal ant that produces Queen ants automatically!\",\n    antdesc7: \"Gain an ALMIGHTY ANT that produces Lord Royal ants automatically!\",\n    antdesc8: \"Gain a DISCIPLE OF ANT GOD that produces ALMIGHTY ANTS automatically!\"\n}\n\nconst antspecies: Record<string, string> = {\n    antspecies1: \"Inceptus Formicidae\",\n    antspecies2: \"Fortunae Formicidae\",\n    antspecies3: \"Tributum Formicidae\",\n    antspecies4: \"Celeritas Formicidae\",\n    antspecies5: \"Multa Formicidae\",\n    antspecies6: \"Sacrificium Formicidae\",\n    antspecies7: \"Hic Formicidae\",\n    antspecies8: \"Experientia Formicidae\",\n    antspecies9: \"Praemoenio Formicidae\",\n    antspecies10: \"Scientia Formicidae\",\n    antspecies11: \"Phylacterium Formicidae\",\n    antspecies12: \"Mortuus Est Formicidae\"\n}\n\nconst antupgdesc: Record<string, string> = {\n    antupgdesc1: \"Promotes romance and unity within the colony. [+12% Ant Speed / level]\",\n    antupgdesc2: \"Sweetens crumbs to increase their value [Each level increases Crumb --> Coin Conversion efficiency, up to ^50,000,000]\",\n    antupgdesc3: \"Swarms the Taxman into submission [Up to -99.5% taxes!]\",\n    antupgdesc4: \"Scares you into running faster [up to x20]\",\n    antupgdesc5: \"Imitates your body through magic shape-shifting powers [up to x40]\",\n    antupgdesc6: \"Tries to please Ant God... but fails [Additional Offerings!]\",\n    antupgdesc7: \"Helps you build a few things here and there [+3% Building Cost Delay / level, Cap 9,999,999%]\",\n    antupgdesc8: \"Knows how to salt and pepper food [Up to 1,000x Rune EXP!]\",\n    antupgdesc9: \"Can make your message to Ant God a little more clear [+1 all Rune Levels / level, Cap 10 Million]\",\n    antupgdesc10: \"Has big brain energy [Additional Obtainium!]\",\n    antupgdesc11: \"A valuable offering to the Ant God [Gain up to 3x Sacrifice Rewards!]\",\n    antupgdesc12: \"Betray Ant God increasing the fragility of your dimension [Unlocks ant talisman, Up to 2x faster timers on most things]\"\n}\n\nexport const calculateCrumbToCoinExp = () => {\n    const exponent = player.currentChallenge.ascension !== 15\n        ? 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2-1] + G['bonusant2']) / 5000 * 500 / 499)\n        : 1/10000 * (100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2-1] + G['bonusant2']) / 5000 * 500 / 499));\n    \n    return exponent\n}\n\nconst antUpgradeTexts = [\n    () => \"ALL Ants work at \" + format(Decimal.pow(1.12 + 1 / 1000 * player.researches[101], player.antUpgrades[1-1] + G['bonusant1']), 2) + \"x speed.\",\n    () => \"Crumb --> Coin exponent is ^\" + format(calculateCrumbToCoinExp()),\n    () => \"Tax growth is multiplied by \" + format(0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3-1] + G['bonusant3']), 4),\n    () => \"Accelerator Boosts +\" + format(100 * (calculateSigmoidExponential(20, (player.antUpgrades[4-1] + G['bonusant4']) / 1000 * 20 / 19) - 1), 3) + \"%\",\n    () => \"Multipliers +\" + format(100 * (calculateSigmoidExponential(40, (player.antUpgrades[5-1] + G['bonusant5']) / 1000 * 40 / 39) - 1), 3) + \"%\",\n    () => \"Offerings x\" + format(1 + Math.pow((player.antUpgrades[6-1] + G['bonusant6']), 0.66), 4),\n    () => \"Building Costs scale \" + format(Math.min(9999999,3 * player.antUpgrades[7-1] + 3 * G['bonusant7']),0,true) + \"% slower!\",\n    () => \"Rune EXP is multiplied by \" + format(calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8-1] + G['bonusant8'], 1.1)), 3) + \"!\",\n    () => \"Each rune has +\" + format(1 * Math.min(1e7, (player.antUpgrades[9-1] + G['bonusant9'])),0,true) + \" effective levels.\",\n    () => \"Obtainium x\" + format(1 + 2 * Math.pow((player.antUpgrades[10-1] + G['bonusant10']) / 50, 0.75), 4),\n    () => \"Sacrificing is \" + format(1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11-1] + G['bonusant11']) / 125)), 4) + \"x as effective\",\n    () => \"Global timer is sped up by a factor of \" + format(calculateSigmoid(2, player.antUpgrades[12-1] + G['bonusant12'], 69), 4)\n]\n\nlet repeatAnt: ReturnType<typeof setTimeout> = null;\n\nexport const antRepeat = (i: number) => {\n    clearInt(repeatAnt);\n    repeatAnt = interval(() => updateAntDescription(i), 50);\n}\n\nexport const updateAntDescription = (i: number) => {\n    const el = document.getElementById(\"anttierdescription\")\n    const la = document.getElementById(\"antprice\")\n    const ti = document.getElementById(\"antquantity\")\n    const me = document.getElementById(\"generateant\")\n\n    let priceType = \"Galactic Crumbs\"\n    let tier: FirstToEighth = \"first\"\n    el.textContent = antdesc[\"antdesc\" + i]\n\n    switch (i) {\n        case 1:\n            priceType = \"Particles\";\n            tier = \"first\";\n            me.textContent = \"Generates \" + format(G['antOneProduce'], 5) + \" Crumbs/sec\";\n            break;\n        case 2:\n            tier = \"second\";\n            me.textContent = \"Generates \" + format(G['antTwoProduce'], 5) + \" Workers/sec\";\n            break;\n        case 3:\n            tier = \"third\";\n            me.textContent = \"Generates \" + format(G['antThreeProduce'], 5) + \" Breeders/sec\";\n            break;\n        case 4:\n            tier = \"fourth\";\n            me.textContent = \"Generates \" + format(G['antFourProduce'], 5) + \" MetaBreeders/sec\";\n            break;\n        case 5:\n            tier = \"fifth\";\n            me.textContent = \"Generates \" + format(G['antFiveProduce'], 5) + \" MegaBreeders/sec\";\n            break;\n        case 6:\n            tier = \"sixth\";\n            me.textContent = \"Generates \" + format(G['antSixProduce'], 5) + \" Queens/sec\";\n            break;\n        case 7:\n            tier = \"seventh\";\n            me.textContent = \"Generates \" + format(G['antSevenProduce'], 5) + \" Royals/sec\";\n            break;\n        case 8:\n            tier = \"eighth\";\n            me.textContent = \"Generates \" + format(G['antEightProduce'], 5) + \" ALMIGHTIES/sec\";\n            break;\n    }\n    la.textContent = \"Cost: \" + format(player[`${tier}CostAnts` as const]) + \" \" + priceType\n    ti.textContent = \"Owned: \" + format(player[`${tier}OwnedAnts` as const]) + \" [+\" + format(player[`${tier}GeneratedAnts` as const], 2) + \"]\"\n}\n\nconst getAntCost = (originalCost: Decimal, buyTo: number, index: number) => {\n    --buyTo\n\n    //Determine how much the cost is for buyTo\n    const cost = originalCost\n        .times(Decimal.pow(G['antCostGrowth'][index-1], buyTo))\n        .add(1 * buyTo);\n\n    return cost;\n}\n\nconst getAntUpgradeCost = (originalCost: Decimal, buyTo: number, index: number) => {\n    --buyTo\n\n    const cost = originalCost.times(Decimal.pow(G['antUpgradeCostIncreases'][index-1], buyTo));\n    return cost;\n}\n\n//Note to self: REWRITE THIS SHIT Kevin :3\nexport const buyAntProducers = (pos: FirstToEighth, originalCost: DecimalSource, index: number) => {\n    const sacrificeMult = antSacrificePointsToMultiplier(player.antSacrificePoints);\n    //This is a fucking cool function. This will buymax ants cus why not\n\n    //Things we need: the position of producers, the costvalues, and input var i\n    originalCost = new Decimal(originalCost)\n    //Initiate type of resource used\n    const tag = index === 1 ? 'reincarnationPoints' : 'antPoints';\n    const key = `${pos}OwnedAnts` as const;\n\n    let buyTo = player[key] + 1;\n    let cashToBuy = getAntCost(originalCost, buyTo, index);\n    while (player[tag].gte(cashToBuy)) {\n        // Multiply by 4 until the desired amount. Iterate from there\n        buyTo = buyTo * 4;\n        cashToBuy = getAntCost(originalCost, buyTo, index);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n        if (getAntCost(originalCost, buyTo - stepdown, index).lte(player[tag])) {\n            stepdown = Math.floor(stepdown / 2);\n        } else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n\n    if (!player.antMax) {\n        if (1 + player[key] < buyTo) {\n            buyTo = player[key] + 1;\n        }\n    }\n    // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\n    let buyFrom = Math.max(buyTo - 7, player[key] + 1);\n    let thisCost = getAntCost(originalCost, buyFrom, index);\n    while (buyFrom <= buyTo && player[tag].gte(getAntCost(originalCost, buyFrom, index))) {\n        player[tag] = player[tag].sub(thisCost);\n        player[key] = buyFrom;\n        buyFrom = buyFrom + 1;\n        thisCost = getAntCost(originalCost, buyFrom, index);\n        player[`${pos}CostAnts` as const] = thisCost;\n    }\n    if (player.reincarnationPoints.lt(0)) {\n        player.reincarnationPoints = new Decimal(\"0\")\n    }\n    if (player.antPoints.lt(0)) {\n        player.antPoints = new Decimal(\"0\")\n    }\n    calculateAntSacrificeELO();\n\n    const achRequirements = [2, 6, 20, 100, 500, 6666, 77777];\n    for (let j = 0; j < achRequirements.length; j++) {\n        if (sacrificeMult > achRequirements[j] && player[`${G['ordinals'][j + 1 as ZeroToSeven]}OwnedAnts` as const] > 0 && player.achievements[176 + j] === 0) {\n            achievementaward(176 + j)\n        }\n    }\n\n    if(player.firstOwnedAnts > 6.9e7){\n        player.firstOwnedAnts = 6.9e7\n    }\n}\n\nexport const buyAntUpgrade = (originalCost: DecimalSource, auto: boolean, index: number) => {\n    if (player.currentChallenge.ascension !== 11) {\n        originalCost = new Decimal(originalCost);\n        let buyTo = 1 + player.antUpgrades[index-1];\n        let cashToBuy = getAntUpgradeCost(originalCost, buyTo, index);\n        while (player.antPoints.gte(cashToBuy)) {\n            // Multiply by 4 until the desired amount. Iterate from there\n            buyTo = buyTo * 4;\n            cashToBuy = getAntUpgradeCost(originalCost, buyTo, index);\n        }\n        let stepdown = Math.floor(buyTo / 8);\n        while (stepdown !== 0) {\n            if (getAntUpgradeCost(originalCost, buyTo - stepdown, index).lte(player.antPoints)) {\n                stepdown = Math.floor(stepdown / 2);\n            } else {\n                buyTo = buyTo - stepdown;\n            }\n        }\n        if (!player.antMax) {\n            if (player.antUpgrades[index-1] + 1 < buyTo) {\n                buyTo = 1 + player.antUpgrades[index-1]\n            }\n        }\n        // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\n        let buyFrom = Math.max(buyTo - 7, 1 + player.antUpgrades[index-1]);\n        let thisCost = getAntUpgradeCost(originalCost, buyFrom, index);\n        while (buyFrom <= buyTo && player.antPoints.gte(thisCost)) {\n            player.antPoints = player.antPoints.sub(thisCost);\n            player.antUpgrades[index-1] = buyFrom;\n            buyFrom = buyFrom + 1;\n            thisCost = getAntUpgradeCost(originalCost, buyFrom, index);\n        }\n        calculateAnts();\n        calculateRuneLevels();\n        calculateAntSacrificeELO();\n        if (!auto) {\n            antUpgradeDescription(index)\n        }\n        if (player.antUpgrades[12-1] === 1 && index === 12) {\n            revealStuff()\n        }\n    }\n}\n\nexport const antUpgradeDescription = (i: number) => {\n    const el = document.getElementById(\"antspecies\")\n    const al = document.getElementById(\"antlevelbonus\");\n    const la = document.getElementById(\"antupgradedescription\")\n    const ti = document.getElementById(\"antupgradecost\")\n    const me = document.getElementById(\"antupgradeeffect\")\n\n    const content1 = antspecies[\"antspecies\" + i];\n    const content2 = antupgdesc[\"antupgdesc\" + i];\n    const bonuslevel = G[`bonusant${i}` as keyof typeof G] as typeof G['bonusant1'];\n\n    const c11 = player.currentChallenge.ascension === 11 ? 999 : 0;\n\n    el.childNodes[0].textContent = content1 + \" Level \" + format(player.antUpgrades[i-1])\n    al.textContent = \" [+\" + format(Math.min(player.antUpgrades[i-1] + c11, bonuslevel)) + \"]\"\n    la.textContent = content2\n    ti.textContent = \"Cost: \" + format(Decimal.pow(G['antUpgradeCostIncreases'][i-1], player.antUpgrades[i-1] * G['extinctionMultiplier'][player.usedCorruptions[10]]).times(G['antUpgradeBaseCost'][i-1])) + \" Galactic Crumbs\"\n    me.textContent = \"CURRENT EFFECT: \" + antUpgradeTexts[i - 1]()\n}\n\n//function buyAntUpgrade(i,auto) {\n//    if(player.antPoints.gte(Decimal.pow(10, G['antUpgradeCostIncreases'][i] * player.antUpgrades[i-1]).times(G['antUpgradeBaseCost'][i]))){\n//        player.antPoints = player.antPoints.sub(Decimal.pow(10, G['antUpgradeCostIncreases'][i] * player.antUpgrades[i-1]).times(G['antUpgradeBaseCost'][i]));\n//        player.antUpgrades[i-1]++\n//        calculateAnts();\n//        calculateRuneLevels();\n//        calculateAntSacrificeELO();\n\n\n//        if(!auto){antUpgradeDescription(i)}\n//        if(player.antUpgrades[12-1] == 1 && i == 12){revealStuff()}\n//    }\n//    else{}\n//}\n\nexport const antSacrificePointsToMultiplier = (points: number) => {\n    let multiplier = Math.pow(1 + points / 5000, 2)\n    multiplier *= (1 + 0.2 * Math.log(1 + points) / Math.log(10))\n    if (player.achievements[174] > 0) {\n        multiplier *= (1 + 0.4 * Math.log(1 + points) / Math.log(10))\n    }\n    return multiplier;\n}\n\nexport const showSacrifice = () => {\n    const sacRewards = calculateAntSacrificeRewards();\n    document.getElementById(\"antSacrificeSummary\").style.display = \"block\"\n\n    document.getElementById(\"antELO\").childNodes[0].textContent = \"Your Ant ELO is \"\n    document.getElementById(\"ELO\").textContent = format(G['antELO'], 2,)\n    document.getElementById(\"effectiveELO\").textContent = \"[\" + format(G['effectiveELO'], 2, false) + \" effective]\"\n\n    document.getElementById(\"antSacrificeMultiplier\").childNodes[0].textContent = \"Ant Multiplier x\" + format(antSacrificePointsToMultiplier(player.antSacrificePoints), 3, false) + \" --> \"\n    document.getElementById(\"SacrificeMultiplier\").textContent = \"x\" + format(antSacrificePointsToMultiplier(player.antSacrificePoints + sacRewards.antSacrificePoints), 3, false)\n\n    document.getElementById(\"SacrificeUpgradeMultiplier\").textContent = format(G['upgradeMultiplier'], 3, true) + \"x\"\n    document.getElementById(\"SacrificeTimeMultiplier\").textContent = format(G['timeMultiplier'], 3, true) + \"x\"\n    document.getElementById(\"antSacrificeOffering\").textContent = \"+\" + format(sacRewards.offerings)\n    document.getElementById(\"antSacrificeObtainium\").textContent = \"+\" + format(sacRewards.obtainium)\n    if (player.challengecompletions[9] > 0) {\n        document.getElementById(\"antSacrificeTalismanShard\").textContent = \"+\" + format(sacRewards.talismanShards) + \" [>500 ELO]\"\n        document.getElementById(\"antSacrificeCommonFragment\").textContent = \"+\" + format(sacRewards.commonFragments) + \" [>750 ELO]\"\n        document.getElementById(\"antSacrificeUncommonFragment\").textContent = \"+\" + format(sacRewards.uncommonFragments) + \" [>1,000 ELO]\"\n        document.getElementById(\"antSacrificeRareFragment\").textContent = \"+\" + format(sacRewards.rareFragments) + \" [>1,500 ELO]\"\n        document.getElementById(\"antSacrificeEpicFragment\").textContent = \"+\" + format(sacRewards.epicFragments) + \" [>2,000 ELO]\"\n        document.getElementById(\"antSacrificeLegendaryFragment\").textContent = \"+\" + format(sacRewards.legendaryFragments) + \" [>3,000 ELO]\"\n        document.getElementById(\"antSacrificeMythicalFragment\").textContent = \"+\" + format(sacRewards.mythicalFragments) + \" [>5,000 ELO]\"\n    }\n}\n\nexport const sacrificeAnts = async (auto = false) => {\n    let p = true\n\n    if (player.antPoints.gte(\"1e40\")) {\n        if (!auto && player.antSacrificePoints < 100 && player.toggles[32]) {\n            p = await Confirm(\"This resets your Crumbs, Ants and Ant Upgrades in exchange for some multiplier and resources. Continue?\")\n        }\n        if (p) {\n            const antSacrificePointsBefore = player.antSacrificePoints;\n\n            const sacRewards = calculateAntSacrificeRewards();\n            player.antSacrificePoints += sacRewards.antSacrificePoints;\n            player.runeshards += sacRewards.offerings;\n            player.researchPoints += sacRewards.obtainium;\n\n            const historyEntry: ResetHistoryEntryAntSacrifice = {\n                date: Date.now(),\n                seconds: player.antSacrificeTimer,\n                kind: 'antsacrifice',\n                offerings: sacRewards.offerings,\n                obtainium: sacRewards.obtainium,\n                antSacrificePointsBefore: antSacrificePointsBefore,\n                antSacrificePointsAfter: player.antSacrificePoints,\n                baseELO: G['antELO'],\n                effectiveELO: G['effectiveELO'],\n                crumbs: player.antPoints.toString(),\n                crumbsPerSecond: G['antOneProduce'].toString(),\n            };\n\n            if (player.challengecompletions[9] > 0) {\n                player.talismanShards += sacRewards.talismanShards;\n                player.commonFragments += sacRewards.commonFragments;\n                player.uncommonFragments += sacRewards.uncommonFragments;\n                player.rareFragments += sacRewards.rareFragments;\n                player.epicFragments += sacRewards.epicFragments;\n                player.legendaryFragments += sacRewards.legendaryFragments;\n                player.mythicalFragments += sacRewards.mythicalFragments;\n            }\n\n            // Refer to analogous code in Syngergism.js, function tick().\n            if (player.shopUpgrades.offeringAuto > 0.5 && player.autoSacrificeToggle) {\n                // Since ants boost rune EXP, we need to auto-spend offerings NOW, before reset, if cube-tier auto-spend is enabled.\n                if (player.cubeUpgrades[20] === 1 && player.runeshards >= 5) {\n                    let unmaxed = 0;\n                    for (let i = 1; i <= 5; i++) {\n                        if (player.runelevels[i - 1] < calculateMaxRunes(i))\n                            unmaxed++;\n                    }\n                    if (unmaxed > 0) {\n                        const baseAmount = Math.floor(player.runeshards / unmaxed);\n                        for (let i = 1; i <= 5; i++) {\n                            redeemShards(i, true, baseAmount);\n                        }\n                        player.sacrificeTimer = 0;\n                    }\n                }\n                // Other cases don't perform a spend-all and are thus safely handled by the standard tick() function.\n            }\n\n            // Now we're safe to reset the ants.\n            resetAnts();\n            player.antSacrificeTimer = 0;\n            player.antSacrificeTimerReal = 0;\n            updateTalismanInventory();\n            if (player.autoResearch > 0 && player.autoResearchToggle) {\n                const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n                buyResearch(player.autoResearch, true, linGrowth)\n            }\n            calculateAntSacrificeELO();\n\n            Synergism.emit('historyAdd', 'ants', historyEntry);\n        }\n    }\n\n    if (player.mythicalFragments >= 1e11 && player.currentChallenge.ascension === 14 && player.achievements[248] < 1) {\n        achievementaward(248)\n    }\n}\n\nexport const autoBuyAnts = () => {\n    const canAffordUpgrade = (x: number, m: DecimalSource) => player.antPoints.gte(getAntUpgradeCost(new Decimal(G['antUpgradeBaseCost'][x-1]), player.antUpgrades[x-1] + 1, x).times(m))\n    const ach = [176, 176, 177, 178, 178, 179, 180, 180, 181, 182, 182, 145];\n    const cost = [\"100\", \"100\", \"1000\", \"1000\", \"1e5\", \"1e6\", \"1e8\", \"1e11\", \"1e15\", \"1e20\", \"1e40\", \"1e100\"];\n    if (player.currentChallenge.ascension !== 11) {\n        for (let i = 1; i <= ach.length; i++) {\n            const check = i === 12 ? player.researches[ach[i - 1]] : player.achievements[ach[i - 1]];\n            if (check && canAffordUpgrade(i, 2)) {\n                buyAntUpgrade(cost[i - 1], true, i);\n            }\n        }\n    }\n\n    const _ach = [173, 176, 177, 178, 179, 180, 181, 182];\n    const _cost = [\"1e700\", \"3\", \"100\", \"10000\", \"1e12\", \"1e36\", \"1e100\", \"1e300\"];\n    for (let i = 1; i <= _ach.length; i++) {\n        const res = i === 1 ? player.reincarnationPoints : player.antPoints;\n        const m = i === 1 ? 1 : 2; // no multiplier on the first ant cost because it costs particles\n        if (player.achievements[_ach[i - 1]] && res.gte(player[`${G['ordinals'][i - 1 as ZeroToSeven]}CostAnts` as const].times(m))) {\n            buyAntProducers(\n                G['ordinals'][i - 1] as Parameters<typeof buyAntProducers>[0], \n                _cost[i - 1], i\n            );\n        }\n    }\n}\n", "export const version = '2.5.5';\nexport const testing = false;\nexport const lastUpdated = new Date(Date.UTC(2021, 6, 12, 18, 44, 55));\n", "import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { Confirm, revealStuff } from './UpdateHTML';\nimport { calculateTimeAcceleration } from './Calculate';\nimport { Player } from './types/Synergism';\n\n/* === CHANGELOG, 1.21.2021 ===\n1) Offering vals: (level)^2 / 200 ->  level/25\n2) Obtainium vals: (level^2) / 100 -> level/25\n3) Ant Speed: (1.5^level) -> (1.125^level)\n4) Season Pass: (3 * level/100) -> (3 * level/200)\n   Season Pass also now affects tesseracts.\n*/\nexport interface IShopData {\n    price: number\n    priceIncrease: number\n    maxLevel: number\n    type: string\n    refundable: boolean\n    refundMinimumLevel: number\n    description: string\n}\n\nexport const shopData: Record<keyof Player['shopUpgrades'], IShopData> = {\n    offeringPotion: {\n        price: 100,\n        priceIncrease: 0,\n        maxLevel: 999999,\n        type: \"consumable\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Instantly gain 2 real life hours of Offerings, based on your all time best Offerings/sec and speed acceleration!\",\n    },\n    obtainiumPotion: {\n        price: 100,\n        priceIncrease: 0,\n        maxLevel: 999999,\n        type: \"consumable\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Instantly gain 2 real life hours of Obtainium, based on your all time best Obtainium/sec and speed acceleration!\",\n    },\n    offeringEX: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Gain +4% more offerings from all sources!\",\n    },\n    offeringAuto: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 1,\n        description: \"Automatically pour Offerings into a rune. 1st level unlocks feature, and each level increases Offering gain by 2%. Every second, 2^(Level) levels worth of offerings are spent.\",\n    },\n    obtainiumEX: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Gain +4% more obtainium from all sources!\",\n    },\n    obtainiumAuto: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 1,\n        description: \"Automatically pour Obtainium into a research. 1st level unlocks feature, and each level increases Obtainium gain by 2%. Every reincarnation, dump all Obtainium into research until maxed.\",\n    },\n    instantChallenge: {\n        price: 300,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"T and R challenges don't cause resets if retry is enabled and gain up to 10 completions per tick. Additionally, instantly gain T challenge completions up to highest completed when exiting R challenges.\"\n    },\n    antSpeed: {\n        price: 200,\n        priceIncrease: 25,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Each level gives a 1.125x speed multiplier to all Ant tiers' production! (Uncorruptable!) Short and simple.\"\n    },\n    cashGrab: {\n        price: 100,\n        priceIncrease: 40,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"This is a cash grab but it gives a couple cool stats. +1% production per level to Offerings and Obtainium.\",\n    },\n    shopTalisman: {\n        price: 1500,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Permanently unlock a Shop talisman!\",\n    },\n    seasonPass: {\n        price: 500,\n        priceIncrease: 75,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Wow! Cubes is giving you a deal: Buy this totally fair Season Pass and gain +1.5% cubes and tesseracts per level when you ascend!\",\n    },\n    challengeExtension: {\n        price: 500,\n        priceIncrease: 250,\n        maxLevel: 5,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Using some amazing trick, you manage to increase your Reincarnation Challenge cap by 2 for each level!\",\n    },\n    challengeTome: {\n        price: 500,\n        priceIncrease: 250,\n        maxLevel: 15,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"The extended cut: This fifth forgotten tome gives you an additional 20 Million exponent reduction on the Challenge 10 requirement per level. Past 60 completions of challenge 9 or 10, this will also reduce the scaling factor by 1% per level.\",\n    },\n    cubeToQuark: {\n        price: 2000,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Are your quark gains from Cubes wimpy? Well, buy this for +50% quarks from opening Wow! Cubes, forever!\"\n    },\n    tesseractToQuark: {\n        price: 3500,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Are your quark gains from Tesseracts wimpy? Well, buy this for +50% quarks from opening Wow! Tesseracts, forever!\"\n    },\n    hypercubeToQuark: {\n        price: 5000,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Are your quark gains from Hypercubes wimpy? Well, buy this for +50% quarks from opening Wow! Hypercubes, forever!\"\n    },\n    seasonPass2: {\n        price: 2500,\n        priceIncrease: 250,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Five times the price gouge, twice the fun! +1% Wow! Hypercubes and Platonic Cubes per level.\"\n    },\n    seasonPass3: {\n        price: 5000,\n        priceIncrease: 500,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Okay, now this is just ridiculous. +1% Wow! Hepteracts and Octeracts per level!\"\n    },\n    chronometer: {\n        price: 2000,\n        priceIncrease: 500,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"You know, those ascensions are kinda slow. Why don't I give you a +1% speedup to the timer per level?\"\n    },\n    infiniteAscent: {\n        price: 50000,\n        priceIncrease: 9999999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Okay, for an exorbitant amount, you can obtain the 6th rune, which gives +20% Quarks and +75% all cube types when maxed!\"\n    },\n    calculator: {\n        price: 1000,\n        priceIncrease: 500,\n        maxLevel: 5,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 1,\n        description: \"The PL-AT can do addition in the blink of an eye. Not much else though. +14% Quarks from using code 'add' per level, the first level provides the answer and the final level does it automatically!\",\n    },\n    calculator2: {\n        price: 3000,\n        priceIncrease: 1000,\n        maxLevel: 12,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"The PL-AT X has improved memory capacity, allowing you to store 2 additional uses to code 'add' per level. Final level makes 'add' give 25% more Quarks!\"\n    },\n    calculator3: {\n        price: 10000,\n        priceIncrease: 2000,\n        maxLevel: 10,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: `The PL-AT \u03A9 is infused with some Unobtainium, which is epic! But furthermore, it reduces the variance of Quarks by code 'add' by 10% per level, which makes you more likely to get the maximum multiplier. It also has the ability to give +60 seconds to Ascension Timer per level using that code.` \n    },\n    constantEX: {\n        price: 100000,\n        priceIncrease: 899999,\n        maxLevel: 2,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: `The merchant has one last trick up its sleeve: It can augment your second constant upgrade to be marginally better, but it'll cost an arm and a leg! Instead of the cap being 10% (or 11% with achievements) it will be raised by 1% per level.`\n    },\n    powderEX: {\n        price: 1000,\n        priceIncrease: 750,\n        maxLevel: 50,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: `Platonic himself gives you 2% better conversion rate on Overflux Orbs to Powder per level. This activates when Orbs expire.`\n    }\n}\n\n//Names of shop upgrades || Top row indicates potions, and all other upgrades are labeled in order.\n//If you are adding more upgrades please make sure the order of labelled upgrades is correct!\ntype ShopUpgradeNames = 'offeringPotion' | 'obtainiumPotion' |\n                        'offeringEX' | 'offeringAuto' | 'obtainiumEX' | 'obtainiumAuto' | 'instantChallenge' |\n                        'antSpeed' | 'cashGrab' | 'shopTalisman' | 'seasonPass' | 'challengeExtension' |\n                        'challengeTome' | 'cubeToQuark' | 'tesseractToQuark' | 'hypercubeToQuark' |\n                        'seasonPass2' | 'seasonPass3' | 'chronometer' | 'infiniteAscent' | 'calculator' |\n                        'calculator2' | 'calculator3' | 'constantEX' | 'powderEX'\n\nexport const getShopCosts = (input: ShopUpgradeNames) => {\n    if (shopData[input].type === \"consumable\" || shopData[input].maxLevel === 1){\n        return shopData[input].price\n    }\n    else {\n        const priceIncreaseMult = player.shopUpgrades[input]\n        return shopData[input].price + shopData[input].priceIncrease * priceIncreaseMult\n    }\n}\n\nexport const shopDescriptions = (input: ShopUpgradeNames) => {\n    const rofl = document.getElementById(\"quarkdescription\");\n    const lol = document.getElementById(\"quarkeffect\");\n    const refundable = document.getElementById('quarkRefundable')\n\n    rofl.textContent = shopData[input].description;\n\n    shopData[input].refundable ?\n        refundable.textContent = 'This item is refundable! Will be set to level ' + shopData[input].refundMinimumLevel + ' when refunded.':\n        refundable.textContent = 'This item CANNOT be refunded! Take caution.'\n\n    switch (input) {\n        case \"offeringPotion\":\n            lol.textContent = \"Gain \" + format((7200 * player.offeringpersecond * calculateTimeAcceleration()), 0, true) + \" Offerings.\"\n            break;\n        case \"obtainiumPotion\":\n            lol.textContent = \"Gain \" + format((7200 * player.maxobtainiumpersecond * calculateTimeAcceleration()), 0, true) + \" Obtainium.\";\n            break;\n        case \"offeringEX\":\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(4 * player.shopUpgrades.offeringEX,2,true) + \"% more Offerings!\"\n            break;\n        case \"offeringAuto\":\n            lol.textContent = \"CURRENT Effect: Per 10 seconds, pour \" + format(Math.pow(2, 1 + player.shopUpgrades.offeringAuto)) + \" Offerings. +\" + format(2 * player.shopUpgrades.offeringAuto, 2) + \"% Offerings.\"\n            break;\n        case \"obtainiumEX\":\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(4 * player.shopUpgrades.obtainiumEX,2,true) + \"% more Obtainium!\"\n            break;\n        case \"obtainiumAuto\":\n            lol.textContent = \"CURRENT Effect: Try to upgrade research each reincarnation, and gain \" + format(player.shopUpgrades.obtainiumAuto * 2, 2) + \"% more Obtainium.\"\n            break;\n        case \"instantChallenge\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\"\n            break;\n        case \"antSpeed\":\n            lol.textContent = \"CURRENT Effect: All Ants' Speed x\" + format(Math.pow(1.125, player.shopUpgrades.antSpeed), 2)\n            break;\n        case \"cashGrab\":\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(player.shopUpgrades.cashGrab, 2) + \"% more Obtainium and Offerings!\"\n            break;\n        case \"shopTalisman\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\"\n            break;\n        case \"seasonPass\":\n            lol.textContent = \"CURRENT Effect: Ascensions give \" + format(3 / 2 * player.shopUpgrades.seasonPass) + \"% more Wow! Cubes and Tesseracts.\"\n            break;\n        case \"challengeExtension\":\n            lol.textContent = \"CURRENT Effect: Reincarnation Challenges may be completed an additional \" + format(2*player.shopUpgrades.challengeExtension) + \" times.\"\n            break;\n        case \"challengeTome\":\n            lol.textContent = \"CURRENT Effect: Challenge 10 Exponent Requirement reduced by \" + format(20*player.shopUpgrades.challengeTome) + \" Million. Past 60 completions of C9 or C10 the scaling multiplier is [completions * \" + format(1 - player.shopUpgrades.challengeTome / 100, 2, true) + \"]\"\n            break;\n        case \"cubeToQuark\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\"\n            break;\n        case \"tesseractToQuark\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\"\n            break;\n        case \"hypercubeToQuark\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\"\n            break;\n        case \"seasonPass2\":\n            lol.textContent = \"CURRENT Effect: Ascensions give \" + format(player.shopUpgrades.seasonPass2) + \"% more Hypercubes and Platonic Cubes.\"\n            break;\n        case \"seasonPass3\":\n            lol.textContent = \"CURRENT Effect: Ascensions give \" + format(player.shopUpgrades.seasonPass3) + \"% more Hepteracts and Octarets.\"\n            break;\n        case \"chronometer\":\n            lol.textContent = \"CURRENT Effect: Ascension timer runs \" + format(player.shopUpgrades.chronometer) + \"% faster.\"\n            break;\n        case \"infiniteAscent\":\n            lol.textContent = \"CURRENT Effect: Idk, depends if you bought it or not.\"\n            break;\n        case \"calculator\":\n            lol.textContent = \"CURRENT Effect: Code 'add' provides \" + format(14 * player.shopUpgrades.calculator) + \"% more Quarks. AutoAnswer: \" + (player.shopUpgrades.calculator > 0) + \", AutoFill: \" + (player.shopUpgrades.calculator == 5);\n            break;\n        case \"calculator2\":\n            lol.textContent = \"CURRENT Effect: Code 'add' has \" + format(2 * player.shopUpgrades.calculator2) + \" more capacity. 'add' uses generate \" + format((player.shopUpgrades.calculator2 === shopData['calculator2'].maxLevel) ? 25: 0) + \"% more Quarks.\";\n            break;\n        case \"calculator3\":\n            lol.textContent = \"CURRENT Effect: Code 'add' variance -\" + format(10 * player.shopUpgrades.calculator3) + \"%, Each use gives \" + format(60 * player.shopUpgrades.calculator3) + \" seconds to Ascension Timer.\";\n            break;\n        case \"constantEX\":\n            lol.textContent = \"CURRENT Effect: +\" + format(0.01 * player.shopUpgrades.constantEX, 2, true) + \" effect on Constant Upgrade 2\";\n            break;\n        case \"powderEX\":\n            lol.textContent = \"CURRENT Effect: +\" + format(2 * player.shopUpgrades.powderEX) + \"% Overflux Powder gained when Overflux Orbs expire.\"\n    }\n\n}\n\nexport const buyShopUpgrades = async (input: ShopUpgradeNames) => {\n    let p = true;\n    if (G['shopConfirmation']) {\n        p = await Confirm(\"Are you sure you'd like to purchase \" + input + \" for \" + format(getShopCosts(input)) + \" Quarks? Press 'OK' to finalize purchase.\");\n    }\n\n    if (p) {\n        if (Number(player.worlds) >= getShopCosts(input) && player.shopUpgrades[input] < shopData[input].maxLevel) {\n            player.worlds.sub(getShopCosts(input));\n            player.shopUpgrades[input] += 1\n            console.log(\"purchase successful for 1 level of '\" + input + \"'!\")\n        }\n        else{\n            console.log(\"purchase attempted for 1 level of '\" + input + \"' but failed!\")    \n        }\n    }\n    revealStuff();\n}\n\nexport const useConsumable = async (input: ShopUpgradeNames) => {    \n    const p = G['shopConfirmation']\n        ? await Confirm('Would you like to use this potion?')\n        : true;\n\n    if (p) {\n        switch (input) {\n            case \"offeringPotion\":\n                if (player.shopUpgrades.offeringPotion > 0.5) {\n                    player.shopUpgrades.offeringPotion -= 1;\n                    player.runeshards += Math.floor(7200 * player.offeringpersecond * calculateTimeAcceleration());\n                }\n                break;\n            case \"obtainiumPotion\":\n                if (player.shopUpgrades.obtainiumPotion > 0.5) {\n                    player.shopUpgrades.obtainiumPotion -= 1;\n                    player.researchPoints += Math.floor(7200 * player.maxobtainiumpersecond * calculateTimeAcceleration());\n                }\n                break;\n        }\n    }\n}\nexport const resetShopUpgrades = async () => {\n    const p = G['shopConfirmation']\n        ? await Confirm(\"This will fully refund most of your permanent upgrades for an upfront cost of 15 Quarks. Would you like to do this?\")\n        : true;\n\n    if (p) {\n        player.worlds.sub(15);\n        let initialQuarks = player.worlds;\n        for(const shopItem in shopData){\n            const key = shopItem as keyof typeof shopData;\n            if(shopData[key].refundable && player.shopUpgrades[key] > shopData[key].refundMinimumLevel){\n\n                // Determines how many quarks one would not be refunded, based on minimum refund level\n                const doNotRefund = shopData[key].price * shopData[key].refundMinimumLevel +\n                                shopData[key].priceIncrease * (shopData[key].refundMinimumLevel) * (shopData[key].refundMinimumLevel - 1) / 2;\n                \n                //Refunds Quarks based on the shop level and price vals\n                player.worlds.add(\n                    shopData[key].price * player.shopUpgrades[key] +\n                    shopData[key].priceIncrease * (player.shopUpgrades[key]) * (player.shopUpgrades[key] - 1) / 2\n                    - doNotRefund,\n                    false\n                );\n                console.log(\"Successfully refunded \" + format(+player.worlds - +initialQuarks) + \" Quarks from '\" + shopItem + \"'. You now have \" + format(player.worlds) + \" Quarks.\");\n                player.shopUpgrades[key] = shopData[key].refundMinimumLevel;\n                initialQuarks = player.worlds;\n            }\n        }\n    }\n    /*if (p && player.worlds >= 15) {\n        player.worlds -= 15;\n        Object.keys(shopData).forEach(function)\n        revealStuff();\n    }*/\n}\n", "import Decimal from 'break_infinity.js';\nimport { Globals as G } from './Variables';\nimport { player, format, formatTimeShort } from './Synergism';\nimport { version } from './Config';\nimport { CalcECC } from './Challenges';\nimport { calculateSigmoidExponential, calculateMaxRunes, calculateRuneExpToLevel, calculateSummationLinear, calculateRecycleMultiplier, calculateCorruptionPoints, CalcCorruptionStuff, calculateAutomaticObtainium, calculateTimeAcceleration } from './Calculate';\nimport { displayRuneInformation } from './Runes';\nimport { showSacrifice } from './Ants';\nimport { sumContents } from './Utility';\nimport { getShopCosts, shopData } from './Shop';\nimport { quarkHandler } from './Quark';\nimport type { Player, ZeroToFour } from './types/Synergism';\n\nexport const visualUpdateBuildings = () => {\n    if (G['currentTab'] !== \"buildings\") {\n        console.log(\"buildings update happened not in buildings\")\n        return;\n    }\n    \n    //When you're in Building --> Coin, update these.\n    if (G['buildingSubTab'] === \"coin\") {\n        // For the display of Coin Buildings\n        const upper = ['produceFirst', 'produceSecond', 'produceThird', 'produceFourth', 'produceFifth'] as const;\n        const names = [null, 'Workers', 'Investments', 'Printers', 'Coin Mints', 'Alchemies']\n\n        // Placeholder is of form \"produce+upper[i]\", which feeds info place in the form of window function\n        let percentage = new Decimal()\n\n        let totalProductionDivisor = new Decimal(G['produceTotal']);\n        if (totalProductionDivisor.equals(0)) {\n            totalProductionDivisor = new Decimal(1);\n        }\n\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i - 1]];\n            const ith = G['ordinals'][i - 1 as ZeroToFour];\n\n            document.getElementById(\"buildtext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[`${ith}OwnedCoin` as const], 0, true) + \" [+\" + format(player[`${ith}GeneratedCoin` as const]) + \"]\"\n            document.getElementById(\"buycoin\" + i).textContent = \"Cost: \" + format(player[`${ith}CostCoin` as const]) + \" coins.\"\n            percentage = percentage.fromMantissaExponent(place.mantissa / totalProductionDivisor.mantissa, place.exponent - totalProductionDivisor.exponent).times(100)\n            document.getElementById(\"buildtext\" + (2 * i)).textContent = \"Coins/Sec: \" + format((place.dividedBy(G['taxdivisor'])).times(40), 2) + \" [\" + format(percentage, 3) + \"%]\"\n        }\n\n        document.getElementById(\"buildtext11\").textContent = \"Accelerators: \" + format(player.acceleratorBought, 0, true) + \" [+\" + format(G['freeAccelerator'], 0, true) + \"]\"\n        document.getElementById(\"buildtext12\").textContent = \"Acceleration Power: \" + ((G['acceleratorPower'] - 1) * (100)).toPrecision(4) + \"% || Acceleration Multiplier: \" + format(G['acceleratorEffect'], 2) + \"x\"\n        document.getElementById(\"buildtext13\").textContent = \"Multipliers: \" + format(player.multiplierBought, 0, true) + \" [+\" + format(G['freeMultiplier'], 0, true) + \"]\"\n        document.getElementById(\"buildtext14\").textContent = \"Multiplier Power: \" + G['multiplierPower'].toPrecision(4) + \"x || Multiplier: \" + format(G['multiplierEffect'], 2) + \"x\"\n        document.getElementById(\"buildtext15\").textContent = \"Accelerator Boost: \" + format(player.acceleratorBoostBought, 0, true) + \" [+\" + format(G['freeAcceleratorBoost'], 0, false) + \"]\"\n        document.getElementById(\"buildtext16\").textContent = \"Reset Diamonds and Prestige Upgrades, but add \" + (G['tuSevenMulti'] * (1 + player.researches[16] / 50) * (1 + CalcECC('transcend', player.challengecompletions[2]) / 100)).toPrecision(4) + \"% Acceleration Power and 5 free Accelerators.\"\n        document.getElementById(\"buyaccelerator\").textContent = \"Cost: \" + format(player.acceleratorCost) + \" coins.\"\n        document.getElementById(\"buymultiplier\").textContent = \"Cost: \" + format(player.multiplierCost) + \" coins.\"\n        document.getElementById(\"buyacceleratorboost\").textContent = \"Cost: \" + format(player.acceleratorBoostCost) + \" Diamonds.\"\n\n        // update the tax text\n        let warning = \"\";\n        if (player.reincarnationCount > 0.5) {\n            warning = `Your tax also caps your Coin gain at ${format(Decimal.pow(10, G['maxexponent'] - Decimal.log(G['taxdivisorcheck'], 10)))}/s.`\n        }\n        document.getElementById(\"taxinfo\").textContent =\n            `Due to your excessive wealth, coin production is divided by ${format(G['taxdivisor'], 2)} to pay taxes! ${warning}`\n    }\n\n    if (G['buildingSubTab'] === \"diamond\") {\n        // For the display of Diamond Buildings\n        const upper = ['produceFirstDiamonds', 'produceSecondDiamonds', 'produceThirdDiamonds', 'produceFourthDiamonds', 'produceFifthDiamonds'] as const;\n        const names = [null, 'Refineries', 'Coal Plants', 'Coal Rigs', 'Pickaxes', 'Pandoras Boxes']\n        const perSecNames = [null, \"Crystal/sec\", \"Ref./sec\", \"Plants/sec\", \"Rigs/sec\", \"Pickaxes/sec\"]\n\n        document.getElementById(\"prestigeshardinfo\").textContent = \"You have \" + format(player.prestigeShards, 2) + \" Crystals, multiplying Coin production by \" + format(G['prestigeMultiplier'], 2) + \"x.\"\n\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i-1]];\n            const ith = G['ordinals'][i - 1 as ZeroToFour];\n\n            document.getElementById(\"prestigetext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[`${ith}OwnedDiamonds` as const], 0, true) + \" [+\" + format(player[`${ith}GeneratedDiamonds` as const], 2) + \"]\"\n            document.getElementById(\"prestigetext\" + (2 * i)).textContent = perSecNames[i] + \": \" + format((place).times(40), 2)\n            document.getElementById(\"buydiamond\" + i).textContent = \"Cost: \" + format(player[`${ith}CostDiamonds` as const], 2) + \" Diamonds\"\n        }\n\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n            const p = Decimal.pow(10, Decimal.log(G['prestigePointGain'].add(1), 10) - Decimal.log(player.prestigePoints.sub(1), 10))\n            document.getElementById(\"autoprestige\").textContent = \"Prestige when your Diamonds can increase by a factor \" + format(Decimal.pow(10, player.prestigeamount)) + \" [Toggle number above]. Current Multiplier: \" + format(p) + \".\"\n        }\n        if (player.resettoggle1 === 2) {\n            document.getElementById(\"autoprestige\").textContent = \"Prestige when the autotimer is at least \" + (player.prestigeamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].prestige, 1) + \"s.\"\n        }\n    }\n\n    if (G['buildingSubTab'] === \"mythos\") {\n        // For the display of Mythos Buildings\n        const upper = ['produceFirstMythos', 'produceSecondMythos', 'produceThirdMythos', 'produceFourthMythos', 'produceFifthMythos'] as const;\n        const names = [null, 'Augments', 'Enchantments', 'Wizards', 'Oracles', 'Grandmasters']\n        const perSecNames = [null, \"Shards/sec\", \"Augments/sec\", \"Enchantments/sec\", \"Wizards/sec\", \"Oracles/sec\"]\n\n        document.getElementById(\"transcendshardinfo\").textContent = \"You have \" + format(player.transcendShards, 2) + \" Mythos Shards, providing \" + format(G['totalMultiplierBoost'], 0, true) + \" Multiplier Power boosts.\"\n\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i-1]];\n            const ith = G['ordinals'][i - 1 as ZeroToFour];\n\n            document.getElementById(\"transcendtext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[`${ith}OwnedMythos` as const], 0, true) + \" [+\" + format(player[`${ith}GeneratedMythos` as const], 2) + \"]\"\n            document.getElementById(\"transcendtext\" + (2 * i)).textContent = perSecNames[i] + \": \" + format((place).times(40), 2)\n            document.getElementById(\"buymythos\" + i).textContent = \"Cost: \" + format(player[`${ith}CostMythos` as const], 2) + \" Mythos\"\n        }\n\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n            document.getElementById(\"autotranscend\").textContent = \"Prestige when your Mythos can increase by a factor \" + format(Decimal.pow(10, player.transcendamount)) + \" [Toggle number above]. Current Multiplier: \" + format(Decimal.pow(10, Decimal.log(G['transcendPointGain'].add(1), 10) - Decimal.log(player.transcendPoints.add(1), 10)), 2) + \".\"\n        }\n        if (player.resettoggle2 === 2) {\n            document.getElementById(\"autotranscend\").textContent = \"Transcend when the autotimer is at least \" + (player.transcendamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].transcension, 1) + \"s.\"\n        }\n    }\n\n    if (G['buildingSubTab'] === \"particle\") {\n\n        // For the display of Particle Buildings\n        const upper = ['FirstParticles', 'SecondParticles', 'ThirdParticles', 'FourthParticles', 'FifthParticles'] as const;\n        const names = ['Protons', 'Elements', 'Pulsars', 'Quasars', 'Galactic Nuclei'];\n        const perSecNames = [\"Atoms/sec\", \"Protons/sec\", \"Elements/sec\", \"Pulsars/sec\", \"Quasars/sec\"]\n\n        for (let i = 1; i <= 5; i++) {\n            const ith = G['ordinals'][i - 1 as ZeroToFour];\n            const place = G[`produce${upper[i-1]}` as const];\n\n            document.getElementById(`reincarnationtext${i}`).textContent = \n                `${names[i-1]}: ${format(player[`${ith}OwnedParticles` as const], 0, true)} [+${format(player[`${ith}GeneratedParticles` as const], 2)}]`;\n            document.getElementById(`reincarnationtext${i+5}`).textContent = \n                `${perSecNames[i-1]}: ${format((place).times(40), 2)}`;\n            document.getElementById(`buyparticles${i}`).textContent = \n                `Cost: ${format(player[`${ith}CostParticles` as const], 2)} Particles`;\n        }\n\n        document.getElementById(\"reincarnationshardinfo\").textContent = \"You have \" + format(player.reincarnationShards, 2) + \" Atoms, providing \" + G['buildingPower'].toPrecision(4) + \" Building Power. Multiplier to Coin Production: \" + format(G['reincarnationMultiplier'])\n        document.getElementById(\"reincarnationCrystalInfo\").textContent = \"Thanks to Research 2x14, you also multiply Crystal production by \" + format(Decimal.pow(G['reincarnationMultiplier'], 1 / 50), 3, false)\n        document.getElementById(\"reincarnationMythosInfo\").textContent = \"Thanks to Research 2x15, you also multiply Mythos Shard production by \" + format(Decimal.pow(G['reincarnationMultiplier'], 1 / 250), 3, false)\n\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            document.getElementById(\"autoreincarnate\").textContent = \"Reincarnate when your Particles can increase by a factor \" + format(Decimal.pow(10, player.reincarnationamount)) + \" [Toggle number above]. Current Multiplier: \" + format(Decimal.pow(10, Decimal.log(G['reincarnationPointGain'].add(1), 10) - Decimal.log(player.reincarnationPoints.add(1), 10)), 2) + \".\"\n        }\n        if (player.resettoggle3 === 2) {\n            document.getElementById(\"autoreincarnate\").textContent = \"Reincarnate when the autotimer is at least \" + (player.reincarnationamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].reincarnation, 1) + \"s.\"\n        }\n    }\n\n    if (G['buildingSubTab'] === \"tesseract\") {\n        const names = [null, 'Dot', 'Vector', 'Three-Space', 'Bent Time', 'Hilbert Space']\n        const perSecNames = [null, '+Constant/sec', 'Dot/sec', 'Vector/sec', 'Three-Space/sec', 'Bent Time/sec']\n        for (let i = 1; i <= 5; i++) {\n            const ascendBuildingI = `ascendBuilding${i as 1|2|3|4|5}` as const;\n            document.getElementById(\"ascendText\" + i).textContent = names[i] + \": \" + format(player[ascendBuildingI]['owned'], 0, true) + \" [+\" + format(player[ascendBuildingI]['generated'], 2) + \"]\"\n            document.getElementById(\"ascendText\" + (5 + i)).textContent = \n                perSecNames[i] + \": \" + format(((G['ascendBuildingProduction'] as { [key: string]: Decimal })[G['ordinals'][i - 1]]), 2)\n            document.getElementById(\"buyTesseracts\" + i).textContent = \"Cost: \" + format(player[ascendBuildingI]['cost'], 0) + \" Tesseracts\"\n        }\n\n        document.getElementById(\"tesseractInfo\").textContent = \"You have \" + format(player.wowTesseracts) + \" Wow! Tesseracts. Gain more by beating Challenge 10 on each Ascension.\"\n        document.getElementById(\"ascendShardInfo\").textContent = \"You have a mathematical constant of \" + format(player.ascendShards, 2) + \". Taxes are divided by \" + format(Math.pow(Decimal.log(player.ascendShards.add(1), 10) + 1, 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + (G['platonicBonusMultiplier'][5] - 1)), 4, true) + \".\"\n        document.getElementById(\"autotessbuyeramount\").textContent = \"Auto buyer will save at least \" + format(player.tesseractAutoBuyerAmount) + \" tesseracts. [Enter number above].\"\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const visualUpdateUpgrades = () => {}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const visualUpdateAchievements = () => {}\n\nexport const visualUpdateRunes = () => {\n    if (G['currentTab'] !== \"runes\")\n        return\n    if (G['runescreen'] === \"runes\") { //Placeholder and place work similarly to buildings, except for the specific Talismans.\n\n        const talismans = [\n            'rune1Talisman',\n            'rune2Talisman',\n            'rune3Talisman',\n            'rune4Talisman',\n            'rune5Talisman'\n        ] as const;\n\n        document.getElementById(\"offeringCount\").textContent = \"You have \" + format(player.runeshards, 0, true) + \" Offerings.\"\n\n        for (let i = 1; i <= 7; i++) { //First one updates level, second one updates TNL, third updates orange bonus levels\n            let place = G[talismans[i-1]];\n            if (i > 5) place = 0;\n            document.getElementById('rune' + i + 'level').childNodes[0].textContent = \"Level: \" + format(player.runelevels[i - 1]) + \"/\" + format(calculateMaxRunes(i))\n            document.getElementById('rune' + i + 'exp').textContent = \"+1 in \" + format(calculateRuneExpToLevel(i - 1) - player.runeexp[i - 1], 2) + \" EXP\"\n            if (i <= 5) document.getElementById('bonusrune' + i).textContent = \" [Bonus: \" + format(7 * player.constantUpgrades[7] + Math.min(1e7, player.antUpgrades[9-1] + G['bonusant9']) + place) + \"]\"\n            else document.getElementById('bonusrune' + i).textContent = \"[Bonus: Nope!]\"\n            displayRuneInformation(i, false)\n        }\n\n        document.getElementById(\"offeringExperienceValue\").textContent = \"Gain \" + format((1 + Math.min(player.highestchallengecompletions[1], 1) + 1 / 25 * player.highestchallengecompletions[1] + 0.6 * player.researches[22] + 0.3 * player.researches[23] + 3 / 25 * player.upgrades[66] + 2 * player.upgrades[61]) * calculateRecycleMultiplier(), 2, true) + \"* EXP per offering sacrificed.\"\n        document.getElementById(\"offeringRecycleInfo\").textContent = \"You have \" + format((5 * player.achievements[80] + 5 * player.achievements[87] + 5 * player.achievements[94] + 5 * player.achievements[101] + 5 * player.achievements[108] + 5 * player.achievements[115] + 7.5 * player.achievements[122] + 7.5 * player.achievements[129] + 5 * player.upgrades[61] + Math.min(25, G['rune4level'] / 16) + 0.5 * player.cubeUpgrades[2]), 2, true) + \"% chance of recycling your offerings. This multiplies EXP gain by \" + format(calculateRecycleMultiplier(), 2, true) + \"!\"\n    }\n\n    if (G['runescreen'] === \"talismans\") {\n        for (let i = 1; i <= 7; i++) {\n            document.getElementById('talisman' + i + 'level').textContent = \"Level \" + player.talismanLevels[i-1] + \"/\" + (30 * player.talismanRarity[i-1] + 6 * CalcECC('ascension', player.challengecompletions[13]) + Math.floor(player.researches[200] / 400))\n        }\n    }\n\n    if (G['runescreen'] === \"blessings\") {\n        const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1]\n        let t = 0;\n        for (let i = 1; i <= 5; i++) {\n            document.getElementById(`runeBlessingLevel${i}Value`).textContent = format(player.runeBlessingLevels[i], 0, true)\n            document.getElementById(`runeBlessingPower${i}Value1`).textContent = format(G['runeBlessings'][i])\n            const levelsPurchasable = calculateSummationLinear(player.runeBlessingLevels[i], G['blessingBaseCost'], player.runeshards, player.runeBlessingBuyAmount)[0] - player.runeBlessingLevels[i]\n            levelsPurchasable > 0\n                ? document.getElementById(`runeBlessingPurchase${i}`).classList.add(\"runeButtonsAvailable\")\n                : document.getElementById(`runeBlessingPurchase${i}`).classList.remove(\"runeButtonsAvailable\")\n            document.getElementById(`runeBlessingPurchaseAmount${i}`).textContent = format(Math.max(1, levelsPurchasable))\n            document.getElementById(`runeBlessingPurchaseCost${i}`).textContent = format(Math.max(G['blessingBaseCost'] * (1 + player.runeBlessingLevels[i]), calculateSummationLinear(player.runeBlessingLevels[i], G['blessingBaseCost'], player.runeshards, player.runeBlessingBuyAmount)[1]))\n            if (i === 5) {\n                t = 1\n            }\n            document.getElementById(`runeBlessingPower${i}Value2`).textContent = format(1 - t + blessingMultiplierArray[i] * G['effectiveRuneBlessingPower'][i], 4, true)\n        }\n    }\n\n    if (G['runescreen'] === \"spirits\") {\n        const spiritMultiplierArray = [0, 1, 1, 20, 1, 100]\n        const subtract = [0, 0, 0, 1, 0, 0]\n        for (let i = 1; i <= 5; i++) {\n            spiritMultiplierArray[i] *= (calculateCorruptionPoints() / 400)\n            document.getElementById(`runeSpiritLevel${i}Value`).textContent = format(player.runeSpiritLevels[i], 0, true)\n            document.getElementById(`runeSpiritPower${i}Value1`).textContent = format(G['runeSpirits'][i])\n            const levelsPurchasable = calculateSummationLinear(player.runeSpiritLevels[i], G['spiritBaseCost'], player.runeshards, player.runeSpiritBuyAmount)[0] - player.runeSpiritLevels[i]\n            levelsPurchasable > 0\n                ? document.getElementById(`runeSpiritPurchase${i}`).classList.add(\"runeButtonsAvailable\")\n                : document.getElementById(`runeSpiritPurchase${i}`).classList.remove(\"runeButtonsAvailable\")\n            document.getElementById(`runeSpiritPurchaseAmount${i}`).textContent = format(Math.max(1, levelsPurchasable))\n            document.getElementById(`runeSpiritPurchaseCost${i}`).textContent = format(Math.max(G['spiritBaseCost'] * (1 + player.runeSpiritLevels[i]), calculateSummationLinear(player.runeSpiritLevels[i], G['spiritBaseCost'], player.runeshards, player.runeSpiritBuyAmount)[1]))\n            document.getElementById(`runeSpiritPower${i}Value2`).textContent = format(1 - subtract[i] + spiritMultiplierArray[i] * G['effectiveRuneSpiritPower'][i], 4, true)\n        }\n    }\n}\n\nexport const visualUpdateChallenges = () => {\n    if (G['currentTab'] !== \"challenges\")\n        return\n    if (player.researches[150] > 0) {\n        document.getElementById(\"autoIncrementerAmount\").textContent = format(G['autoChallengeTimerIncrement'], 2) + \"s\"\n    }\n}\n\nexport const visualUpdateResearch = () => {\n    if (G['currentTab'] !== \"researches\")\n        return\n\n    if (player.researches[61] > 0) {\n        document.getElementById(\"automaticobtainium\").textContent = \"Thanks to researches you automatically gain \" + format(calculateAutomaticObtainium() * calculateTimeAcceleration(), 3, true) + \" Obtainium per real life second.\"\n    }\n}\n\nexport const visualUpdateAnts = () => {\n    if (G['currentTab'] !== \"ants\")\n        return\n    document.getElementById(\"crumbcount\").textContent = \"You have \" + format(player.antPoints, 2) + \" Galactic Crumbs [\" + format(G['antOneProduce'], 2) + \"/s], providing a \" + format(Decimal.pow(Decimal.max(1, player.antPoints), 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2-1] + G['bonusant2']) / 5000 * 500 / 499))) + \"x Coin Multiplier.\"\n    const mode = player.autoAntSacrificeMode === 2 ? \"Real-time\" : \"In-game time\";\n    const timer = player.autoAntSacrificeMode === 2 ? player.antSacrificeTimerReal : player.antSacrificeTimer;\n    document.getElementById(\"autoAntSacrifice\").textContent = `Sacrifice when the timer is at least ${player.autoAntSacTimer} seconds (${mode}), Currently: ${format(timer)}`\n    if (player.achievements[173] === 1) {\n        document.getElementById(\"antSacrificeTimer\").textContent = formatTimeShort(player.antSacrificeTimer);\n        showSacrifice();\n    }\n}\n\ninterface cubeNames {\n    cube: number\n    tesseract: number\n    hypercube: number\n    platonicCube: number\n}\n\nexport const visualUpdateCubes = () => {\n    if (G['currentTab'] !== \"cubes\")\n        return\n    document.getElementById(\"cubeToQuarkTimerValue\").textContent = format(Math.floor(player.dayTimer / 3600), 0) + \" Hours \" + format(Math.floor(player.dayTimer / 60 % 60), 0) + \" Mins \" + format(Math.floor(player.dayTimer % 60), 0) + \" Secs \"\n\n    const cubeMult = (player.shopUpgrades.cubeToQuark) ? 1.5 : 1;\n    const tesseractMult = (player.shopUpgrades.tesseractToQuark) ? 1.5 : 1;\n    const hypercubeMult = (player.shopUpgrades.hypercubeToQuark) ? 1.5 : 1;\n    const platonicMult = 1.5;\n\n    const toNextQuark: cubeNames = {\n        cube: Number(player.wowCubes.checkCubesToNextQuark(5, cubeMult, player.cubeQuarkDaily, player.cubeOpenedDaily)),\n        tesseract: Number(player.wowTesseracts.checkCubesToNextQuark(7, tesseractMult, player.tesseractQuarkDaily, player.tesseractOpenedDaily)),\n        hypercube: Number(player.wowHypercubes.checkCubesToNextQuark(10, hypercubeMult, player.hypercubeQuarkDaily, player.hypercubeOpenedDaily)),\n        platonicCube: Number(player.wowPlatonicCubes.checkCubesToNextQuark(15, platonicMult, player.platonicCubeQuarkDaily, player.platonicCubeOpenedDaily)),\n    }\n\n    const names = Object.keys(toNextQuark) as (keyof cubeNames)[]\n    for (const name of names) {\n        document.getElementById(`${name}QuarksTodayValue`).textContent = format(player[`${name}QuarkDaily` as const]);\n        document.getElementById(`${name}QuarksOpenTodayValue`).textContent = format(player[`${name}OpenedDaily` as const]);\n        document.getElementById(`${name}QuarksOpenRequirementValue`).textContent = format(Math.max(1, toNextQuark[name]))\n        \n        // Change color of requirement text if 1 or less required :D\n        document.getElementById(`${name}QuarksOpenRequirement`).style.color = (Math.max(1, toNextQuark[name]) === 1)? 'gold': 'white'\n        if (document.getElementById(`${name}QuarksOpenRequirementValue`).style.color !== 'gold')\n            document.getElementById(`${name}QuarksOpenRequirementValue`).style.color === 'gold'\n    }\n    \n    let accuracy;\n    switch (player.subtabNumber) {\n        case 0: {\n            document.getElementById(\"cubeQuantity\").textContent = format(player.wowCubes, 0, true)\n            const cubeArray = [null, player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed]\n\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 1, 4, 3]\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (cubeArray[i] >= 1000 && i !== 6) {\n                    augmentAccuracy += 2;\n                }\n                document.getElementById(`cubeBlessing${i}Amount`).textContent = `x${format(cubeArray[i], 0, true)}`\n                document.getElementById(`cubeBlessing${i}Effect`).textContent = `+${format(100 * (G['cubeBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`\n                if (i === 1 || i === 8 || i === 9) {\n                    document.getElementById(`cubeBlessing${i}Effect`).textContent = `+${format(G['cubeBonusMultiplier'][i] - 1, accuracy[i] + augmentAccuracy, true)}`\n                }\n            }\n            document.getElementById(\"cubeBlessingTotalAmount\").textContent = format(sumContents(cubeArray), 0, true);\n            break;\n        }\n        case 1: {\n            document.getElementById(\"tesseractQuantity\").textContent = format(player.wowTesseracts, 0, true)\n            const tesseractArray = [null, player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (tesseractArray[i] >= 1000 && i !== 6) {\n                    augmentAccuracy += 2;\n                }\n                document.getElementById(`tesseractBlessing${i}Amount`).textContent = `x${format(tesseractArray[i], 0, true)}`\n                document.getElementById(`tesseractBlessing${i}Effect`).textContent = `+${format(100 * (G['tesseractBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`\n            }\n            document.getElementById(\"tesseractBlessingTotalAmount\").textContent = format(sumContents(tesseractArray), 0, true);\n            break;\n        }\n        case 2: {\n            document.getElementById(\"hypercubeQuantity\").textContent = format(player.wowHypercubes, 0, true)\n            const hypercubeArray = [null, player.hypercubeBlessings.accelerator, player.hypercubeBlessings.multiplier, player.hypercubeBlessings.offering, player.hypercubeBlessings.runeExp, player.hypercubeBlessings.obtainium, player.hypercubeBlessings.antSpeed, player.hypercubeBlessings.antSacrifice, player.hypercubeBlessings.antELO, player.hypercubeBlessings.talismanBonus, player.hypercubeBlessings.globalSpeed]\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (hypercubeArray[i] >= 1000) {\n                    augmentAccuracy += 2;\n                }\n                document.getElementById(`hypercubeBlessing${i}Amount`).textContent = `x${format(hypercubeArray[i], 0, true)}`\n                document.getElementById(`hypercubeBlessing${i}Effect`).textContent = `+${format(100 * (G['hypercubeBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`\n            }\n            document.getElementById(\"hypercubeBlessingTotalAmount\").textContent = format(sumContents(hypercubeArray), 0, true);\n            break;\n        }\n        case 3: {\n            document.getElementById(\"platonicQuantity\").textContent = format(player.wowPlatonicCubes, 0, true)\n            const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed]\n            const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4]\n            accuracy = [5, 5, 5, 5, 2, 3, 3, 2]\n            for (let i = 0; i < platonicArray.length; i++) {\n                let augmentAccuracy = 0;\n                if (platonicArray[i] >= DRThreshold[i]) {\n                    augmentAccuracy += 1;\n                }\n                document.getElementById(`platonicBlessing${i + 1}Amount`).textContent = `x${format(platonicArray[i], 0, true)}`\n                document.getElementById(`platonicBlessing${i + 1}Effect`).textContent = `+${format(100 * (G['platonicBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`\n            }\n            document.getElementById(\"platonicBlessingTotalAmount\").textContent = format(sumContents(platonicArray), 0, true);\n            break;\n        }\n        case 4:\n            document.getElementById(\"cubeAmount2\").textContent = `You have ${format(player.wowCubes, 0, true)} Wow! Cubes =)`\n            break;\n        case 5:\n            break;\n        case 6:\n            document.getElementById('hepteractQuantity').textContent = format(player.wowAbyssals, 0, true)\n            break;\n        default:\n            // console.log(`player.subtabNumber (${player.subtabNumber}) was outside of the allowed range (${subTabsInMainTab(8).subTabList.length}) for the cube tab`);\n            break;\n    }\n}\n\nexport const visualUpdateCorruptions = () => {\n    if (G['currentTab'] !== \"traits\")\n        return\n\n    document.getElementById(\"autoAscendMetric\").textContent = format(player.autoAscendThreshold, 0, true)\n    const metaData = CalcCorruptionStuff();\n\n    document.getElementById(\"corruptionBankValue\").textContent = format(metaData[0])\n    document.getElementById(\"corruptionScoreValue\").textContent = format(metaData[1], 0, true)\n    document.getElementById(\"corruptionMultiplierValue\").textContent = format(metaData[2], 1, true)\n    document.getElementById(\"corruptionTotalScore\").textContent = format(metaData[3], 0, true)\n    document.getElementById(\"corruptionCubesValue\").textContent = format(metaData[4], 0, true)\n    document.getElementById(\"corruptionTesseractsValue\").textContent = format(metaData[5])\n    document.getElementById(\"corruptionHypercubesValue\").textContent = format(metaData[6])\n    document.getElementById(\"corruptionPlatonicCubesValue\").textContent = format(metaData[7])\n    document.getElementById(\"corruptionHepteractsValue\").textContent = format(metaData[8])\n    document.getElementById(\"corruptionAntExponentValue\").textContent = format((1 - 0.9 / 90 * sumContents(player.usedCorruptions)) * G['extinctionMultiplier'][player.usedCorruptions[7]], 3)\n    document.getElementById(\"corruptionSpiritBonusValue\").textContent = format(calculateCorruptionPoints()/400,2,true)\n}\n\nexport const visualUpdateSettings = () => {\n    if (G['currentTab'] !== \"settings\")\n        return\n    //I was unable to clean this up in a way that didn't somehow make it less clean, sorry.\n    document.getElementById(\"prestigeCountStatistic\").childNodes[1].textContent = format(player.prestigeCount, 0, true)\n    document.getElementById(\"transcensionCountStatistic\").childNodes[1].textContent = format(player.transcendCount, 0, true)\n    document.getElementById(\"reincarnationCountStatistic\").childNodes[1].textContent = format(player.reincarnationCount, 0, true)\n    document.getElementById(\"fastestPrestigeStatistic\").childNodes[1].textContent = format(1000 * player.fastestprestige) + \"ms\"\n    document.getElementById(\"fastestTranscensionStatistic\").childNodes[1].textContent = format(1000 * player.fastesttranscend) + \"ms\"\n    document.getElementById(\"fastestReincarnationStatistic\").childNodes[1].textContent = format(1000 * player.fastestreincarnate) + \"ms\"\n    document.getElementById(\"mostOfferingStatistic\").childNodes[1].textContent = format(player.maxofferings)\n    document.getElementById(\"mostObtainiumStatistic\").childNodes[1].textContent = format(player.maxobtainium)\n    document.getElementById(\"mostObtainiumPerSecondStatistic\").childNodes[1].textContent = format(player.maxobtainiumpersecond, 2, true)\n    document.getElementById(\"runeSumStatistic\").childNodes[1].textContent = format(G['runeSum'])\n    document.getElementById(\"obtainiumPerSecondStatistic\").childNodes[1].textContent = format(player.obtainiumpersecond, 2, true)\n    document.getElementById(\"ascensionCountStatistic\").childNodes[1].textContent = format(player.ascensionCount, 0, true)\n\n    document.getElementById(\"saveString\").textContent =\n        `Currently: ${player.saveString.replace(\"$VERSION$\", \"v\" + version)}`;\n\n    const quarkData = quarkHandler();\n    const onExportQuarks = quarkData.gain\n    const maxExportQuarks = quarkData.capacity\n    const patreonLOL = 1 + player.worlds._BONUS/100\n    document.getElementById(\"quarktimerdisplay\").textContent = format((3600 / (quarkData.perHour) - (player.quarkstimer % (3600.00001 / (quarkData.perHour)))), 2) + \"s until +\" + format(patreonLOL, 2, true) + \" export Quark\"\n    document.getElementById(\"quarktimeramount\").textContent = \n        `Quarks on export: ${format(Math.floor(onExportQuarks * patreonLOL))} [Max ${format(Math.floor(maxExportQuarks * patreonLOL))}]`;\n}\n\nexport const visualUpdateShop = () => {\n    if (G['currentTab'] !== \"shop\")\n        return\n    document.getElementById(\"quarkamount\").textContent = \"You have \" + format(player.worlds) + \" Quarks!\"\n    document.getElementById(\"offeringpotionowned\").textContent = \"Own: \" + format(player.shopUpgrades.offeringPotion)\n    document.getElementById(\"obtainiumpotionowned\").textContent = \"Own: \" + format(player.shopUpgrades.obtainiumPotion)\n\n    // Create Keys with the correct type\n    const keys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[];\n    for (const key of keys) {\n        // Create a copy of shopItem instead of accessing many times\n        const shopItem = shopData[key]\n        \n        // Ignore all consumables, to be handled above, since they're different.\n        if (shopItem.type === 'upgrade') {\n            // Case: If max level is 1, then it can be considered a boolean \"bought\" or \"not bought\" item\n            if (shopItem.maxLevel === 1) {\n                player.shopUpgrades[key] === shopItem.maxLevel ?\n                    document.getElementById(`${key}Level`).textContent = \"Bought!\":\n                    document.getElementById(`${key}Level`).textContent = \"Not Bought!\"\n            }\n            // Case: max level greater than 1, treat it as a fraction out of max level\n            else\n                document.getElementById(`${key}Level`).textContent = \"Level \" + format(player.shopUpgrades[key]) + \"/\" + format(shopItem.maxLevel);\n            // Handles Button - max level needs no price indicator, otherwise it's necessary    \n            player.shopUpgrades[key] === shopItem.maxLevel ?\n                document.getElementById(`${key}Button`).textContent = \"Maxed!\": \n                document.getElementById(`${key}Button`).textContent = \"Upgrade for \" + format(getShopCosts(key)) + \" Quarks\";\n        }\n    }\n}\n", "import { sacrificeAnts } from \"./Ants\";\nimport { calculateAscensionAcceleration, calculateAutomaticObtainium, calculateMaxRunes, calculateObtainium, calculateTimeAcceleration } from \"./Calculate\"\nimport { quarkHandler } from \"./Quark\";\nimport { redeemShards } from \"./Runes\";\nimport { player } from \"./Synergism\";\nimport { visualUpdateResearch } from \"./UpdateVisuals\";\nimport { Globals as G } from './Variables';\n\ntype TimerInput = 'prestige' | 'transcension' | 'reincarnation' | 'ascension' | 'quarks';\n\n/**\n * addTimers will add (in milliseconds) time to the reset counters, and quark export timer\n * @param input \n * @param time \n */\nexport const addTimers = (input: TimerInput, time?: number) => {\n    const timeMultiplier = (input === \"ascension\" || input === \"quarks\") ? 1 : calculateTimeAcceleration();\n\n    switch(input){\n        case \"prestige\": {\n            player.prestigecounter += time * timeMultiplier;\n            break;\n        }\n        case \"transcension\": {\n            player.transcendcounter += time * timeMultiplier;\n            break;\n        }\n        case \"reincarnation\": {\n            player.reincarnationcounter += time * timeMultiplier;\n            break;\n        }\n        case \"ascension\": {\n            player.ascensionCounter += time * timeMultiplier * calculateAscensionAcceleration();\n            break;\n        }\n        case \"quarks\": {\n            // First get maximum Quark Clock (25h, up to +25 from Research 8x20)\n            const maxQuarkTimer = quarkHandler().maxTime\n            player.quarkstimer += time * timeMultiplier;\n            // Checks if this new time is greater than maximum, in which it will default to that time.\n            // Otherwise returns itself.\n            player.quarkstimer = (player.quarkstimer > maxQuarkTimer) ? maxQuarkTimer : player.quarkstimer;\n            break;\n        }\n    }\n}\n\n/**\n * checkMaxRunes returns how many unique runes are at the maximum level.\n * Does not take in params, returns a number equal to number of maxed runes.\n */\nexport const checkMaxRunes = () => {\n    let maxed = 0;\n    for (let i = 1; i <= 5; i++) {\n        if (player.runelevels[i - 1] >= calculateMaxRunes(i))\n            maxed++;\n    }\n    return maxed\n}\n\ntype AutoToolInput = 'addObtainium' | 'addOfferings' | 'runeSacrifice' | 'antSacrifice';\n\n/**\n * Assortment of tools which are used when actions are automated.\n * @param input \n * @param time \n */\nexport const automaticTools = (input: AutoToolInput, time: number) => {\n    const timeMultiplier = (input === \"runeSacrifice\" || input === \"addOfferings\") ? 1 : calculateTimeAcceleration()\n\n    switch(input){\n        case \"addObtainium\": {\n            //Update Obtainium Multipliers + Amount to gain\n            calculateObtainium();\n            const obtainiumGain = calculateAutomaticObtainium();\n            //Add Obtainium\n            player.researchPoints += obtainiumGain * time * timeMultiplier;\n            //Update visual displays if appropriate\n            if (G['currentTab'] === \"researches\") {\n                visualUpdateResearch();\n            }\n            break;\n        }\n        case \"addOfferings\":\n            //This counter can be increased through challenge 3 reward\n            //As well as cube upgrade 1x2 (2).\n            G['autoOfferingCounter'] += time;\n            //Any time this exceeds 1 it adds an offering\n            player.runeshards += Math.floor(G['autoOfferingCounter']);\n            G['autoOfferingCounter'] %= 1;\n            break;\n        case \"runeSacrifice\":\n            //Every real life second this will trigger\n            player.sacrificeTimer += time;\n            if (player.sacrificeTimer >= 1){\n                // If you bought cube upgrade 2x10 then it sacrifices to all runes equally\n                if(player.cubeUpgrades[20] === 1){\n                    const notMaxed = (5 - checkMaxRunes());\n                    if(notMaxed > 0){\n                        const baseAmount = Math.floor(player.runeshards / notMaxed);\n                        for (let i = 0; i < 5; i++) {\n                            redeemShards(i+1, true, baseAmount);\n                        }\n                    }\n                }\n                // If you did not buy cube upgrade 2x10 it sacrifices to selected rune.\n                else{\n                    const rune = player.autoSacrifice;\n                    redeemShards(rune, true, 0);\n                }\n                //Modulo used in event of a large delta time (this could happen for a number of reasons)\n                player.sacrificeTimer %= 1\n            }\n            break;\n        case \"antSacrifice\": {\n            // Increments real and 'fake' timers. the Real timer is on real life seconds.\n            player.antSacrificeTimer += time * timeMultiplier;\n            player.antSacrificeTimerReal += time\n\n            //Equal to real time iff \"Real Time\" option selected in ants tab.\n            const antSacrificeTimer = (player.autoAntSacrificeMode === 2) ?\n            player.antSacrificeTimerReal : player.antSacrificeTimer;\n\n            if (antSacrificeTimer >= player.autoAntSacTimer && player.researches[124] === 1 \n                && player.autoAntSacrifice && player.antPoints.gte(\"1e40\")) {\n                sacrificeAnts(true)\n            }\n            break;\n        }\n    }\n}\n", "import { player, interval, clearInt, saveSynergy, format, resourceGain, updateAll } from './Synergism';\nimport { sumContents, productContents, getElementById } from './Utility';\nimport { Globals as G } from './Variables';\nimport { CalcECC } from './Challenges';\nimport Decimal from 'break_infinity.js';\nimport { toggleTalismanBuy, updateTalismanInventory } from './Talismans';\nimport { reset } from './Reset';\nimport { achievementaward } from './Achievements';\nimport { resetNames } from './types/Synergism';\nimport { hepteractEffective } from './Hepteracts';\nimport { addTimers, automaticTools } from './Helper';\nimport { Alert, Prompt, } from './UpdateHTML';\nimport { quarkHandler } from './Quark';\n\nexport const calculateTotalCoinOwned = () => {\n    G['totalCoinOwned'] = \n        player.firstOwnedCoin + \n        player.secondOwnedCoin + \n        player.thirdOwnedCoin + \n        player.fourthOwnedCoin + \n        player.fifthOwnedCoin;\n}\n\nexport const calculateTotalAcceleratorBoost = () => {\n    let b = 0\n    if (player.upgrades[26] > 0.5) {\n        b += 1;\n    }\n    if (player.upgrades[31] > 0.5) {\n        b += Math.floor(G['totalCoinOwned'] / 2000) * 100 / 100\n    }\n    if (player.achievements[7] > 0.5) {\n        b += Math.floor(player.firstOwnedCoin / 2000)\n    }\n    if (player.achievements[14] > 0.5) {\n        b += Math.floor(player.secondOwnedCoin / 2000)\n    }\n    if (player.achievements[21] > 0.5) {\n        b += Math.floor(player.thirdOwnedCoin / 2000)\n    }\n    if (player.achievements[28] > 0.5) {\n        b += Math.floor(player.fourthOwnedCoin / 2000)\n    }\n    if (player.achievements[35] > 0.5) {\n        b += Math.floor(player.fifthOwnedCoin / 2000)\n    }\n\n    b += player.researches[93] * Math.floor(1 / 20 * (G['rune1level'] + G['rune2level'] + G['rune3level'] + G['rune4level'] + G['rune5level']))\n    b += Math.floor((0.01 + G['rune1level']) * G['effectiveLevelMult'] / 20);\n    b *= (1 + 1 / 5 * player.researches[3] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\n    b *= (1 + 1 / 20 * player.researches[16] + 1 / 20 * player.researches[17])\n    b *= (1 + 1 / 20 * player.researches[88])\n    b *= calculateSigmoidExponential(20, (player.antUpgrades[4-1] + G['bonusant4']) / 1000 * 20 / 19)\n    b *= (1 + 1 / 100 * player.researches[127])\n    b *= (1 + 0.8 / 100 * player.researches[142])\n    b *= (1 + 0.6 / 100 * player.researches[157])\n    b *= (1 + 0.4 / 100 * player.researches[172])\n    b *= (1 + 0.2 / 100 * player.researches[187])\n    b *= (1 + 0.01 / 100 * player.researches[200])\n    b *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\n    b *= (1 + 1/1000 * hepteractEffective('acceleratorBoost'))\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        b *= 2\n    }\n    b = Math.floor(b)\n    G['freeAcceleratorBoost'] = b;\n\n    G['totalAcceleratorBoost'] = Math.floor(player.acceleratorBoostBought + G['freeAcceleratorBoost']) * 100 / 100;\n}\n\nexport const calculateAcceleratorMultiplier = () => {\n    G['acceleratorMultiplier'] = 1;\n    G['acceleratorMultiplier'] *= (1 + player.achievements[60] / 100)\n    G['acceleratorMultiplier'] *= (1 + player.achievements[61] / 100)\n    G['acceleratorMultiplier'] *= (1 + player.achievements[62] / 100)\n    G['acceleratorMultiplier'] *= (1 + 1 / 5 * player.researches[1] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\n    G['acceleratorMultiplier'] *= (1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10]);\n    G['acceleratorMultiplier'] *= (1 + 1 / 20 * player.researches[86])\n    G['acceleratorMultiplier'] *= (1 + 1 / 100 * player.researches[126])\n    G['acceleratorMultiplier'] *= (1 + 0.8 / 100 * player.researches[141])\n    G['acceleratorMultiplier'] *= (1 + 0.6 / 100 * player.researches[156])\n    G['acceleratorMultiplier'] *= (1 + 0.4 / 100 * player.researches[171])\n    G['acceleratorMultiplier'] *= (1 + 0.2 / 100 * player.researches[186])\n    G['acceleratorMultiplier'] *= (1 + 0.01 / 100 * player.researches[200])\n    G['acceleratorMultiplier'] *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\n    G['acceleratorMultiplier'] *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25])\n    if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\n        G['acceleratorMultiplier'] *= 1.25\n    }\n}\n\nexport const calculateRecycleMultiplier = () => {\n    // Factors where recycle bonus comes from\n    const recycleFactors = sumContents([\n        0.05 * player.achievements[80],\n        0.05 * player.achievements[87],\n        0.05 * player.achievements[94],\n        0.05 * player.achievements[101],\n        0.05 * player.achievements[108],\n        0.05 * player.achievements[115],\n        0.075 * player.achievements[122],\n        0.075 * player.achievements[129],\n        0.05 * player.upgrades[61],\n        0.25 * Math.min(1, G['rune4level'] / 400),\n        0.005 * player.cubeUpgrades[2]\n    ]);\n\n    return 1 / (1 - recycleFactors);\n}\n\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean, runeLevel: number, returnFactors: true): number[];\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean, runeLevel: number, returnFactors: false): number;\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean, runeLevel: number): number;\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean): number;\nexport function calculateRuneExpGiven(runeIndex: number, all = false, runeLevel = player.runelevels[runeIndex], returnFactors = false) {\n    // recycleMult accounted for all recycle chance, but inversed so it's a multiplier instead\n    const recycleMultiplier = calculateRecycleMultiplier();\n\n    // Rune multiplier that is summed instead of added\n    let allRuneExpAdditiveMultiplier: number | null = null;\n    if (all) {\n        allRuneExpAdditiveMultiplier = sumContents([\n            //Challenge 3 completions\n            1 / 100 * player.highestchallengecompletions[3],\n            //Reincarnation 3x1\n            1 * player.upgrades[66]\n        ]);\n    } else {\n        allRuneExpAdditiveMultiplier = sumContents([\n            // Base amount multiplied per offering\n            1,\n            // +1 if C1 completion\n            Math.min(1, player.highestchallengecompletions[1]),\n            // +0.10 per C1 completion\n            0.4 / 10 * player.highestchallengecompletions[1],\n            // Research 5x2\n            0.6 * player.researches[22],\n            // Research 5x3\n            0.3 * player.researches[23],\n            // Particle Upgrade 1x1\n            2 * player.upgrades[61],\n            // Particle upgrade 3x1\n            player.upgrades[71] * runeLevel / 25\n        ]);\n    }\n\n    // Rune multiplier that gets applied to all runes\n    const allRuneExpMultiplier = productContents([\n        // Research 4x16\n        1 + (player.researches[91] / 20),\n        // Research 4x17\n        1 + (player.researches[92] / 20),\n        // Ant 8\n        calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8-1] + G['bonusant8'], 1.1)),\n        // Cube Bonus\n        G['cubeBonusMultiplier'][4],\n        // Cube Upgrade Bonus\n        (1 + player.ascensionCounter / 1000 * player.cubeUpgrades[32]),\n        // Corruption Divisor\n        1 / Math.pow(G['droughtMultiplier'][player.usedCorruptions[8]], 1 - 1 / 2 * player.platonicUpgrades[13]),\n        // Constant Upgrade Multiplier\n        1 + 1 / 10 * player.constantUpgrades[8],\n        // Challenge 15 reward multiplier\n        G['challenge15Rewards'].runeExp\n    ]);\n\n    // Rune multiplier that gets applied to specific runes\n    const runeExpMultiplier = [\n        productContents([\n            1 + (player.researches[78] / 50), 1 + (player.researches[111] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10)\n        ]),\n        productContents([\n            1 + (player.researches[80] / 50), 1 + (player.researches[112] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10)\n        ]),\n        productContents([\n            1 + (player.researches[79] / 50), 1 + (player.researches[113] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[8]) / 5)\n        ]),\n        productContents([\n            1 + (player.researches[77] / 50), 1 + (player.researches[114] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[6]) / 10)\n        ]),\n        productContents([\n            1 + (player.researches[83] / 20), 1 + (player.researches[115] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[9]) / 5)\n        ]),\n        productContents([1]),\n        productContents([1])\n    ];\n\n    const fact = [\n        allRuneExpAdditiveMultiplier,\n        allRuneExpMultiplier,\n        recycleMultiplier,\n        runeExpMultiplier[runeIndex]\n    ];\n\n    return returnFactors ? fact : productContents(fact);\n}\n\nexport const lookupTableGen = (runeLevel: number) => {\n    // Rune exp required to level multipliers\n    const allRuneExpRequiredMultiplier = productContents([\n        Math.pow((runeLevel + 1) / 2, 3),\n        ((3.5 * runeLevel) + 100) / 500,\n        Math.max(1, (runeLevel - 200) / 9),\n        Math.max(1, (runeLevel - 400) / 12),\n        Math.max(1, (runeLevel - 600) / 15),\n        Math.max(1, Math.pow(1.03, (runeLevel - 800) / 4))\n    ]);\n\n    return allRuneExpRequiredMultiplier\n}\n\nlet lookupTableRuneExp: number[] | null = null;\n\n// Returns the amount of exp required to level a rune\nexport const calculateRuneExpToLevel = (runeIndex: number, runeLevel = player.runelevels[runeIndex]) => {\n    lookupTableRuneExp ??= Array.from({ length: 40000 }, (_, i) => lookupTableGen(i));\n\n    // For runes 6 and 7 we will apply a special multiplier\n    let multiplier = lookupTableRuneExp[runeLevel]\n    if (runeIndex === 5) {\n        multiplier = Math.pow(100, runeLevel)\n    }\n    if (runeIndex === 6) {\n        multiplier = Math.pow(1e25, runeLevel)\n    }\n    return multiplier * G['runeexpbase'][runeIndex];\n}\n\nexport const calculateMaxRunes = (i: number) => {\n    let max = 1000;\n\n    const increaseAll = 10 * (2 * player.cubeUpgrades[16] + 2 * player.cubeUpgrades[37])\n        + 3 * player.constantUpgrades[7] + 80 * CalcECC('ascension', player.challengecompletions[11])\n        + 200 * CalcECC('ascension', player.challengecompletions[14])\n        + Math.floor(0.04 * player.researches[200] + 0.04 * player.cubeUpgrades[50])\n    const increaseMaxLevel = [\n        null,\n        10 * (player.researches[78] + player.researches[111]) + increaseAll,\n        10 * (player.researches[80] + player.researches[112]) + increaseAll,\n        10 * (player.researches[79] + player.researches[113]) + increaseAll,\n        10 * (player.researches[77] + player.researches[114]) + increaseAll,\n        10 * player.researches[115] + increaseAll,\n        -925,\n        -998\n    ]\n\n    max += increaseMaxLevel[i]\n    return max\n}\n\nexport function calculateOfferings(input: resetNames): number;\nexport function calculateOfferings(input: resetNames, calcMult: false): number[];\nexport function calculateOfferings(input: resetNames, calcMult: false, statistic: boolean): number[];\nexport function calculateOfferings(input: resetNames, calcMult: true, statistic: boolean): number;\nexport function calculateOfferings(input: resetNames, calcMult = true, statistic = false) {\n\n    if (input == \"acceleratorBoost\" || input == \"ascension\" || input == \"ascensionChallenge\"){\n        return 0;\n    }\n\n    let q = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    if (input == \"reincarnation\" || input == \"reincarnationChallenge\") {\n        a += 3\n        if (player.achievements[52] > 0.5) {\n            a += (25 * Math.min(player.reincarnationcounter / 1800, 1))\n        }\n        if (player.upgrades[62] > 0.5) {\n            a += 1 / 50 * (sumContents(player.challengecompletions))\n        }\n        a += 0.6 * player.researches[25]\n        if (player.researches[95] === 1) {\n            a += 4\n        }\n        a += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200)\n        a *= (1 + Math.pow(Decimal.log(player.reincarnationShards.add(1), 10), 2 / 3) / 4);\n        a *= Math.min(Math.pow(player.reincarnationcounter / 10, 2), 1)\n        if (player.reincarnationcounter >= 5) {\n            a *= Math.max(1, player.reincarnationcounter / 10)\n        }\n\n    }\n    if (input == \"transcension\" || input == \"transcensionChallenge\" || input == \"reincarnation\" ||\n        input == \"reincarnationChallenge\") {\n        b += 2\n        if (player.reincarnationCount > 0) {\n            b += 2\n        }\n        if (player.achievements[44] > 0.5) {\n            b += (15 * Math.min(player.transcendcounter / 1800, 1))\n        }\n        if (player.challengecompletions[2] > 0) {\n            b += 1;\n        }\n        b += 0.2 * player.researches[24]\n        b += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200)\n        b *= (1 + Math.pow(Decimal.log(player.transcendShards.add(1), 10), 1 / 2) / 5);\n        b *= (1 + CalcECC('reincarnation', player.challengecompletions[8]) / 25)\n        b *= Math.min(Math.pow(player.transcendcounter / 10, 2), 1)\n        if (player.transcendCount >= 5) {\n            b *= Math.max(1, player.transcendcounter / 10)\n        }\n    }\n    // This will always be calculated if '0' is not already returned\n        c += 1\n        if (player.transcendCount > 0 || player.reincarnationCount > 0) {\n            c += 1\n        }\n        if (player.reincarnationCount > 0) {\n            c += 2\n        }\n        if (player.achievements[37] > 0.5) {\n            c += (15 * Math.min(player.prestigecounter / 1800, 1))\n        }\n        if (player.challengecompletions[2] > 0) {\n            c += 1;\n        }\n        c += 0.2 * player.researches[24]\n        c += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200)\n        c *= (1 + Math.pow(Decimal.log(player.prestigeShards.add(1), 10), 1 / 2) / 5);\n        c *= (1 + CalcECC('reincarnation', player.challengecompletions[6]) / 50)\n        c *= Math.min(Math.pow(player.prestigecounter / 10, 2), 1)\n        if (player.prestigeCount >= 5) {\n            c *= Math.max(1, player.prestigecounter / 10)\n        }\n    q = a + b + c\n\n    const arr = [\n        1 + 10 * player.achievements[33] / 100, // Alchemy Achievement 5\n        1 + 15 * player.achievements[34] / 100, // Alchemy Achievement 6\n        1 + 25 * player.achievements[35] / 100, // Alchemy Achievement 7\n        1 + 20 * player.upgrades[38] / 100, // Diamond Upgrade 4x3\n        1 + player.upgrades[75] * 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5)), // Particle Upgrade 3x5\n        1 + 1 / 50 * player.shopUpgrades.offeringAuto, // Auto Offering Shop\n        1 + 1 / 25 * player.shopUpgrades.offeringEX, // Offering EX Shop\n        1 + 1 / 100 * player.shopUpgrades.cashGrab, // Cash Grab\n        1 + 1 / 10000 * sumContents(player.challengecompletions) * player.researches[85], // Research 4x10\n        1 + Math.pow((player.antUpgrades[6-1] + G['bonusant6']), .66), // Ant Upgrade:\n        G['cubeBonusMultiplier'][3], // Brutus\n        1 + 0.02 * player.constantUpgrades[3], // Constant Upgrade 3\n        1 + 0.0003 * player.talismanLevels[3-1] * player.researches[149] + 0.0004 * player.talismanLevels[3-1] * player.researches[179], // Research 6x24,8x4\n        1 + 0.12 * CalcECC('ascension', player.challengecompletions[12]), // Challenge 12\n        1 + 0.01 / 100 * player.researches[200], // Research 8x25\n        1 + Math.min(1, player.ascensionCount / 1e6) * player.achievements[187], // Ascension Count Achievement\n        1 + .6 * player.achievements[250] + 1 * player.achievements[251], // Sun&Moon Achievements\n        1 + 0.05 * player.cubeUpgrades[46],  // Cube Upgrade 5x6\n        1 + 0.02 / 100 * player.cubeUpgrades[50],  // Cube Upgrade 5x10\n        1 + player.platonicUpgrades[5],  // Platonic ALPHA\n        1 + 2.5 * player.platonicUpgrades[10], // Platonic BETA\n        1 + 5 * player.platonicUpgrades[15], // Platonic OMEGA\n        G['challenge15Rewards'].offering, // C15 Reward\n    ];\n\n    if (calcMult) {\n        q *= productContents(arr)\n    } else if (!calcMult) {\n        return arr;\n    }\n\n    if (statistic) {\n        return productContents(arr)\n    }\n\n    q = Math.floor(q) * 100 / 100\n\n    let persecond = 0;\n    if (input === \"prestige\") {\n        persecond = q / (1 + player.prestigecounter)\n    }\n    if (input === \"transcension\" || input == \"transcensionChallenge\") {\n        persecond = q / (1 + player.transcendcounter)\n    }\n    if (input === \"reincarnation\" || input == \"reincarnationChallenge\") {\n        persecond = q / (1 + player.reincarnationcounter)\n    }\n    if (persecond > player.offeringpersecond) {\n        player.offeringpersecond = persecond\n    }\n\n    return q;\n}\n\nexport const calculateObtainium = () => {\n    G['obtainiumGain'] = 1;\n    if (player.upgrades[69] > 0) {\n        G['obtainiumGain'] *= Math.min(10, new Decimal(Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5)).toNumber())\n    }\n    if (player.upgrades[72] > 0) {\n        G['obtainiumGain'] *= Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10]))\n    }\n    if (player.upgrades[74] > 0) {\n        G['obtainiumGain'] *= (1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5)))\n    }\n    G['obtainiumGain'] *= (1 + player.researches[65] / 5)\n    G['obtainiumGain'] *= (1 + player.researches[76] / 10)\n    G['obtainiumGain'] *= (1 + player.researches[81] / 10)\n    G['obtainiumGain'] *= (1 + player.shopUpgrades.obtainiumAuto / 50)\n    G['obtainiumGain'] *= (1 + player.shopUpgrades.cashGrab / 100)\n    G['obtainiumGain'] *= (1 + G['rune5level'] / 200 * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)))\n    G['obtainiumGain'] *= (1 + 0.01 * player.achievements[84] + 0.03 * player.achievements[91] + 0.05 * player.achievements[98] + 0.07 * player.achievements[105] + 0.09 * player.achievements[112] + 0.11 * player.achievements[119] + 0.13 * player.achievements[126] + 0.15 * player.achievements[133] + 0.17 * player.achievements[140] + 0.19 * player.achievements[147])\n    G['obtainiumGain'] *= (1 + 2 * Math.pow((player.antUpgrades[10-1] + G['bonusant10']) / 50, 2 / 3))\n    G['obtainiumGain'] *= (1 + player.achievements[188] * Math.min(2, player.ascensionCount / 5e6))\n    G['obtainiumGain'] *= (1 + 0.6 * player.achievements[250] + 1 * player.achievements[251])\n    G['obtainiumGain'] *= G['cubeBonusMultiplier'][5]\n    G['obtainiumGain'] *= (1 + 0.04 * player.constantUpgrades[4])\n    G['obtainiumGain'] *= (1 + 0.1 * player.cubeUpgrades[47])\n    G['obtainiumGain'] *= (1 + 0.1 * player.cubeUpgrades[3])\n    G['obtainiumGain'] *= (1 + 0.5 * CalcECC('ascension', player.challengecompletions[12]))\n    G['obtainiumGain'] *= (1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][4])\n    G['obtainiumGain'] *= (1 + 0.03 * Math.log(player.uncommonFragments + 1) / Math.log(4) * player.researches[144])\n    G['obtainiumGain'] *= (1 + 0.02 / 100 * player.cubeUpgrades[50])\n    if (player.achievements[53] > 0) {\n        G['obtainiumGain'] *= (1 + 1 / 800 * (G['runeSum']))\n    }\n    if (player.achievements[128]) {\n        G['obtainiumGain'] *= 1.5\n    }\n    if (player.achievements[129]) {\n        G['obtainiumGain'] *= 1.25\n    }\n\n    if (player.achievements[51] > 0) {\n        G['obtainiumGain'] += 4\n    }\n    if (player.reincarnationcounter >= 2) {\n        G['obtainiumGain'] += 1 * player.researches[63]\n    }\n    if (player.reincarnationcounter >= 5) {\n        G['obtainiumGain'] += 2 * player.researches[64]\n    }\n    G['obtainiumGain'] *= Math.min(1, Math.pow(player.reincarnationcounter / 10, 2));\n    G['obtainiumGain'] *= (1 + 1 / 25 * player.shopUpgrades.obtainiumEX)\n    if (player.reincarnationCount >= 5) {\n        G['obtainiumGain'] *= Math.max(1, player.reincarnationcounter / 10)\n    }\n    G['obtainiumGain'] *= Math.pow(Decimal.log(player.transcendShards.add(1), 10) / 300, 2)\n    G['obtainiumGain'] = Math.pow(G['obtainiumGain'], Math.min(1, G['illiteracyPower'][player.usedCorruptions[5]] * (1 + 9 / 100 * player.platonicUpgrades[9] * Math.min(100, Math.log(player.researchPoints + 10) / Math.log(10)))))\n    G['obtainiumGain'] *= (1 + 4 / 100 * player.cubeUpgrades[42])\n    G['obtainiumGain'] *= (1 + 3 / 100 * player.cubeUpgrades[43])\n    G['obtainiumGain'] *= (1 + player.platonicUpgrades[5])\n    G['obtainiumGain'] *= (1 + 1.5 * player.platonicUpgrades[9])\n    G['obtainiumGain'] *= (1 + 2.5 * player.platonicUpgrades[10])\n    G['obtainiumGain'] *= (1 + 5 * player.platonicUpgrades[15])\n    G['obtainiumGain'] *= G['challenge15Rewards'].obtainium\n    if (player.currentChallenge.ascension === 15) {\n        G['obtainiumGain'] += 1;\n    }\n    if (player.currentChallenge.ascension === 14) {\n        G['obtainiumGain'] = 0\n    }\n    player.obtainiumpersecond = G['obtainiumGain'] / (0.1 + player.reincarnationcounter)\n    player.maxobtainiumpersecond = Math.max(player.maxobtainiumpersecond, player.obtainiumpersecond);\n}\n\nexport const calculateAutomaticObtainium = () => {\n    return 0.05 * (10 * player.researches[61] + 2 * player.researches[62]) * player.maxobtainiumpersecond * (1 + 4 * player.cubeUpgrades[3] / 5);\n}\n\nexport const calculateTalismanEffects = () => {\n    let positiveBonus = 0;\n    let negativeBonus = 0;\n    if (player.achievements[135] === 1) {\n        positiveBonus += 0.02\n    }\n    if (player.achievements[136] === 1) {\n        positiveBonus += 0.02\n    }\n    positiveBonus += 0.02 * (player.talismanRarity[4-1] - 1)\n    positiveBonus += 3 * player.researches[106] / 100\n    positiveBonus += 3 * player.researches[107] / 100\n    positiveBonus += 3 * player.researches[116] / 200\n    positiveBonus += 3 * player.researches[117] / 200\n    positiveBonus += (G['cubeBonusMultiplier'][9] - 1)\n    positiveBonus += 0.0004 * player.cubeUpgrades[50]\n    negativeBonus += 0.06 * player.researches[118]\n    negativeBonus += 0.0004 * player.cubeUpgrades[50]\n    for (let i = 1; i <= 5; i++) {\n        if (player.talismanOne[i] === (1)) {\n            G['talisman1Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[1-1]] + positiveBonus) * player.talismanLevels[1-1] * G['challenge15Rewards'].talismanBonus\n        } else {\n            G['talisman1Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[1-1]] - negativeBonus) * player.talismanLevels[1-1] * (-1) * G['challenge15Rewards'].talismanBonus\n        }\n\n        if (player.talismanTwo[i] === (1)) {\n            G['talisman2Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[2-1]] + positiveBonus) * player.talismanLevels[2-1] * G['challenge15Rewards'].talismanBonus\n        } else {\n            G['talisman2Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[2-1]] - negativeBonus) * player.talismanLevels[2-1] * (-1) * G['challenge15Rewards'].talismanBonus\n        }\n\n        if (player.talismanThree[i] === (1)) {\n            G['talisman3Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[3-1]] + positiveBonus) * player.talismanLevels[3-1] * G['challenge15Rewards'].talismanBonus\n        } else {\n            G['talisman3Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[3-1]] - negativeBonus) * player.talismanLevels[3-1] * (-1) * G['challenge15Rewards'].talismanBonus\n        }\n\n        if (player.talismanFour[i] === (1)) {\n            G['talisman4Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[4-1]] + positiveBonus) * player.talismanLevels[4-1] * G['challenge15Rewards'].talismanBonus\n        } else {\n            G['talisman4Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[4-1]] - negativeBonus) * player.talismanLevels[4-1] * (-1) * G['challenge15Rewards'].talismanBonus\n        }\n\n        if (player.talismanFive[i] === (1)) {\n            G['talisman5Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[5-1]] + positiveBonus) * player.talismanLevels[5-1] * G['challenge15Rewards'].talismanBonus\n        } else {\n            G['talisman5Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[5-1]] - negativeBonus) * player.talismanLevels[5-1] * (-1) * G['challenge15Rewards'].talismanBonus\n        }\n\n        if (player.talismanSix[i] === (1)) {\n            G['talisman6Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[6-1]] + positiveBonus) * player.talismanLevels[6-1] * G['challenge15Rewards'].talismanBonus\n        } else {\n            G['talisman6Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[6-1]] - negativeBonus) * player.talismanLevels[6-1] * (-1) * G['challenge15Rewards'].talismanBonus\n        }\n\n        if (player.talismanSeven[i] === (1)) {\n            G['talisman7Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[7-1]] + positiveBonus) * player.talismanLevels[7-1] * G['challenge15Rewards'].talismanBonus\n        } else {\n            G['talisman7Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[7-1]] - negativeBonus) * player.talismanLevels[7-1] * (-1) * G['challenge15Rewards'].talismanBonus\n        }\n\n    }\n    const talismansEffects = [G['talisman1Effect'], G['talisman2Effect'], G['talisman3Effect'], G['talisman4Effect'], G['talisman5Effect'], G['talisman6Effect'], G['talisman7Effect']];\n    const runesTalisman = [0, 0, 0, 0, 0, 0];\n    talismansEffects.forEach((talismanEffect) => {\n        talismanEffect.forEach((levels, runeNumber) => {\n            runesTalisman[runeNumber] += levels;\n        });\n    });\n    [, G['rune1Talisman'], G['rune2Talisman'], G['rune3Talisman'], G['rune4Talisman'], G['rune5Talisman']] = runesTalisman;\n    G['talisman6Power'] = 0;\n    G['talisman7Quarks'] = 0;\n    if (player.talismanRarity[1-1] === 6) {\n        G['rune2Talisman'] += 400;\n    }\n    if (player.talismanRarity[2-1] === 6) {\n        G['rune1Talisman'] += 400;\n    }\n    if (player.talismanRarity[3-1] === 6) {\n        G['rune4Talisman'] += 400;\n    }\n    if (player.talismanRarity[4-1] === 6) {\n        G['rune3Talisman'] += 400;\n    }\n    if (player.talismanRarity[5-1] === 6) {\n        G['rune5Talisman'] += 400;\n    }\n    if (player.talismanRarity[6-1] === 6) {\n        G['talisman6Power'] = 2.5;\n    }\n    if (player.talismanRarity[7-1] === 6) {\n        G['talisman7Quarks'] = 2;\n    }\n}\n\nexport const calculateRuneLevels = () => {\n    calculateTalismanEffects();\n    if (player.currentChallenge.reincarnation !== 9) {\n        G['rune1level'] = Math.max(1, player.runelevels[0] + Math.min(1e7, (player.antUpgrades[9-1] + G['bonusant9'])) * 1 + (G['rune1Talisman']) + 7 * player.constantUpgrades[7])\n        G['rune2level'] = Math.max(1, player.runelevels[1] + Math.min(1e7, (player.antUpgrades[9-1] + G['bonusant9'])) * 1 + (G['rune2Talisman']) + 7 * player.constantUpgrades[7])\n        G['rune3level'] = Math.max(1, player.runelevels[2] + Math.min(1e7, (player.antUpgrades[9-1] + G['bonusant9'])) * 1 + (G['rune3Talisman']) + 7 * player.constantUpgrades[7])\n        G['rune4level'] = Math.max(1, player.runelevels[3] + Math.min(1e7, (player.antUpgrades[9-1] + G['bonusant9'])) * 1 + (G['rune4Talisman']) + 7 * player.constantUpgrades[7])\n        G['rune5level'] = Math.max(1, player.runelevels[4] + Math.min(1e7, (player.antUpgrades[9-1] + G['bonusant9'])) * 1 + (G['rune5Talisman']) + 7 * player.constantUpgrades[7])\n    }\n\n    G['runeSum'] = sumContents([G['rune1level'], G['rune2level'], G['rune3level'], G['rune4level'], G['rune5level']]);\n    calculateRuneBonuses();\n}\n\nexport const calculateRuneBonuses = () => {\n    G['blessingMultiplier'] = 1\n    G['spiritMultiplier'] = 1\n\n    G['blessingMultiplier'] *= (1 + 6.9 * player.researches[134] / 100)\n    G['blessingMultiplier'] *= (1 + (player.talismanRarity[3-1] - 1) / 10)\n    G['blessingMultiplier'] *= (1 + 0.10 * Math.log(player.epicFragments + 1) / Math.log(10) * player.researches[174])\n    G['blessingMultiplier'] *= (1 + 2 * player.researches[194] / 100)\n    if (player.researches[160] > 0) {\n        G['blessingMultiplier'] *= Math.pow(1.25, 8)\n    }\n    G['spiritMultiplier'] *= (1 + 8 * player.researches[164] / 100)\n    if (player.researches[165] > 0 && player.currentChallenge.ascension !== 0) {\n        G['spiritMultiplier'] *= Math.pow(2, 8)\n    }\n    G['spiritMultiplier'] *= (1 + 0.15 * Math.log(player.legendaryFragments + 1) / Math.log(10) * player.researches[189])\n    G['spiritMultiplier'] *= (1 + 2 * player.researches[194] / 100)\n    G['spiritMultiplier'] *= (1 + (player.talismanRarity[5-1] - 1) / 100)\n\n    for (let i = 1; i <= 5; i++) {\n        G['runeBlessings'][i] = G['blessingMultiplier'] * player.runelevels[i - 1] * player.runeBlessingLevels[i]\n        G['runeSpirits'][i] = G['spiritMultiplier'] * player.runelevels[i - 1] * player.runeSpiritLevels[i]\n    }\n\n    for (let i = 1; i <= 5; i++) {\n        if (G['runeBlessings'][i] <= 1e30) {\n            G['effectiveRuneBlessingPower'][i] = (Math.pow(G['runeBlessings'][i], 1 / 8)) / 75 * G['challenge15Rewards'].blessingBonus\n        } else if (G['runeBlessings'][i] > 1e30) {\n            G['effectiveRuneBlessingPower'][i] = Math.pow(10, 5 / 2) * (Math.pow(G['runeBlessings'][i], 1 / 24)) / 75 * G['challenge15Rewards'].blessingBonus\n        }\n        \n        if (G['runeSpirits'][i] <= 1e25) {\n            G['effectiveRuneSpiritPower'][i] = (Math.pow(G['runeSpirits'][i], 1 / 8)) / 75 * G['challenge15Rewards'].spiritBonus\n        } else if (G['runeSpirits'][i] > 1e25) {\n            G['effectiveRuneSpiritPower'][i] = Math.pow(10, 25 / 12) * (Math.pow(G['runeSpirits'][i], 1 / 24)) / 75 * G['challenge15Rewards'].spiritBonus\n        }\n        \n    }\n}\n\nexport const calculateAnts = () => {\n\n    let bonusLevels = 0;\n    bonusLevels += 2 * (player.talismanRarity[6-1] - 1);\n    bonusLevels += CalcECC('reincarnation', player.challengecompletions[9]);\n    bonusLevels += 2 * player.constantUpgrades[6];\n    bonusLevels += 12 * CalcECC('ascension', player.challengecompletions[11]);\n    bonusLevels += Math.floor(1 / 200 * player.researches[200]);\n    bonusLevels *= G['challenge15Rewards'].bonusAntLevel\n    let c11 = 0;\n    let c11bonus = 0;\n    if (player.currentChallenge.ascension === 11) {\n        c11 = 999\n    }\n    if (player.currentChallenge.ascension === 11) {\n        c11bonus = Math.floor((4 * player.challengecompletions[8] + 23 * player.challengecompletions[9]) * Math.max(0, (1 - player.challengecompletions[11] / 10)));\n    }\n    G['bonusant1'] = Math.min(player.antUpgrades[1-1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant2'] = Math.min(player.antUpgrades[2-1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant3'] = Math.min(player.antUpgrades[3-1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant4'] = Math.min(player.antUpgrades[4-1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant5'] = Math.min(player.antUpgrades[5-1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant6'] = Math.min(player.antUpgrades[6-1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant7'] = Math.min(player.antUpgrades[7-1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant8'] = Math.min(player.antUpgrades[8-1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant9'] = Math.min(player.antUpgrades[9-1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant10'] = Math.min(player.antUpgrades[10-1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant11'] = Math.min(player.antUpgrades[11-1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant12'] = Math.min(player.antUpgrades[12-1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n\n}\n\nexport const calculateAntSacrificeELO = () => {\n    G['antELO'] = 0;\n    G['effectiveELO'] = 0;\n    const antUpgradeSum = sumContents(player.antUpgrades);\n    if (player.antPoints.gte(\"1e40\")) {\n        G['antELO'] += Decimal.log(player.antPoints, 10);\n        G['antELO'] += 1 / 2 * antUpgradeSum;\n        G['antELO'] += 1 / 10 * player.firstOwnedAnts\n        G['antELO'] += 1 / 5 * player.secondOwnedAnts\n        G['antELO'] += 1 / 3 * player.thirdOwnedAnts\n        G['antELO'] += 1 / 2 * player.fourthOwnedAnts\n        G['antELO'] += player.fifthOwnedAnts\n        G['antELO'] += 2 * player.sixthOwnedAnts\n        G['antELO'] += 4 * player.seventhOwnedAnts\n        G['antELO'] += 8 * player.eighthOwnedAnts\n        G['antELO'] += 666 * player.researches[178]\n\n        if (player.achievements[180] === 1) {\n            G['antELO'] *= 1.01\n        }\n        if (player.achievements[181] === 1) {\n            G['antELO'] *= 1.03 / 1.01\n        }\n        if (player.achievements[182] === 1) {\n            G['antELO'] *= 1.06 / 1.03\n        }\n        G['antELO'] *= (1 + player.researches[110] / 100)\n        G['antELO'] *= (1 + 2.5 * player.researches[148] / 100)\n\n        if (player.achievements[176] === 1) {\n            G['antELO'] += 25\n        }\n        if (player.achievements[177] === 1) {\n            G['antELO'] += 50\n        }\n        if (player.achievements[178] === 1) {\n            G['antELO'] += 75\n        }\n        if (player.achievements[179] === 1) {\n            G['antELO'] += 100\n        }\n        G['antELO'] += 25 * player.researches[108]\n        G['antELO'] += 25 * player.researches[109]\n        G['antELO'] += 40 * player.researches[123]\n        G['antELO'] += 100 * CalcECC('reincarnation', player.challengecompletions[10])\n        G['antELO'] += 75 * player.upgrades[80]\n        G['antELO'] = 1 / 10 * Math.floor(10 * G['antELO'])\n\n        G['effectiveELO'] += 0.5 * Math.min(3500, G['antELO'])\n        G['effectiveELO'] += 0.1 * Math.min(4000, G['antELO'])\n        G['effectiveELO'] += 0.1 * Math.min(6000, G['antELO'])\n        G['effectiveELO'] += 0.1 * Math.min(10000, G['antELO'])\n        G['effectiveELO'] += 0.2 * G['antELO']\n        G['effectiveELO'] += (G['cubeBonusMultiplier'][8] - 1)\n        G['effectiveELO'] += 1 * player.cubeUpgrades[50]\n        G['effectiveELO'] *= (1 + 0.03 * player.upgrades[124])\n    }\n}\n\nconst calculateAntSacrificeMultipliers = () => {\n    G['timeMultiplier'] = Math.min(1, Math.pow(player.antSacrificeTimer / 10, 2))\n    if (player.achievements[177] === 0) {\n        G['timeMultiplier'] *= Math.min(1000, Math.max(1, player.antSacrificeTimer / 10))\n    }\n    if (player.achievements[177] > 0) {\n        G['timeMultiplier'] *= Math.max(1, player.antSacrificeTimer / 10)\n    }\n\n    G['upgradeMultiplier'] = 1;\n    G['upgradeMultiplier'] *= (1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11-1] + G['bonusant11']) / 125)));\n    G['upgradeMultiplier'] *= (1 + player.researches[103] / 20);\n    G['upgradeMultiplier'] *= (1 + player.researches[104] / 20);\n    if (player.achievements[132] === 1) {\n        G['upgradeMultiplier'] *= 1.25\n    }\n    if (player.achievements[137] === 1) {\n        G['upgradeMultiplier'] *= 1.25\n    }\n    G['upgradeMultiplier'] *= (1 + 6.66 * G['effectiveRuneBlessingPower'][3]);\n    G['upgradeMultiplier'] *= (1 + 1 / 50 * CalcECC('reincarnation', player.challengecompletions[10]));\n    G['upgradeMultiplier'] *= (1 + 1 / 50 * player.researches[122]);\n    G['upgradeMultiplier'] *= (1 + 3 / 100 * player.researches[133]);\n    G['upgradeMultiplier'] *= (1 + 2 / 100 * player.researches[163]);\n    G['upgradeMultiplier'] *= (1 + 1 / 100 * player.researches[193]);\n    G['upgradeMultiplier'] *= (1 + 1 / 10 * player.upgrades[79]);\n    G['upgradeMultiplier'] *= (1 + 0.09 * player.upgrades[40]);\n    G['upgradeMultiplier'] *= G['cubeBonusMultiplier'][7];\n}\n\ninterface IAntSacRewards {\n    antSacrificePoints: number\n    offerings: number\n    obtainium: number\n    talismanShards: number\n    commonFragments: number\n    uncommonFragments: number\n    rareFragments: number\n    epicFragments: number\n    legendaryFragments: number\n    mythicalFragments: number\n}\n\nexport const calculateAntSacrificeRewards = (): IAntSacRewards => {\n    calculateAntSacrificeELO();\n    calculateAntSacrificeMultipliers();\n\n    const rewardsMult = G['timeMultiplier'] * G['upgradeMultiplier'];\n    const rewards: IAntSacRewards = {\n        antSacrificePoints: G['effectiveELO'] * rewardsMult / 85,\n        offerings: player.offeringpersecond * 0.15 * G['effectiveELO'] * rewardsMult / 180,\n        obtainium: player.maxobtainiumpersecond * 0.24 * G['effectiveELO'] * rewardsMult / 180,\n        talismanShards: (G['antELO'] > 500) \n            ? Math.max(1, Math.floor(rewardsMult / 210 * Math.pow(1 / 4 * (Math.max(0, G['effectiveELO'] - 500)), 2))) \n            : 0,\n        commonFragments: (G['antELO'] > 750) \n            ? Math.max(1, Math.floor(rewardsMult / 110 * Math.pow(1 / 9 * (Math.max(0, G['effectiveELO'] - 750)), 1.83))) \n            : 0,\n        uncommonFragments: (G['antELO'] > 1000) \n            ? Math.max(1, Math.floor(rewardsMult / 170 * Math.pow(1 / 16 * (Math.max(0, G['effectiveELO'] - 1000)), 1.66))) \n            : 0,\n        rareFragments: (G['antELO'] > 1500) \n            ? Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 25 * (Math.max(0, G['effectiveELO'] - 1500)), 1.50))) \n            : 0,\n        epicFragments: (G['antELO'] > 2000) \n            ? Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 36 * (Math.max(0, G['effectiveELO'] - 2000)), 1.33))) \n            : 0,\n        legendaryFragments: (G['antELO'] > 3000) \n            ? Math.max(1, Math.floor(rewardsMult / 230 * Math.pow(1 / 49 * (Math.max(0, G['effectiveELO'] - 3000)), 1.16))) \n            : 0,\n        mythicalFragments: (G['antELO'] > 5000) \n            ? Math.max(1, Math.floor(rewardsMult / 220 * Math.pow(1 / 64 * (Math.max(0, G['effectiveELO'] - 4150)), 1))) \n            : 0\n    };\n\n    return rewards;\n}\n\nexport const timeWarp = async () => {\n    const time = await Prompt('How far in the future would you like to go into the future? Anything awaits when it is testing season.');\n    const timeUse = Number(time);\n        if (\n            Number.isNaN(timeUse) ||\n            timeUse <= 0\n        )\n            return Alert(`Hey! That's not a valid time!`);\n    \n    document.getElementById('offlineContainer').style.display = 'flex'\n    document.getElementById('preload').style.display = 'block'\n    calculateOffline(timeUse)\n}\n\nexport const calculateOffline = (forceTime = 0) => {\n    G['timeWarp'] = true;\n\n    //Variable Declarations i guess\n    const maximumTimer = 86400 * 3 + 7200 * 2 * player.researches[31] + 7200 * 2 * player.researches[32];\n    const updatedTime = Date.now();\n    const timeAdd = Math.min(maximumTimer, Math.max(forceTime, (updatedTime - player.offlinetick) / 1000))\n    const timeTick = timeAdd/200;\n    let resourceTicks = 200;\n\n    document.getElementById(\"offlineTimer\").textContent = \"You have \" + format(timeAdd, 0) + \" seconds of Offline Progress!\";\n\n    //May 11, 2021: I've revamped calculations for this significantly. Note to May 11 Platonic: Fuck off -May 15 Platonic\n    //Some one-time tick things that are relatively important\n    toggleTalismanBuy(player.buyTalismanShardPercent);\n    updateTalismanInventory();\n\n    document.getElementById('preload').style.display = (forceTime > 0) ? 'none' : 'block';\n    document.getElementById(\"offlineContainer\").style.display = \"flex\";\n\n    player.offlinetick = (player.offlinetick < 1.5e12) ? (Date.now()) : player.offlinetick;    \n\n    //Set the preload as a blank black background for now (to allow aesthetic offline counter things)\n    const preloadImage = getElementById<HTMLImageElement>(\"preload\"); \n    preloadImage.src = 'Pictures/Blank Preload.png';\n\n    G['timeMultiplier'] = calculateTimeAcceleration();\n    calculateObtainium();\n    const obtainiumGain = calculateAutomaticObtainium();\n\n    const resetAdd = {\n        prestige: timeAdd / Math.max(0.01, player.fastestprestige),\n        offering: Math.floor(timeAdd),\n        transcension: timeAdd / Math.max(0.01, player.fastesttranscend),\n        reincarnation: timeAdd / Math.max(0.01, player.fastestreincarnate),\n        obtainium: timeAdd * obtainiumGain * G['timeMultiplier'],\n    };\n\n    const timerAdd = {\n        prestige: timeAdd * G['timeMultiplier'],\n        transcension: timeAdd * G['timeMultiplier'],\n        reincarnation: timeAdd * G['timeMultiplier'],\n        ants: timeAdd * G['timeMultiplier'],\n        antsReal: timeAdd,\n        ascension: player.ascensionCounter, //Calculate this after the fact\n        quarks: quarkHandler().gain //Calculate this after the fact\n    };\n\n    addTimers('ascension', timeAdd);\n    addTimers('quarks', timeAdd);\n\n    player.prestigeCount += resetAdd.prestige;\n    player.transcendCount += resetAdd.transcension;\n    player.reincarnationCount += resetAdd.reincarnation;\n    timerAdd.ascension = player.ascensionCounter - timerAdd.ascension\n    timerAdd.quarks = quarkHandler().gain - timerAdd.quarks\n    \n    //200 simulated all ticks [July 12, 2021]\n    const runOffline = interval(() => {\n        G['timeMultiplier'] = calculateTimeAcceleration();\n        calculateObtainium();\n\n        //Reset Stuff lmao!\n        addTimers('prestige', timeTick);\n        addTimers('transcension', timeTick);\n        addTimers('reincarnation', timeTick);\n\n        resourceGain(timeTick * G['timeMultiplier']);\n\n        //Auto Obtainium Stuff\n         if (player.researches[61] > 0 && player.currentChallenge.ascension !== 14)\n          automaticTools('addObtainium', timeTick);\n\n        //Auto Ant Sacrifice Stuff\n        if (player.achievements[173] > 0)\n            automaticTools('antSacrifice', timeTick);\n\n        //Auto Offerings\n        automaticTools('addOfferings', timeTick);\n        //Auto Rune Sacrifice Stuff\n        if (player.shopUpgrades.offeringAuto > 0 && player.autoSacrificeToggle)\n            automaticTools('runeSacrifice', timeTick);\n        \n        if (resourceTicks % 5 === 1) // 196, 191, ... , 6, 1 ticks remaining\n            updateAll();\n\n        resourceTicks -= 1;\n        //Misc functions\n        if (resourceTicks < 1) {\n            clearInt(runOffline);\n            G['timeWarp'] = false;\n        }\n    }, 0);\n\n    document.getElementById('offlinePrestigeCountNumber').textContent = format(resetAdd.prestige, 0, true)\n    document.getElementById('offlinePrestigeTimerNumber').textContent = format(timerAdd.prestige, 2, false)\n    document.getElementById('offlineOfferingCountNumber').textContent = format(resetAdd.offering, 0, true)\n    document.getElementById('offlineTranscensionCountNumber').textContent = format(resetAdd.transcension, 0, true)\n    document.getElementById('offlineTranscensionTimerNumber').textContent = format(timerAdd.transcension, 2, false)\n    document.getElementById('offlineReincarnationCountNumber').textContent = format(resetAdd.reincarnation, 0, true)\n    document.getElementById('offlineReincarnationTimerNumber').textContent = format(timerAdd.reincarnation, 2, false)\n    document.getElementById('offlineObtainiumCountNumber').textContent = format(resetAdd.obtainium, 0, true)\n    document.getElementById('offlineAntTimerNumber').textContent = format(timerAdd.ants, 2, false)\n    document.getElementById('offlineRealAntTimerNumber').textContent = format(timerAdd.antsReal, 2, true)\n    document.getElementById('offlineAscensionTimerNumber').textContent = format(timerAdd.ascension, 2, true)\n    document.getElementById('offlineQuarkCountNumber').textContent = format(timerAdd.quarks, 0, true)\n\n    document.getElementById('progressbardescription').textContent = 'You have gained the following from offline progression!'\n\n    player.offlinetick = updatedTime\n    if (!player.loadedNov13Vers) {\n        if (player.challengecompletions[14] > 0 || player.highestchallengecompletions[14] > 0) {\n            const ascCount = player.ascensionCount;\n            reset(\"ascensionChallenge\");\n            player.ascensionCount = (ascCount + 1)\n        }\n        player.loadedNov13Vers = true\n    }\n\n    saveSynergy();\n    updateTalismanInventory();\n    calculateObtainium();\n    calculateAnts();\n    calculateRuneLevels();\n\n}\n\nexport const exitOffline = () => {\n    document.getElementById(\"offlineContainer\").style.display = \"none\";\n    document.getElementById(\"preload\").style.display = \"none\";\n}\n\nexport const calculateSigmoid = (constant: number, factor: number, divisor: number) => {\n    return (1 + (constant - 1) * (1 - Math.pow(2, -(factor) / (divisor))));\n}\n\nexport const calculateSigmoidExponential = (constant: number, coefficient: number) => {\n    return (1 + (constant - 1) * (1 - Math.exp(-coefficient)))\n}\n\nexport const calculateCubeBlessings = () => {\n    // The visual updates are handled in visualUpdateCubes()\n    const cubeArray = [player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed]\n    const powerBonus = [player.cubeUpgrades[45] / 100, player.cubeUpgrades[35] / 100, player.cubeUpgrades[24] / 100, player.cubeUpgrades[14] / 100, player.cubeUpgrades[40] / 100, player.cubeUpgrades[22] / 40, player.cubeUpgrades[15] / 100, player.cubeUpgrades[25] / 100, player.cubeUpgrades[44] / 100, player.cubeUpgrades[34] / 100]\n\n    for (let i = 1; i <= 10; i++) {\n        let power = 1;\n        let mult = 1;\n        if (cubeArray[i-1] >= 1000) {\n            power = G['blessingDRPower'][i];\n            mult *= Math.pow(1000, (1 - G['blessingDRPower'][i]) * (1 + powerBonus[i-1]));\n        }\n        if (i === 6) {\n            power = 2.25;\n            mult = 1;\n        }\n\n        G['cubeBonusMultiplier'][i] = 1 + mult * G['blessingbase'][i] * Math.pow(cubeArray[i-1], power * (1 + powerBonus[i-1])) * G['tesseractBonusMultiplier'][i];\n    }\n    calculateRuneLevels();\n    calculateAntSacrificeELO();\n    calculateObtainium();\n}\n\nexport const calculateAllCubeMultiplier = () => {\n    const arr = [\n        // Ascension Time Multiplier to cubes\n        Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1)),\n        // Sun and Moon achievements\n        1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251],\n        // Speed Achievement\n        1 + player.achievements[240] * Math.min(0.5, Math.max(0.1, 1 / 20 * Math.log10(calculateTimeAcceleration() + 0.01))),\n        // Challenge 15: All Cube Gain bonuses 1-5\n        G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4 * G['challenge15Rewards'].cube5,\n        // Rune 6: Infinite Ascent\n        1 + 1/100 * player.runelevels[5],\n        // BETA: 2x Cubes\n        1 + player.platonicUpgrades[10],\n        // OMEGA: C9 Cube Bonus\n        Math.pow(1.01, player.platonicUpgrades[15] * player.challengecompletions[9]),\n        // Powder Bonus\n        calculateCubeMultFromPowder(),\n        // Event (currently, +20.21%)\n        1 + 0.2021 * +G['isEvent'],\n        // Total Global Cube Multipliers: 9\n    ]\n    return {\n        mult: productContents(arr),\n        list: arr\n    }\n}\n\nexport const calculateCubeMultiplier = (score = -1) => {\n    if (score < 0)\n        score = calculateAscensionScore().effectiveScore;\n\n    const arr = [\n        // Ascension Score Multiplier\n        Math.pow(score / 3000, 1 / 4.1),\n        // Global Multiplier\n        calculateAllCubeMultiplier().mult,\n        // Season Pass 1\n        1 + 3 / 200 * player.shopUpgrades.seasonPass,\n        // Researches (Excl 8x25)\n        (1 + player.researches[119] / 400) * // 5x19\n        (1 + player.researches[120] / 400) * // 5x20\n        (1 + player.researches[137] / 100) * // 6x12\n        (1 + 0.9 * player.researches[152] / 100) * // 7x2\n        (1 + 0.8 * player.researches[167] / 100) * // 7x17\n        (1 + 0.7 * player.researches[182] / 100) * // 8x7\n        (1 + 0.03 / 100 * player.researches[192] * player.antUpgrades[12-1]) * // 8x17\n        (1 + 0.6 * player.researches[197] / 100),  // 8x22\n        // Research 8x25\n        1 + 0.004 / 100 * player.researches[200],\n        // Cube Upgrades\n        (1 + 14 * player.cubeUpgrades[1] / 100) * // 1x1\n        (1 + 7 * player.cubeUpgrades[11] / 100) * // 2x1\n        (1 + 7 * player.cubeUpgrades[21] / 100) * // 3x1\n        (1 + 0.25 * player.cubeUpgrades[30]) *    // 3x10\n        (1 + 7 * player.cubeUpgrades[31] / 100) * // 4x1\n        (1 + 7 * player.cubeUpgrades[41] / 100), // 5x1\n        // Constant Upgrade 10\n        1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\n        // Achievement 189 Bonus\n        1 + player.achievements[189] * Math.min(2, player.ascensionCount / 2.5e8),\n        // Achievement 193 Bonus\n        1 + player.achievements[193] * Decimal.log(player.ascendShards.add(1), 10) / 400,\n        // Achievement 195 Bonus\n        1 + Math.min(250, player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400),\n        // Achievement 198-201 Bonus\n        1 + 4 / 100 * (player.achievements[198] + player.achievements[199] + player.achievements[200]) + 3 / 100 * player.achievements[201],\n        // Achievement 254 Bonus\n        1 + (Math.min(0.15, 0.6/100 * Math.log10(score + 1))) * player.achievements[254],\n        // Spirit Power\n        1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][2],\n        // Platonic Cube Opening Bonus\n        G['platonicBonusMultiplier'][0],\n        // Platonic 1x1\n        1 + 0.000075 * sumContents(player.usedCorruptions) * player.platonicUpgrades[1],\n        // Total Multipliers to cubes: 15\n    ];\n\n    // Decided to return a copy of list as well as the actual multiplier, instead of differentiating\n    return {list: arr,\n            mult: productContents(arr)}\n}\n\nexport const calculateTesseractMultiplier = (score = -1) => {\n    if (score < 0)\n        score = calculateAscensionScore().effectiveScore;\n\n    const arr = [\n        // Ascension Score Multiplier\n        Math.pow(1 + Math.max(0, (score - 1e5)) / 1e4, .35),\n        // Global Multiplier\n        calculateAllCubeMultiplier().mult,\n        // Season Pass 1\n        1 + 3 / 200 * player.shopUpgrades.seasonPass,\n        // 10th Const Upgrade +Tesseract%\n        1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\n        // Cube Upgrade 3x10\n        1 + 0.25 * player.cubeUpgrades[30],\n        // Cube Upgrade 4x8\n        1 + 1 / 200 * player.cubeUpgrades[38] * sumContents(player.usedCorruptions),\n        // Achievement 195 Bonus\n        1 + Math.min(250, player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400),\n        // Achievement 202 Bonus\n        1 + player.achievements[202] * Math.min(2, player.ascensionCount / 5e8),\n        // Achievement 205-208 Bonus\n        1 + 4 / 100 * (player.achievements[205] + player.achievements[206] + player.achievements[207]) + 3 / 100 * player.achievements[208],\n        // Achievement 255 Bonus\n        1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[255],\n        // Platonic Cube Bonus\n        G['platonicBonusMultiplier'][1],\n        // Platonic Upgrade 1x2 \n        1 + 0.00015 * sumContents(player.usedCorruptions) * player.platonicUpgrades[2],\n        // Total Tesseract Multipliers: 12\n    ]\n\n    return {list: arr,\n            mult: productContents(arr)}\n}\n\nexport const calculateHypercubeMultiplier = (score = -1) => {\n    if (score < 0)\n        score = calculateAscensionScore().effectiveScore;\n\n    const arr = [\n        // Ascension Score Multiplier\n        Math.pow(1 + Math.max(0, (score - 1e9)) / 1e8, .5),\n        // Global Multiplier\n        calculateAllCubeMultiplier().mult,\n        // Season Pass 2\n        1 + 1 / 100 * player.shopUpgrades.seasonPass2,\n        // Achievement 212 - 215 Bonus\n        1 + 4 / 100 * (player.achievements[212] + player.achievements[213] + player.achievements[214]) + 3 / 100 * player.achievements[215],\n        // Achievement 216 Bonus\n        1 + player.achievements[216] * Math.min(2, player.ascensionCount / 1e9),\n        // Achievement 253 Bonus\n        1 + 1 / 10 * player.achievements[253],\n        // Achievement 256 Bonus\n        1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)),\n        // Achievement 265 Bonus\n        1 + Math.min(2, player.ascensionCount / 2.5e10) * player.achievements[265],\n        // Platonic Cubes Opened Bonus\n        G['platonicBonusMultiplier'][2],\n        // Platonic Upgrade 1x3\n        1 + 0.00045 * sumContents(player.usedCorruptions) * player.platonicUpgrades[3],\n        // Hyperreal Hepteract Bonus\n        1 + 0.6/1000 * hepteractEffective('hyperrealism')\n        // Total Hypercube Multipliers: 11\n    ]\n\n    return {list: arr,\n            mult: productContents(arr)}\n}\n\nexport const calculatePlatonicMultiplier = (score = -1) => {\n    if (score < 0)\n        score = calculateAscensionScore().effectiveScore;\n    \n    const arr = [\n        // Ascension Score Multiplier\n        Math.pow(1 + Math.max(0, score - 1.337e12) / 1.337e11, .75),\n        // Global Multipliers\n        calculateAllCubeMultiplier().mult,\n        // Season Pass 2\n        1 + 1 / 100 * player.shopUpgrades.seasonPass2,\n        // Achievement 196 Bonus \n        1 + Math.min(20, player.achievements[196] * 1 / 5000 * Decimal.log(player.ascendShards.add(1), 10)),\n        // Achievement 219-222 Bonus\n        1 + 4 / 100 * (player.achievements[219] + player.achievements[220] + player.achievements[221]) + 3 / 100 * player.achievements[222],\n        // Achievement 223 Bonus\n        1 + player.achievements[223] * Math.min(2, player.ascensionCount / 1.337e9),\n        // Achievement 257 Bonus\n        1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[257],\n        // Platonic Cube Opening Bonus\n        G['platonicBonusMultiplier'][3],\n        // Platonic Upgrade 1x4\n        1 + player.platonicUpgrades[4] / 50,\n        // Total Platonic Multipliers: 9\n    ]\n\n    return {list: arr,\n            mult: productContents(arr)}\n}\n\nexport const calculateHepteractMultiplier = (score = -1) => {\n    if (score < 0)\n        score = calculateAscensionScore().effectiveScore;\n    \n    const arr = [\n        // Ascension Score Multiplier\n        Math.pow(1 + Math.max(0, score - 6.66e16) / 3.33e16, 0.85),\n        // Global Multiplier\n        calculateAllCubeMultiplier().mult,\n        // Season Pass 3\n        1 + 1 / 100 * player.shopUpgrades.seasonPass3,\n        // Achievement 258 Bonus\n        1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[258],\n        // Achievement 264 Bonus [Max: 8T Asc]\n        1 + Math.min(0.4, player.ascensionCount / 2e13) * player.achievements[264],\n        // Achievement 265 Bonus [Max: 160T Asc]\n        1 + Math.min(0.2, player.ascensionCount / 8e14) * player.achievements[265],\n        // Achievement 270 Bonus\n        Math.min(2, (1 + 1/100000 * Decimal.log(player.ascendShards.add(1), 10)))\n        // Total Hepteract Multipliers: 7\n    ]\n\n    return {list: arr,\n            mult: productContents(arr)}\n}\n\nexport const calculateTimeAcceleration = () => {\n    let timeMult = 1;\n    timeMult *= (1 + 1 / 300 * Math.log(player.maxobtainium + 1) / Math.log(10) * player.upgrades[70]) //Particle upgrade 2x5\n    timeMult *= (1 + player.researches[121] / 50); // research 5x21\n    timeMult *= (1 + 0.015 * player.researches[136]) // research 6x11\n    timeMult *= (1 + 0.012 * player.researches[151]) // research 7x1\n    timeMult *= (1 + 0.009 * player.researches[166]) // research 7x16\n    timeMult *= (1 + 0.006 * player.researches[181]) // research 8x6\n    timeMult *= (1 + 0.003 * player.researches[196]) // research 8x21\n    timeMult *= (1 + 8 * G['effectiveRuneBlessingPower'][1]); // speed blessing\n    timeMult *= (1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][1]) // speed SPIRIT\n    timeMult *= G['cubeBonusMultiplier'][10]; // Chronos cube blessing\n    timeMult *= 1 + player.cubeUpgrades[18] / 5; // cube upgrade 2x8\n    timeMult *= calculateSigmoid(2, player.antUpgrades[12-1] + G['bonusant12'], 69) // ant 12\n    timeMult *= (1 + 0.10 * (player.talismanRarity[2-1] - 1)) // Chronos Talisman bonus\n    timeMult *= G['challenge15Rewards'].globalSpeed // Challenge 15 reward\n    timeMult *= G['lazinessMultiplier'][player.usedCorruptions[3]]\n    if (timeMult > 100) {\n        timeMult = 10 * Math.sqrt(timeMult)\n    }\n    if (timeMult < 1) {\n        timeMult = Math.pow(timeMult, 1 - player.platonicUpgrades[7] / 30)\n    }\n    timeMult *= G['platonicBonusMultiplier'][7]\n    if (player.usedCorruptions[3] >= 6 && player.achievements[241] < 1) {\n        achievementaward(241)\n    }\n    if (timeMult > 3600 && player.achievements[242] < 1) {\n        achievementaward(242)\n    }\n    return (timeMult)\n}\n\nexport const calculateAscensionAcceleration = () => {\n    const arr = [\n        1 + player.shopUpgrades.chronometer / 100,                                                      // Shop Upgrade\n        1 + 0.6/1000 * hepteractEffective('chronos'),                                                   // Hepteract\n        1 + 0.25 * player.achievements[259],                                                            // Achieve 259\n        1 + Math.min(0.10, 1/100 * Math.log10(player.ascensionCount + 1)) * player.achievements[262],   // Achieve 262\n        1 + Math.min(0.10, 1/100 * Math.log10(player.ascensionCount + 1)) * player.achievements[263],   // Achieve 263\n        1 + 0.002 * sumContents(player.usedCorruptions) * player.platonicUpgrades[15],                  // PLAT Omega\n        G['challenge15Rewards'].ascensionSpeed,                                                         // C15\n    ]\n    return productContents(arr)\n}\n\nexport const calculateCorruptionPoints = () => {\n    let basePoints = 400;\n\n    for (let i = 1; i <= 9; i++) {\n        basePoints += 16 * Math.pow(player.usedCorruptions[i], 2)\n    }\n\n    return (basePoints)\n}\n\n//If you want to sum from a baseline level i to the maximum buyable level n, what would the cost be and how many levels would you get?\nexport const calculateSummationLinear = (\n    baseLevel: number, \n    baseCost: number, \n    resourceAvailable: number, \n    differenceCap = 1e9\n): [number, number] => {\n    const subtractCost = baseCost * baseLevel * (1 + baseLevel) / 2;\n    const buyToLevel = Math.min(baseLevel + differenceCap, Math.floor(-1 / 2 + Math.sqrt(1 / 4 + 2 * (resourceAvailable + subtractCost) / baseCost)));\n    const realCost = (baseCost * buyToLevel * (1 + buyToLevel) / 2) - subtractCost;\n\n    return [buyToLevel, realCost];\n}\n\n//If you want to sum from a baseline level baseLevel to some level where the cost per level is base * (1 + level * diffPerLevel), this finds out how many total levels you can buy.\nexport const calculateSummationNonLinear = (\n    baseLevel: number, \n    baseCost: number, \n    resourceAvailable: number, \n    diffPerLevel: number, \n    buyAmount: number\n): [number, number] => {\n    const c = diffPerLevel / 2\n    resourceAvailable = resourceAvailable || 0\n    const alreadySpent = baseCost * (c * Math.pow(baseLevel, 2) + baseLevel * (1 - c))\n    resourceAvailable += alreadySpent\n    const v = resourceAvailable / baseCost\n    let buyToLevel = c > 0\n        ? Math.max(0, Math.floor((c - 1) / (2 * c) + Math.pow(Math.pow(1 - c, 2) + 4 * c * v, 1 / 2) / (2 * c)))\n        : Math.floor(v);\n\n    buyToLevel = Math.min(buyToLevel, buyAmount + baseLevel)\n    let totalCost = baseCost * (c * Math.pow(buyToLevel, 2) + buyToLevel * (1 - c)) - alreadySpent\n    if (buyToLevel == baseLevel) {\n        totalCost = baseCost * (1 + 2 * c * baseLevel)\n    }\n    return [buyToLevel, totalCost]\n}\n\n// IDEA: Rework this shit to be friendly for Stats for Nerds\n/* May 25, 2021 - Platonic\n    Reorganize this function to make sense, because right now it aint\n    What I did was use the separation of cube gain method on other cube types, and made some methods their\n    own function (specifically: calc of effective score and other global multipliers) to make it easy.\n*/\n\nexport const calculateAscensionScore = () => {\n    let baseScore = 0;\n    let corruptionMultiplier = 1;\n    let effectiveScore = 0;\n\n    // Init Arrays with challenge values :)\n    const challengeScoreArrays1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300];\n    const challengeScoreArrays2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450];\n    const challengeScoreArrays3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750];\n\n    // Iterate challenges 1 through 10 and award base score according to the array values\n    // Transcend Challenge: First Threshold at 75 completions, second at 750\n    // Reincarnation Challenge: First at 25, second at 60. It probably should be higher but Platonic is a dumb dumb\n    for (let i = 1; i <= 10; i++) {\n        baseScore += challengeScoreArrays1[i] * player.highestchallengecompletions[i]\n        if (i <= 5 && player.highestchallengecompletions[i] >= 75) {\n            baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 75)\n            if (player.highestchallengecompletions[i] >= 750) {\n                baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 750)\n            }\n        }\n        if (i <= 10 && i > 5 && player.highestchallengecompletions[i] >= 25) {\n            baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 25)\n            if (player.highestchallengecompletions[i] >= 60) {\n                baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 60)\n            }\n        }\n    }\n\n    // Calculation of Challenge 10 Exponent (It gives a constant multiplier per completion)\n    // 1.03 +\n    // 0.005 from Cube 3x9 +\n    // 0.0025 from Platonic ALPHA (Plat 1x5)\n    // 0.005 from Platonic BETA (Plat 2x5)\n    // Max: 1.0425\n    baseScore *= Math.pow(1.03 + 0.005 * player.cubeUpgrades[39] + 0.0025 * (player.platonicUpgrades[5] + player.platonicUpgrades[10]), player.highestchallengecompletions[10]);\n    // Corruption Multiplier is the product of all Corruption Score multipliers based on used corruptions\n    for (let i = 1; i <= 10; i++) {\n        const exponent = ((i === 1 || i === 2) && player.usedCorruptions[i] >= 10) ? 1.75 + 0.0175 * player.platonicUpgrades[17] : 1;\n        corruptionMultiplier *= Math.pow(G['corruptionPointMultipliers'][player.usedCorruptions[i]], exponent);\n    }\n\n    effectiveScore = baseScore * corruptionMultiplier * G['challenge15Rewards'].score * G['platonicBonusMultiplier'][6]\n    if (player.achievements[267] > 0)\n        effectiveScore *= (1 + Math.min(1, 1/100000 * Decimal.log(player.ascendShards.add(1), 10)))\n\n    return {baseScore: baseScore,\n            corruptionMultiplier: corruptionMultiplier,\n            effectiveScore: effectiveScore}\n}\n\nexport const CalcCorruptionStuff = () => {\n    let cubeBank = 0;\n    let challengeModifier = 1;\n    const scores = calculateAscensionScore();\n\n    const baseScore = scores.baseScore;\n    const corruptionMultiplier = scores.corruptionMultiplier;\n    const effectiveScore = scores.effectiveScore;\n\n    for (let i = 1; i <= 10; i++) {\n        challengeModifier = (i >= 6) ? 2 : 1;\n        cubeBank += challengeModifier * player.highestchallengecompletions[i]\n    }\n\n    // Calculation of Cubes :)\n    let cubeGain = cubeBank;\n    cubeGain *= calculateCubeMultiplier(effectiveScore).mult;\n\n    // Calculation of Tesseracts :))\n    let tesseractGain = 1;\n    if(effectiveScore >= 100000)\n        tesseractGain += 0.5\n    tesseractGain *= calculateTesseractMultiplier(effectiveScore).mult;\n\n    // Calculation of Hypercubes :)))\n    let hypercubeGain = (effectiveScore >= 1e9) ? 1 : 0;\n    hypercubeGain *= calculateHypercubeMultiplier(effectiveScore).mult;\n    \n    // Calculation of Platonic Cubes :))))\n    let platonicGain = (effectiveScore >= 1.337e12) ? 1 : 0;\n    platonicGain *= calculatePlatonicMultiplier(effectiveScore).mult;\n\n    // Calculation of Hepteracts :)))))\n    let hepteractGain = (G['challenge15Rewards']['hepteractUnlocked'] && effectiveScore >= 6.66e16 && player.achievements[255] > 0) ? 1 : 0;\n    hepteractGain *= calculateHepteractMultiplier(effectiveScore).mult\n    \n    return [cubeBank, Math.floor(baseScore), corruptionMultiplier, Math.floor(effectiveScore), Math.floor(cubeGain), Math.floor(tesseractGain), Math.floor(hypercubeGain), Math.floor(platonicGain), Math.floor(hepteractGain)]\n}\n\n/**\n * Calculates the product of all Powder bonuses.\n * @returns The amount of Powder gained per Expired Orb on day reset\n */\nexport const calculatePowderConversion = () => {\n    const arr = [\n        1/100, // base\n        G['challenge15Rewards'].powder, // Challenge 15: Powder Bonus\n        (1 + player.shopUpgrades.powderEX / 50), // powderEX shop upgrade, 2% per level max 20%\n        (1 + player.achievements[256] / 20), // Achievement 256, 5%\n        (1 + player.achievements[257] / 20), // Achievement 257, 5%\n        1 + 0.01 * player.platonicUpgrades[16], // Platonic Upgrade 4x1\n        1 // Event!\n    ]\n    \n    return {\n        list: arr,\n        mult: productContents(arr)\n    }\n}\n\nexport const calculateCubeQuarkMultiplier = () => {\n    return calculateSigmoid(2, Math.pow(player.overfluxOrbs, 0.5), 40) +\n           calculateSigmoid(1.5, Math.pow(player.overfluxOrbs, 0.5), 160) +\n           calculateSigmoid(1.5, Math.pow(player.overfluxOrbs, 0.5), 640) -\n           2;\n}\n\nexport const calculateCubeMultFromPowder = () => {\n    return (player.overfluxPowder > 10000) ? (1 + 1/16 * Math.pow(Math.log10(player.overfluxPowder), 2)) : (1 + 1/10000 * player.overfluxPowder)\n}\n\nexport const calculateQuarkMultFromPowder = () => {\n    return (player.overfluxPowder > 10000) ? (1 + 1/40 * Math.log10(player.overfluxPowder)) : (1 + 1/100000 * player.overfluxPowder);\n}\n\nexport const dailyResetCheck = () => {\n    player.dayCheck ||= new Date();\n    if (typeof player.dayCheck === 'string') {\n        player.dayCheck = new Date(player.dayCheck);\n    }\n\n    const d = new Date()\n    const h = d.getHours()\n    const m = d.getMinutes()\n    const s = d.getSeconds()\n    player.dayTimer = (60 * 60 * 24) - (60 * 60 * h) - (60 * m) - s;    \n\n    if (d.getDate() !== player.dayCheck.getDate() || d.getMonth() !== player.dayCheck.getMonth() || d.getFullYear() !== player.dayCheck.getFullYear()) {\n        player.dayCheck = new Date();\n        player.cubeQuarkDaily = 0;\n        player.tesseractQuarkDaily = 0;\n        player.hypercubeQuarkDaily = 0;\n        player.platonicCubeQuarkDaily = 0;\n        player.cubeOpenedDaily = 0;\n        player.tesseractOpenedDaily = 0;\n        player.hypercubeOpenedDaily = 0;\n        player.platonicCubeOpenedDaily = 0;\n        \n        player.overfluxPowder += player.overfluxOrbs * calculatePowderConversion().mult;\n        player.overfluxOrbs = G['challenge15Rewards'].freeOrbs\n        player.dailyPowderResetUses = 1;\n\n        document.getElementById('cubeQuarksOpenRequirement').style.display = \"block\"\n        if (player.challengecompletions[11] > 0) {\n            document.getElementById('tesseractQuarksOpenRequirement').style.display = \"block\"\n        }\n        if (player.challengecompletions[13] > 0) {\n            document.getElementById('hypercubeQuarksOpenRequirement').style.display = \"block\"\n        }\n        if (player.challengecompletions[14] > 0) {\n            document.getElementById('platonicCubeQuarksOpenRequirement').style.display = \"block\"\n        }\n    }\n}\n\n/**\n * Resets Cube Counts and stuff. NOTE: It is intentional it does not award powder or expire orbs.\n */\nexport const forcedDailyReset = (testing = false) => {\n    player.dayCheck = new Date();\n    player.cubeQuarkDaily = 0;\n    player.tesseractQuarkDaily = 0;\n    player.hypercubeQuarkDaily = 0;\n    player.platonicCubeQuarkDaily = 0;\n    player.cubeOpenedDaily = 0;\n    player.tesseractOpenedDaily = 0;\n    player.hypercubeOpenedDaily = 0;\n    player.platonicCubeOpenedDaily = 0;\n\n    if (testing) {\n        player.overfluxPowder += player.overfluxOrbs * calculatePowderConversion().mult;\n        player.overfluxOrbs = 0;\n    }\n}\n\nconst eventStart = \"06/26/2021 00:00:00\"\nconst eventEnd = \"07/01/2021 23:59:59\"\n\nexport const eventCheck = () => {\n    const start = new Date(eventStart);\n    const end = new Date(eventEnd);\n    const now = new Date();\n\n    if(now.getTime() >= start.getTime() && now.getTime() <= end.getTime()){\n        G['isEvent'] = true\n        document.getElementById('eventCurrent').textContent = \"ACTIVE UNTIL \" + end\n        document.getElementById('eventBuffs').textContent = \"Current Buffs: +100% Quarks from code 'Add', +20.21% All Cube Types\"\n    }\n    else{\n        G['isEvent'] = false\n        document.getElementById('eventCurrent').textContent = \"INACTIVE\"\n        document.getElementById('eventBuffs').textContent = \"\"\n    }\n}\n", "import { player, format, formatTimeShort, /*formatTimeShort*/ } from './Synergism';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { CalcCorruptionStuff, calculateAscensionAcceleration, calculateTimeAcceleration} from './Calculate';\nimport { achievementaward, totalachievementpoints } from './Achievements';\nimport { displayRuneInformation } from './Runes';\nimport { visualUpdateBuildings, visualUpdateUpgrades, visualUpdateAchievements, visualUpdateRunes, visualUpdateChallenges, visualUpdateResearch, visualUpdateSettings, visualUpdateShop, visualUpdateAnts, visualUpdateCubes, visualUpdateCorruptions } from './UpdateVisuals';\nimport { getMaxChallenges } from './Challenges';\nimport { OneToFive, ZeroToFour, ZeroToSeven } from './types/Synergism';\n\nexport const revealStuff = () => {\n    const example = document.getElementsByClassName(\"coinunlock1\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example.length; i++) {\n        example[i].style.display = player.unlocks.coinone ? 'block' : 'none';\n    }\n\n    const example2 = document.getElementsByClassName(\"coinunlock2\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example2.length; i++) {\n        example2[i].style.display = player.unlocks.cointwo ? 'block' : 'none';\n    }\n\n    const example3 = document.getElementsByClassName(\"coinunlock3\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example3.length; i++) {\n        example3[i].style.display = player.unlocks.cointhree ? 'block' : 'none';\n    }\n\n    const example4 = document.getElementsByClassName(\"coinunlock4\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example4.length; i++) {\n        example4[i].style.display = player.unlocks.coinfour ? 'block' : 'none';\n    }\n\n    const example5 = document.getElementsByClassName(\"prestigeunlock\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example5.length; i++) {\n        const parent = example5[i].parentElement;\n        if (parent.classList.contains('offlineStats'))\n            example5[i].style.display = player.unlocks.prestige ? 'flex' : 'none';\n        else \n            example5[i].style.display = player.unlocks.prestige ? 'block' : 'none';\n    }\n\n    const example6 = document.getElementsByClassName(\"generationunlock\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example6.length; i++) {\n        example6[i].style.display = player.unlocks.generation ? 'block' : 'none';\n    }\n\n    const example7 = document.getElementsByClassName(\"transcendunlock\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example7.length; i++) {\n        const parent = example7[i].parentElement;\n        if (parent.classList.contains('offlineStats'))\n            example7[i].style.display = player.unlocks.transcend ? 'flex' : 'none';\n        else \n            example7[i].style.display = player.unlocks.transcend ? 'block' : 'none';\n    }\n\n    const example8 = document.getElementsByClassName(\"reincarnationunlock\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example8.length; i++) {\n        const parent = example8[i].parentElement;\n        if (parent.classList.contains('offlineStats'))\n            example8[i].style.display = player.unlocks.reincarnate ? 'flex' : 'none';\n        else \n            example8[i].style.display = player.unlocks.reincarnate ? 'block' : 'none';\n    }\n\n    const example9 = document.getElementsByClassName(\"auto\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example9.length; i++) {\n        example9[i].style.display = \"none\"\n    }\n\n    const example10 = document.getElementsByClassName(\"reinrow1\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example10.length; i++) {\n        player.researches[47] === 1 ? example10[i].style.display = \"block\" : example10[i].style.display = \"none\"\n    }\n\n    const example11 = document.getElementsByClassName(\"reinrow2\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example11.length; i++) {\n        player.researches[48] === 1 ? example11[i].style.display = \"block\" : example11[i].style.display = \"none\"\n    }\n\n    const example12 = document.getElementsByClassName(\"reinrow3\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example12.length; i++) {\n        player.researches[49] === 1 ? example12[i].style.display = \"block\" : example12[i].style.display = \"none\"\n    }\n\n    const example13 = document.getElementsByClassName(\"reinrow4\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example13.length; i++) {\n        player.researches[50] === 1 ? example13[i].style.display = \"block\" : example13[i].style.display = \"none\"\n    }\n\n    const example14 = document.getElementsByClassName(\"chal6\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example14.length; i++) {\n        player.achievements[113] === 1 ? example14[i].style.display = \"block\" : example14[i].style.display = \"none\"\n    }\n\n    const example15 = document.getElementsByClassName(\"chal7\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example15.length; i++) {\n        player.achievements[120] === 1 ? example15[i].style.display = \"block\" : example15[i].style.display = \"none\"\n    }\n\n    const example16 = document.getElementsByClassName(\"chal7x10\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example16.length; i++) {\n        player.achievements[124] === 1 ? example16[i].style.display = \"block\" : example16[i].style.display = \"none\"\n    }\n\n    const example17 = document.getElementsByClassName(\"chal8\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example17.length; i++) {\n        const parent = example17[i].parentElement;\n        if (parent.classList.contains('offlineStats'))\n            example17[i].style.display = player.achievements[127] === 1 ? 'flex' : 'none';\n        else \n            example17[i].style.display = player.achievements[127] === 1 ? 'block' : 'none';\n    }\n\n    const example18 = document.getElementsByClassName(\"chal9\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example18.length; i++) { \n        player.achievements[134] === 1 ? example18[i].style.display = \"block\" : example18[i].style.display = \"none\"\n    }\n\n    const example19 = document.getElementsByClassName(\"chal9x1\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example19.length; i++) {\n        player.highestchallengecompletions[9] > 0 ? example19[i].style.display = \"block\" : example19[i].style.display = \"none\"\n    }\n\n    const example20 = document.getElementsByClassName(\"chal10\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example20.length; i++) {\n        player.achievements[141] === 1 ? example20[i].style.display = \"block\" : example20[i].style.display = \"none\"\n    }\n\n    const example21 = document.getElementsByClassName(\"ascendunlock\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example21.length; i++) {\n        const parent = example21[i].parentElement;\n        if (parent.classList.contains('offlineStats'))\n            example21[i].style.display = player.ascensionCount > 0 ? 'flex' : 'none';\n        else \n            example21[i].style.display = player.ascensionCount > 0 ? 'block' : 'none';\n    }\n\n    const example22 = document.getElementsByClassName(\"chal11\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example22.length; i++) {\n        player.challengecompletions[11] > 0 ? example22[i].style.display = \"block\" : example22[i].style.display = \"none\"\n    }\n\n    const example23 = document.getElementsByClassName(\"chal12\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example23.length; i++) {\n        player.challengecompletions[12] > 0 ? example23[i].style.display = \"block\" : example23[i].style.display = \"none\"\n    }\n\n    const example24 = document.getElementsByClassName(\"chal13\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example24.length; i++) {\n        player.challengecompletions[13] > 0 ? example24[i].style.display = \"block\" : example24[i].style.display = \"none\"\n    }\n\n    const example25 = document.getElementsByClassName(\"chal14\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example25.length; i++) {\n        player.challengecompletions[14] > 0 ? example25[i].style.display = \"block\" : example25[i].style.display = \"none\"\n    }\n\n    const example26 = document.getElementsByClassName(\"ascendunlockib\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example26.length; i++) {\n        example26[i].style.display = player.ascensionCount > 0 ? \"inline-block\" : \"none\"\n    }\n\n    const example27 = document.getElementsByClassName(\"prestigeunlockib\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example27.length; i++) {\n        example27[i].style.display = +player.unlocks.prestige > 0 ? \"inline-block\" : \"none\"\n    }\n\n    const example28 = document.getElementsByClassName(\"research150\") as HTMLCollectionOf<HTMLElement>; \n    for (let i = 0; i < example28.length; i++) {\n        example28[i].style.display = player.researches[150] > 0 ? \"block\" : \"none\"\n    }\n\n    const example29 = document.getElementsByClassName(\"cubeUpgrade10\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example29.length; i++) {\n        example29[i].style.display = player.cubeUpgrades[10] > 0 ? \"flex\" : \"none\"\n    }\n\n    const example30 = document.getElementsByClassName(\"cubeUpgrade19\") as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example30.length; i++) {\n        example30[i].style.display = player.cubeUpgrades[19] > 0 ? \"block\" : \"none\"\n    }\n\n    const example31 = document.getElementsByClassName(\"sacrificeAnts\") as HTMLCollectionOf<HTMLElement>;\n    for (const ex of Array.from(example31)) { //Galactic Crumb Achievement 5\n        ex.style.display = player.achievements[173] === 1 ? \"block\" : \"none\";\n    }\n\n    const example32 = document.getElementsByClassName(\"hepteracts\") as HTMLCollectionOf<HTMLElement>;\n    for (const ex of Array.from(example32)) { // Ability to use and gain hepteracts //\n        ex.style.display = player.challenge15Exponent >= 1e15 ? \"block\" : \"none\";\n    }\n\n    const hepts = document.getElementById(\"corruptionHepteracts\");\n    hepts.style.display = (player.achievements[255] > 0) ? \"block\" : \"none\";\n\n    if (player.upgrades[89] === 1) {\n        document.getElementById('transcendautotoggle').style.display = 'block';\n        document.getElementById('transcendamount').style.display = 'block';\n        document.getElementById('autotranscend').style.display = 'block';\n    } else {\n        document.getElementById('transcendautotoggle').style.display = 'none';\n        document.getElementById('transcendamount').style.display = 'none';\n        document.getElementById('autotranscend').style.display = 'none';\n    }\n\n   player.achievements[38] === 1 ? //Prestige Diamond Achievement 3\n        (document.getElementById(\"rune2area\").style.display = \"flex\", document.getElementById(\"runeshowpower2\").style.display = \"flex\") :\n        (document.getElementById(\"rune2area\").style.display = \"none\", document.getElementById(\"runeshowpower2\").style.display = \"none\");\n\n    if (player.achievements[43] === 1) { // Transcend Mythos Achievement 1\n        document.getElementById('prestigeautotoggle').style.display = 'block';\n        document.getElementById('prestigeamount').style.display = 'block';\n        document.getElementById('autoprestige').style.display = 'block';\n    } else {\n        document.getElementById('prestigeautotoggle').style.display = 'none';\n        document.getElementById('prestigeamount').style.display = 'none';\n        document.getElementById('autoprestige').style.display = 'none';\n    }\n\n    player.achievements[44] === 1 ? //Transcend Mythos Achievement 2\n    (document.getElementById(\"rune3area\").style.display = \"flex\", document.getElementById(\"runeshowpower3\").style.display = \"flex\") :\n    (document.getElementById(\"rune3area\").style.display = \"none\", document.getElementById(\"runeshowpower3\").style.display = \"none\");\n\n    player.achievements[102] === 1 ? //Cost+ Challenge Achievement 4\n    (document.getElementById(\"rune4area\").style.display = \"flex\", document.getElementById(\"runeshowpower4\").style.display = \"flex\") :\n    (document.getElementById(\"rune4area\").style.display = \"none\", document.getElementById(\"runeshowpower4\").style.display = \"none\");\n\n    player.achievements[119] === 1 ? //Tax+ Challenge Achievement 7\n        document.getElementById(\"talisman1area\").style.display = \"flex\" :\n        document.getElementById(\"talisman1area\").style.display = \"none\";\n\n    player.achievements[126] === 1 ? //No MA Challenge Achievement 7\n        document.getElementById(\"talisman2area\").style.display = \"flex\" :\n        document.getElementById(\"talisman2area\").style.display = \"none\";\n\n    player.achievements[133] === 1 ? //Cost++ Challenge Achievement 7\n        document.getElementById(\"talisman3area\").style.display = \"flex\" :\n        document.getElementById(\"talisman3area\").style.display = \"none\";\n\n    player.achievements[134] === 1 ? //No Runes Challenge Achievement 1\n        (document.getElementById(\"toggleRuneSubTab2\").style.display = \"block\", document.getElementById(\"toggleRuneSubTab3\").style.display = \"block\") :\n        (document.getElementById(\"toggleRuneSubTab2\").style.display = \"none\", document.getElementById(\"toggleRuneSubTab3\").style.display = \"none\");\n\n    player.achievements[140] === 1 ? //No Runes Challenge Achievement 7\n        document.getElementById(\"talisman4area\").style.display = \"flex\" :\n        document.getElementById(\"talisman4area\").style.display = \"none\";\n\n    player.achievements[147] === 1 ? //Sadistic Challenge Achievement 7\n        document.getElementById(\"talisman5area\").style.display = \"flex\" :\n        document.getElementById(\"talisman5area\").style.display = \"none\";\n\n    player.achievements[173] === 1 ? //Galactic Crumb Achievement 5\n        document.getElementById(\"sacrificeAnts\").style.display = \"block\" :\n        document.getElementById(\"sacrificeAnts\").style.display = \"none\";\n\n    player.researches[39] > 0 ? //3x9 Research [Crystal Building Power]\n        document.getElementById(\"reincarnationCrystalInfo\").style.display = \"block\" :\n        document.getElementById(\"reincarnationCrystalInfo\").style.display = \"none\";\n\n    player.researches[40] > 0 ? //3x10 Research [Mythos Shard Building Power]\n        document.getElementById(\"reincarnationMythosInfo\").style.display = \"block\" :\n        document.getElementById(\"reincarnationMythosInfo\").style.display = \"none\";\n\n    player.researches[46] > 0 ? //5x6 Research [Auto R.]\n        document.getElementById(\"reincarnateautomation\").style.display = \"block\" :\n        document.getElementById(\"reincarnateautomation\").style.display = \"none\";\n\n    player.researches[82] > 0 ? //2x17 Research [SI Rune Unlock]\n    (document.getElementById(\"rune5area\").style.display = \"flex\", document.getElementById(\"runeshowpower5\").style.display = \"flex\") :\n    (document.getElementById(\"rune5area\").style.display = \"none\", document.getElementById(\"runeshowpower5\").style.display = \"none\");\n\n    player.researches[124] > 0 ? //5x24 Research [AutoSac]\n        (document.getElementById(\"antSacrificeButtons\").style.display = \"block\", document.getElementById(\"autoAntSacrifice\").style.display = \"block\") :\n        (document.getElementById(\"antSacrificeButtons\").style.display = \"none\", document.getElementById(\"autoAntSacrifice\").style.display = \"none\");\n\n    player.researches[130] > 0 ? //6x5 Research [Talisman Auto Fortify]\n        document.getElementById(\"toggleautofortify\").style.display = \"block\" :\n        document.getElementById(\"toggleautofortify\").style.display = \"none\";\n\n    player.researches[135] > 0 ? //6x10 Research [Talisman Auto Sac]\n        document.getElementById(\"toggleautoenhance\").style.display = \"block\" :\n        document.getElementById(\"toggleautoenhance\").style.display = \"none\";\n\n    for (let z = 1; z <= 5; z++) {\n        (player.researches[190] > 0) ? //8x15 Research [Auto Tesseracts]\n            document.getElementById(\"tesseractAutoToggle\" + z).style.display = \"block\" :\n            document.getElementById(\"tesseractAutoToggle\" + z).style.display = \"none\";\n    }\n    player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\n        document.getElementById(\"tesseractautobuytoggle\").style.display = \"block\" :\n        document.getElementById(\"tesseractautobuytoggle\").style.display = \"none\";\n    player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\n        document.getElementById(\"tesseractAmount\").style.display = \"block\" :\n        document.getElementById(\"tesseractAmount\").style.display = \"none\";\n    player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\n        document.getElementById(\"autotessbuyeramount\").style.display = \"block\" :\n        document.getElementById(\"autotessbuyeramount\").style.display = \"none\";\n    (player.antUpgrades[12-1] > 0 || player.ascensionCount > 0) ? //Ant Talisman Unlock, Mortuus\n        document.getElementById(\"talisman6area\").style.display = \"flex\" :\n        document.getElementById(\"talisman6area\").style.display = \"none\";\n\n    player.shopUpgrades.offeringAuto > 0 ? //Auto Offering Shop Purchase\n        document.getElementById(\"toggleautosacrifice\").style.display = \"block\" :\n        document.getElementById(\"toggleautosacrifice\").style.display = \"none\";\n\n    player.shopUpgrades.obtainiumAuto > 0 ? //Auto Research Shop Purchase\n        document.getElementById(\"toggleautoresearch\").style.display = \"block\" :\n        document.getElementById(\"toggleautoresearch\").style.display = \"none\";\n\n    player.shopUpgrades.shopTalisman > 0 ? //Plastic Talisman Shop Purchase\n        document.getElementById(\"talisman7area\").style.display = \"flex\" :\n        document.getElementById(\"talisman7area\").style.display = \"none\";\n\n    player.cubeUpgrades[8] > 0 ?\n        document.getElementById('reincarnateAutoUpgrade').style.display = \"block\" :\n        document.getElementById('reincarnateAutoUpgrade').style.display = \"none\";\n\n    player.shopUpgrades.infiniteAscent ?\n        (document.getElementById('rune6area').style.display = 'flex', document.getElementById('runeshowpower6').style.display = \"flex\") :\n        (document.getElementById('rune6area').style.display = 'none', document.getElementById('runeshowpower6').style.display = \"none\");\n\n    player.platonicUpgrades[20] > 0 ?\n        (document.getElementById('rune7area').style.display = 'flex', document.getElementById('runeshowpower7').style.display = \"flex\") :\n        (document.getElementById('rune7area').style.display = 'none', document.getElementById('runeshowpower7').style.display = \"none\") ;\n\n    document.getElementById(\"ascensionStats\").style.visibility = player.achievements[197] > 0 ? \"visible\" : \"hidden\";\n    document.getElementById(\"ascHyperStats\").style.display = player.challengecompletions[13] > 0 ? \"\" : \"none\";\n    document.getElementById(\"ascPlatonicStats\").style.display = player.challengecompletions[14] > 0 ? \"\" : \"none\";\n    document.getElementById(\"ascHepteractStats\").style.display = player.achievements[255] > 0 ? \"\" : \"none\";\n\n    //I'll clean this up later. Note to 2019 Platonic: Fuck you\n    // note to 2019 and 2020 Platonic, you're welcome\n    // note to 2019 and 2020 and 2021 Platonic, please never base anything on the order of elements ever again\n\n    // These are currently listed in the order they were in when this was converted to use element IDs instead of\n    // the ordering of the HTML elements with the class \"auto\".\n    const automationUnlocks: Record<string, boolean> = {\n        \"toggle1\": player.upgrades[81] === 1, // Autobuyer - Coin Buildings - Tier 1 (Worker)\n        \"toggle2\": player.upgrades[82] === 1, // Autobuyer - Coin Buildings - Tier 2 (Investments)\n        \"toggle3\": player.upgrades[83] === 1, // Autobuyer - Coin Buildings - Tier 3 (Printers)\n        \"toggle4\": player.upgrades[84] === 1, // Autobuyer - Coin Buildings - Tier 4 (Coin Mints)\n        \"toggle5\": player.upgrades[85] === 1, // Autobuyer - Coin Buildings - Tier 5 (Alchemies)\n        \"toggle6\": player.upgrades[86] === 1, // Autobuyer - Coin Buildings - Accelerator\n        \"toggle7\": player.upgrades[87] === 1, // Autobuyer - Coin Buildings - Multiplier\n        \"toggle8\": player.upgrades[88] === 1, // Autobuyer - Coin Buildings - Accelerator Boost\n        \"toggle10\": player.achievements[78] === 1, // Autobuyer - Diamond Buildings - Tier 1 (Refineries)\n        \"toggle11\": player.achievements[85] === 1, // Autobuyer - Diamond Buildings - Tier 2 (Coal Plants)\n        \"toggle12\": player.achievements[92] === 1, // Autobuyer - Diamond Buildings - Tier 3 (Coal Rigs)\n        \"toggle13\": player.achievements[99] === 1, // Autobuyer - Diamond Buildings - Tier 4 (Pickaxes)\n        \"toggle14\": player.achievements[106] === 1, // Autobuyer - Diamond Buildings - Tier 5 (Pandora's Boxes)\n        \"toggle15\": player.achievements[43] === 1, // Feature - Diamond Buildings - Auto Prestige\n        \"toggle16\": player.upgrades[94] === 1, // Autobuyer - Mythos Buildings - Tier 1 (Augments)\n        \"toggle17\": player.upgrades[95] === 1, // Autobuyer - Mythos Buildings - Tier 2 (Enchantments)\n        \"toggle18\": player.upgrades[96] === 1, // Autobuyer - Mythos Buildings - Tier 3 (Wizards)\n        \"toggle19\": player.upgrades[97] === 1, // Autobuyer - Mythos Buildings - Tier 4 (Oracles)\n        \"toggle20\": player.upgrades[98] === 1, // Autobuyer - Mythos Buildings - Tier 5 (Grandmasters)\n        \"toggle21\": player.upgrades[89] === 1, // Feature - Mythos Buildings - Auto Transcend\n        \"toggle22\": player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 1 (Protons)\n        \"toggle23\": player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 2 (Elements)\n        \"toggle24\": player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 3 (Pulsars)\n        \"toggle25\": player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 4 (Quasars)\n        \"toggle26\": player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 5 (Galactic Nuclei)\n        \"toggle27\": player.researches[46] === 1, // Feature - Particle Buildings - Auto Reincarnate\n        \"coinAutoUpgrade\": player.upgrades[91] === 1, // Feature - Upgrades - Auto Buy Coin Upgrades\n        \"prestigeAutoUpgrade\": player.upgrades[92] === 1, // Feature - Upgrades - Auto Buy Diamond Upgrades\n        \"transcendAutoUpgrade\": player.upgrades[99] === 1, // Feature - Upgrades - Auto Buy Mythos Upgrades\n        \"generatorsAutoUpgrade\": player.upgrades[90] === 1, // Feature - Upgrades - Auto Buy Generator Upgrades\n        \"toggle9\": player.unlocks.prestige, // Feature - Upgrades - Hover to Buy\n        \"toggle28\": player.prestigeCount > 0.5 || player.reincarnationCount > 0.5, // Settings - Confirmations - Prestige\n        \"toggle29\": player.transcendCount > 0.5 || player.reincarnationCount > 0.5,  // Settings - Confirmations - Transcension\n        \"toggle30\": player.reincarnationCount > 0.5, // Settings - Confirmations - Reincarnation\n        \"toggle31\": player.ascensionCount > 0, // Settings - Confirmations - Ascension\n        \"toggle32\": player.achievements[173] > 0, // Settings - Confirmations - Ant Sacrifice\n    }\n\n    Object.keys(automationUnlocks).forEach(key => {\n        const el = document.getElementById(key);\n        if (!el) {\n            console.error(`Automation unlock failed to find element with ID '${key}'.`);\n            return;\n        }\n\n        el.style.display = automationUnlocks[key] ? \"block\" : \"none\";\n    });\n}\n\nexport const hideStuff = () => {\n\n    document.getElementById(\"buildings\").style.display = \"none\"\n    document.getElementById(\"buildingstab\").style.backgroundColor = \"\";\n    document.getElementById(\"upgrades\").style.display = \"none\"\n    document.getElementById(\"upgradestab\").style.backgroundColor = \"\"\n    document.getElementById(\"settings\").style.display = \"none\"\n\n    document.getElementById(\"statistics\").style.display = \"none\"\n    document.getElementById(\"achievementstab\").style.backgroundColor = \"\"\n    document.getElementById(\"achievementstab\").style.color = \"white\"\n    document.getElementById(\"runes\").style.display = \"none\"\n    document.getElementById(\"runestab\").style.backgroundColor = \"\"\n    document.getElementById(\"challenges\").style.display = \"none\"\n    document.getElementById(\"challengetab\").style.backgroundColor = \"\"\n    document.getElementById(\"research\").style.display = \"none\"\n    document.getElementById(\"researchtab\").style.backgroundColor = \"\"\n    document.getElementById(\"shop\").style.display = \"none\"\n    document.getElementById(\"shoptab\").style.backgroundColor = \"\"\n    document.getElementById(\"ants\").style.display = \"none\"\n    document.getElementById(\"anttab\").style.backgroundColor = \"\"\n    document.getElementById(\"cubetab\").style.backgroundColor = \"\"\n    document.getElementById(\"traitstab\").style.backgroundColor = \"\"\n    document.getElementById(\"cubes\").style.display = \"none\"\n    document.getElementById(\"traits\").style.display = \"none\"\n    \n    const tab = document.getElementById('settingstab')!;\n    tab.style.backgroundColor = '';\n    tab.style.border = '1px solid white';\n\n    if (G['currentTab'] === \"buildings\") {\n        document.getElementById(\"buildingstab\").style.backgroundColor = \"orange\";\n        document.getElementById(\"buildings\").style.display = \"block\"\n    }\n    if (G['currentTab'] === \"upgrades\") {\n        document.getElementById(\"upgrades\").style.display = \"block\"\n        document.getElementById(\"upgradestab\").style.backgroundColor = \"orange\"\n        document.getElementById(\"upgradedescription\").textContent = \"Hover over an upgrade to view details!\"\n    }\n    if (G['currentTab'] === \"settings\") {\n        document.getElementById(\"settings\").style.display = \"block\"\n        const tab = document.getElementById('settingstab')!;\n        tab.style.backgroundColor = 'orange';\n        tab.style.border = '1px solid gold';\n    }\n    if (G['currentTab'] === \"achievements\") {\n        document.getElementById(\"statistics\").style.display = \"block\"\n        document.getElementById(\"achievementstab\").style.backgroundColor = \"white\"\n        document.getElementById(\"achievementstab\").style.color = \"black\"\n        document.getElementById(\"achievementprogress\").textContent = \"Achievement Points: \" + player.achievementPoints + \"/\" + totalachievementpoints + \" [\" + (100 * player.achievementPoints / totalachievementpoints).toPrecision(4) + \"%]\"\n    }\n    if (G['currentTab'] === \"runes\") {\n        document.getElementById(\"runes\").style.display = \"block\"\n        document.getElementById(\"runestab\").style.backgroundColor = \"blue\"\n        document.getElementById(\"runeshowlevelup\").textContent = \"Hey, hover over a rune icon to get details on what each one does and what benefits they're giving you!\"\n        document.getElementById(\"researchrunebonus\").textContent = \"Thanks to researches, your effective levels are increased by \" + (100 * G['effectiveLevelMult'] - 100).toPrecision(4) + \"%\"\n        displayRuneInformation(1, false)\n        displayRuneInformation(2, false)\n        displayRuneInformation(3, false)\n        displayRuneInformation(4, false)\n        displayRuneInformation(5, false)\n        displayRuneInformation(6, false)\n        displayRuneInformation(7, false)\n    }\n    if (G['currentTab'] === \"challenges\") {\n        document.getElementById(\"challenges\").style.display = \"block\";\n        document.getElementById(\"challengetab\").style.backgroundColor = \"purple\";\n    }\n    if (G['currentTab'] === \"researches\") {\n        document.getElementById(\"research\").style.display = \"block\";\n        document.getElementById(\"researchtab\").style.backgroundColor = \"green\";\n    }\n    if (G['currentTab'] === \"shop\") {\n        document.getElementById(\"shop\").style.display = \"block\";\n        document.getElementById(\"shoptab\").style.backgroundColor = \"limegreen\";\n    }\n    if (G['currentTab'] === \"ants\") {\n        document.getElementById(\"ants\").style.display = \"block\";\n        document.getElementById(\"anttab\").style.backgroundColor = \"brown\";\n    }\n    if (G['currentTab'] === \"cubes\") {\n        document.getElementById(\"cubes\").style.display = \"block\";\n        document.getElementById(\"cubetab\").style.backgroundColor = \"white\"\n    }\n    if (G['currentTab'] === \"traits\") {\n        document.getElementById(\"traits\").style.display = \"flex\";\n        document.getElementById(\"traitstab\").style.backgroundColor = \"white\";\n    }\n}\n\nconst visualTab: Record<string, () => void> = {\n    buildings: visualUpdateBuildings,\n    upgrades: visualUpdateUpgrades,\n    achievements: visualUpdateAchievements,\n    runes: visualUpdateRunes,\n    challenges: visualUpdateChallenges,\n    research: visualUpdateResearch,\n    settings: visualUpdateSettings,\n    shop: visualUpdateShop,\n    ants: visualUpdateAnts,\n    cubes: visualUpdateCubes,\n    traits: visualUpdateCorruptions\n}\n\nexport const htmlInserts = () => {\n    // ALWAYS Update these, for they are the most important resources\n    document.getElementById(\"coinDisplay\").textContent = format(player.coins)\n    document.getElementById(\"offeringDisplay\").textContent = format(player.runeshards)\n    document.getElementById(\"diamondDisplay\").textContent = format(player.prestigePoints)\n    document.getElementById(\"mythosDisplay\").textContent = format(player.transcendPoints)\n    document.getElementById(\"mythosshardDisplay\").textContent = format(player.transcendShards)\n    document.getElementById(\"particlesDisplay\").textContent = format(player.reincarnationPoints)\n    document.getElementById(\"quarkDisplay\").textContent = format(player.worlds)\n    document.getElementById(\"obtainiumDisplay\").textContent = format(player.researchPoints)\n\n    updateAscensionStats()\n\n    visualTab[G['currentTab']]?.();\n}\n\nexport const buttoncolorchange = () => {\n    (player.toggles[15] && player.achievements[43] === 1) ?\n        document.getElementById('prestigebtn').style.backgroundColor = \"green\" :\n        document.getElementById('prestigebtn').style.backgroundColor = \"#171717\";\n\n    (player.toggles[21] && player.upgrades[89] > 0.5 && (player.currentChallenge.transcension === 0)) ?\n        document.getElementById('transcendbtn').style.backgroundColor = \"green\" :\n        document.getElementById('transcendbtn').style.backgroundColor = \"#171717\";\n\n    (player.toggles[27] && player.researches[46] > 0.5 && (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0)) ?\n        document.getElementById('reincarnatebtn').style.backgroundColor = \"green\" :\n        document.getElementById('reincarnatebtn').style.backgroundColor = \"#171717\";\n\n    (player.toggles[8] && player.upgrades[88] > 0.5) ?\n        document.getElementById('acceleratorboostbtn').style.backgroundColor = \"green\" :\n        document.getElementById('acceleratorboostbtn').style.backgroundColor = \"#171717\";\n\n    (player.currentChallenge.transcension === 0) ?\n        document.getElementById('challengebtn').style.backgroundColor = \"#171717\" :\n        document.getElementById('challengebtn').style.backgroundColor = \"purple\";\n\n    (player.currentChallenge.reincarnation === 0) ?\n        document.getElementById('reincarnatechallengebtn').style.backgroundColor = \"#171717\" :\n        document.getElementById('reincarnatechallengebtn').style.backgroundColor = \"purple\";\n\n    (player.currentChallenge.ascension === 0) ?\n        document.getElementById('ascendChallengeBtn').style.backgroundColor = \"#171717\" :\n        document.getElementById('ascendChallengeBtn').style.backgroundColor = \"purple\";\n\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"coin\") {\n        const a = document.getElementById(\"buycoin1\");\n        const b = document.getElementById(\"buycoin2\");\n        const c = document.getElementById(\"buycoin3\");\n        const d = document.getElementById(\"buycoin4\");\n        const e = document.getElementById(\"buycoin5\");\n        const f = document.getElementById(\"buyaccelerator\");\n        const g = document.getElementById(\"buymultiplier\");\n        const h = document.getElementById(\"buyacceleratorboost\");\n        ((!player.toggles[1] || player.upgrades[81] === 0) && player.coins.gte(player.firstCostCoin))\n            ? a.classList.add(\"buildingPurchaseBtnAvailable\")\n            : a.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[2] || player.upgrades[82] === 0) && player.coins.gte(player.secondCostCoin))\n            ? b.classList.add(\"buildingPurchaseBtnAvailable\")\n            : b.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[3] || player.upgrades[83] === 0) && player.coins.gte(player.thirdCostCoin))\n            ? c.classList.add(\"buildingPurchaseBtnAvailable\")\n            : c.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[4] || player.upgrades[84] === 0) && player.coins.gte(player.fourthCostCoin))\n            ? d.classList.add(\"buildingPurchaseBtnAvailable\")\n            : d.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[5] || player.upgrades[85] === 0) && player.coins.gte(player.fifthCostCoin))\n            ? e.classList.add(\"buildingPurchaseBtnAvailable\")\n            : e.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[6] || player.upgrades[86] === 0) && player.coins.gte(player.acceleratorCost))\n            ? f.classList.add(\"buildingPurchaseBtnAvailable\")\n            : f.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[7] || player.upgrades[87] === 0) && player.coins.gte(player.multiplierCost))\n            ? g.classList.add(\"buildingPurchaseBtnAvailable\")\n            : g.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[8] || player.upgrades[88] === 0) && player.prestigePoints.gte(player.acceleratorBoostCost))\n            ? h.classList.add(\"buildingPurchaseBtnAvailable\")\n            : h.classList.remove(\"buildingPurchaseBtnAvailable\");\n    }\n\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n        const a = document.getElementById(\"buydiamond1\");\n        const b = document.getElementById(\"buydiamond2\");\n        const c = document.getElementById(\"buydiamond3\");\n        const d = document.getElementById(\"buydiamond4\");\n        const e = document.getElementById(\"buydiamond5\");\n        const f = document.getElementById(\"buycrystalupgrade1\");\n        const g = document.getElementById(\"buycrystalupgrade2\");\n        const h = document.getElementById(\"buycrystalupgrade3\");\n        const i = document.getElementById(\"buycrystalupgrade4\");\n        const j = document.getElementById(\"buycrystalupgrade5\");\n        ((!player.toggles[10] || player.achievements[78] === 0) && player.prestigePoints.gte(player.firstCostDiamonds))\n            ? a.classList.add(\"buildingPurchaseBtnAvailable\")\n            : a.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[11] || player.achievements[85] === 0) && player.prestigePoints.gte(player.secondCostDiamonds))\n            ? b.classList.add(\"buildingPurchaseBtnAvailable\")\n            : b.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[12] || player.achievements[92] === 0) && player.prestigePoints.gte(player.thirdCostDiamonds))\n            ? c.classList.add(\"buildingPurchaseBtnAvailable\")\n            : c.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[13] || player.achievements[99] === 0) && player.prestigePoints.gte(player.fourthCostDiamonds))\n            ? d.classList.add(\"buildingPurchaseBtnAvailable\")\n            : d.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[14] || player.achievements[106] === 0) && player.prestigePoints.gte(player.fifthCostDiamonds))\n            ? e.classList.add(\"buildingPurchaseBtnAvailable\")\n            : e.classList.remove(\"buildingPurchaseBtnAvailable\");\n        let k = 0;\n        k += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100\n        if (player.upgrades[73] === 1 && player.currentChallenge.reincarnation !== 0) {\n            k += 10\n        }\n        \n        (player.achievements[79] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][0] + G['crystalUpgradeCostIncrement'][0] * Math.floor(Math.pow(player.crystalUpgrades[0] + 0.5 - k, 2) / 2))))) ? f.style.backgroundColor = \"purple\" : f.style.backgroundColor = \"#171717\";\n        (player.achievements[86] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][1] + G['crystalUpgradeCostIncrement'][1] * Math.floor(Math.pow(player.crystalUpgrades[1] + 0.5 - k, 2) / 2))))) ? g.style.backgroundColor = \"purple\" : g.style.backgroundColor = \"#171717\";\n        (player.achievements[93] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][2] + G['crystalUpgradeCostIncrement'][2] * Math.floor(Math.pow(player.crystalUpgrades[2] + 0.5 - k, 2) / 2))))) ? h.style.backgroundColor = \"purple\" : h.style.backgroundColor = \"#171717\";\n        (player.achievements[100] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][3] + G['crystalUpgradeCostIncrement'][3] * Math.floor(Math.pow(player.crystalUpgrades[3] + 0.5 - k, 2) / 2))))) ? i.style.backgroundColor = \"purple\" : i.style.backgroundColor = \"#171717\";\n        (player.achievements[107] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][4] + G['crystalUpgradeCostIncrement'][4] * Math.floor(Math.pow(player.crystalUpgrades[4] + 0.5 - k, 2) / 2))))) ? j.style.backgroundColor = \"purple\" : j.style.backgroundColor = \"#171717\";\n    }\n\n    if (G['currentTab'] === \"runes\") {\n        if (G['runescreen'] === \"runes\") {\n            for (let i = 1; i <= 7; i++) {\n                player.runeshards > 0.5\n                    ? document.getElementById(`activaterune${i}`).classList.add(\"runeButtonAvailable\")\n                    : document.getElementById(`activaterune${i}`).classList.remove(\"runeButtonAvailable\")\n            }\n        }\n        if (G['runescreen'] === \"talismans\") {\n            const a = document.getElementById(\"buyTalismanItem1\");\n            const b = document.getElementById(\"buyTalismanItem2\");\n            const c = document.getElementById(\"buyTalismanItem3\");\n            const d = document.getElementById(\"buyTalismanItem4\");\n            const e = document.getElementById(\"buyTalismanItem5\");\n            const f = document.getElementById(\"buyTalismanItem6\");\n            const g = document.getElementById(\"buyTalismanItem7\");\n            const arr = [a, b, c, d, e, f, g];\n            for (let i = 0; i < arr.length; i++) {\n                (player.researchPoints > G['talismanResourceObtainiumCosts'][i] && player.runeshards > G['talismanResourceOfferingCosts'][i])\n                    ? arr[i].classList.add(\"talisminBtnAvailable\")\n                    : arr[i].classList.remove(\"talisminBtnAvailable\")\n            }\n        }\n    }\n\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"mythos\") {\n        for (let i = 1; i <= 5; i++) {\n            const toggle = player.toggles[i + 15];\n            const mythos = player[`${G['ordinals'][i - 1 as ZeroToFour]}CostMythos` as const];\n            (!toggle || !player.upgrades[93 + i]) && player.transcendPoints.gte(mythos) \n                ? document.getElementById(`buymythos${i}`).classList.add(\"buildingPurchaseBtnAvailable\")\n                : document.getElementById(`buymythos${i}`).classList.remove(\"buildingPurchaseBtnAvailable\");\n        }\n    }\n\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"particle\") {\n        for (let i = 1; i <= 5; i++) {\n            const costParticles = player[`${G['ordinals'][i - 1 as ZeroToFour]}CostParticles` as const];\n            player.reincarnationPoints.gte(costParticles) \n                ? document.getElementById(`buyparticles${i}`).classList.add(\"buildingPurchaseBtnAvailable\")\n                : document.getElementById(`buyparticles${i}`).classList.remove(\"buildingPurchaseBtnAvailable\");\n        }\n    }\n\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"tesseract\") {\n        for (let i = 1; i <= 5; i++) {\n            const ascendBuilding = player[`ascendBuilding${i as OneToFive}` as const]['cost'];\n            Number(player.wowTesseracts) >= ascendBuilding\n                ? document.getElementById(`buyTesseracts${i}`).classList.add(\"buildingPurchaseBtnAvailable\")\n                : document.getElementById(`buyTesseracts${i}`).classList.remove(\"buildingPurchaseBtnAvailable\");\n        }\n        for (let i = 1; i <= 8; i++) {\n            (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i])))\n                ? document.getElementById(`buyConstantUpgrade${i}`).classList.add(\"constUpgradeAvailable\")\n                : document.getElementById(`buyConstantUpgrade${i}`).classList.remove(\"constUpgradeAvailable\")\n        }\n        for (let i = 9; i <= 10; i++) {\n            if (player.constantUpgrades[i] >= 1) {\n                document.getElementById(`buyConstantUpgrade${i}`).classList.add(\"constUpgradeSingle\")\n                document.getElementById(`buyConstantUpgrade${i}`).classList.remove(\"constUpgradeSingleAvailable\")\n            } else if (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i]))) {\n                document.getElementById(`buyConstantUpgrade${i}`).classList.add(\"constUpgradeSingleAvailable\")\n            } else {\n                document.getElementById(`buyConstantUpgrade${i}`).classList.remove(\"constUpgradeSingleAvailable\")\n                document.getElementById(`buyConstantUpgrade${i}`).classList.remove(\"constUpgradeSingle\")\n            }\n        }\n    }\n\n    if (G['currentTab'] === \"ants\") {\n        (player.reincarnationPoints.gte(player.firstCostAnts)) ? document.getElementById(`anttier1`).classList.add(\"antTierBtnAvailable\") : document.getElementById(`anttier1`).classList.remove(\"antTierBtnAvailable\");\n        for (let i = 2; i <= 8; i++) {\n            const costAnts = player[`${G['ordinals'][(i - 1) as ZeroToSeven]}CostAnts` as const];\n            player.antPoints.gte(costAnts)\n                ? document.getElementById(`anttier${i}`).classList.add(\"antTierBtnAvailable\")\n                : document.getElementById(`anttier${i}`).classList.remove(\"antTierBtnAvailable\")\n        }\n        for (let i = 1; i <= 12; i++) {\n            player.antPoints.gte(Decimal.pow(G['antUpgradeCostIncreases'][i-1], player.antUpgrades[i-1] * G['extinctionMultiplier'][player.usedCorruptions[10]]).times(G['antUpgradeBaseCost'][i-1]))\n                ? document.getElementById(`antUpgrade${i}`).classList.add(\"antUpgradeBtnAvailable\")\n                : document.getElementById(`antUpgrade${i}`).classList.remove(\"antUpgradeBtnAvailable\")\n        }\n    }\n}\n\nexport const updateChallengeDisplay = () => {\n    //Sets background colors on load/challenge initiation\n    for (let k = 1; k <= 15; k++) {\n        const el = document.getElementById(`challenge${k}`)\n        el.classList.remove(\"challengeActive\")\n        if (player.currentChallenge.transcension === k) {\n            el.classList.add(\"challengeActive\")\n        }\n        if (player.currentChallenge.reincarnation === k) {\n            el.classList.add(\"challengeActive\")\n        }\n        if (player.currentChallenge.ascension === k) {\n            el.classList.add(\"challengeActive\")\n        }\n    }\n    //Corrects HTML on retry challenges button\n    if (player.retrychallenges) {\n        document.getElementById(\"retryChallenge\").textContent = \"Retry Challenges: ON\"\n    } else {\n        document.getElementById(\"retryChallenge\").textContent = \"Retry Challenges: OFF\"\n    }\n    for (let k = 1; k <= 15; k++) {\n        updateChallengeLevel(k);\n    }\n}\n\nexport const updateChallengeLevel = (k: number) => {\n    const el = document.getElementById(\"challenge\" + k + \"level\");\n    const maxChallenges = getMaxChallenges(k);\n\n    el.textContent = `${player.challengecompletions[k]} / ${maxChallenges}`;\n}\n\nexport const updateAchievementBG = () => {\n    //When loading/importing, the game needs to correctly update achievement backgrounds.\n    for (let i = 1; i <= 182; i++) { //Initiates by setting all to default\n        document.getElementById(\"ach\" + i).style.backgroundColor = \"black\"\n    }\n    const fixDisplay1 = document.getElementsByClassName('purpleach') as HTMLCollectionOf<HTMLElement>;\n    const fixDisplay2 = document.getElementsByClassName('redach') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < fixDisplay1.length; i++) {\n        fixDisplay1[i].style.backgroundColor = \"purple\" //Sets the appropriate achs to purple\n    }\n    for (let i = 0; i < fixDisplay2.length; i++) {\n        fixDisplay2[i].style.backgroundColor = \"maroon\" //Sets the appropriate achs to maroon (red)\n    }\n    for (let i = 1; i < player.achievements.length; i++) {\n        if (player.achievements[i] > 0.5 && player.achievements[i] !== undefined) {\n            achievementaward(i) //This sets all completed ach to green\n        }\n    }\n}\n\nexport const CSSAscend = () => {\n    for (let i = 1; i <= 5; i++) {\n        const a = document.getElementById(\"ascendText\" + i);\n        const b = document.getElementById(\"ascendText\" + (5 + i));\n        const c = document.getElementById(\"tesseracts\" + i);\n        const d = document.getElementById(\"buyTesseracts\" + i);\n        const e = document.getElementById(\"tesseractAutoToggle\" + i);\n\n        a.style.top = (8 + 35 * i) + \"px\"\n        b.style.top = (8 + 35 * i) + \"px\"\n        c.style.top = (23 + 35 * i) + \"px\"\n        d.style.top = (38 + 35 * i) + \"px\"\n        e.style.top = (22 + 35 * i) + \"px\"\n\n        a.style.left = \"13%\"\n        b.style.left = \"56.5%\"\n        c.style.left = \"10%\"\n    }\n\n    for (let i = 1; i <= 6; i++) {\n        const a = document.getElementById(\"switchCubeSubTab\" + i)\n        a.style.top = (30 + 35 * i) + \"px\"\n        a.style.left = \"5%\"\n    }\n}\n\nexport const showCorruptionStatsLoadouts = () => {\n    if (player.corruptionShowStats) {\n        document.getElementById(\"corruptionStats\").style.display = \"block\"\n        document.getElementById(\"corruptionLoadouts\").style.display = \"none\"\n        document.getElementById(\"corrStatsBtn\").style.borderColor = \"dodgerblue\"\n        document.getElementById(\"corrLoadoutsBtn\").style.borderColor = \"white\"\n    } else {\n        document.getElementById(\"corruptionStats\").style.display = \"none\"\n        document.getElementById(\"corruptionLoadouts\").style.display = \"block\"\n        document.getElementById(\"corrStatsBtn\").style.borderColor = \"white\"\n        document.getElementById(\"corrLoadoutsBtn\").style.borderColor = \"dodgerblue\"\n    }\n}\n\nconst updateAscensionStats = () => {\n    const t = player.ascensionCounter;\n    const [cubes, tess, hyper, platonic, hepteract] = CalcCorruptionStuff().splice(4);\n    const fillers: Record<string, string> = {\n        \"ascLen\": formatTimeShort(player.ascensionCounter),\n        \"ascCubes\": format(cubes * (player.ascStatToggles[1] ? 1 : 1 / t), 2),\n        \"ascTess\": format(tess * (player.ascStatToggles[2] ? 1 : 1 / t), 3),\n        \"ascHyper\": format(hyper * (player.ascStatToggles[3] ? 1 : 1 / t), 4),\n        \"ascPlatonic\": format(platonic * (player.ascStatToggles[4] ? 1 : 1 / t), 5),\n        \"ascHepteract\": format(hepteract * (player.ascStatToggles[5] ? 1 : 1 / t), 3),\n        \"ascC10\": player.challengecompletions[10] + '',\n        \"ascTimeAccel\": `${format(calculateTimeAcceleration(), 3)}x`,\n        \"ascAscensionTimeAccel\": `${format(calculateAscensionAcceleration(), 3)}x`\n    }\n    for (const key in fillers) {\n        document.getElementById(key).textContent = fillers[key];\n    }\n}\n\nconst tabColors: { [key: string]: string } = {\n    buildings: 'yellow',\n    upgrades: 'yellow',\n    achievements: 'white',\n    runes: 'cyan',\n    challenges: 'plum',\n    researches: 'green',\n    ants: 'brown',\n    cubes: 'purple',\n    traits: 'orange',\n    settings: 'white',\n    shop: 'limegreen'\n}\n\nexport const changeTabColor = () => {\n    const tab = document.getElementById('tabBorder');\n    const color = tabColors[G['currentTab']] ?? 'yellow';\n\n    tab.style.backgroundColor = color;\n}\n\nconst ConfirmCB = (text: string, cb: (value: boolean) => void) => {\n    const conf = document.getElementById('confirmationBox');\n    const confWrap = document.getElementById('confirmWrapper');\n    const popup = document.querySelector<HTMLElement>('#confirm');\n    const overlay = document.querySelector<HTMLElement>('#transparentBG');\n    const ok = popup.querySelector<HTMLElement>('#ok_confirm');\n    const cancel = popup.querySelector<HTMLElement>('#cancel_confirm');\n    \n    conf.style.display = 'block';\n    confWrap.style.display = 'block';\n    overlay.style.display = 'block';\n    popup.querySelector('p').textContent = text;\n    popup.focus();\n\n    const listener = (e: MouseEvent) => {\n        const { id } = e.target as HTMLButtonElement;\n        ok.removeEventListener('click', listener);\n        cancel.removeEventListener('click', listener);\n\n        conf.style.display = 'none';\n        confWrap.style.display = 'none';\n        overlay.style.display = 'none';\n\n        if (id === ok.id) cb(true);\n        else cb(false);\n    }\n\n    ok.addEventListener('click', listener);\n    cancel.addEventListener('click', listener);\n}\n\nconst AlertCB = (text: string, cb: (value: undefined) => void) => {\n    const conf = document.getElementById('confirmationBox');\n    const alertWrap = document.getElementById('alertWrapper');\n    const overlay = document.querySelector<HTMLElement>('#transparentBG');\n    const popup = document.querySelector<HTMLElement>('#alert');\n    const ok = popup.querySelector<HTMLElement>('#ok_alert');\n    \n    conf.style.display = 'block';\n    alertWrap.style.display = 'block';\n    overlay.style.display = 'block';\n    popup.querySelector('p').textContent = text;\n    popup.focus();\n\n    const listener = () => {\n        ok.removeEventListener('click', listener);\n        popup.removeEventListener('keyup', kbListener);\n        \n        conf.style.display = 'none';\n        alertWrap.style.display = 'none';\n        overlay.style.display = 'none';\n        cb(undefined);\n    }\n\n    const kbListener = (e: KeyboardEvent) => e.key === 'Enter' && listener();\n\n    ok.addEventListener('click', listener);\n    popup.addEventListener('keyup', kbListener);\n} \n\nexport const PromptCB = (text: string, cb: (value: string | null) => void) => {\n    const conf = document.getElementById('confirmationBox');\n    const confWrap = document.getElementById('promptWrapper');\n    const overlay = document.querySelector<HTMLElement>('#transparentBG');\n    const popup = document.querySelector<HTMLElement>('#prompt');\n    const ok = popup.querySelector<HTMLElement>('#ok_prompt');\n    const cancel = popup.querySelector<HTMLElement>('#cancel_prompt');\n    \n    conf.style.display = 'block';\n    confWrap.style.display = 'block';\n    overlay.style.display = 'block';\n    popup.querySelector('label').textContent = text;\n    popup.querySelector('input').focus();\n\n    // kinda disgusting types but whatever\n    const listener = ({ target }: MouseEvent | { target: HTMLElement }) => {\n        const targetEl = target as HTMLButtonElement;\n        const el = targetEl.parentNode.querySelector('input');\n\n        ok.removeEventListener('click', listener);\n        cancel.removeEventListener('click', listener);\n        popup.querySelector('input').removeEventListener('keyup', kbListener);\n\n        conf.style.display = 'none';\n        confWrap.style.display = 'none';\n        overlay.style.display = 'none';\n        \n        if (targetEl.id === ok.id) cb(el.value);\n        else cb(null); // canceled \n\n        el.value = el.textContent = '';\n    }\n\n    const kbListener = (e: KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            return listener({ target: ok })\n        }\n\n        return e.preventDefault();\n    }\n\n    ok.addEventListener('click', listener);\n    cancel.addEventListener('click', listener);\n    popup.querySelector('input').addEventListener('keyup', kbListener);\n}\n\n/*** Promisified version of the AlertCB function. */\nexport const Alert = (text: string): Promise<undefined> => new Promise(res => AlertCB(text, res));\n/*** Promisified version of the PromptCB function. */\nexport const Prompt = (text: string): Promise<string | null> => new Promise(res => PromptCB(text, res));\n/*** Promisified version of the ConfirmCB function */\nexport const Confirm = (text: string): Promise<boolean> => new Promise(res => ConfirmCB(text, res));\n\n// I stole all of this from https://codepen.io/thenutz/pen/VwYeYEE\n// no regrets - Khafra\nconst slider = document.querySelector<HTMLElement>('#statisticsSubTab');\nslider.scrollTo(0, 0);\nlet isDown = false;\nlet startX: number;\nlet scrollLeft: number;\n\nslider.addEventListener('mousedown', (e) => {\n    isDown = true;\n    startX = e.pageX - slider.offsetLeft;\n    scrollLeft = slider.scrollLeft;\n});\n\nslider.addEventListener('mouseleave', () => isDown = false);\nslider.addEventListener('mouseup', () => isDown = false);\n\nslider.addEventListener('mousemove', (e) => {\n    if(!isDown) return;\n    e.preventDefault();\n\n    const x = e.pageX - slider.offsetLeft;\n    const walk = (x - startX) * 1.5; \n    slider.scrollLeft = scrollLeft - walk;\n});\n\n/**\n * Create a popunder under an element.\n * @example\n * popunder(document.querySelector('.currencyContainer'), () => player.coins);\n * @param el Element to create the popunder under\n * @param v function that returns the value to format\n */\n/*const popunder = (\n    el: HTMLElement, \n    v: () => Parameters<typeof format>[0]\n) => {\n    const id: 'khafraIsAwesome' = 'khafraIsAwesome' as const; // DO NOT CHANGE!\n    el.addEventListener('mouseenter', (ev) => {\n        const isOnPage = document.getElementById(id);\n        if (isOnPage !== null)\n            document.body.removeChild(isOnPage);\n\n        const hover = ev.target as HTMLElement;\n        const popunder = document.createElement('div');\n        popunder.setAttribute('id', id);\n        popunder.textContent =  format(v(), undefined, undefined, false);\n\n        popunder.style.setProperty('position', 'absolute');\n        popunder.style.setProperty('text-align', 'center');\n        popunder.style.setProperty('height', `${hover.offsetHeight}px`);\n        popunder.style.setProperty('width', `${hover.offsetWidth}px`);\n        popunder.style.setProperty('top', `${hover.offsetTop + hover.offsetHeight}px`);\n        popunder.style.setProperty('left', `${hover.offsetLeft}px`);\n        popunder.style.setProperty('background-color', 'red');\n\n        document.body.appendChild(popunder);\n    });\n\n    el.addEventListener('mouseleave', () => {\n        const isOnPage = document.getElementById(id);\n        if (isOnPage !== null)\n            document.body.removeChild(isOnPage);\n    });\n}\n\nObject.defineProperty(window, 'popunder', { value: popunder });*/\n", "import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { calculateSigmoidExponential, calculateCubeMultiplier, calculateOfferings, calculateTesseractMultiplier, calculateHypercubeMultiplier, calculatePlatonicMultiplier, calculateHepteractMultiplier, calculateAllCubeMultiplier, calculateSigmoid, calculatePowderConversion } from './Calculate';\nimport { challenge15ScoreMultiplier } from './Challenges';\nimport type { GlobalVariables } from './types/Synergism';\n\nexport const loadStatisticsAccelerator = () => {\n    document.getElementById(\"sA1\").textContent = \"+\" + format(G['freeUpgradeAccelerator'], 0, false)\n    document.getElementById(\"sA2\").textContent = \"+\" + format(G['totalAcceleratorBoost'] * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G['cubeBonusMultiplier'][1]), 0, false)\n    document.getElementById(\"sA3\").textContent = \"+\" + format(Math.floor(Math.pow(G['rune1level'] * G['effectiveLevelMult'] / 10, 1.1)), 0, true)\n    document.getElementById(\"sA4\").textContent = \"x\" + format(1 + G['rune1level'] * 1 / 200 * G['effectiveLevelMult'], 3, true)\n    document.getElementById(\"sA5\").textContent = \"x\" + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]), 3, true)\n    document.getElementById(\"sA6\").textContent = \"x\" + format(Math.pow(1.01, player.achievements[60] + player.achievements[61] + player.achievements[62]), 3, true)\n    document.getElementById(\"sA7\").textContent = \"x\" + format(1 + 1 / 5 * player.researches[1], 3, true)\n    document.getElementById(\"sA8\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10], 3, true)\n    document.getElementById(\"sA9\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[86], 3, true)\n    document.getElementById(\"sA10\").textContent = \"x\" + format(((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5 ? 1.25 : 1), 3, true)\n    document.getElementById(\"sA11\").textContent = \"^\" + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['maladaptivePower'][player.usedCorruptions[2]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))), 3, true)\n    document.getElementById(\"sA12\").textContent = format(G['freeAccelerator'], 0, true)\n}\n\nexport const loadStatisticsMultiplier = () => {\n    document.getElementById(\"sM1\").textContent = \"+\" + format(G['freeUpgradeMultiplier'], 0, true)\n    document.getElementById(\"sM2\").textContent = \"+\" + format(Math.floor(Math.floor(G['rune2level'] / 10 * G['effectiveLevelMult']) * Math.floor(10 + G['rune2level'] / 10 * G['effectiveLevelMult']) / 2) * 100 / 100, 0, true)\n    document.getElementById(\"sM3\").textContent = \"x\" + format(1 + G['rune2level'] / 200 * G['effectiveLevelMult'], 3, true)\n    document.getElementById(\"sM4\").textContent = \"x\" + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]) * (1 + player.upgrades[34] * 3 / 100) * (1 + player.upgrades[34] * (2 / 103)), 3, true)\n    document.getElementById(\"sM5\").textContent = \"x\" + format(Math.pow(1.01, player.achievements[57] + player.achievements[58] + player.achievements[59]), 3, true)\n    document.getElementById(\"sM6\").textContent = \"x\" + format(1 + 1 / 5 * player.researches[2], 3, true)\n    document.getElementById(\"sM7\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15], 3, true)\n    document.getElementById(\"sM8\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[87], 3, true)\n    document.getElementById(\"sM9\").textContent = \"x\" + format(calculateSigmoidExponential(40, (player.antUpgrades[5-1] + G['bonusant5']) / 1000 * 40 / 39),2,true)\n    document.getElementById(\"sM10\").textContent = \"x\" + format(G['cubeBonusMultiplier'][2], 3, true)\n    document.getElementById(\"sM11\").textContent = \"x\" + format(((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5 ? 1.25 : 1), 3, true)\n    document.getElementById(\"sM12\").textContent = \"^\" + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['divisivenessPower'][player.usedCorruptions[1]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))), 3, true)\n    document.getElementById(\"sM13\").textContent = format(G['freeMultiplier'], 3, true)\n}\n\nexport const loadStatisticsCubeMultipliers = () => {\n\n    const arr0 = calculateAllCubeMultiplier().list;\n    const map0: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: \"Ascension Time Multiplier:\"},\n        2: {acc: 2, desc: \"Sun and Moon Achievements:\"},\n        3: {acc: 2, desc: \"Speed Achievement:\"},\n        4: {acc: 2, desc: \"Challenge 15 All Cube Bonus:\"},\n        5: {acc: 2, desc: \"Rune 6 - Infinite Ascent:\"},\n        6: {acc: 2, desc: \"Platonic Beta:\"},\n        7: {acc: 2, desc: \"Platonic Omega:\"},\n        8: {acc: 2, desc: \"Overflux Powder:\"},\n        9: {acc: 2, desc: \"Event [Most Recent: June 28 - July 01]\"}\n    }\n    for (let i = 0; i < arr0.length; i++) {\n        const statGCMi = document.getElementById(`statGCM${i + 1}`);\n        statGCMi.childNodes[0].textContent = map0[i + 1].desc;\n        document.getElementById(`sGCM${i + 1}`).textContent = `x${format(arr0[i], map0[i + 1].acc, true)}`;\n    }\n\n    document.getElementById(\"sGCMT\").textContent = `x${format(calculateAllCubeMultiplier().mult, 3)}`;\n\n    const arr = calculateCubeMultiplier().list;\n    const map: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: \"Ascension Score Multiplier:\"},\n        2: {acc: 2, desc: \"Global Cube Multiplier:\"},\n        3: {acc: 2, desc: \"Season Pass 1:\"},\n        4: {acc: 2, desc: \"Researches (Except 8x25):\"},\n        5: {acc: 2, desc: \"Research 8x25:\"},\n        6: {acc: 2, desc: \"Cube Upgrades:\"},\n        7: {acc: 2, desc: \"Constant Upgrade 10:\"},\n        8: {acc: 2, desc: \"Achievement 189 Bonus:\"},\n        9: {acc: 2, desc: \"Achievement 193 Bonus:\"},\n        10: {acc: 2, desc: \"Achievement 195 Bonus:\"},\n        11: {acc: 2, desc: \"Achievement 198-201 Bonus:\"},\n        12: {acc: 2, desc: \"Achievement 254 Bonus:\"},\n        13: {acc: 2, desc: \"Spirit Power:\"},\n        14: {acc: 2, desc: \"Platonic Cubes:\"},\n        15: {acc: 2, desc: \"Platonic 1x1:\"},\n    }\n    for (let i = 0; i < arr.length; i++) {\n        const statCMi = document.getElementById(`statCM${i + 1}`);\n        statCMi.childNodes[0].textContent = map[i + 1].desc;\n        document.getElementById(`sCM${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`;\n    }\n    // PLAT\n    document.getElementById(\"sCMT\").textContent = `x${format(calculateCubeMultiplier().mult, 3)}`;\n\n    const arr2 = calculateTesseractMultiplier().list;\n    const map2: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: \"Ascension Score Multiplier:\"},\n        2: {acc: 2, desc: \"Global Cube Multiplier:\"},\n        3: {acc: 2, desc: \"Season Pass 1:\"},\n        4: {acc: 2, desc: \"Constant Upgrade 10:\"},\n        5: {acc: 2, desc: \"Cube Upgrade 3x10:\"},\n        6: {acc: 2, desc: \"Cube Upgrade 4x8:\"},\n        7: {acc: 2, desc: \"Achievement 195 Bonus:\"},\n        8: {acc: 2, desc: \"Achievement 202 Bonus:\"},\n        9: {acc: 2, desc: \"Achievement 205-208 Bonus:\"},\n        10: {acc: 2, desc: \"Achievement 255 Bonus:\"},\n        11: {acc: 2, desc: \"Platonic Cubes:\"},\n        12: {acc: 2, desc: \"Platonic 1x2:\"},\n    }\n    for (let i = 0; i < arr2.length; i++) {\n        const statTeMi = document.getElementById(`statTeM${i + 1}`);\n        statTeMi.childNodes[0].textContent = map2[i + 1].desc;\n        document.getElementById(`sTeM${i + 1}`).textContent = `x${format(arr2[i], map2[i + 1].acc, true)}`;\n    }\n\n    document.getElementById(\"sTeMT\").textContent = `x${format(calculateTesseractMultiplier().mult, 3)}`;\n\n    const arr3 = calculateHypercubeMultiplier().list;\n    const map3: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: \"Ascension Score Multiplier:\"},\n        2: {acc: 2, desc: \"Global Cube Multiplier:\"},\n        3: {acc: 2, desc: \"Season Pass 2:\"},\n        4: {acc: 2, desc: \"Achievement 212-215 Bonus:\"},\n        5: {acc: 2, desc: \"Achievement 216 Bonus:\"},\n        6: {acc: 2, desc: \"Achievement 253 Bonus:\"},\n        7: {acc: 2, desc: \"Achievement 256 Bonus:\"},\n        8: {acc: 2, desc: \"Achievement 265 Bonus:\"},\n        9: {acc: 2, desc: \"Platonic Cubes:\"},\n        10: {acc: 2, desc: \"Platonic 1x3:\"},\n        11: {acc: 2, desc: \"Hyperreal Hepteract Bonus:\"},\n    }\n    for (let i = 0; i < arr3.length; i++) {\n        const statHyMi = document.getElementById(`statHyM${i + 1}`);\n        statHyMi.childNodes[0].textContent = map3[i + 1].desc;\n        document.getElementById(`sHyM${i + 1}`).textContent = `x${format(arr3[i], map3[i + 1].acc, true)}`;\n    }\n\n    document.getElementById(\"sHyMT\").textContent = `x${format(calculateHypercubeMultiplier().mult, 3)}`;\n\n    const arr4 = calculatePlatonicMultiplier().list;\n    const map4: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: \"Ascension Score Multiplier:\"},\n        2: {acc: 2, desc: \"Global Cube Multiplier:\"},\n        3: {acc: 2, desc: \"Season Pass 2:\"},\n        4: {acc: 2, desc: \"Achievement 196 Bonus:\"},\n        5: {acc: 2, desc: \"Achievement 219-222 Bonus:\"},\n        6: {acc: 2, desc: \"Achievement 223 Bonus:\"},\n        7: {acc: 2, desc: \"Achievement 257 Bonus:\"},\n        8: {acc: 2, desc: \"Platonic Cubes:\"},\n        9: {acc: 2, desc: \"Platonic 1x4:\"},\n    }\n    for (let i = 0; i < arr4.length; i++) {\n        const statPlMi = document.getElementById(`statPlM${i + 1}`);\n        statPlMi.childNodes[0].textContent = map4[i + 1].desc;\n        document.getElementById(`sPlM${i + 1}`).textContent = `x${format(arr4[i], map4[i + 1].acc, true)}`;\n    }\n\n    document.getElementById(\"sPlMT\").textContent = `x${format(calculatePlatonicMultiplier().mult, 3)}`;\n\n    const arr5 = calculateHepteractMultiplier().list;\n    const map5: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: \"Ascension Score Multiplier:\"},\n        2: {acc: 2, desc: \"Global Cube Multiplier:\"},\n        3: {acc: 2, desc: \"Season Pass 3:\"},\n        4: {acc: 2, desc: \"Achievement 258 Bonus:\"},\n        5: {acc: 2, desc: \"Achievement 264 Bonus:\"},\n        6: {acc: 2, desc: \"Achievement 265 Bonus:\"},\n        7: {acc: 2, desc: \"Achievement 270 Bonus:\"},\n    }\n    for (let i = 0; i < arr5.length; i++) {\n        const statHeMi = document.getElementById(`statHeM${i + 1}`);\n        statHeMi.childNodes[0].textContent = map5[i + 1].desc;\n        document.getElementById(`sHeM${i + 1}`).textContent = `x${format(arr5[i], map5[i + 1].acc, true)}`;\n    }\n\n    document.getElementById(\"sHeMT\").textContent = `x${format(calculateHepteractMultiplier().mult, 3)}`;\n}\n\nexport const loadStatisticsOfferingMultipliers = () => {\n    const arr = calculateOfferings(\"prestige\", false); \n    const map: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 3, desc: \"Alchemy Achievement 5:\"},\n        2: {acc: 3, desc: \"Alchemy Achievement 6:\"},\n        3: {acc: 3, desc: \"Alchemy Achievement 7:\"},\n        4: {acc: 3, desc: \"Diamond Upgrade 4x3:\"},\n        5: {acc: 3, desc: \"Particle Upgrade 3x5:\"},\n        6: {acc: 3, desc: \"Auto Offering Shop Upgrade:\"},\n        7: {acc: 3, desc: \"Offering EX Shop Upgrade:\"},\n        8: {acc: 3, desc: \"Cash Grab Shop Upgrade:\"},\n        9: {acc: 3, desc: \"Research 4x10:\"},\n        10: {acc: 3, desc: \"Sacrificium Formicidae:\"},\n        11: {acc: 3, desc: \"Plutus Cube Tribute:\"},\n        12: {acc: 3, desc: \"Constant Upgrade 3:\"},\n        13: {acc: 3, desc: \"Research 6x24,8x4:\"},\n        14: {acc: 3, desc: \"Challenge 12:\"},\n        15: {acc: 3, desc: \"Research 8x25:\"},\n        16: {acc: 3, desc: \"Ascension Count Achievement:\"},\n        17: {acc: 3, desc: \"Sun and Moon Achievements:\"},\n        18: {acc: 3, desc: \"Cube Upgrade 5x6:\"},\n        19: {acc: 3, desc: \"Cube Upgrade 5x10:\"},\n        20: {acc: 3, desc: \"Platonic ALPHA:\"},\n        21: {acc: 3, desc: \"Platonic BETA:\"},\n        22: {acc: 3, desc: \"Platonic OMEGA:\"},\n        23: {acc: 3, desc: \"Challenge 15:\"},\n    }\n    for (let i = 0; i < arr.length; i++) {\n        const statOffi = document.getElementById(`statOff${i + 1}`);\n        statOffi.childNodes[0].textContent = map[i + 1].desc;\n        document.getElementById(`sOff${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`;\n    }\n    document.getElementById(\"sOffT\").textContent = `x${format(calculateOfferings(\"prestige\", true, true), 3)}`;\n}\n\nexport const loadPowderMultiplier = () => {\n    const arr0 = calculatePowderConversion().list;\n    const map0: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: \"Base:\"},\n        2: {acc: 2, desc: \"Challenge 15 Bonus:\"},\n        3: {acc: 2, desc: \"Powder EX:\"},\n        4: {acc: 2, desc: \"Achievement 256:\"},\n        5: {acc: 2, desc: \"Achievement 257:\"},\n        6: {acc: 2, desc: \"Platonic Upgrade 16 [4x1]\"},\n        7: {acc: 2, desc: \"Event [Most Recent: June 20 - June 27]:\"},\n    }\n    for (let i = 0; i < arr0.length; i++) {\n        const statGCMi = document.getElementById(`statPoM${i + 1}`);\n        statGCMi.childNodes[0].textContent = map0[i + 1].desc;\n        document.getElementById(`sPoM${i + 1}`).textContent = `x${format(arr0[i], map0[i + 1].acc, true)}`;\n    }\n\n    document.getElementById(\"sPoMT\").textContent = `x${format(calculatePowderConversion().mult, 3)}`;\n}\n\nexport const c15RewardUpdate = () => {\n    const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10, 1e11, 1e15, 2e15, 4e15, 7e15, 1e16, 2e16, 3.33e16, 3.33e16, 3.33e16, 2e17, 1.5e18]\n    type Key = keyof GlobalVariables['challenge15Rewards'];\n    const keys = Object.keys(G['challenge15Rewards']) as Key[];\n    const e = player.challenge15Exponent\n\n    for(const obj in G['challenge15Rewards']){\n        G['challenge15Rewards'][obj as Key] = 1;\n    }\n    G['challenge15Rewards'].freeOrbs = 0;\n\n    if(e >= exponentRequirements[0]){\n        //All Cube Types 1 [750]\n        G['challenge15Rewards'][keys[0]] = 1 + 1 / 50 * Math.log(e / 175) / Math.log(2)\n    }\n    if(e >= exponentRequirements[1]){\n        //Ascension Count [1500]\n        G['challenge15Rewards'][keys[1]] = 1 + 1 / 20 * Math.log(e / 375) / Math.log(2)\n    }\n    if(e >= exponentRequirements[2]){\n        //Coin Exponent [3000]\n        G['challenge15Rewards'][keys[2]] = 1 + 1 / 150 * Math.log(e / 750) / Math.log(2)\n    }\n    if(e >= exponentRequirements[3]){\n        //Taxes [5000]\n        G['challenge15Rewards'][keys[3]] = Math.pow(0.98, Math.log(e / 1.25e3) / Math.log(2))\n    }\n    if(e >= exponentRequirements[4]){\n        //Obtainium [7500]\n        G['challenge15Rewards'][keys[4]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75)\n    }\n    if(e >= exponentRequirements[5]){\n        //Offerings [7500]\n        G['challenge15Rewards'][keys[5]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75)\n    }\n    if(e >= exponentRequirements[6]){\n        //Accelerator Boost (Uncorruptable) [10000]\n        G['challenge15Rewards'][keys[6]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2)\n    }\n    if(e >= exponentRequirements[7]){\n        //Multiplier Boost (Uncorruptable) [10000]\n        G['challenge15Rewards'][keys[7]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2)\n    }\n    if(e >= exponentRequirements[8]){\n        //Rune EXP [20000]\n        G['challenge15Rewards'][keys[8]] = 1 + Math.pow(e / 2e4, 1.5)\n    }\n    if(e >= exponentRequirements[9]){\n        //Rune Effectiveness [40000]\n        G['challenge15Rewards'][keys[9]] = 1 + 1 / 33 * Math.log(e / 1e4) / Math.log(2)\n    }\n    if(e >= exponentRequirements[10]){\n        //All Cube Types II [60000]\n        G['challenge15Rewards'][keys[10]] = 1 + 1 / 100 * Math.log(e / 1.5e4) / Math.log(2)\n    }\n    if(e >= exponentRequirements[11]){\n        //Chal 1-5 Scaling [100000]\n        G['challenge15Rewards'][keys[11]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2))\n    }\n    if(e >= exponentRequirements[12]){\n        //Chal 6-10 Scaling [100000]\n        G['challenge15Rewards'][keys[12]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2))\n    }\n    if(e >= exponentRequirements[13]){\n        //Ant Speed [200k]\n        G['challenge15Rewards'][keys[13]] = Math.pow(1 + Math.log(e / 2e5) / Math.log(2), 4)\n    }\n    if(e >= exponentRequirements[14]){\n        //Ant Bonus Levels [500k]\n        G['challenge15Rewards'][keys[14]] = 1 + 1 / 20 * Math.log(e / 1.5e5) /Math.log(2)\n    }\n    if(e >= exponentRequirements[15]){\n        //All Cube Types III [1m]\n        G['challenge15Rewards'][keys[15]] = 1 + 1 / 150 * Math.log(e / 2.5e5) / Math.log(2)\n    }\n    if(e >= exponentRequirements[16]){\n        //Talisman Effectiveness [3m]\n        G['challenge15Rewards'][keys[16]] = 1 + 1 / 20 * Math.log(e / 7.5e5) / Math.log(2)\n    }\n    if(e >= exponentRequirements[17]){\n        //Global Speed [10m]\n        G['challenge15Rewards'][keys[17]] = 1 + 1 / 20 * Math.log(e / 2.5e6) / Math.log(2)\n    }\n    if(e >= exponentRequirements[18]){\n        //Blessing Effectiveness [30m]\n        G['challenge15Rewards'][keys[18]] = 1 + 1 / 5 * Math.pow(e / 3e7, 1 / 4)\n    }\n    if(e >= exponentRequirements[19]){\n        //Tesseract Building Speed [100m]\n        G['challenge15Rewards'][keys[19]] = 1 + 1 / 5 * Math.pow(e / 1e8, 2 / 3)\n    }\n    if(e >= exponentRequirements[20]){\n        //All Cube Types IV [500m]\n        G['challenge15Rewards'][keys[20]] = 1 + 1 / 200 * Math.log(e / 1.25e8) / Math.log(2)\n    }\n    if(e >= exponentRequirements[21]){\n        //Spirit Effectiveness [2b]\n        G['challenge15Rewards'][keys[21]] = 1 + 1 / 5 * Math.pow(e / 2e9, 1 / 4)\n    }\n    if(e >= exponentRequirements[22]){\n        //Ascension Score [10b]\n        G['challenge15Rewards'][keys[22]] = 1 + 1 / 4 * Math.pow(e / 1e10 , 1 / 4)\n    }\n    if(e >= exponentRequirements[23]){\n        //Quark Gain [100b]\n        G['challenge15Rewards'][keys[23]] = 1 + 1 / 100 * Math.log(e * 32 / 1e11) / Math.log(2)\n    }\n    if(e >= exponentRequirements[24]){\n        //Unlock Hepteract gain [1Qa]\n        G['challenge15Rewards'][keys[24]] = 2\n    }\n    if (e >= exponentRequirements[25]) {\n        //Unlock Challenge hepteract [2Qa]\n        player.hepteractCrafts.challenge.unlock('the Hepteract of Challenge')\n    }\n    if (e >= exponentRequirements[26]) {\n        //All Cube Types V [4Qa]\n        G['challenge15Rewards'][keys[25]] = 1 + 1 / 300 * Math.log2(e / (4e15 / 1024))\n    }\n    if (e >= exponentRequirements[27]) {\n        //Powder Gain [7Qa]\n        G['challenge15Rewards'][keys[26]] = 1 + 1 / 50 * Math.log2(e / (7e15 / 32))\n    }\n    if (e >= exponentRequirements[28]) {\n        //Unlock Abyss Hepteract [10Qa]\n        player.hepteractCrafts.abyss.unlock('the Hepteract of the Abyss')\n    }\n    if (e >= exponentRequirements[29]) {\n        //Constant Upgrade 2 [20Qa]\n        G['challenge15Rewards'][keys[27]] = calculateSigmoid(1.05, e, 1e18);\n    }\n    if (e >= exponentRequirements[30]) {\n        //Unlock ACCELERATOR HEPT [33.33Qa]\n        player.hepteractCrafts.accelerator.unlock('the Hepteract of Way Too Many Accelerators')\n    }\n    if (e >= exponentRequirements[31]) {\n        //Unlock ACCELERATOR BOOST HEPT [33.33Qa]\n        player.hepteractCrafts.acceleratorBoost.unlock('the Hepteract of Way Too Many Accelerator Boosts')\n    }\n    if (e >= exponentRequirements[32]) {\n        //Unlock MULTIPLIER Hept [33.33Qa]\n        player.hepteractCrafts.multiplier.unlock('the Hepteract of Way Too Many Multipliers')\n    }\n    if (e >= exponentRequirements[33]) {\n        // FREE Daily Orbs\n        G['challenge15Rewards'].freeOrbs = Math.floor(200 * Math.pow(e / 2e17, 0.5))\n    }\n    if (e >= exponentRequirements[34]) {\n        // Ascension Speed\n        G['challenge15Rewards'].ascensionSpeed = 1 + 5/100 + 2 * Math.log2(e / 1.5e18) / 100\n    }\n\n\n    updateDisplayC15Rewards();\n}\n\nconst updateDisplayC15Rewards = () => {\n    document.getElementById('c15Reward0Num').textContent = format(player.challenge15Exponent,0,true)\n    document.getElementById('c15RequiredExponentNum').textContent = format(player.challenge15Exponent / challenge15ScoreMultiplier(),0,true)\n    const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10, 1e11, 1e15, 2e15, 4e15, 7e15, 1e16, 2e16, 3.33e16, 3.33e16, 3.33e16, 2e17, 1.5e18]\n    const isNum: Record<number, boolean> = { // Shit solution to a shit problem -Platonic\n        0: true,\n        1: true,\n        2: true,\n        3: true,\n        4: true,\n        5: true,\n        6: true,\n        7: true,\n        8: true,\n        9: true,\n        10: true,\n        11: true,\n        12: true,\n        13: true,\n        14: true,\n        15: true,\n        16: true,\n        17: true,\n        18: true,\n        19: true,\n        20: true,\n        21: true,\n        22: true,\n        23: true,\n        24: false,\n        25: false,\n        26: true,\n        27: true,\n        28: false,\n        29: true,\n        30: false,\n        31: false,\n        32: false,\n        33: true,\n        34: true\n    }\n    const values = Object.values(G['challenge15Rewards'])\n    let keepExponent: string | number = 'None'\n    let skip = 0\n    for(let i = 0; i < exponentRequirements.length; i++){\n        if(keepExponent === 'None' && player.challenge15Exponent < exponentRequirements[i]){\n            keepExponent = exponentRequirements[i]\n        }\n        if (player.challenge15Exponent >= exponentRequirements[i]) {\n            document.getElementById('c15Reward'+(i+1)+'Num').textContent = (isNum[i]) ?\n            format(100 * values[i - skip] - 100,2,true):\n            'Unlocked!';\n\n            if (!isNum[i] && i !== 24) { // TODO: This sucks -Platonic\n                skip += 1;\n            }\n\n            if (i === 33) {\n                document.getElementById('c15Reward34Num').textContent = format(values[i - skip], 0, true)\n            }\n        }\n\n        document.getElementById('c15Reward'+(i+1)).style.display = (player.challenge15Exponent >= exponentRequirements[i])? 'block': 'none';\n        document.getElementById('c15RewardList').textContent = typeof keepExponent  === 'string'\n            ? 'You have unlocked all reward types from Challenge 15!'\n            : 'Next reward type requires ' + format(keepExponent,0,true) + ' exponent.' \n    }\n}\n", "import { revealStuff, hideStuff, updateChallengeDisplay, showCorruptionStatsLoadouts, changeTabColor } from './UpdateHTML';\nimport { player, interval, clearInt, format, resetCheck } from './Synergism';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { visualUpdateCubes } from './UpdateVisuals';\nimport { calculateRuneLevels } from './Calculate';\nimport { reset } from './Reset';\nimport { achievementaward } from './Achievements';\nimport { getChallengeConditions } from './Challenges';\nimport { loadStatisticsCubeMultipliers, loadStatisticsOfferingMultipliers, loadStatisticsAccelerator, loadStatisticsMultiplier, loadPowderMultiplier } from './Statistics';\nimport { corruptionDisplay, corruptionLoadoutTableUpdate } from './Corruptions';\nimport type { BuildingSubtab, Player } from './types/Synergism';\n\ntype TabValue = { tabName: keyof typeof tabNumberConst, unlocked: boolean };\ntype Tab = Record<number, TabValue>;\ntype SubTab = Record<number, { \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    tabSwitcher?: (...args: any[]) => void, \n    subTabList: { \n        subTabID: string | number | boolean, \n        unlocked: boolean,\n        buttonID?: string\n    }[] \n}>\n\nconst tabNumberConst = {\n    \"settings\": -1,\n    \"shop\": 0,\n    \"buildings\": 1,\n    \"upgrades\": 2,\n    \"achievements\": 3,\n    \"runes\": 4,\n    \"challenges\": 5,\n    \"researches\": 6,\n    \"ants\": 7,\n    \"cubes\": 8,\n    \"traits\": 9\n} as const;\n\nexport const toggleTabs = (name: keyof typeof tabNumberConst) => {\n    G['currentTab'] = name;\n    player.tabnumber = tabNumberConst[name];\n\n    revealStuff();\n    hideStuff();\n    \n    const subTabList = subTabsInMainTab(player.tabnumber).subTabList\n    if (player.tabnumber !== -1) {\n        for (let i = 0; i < subTabList.length; i++) {\n            const button = document.getElementById(subTabList[i].buttonID)\n            if (button && button.style.backgroundColor === \"crimson\") { // handles every tab except settings and corruptions\n                player.subtabNumber = i\n                break;\n            }\n            if (player.tabnumber === 9 && button.style.borderColor === \"dodgerblue\") { // handle corruption tab\n                player.subtabNumber = i\n                break;\n            }\n        }\n    } else { // handle settings tab\n        // The first getElementById makes sure that it still works if other tabs start using the subtabSwitcher class\n        const btns = document.querySelectorAll('#settings .subtabSwitcher > button');\n        for (let i = 0; i < btns.length; i++) {\n            if (btns[i].classList.contains(\"buttonActive\")) {\n                player.subtabNumber = i\n                break;\n            }\n        }\n    }\n}\n\nexport const toggleSettings = (i: number) => {\n    i++\n    if (player.toggles[i] === true) {\n        player.toggles[i] = false\n    } else {\n        player.toggles[i] = true\n    }\n    toggleauto();\n}\n\nexport const toggleChallenges = (i: number, auto = false) => {\n    if (player.currentChallenge.transcension === 0 && (i <= 5)) {\n        if(player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2){\n            player.currentChallenge.transcension = i;\n            reset(\"transcensionChallenge\", false, \"enterChallenge\");\n            player.transcendCount -= 1;\n        }\n    }\n    if ((player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) && (i >= 6 && i < 11)){\n        if(player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2){\n            player.currentChallenge.reincarnation = i;\n            reset(\"reincarnationChallenge\", false, \"enterChallenge\");\n            player.reincarnationCount -= 1;\n        }\n    }\n    if (player.challengecompletions[10] > 0) {\n        if ((player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0 && player.currentChallenge.ascension === 0) && (i >= 11)) {\n            reset(\"ascensionChallenge\", false, \"enterChallenge\");\n            player.currentChallenge.ascension = i;\n\n            if (player.currentChallenge.ascension === 12) {\n                player.antPoints = new Decimal(\"8\")\n            }\n            if (player.currentChallenge.ascension === 15) {\n                player.usedCorruptions[0] = 0;\n                player.prototypeCorruptions[0] = 0;\n                for (let i = 1; i <= 9; i++) {\n                    player.usedCorruptions[i] = 11;\n                }\n            }\n        }\n    }\n    updateChallengeDisplay();\n    getChallengeConditions(i);\n\n    if (!auto && player.autoChallengeRunning) {\n        toggleAutoChallengeRun();\n    }\n\n    if (player.currentChallenge.transcension !== 0 && player.currentChallenge.reincarnation !== 0 && player.currentChallenge.ascension !== 0 && player.achievements[238] < 1) {\n        achievementaward(238)\n    }\n}\n\ntype ToggleBuy = 'coin' | 'crystal' | 'mythos' | 'particle' | 'offering' | 'tesseract';\n\nexport const toggleBuyAmount = (quantity: 1 | 10 | 100 | 1000, type: ToggleBuy) => {\n    player[`${type}buyamount` as const] = quantity;\n    const a = ['one', 'ten', 'hundred', 'thousand'][quantity.toString().length - 1];\n\n    document.getElementById(`${type}${a}`).style.backgroundColor = \"Green\";\n    if (quantity !== 1) {\n        document.getElementById(`${type}one`).style.backgroundColor = \"\"\n    }\n    if (quantity !== 10) {\n        document.getElementById(`${type}ten`).style.backgroundColor = \"\"\n    }\n    if (quantity !== 100) {\n        document.getElementById(`${type}hundred`).style.backgroundColor = \"\"\n    }\n    if (quantity !== 1000) {\n        document.getElementById(`${type}thousand`).style.backgroundColor = \"\"\n    }\n}\n\ntype upgradeAutos = \"coin\" | \"prestige\" | \"transcend\" | \"generators\" | \"reincarnate\"\n\n/**\n * Updates Auto Upgrade Border Colors if applicable, or updates the status of an upgrade toggle as optional.\n * @param toggle Targets a specific upgrade toggle if provided\n */\nexport const toggleShops = (toggle?: upgradeAutos) => {\n    // toggle provided: we do not want to update every button\n    if (toggle) {\n        player.shoptoggles[toggle] = !player.shoptoggles[toggle]\n        document.getElementById(`${toggle}AutoUpgrade`).style.borderColor = player.shoptoggles[toggle] ? 'green' : 'red';\n        document.getElementById(`${toggle}AutoUpgrade`).textContent = 'Auto: ' + (player.shoptoggles[toggle] ? 'ON': 'OFF');\n    }\n    else {\n        const keys = Object.keys(player.shoptoggles) as (keyof Player['shoptoggles'])[]\n        for (const key of keys) {\n            const color = player.shoptoggles[key]? 'green': 'red'\n            const auto = 'Auto: ' + (player.shoptoggles[key] ? 'ON' : 'OFF')\n            console.log(key)\n            document.getElementById(`${key}AutoUpgrade`).style.borderColor = color\n            document.getElementById(`${key}AutoUpgrade`).textContent = auto\n        }\n    }\n}\n\nexport function tabs(): Tab;\nexport function tabs(mainTab: number): TabValue;\nexport function tabs(mainTab?: number) {\n    const tabs: Tab = {\n        \"-1\": {tabName: \"settings\", unlocked: true},\n        0: {tabName: \"shop\", unlocked: player.unlocks.reincarnate},\n        1: {tabName: \"buildings\", unlocked: true},\n        2: {tabName: \"upgrades\", unlocked: true},\n        3: {tabName: \"achievements\", unlocked: player.unlocks.coinfour},\n        4: {tabName: \"runes\", unlocked: player.unlocks.prestige},\n        5: {tabName: \"challenges\", unlocked: player.unlocks.transcend},\n        6: {tabName: \"researches\", unlocked: player.unlocks.reincarnate},\n        7: {tabName: \"ants\", unlocked: player.achievements[127] > 0},\n        8: {tabName: \"cubes\", unlocked: player.achievements[141] > 0},\n        9: {tabName: \"traits\", unlocked: player.achievements[141] > 0}\n    }\n\n    if (typeof mainTab === 'undefined') {\n        return tabs\n    }\n    \n    return tabs[mainTab];\n}\n\n/**\n *\n * @param mainTab the index of the main tab\n * @returns Object()\n */\nexport const subTabsInMainTab = (mainTab: number) => {\n    /**\n     * An array of sub-tab objects with the IDs for the sub-tabs and buttons, and unlock conditions\n     * @type {SubTab}\n     */\n    const subTabs: SubTab = {\n        \"-1\": {\n            tabSwitcher: setActiveSettingScreen,\n            subTabList: [\n                {subTabID: \"settingsubtab\", unlocked: true},\n                {subTabID: \"creditssubtab\", unlocked: true},\n                {subTabID: \"statisticsSubTab\", unlocked: true},\n                {subTabID: \"resetHistorySubTab\", unlocked: player.unlocks.prestige},\n                {subTabID: \"ascendHistorySubTab\", unlocked: player.ascensionCount > 0},\n                { subTabID: \"hotkeys\", unlocked: true }\n            ]\n        },\n        0: {subTabList: []},\n        1: {\n            tabSwitcher: toggleBuildingScreen,\n            subTabList: [\n                {subTabID: \"coin\", unlocked: true, buttonID: \"switchToCoinBuilding\"},\n                {subTabID: \"diamond\", unlocked: player.unlocks.prestige, buttonID: \"switchToDiamondBuilding\"},\n                {subTabID: \"mythos\", unlocked: player.unlocks.transcend, buttonID: \"switchToMythosBuilding\"},\n                {subTabID: \"particle\", unlocked: player.unlocks.reincarnate, buttonID: \"switchToParticleBuilding\"},\n                {subTabID: \"tesseract\", unlocked: player.achievements[183] > 0, buttonID: \"switchToTesseractBuilding\"}]\n        },\n        2: {subTabList: []},\n        3: {subTabList: []},\n        4: {\n            tabSwitcher: toggleRuneScreen,\n            subTabList: [\n                {subTabID: 1, unlocked: player.unlocks.prestige, buttonID: \"toggleRuneSubTab1\"},\n                {subTabID: 2, unlocked: player.achievements[134] > 0, buttonID: \"toggleRuneSubTab2\"},\n                {subTabID: 3, unlocked: player.achievements[134] > 0, buttonID: \"toggleRuneSubTab3\"},\n                {subTabID: 4, unlocked: player.achievements[204] > 0, buttonID: \"toggleRuneSubTab4\"}]\n        },\n        5: {subTabList: []},\n        6: {subTabList: []},\n        7: {subTabList: []},\n        8: {\n            tabSwitcher: toggleCubeSubTab,\n            subTabList: [\n                {subTabID: 1, unlocked: player.achievements[141] > 0, buttonID: \"switchCubeSubTab1\"},\n                {subTabID: 2, unlocked: player.achievements[197] > 0, buttonID: \"switchCubeSubTab2\"},\n                {subTabID: 3, unlocked: player.achievements[211] > 0, buttonID: \"switchCubeSubTab3\"},\n                {subTabID: 4, unlocked: player.achievements[218] > 0, buttonID: \"switchCubeSubTab4\"},\n                {subTabID: 5, unlocked: player.achievements[141] > 0, buttonID: \"switchCubeSubTab5\"},\n                {subTabID: 6, unlocked: player.achievements[218] > 0, buttonID: \"switchCubeSubTab6\"},\n                {subTabID: 7, unlocked: player.challenge15Exponent >= 1e15, buttonID: \"switchCubeSubTab7\"}]\n        },\n        9: {\n            tabSwitcher: toggleCorruptionLoadoutsStats,\n            subTabList: [\n                {subTabID: true, unlocked: player.achievements[141] > 0, buttonID: \"corrStatsBtn\"},\n                {subTabID: false, unlocked: player.achievements[141] > 0, buttonID: \"corrLoadoutsBtn\"}]\n        },\n    }\n    return subTabs[mainTab];\n}\n\nexport const keyboardTabChange = (dir = 1, main = true) => {\n    if (main) {\n        player.tabnumber += dir\n        const maxTab = Object.keys(tabs()).reduce((a, b) => Math.max(a, +b), -Infinity);\n        const minTab = Object.keys(tabs()).reduce((a, b) => Math.min(a, +b), Infinity);\n        // The loop point is chosen to be before settings so that new tabs can just be added to the end of the list\n        // without needing to mess with the settings and shop\n        const handleLoopBack = () => {\n            if (player.tabnumber === maxTab + 1) { // went over from the right\n                player.tabnumber = minTab // loop back left\n            }\n            if (player.tabnumber === minTab - 1) { // and vice versa\n                player.tabnumber = maxTab\n            }\n        }\n        handleLoopBack()\n        while (!tabs(player.tabnumber).unlocked) {\n            player.tabnumber += dir\n            handleLoopBack()\n        }\n        toggleTabs(tabs(player.tabnumber).tabName)\n    } else {\n        const subTabList = subTabsInMainTab(player.tabnumber).subTabList\n        if (subTabList.length === 0)\n            return\n        player.subtabNumber += dir\n        const handleLoopBack = () => {\n            const numSubTabs = subTabList.length\n            player.subtabNumber = (player.subtabNumber + numSubTabs) % numSubTabs\n        }\n        handleLoopBack()\n        while (!subTabList[player.subtabNumber].unlocked) {\n            player.subtabNumber += dir\n            handleLoopBack()\n        }\n        toggleSubTab(player.tabnumber, player.subtabNumber)\n    }\n\n    changeTabColor();\n}\n\nexport const toggleSubTab = (mainTab = 1, subTab = 0) => {\n    if (tabs(mainTab).unlocked && subTabsInMainTab(mainTab).subTabList.length > 0) {\n        if (mainTab === -1) {\n            // The first getElementById makes sure that it still works if other tabs start using the subtabSwitcher class\n            const btn = document.getElementById(\"settings\").getElementsByClassName(\"subtabSwitcher\")[0].children[subTab]\n            if (subTabsInMainTab(mainTab).subTabList[subTab].unlocked)\n                subTabsInMainTab(mainTab).tabSwitcher(subTabsInMainTab(mainTab).subTabList[subTab].subTabID, btn)\n        } else {\n            if (subTabsInMainTab(mainTab).subTabList[subTab].unlocked)\n                subTabsInMainTab(mainTab).tabSwitcher(subTabsInMainTab(mainTab).subTabList[subTab].subTabID)\n        }\n    }\n}\n\nexport const toggleautoreset = (i: number) => {\n    if (i === 1) {\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n            player.resettoggle1 = 2;\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: TIME\"\n        } else {\n            player.resettoggle1 = 1;\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: AMOUNT\"\n        }\n    } else if (i === 2) {\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n            player.resettoggle2 = 2;\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: TIME\"\n        } else {\n            player.resettoggle2 = 1;\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: AMOUNT\"\n        }\n    } else if (i === 3) {\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            player.resettoggle3 = 2;\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: TIME\"\n        } else {\n            player.resettoggle3 = 1;\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: AMOUNT\"\n        }\n    } else if (i === 4) {\n        // To be ascend toggle\n    }\n}\n\nexport const toggleautobuytesseract = () => {\n    if (player.tesseractAutoBuyerToggle === 1 || player.tesseractAutoBuyerToggle === 0) {\n        player.tesseractAutoBuyerToggle = 2;\n        document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: OFF\"\n        document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid red\"\n        \n    } else {\n        player.tesseractAutoBuyerToggle = 1;\n        document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: ON\"\n        document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid green\"\n    }\n}\n\nexport const toggleauto = () => {\n    const autos = document.getElementsByClassName(\"auto\") as HTMLCollectionOf<HTMLElement>;\n    for (const auto of Array.from(autos)) {\n        const format = auto.getAttribute(\"format\") || 'Auto [$]';\n        const toggleId = auto.getAttribute(\"toggleId\");\n        if (toggleId === undefined || toggleId === null) {\n            continue;\n        }\n\n        const finishedString = format.replace('$', player.toggles[+toggleId] ? \"ON\" : \"OFF\")\n        auto.textContent = finishedString;\n        auto.style.border = \"2px solid \" + (player.toggles[+toggleId] ? \"green\" : \"red\");\n    }\n}\n\nexport const toggleResearchBuy = () => {\n    if (G['maxbuyresearch']) {\n        G['maxbuyresearch'] = false;\n        document.getElementById(\"toggleresearchbuy\").textContent = \"Upgrade: 1 Level\"\n    } else {\n        G['maxbuyresearch'] = true;\n        document.getElementById(\"toggleresearchbuy\").textContent = \"Upgrade: MAX [if possible]\"\n    }\n}\n\nexport const toggleAutoResearch = () => {\n    const el = document.getElementById(\"toggleautoresearch\")\n    if (player.autoResearchToggle) {\n        player.autoResearchToggle = false;\n        el.textContent = \"Automatic: OFF\";\n        document.getElementById(`res${player.autoResearch || 1}`).classList.remove(\"researchRoomba\");\n        player.autoResearch = 0;\n    } else {\n        player.autoResearchToggle = true;\n        el.textContent = \"Automatic: ON\"\n    }\n\n    if (player.autoResearchToggle && player.cubeUpgrades[9] === 1) {\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex]\n    }\n\n}\n\nexport const toggleAutoSacrifice = (index: number) => {\n    const el = document.getElementById(\"toggleautosacrifice\")\n    if (index === 0) {\n        if (player.autoSacrificeToggle) {\n            player.autoSacrificeToggle = false;\n            el.textContent = \"Auto Runes: OFF\";\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid red\"\n            player.autoSacrifice = 0;\n        } else {\n            player.autoSacrificeToggle = true;\n            el.textContent = \"Auto Runes: ON\"\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid green\"\n        }\n    } else if (player.autoSacrificeToggle && player.shopUpgrades.offeringAuto > 0.5) {\n        player.autoSacrifice = index;\n    }\n    for (let i = 1; i <= 5; i++) {\n        document.getElementById(\"rune\" + i).style.backgroundColor = player.autoSacrifice === i ? \"orange\" : \"#171717\";\n    }\n    calculateRuneLevels();\n}\n\nexport const toggleBuildingScreen = (input: BuildingSubtab) => {\n    G['buildingSubTab'] = input\n    const screen: Record<string, { screen: string, button: string, subtabNumber: number }> = {\n        \"coin\": {\n            screen: \"coinBuildings\",\n            button: \"switchToCoinBuilding\",\n            subtabNumber: 0\n        },\n        \"diamond\": {\n            screen: \"prestige\",\n            button: \"switchToDiamondBuilding\",\n            subtabNumber: 1\n        },\n        \"mythos\": {\n            screen: \"transcension\",\n            button: \"switchToMythosBuilding\",\n            subtabNumber: 2\n        },\n        \"particle\": {\n            screen: \"reincarnation\",\n            button: \"switchToParticleBuilding\",\n            subtabNumber: 3\n        },\n        \"tesseract\": {\n            screen: \"ascension\",\n            button: \"switchToTesseractBuilding\",\n            subtabNumber: 4\n        }\n    }\n    for (const key in screen) {\n        document.getElementById(screen[key].screen).style.display = \"none\";\n        document.getElementById(screen[key].button).style.backgroundColor = \"\";\n    }\n    document.getElementById(screen[G['buildingSubTab']].screen).style.display = \"flex\"\n    document.getElementById(screen[G['buildingSubTab']].button).style.backgroundColor = \"crimson\"\n    player.subtabNumber = screen[G['buildingSubTab']].subtabNumber\n}\n\nexport const toggleRuneScreen = (index: number) => {\n    const screens = ['runes', 'talismans', 'blessings', 'spirits'];\n    G['runescreen'] = screens[index - 1];\n\n    for (let i = 1; i <= 4; i++) {\n        const a = document.getElementById(\"toggleRuneSubTab\" + i);\n        const b = document.getElementById(\"runeContainer\" + i);\n        if (i === index) {\n            a.style.border = \"2px solid gold\"\n            a.style.backgroundColor = \"crimson\"\n            b.style.display = \"flex\";\n        } else {\n            a.style.border = \"2px solid silver\"\n            a.style.backgroundColor = \"\"\n            b.style.display = \"none\";\n        }\n    }\n    player.subtabNumber = index - 1\n}\n\nexport const toggleautofortify = () => {\n    const el = document.getElementById(\"toggleautofortify\");\n    if (player.autoFortifyToggle === false && player.researches[130] == 1) {\n        el.textContent = \"Auto Fortify: ON\"\n        el.style.border = \"2px solid green\"        \n    } else {\n        el.textContent = \"Auto Fortify: OFF\"\n        el.style.border = \"2px solid red\"\n    }\n    \n    player.autoFortifyToggle = !player.autoFortifyToggle;\n}\n\nexport const toggleautoenhance = () => {\n    const el = document.getElementById(\"toggleautoenhance\");\n    if (player.autoEnhanceToggle === false && player.researches[135] == 1) {\n        el.textContent = \"Auto Enhance: ON\"\n        el.style.border = \"2px solid green\"        \n    } else {\n        el.textContent = \"Auto Enhance: OFF\"\n        el.style.border = \"2px solid red\"\n    }\n\n    player.autoEnhanceToggle = !player.autoEnhanceToggle;\n}\n\nconst setActiveSettingScreen = async (subtab: string, clickedButton: HTMLButtonElement) => {\n    const subtabEl = document.getElementById(subtab);\n    if (subtabEl.classList.contains(\"subtabActive\")) {\n        return;\n    }\n\n    const switcherEl = clickedButton.parentNode;\n    switcherEl.querySelectorAll(\".buttonActive\").forEach(b => b.classList.remove(\"buttonActive\"));\n    clickedButton.classList.add(\"buttonActive\");\n\n    subtabEl.parentNode.querySelectorAll(\".subtabActive\").forEach(subtab => subtab.classList.remove(\"subtabActive\"));\n    subtabEl.classList.add(\"subtabActive\");\n\n    if (subtab === \"statisticsSubTab\") {\n        const refreshStats = function() {\n            if (G['currentTab'] !== \"settings\") {\n                clearInt(id);\n            }\n            loadStatisticsAccelerator();\n            loadStatisticsMultiplier();\n            loadStatisticsOfferingMultipliers();\n            loadStatisticsCubeMultipliers();\n            loadPowderMultiplier();\n            if (!subtabEl.classList.contains(\"subtabActive\"))\n                clearInt(id);\n        }\n\n        const id = interval(refreshStats, 1000)\n        refreshStats();\n    } else if (subtab === 'creditssubtab') {\n        const credits = document.getElementById('creditList');\n        const artists = document.getElementById('artistList');\n\n        if (credits.childElementCount > 0 || artists.childElementCount > 0)\n            return;\n        else if (!navigator.onLine)\n            return;\n\n        try {\n            const r = await fetch('https://api.github.com/repos/pseudo-corp/SynergismOfficial/contributors', {\n                headers: {\n                    'Accept': 'application/vnd.github.v3+json'\n                }\n            });\n            const j = await r.json();\n\n            for (const contributor of j) { \n                const div = document.createElement('div');\n                div.classList.add('credit');\n\n                const img = new Image(32, 32);\n                img.src = contributor.avatar_url;\n                img.alt = contributor.login;\n\n                const a = document.createElement('a');\n                a.href = `https://github.com/Pseudo-Corp/SynergismOfficial/commits?author=${contributor.login}`;\n                a.textContent = contributor.login;\n                a.target = '_blank';\n                a.rel = 'noopener noreferrer nofollow';\n                \n                div.appendChild(img);\n                div.appendChild(a);\n\n                credits.appendChild(div);\n            }\n        } catch (e) {\n            credits.appendChild(document.createTextNode(e.toString()));\n        }\n\n        try {\n            const r = await fetch('https://api.github.com/gists/01917ff476d25a141c5bad38340cd756', {\n                headers: {\n                    'Accept': 'application/vnd.github.v3+json'\n                }\n            });\n\n            const j = await r.json();\n            const f = JSON.parse(j.files['synergism_artists.json'].content);\n\n            for (const user of f) {\n                const p = document.createElement('p');\n                p.textContent = user;\n\n                artists.appendChild(p);\n            }\n        } catch (e) {\n            credits.appendChild(document.createTextNode(e.toString()));\n        }\n    }\n}\n\nexport const toggleShopConfirmation = () => {\n    const el = document.getElementById(\"toggleConfirmShop\")\n    el.textContent = G['shopConfirmation']\n        ? \"Shop Confirmations: OFF\"\n        : \"Shop Confirmations: ON\";\n\n    G['shopConfirmation'] = !G['shopConfirmation'];\n}\n\nexport const toggleAntMaxBuy = () => {\n    const el = document.getElementById(\"toggleAntMax\");\n    el.textContent = player.antMax \n        ? \"Buy Max: OFF\"\n        : \"Buy Max: ON\";\n\n    player.antMax = !player.antMax;\n}\n\nexport const toggleAntAutoSacrifice = (mode = 0) => {\n    if (mode === 0) {\n        const el = document.getElementById(\"toggleAutoSacrificeAnt\");\n        if (player.autoAntSacrifice) {\n            player.autoAntSacrifice = false;\n            el.textContent = \"Auto Sacrifice: OFF\"\n        } else {\n            player.autoAntSacrifice = true;\n            el.textContent = \"Auto Sacrifice: ON\"\n        }\n    } else if (mode === 1) {\n        const el = document.getElementById(\"autoSacrificeAntMode\");\n        if (player.autoAntSacrificeMode === 1 || player.autoAntSacrificeMode === 0) {\n            player.autoAntSacrificeMode = 2;\n            el.textContent = \"Mode: Real time\";\n        } else {\n            player.autoAntSacrificeMode = 1;\n            el.textContent = \"Mode: In-game time\";\n        }\n    }\n}\n\nexport const toggleMaxBuyCube = () => {\n    const el = document.getElementById(\"toggleCubeBuy\")\n    if (G['buyMaxCubeUpgrades']) {\n        G['buyMaxCubeUpgrades'] = false;\n        el.textContent = \"Upgrade: 1 Level wow\"\n    } else {\n        G['buyMaxCubeUpgrades'] = true;\n        el.textContent = \"Upgrade: MAX [if possible wow]\"\n    }\n}\n\nexport const toggleCubeSubTab = (i: number) => {\n    const numSubTabs = subTabsInMainTab(8).subTabList.length\n    for (let j = 1; j <= numSubTabs; j++) {\n        const cubeTab = document.getElementById(`cubeTab${j}`);\n        if (cubeTab.style.display === \"flex\" && j !== i) {\n            cubeTab.style.display = \"none\"\n        }\n        if (cubeTab.style.display === \"none\" && j === i) {\n            cubeTab.style.display = \"flex\"\n            player.subtabNumber = j - 1\n        }\n        document.getElementById(\"switchCubeSubTab\" + j).style.backgroundColor = i === j ? \"crimson\" : \"\"\n    }\n\n    visualUpdateCubes();\n}\n\nexport const updateAutoChallenge = (i: number) => {\n    switch (i) {\n        case 1: {\n            const t = parseFloat((document.getElementById('startAutoChallengeTimerInput') as HTMLInputElement).value) || 0;\n            player.autoChallengeTimer.start = Math.max(t, 0);\n            document.getElementById(\"startTimerValue\").textContent = format(player.autoChallengeTimer.start, 2, true) + \"s\";\n            return;\n        }\n        case 2: {\n            const u = parseFloat((document.getElementById('exitAutoChallengeTimerInput') as HTMLInputElement).value) || 0;\n            player.autoChallengeTimer.exit = Math.max(u, 0);\n            document.getElementById(\"exitTimerValue\").textContent = format(player.autoChallengeTimer.exit, 2, true) + \"s\";\n            return;\n        }\n        case 3: {\n            const v = parseFloat((document.getElementById('enterAutoChallengeTimerInput') as HTMLInputElement).value) || 0;\n            player.autoChallengeTimer.enter = Math.max(v, 0);\n            document.getElementById(\"enterTimerValue\").textContent = format(player.autoChallengeTimer.enter, 2, true) + \"s\";\n            return;\n        }\n    }\n}\n\nexport const toggleAutoChallengesIgnore = (i: number) => {\n    const el = document.getElementById(\"toggleAutoChallengeIgnore\");\n    if (player.autoChallengeToggles[i]) {\n        el.style.border = \"2px solid red\";\n        el.textContent = \"Automatically Run Chal.\" + i + \" [OFF]\"\n    } else {\n        el.style.border = \"2px solid green\";\n        el.textContent = \"Automatically Run Chal.\" + i + \" [ON]\"\n    }\n\n    player.autoChallengeToggles[i] = !player.autoChallengeToggles[i];\n}\n\nexport const toggleAutoChallengeRun = () => {\n    const el = document.getElementById('toggleAutoChallengeStart');\n    if (player.autoChallengeRunning) {\n        el.style.border = \"2px solid red\"\n        el.textContent = \"Auto Challenge Sweep [OFF]\"\n        player.autoChallengeIndex = 1;\n        G['autoChallengeTimerIncrement'] = 0;\n        toggleAutoChallengeModeText(\"OFF\")\n    } else {\n        el.style.border = \"2px solid gold\"\n        el.textContent = \"Auto Challenge Sweep [ON]\"\n        toggleAutoChallengeModeText(\"START\")\n    }\n\n    player.autoChallengeRunning = !player.autoChallengeRunning;\n}\n\nexport const toggleAutoChallengeModeText = (i: string) => {\n    const a = document.getElementById(\"autoChallengeType\");\n    a.textContent = \"MODE: \" + i\n}\n\nexport const toggleAutoAscend = () => {\n    const a = document.getElementById(\"ascensionAutoEnable\");\n    if (player.autoAscend) {\n        a.style.border = \"2px solid red\"\n        a.textContent = \"Auto Ascend [OFF]\";\n    } else {\n        a.style.border = \"2px solid green\"\n        a.textContent = \"Auto Ascend [ON]\";\n    }\n\n    player.autoAscend = !player.autoAscend;\n}\n\nexport const updateRuneBlessingBuyAmount = (i: number) => {\n    switch (i) {\n        case 1: {\n            const t = Math.floor(parseFloat((document.getElementById('buyRuneBlessingInput') as HTMLInputElement).value)) || 1;\n            player.runeBlessingBuyAmount = Math.max(t, 1);\n            document.getElementById('buyRuneBlessingToggleValue').textContent = format(player.runeBlessingBuyAmount, 0, true);\n            return;\n        }\n        case 2: {\n            const u = Math.floor(parseFloat((document.getElementById('buyRuneSpiritInput') as HTMLInputElement).value)) || 1;\n            player.runeSpiritBuyAmount = Math.max(u, 1);\n            document.getElementById('buyRuneSpiritToggleValue').textContent = format(player.runeSpiritBuyAmount, 0, true);\n            return;\n        }\n    }\n}\n\nexport const toggleAutoTesseracts = (i: number) => {\n    const el = document.getElementById('tesseractAutoToggle' + i);\n    if (player.autoTesseracts[i]) {\n        el.textContent = \"Auto [OFF]\"\n        el.style.border = \"2px solid red\";\n    } else {\n        el.textContent = \"Auto [ON]\"\n        el.style.border = \"2px solid green\";\n    }\n\n    player.autoTesseracts[i] = !player.autoTesseracts[i];\n}\n\nexport const toggleCorruptionLevel = (index: number, value: number) => {\n    const current = player.prototypeCorruptions[index]\n    const maxCorruption = 13\n    if (value > 0 && current < maxCorruption && 0 < index && index <= 9) {\n        player.prototypeCorruptions[index] += Math.min(maxCorruption - current, value)\n    }\n    if (value < 0 && current > 0 && 0 < index && index <= 9) {\n        player.prototypeCorruptions[index] -= Math.min(current, -value)\n    }\n    player.prototypeCorruptions[index] = Math.min(maxCorruption, Math.max(0, player.prototypeCorruptions[index]))\n    if (value === 999 && player.currentChallenge.ascension !== 15) {\n        for (let i = 0; i <= 9; i++) {\n            player.usedCorruptions[i] = 0;\n            player.prototypeCorruptions[i] = 0;\n            if (i > 0)\n                corruptionDisplay(i)\n        }\n        \n        corruptionDisplay(G['corruptionTrigger'])\n        document.getElementById(\"corruptionCleanseConfirm\").style.visibility = \"hidden\";\n\n        if (player.currentChallenge.ascension === 15) {\n            resetCheck('ascensionChallenge', false, true)\n        }\n    }\n    corruptionDisplay(index)\n    corruptionLoadoutTableUpdate();\n}\n\nexport const toggleCorruptionLoadoutsStats = (stats: boolean) => {\n    player.corruptionShowStats = stats;\n    showCorruptionStatsLoadouts();\n}\n\nexport const toggleAscStatPerSecond = (id: number) => {\n    const el = document.getElementById(`unit${id}`);\n    if (!el) {\n        console.log(id, 'platonic needs to fix');\n        return;\n    }\n\n    el.textContent = player.ascStatToggles[id] ? '/s' : '';\n    player.ascStatToggles[id] = !player.ascStatToggles[id];\n}\n", "import Decimal from \"break_infinity.js\";\nimport { player, format, resetCheck } from \"./Synergism\";\nimport { toggleAutoChallengeRun, toggleAutoChallengeModeText, toggleChallenges } from \"./Toggles\";\nimport { Globals as G } from './Variables';\nimport { calculateRuneLevels } from \"./Calculate\";\nimport { hepteractEffective } from \"./Hepteracts\";\nimport { productContents } from \"./Utility\";\n\nexport const getMaxChallenges = (i: number) => {\n    let maxChallenge = 0;\n    //Transcension Challenges\n    if (i <= 5) {\n        //Start with base 25 max completions\n        maxChallenge = 25;\n        //Check Research 5x5 ('Infinite' T. Challenges)\n        if (player.researches[105] > 0) {\n            return 9001\n        }\n        //Max T. Challenge depends on researches 3x16 to 3x20\n        maxChallenge += 5 * player.researches[65 + i]\n        return maxChallenge\n    }\n    //Reincarnation Challenges\n    if (i <= 10 && i > 5) {\n        //Start with base of 40 max completions\n        maxChallenge = 40;\n        //Cube Upgrade 2x9: +4/level\n        maxChallenge += 4 * player.cubeUpgrades[29];\n        //Shop Upgrade \"Challenge Extension\": +2/level\n        maxChallenge += 2 * player.shopUpgrades.challengeExtension;\n        //Platonic Upgrade 5 (ALPHA): +10\n        if (player.platonicUpgrades[5] > 0) {\n            maxChallenge += 10;\n        }\n        //Platonic Upgrade 10 (BETA): +10\n        if (player.platonicUpgrades[10] > 0) {\n            maxChallenge += 10;\n        }\n        //Platonic Upgrade 15 (OMEGA): +30\n        if (player.platonicUpgrades[15] > 0) {\n            maxChallenge += 30;\n        }\n        return maxChallenge\n    }\n    //Ascension Challenge\n    if (i <= 15 && i > 10) {\n        //Challenge 15 has no formal cap, so return 9001.\n        if (i === 15) {\n            return 9001\n        }\n        //Start with base of 30 max completions\n        maxChallenge = 30;\n        //Platonic Upgrade 5 (ALPHA): +5\n        if (player.platonicUpgrades[5] > 0) {\n            maxChallenge += 5;\n        }\n        //Platonic Upgrade 10 (BETA): +5\n        if (player.platonicUpgrades[10] > 0) {\n            maxChallenge += 5;\n        }\n        //Platonic Upgrade 15 (OMEGA): +20\n        if (player.platonicUpgrades[15] > 0) {\n            maxChallenge += 20;\n        }\n        return maxChallenge\n    }\n}\n\nexport const challengeDisplay = (i: number, changefocus?: boolean) => {\n    changefocus = (changefocus === null || changefocus === undefined) ? true : changefocus;\n    let quarksMultiplier = 1;\n\n    if (changefocus) {\n        G['challengefocus'] = i;\n        document.getElementById(\"oneChallengeDetails\").style.display = \"flex\";\n        document.getElementById('startChallenge').style.display = 'block';\n        document.getElementById('retryChallenge').style.display = 'block';\n        G['triggerChallenge'] = i\n    }\n\n    const maxChallenges = getMaxChallenges(i);\n    if (i <= 5 && changefocus){\n        if(player.challengecompletions[i] >= 100){\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 100! Effective completion count: \" + CalcECC('transcend',player.challengecompletions[i])\n        }\n        else{\n            document.getElementById('completionSoftcap').textContent = \"\"\n        }\n    }\n    \n\n    if (i > 5 && i <= 10) {\n        quarksMultiplier = 10;\n        if(player.challengecompletions[i] >= 25 && changefocus){\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 25! Effective completion count: \" + format(CalcECC('reincarnation',player.challengecompletions[i]),2,true)\n        }\n        else{\n            document.getElementById('completionSoftcap').textContent = \"\"    \n        }\n    }\n    if (i > 10) {\n        if(player.challengecompletions[i] >= 10){\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 10! Effective completion count: \" + format(CalcECC('ascension',player.challengecompletions[i]),2,true)\n        }\n        else{\n            document.getElementById('completionSoftcap').textContent = \"\"\n        }\n    }\n    let descriptor = \"\"\n    const a = document.getElementById(\"challengeName\");\n    const b = document.getElementById(\"challengeFlavor\");\n    const c = document.getElementById(\"challengeRestrictions\");\n    const d = document.getElementById(\"challengeGoal\");\n    const e = document.getElementById(\"challengePer1\").childNodes[0];\n    const f = document.getElementById(\"challengePer2\").childNodes[0];\n    const g = document.getElementById(\"challengePer3\").childNodes[0];\n    const h = document.getElementById(\"challengeFirst1\");\n    const j = document.getElementById(\"challengeQuarkBonus\");\n    const k = document.getElementById(\"startChallenge\");\n    const l = document.getElementById(\"challengeCurrent1\");\n    const m = document.getElementById(\"challengeCurrent2\");\n    const n = document.getElementById(\"challengeCurrent3\");\n\n\n    if (i === 1 && G['challengefocus'] === 1) {\n        a.textContent = \"No Multipliers Challenge || \" + player.challengecompletions[1] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"Multipliers make the game a little too fast. Let's take them out!\"\n        c.textContent = \"Transcend and reach the goal except Multipliers do nothing but act like Accelerators, which are nerfed by 50%!\"\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\"\n        e.textContent = \"+10 base Multiplier Boosts! [+0.05 to power!] Current: \"\n        f.textContent = \"+10% total Multiplier Boosts! Current: \"\n        g.textContent = \"+0.04 base Rune exp per Offering! Current: \"\n        h.textContent = \"+1 free Multiplier! +1 Base EXP per offering used!\"\n        k.textContent = \"Start [No Multipliers]\"\n        l.textContent = \"+\" + format(10 * CalcECC('transcend', player.challengecompletions[1])) + \" Boosts\"\n        m.textContent = \"+\" + format(10 * CalcECC('transcend', player.challengecompletions[1])) + \"% more Boosts\"\n        n.textContent = \"+\" + format(0.04 * CalcECC('transcend', player.challengecompletions[1]), 2, true) + \" Rune EXP [Highest Completion]\"\n    }\n    if (i === 2 && G['challengefocus'] === 2) {\n        a.textContent = \"No Accelerators Challenge || \" + player.challengecompletions[2] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"Who needs accelerators? They do basically nothing now.\"\n        c.textContent = \"Transcend and reach the goal except Accelerators do nothing! Multipliers are nerfed a bit as well.\"\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\"\n        e.textContent = \"+5 Free Accelerators! Current: \"\n        f.textContent = \"+5% Accelerator Boost Power! Current: \"\n        g.textContent = \"+0.25% Accelerator Power! Current: \"\n        h.textContent = \"+1 base offering for Prestige and Transcensions.\"\n        k.textContent = \"Start [No Accelerators]\"\n        l.textContent = \"+\" + format(5 * CalcECC('transcend', player.challengecompletions[2])) + \" Accelerators\"\n        m.textContent = \"+\" + format(5 * CalcECC('transcend', player.challengecompletions[2])) + \"% A.Boost Power\"\n        n.textContent = \"+\" + format(0.25 * CalcECC('transcend', player.challengecompletions[2]), 2, true) + \"% Accelerator Power\"\n    }\n    if (i === 3 && G['challengefocus'] === 3) {\n        a.textContent = \"No Shards Challenge || \" + player.challengecompletions[3] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"Alright, now you're thinking, how else can I make the game harder?\"\n        c.textContent = \"Transcend and reach the goal except you do not produce Crystals or Mythos Shards.\"\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\"\n        e.textContent = \"Crystal --> Coin conversion exponent +0.04! Current: \"\n        f.textContent = \"+0.5% to Grandmaster production per Mythos producer bought. Current: \"\n        g.textContent = \"When you use a rune, all other runes gain +0.01 EXP. Current: \"\n        h.textContent = \"Gain an offering automatically every 2 seconds!\"\n        k.textContent = \"Start [No Shards]\"\n        l.textContent = \"Exponent +\" + format(0.04 * player.challengecompletions[3], 2, true)\n        m.textContent = \"+\" + format(0.5 * CalcECC('transcend', player.challengecompletions[3]), 2, true) + \"%\"\n        n.textContent = \"+\" + format(0.01 * CalcECC('transcend', player.challengecompletions[3]), 2, true) + \" EXP\"\n    }\n    if (i === 4 && G['challengefocus'] === 4) {\n        a.textContent = \"Cost+ Challenge || \" + player.challengecompletions[4] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"You're getting rich now, but inflation hasn't happened yet? I don't think so!\"\n        c.textContent = \"Transcend and reach the goal except Coin/Crystal producers, Accelerators and Multipliers cost more. [Gets harder each time!]\"\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\"\n        e.textContent = \"Accelerator Cost scale slows down by +5 purchases. Current: \"\n        f.textContent = \"Multiplier Cost scale slows down by +2 purchases. Current: \"\n        g.textContent = \"Building Cost Delay +0.5%. Current: \"\n        h.textContent = \"None\"\n        k.textContent = \"Start [Cost+]\"\n        l.textContent = \"Accelerator Delay +\" + format(5 * CalcECC('transcend', player.challengecompletions[4]))\n        m.textContent = \"Multiplier Delay +\" + format(2 * CalcECC('transcend', player.challengecompletions[4]))\n        n.textContent = \"Building Cost Delay +\" + format(0.5 * CalcECC('transcend', player.challengecompletions[4]), 2, true) + \"%\"\n    }\n    if (i === 5 && G['challengefocus'] === 5) {\n        a.textContent = \"Reduced Diamonds Challenge || \" + player.challengecompletions[5] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"You ever wonder how you get so many diamonds?\"\n        c.textContent = \"Transcend and reach the goal except you gain far fewer Diamonds from all sources [Gets harder each time!]\"\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\"\n        e.textContent = \"+0.01 Coin --> Diamond conversion exponent on Prestige! Current: \"\n        f.textContent = \"Multiply Crystal production by 10! Current: \"\n        g.textContent = \"\"\n        h.textContent = \"None\"\n        k.textContent = \"Start [Reduced Diamonds]\"\n        l.textContent = \"Exponent = ^\" + format(0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100, 2, true)\n        m.textContent = \"Crystal production x\" + format(Math.pow(10, CalcECC('transcend', player.challengecompletions[5])))\n        n.textContent = \"\"\n    }\n    if (i === 6 && G['challengefocus'] === 6) {\n        a.textContent = \"Higher Tax Challenge || \" + player.challengecompletions[6] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"The tax man caught wind that you reincarnated recently...\"\n        c.textContent = \"Reincarnate and reach the goal except tax has a lower cap, and Coin production is divided by 1e250.\"\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 6)) + \" Mythos Shards in challenge.\"\n        e.textContent = \"-3.5% Taxes [Multiplicative]! Current: \"\n        f.textContent = \"Thrift Rune Exp +10%! Current: \"\n        g.textContent = \"Prestige Offerings +2%! Current: \"\n        h.textContent = \"-7.5% Taxes!\"\n        k.textContent = \"Start <Higher Tax>\"\n        l.textContent = \"Tax multiplier x\" + format(Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6])), 3, true)\n        m.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[6])) + \"%\"\n        n.textContent = \"+\" + format(2 * CalcECC('reincarnation', player.challengecompletions[6])) + \"% Prestige-based Offerings\"\n    }\n    if (i === 7 && G['challengefocus'] === 7) {\n        a.textContent = \"No Multipliers/Accelerators Challenge || \" + player.challengecompletions[7] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"You're really going to hate this one.\"\n        c.textContent = \"Reincarnate and reach the goal except Accelerators and Multipliers do nothing. Coin Production is divided by 1e1,250.\"\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i],7)) + \" Mythos Shards in challenge.\"\n        e.textContent = \"Accelerator/Multiplier boost power exponent +0.04! Current: \"\n        f.textContent = \"Speed Rune Exp +10%! Current: \"\n        g.textContent = \"Duplication Rune Exp +10%! Current: \"\n        h.textContent = \"Multiplier Boost power +25%! The first Discord-Booster Global Diamond Upgrade.\"\n        k.textContent = \"Start <No Multipliers/Accelerators>\"\n        l.textContent = \"Exponent = ^\" + format(1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7]), 2, true)\n        m.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[7])) + \"%\"\n        n.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[7])) + \"%\"\n    }\n    if (i === 8 && G['challengefocus'] === 8) {\n        a.textContent = \"Cost++ Challenge || \" + player.challengecompletions[8] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"You thought you could outgrow inflation by Reincarnating?\"\n        c.textContent = \"Reincarnate and reach the goal except Cost Scaling for producers and Accelerators/Multipliers scale much, much faster.\"\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i],8)) + \" Mythos Shards in challenge.\"\n        e.textContent = \"Base Building Power +0.25! Current: \"\n        f.textContent = \"Prism Rune Exp +20%! Current: \"\n        g.textContent = \"Transcend Offerings +4%! Current: \"\n        h.textContent = \"Unlock the Anthill feature! Includes 20 new Researches. A Global Diamond Upgrade.\"\n        k.textContent = \"Start <Cost++>\"\n        l.textContent = \"+\" + format(0.25 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true)\n        m.textContent = \"+\" + format(20 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true) + \"% EXP\"\n        n.textContent = \"+\" + format(4 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true) + \"% Transcend-based offerings\"\n    }\n    if (i === 9 && G['challengefocus'] === 9) {\n        a.textContent = \"No Runes Challenge || \" + player.challengecompletions[9] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"You'll never complain about Prism being bad again.\"\n        c.textContent = \"Reincarnate and reach the goal except runes always have level 1 effects. All coin production is divided by e2,000,000.\"\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 9)) + \" Coins in challenge.\"\n        e.textContent = \"+1 free Ant level! Current: \"\n        f.textContent = \"+10% Ant speed [Multiplicative!] Current: \"\n        g.textContent = \"SI Rune Exp +20%! Current: \"\n        h.textContent = \"Unlock the Talismans feature! [In Runes tab]. A Global Diamond Upgrade.\"\n        k.textContent = \"Start <No Runes>\"\n        l.textContent = \"+\" + format(CalcECC('reincarnation', player.challengecompletions[9])) + \" free levels\"\n        m.textContent = \"x\" + format(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])), 2, true) + \" Ant Speed\"\n        n.textContent = \"+\" + format(20 * CalcECC('reincarnation', player.challengecompletions[9]), 2, true) + \"% EXP\"\n    }\n    if (i === 10 && G['challengefocus'] === 10) {\n        a.textContent = \"Sadistic Challenge I || \" + player.challengecompletions[10] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"I'm sorry for what I've unleashed onto the world.\"\n        c.textContent = \"Reincarnate and reach the goal except run the first five challenges AT THE SAME TIME! Coin Production /e12,500,000.\"\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 10)) + \" Coins in challenge.\"\n        e.textContent = \"+100 base ELO for sacrificing ants! Current: \"\n        f.textContent = \"+2% Ant Sacrifice Reward! Current: \"\n        g.textContent = \"Reincarnation Offerings +10%! Current: \"\n        h.textContent = \"Unlock the Ascension Reset Tier!\"\n        k.textContent = \"Start <Sadistic I>\"\n        l.textContent = \"+\" + format(100 * CalcECC('reincarnation', player.challengecompletions[10])) + \" Ant ELO\"\n        m.textContent = \"+\" + format(2 * CalcECC('reincarnation', player.challengecompletions[10])) + \"% Ant Sacrifice reward\"\n        n.textContent = \"+\" + format(10 * CalcECC('reincarnation', player.challengecompletions[10]), 2, true) + \"% Reincarnate-based offerings\"\n    }\n    if (i === 11 && G['challengefocus'] === 11) {\n        a.textContent = \"Reduced Ants Challenge || \" + player.challengecompletions[11] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"The great Ant War of '21 wiped off all of the skilled ants.\"\n        c.textContent = \"Ascend and reach the goal but only get free ant upgrades and from Challenge8/9 completions. FOR ASCENSION CHALLENGES YOU MUST CLEAR CHALLENGE 10 TO ATTEMPT THEM.\"\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\"\n        e.textContent = \"+12 free Ant Levels! Current: \"\n        f.textContent = \"Ant Speed x(1e5)^completions! Current: \"\n        g.textContent = \"+80 to Rune Caps! Current: \"\n        h.textContent = \"Unlock 15 Researches, and unlock the ability to open Tesseracts!\"\n        k.textContent = \"Start <[(Reduced Ants)]>\"\n        l.textContent = \"+\" + format(12 * CalcECC('ascension', player.challengecompletions[11])) + \" free ant levels\"\n        m.textContent = \"Ant Speed x\" + format(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])))\n        n.textContent = \"+\" + format(80 * CalcECC('ascension', player.challengecompletions[11])) + \" to Rune Caps\"\n    }\n    if (i === 12 && G['challengefocus'] === 12) {\n        a.textContent = \"No Reincarnation Challenge || \" + player.challengecompletions[12] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"For some reason, you just can't do it.\"\n        c.textContent = \"Ascend and reach the goal but you do not gain Particles and you cannot Reincarnate at all! Ant production ^0.5.\"\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\"\n        e.textContent = \"+50% Obtainium! Current: \"\n        f.textContent = \"+12% Offerings! Current: \"\n        g.textContent = \"+1 Cube Tribute per opening! Current: \"\n        h.textContent = \"Unlock 15 Researches, and unlock the mystical Spirit Power! Find these in the Runes tab.\"\n        k.textContent = \"Start <[(No Reincarnation)]>\"\n        l.textContent = \"+\" + format(50 * CalcECC('ascension', player.challengecompletions[12])) + \"% Obtainium\"\n        m.textContent = \"+\" + format(12 * CalcECC('ascension', player.challengecompletions[12])) + \"% Offerings\"\n        n.textContent = \"+\" + format(CalcECC('ascension', player.challengecompletions[12])) + \" additional Cube Tributes\"\n    }\n    if (i === 13 && G['challengefocus'] === 13) {\n        a.textContent = \"Tax+++ Challenge || \" + player.challengecompletions[13] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"Good luck with the IRS, buddy.\"\n        c.textContent = \"Ascend and reach the goal, but taxes are much higher and grow with challenge completions. Ant production ^0.23\"\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\"\n        e.textContent = \"Taxes -3.33%! Multiplicative! Current: \"\n        f.textContent = \"+6 maximum to Talisman Level Cap! Current: \"\n        g.textContent = \"+3% Spirit Power effectiveness! Current: \"\n        h.textContent = \"Unlock 15 Researches, and unlock the power of the Hypercube!\"\n        k.textContent = \"Start <[(Tax+++)]>\"\n        l.textContent = \"-\" + format(100 - 100 * Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13])),3,true) + \"% Corruption Tax\"\n        m.textContent = \"+\" + format(6 * CalcECC('ascension', player.challengecompletions[13])) + \" Talisman Level Cap\"\n        n.textContent = \"+\" + format(3 * CalcECC('ascension', player.challengecompletions[13])) + \"% Effectiveness\"\n    }\n    if (i === 14 && G['challengefocus'] === 14) {\n        a.textContent = \"No Research Challenge || \" + player.challengecompletions[14] + \"/\" + format(maxChallenges) + \" Completions\"\n        b.textContent = \"The dimension that never progressed past the dark ages. Many fear to even step foot.\"\n        c.textContent = \"Ascend and reach the goal but you do not gain Obtainium nor are any researches purchasable. Ant production ^0.2.\"\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\"\n        e.textContent = \"+50% stronger effect on researches 1x1 through 1x5. Current: \"\n        f.textContent = \"+1 research purchased per roomba tick! Current: \"\n        g.textContent = \"+200 to Rune Caps! Current: \"\n        h.textContent = \"Unlock 15 Researches, and a way to coalesce your power into the Singularity.\"\n        k.textContent = \"Start <[(No Research)]>\"\n        l.textContent = \"+\" + format(50 * CalcECC('ascension', player.challengecompletions[14])) + \"% Power\"\n        m.textContent = \"+\" + format(1 * player.challengecompletions[14]) + \" per Tick\"\n        n.textContent = \"+\" + format(200 * CalcECC('ascension', player.challengecompletions[14])) + \" to Rune Caps\"\n    }\n    if (i === 15 && G['challengefocus'] === 15) {\n        a.textContent = \"SADISTIC CHALLENGE II || \" + player.challengecompletions[15] + \"/\" + format(maxChallenges) +  \" Completions\"\n        b.textContent = \"The worst sin a man can do is making others suffer.\"\n        c.textContent = \"Ascend and reach the goal but you're FULLY corrupt and must stay that way.\"\n        d.textContent = \"Goal: \" + format(challengeRequirement(i, player.challengecompletions[i], 15)) + \" Coins, but get bonuses based on your best attempt.\"\n        e.textContent = \"You have no idea \"\n        f.textContent = \"what you have just done \"\n        g.textContent = \"the ant god shakes their mighty head \"\n        h.textContent = \"Enter the singularity.\"\n        k.textContent = \"Start <[(Sadistic Challenge II)]>\"\n        l.textContent = \"\"\n        m.textContent = \"\"\n        n.textContent = \"\"\n    }\n    const scoreArray1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300]\n    const scoreArray2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450]\n    const scoreArray3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750];\n    let scoreDisplay = 0;\n    if(i <= 5){\n        if(player.highestchallengecompletions[i] >= 750){scoreDisplay = scoreArray3[i]}\n        else if(player.highestchallengecompletions[i] >= 75){scoreDisplay = scoreArray2[i]}\n        else{scoreDisplay = scoreArray1[i]}\n    }\n    if(i > 5 && i <= 10){\n        if(player.highestchallengecompletions[i] >= 60){scoreDisplay = scoreArray3[i]}\n        else if(player.highestchallengecompletions[i] >= 25){scoreDisplay = scoreArray2[i]}\n        else{scoreDisplay = scoreArray1[i]}\n    }\n    if (changefocus) {\n        j.textContent = \"\"\n    }\n    if (player.ascensionCount === 0) {\n        descriptor = \"Quarks\";\n        j.style.color = \"cyan\"\n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount < 1) {\n        j.textContent = \"Gain \" + Math.floor(quarksMultiplier * player.highestchallengecompletions[i] / 10 + 1 + player.cubeUpgrades[1] + player.cubeUpgrades[11] + player.cubeUpgrades[21] + player.cubeUpgrades[31] + player.cubeUpgrades[41]) + \" \" + descriptor + \" for completing this challenge [First Time Bonus]!\"\n    }\n    if(player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount >= 1){\n        j.textContent = \"Completing the challenge adds \" + ((i > 5) ? 2 : 1) + \" to Ascension Bank and increase base Score by \" + scoreDisplay + \".\" \n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < 10 && i > 10) {\n        j.textContent = \"Gain 1 Wow! HYPERCUBE for completing this challenge (First Time Bonus)\"\n    }\n\n    (i <= 10 && player.researches[150] > 0) ?\n        (document.getElementById(\"toggleAutoChallengeIgnore\").style.display = \"block\", document.getElementById('toggleAutoChallengeIgnore').style.border = \"2px solid green\") :\n        document.getElementById(\"toggleAutoChallengeIgnore\").style.display = \"none\";\n\n    let constructor = \"ON\"\n    if (!player.autoChallengeToggles[i]) {\n        constructor = \"OFF\";\n        document.getElementById('toggleAutoChallengeIgnore').style.border = \"2px solid red\"\n    }\n    document.getElementById(\"toggleAutoChallengeIgnore\").textContent = \"Automatically Run Chal.\" + i + \" [\" + constructor + \"]\"\n\n    const ella = document.getElementById(\"toggleAutoChallengeStart\");\n    (player.autoChallengeRunning) ?\n        (ella.textContent = \"Auto Challenge Sweep [ON]\", ella.style.border = \"2px solid gold\") :\n        (ella.textContent = \"Auto Challenge Sweep [OFF]\", ella.style.border = \"2px solid red\");\n}\n\nexport const getChallengeConditions = (i?: number) => {\n    if (player.currentChallenge.reincarnation === 9) {\n        G['rune1level'] = 1;\n        G['rune2level'] = 1;\n        G['rune3level'] = 1;\n        G['rune4level'] = 1;\n        G['rune5level'] = 1;\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0]\n    }\n    G['prestigePointGain'] = new Decimal('0')\n    if (i >= 6){\n        G['transcendPointGain'] = new Decimal('0')\n    }\n    if (i >= 11){\n        G['reincarnationPointGain'] = new Decimal('0')\n    }\n    calculateRuneLevels();\n}\n\nexport const toggleRetryChallenges = () => {\n    document.getElementById(\"retryChallenge\").textContent = player.retrychallenges\n        ? \"Retry Challenges: OFF\"\n        : \"Retry Challenges: ON\";\n\n    player.retrychallenges = !player.retrychallenges;\n}\n\nexport const highestChallengeRewards = (chalNum: number, highestValue: number) => {\n    let multiplier = 1 / 10\n    if (chalNum >= 6) {\n        multiplier = 1;\n    }\n    if (player.ascensionCount === 0) {\n        player.worlds.add(1 + Math.floor(highestValue * multiplier) * 100 / 100)\n    }\n}\n\n//Works to mitigate the difficulty of calculating challenge multipliers when considering softcapping\nexport const calculateChallengeRequirementMultiplier = (type: string, completions: number, special = 0) => {\n    let requirementMultiplier = Math.max(\n        1, \n        G['hyperchallengedMultiplier'][player.usedCorruptions[4]] / (1 + player.platonicUpgrades[8] / 2.5)\n    );\n    if (special === 15) {\n        //Normalize back to 1 if looking at challenge 15 in particular.\n        requirementMultiplier = 1;\n    }\n    switch (type) {\n        case \"transcend\":\n            requirementMultiplier *= G['challenge15Rewards'].transcendChallengeReduction;\n            \n            (completions >= 75) ?\n                requirementMultiplier *= Math.pow(1 + completions, 12) / Math.pow(75, 8) :\n                requirementMultiplier *= Math.pow(1 + completions, 2);\n\n            if (completions >= 1000) {\n                requirementMultiplier *= 10 * Math.pow(completions / 1000, 3)\n            }\n            if (completions >= 9000) {\n                requirementMultiplier *= 1337\n            }\n            return (requirementMultiplier)\n        case \"reincarnation\":\n            if (completions >= 100 && (special === 9 || special === 10)) {\n                requirementMultiplier *= Math.pow(1.05, (completions - 100) * (1 + (completions - 100) / 20))\n            }\n            if (completions >= 90) {\n                if (special === 6)\n                    requirementMultiplier *= 100\n                else if (special == 7)\n                    requirementMultiplier *= 50\n                else if (special == 8)\n                    requirementMultiplier *= 10\n                else\n                    requirementMultiplier *= 4\n            }\n            if (completions >= 80) {\n                if (special === 6)\n                    requirementMultiplier *= 50\n                else if (special === 7)\n                    requirementMultiplier *= 20\n                else if (special === 8)\n                    requirementMultiplier *= 4\n                else\n                    requirementMultiplier *= 2\n            }\n            if (completions >= 70){\n                if(special === 6) /*Multiplier is reduced significantly for challenges requiring mythos shards*/\n                    requirementMultiplier *= 20\n                else if(special === 7)\n                    requirementMultiplier *= 10\n                else if(special === 8)\n                    requirementMultiplier *= 2\n                else\n                    requirementMultiplier *= 1\n            }\n            if (completions >= 60){\n                if (special === 9 || special === 10)\n                    requirementMultiplier *= Math.pow(1000, (completions - 60) * (1 - 0.01 * player.shopUpgrades.challengeTome) / 10)\n            }\n            if (completions >= 25){\n                requirementMultiplier *= Math.pow(1 + completions, 5) / 625\n            }\n            if (completions < 25){\n                requirementMultiplier *= Math.min(Math.pow(1 + completions, 2), Math.pow(1.3797, completions));\n            }\n            requirementMultiplier *= G['challenge15Rewards'].reincarnationChallengeReduction\n            return requirementMultiplier\n        case \"ascension\":\n            if (special !== 15) {\n                (completions >= 10) ?\n                    requirementMultiplier *= (2 * (1 + completions) - 10) :\n                    requirementMultiplier *= (1 + completions);\n            }\n            else {\n                requirementMultiplier *= Math.pow(1.10, completions);\n            }\n            return (requirementMultiplier)\n    }\n}\n\n/**\n * Works to mitigate the difficulty of calculating challenge reward multipliers when considering softcapping\n */\nexport const CalcECC = (type: 'transcend' | 'reincarnation' | 'ascension', completions: number) => { // ECC stands for \"Effective Challenge Completions\"\n    let effective = 0;\n    switch (type) {\n        case \"transcend\":\n            effective += Math.min(100, completions);\n            effective += 1 / 20 * (Math.min(1000, Math.max(100, completions)) - 100);\n            effective += 1 / 100 * (Math.max(1000, completions) - 1000)\n            return (effective);\n        case \"reincarnation\":\n            effective += Math.min(25, completions);\n            effective += 1 / 2 * (Math.min(75, Math.max(25, completions)) - 25);\n            effective += 1 / 10 * (Math.max(75, completions) - 75)\n            return (effective);\n        case \"ascension\":\n            effective += Math.min(10, completions);\n            effective += 1 / 2 * (Math.max(10, completions) - 10);\n            return (effective);\n    }\n}\n\nexport const challengeRequirement = (challenge: number, completion: number, special = 0) => {\n    const base = G['challengeBaseRequirements'][challenge-1];\n    if (challenge <= 5) {\n        return Decimal.pow(10, base * calculateChallengeRequirementMultiplier(\"transcend\", completion, special))\n    } else if (challenge <= 10) {\n        let c10Reduction = 0;\n        if (challenge === 10) {\n            c10Reduction = (1e8 * (player.researches[140] + player.researches[155] + player.researches[170] + player.researches[185]) + 2e7 * player.shopUpgrades.challengeTome)\n        }\n        return Decimal.pow(10, (base - c10Reduction) * calculateChallengeRequirementMultiplier('reincarnation', completion, special))\n    } else if (challenge <= 14) {\n        return calculateChallengeRequirementMultiplier(\"ascension\", completion, special)\n    } else if (challenge === 15) {\n        return Decimal.pow(10, 1 * Math.pow(10, 24) * calculateChallengeRequirementMultiplier(\"ascension\", completion, special))\n    }\n}\n\n/**\n * Function that handles the autochallenge feature.\n * Currently includes ability to enter a challenge, leave a challenge\n * and start a challenge loop with specified challenges from index 1 to 10.\n * @param dt \n * @returns none\n */\nexport const runChallengeSweep = (dt: number) => {\n    // Do not run if any of these conditions hold\n    if (\n        player.researches[150] === 0 || // Research 6x25 is 0\n        !player.autoChallengeRunning // Auto challenge is toggled off\n    ) { return }\n    \n    // Increment auto challenge timer\n        G['autoChallengeTimerIncrement'] += dt;\n\n    // Determine if you're in a reincarnation or transcension challenge\n    const challengeType = player.currentChallenge.reincarnation !== 0 ? 'reincarnation' : 'transcension';\n    \n    // Determine what Action you can take with the current state of the savefile\n    let action = 'none';\n    if (player.currentChallenge.reincarnation !== 0 ||\n        player.currentChallenge.transcension !== 0) {\n            // If you are in a challenge, you'd only want the automation to exit the challenge\n            action = 'exit';\n        }\n    else if (player.autoChallengeIndex === 1) {\n        // If the index is set to 1, then you are at the start of a loop\n        action = 'start';\n    }\n    else {\n        // If neither of the above are true, automation will want to enter a challenge\n        action = 'enter';\n    }\n\n\n    // Action: Exit challenge\n    if (G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.exit && action === 'exit') {\n        // Increment our challenge index for when we enter (or start) next challenge\n        player.autoChallengeIndex += 1;\n\n        // Reset our autochallenge timer\n        G['autoChallengeTimerIncrement'] = 0;\n\n        // The limit on challenges is 10, so above 10 indicates we are going to reset our loop\n        if (player.autoChallengeIndex > 10) { \n            player.autoChallengeIndex = 1; \n            toggleAutoChallengeModeText(\"START\");\n        }\n        \n        // Reset based on challenge type\n        if (challengeType === 'transcension') {\n            resetCheck('challenge', undefined, true);\n        }\n        if (challengeType === 'reincarnation') {\n            resetCheck('reincarnationchallenge', undefined, true);\n        }\n\n        // Sets Mode to \"ENTER\" as displayed in the challenge tab\n        toggleAutoChallengeModeText(\"ENTER\");\n        return\n    }\n\n    // Action: Start a challenge loop.\n    if (G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.start && action === 'start') {\n\n        // Reset our autochallenge timer\n        G['autoChallengeTimerIncrement'] = 0;\n\n        // This calculates which challenge this algorithm will run first, based on\n        // the first challenge which has automation toggled ON\n        let startChallenge = 1;\n        for (const item of player.autoChallengeToggles.slice(1,11)) { //Why does this slice at (1,11)? because Platonic\n                                                                      //is supremely moronic. -Platonic\n            if (!item) startChallenge++;\n            else break;\n        }\n    \n        /* If startChallenge equals 11, every challenge is set to not run\n           In this case, we do not need this to run and will terminate\n           Auto challenge.*/\n        if (startChallenge == 11) {\n            toggleAutoChallengeRun();\n            return\n        }\n\n        // Set our index to calculated starting challenge and run the challenge\n        player.autoChallengeIndex = startChallenge;\n        toggleChallenges(player.autoChallengeIndex, true);\n\n        // Sets Mode to \"EXIT\" as displayed in the challenge tab\n        toggleAutoChallengeModeText(\"EXIT\");\n        return\n    }\n\n    // Action: Enter a challenge (not inside one)\n    if (G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.enter && action === 'enter') {\n\n        // Reset our autochallenge timer\n        G['autoChallengeTimerIncrement'] = 0;\n\n        /* Calculate the smallest challenge index we want to enter.\n           Our minimum is the current index, but if that challenge is fully completed\n           or toggled off we shouldn't run it, so we increment upwards in these cases. */\n        let startChallenge = player.autoChallengeIndex;\n        for (let index = startChallenge; index <= 10; index++) {\n            if (!player.autoChallengeToggles[index] ||\n                 player.challengecompletions[index] === getMaxChallenges(index))\n                 startChallenge += 1;\n            else break;\n        }\n\n        /* If the above algorithm sets the index above 10, the loop is complete\n           and thus do not need to enter more challenges. This sets our index to 1\n           so in the next iteration it knows we want to start a loop. */\n        if (startChallenge > 10) {\n            player.autoChallengeIndex = 1;\n            return\n        }\n\n        // Sets our index to our calculated starting index and enters that challenge\n        player.autoChallengeIndex = startChallenge;\n        toggleChallenges(player.autoChallengeIndex, true);\n\n        // Sets Mode to \"EXIT\" as displayed in the challenge tab\n        toggleAutoChallengeModeText(\"EXIT\");\n        return\n    }\n}\n\nexport const challenge15ScoreMultiplier = () => {\n    const arr = [\n        1 + 5/10000 * hepteractEffective('challenge'), // Challenge Hepteract\n        1 + 0.25 * player.platonicUpgrades[15] // Omega Upgrade\n    ]\n    return productContents(arr)\n}", "import { player, format, formatTimeShort } from './Synergism';\nimport Decimal, { DecimalSource } from 'break_infinity.js';\nimport { antSacrificePointsToMultiplier } from './Ants';\nimport { Synergism } from './Events';\n\n// The categories are the different tables & storages for each type.\nexport type Category = 'ants' | 'reset' | 'ascend';\n// The kinds are the different contents.\nexport type Kind = 'antsacrifice' | 'prestige' | 'transcend' | 'reincarnate' | 'ascend';\n\n// Common to every kind\ntype ResetHistoryEntryBase = {\n    date: number\n    seconds: number\n    kind: Kind\n};\n\nexport type ResetHistoryEntryAntSacrifice = ResetHistoryEntryBase & {\n    antSacrificePointsAfter: number\n    antSacrificePointsBefore: number\n    baseELO: number\n    crumbs: string\n    crumbsPerSecond: string\n    effectiveELO: number\n    obtainium: number\n    offerings: number\n    kind: 'antsacrifice'\n};\n\nexport type ResetHistoryEntryPrestige = ResetHistoryEntryBase & {\n    offerings: number\n    diamonds: string\n    kind: 'prestige'\n}\nexport type ResetHistoryEntryTranscend = ResetHistoryEntryBase & {\n    offerings: number\n    mythos: string\n    kind: 'transcend'\n}\nexport type ResetHistoryEntryReincarnate = ResetHistoryEntryBase & {\n    offerings: number\n    particles: string\n    obtainium: number\n    kind: 'reincarnate'\n}\n\nexport type ResetHistoryEntryAscend = ResetHistoryEntryBase & {\n    c10Completions: number\n    usedCorruptions: number[]\n    corruptionScore: number\n    wowCubes: number\n    wowTesseracts: number\n    wowHypercubes: number\n    wowPlatonicCubes: number\n    wowHepteracts: number\n    currentChallenge?: number\n    kind: 'ascend'\n}\n\n// The set of common fields (in practice this is equal to the Base).\nexport type ResetHistoryEntryUnion =\n    ResetHistoryEntryAntSacrifice\n    | ResetHistoryEntryPrestige\n    | ResetHistoryEntryTranscend\n    | ResetHistoryEntryReincarnate\n    | ResetHistoryEntryAscend\n\n// The intersection of all of these types is invalid (\"never\") because of the conflicting `kind` field declarations.\n// Luckily, we can filter the more specific `kind` fields and still end up with a valid type declaration by using\n// the `kind` field from the base.\n// Fun fact: This exact field name also happens to be the example in the TypeScript documentation.\ntype RemoveKindField<T> = {\n    [K in keyof T as Exclude<K, \"kind\">]: T[K]\n};\n\n// The intersection of all possible fields we can possibly find in a history row. We'll keep the kind field from the\n// base, which is a simple string.\ntype ResetHistoryEntryIntersect =\n    ResetHistoryEntryBase\n    & Partial<RemoveKindField<ResetHistoryEntryAntSacrifice>>\n    & Partial<RemoveKindField<ResetHistoryEntryPrestige>>\n    & Partial<RemoveKindField<ResetHistoryEntryTranscend>>\n    & Partial<RemoveKindField<ResetHistoryEntryReincarnate>>\n    & Partial<RemoveKindField<ResetHistoryEntryAscend>>\n\n// The subset of keys that we'll directly print out using generic code.\nexport type ResetHistoryGainType = keyof Pick<ResetHistoryEntryIntersect,\n    \"offerings\"\n    | \"obtainium\"\n    | \"particles\"\n    | \"diamonds\"\n    | \"mythos\"\n    | \"wowCubes\"\n    | \"wowTesseracts\"\n    | \"wowHypercubes\"\n    | \"wowPlatonicCubes\"\n    | \"wowHepteracts\">\n\n// A formatter that allows formatting a string. The string should be in a form parsable by break_infinity.js.\nconst formatDecimalSource = (numOrStr: DecimalSource) => {\n    return format(typeof numOrStr === \"string\" ? new Decimal(numOrStr) : numOrStr);\n}\n\n// A formatter that, if given a number, allows the data to be divided by the amount of seconds spent.\nconst conditionalFormatPerSecond = (numOrStr: DecimalSource, data: ResetHistoryEntryBase) => {\n    // Strings (decimals) are currently not supported.\n    if (typeof numOrStr === \"string\") {\n        return formatDecimalSource(numOrStr);\n    }\n\n    if (typeof (numOrStr) === \"number\" && player.historyShowPerSecond && data.seconds !== 0) {\n        if (numOrStr === 0) { // work around format(0, 3) return 0 instead of 0.000, for consistency\n            return \"0.000/s\";\n        }\n        // Use \"long\" display for smaller numbers, but once it exceeds 1000, use the \"short\" display.\n        // This'll keep decimals intact until 1000 instead of 10 without creating unwieldy numbers between e6-e13.\n        return format(numOrStr / data.seconds, 3, numOrStr < 1000) + \"/s\";\n    }\n    return format(numOrStr);\n}\n\n// Metadata and formatting tools for simple table cells (gains).\nconst historyGains: Record<\n    ResetHistoryGainType,\n    {\n        img: string\n        imgTitle: string\n        formatter: (str: DecimalSource, data: ResetHistoryEntryUnion) => string,\n        onlyif?: (data: ResetHistoryEntryUnion) => boolean\n    }\n> = {\n    offerings: {\n        img: \"Pictures/Offering.png\", \n        formatter: formatDecimalSource,\n        imgTitle: \"Offerings\"\n    },\n    obtainium: {\n        img: \"Pictures/Obtainium.png\", \n        formatter: formatDecimalSource,\n        imgTitle: \"Obtainium\"\n    },\n    particles: {\n        img: \"Pictures/Particle.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Particles\"\n    },\n    diamonds: {\n        img: \"Pictures/Diamond.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Diamonds\"\n    },\n    mythos: {\n        img: \"Pictures/Mythos.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Mythos\"\n    },\n    wowTesseracts: {\n        img: \"Pictures/WowTessaract.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Wow! Tesseracts\"\n    },\n    wowHypercubes: {\n        img: \"Pictures/WowHypercube.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Wow! Hypercubes\",\n        onlyif: () => player.challengecompletions[13] > 0\n    },\n    wowCubes: {\n        img: \"Pictures/WowCube.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Wow! Cubes\"\n    },\n    wowPlatonicCubes: {\n        img: \"Pictures/Platonic Cube.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Platonic Cubes\",\n        onlyif: () => player.challengecompletions[14] > 0,\n    },\n    wowHepteracts: {\n        img: \"Pictures/Hepteract.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Hepteracts\",\n        onlyif: () => player.achievements[255] > 0,\n    },\n};\n\n// Order in which to display the above\nconst historyGainsOrder: ResetHistoryGainType[] = [\n    \"offerings\", \"obtainium\",\n    \"particles\", \"diamonds\", \"mythos\",\n    \"wowCubes\", \"wowTesseracts\", \"wowHypercubes\", \"wowPlatonicCubes\", \"wowHepteracts\"\n];\n\n// The various kinds and their associated images.\nconst historyKinds: Record<Kind, { img: string }> = {\n    \"antsacrifice\": {img: \"Pictures/AntSacrifice.png\"},\n    \"prestige\": {img: \"Pictures/Transparent Pics/Prestige.png\"},\n    \"transcend\": {img: \"Pictures/Transparent Pics/Transcend.png\"},\n    \"reincarnate\": {img: \"Pictures/Transparent Pics/Reincarnate.png\"},\n    \"ascend\": {img: \"Pictures/questionable.png\"},\n};\n\n// List of categories and the IDs of the associated table in the DOM.\nconst resetHistoryTableMapping: Record<Category, string> = {\n    \"ants\": \"historyAntsTable\",\n    \"reset\": \"historyResetTable\",\n    \"ascend\": \"historyAscendTable\",\n};\n\n// Images associated with the various corruptions.\nconst resetHistoryCorruptionImages = [\n    \"Pictures/Divisiveness Level 7.png\",\n    \"Pictures/Maladaption Lvl 7.png\",\n    \"Pictures/Laziness Lvl 7.png\",\n    \"Pictures/Hyperchallenged Lvl 7.png\",\n    \"Pictures/Scientific Illiteracy Lvl 7.png\",\n    \"Pictures/Deflation Lvl 7.png\",\n    \"Pictures/Extinction Lvl 7.png\",\n    \"Pictures/Drought Lvl 7.png\",\n    \"Pictures/Financial Collapse Lvl 7.png\"\n];\n\nconst resetHistoryCorruptionTitles = [\n    \"Divisiveness [Multipliers]\",\n    \"Maladaption [Accelerators]\",\n    \"Spacial Dilation [Time]\",\n    \"Hyperchallenged [Challenge Requirements]\",\n    \"Scientific Illiteracy [Obtainium]\",\n    \"Market Deflation [Diamonds]\",\n    \"Extinction [Ants]\",\n    \"Drought [Offering EXP]\",\n    \"Financial Recession [Coins]\"\n];\n\n// A formatting aid that removes the mantissa from a formatted string. Converts \"2.5e1000\" to \"e1000\".\nconst extractStringExponent = (str: string) => {\n    let m: RegExpMatchArray | null;\n    return (m = str.match(/e\\+?(.+)/)) !== null ? `e${m[1]}` : str;\n}\n\n// Add an entry to the history. This can be called via the event system.\nconst resetHistoryAdd = (category: Category, data: ResetHistoryEntryUnion) => {\n    if (player.history[category] === undefined) {\n        player.history[category] = [];\n    }\n\n    while (player.history[category].length > (player.historyCountMax - 1)) {\n        player.history[category].shift();\n    }\n\n    player.history[category].push(data);\n    resetHistoryPushNewRow(category, data);\n}\n\nSynergism.on('historyAdd', resetHistoryAdd);\n\n// Add a row to the table, shifting out old ones as required.\nconst resetHistoryPushNewRow = (category: Category, data: ResetHistoryEntryUnion) => {\n    const row = resetHistoryRenderRow(category, data);\n    const table = document.getElementById(resetHistoryTableMapping[category]);\n    const tbody = table.querySelector(\"tbody\");\n    tbody.insertBefore(row, tbody.childNodes[0]);\n    while (tbody.childNodes.length > player.historyCountMax) {\n        tbody.removeChild(tbody.lastChild);\n    }\n}\n\n// Render a table row.\nconst resetHistoryRenderRow = (\n    _category: Category, \n    data: ResetHistoryEntryUnion\n) => {\n    let colsUsed = 1;\n    const row = document.createElement(\"tr\");\n    let rowContentHtml = \"\";\n\n    const kindMeta = historyKinds[data.kind];\n\n    const localDate = new Date(data.date).toLocaleString();\n    rowContentHtml += `<td class=\"history-seconds\" title=\"${localDate}\"><img src=\"${kindMeta.img}\">${formatTimeShort(data.seconds, 60)}</td>`;\n\n    // Carefully loop through everything we need to print in the right order, and add it to the gains array if present.\n    const gains: string[] = [];\n    const dataIntersection = data as ResetHistoryEntryIntersect;\n    historyGainsOrder.forEach((listable) => {\n        if (Object.prototype.hasOwnProperty.call(data, listable)) {\n            const gainInfo = historyGains[listable];\n            if (gainInfo.onlyif && !gainInfo.onlyif(data)) {\n                return;\n            }\n            const formatter = gainInfo.formatter || (() => {/* If no formatter is specified, don't display. */});\n            const str = `<img alt=\"${gainInfo.imgTitle}\" src=\"${gainInfo.img}\" title=\"${gainInfo.imgTitle}\">${formatter(dataIntersection[listable], data)}`;\n\n            gains.push(str);\n        }\n    });\n\n    // Kind-dependent rendering goes here. TypeScript will automatically cast to the appropriate structure based on\n    // the kind check.\n    const extra: string[] = [];\n    if (data.kind === \"antsacrifice\") {\n        const oldMulti = antSacrificePointsToMultiplier(data.antSacrificePointsBefore);\n        const newMulti = antSacrificePointsToMultiplier(data.antSacrificePointsAfter);\n        const diff = newMulti - oldMulti;\n        extra.push(\n            `<span title=\"Ant Multiplier: ${format(oldMulti, 3, false)}--&gt;${format(newMulti, 3, false)}\"><img src=\"Pictures/Multiplier.png\" alt=\"Ant Multiplier\">+${format(diff, 3, false)}</span>`,\n            `<span title=\"+${formatDecimalSource(data.crumbsPerSecond)} crumbs/s\"><img src=\"Pictures/GalacticCrumbs.png\" alt=\"Crumbs\">${extractStringExponent(formatDecimalSource(data.crumbs))}</span>`,\n            `<span title=\"${format(data.baseELO)} base\"><img src=\"Pictures/Transparent Pics/ELO.png\" alt=\"ELO\">${format(data.effectiveELO)}</span>`\n        );\n    } else if (data.kind === \"ascend\") {\n        extra.push(\n            `<img alt=\"C10\" src=\"Pictures/Transparent Pics/ChallengeTen.png\" title=\"Challenge 10 completions\">${data.c10Completions}`\n        );\n\n        const corruptions = resetHistoryFormatCorruptions(data);\n        if (corruptions !== null) {\n            extra.push(corruptions[0]);\n            extra.push(corruptions[1]);\n        }\n    }\n\n    // This rendering is done this way so that all rows should have the same number of columns, which makes rows\n    // equal size and prevents bad rendering. We do 2 of these so that the history doesn't shift when\n    // hypercubes or platcubes get added as players unlock them.\n    // The 6 and 4 numbers are arbitrary but should never be less than the actual amount of columns that can be\n    // realistically displayed; you can increase them if more gains are added.\n\n    // Render the gains plus the gains filler\n    colsUsed += gains.length;\n    rowContentHtml += gains.reduce((acc, value) => {\n        return `${acc}<td class=\"history-gain\">${value}</td>`;\n    }, \"\");\n    rowContentHtml += `<td class=\"history-filler\" colspan=\"${7 - colsUsed}\"></td>`;\n\n    // Render the other stuff\n    rowContentHtml += extra.reduce((acc, value) => {\n        return `${acc}<td class=\"history-extra\">${value}</td>`;\n    }, \"\");\n    rowContentHtml += `<td class=\"history-filler\" colspan=\"${4 - extra.length}\"></td>`;\n\n    row.innerHTML = rowContentHtml;\n    return row;\n}\n\n// Render a category into a given table.\nconst resetHistoryRenderFullTable = (categoryToRender: Category, targetTable: HTMLElement) => {\n    const tbody = targetTable.querySelector(\"tbody\");\n    tbody.innerHTML = \"\";\n\n    if (!player.history[categoryToRender]) {\n        return;\n    }\n\n    if (player.history[categoryToRender].length > 0) {\n        for (let i = player.history[categoryToRender].length - 1; i >= 0; --i) {\n            const row = resetHistoryRenderRow(categoryToRender, player.history[categoryToRender][i]);\n            tbody.appendChild(row);\n        }\n    }\n}\n\n// Render every category into their associated table.\nexport const resetHistoryRenderAllTables = () => {\n    (Object.keys(resetHistoryTableMapping) as Category[]).forEach(\n        key => resetHistoryRenderFullTable(key, document.getElementById(resetHistoryTableMapping[key]))\n    );\n}\n\n// Toggle the \"per second\" display for the ascension table.\nexport const resetHistoryTogglePerSecond = () => {\n    player.historyShowPerSecond = !player.historyShowPerSecond;\n    resetHistoryRenderAllTables();\n    const button = document.getElementById(\"historyTogglePerSecondButton\");\n    button.textContent = \"Per second: \" + (player.historyShowPerSecond ? \"ON\" : \"OFF\");\n    button.style.borderColor = player.historyShowPerSecond ? \"green\" : \"red\";\n}\n\n// Helper function to format the corruption display in the ascension table.\nconst resetHistoryFormatCorruptions = (data: ResetHistoryEntryAscend): [string, string] => {\n    let score = \"Score: \" + format(data.corruptionScore, 0, false);\n    let corruptions = \"\";\n    for (let i = 0; i < resetHistoryCorruptionImages.length; ++i) {\n        const corruptionIdx = i + 1;\n        if (corruptionIdx in data.usedCorruptions && data.usedCorruptions[corruptionIdx] !== 0) {\n            corruptions += ` <img alt=\"${resetHistoryCorruptionTitles[i]}\" src=\"${resetHistoryCorruptionImages[i]}\" title=\"${resetHistoryCorruptionTitles[i]}\">${data.usedCorruptions[corruptionIdx]}`;\n        }\n    }\n    if (data.currentChallenge !== undefined) {\n        score += ` / C${data.currentChallenge}`;\n    }\n\n    return [score, corruptions];\n}\n", "import { player } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { sumContents } from './Utility';\n\nimport Decimal from 'break_infinity.js';\nimport { CalcECC } from './Challenges';\nimport { achievementaward } from './Achievements';\n\nexport const calculatetax = () => {\n    let c = 0;\n    let e = 1;\n    let f = 1;\n    let compareC = 0;\n    G['produceFirst'] = (player.firstGeneratedCoin.add(player.firstOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinOneMulti']).times(player.firstProduceCoin);\n    G['produceSecond'] = (player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinTwoMulti']).times(player.secondProduceCoin);\n    G['produceThird'] = (player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinThreeMulti']).times(player.thirdProduceCoin);\n    G['produceFourth'] = (player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinFourMulti']).times(player.fourthProduceCoin);\n    G['produceFifth'] = (player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinFiveMulti']).times(player.fifthProduceCoin);\n    G['produceTotal'] = G['produceFirst'].add(G['produceSecond']).add(G['produceThird']).add(G['produceFourth']).add(G['produceFifth']);\n\n    if (G['produceFirst'].lte(.0001)) {\n        G['produceFirst'] = new Decimal(0)\n    }\n    if (G['produceSecond'].lte(.0001)) {\n        G['produceSecond'] = new Decimal(0)\n    }\n    if (G['produceThird'].lte(.0001)) {\n        G['produceThird'] = new Decimal(0)\n    }\n    if (G['produceFourth'].lte(.0001)) {\n        G['produceFourth'] = new Decimal(0)\n    }\n    if (G['produceFifth'].lte(.0001)) {\n        G['produceFifth'] = new Decimal(0)\n    }\n\n    G['producePerSecond'] = G['produceTotal'].times(40);\n\n    if (player.currentChallenge.reincarnation === 6) {\n        e = 3 * Math.pow((1 + player.challengecompletions[6] / 25), 2)\n    }\n    if (player.currentChallenge.reincarnation === 9) {\n        e = 0.005\n    }\n    if (player.currentChallenge.ascension === 15) {\n        e = 0.000005\n    }\n    //im doing this to spite xander, basically changes w5x9 to not impact tax scaling in c13 || Sean#7236\n    if (player.currentChallenge.ascension === 13) {\n        e *= 700 * (1 + 1 / 6 * player.challengecompletions[13])\n        e *= Math.pow(1.05, Math.max(0, sumContents(player.challengecompletions) - player.challengecompletions[11] - player.challengecompletions[12] - player.challengecompletions[13] - player.challengecompletions[14] - player.challengecompletions[15] - 3 * player.cubeUpgrades[49]))\n    }\n    if (player.challengecompletions[6] > 0) {\n        f /= 1.075\n    }\n    let exponent = 1;\n    exponent *= e;\n    exponent *= (1 - 1 / 20 * player.researches[51] - 1 / 40 * player.researches[52] - 1 / 80 * player.researches[53] - 1 / 160 * player.researches[54] - 1 / 320 * player.researches[55])\n    exponent *= (1 - 0.05 / 1800 * (player.achievements[45] + player.achievements[46] + 2 * player.achievements[47]) * Math.min(player.prestigecounter, 1800))\n    exponent *= Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6]))\n    exponent *= (0.001 + .999 * (Math.pow(6, -(G['rune2level'] * G['effectiveLevelMult']) / 1000)))\n    exponent *= (0.01 + .99 * (Math.pow(4, Math.min(0, (400 - G['rune4level']) / 1100))))\n    exponent *= (1 - 0.04 * player.achievements[82] - 0.04 * player.achievements[89] - 0.04 * player.achievements[96] - 0.04 * player.achievements[103] - 0.04 * player.achievements[110] - 0.0566 * player.achievements[117] - 0.0566 * player.achievements[124] - 0.0566 * player.achievements[131])\n    exponent *= f;\n    exponent *= Math.pow(0.9925, player.achievements[118] * (player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]));\n    exponent *= (0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3-1] + G['bonusant3']))\n    exponent *= 1 / Math.pow((1 + Decimal.log(player.ascendShards.add(1), 10)), 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + (G['platonicBonusMultiplier'][5]-1))\n    exponent *= (1 - 0.10 * (player.talismanRarity[1-1] - 1))\n    exponent *= Math.pow(0.98, 3 / 5 * Math.log(1 + player.rareFragments) / Math.log(10) * player.researches[159])\n    exponent *= Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13]))\n    exponent *= (1 - 0.666 * player.researches[200] / 100000)\n    exponent *= (1 - 0.666 * player.cubeUpgrades[50] / 100000)\n    exponent *= G['challenge15Rewards'].taxes\n    if (player.upgrades[121] > 0) {\n        exponent *= 0.5\n    }\n    G['maxexponent'] = Math.floor(275 / (Decimal.log(1.01, 10) * exponent)) - 1\n    const a2 = Math.min(G['maxexponent'], Math.floor(Decimal.log(G['produceTotal'].add(1), 10)));\n\n    if (player.currentChallenge.ascension === 13 && G['maxexponent'] <= 99999 && player.achievements[249] < 1) {\n        achievementaward(249)\n    }\n\n    if (a2 >= 1) {\n        c = Math.pow(a2, 2) / 550\n    }\n\n\n    compareC = Math.pow(G['maxexponent'], 2) / 550\n\n\n    G['taxdivisor'] = Decimal.pow(1.01, (c) * (exponent))\n    G['taxdivisorcheck'] = Decimal.pow(1.01, (compareC) * (exponent))\n}", "import { player, format } from \"./Synergism\"\nimport { calculateCubeBlessings, calculateSummationNonLinear } from \"./Calculate\"\nimport { upgradeupdate } from \"./Upgrades\"\nimport { revealStuff } from \"./UpdateHTML\"\nimport { Globals as G } from \"./Variables\"\n\nconst cubeUpgradeName = [\n    \"Wow! I want more Cubes.\",\n    \"Wow! I want passive Offering gain too.\",\n    \"Wow! I want better passive Obtainium\",\n    \"Wow! I want to keep mythos building autobuyers.\",\n    \"Wow! I want to keep mythos upgrade autobuyer.\",\n    \"Wow! I want to keep auto mythos gain.\",\n    \"Wow! I want the particle building automators.\",\n    \"Wow! I want to automate Particle Upgrades.\",\n    \"Wow! I want to automate researches better dangit.\",\n    \"Wow! This is pretty good but expensive.\",\n    \"Wow! I want more cubes 2.\",\n    \"Wow! I want building power to be useful 1.\",\n    \"Wow! I want opened cubes to give more tributes 1.\",\n    \"Wow! I want Iris Tribute bonuses to scale better 1.\",\n    \"Wow! I want Ares Tribute bonuses to scale better 1.\",\n    \"Wow! I want more rune levels 1.\",\n    \"Wow! I want just a little bit more crystal power.\",\n    \"Wow! I want to accelerate time!\",\n    \"Wow! I want to unlock a couple more coin upgrades.\",\n    \"Wow! I want to improve automatic rune tools.\",\n    \"Wow! I want more cubes 3.\",\n    \"Wow! I wish my Artemis was a little better 1\",\n    \"Wow! I want opened cubes to give more tributes 2.\",\n    \"Wow! I want Plutus Tribute bonuses to scale better 1\",\n    \"Wow! I want Moloch Tribute bonuses to scale better 1\",\n    \"Wow! I want to start Ascensions with rune levels.\",\n    \"Wow! I want to start Ascensions with one of each reincarnation building.\",\n    \"Wow! I want to finally render Reincarnating obsolete.\",\n    \"Wow! I want to increase maximum Reincarnation Challenge completions.\",\n    \"Wow! I want to arbitrarily increase my cube and tesseract gain.\",\n    \"Wow! I want more cubes 4.\",\n    \"Wow! I want runes to be easier to level up over time.\",\n    \"Wow! I want opened cubes to give more tributes 3.\",\n    \"Wow! I want Chronos Tribute bonuses to scale better 1\",\n    \"Wow! I want Aphrodite Tribute bonuses to scale better 1\",\n    \"Wow! I want building power to be useful 2.\",\n    \"Wow! I want more rune levels 2.\",\n    \"Wow! I want more tesseracts while corrupted!\",\n    \"Wow! I want more score from challenge 10 completions.\",\n    \"Wow! I want Athena Tribute bonuses to scale better 1.\",\n    \"Wow! I want more cubes 5.\",\n    \"Wow! I want some Uncorruptable Obtainium.\",\n    \"Wow! I want even more Uncorruptable Obtainium!\",\n    \"Wow! I want Midas Tribute bonus to scale better 1.\",\n    \"Wow! I want Hermes Tribute bonus to scale better 1.\",\n    \"Wow! I want even MORE offerings!\",\n    \"Wow! I want even MORE obtainium!\",\n    \"Wow! I want to start ascension with an ant.\",\n    \"Wow! I want to start ascension with a challenge 6-8 completion.\",\n    \"Wow! I want to be enlightened by the power of a thousand suns.\"\n]\n\nconst cubeBaseCost = [\n    200, 200, 200, 500, 500, 500, 500, 500, 2000, 40000,\n    5000, 1000, 10000, 20000, 40000, 10000, 4000, 1e4, 50000, 12500,\n    5e4, 3e4, 3e4, 4e4, 2e5, 4e5, 1e5, 177777, 1e5, 1e6,\n    5e5, 3e5, 2e6, 4e6, 2e6, 4e6, 1e6, 2e7, 5e7, 1e7,\n    5e6, 1e7, 1e8, 4e7, 2e7, 4e7, 5e7, 1e8, 5e8, 1e8\n];\n\nexport const cubeMaxLevel = [\n    3, 10, 5, 1, 1, 1, 1, 1, 1, 1,\n    3, 10, 1, 10, 10, 10, 5, 1, 1, 1,\n    2, 10, 1, 10, 10, 10, 1, 1, 5, 1,\n    2, 1, 1, 10, 10, 10, 10, 1, 1, 10,\n    2, 10, 10, 10, 10, 20, 20, 1, 1, 100000\n];\n\nconst cubeUpgradeDescriptions = [\n    \"[1x1] You got it! +14% cubes from Ascending per level.\",\n    \"[1x2] Plutus grants you +1 Offering per second, no matter what, per level. Also a +0.5% Recycling chance!\",\n    \"[1x3] Athena grants you +10% more Obtainium, and +80% Auto Obtainium per level.\",\n    \"[1x4] You keep those 5 useful automation upgrades in the upgrades tab!\",\n    \"[1x5] You keep the mythos upgrade automation upgrade in the upgrades tab!\",\n    \"[1x6] You keep the automatic mythos gain upgrade in the upgrades tab!\",\n    \"[1x7] Automatically buy each Particle Building whenever possible.\",\n    \"[1x8] Automatically buy Particle Upgrades.\",\n    \"[1x9] The research automator in shop now automatically buys cheapest when enabled. It's like a roomba kinda!\",\n    \"[1x10] Unlock some tools to automate Ascensions or whatever. Kinda expensive but cool.\",\n    \"[2x1] You got it again! +7% cubes from Ascending per level.\",\n    \"[2x2] Raise building power to the power of (1 + level * 0.09).\",\n    \"[2x3] For each 20 cubes opened at once, you get 1 additional tribute at random.\",\n    \"[2x4] Iris shines her light on you. The effect power is now increased by +0.01 (+0.005 if >1000 tributes) per level.\",\n    \"[2x5] Ares teaches you the art of war. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\n    \"[2x6] You got it buster! +20 ALL max rune levels per level.\",\n    \"[2x7] Yep. +5 Exponent per level to crystals.\",\n    \"[2x8] Quantum tunnelling ftw. +20% global game speed.\",\n    \"[2x9] Unlocks new coin upgrades ranging from start of ascend to post c10 and beyond.\",\n    \"[2x10] The rune automator in shop now spends all offerings automatically, 'splitting' them into each of the 5 runes equally.\",\n    \"[3x1] You got it once more! +7% cubes from Ascending per level.\",\n    \"[3x2] The exponent of the bonus of Artemis is increased by 0.05 per level.\",\n    \"[3x3] For each 20 cubes opened at once, you get 1 additional tribute at random.\",\n    \"[3x4] Plutus teaches you the Art of the Deal. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\n    \"[3x5] Moloch lends you a hand in communicating with Ant God. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\n    \"[3x6] Start ascensions with 3 additional rune levels [Does not decrease EXP requirement] per level.\",\n    \"[3x7] Upon an ascension, you will start with 1 of each reincarnation building to speed up Ascensions.\",\n    \"[3x8] Well, I think you got it? Gain +1% of particles on Reincarnation per second.\",\n    \"[3x9] Add +4 to Reincarnation Challenge cap per level. Completions after 25 scale faster in requirement!\",\n    \"[3x10] You now get +25% Cubes and Tesseracts forever!\",\n    \"[4x1] You again? +7% cubes from Ascending per level.\",\n    \"[4x2] Gain +0.1% Rune EXP per second you have spent in an Ascension. This has no cap!\",\n    \"[4x3] For each 20 cubes opened at once, you get yet another additional tribute at random.\",\n    \"[4x4] Chronos overclocks the universe for your personal benefit. (Rewards the same as others)\",\n    \"[4x5] Aphrodite increases the fertility of your coins. (Rewards the same as others)\",\n    \"[4x6] Raise building power to (1 + 0.05 * Level) once more.\",\n    \"[4x7] Adds +20 to ALL rune caps again per level.\",\n    \"[4x8] Gain +0.5% more tesseracts on ascension for each additional level in a corruption you enable.\",\n    \"[4x9] Instead of the multiplier being 1.03^(C10 completions), it is now 1.035^(C10 completions)!\",\n    \"[4x10] Athena is very smart (Rewards the same as others).\",\n    \"[5x1] Yeah yeah yeah, +7% cubes from Ascending per level. Isn't it enough?\",\n    \"[5x2] You now gain +4% Obtainium per level, which is not dependent on corruptions!\",\n    \"[5x3] Gain another +3% corruption-independent Obtainium per level.\",\n    \"[5x4] Blah blah blah Midas works harder (same rewards as before)\",\n    \"[5x5] Blah blah blah Hermes works harder (same rewards as before)\",\n    \"[5x6] Gain +5% more offerings per level!\",\n    \"[5x7] Gain +10% more obtainium per level!\",\n    \"[5x8] When you ascend, start with 1 worker ant (this is a lot better than it sounds!)\",\n    \"[5x9] When you ascend, gain 1 of each challenge 6-8 completion.\",\n    \"[5x10] What doesn't this boost? +0.01% Accelerators, Multipliers, Accelerator Boosts, +0.02% Obtainium, +0.02% Offerings, +0.04 Max Rune Levels, +1 Effective ELO, +0.0004 Talisman bonuses per level, 0.00066% Tax reduction per level.\"\n]\n\nconst getCubeCost = (i: number, linGrowth = 0) => {\n    let amountToBuy = G['buyMaxCubeUpgrades'] ? 1e5: 1;\n    amountToBuy = Math.min(cubeMaxLevel[i-1] - player.cubeUpgrades[i], amountToBuy)\n    const metaData = calculateSummationNonLinear(player.cubeUpgrades[i], cubeBaseCost[i-1], Number(player.wowCubes), linGrowth, amountToBuy)\n    return([metaData[0],metaData[1]]) //metaData[0] is the levelup amount, metaData[1] is the total cube cost\n}\n\nexport const cubeUpgradeDesc = (i: number, linGrowth = 0) => {\n    const metaData = getCubeCost(i,linGrowth)\n    const a = document.getElementById(\"cubeUpgradeName\")\n    const b = document.getElementById(\"cubeUpgradeDescription\")\n    const c = document.getElementById(\"cubeUpgradeCost\")\n    const d = document.getElementById(\"cubeUpgradeLevel\")\n\n    a.textContent = cubeUpgradeName[i - 1];\n    b.textContent = cubeUpgradeDescriptions[i - 1];\n    c.textContent = \"Cost: \" + format(metaData[1], 0, true) + \" Wow! Cubes [+\" + format(metaData[0]-player.cubeUpgrades[i],0,true) + \" Levels]\";\n    c.style.color = \"green\"\n    d.textContent = \"Level: \" + format(player.cubeUpgrades[i], 0, true) + \"/\" + format(cubeMaxLevel[i-1], 0, true);\n    d.style.color = \"white\"\n\n    if (Number(player.wowCubes) < cubeBaseCost[i-1]) {\n        c.style.color = \"crimson\"\n    }\n    if (player.cubeUpgrades[i] === cubeMaxLevel[i-1]) {\n        c.style.color = \"gold\";\n        d.style.color = \"plum\"\n    }\n}\n\nexport const updateCubeUpgradeBG = (i: number) => {\n    const a = document.getElementById(\"cubeUpg\" + i)\n    if (player.cubeUpgrades[i] > cubeMaxLevel[i-1]) {\n        console.log(\"Refunded \" + (player.cubeUpgrades[i] - cubeMaxLevel[i-1]) + \" levels of Cube Upgrade \" + i + \", adding \" + (player.cubeUpgrades[i] - cubeMaxLevel[i-1]) * cubeBaseCost[i-1] + \" Wow! Cubes to balance.\")\n        player.wowCubes.add((player.cubeUpgrades[i] - cubeMaxLevel[i-1]) * cubeBaseCost[i-1]);\n        player.cubeUpgrades[i] = cubeMaxLevel[i-1]\n    }\n    if (player.cubeUpgrades[i] === 0) {\n        a.style.backgroundColor = \"black\"\n    }\n    if (player.cubeUpgrades[i] > 0 && player.cubeUpgrades[i] < cubeMaxLevel[i-1]) {\n        a.style.backgroundColor = \"purple\"\n    }\n    if (player.cubeUpgrades[i] === cubeMaxLevel[i-1]) {\n        a.style.backgroundColor = \"green\"\n    }\n\n}\n\nexport const buyCubeUpgrades = (i: number, linGrowth = 0) => {\n    const metaData = getCubeCost(i,linGrowth);\n    if(Number(player.wowCubes) >= metaData[1] && player.cubeUpgrades[i] < cubeMaxLevel[i-1]){\n        player.wowCubes.sub(100 / 100 * metaData[1]);\n        player.cubeUpgrades[i] = metaData[0];\n    }\n\n    if(i === 4 && player.cubeUpgrades[4] > 0){\n        for(let j = 94; j <= 98; j++){\n            player.upgrades[j] = 1;\n            upgradeupdate(j, true)\n        }\n    }\n    if(i === 5 && player.cubeUpgrades[5] > 0){\n        player.upgrades[99] = 1\n        upgradeupdate(99, true)\n    }\n    if(i === 6 && player.cubeUpgrades[6] > 0){\n        player.upgrades[100] = 1\n        upgradeupdate(100, true)\n    }\n\n    cubeUpgradeDesc(i, linGrowth);\n    updateCubeUpgradeBG(i);\n    revealStuff();\n    calculateCubeBlessings();\n}\n", "import { player, format } from './Synergism';\nimport { Synergism } from './Events';\nimport { Alert, revealStuff } from './UpdateHTML';\n\nconst platonicUpgradeDesc = [\n    '+0.0075% cubes per corruption level per level!',\n    '+0.015% tesseracts per corruption level per level!',\n    '+0.045% hypercubes per corruption level per level!',\n    'Gain +2% Platonic Cubes per level! It is that simple.',\n    'C10 Exponent: 1.035 --> 1.0375, Constant tax exponent +0.10, 2x faster constant production, +10/+5 Challenge caps, 2x Obtainium/Offerings, ^1.10 coin gain in C15!',\n    'Raises corruption 1 and 2 exponent ^(1 + level/30), capacity of ^1 on Mult/Accel.',\n    'Raises speed below 1x to the power of ^(1 - level/30).',\n    'Divides Hyperchallenged by (1 + 0.4 * level), with a minimum 1x challenge req. multiplier!',\n    'Raise Obtainium to the power of (1+(0.09*log10(Obt owned))) and add another x2.5 multiplier (uncorruptable), up until 1e100 Obtainium!',\n    'C10 Exponent: 1.0375 --> 1.04, Const. tax exponent +0.20 and 10x faster constant production, +10/+5 Challenge caps, 3.5x Obtainium and Offerings, 2x All Cubes. ^1.25 ant exponent in C15!',\n    'With this upgrade, you will gain diamonds equal to particle gain on reincarnation while using Market Deflation 11 or higher! Does not work with cube upgrade [3x8]!',\n    'Gain (1 + lvl/100)x ant multiplier per challenge completion, ignoring corruptions to ants.',\n    'Effect of Drought is raised to the power of 0.5.',\n    'Reduce the effect of Financial Recession in challenge 15, multiplying the coin exponent by 1.55.',\n    'You begin to find the start of the abyss. Coin Exponent +0.10 in Challenge 15, Challenge 15 Score +25%, Ascension Speed +0.2% per Corruption Level (Max: 20%), +1% all Cube types per C9 Completion (multiplicative), +20% Quarks, 1e250x Tesseract Building Multiplier, 2x Ascension Count, +30 Reincarnation Challenge Cap, +20 Ascension Challenge Cap, 6x Offerings and Obtainium (Uncorruptable)! Talk about a deep dive.',\n    'Increase powder conversion rate by 1% per level, gain +2% ascension count per level and gain up to 2% more ascension count per level based on powder, up to 100,000. This will also multiply Tesseract Building production by (Powder + 1)^(10 * level), uncapped.',\n    'If Divisiveness or Maladaptive is set to level 10 or higher, score multiplier is raised by an exponent. That exponent is 1.75 + 0.02 per level of this upgrade.',\n    'Raise the base percentage of Constant Upgrade 1 by 0.1% and increase the base percentage cap of Constant Upgrade 2 by 0.3% per level!',\n    'The diminishing return power on Chronos Hepteract changes from 0.166 to (0.166 + 0.0033 * level).',\n    'You know, maybe some things should be left unbought.',\n];\n\nexport interface IPlatBaseCost {\n    obtainium: number\n    offerings: number\n    cubes: number\n    tesseracts: number\n    hypercubes: number\n    platonics: number\n    abyssals: number\n    maxLevel: number\n}\n\nexport const platUpgradeBaseCosts: Record<number, IPlatBaseCost> = {\n    1: {\n        obtainium: 1e70,\n        offerings: 1e45,\n        cubes: 1e13,\n        tesseracts: 1e6,\n        hypercubes: 1e5,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    2: {\n        obtainium: 3e70,\n        offerings: 2e45,\n        cubes: 1e11,\n        tesseracts: 1e8,\n        hypercubes: 1e5,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    3: {\n        obtainium: 1e71,\n        offerings: 4e45,\n        cubes: 1e11,\n        tesseracts: 1e6,\n        hypercubes: 1e7,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    4: {\n        obtainium: 4e71,\n        offerings: 1e46,\n        cubes: 1e12,\n        tesseracts: 1e7,\n        hypercubes: 1e6,\n        platonics: 1e6,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    5: {\n        obtainium: 1e80,\n        offerings: 1e60,\n        cubes: 1e14,\n        tesseracts: 1e9,\n        hypercubes: 1e8,\n        platonics: 1e7,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    6: {\n        obtainium: 1e82,\n        offerings: 1e61,\n        cubes: 1e15,\n        tesseracts: 1e9,\n        hypercubes: 1e8,\n        platonics: 1e7,\n        abyssals: 0,\n        maxLevel: 10\n    },\n    7: {\n        obtainium: 1e84,\n        offerings: 3e62,\n        cubes: 2e15,\n        tesseracts: 2e9,\n        hypercubes: 2e8,\n        platonics: 1.5e7,\n        abyssals: 0,\n        maxLevel: 15\n    },\n    8: {\n        obtainium: 1e87,\n        offerings: 1e64,\n        cubes: 4e15,\n        tesseracts: 4e9,\n        hypercubes: 4e8,\n        platonics: 3e7,\n        abyssals: 0,\n        maxLevel: 5\n    },\n    9: {\n        obtainium: 1e90,\n        offerings: 1e66,\n        cubes: 1e16,\n        tesseracts: 1e10,\n        hypercubes: 1e9,\n        platonics: 5e7,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    10: {\n        obtainium: 1e93,\n        offerings: 1e68,\n        cubes: 1e18,\n        tesseracts: 1e12,\n        hypercubes: 1e11,\n        platonics: 1e9,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    11: {\n        obtainium: 2e96,\n        offerings: 1e70,\n        cubes: 2e17,\n        tesseracts: 2e11,\n        hypercubes: 2e10,\n        platonics: 2e8,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    12: {\n        obtainium: 1e100,\n        offerings: 1e72,\n        cubes: 1e18,\n        tesseracts: 1e12,\n        hypercubes: 1e11,\n        platonics: 1e9,\n        abyssals: 0,\n        maxLevel: 10\n    },\n    13: {\n        obtainium: 2e104,\n        offerings: 1e74,\n        cubes: 2e19,\n        tesseracts: 4e12,\n        hypercubes: 4e11,\n        platonics: 4e9,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    14: {\n        obtainium: 1e108,\n        offerings: 1e77,\n        cubes: 4e20,\n        tesseracts: 1e13,\n        hypercubes: 1e12,\n        platonics: 1e10,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    15: {\n        obtainium: 1e115,\n        offerings: 1e80,\n        cubes: 1e23,\n        tesseracts: 1e15,\n        hypercubes: 1e14,\n        platonics: 1e12,\n        abyssals: 1,\n        maxLevel: 1\n    },\n    16: {\n        obtainium: 1e140,\n        offerings: 1e110,\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 2.5e15,\n        platonics: 0,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    17: {\n        obtainium: 1e145,\n        offerings: 1e113,\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 1e19,\n        platonics: 0,\n        abyssals: 2,\n        maxLevel: 20\n    },\n    18: {\n        obtainium: 1e150,\n        offerings: 1e116,\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 1e19,\n        platonics: 0,\n        abyssals: 8,\n        maxLevel: 10,\n    },\n    19: {\n        obtainium: 1e160,\n        offerings: 1e121,\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 1e21,\n        platonics: 0,\n        abyssals: 128,\n        maxLevel: 10\n    },\n    20: {\n        obtainium: 1e180,\n        offerings: 1e130,\n        cubes: 1e45,\n        tesseracts: 1e28,\n        hypercubes: 1e25,\n        platonics: 1e25,\n        abyssals: Math.pow(2, 31) - 1,\n        maxLevel: 1\n    }\n}\n\nconst checkPlatonicUpgrade = (index: number): Record<keyof (IPlatBaseCost & { canBuy: boolean }), boolean> => {\n    let checksum = 0\n    const resources = ['obtainium', 'offerings', 'cubes', 'tesseracts', 'hypercubes', 'platonics', 'abyssals'] as const;\n    const resourceNames = ['researchPoints', 'runeshards', 'wowCubes', 'wowTesseracts', 'wowHypercubes', 'wowPlatonicCubes', 'wowAbyssals'] as const;\n    const checks: Record<string, boolean> = {\n        obtainium: false,\n        offerings: false,\n        cubes: false,\n        tesseracts: false,\n        hypercubes: false,\n        platonics: false,\n        abyssals: false,\n        canBuy: false,\n    }\n    for (let i = 0; i < resources.length - 1; i++) {\n        if (platUpgradeBaseCosts[index][resources[i]] <= player[resourceNames[i]]) {\n            checksum++;\n            checks[resources[i]] = true\n        }\n    }\n\n    if (player.hepteractCrafts.abyss.BAL > 0 || platUpgradeBaseCosts[index].abyssals == 0) {\n        checksum ++\n        checks['abyssals'] = true\n    }\n\n    if (checksum === resources.length && player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\n        checks.canBuy = true\n    }\n    return checks\n}\n\nexport const createPlatonicDescription = (index: number) => {\n    let maxLevelAppend = \"\";\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\n        maxLevelAppend = \" [MAX]\"\n    }\n    const resourceCheck = checkPlatonicUpgrade(index);\n    document.getElementById('platonicUpgradeDescription').textContent = platonicUpgradeDesc[index-1];\n    document.getElementById('platonicUpgradeLevel').textContent = \"Level: \" + format(player.platonicUpgrades[index]) + \"/\" + format(platUpgradeBaseCosts[index].maxLevel) + maxLevelAppend\n    document.getElementById('platonicOfferingCost').textContent = format(player.runeshards) + \"/\" + format(platUpgradeBaseCosts[index].offerings) + \" Offerings\"\n    document.getElementById('platonicObtainiumCost').textContent = format(player.researchPoints) + \"/\" + format(platUpgradeBaseCosts[index].obtainium) + \" Obtainium\"\n    document.getElementById('platonicCubeCost').textContent = format(player.wowCubes) + \"/\" + format(platUpgradeBaseCosts[index].cubes) + \" Wow! Cubes\"\n    document.getElementById('platonicTesseractCost').textContent = format(player.wowTesseracts) + \"/\" + format(platUpgradeBaseCosts[index].tesseracts) + \" Wow! Tesseracts\"\n    document.getElementById('platonicHypercubeCost').textContent = format(player.wowHypercubes) + \"/\" + format(platUpgradeBaseCosts[index].hypercubes) + \" Wow! Hypercubes\"\n    document.getElementById('platonicPlatonicCost').textContent = format(player.wowPlatonicCubes) + \"/\" + format(platUpgradeBaseCosts[index].platonics) + \" Platonic! Cubes\"\n    document.getElementById('platonicHepteractCost').textContent = format(player.hepteractCrafts.abyss.BAL) + \"/\" + format(platUpgradeBaseCosts[index].abyssals, 0, true) + \" Hepteracts of the Abyss\"\n\n    resourceCheck.offerings ?\n        document.getElementById('platonicOfferingCost').style.color = \"lime\" :\n        document.getElementById('platonicOfferingCost').style.color = \"crimson\";\n\n    resourceCheck.obtainium ?\n        document.getElementById('platonicObtainiumCost').style.color = \"lime\" :\n        document.getElementById('platonicObtainiumCost').style.color = \"crimson\";\n\n    resourceCheck.cubes ?\n        document.getElementById('platonicCubeCost').style.color = \"lime\" :\n        document.getElementById('platonicCubeCost').style.color = \"crimson\";\n\n    resourceCheck.tesseracts ?\n        document.getElementById('platonicTesseractCost').style.color = \"lime\" :\n        document.getElementById('platonicTesseractCost').style.color = \"crimson\";\n\n    resourceCheck.hypercubes ?\n        document.getElementById('platonicHypercubeCost').style.color = \"lime\" :\n        document.getElementById('platonicHypercubeCost').style.color = \"crimson\";\n\n    resourceCheck.platonics ?\n        document.getElementById('platonicPlatonicCost').style.color = \"lime\" :\n        document.getElementById('platonicPlatonicCost').style.color = \"crimson\";\n\n    resourceCheck.abyssals ?\n        document.getElementById('platonicHepteractCost').style.color = \"lime\" :\n        document.getElementById('platonicHepteractCost').style.color = \"crimson\";\n\n    if (player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\n        document.getElementById('platonicUpgradeLevel').style.color = 'cyan'\n        resourceCheck.canBuy ?\n            (document.getElementById('platonicCanBuy').style.color = \"gold\", document.getElementById('platonicCanBuy').textContent = \"===Affordable! Click to buy!===\") :\n            (document.getElementById('platonicCanBuy').style.color = \"crimson\", document.getElementById('platonicCanBuy').textContent = \"===You cannot afford this!===\");\n    }\n\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\n        document.getElementById('platonicUpgradeLevel').style.color = 'gold'\n        document.getElementById('platonicCanBuy').style.color = \"orchid\"\n        document.getElementById('platonicCanBuy').textContent = \"===Maxed===\"\n    }\n}\n\nexport const updatePlatonicUpgradeBG = (i: number) => {\n    const a = document.getElementById(`platUpg${i}`)\n\n    const maxLevel = platUpgradeBaseCosts[i].maxLevel\n    if (player.platonicUpgrades[i] === 0) {\n        a.style.backgroundColor = \"black\"\n    }\n    else if (player.platonicUpgrades[i] > 0 && player.platonicUpgrades[i] < maxLevel) {\n        a.style.backgroundColor = \"purple\"\n    }\n    else if (player.platonicUpgrades[i] === maxLevel) {\n        a.style.backgroundColor = \"green\"\n    }\n\n}\n\nexport const buyPlatonicUpgrades = (index: number) => {\n    const resourceCheck = checkPlatonicUpgrade(index)\n    if (resourceCheck.canBuy) {\n        player.platonicUpgrades[index] += 1\n        player.researchPoints -= platUpgradeBaseCosts[index].obtainium\n        player.runeshards -= platUpgradeBaseCosts[index].offerings\n        player.wowCubes.sub(platUpgradeBaseCosts[index].cubes);\n        player.wowTesseracts.sub(platUpgradeBaseCosts[index].tesseracts);\n        player.wowHypercubes.sub(platUpgradeBaseCosts[index].hypercubes);\n        player.wowPlatonicCubes.sub(platUpgradeBaseCosts[index].platonics);\n        player.hepteractCrafts.abyss.spend(platUpgradeBaseCosts[index].abyssals);\n\n        Synergism.emit('boughtPlatonicUpgrade', platUpgradeBaseCosts[index]);\n        if (index === 20) {\n            return Alert('While I strongly recommended you not to buy this, you did it anyway. For that, you have unlocked the rune of Grandiloquence, for you are a richass.')\n        }\n    }\n    createPlatonicDescription(index)\n    updatePlatonicUpgradeBG(index)\n    revealStuff();\n}\n", "import { player, saveSynergy, blankSave, reloadShit, format } from './Synergism';\nimport { testing, version } from './Config';\nimport { getElementById } from './Utility';\nimport LZString from 'lz-string';\nimport { achievementaward } from './Achievements';\nimport { Player } from './types/Synergism';\nimport { Synergism } from './Events';\nimport { Alert, Confirm, Prompt } from './UpdateHTML';\nimport { quarkHandler } from './Quark';\nimport { shopData } from './Shop';\nimport { addTimers } from './Helper';\nimport { toggleSubTab, toggleTabs } from './Toggles';\nimport { Globals as G } from './Variables';\nimport { cubeMaxLevel } from './Cubes';\n\nconst format24 = new Intl.DateTimeFormat(\"EN-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    hour12: false,\n    minute: \"2-digit\",\n    second: \"2-digit\"\n})\nconst format12 = new Intl.DateTimeFormat(\"EN-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    hour12: true,\n    minute: \"2-digit\",\n    second: \"2-digit\"\n})\n\nconst getRealTime = (use12 = false) => {\n    const format = use12 ? format12 : format24;\n    const dateParts = Object.assign({}, ...format\n        .formatToParts(new Date())\n        .filter((x) => x.type !== \"literal\")\n        .map(p => ({ [p.type]: p.value }))\n    );\n        \n    const period = use12 ? ` ${dateParts.dayPeriod.toUpperCase()}` : '';\n    return `${dateParts.year}-${dateParts.month}-${dateParts.day} ${dateParts.hour}_${dateParts.minute}_${dateParts.second}${period}`;\n}\n\nexport const updateSaveString = (input: HTMLInputElement) => {\n    const value = input.value.slice(0, 100);\n    player.saveString = value;\n}\n\nconst saveFilename = () => {\n    const s = player.saveString\n    const t = s.replace(/\\$(.*?)\\$/g, (_, b) => {\n        switch (b) {\n            case 'VERSION': return `v${version}`;\n            case 'TIME': return getRealTime();\n            case 'TIME12': return getRealTime(true);\n        }\n    });\n\n    return t;\n}\n\nexport const exportSynergism = async () => {\n    player.offlinetick = Date.now();\n    const quarkData = quarkHandler();\n    if (quarkData.gain >= 1) {\n        player.worlds.add(quarkData.gain);\n        player.quarkstimer = (player.quarkstimer % (3600 / quarkData.perHour))\n    }\n\n    saveSynergy();\n\n    const toClipboard = getElementById<HTMLInputElement>('saveType').checked;\n    const save = localStorage.getItem('Synergysave2');\n    if ('clipboard' in navigator && toClipboard) {\n        await navigator.clipboard.writeText(save)\n            .catch(e => console.error(e));\n    } else if (toClipboard) {\n        // Old browsers (legacy Edge, Safari 13.0)\n        const textArea = document.createElement('textarea');\n        textArea.value = save;\n        textArea.setAttribute('style', 'top: 0; left: 0; position: fixed;');\n\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        try {\n            document.execCommand('copy');\n        } catch (_) {\n            console.error(\"Failed to copy savegame to clipboard.\");\n        }\n\n        document.body.removeChild(textArea);\n    } else {\n        const a = document.createElement('a');\n        a.setAttribute('href', 'data:text/plain;charset=utf-8,' + save);\n        a.setAttribute('download', saveFilename());\n        a.setAttribute('id', 'downloadSave');\n        // \"Starting in Firefox 75, the click() function works even when the element is not attached to a DOM tree.\"\n        // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n        // so let's have it work on older versions of Firefox, doesn't change functionality.\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    document.getElementById(\"exportinfo\").textContent = toClipboard\n        ? 'Copied save to your clipboard!'\n        : 'Savefile copied to file!';\n}\n\nexport const resetGame = async () => {\n    const a = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\n    const b = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\n\n    const result = await Prompt(`Answer the question to confirm you'd like to reset: what is ${a}+${b}? (Hint: ${a+b})`)\n    if (+result !== a + b) {\n        return Alert(`Answer was wrong, not resetting!`);\n    }\n\n    const hold = Object.assign({}, blankSave, {\n        codes: Array.from(blankSave.codes)\n    });\n    //Reset Displays\n    toggleTabs(\"buildings\");\n    toggleSubTab(1, 0);\n    //Import Game\n    importSynergism(btoa(JSON.stringify(hold)), true);\n}\n\nexport const importSynergism = (input: string, reset = false) => {\n    const d = LZString.decompressFromBase64(input);\n    const f: Player = d ? JSON.parse(d) : JSON.parse(atob(input));\n\n    if (\n        (f.exporttest === \"YES!\" || f.exporttest === true) ||\n        (f.exporttest === false && testing) ||\n        (f.exporttest === 'NO!' && testing)\n    ) {\n        localStorage.setItem('Synergysave2', btoa(JSON.stringify(f)));\n        localStorage.setItem('saveScumIsCheating', Date.now().toString());\n        \n        return reloadShit(reset);\n    } else {\n        return Alert(`You are attempting to load a testing file in a non-testing version!`);\n    }\n}\n\nexport const promocodes = async () => {\n    const input = await Prompt('Got a code? Great! Enter it in (CaSe SeNsItIvE). \\n [Note to viewer: this is for events and certain always-active codes. \\n May I suggest you type in \"synergism2021\" or \"add\" perchance?]');\n    const el = document.getElementById(\"promocodeinfo\");\n\n    if (input === null) {\n        return Alert('Alright, come back soon!')\n    }\n    if (input === \"synergism2021\" && !player.codes.get(1)) {\n        player.codes.set(1, true);\n        player.runeshards += 25;\n        player.worlds.add(50);\n        el.textContent = \"Promo Code 'synergism2021' Applied! +25 Offerings, +50 Quarks\"\n    } else if (input === \":unsmith:\" && player.achievements[243] < 1) {\n        achievementaward(243);\n        el.textContent = \"It's Spaghetti Time! [Awarded an achievement!!!]\";\n    } else if (input === \":antismith:\" && player.achievements[244] < 1) {\n        achievementaward(244);\n        el.textContent = \"Hey, isn't this just a reference to Antimatter Dimensions? Shh. [Awarded an achievement!!!]\";\n    } else if(input === 'Khafra' && !player.codes.get(26)) {\n        player.codes.set(26, true);\n        const quarks = Math.floor(Math.random() * (400 - 100 + 1) + 100);\n        player.worlds.add(quarks);\n        el.textContent = 'Khafra has blessed you with ' + quarks + ' quarks!';\n    } else if(input === '2million' && !player.codes.get(28)) {\n        player.codes.set(28, true);\n        player.worlds.add(700);\n        el.textContent = 'Thank you for 2 million plays on kongregate!';\n    } else if(input === 'v2.5.0' && !player.codes.get(32)) {\n        player.codes.set(32, true);\n        return Alert('You are on v2.5.0! For playing, you get a reward of ... nothing? Try code \"bark\" instead.');\n    } else if(input === 'bark' && !player.codes.get(34)) {\n        player.codes.set(34, true);\n        let quarkGain = 250;                                                                                // 250\n        quarkGain += (player.reincarnationCount > 0) ? 250 : 0;                                             // 500\n        quarkGain += (player.highestchallengecompletions[8] > 0 || player.ascensionCount > 0) ? 500 : 0;    // 1000\n        quarkGain += (player.ascensionCount > 0) ? 500 : 0;                                                 // 1500\n        quarkGain += (player.challengecompletions[14] > 0) ? 500 : 0;                                       // 2000\n        quarkGain += (player.researches[200] === G['researchMaxLevels'][200]) ? 500 : 0;                    // 2500\n        quarkGain += (player.cubeUpgrades[50] === cubeMaxLevel[49]) ? 500 : 0;                              // 3000\n        quarkGain += (player.platonicUpgrades[5] > 0) ? 1000 : 0;                                           // 4000\n        quarkGain += (player.platonicUpgrades[10] > 0) ? 1000: 0;                                           // 5000\n        quarkGain += (player.challenge15Exponent > 1e6) ? 1000 : 0;                                         // 6000\n        quarkGain += (player.challenge15Exponent > 1e9) ? 1000 : 0;                                         // 7000\n        quarkGain += (player.challenge15Exponent > 1e12) ? 1000 : 0;                                        // 8000\n        quarkGain += (player.challenge15Exponent > 1e15) ? 1000: 0;                                         // 9000\n        quarkGain += (player.challenge15Exponent > 1e16) ? 1000: 0;                                         // 10000\n        quarkGain += (player.platonicUpgrades[15] > 0) ? 1: 0;                                              // 10001\n\n        const patreonBonus = Math.floor(quarkGain * player.worlds._BONUS / 100);\n        player.worlds.add(quarkGain)\n        return Alert(`Thanks so much for playing! Version 2.5.0 is out at last. For your patience, and entering this code, you received ${format(quarkGain + patreonBonus)} Quarks [${format(patreonBonus)} from Patreon Bonus]!`)\n    } else if (input === 'riprespec' && !player.codes.get(35)) {\n        player.codes.set(35, true);\n        player.rngCode -= 3600 * 1000 * 48;\n        let quarkGain = 250;                                                                                // 250\n        quarkGain += (player.reincarnationCount > 0) ? 250 : 0;                                             // 500\n        quarkGain += (player.highestchallengecompletions[8] > 0 || player.ascensionCount > 0) ? 500 : 0;    // 1000\n        quarkGain += (player.ascensionCount > 0) ? 500 : 0;                                                 // 1500\n        quarkGain += (player.challengecompletions[14] > 0) ? 500 : 0;                                       // 2000\n        quarkGain += (player.researches[200] === G['researchMaxLevels'][200]) ? 500 : 0;                    // 2500\n        quarkGain += (player.cubeUpgrades[50] === cubeMaxLevel[49]) ? 500 : 0;                              // 3000\n        quarkGain += (player.platonicUpgrades[5] > 0) ? 1000 : 0;                                           // 4000\n        quarkGain += (player.platonicUpgrades[10] > 0) ? 1000: 0;                                           // 5000\n        quarkGain += (player.challenge15Exponent > 1e6) ? 1000 : 0;                                         // 6000\n        quarkGain += (player.challenge15Exponent > 1e9) ? 1000 : 0;                                         // 7000\n        quarkGain += (player.challenge15Exponent > 1e12) ? 1000 : 0;                                        // 8000\n        quarkGain += (player.challenge15Exponent > 1e15) ? 1000: 0;                                         // 9000\n        quarkGain += (player.challenge15Exponent > 1e16) ? 1000: 0;                                         // 10000\n        quarkGain += (player.platonicUpgrades[15] > 0) ? 1: 0;                                              // 10001\n\n        const patreonBonus = Math.floor(quarkGain * player.worlds._BONUS / 100);\n        player.worlds.add(quarkGain)\n        return Alert(`V2.5.3! You have regained all of your 'add' code uses and gained ${format(quarkGain + patreonBonus)} Quarks [${format(patreonBonus)} from Patreon Bonus]!`)\n    } else if(input.toLowerCase() === 'add') {\n        const hour = 3600000\n        const timeToNextHour = Math.floor(hour + player.rngCode - Date.now())/1000\n        \n        if(player.rngCode >= (Date.now() - hour)) { // 1 hour\n            el.textContent = `You do not have an 'Add' code attempt! You will gain 1 in ${timeToNextHour} seconds.`;\n            return;\n        }\n\n        const possibleAmount = Math.floor(Math.min(24 + 2 * player.shopUpgrades.calculator2, (Date.now() - player.rngCode) / hour))\n        const attemptsUsed = await Prompt(`You can use up to ${possibleAmount} attempts at once. How many would you like to use`);\n        if (attemptsUsed === null) {\n             return Alert(`Code was canceled, took no uses away from you!`);\n        }\n        const toUse = Number(attemptsUsed);\n        if (\n            Number.isNaN(toUse) ||\n            !Number.isInteger(toUse) ||\n            toUse <= 0\n        )\n            return Alert(`Hey! That's not a valid number!`);\n\n        const realAttemptsUsed = Math.min(possibleAmount, toUse);\n        let mult = Math.max(0.4 + 0.02 * player.shopUpgrades.calculator3, 2/5 + (window.crypto.getRandomValues(new Uint16Array(2))[0] % 128) / 640); // [0.4, 0.6], slightly biased in favor of 0.4. =)\n        mult *= 1 + 0.14 * player.shopUpgrades.calculator // Calculator Shop Upgrade (+14% / level)\n        mult *= (player.shopUpgrades.calculator2 === shopData['calculator2'].maxLevel)? 1.25: 1; // Calculator 2 Max Level (+25%)\n        mult *= (1 + +G['isEvent']) // is event? then 2x! [June 28, July 1]\n        const quarkBase = quarkHandler().perHour\n        const actualQuarks = Math.floor(quarkBase * mult * realAttemptsUsed)\n        const patreonBonus = Math.floor(actualQuarks * (player.worlds._BONUS / 100));\n        const [first, second] = window.crypto.getRandomValues(new Uint8Array(2));\n\n        //Allows storage of up to (24 + 2 * calc2 levels) Add Codes, lol!\n        const v = Math.max(Date.now() - (24 + 2 * player.shopUpgrades.calculator2 - realAttemptsUsed) * hour, player.rngCode + hour * realAttemptsUsed);\n        const remaining = Math.floor((Date.now() - v) / hour)\n        const timeToNext = Math.floor((hour - (Date.now() - v - hour * remaining)) / 1000)\n\n        // Calculator 3: Adds ascension timer.\n        const ascensionTimer = (player.shopUpgrades.calculator3 > 0)\n            ? 'Thanks to PL-AT \u03A9 you have also gained ' + format(60 * player.shopUpgrades.calculator3 * realAttemptsUsed) + ' real-life seconds to your Ascension Timer!'\n            : '';\n\n        // Calculator Maxed: you don't need to insert anything!\n        if (player.shopUpgrades.calculator === shopData['calculator'].maxLevel) {\n            player.worlds.add(actualQuarks);\n            addTimers('ascension', 60 * player.shopUpgrades.calculator3 * realAttemptsUsed)\n            player.rngCode = v;\n            return Alert(`Your calculator figured out that ${first} + ${second} = ${first + second} on its own, so you were awarded ${actualQuarks + patreonBonus} quarks [${patreonBonus} from Patreon Boost]! ${ascensionTimer} You have ${remaining} uses of Add. You will gain 1 in ${timeToNext.toLocaleString(navigator.language)} seconds.`);\n        }\n\n        // If your calculator isn't maxed but has levels, it will provide the solution.\n        const solution = (player.shopUpgrades.calculator > 0) \n            ? 'The answer is ' + (first + second) + ' according to your calculator.'\n            : '';\n\n        const addPrompt = await Prompt(`For ${actualQuarks + patreonBonus} quarks or nothing: What is ${first} + ${second}? ${solution}`);\n\n        if (addPrompt === null) {\n            return Alert(`Code was canceled, took no uses away from you!`);\n        } \n\n        player.rngCode = v;\n\n        if(first + second === +addPrompt) {\n            player.worlds.add(actualQuarks);\n            addTimers('ascension', 60 * player.shopUpgrades.calculator3)\n            await Alert(`You were awarded ${actualQuarks + patreonBonus} quarks [${patreonBonus} from Patreon Boost]! ${ascensionTimer} You have ${remaining} uses of Add. You will gain 1 in ${timeToNext.toLocaleString(navigator.language)} seconds.`);\n        } else {\n            await Alert(`You guessed ${addPrompt}, but the answer was ${first + second}. You have ${remaining} uses of Add. You will gain 1 in ${timeToNext.toLocaleString(navigator.language)} seconds.`);\n        }\n\n    } else if (input === 'sub') { \n        const amount = 1 + window.crypto.getRandomValues(new Uint16Array(1))[0] % 16; // [1, 16]\n        const quarks = Number(player.worlds);\n        await Alert(`Thanks for using the \"sub\" code! I've taken away ${amount} quarks! :)`);        \n\n        if (quarks < amount) \n            await Alert(`I gave you ${amount - quarks} quarks so I could take ${amount} away.`);\n\n        player.worlds.sub(quarks < amount ? amount - quarks : amount);\n    } else if (input === 'gamble') {\n        if (\n            typeof player.skillCode === 'number' ||\n            typeof localStorage.getItem('saveScumIsCheating') === 'string'\n        ) {\n            if (\n                (Date.now() - player.skillCode) / 1000 < 3600 ||\n                (Date.now() - Number(localStorage.getItem('saveScumIsCheating'))) / 1000 < 3600\n            ) {\n                return el.textContent = 'Wait a little bit. We\\'ll get back to you when you\\'re ready to lose again.';\n            }\n        }\n\n        const confirmed = await Confirm(`Are you sure? The house always wins!`);\n        if (!confirmed)\n            return el.textContent = 'Scared? You should be!';\n\n        const bet = Number(await Prompt('How many quarks are you putting up?'));\n        if (Number.isNaN(bet) || bet <= 0)\n            return el.textContent = 'Can\\'t bet that!';\n\n        if (Number(player.worlds) < bet)\n            return el.textContent = 'Can\\'t bet what you don\\'t have.';\n\n        localStorage.setItem('saveScumIsCheating', Date.now().toString());\n        const dice = window.crypto.getRandomValues(new Uint8Array(1))[0] % 6 + 1; // [1, 6]\n        \n        if (dice === 1) {\n            const won = bet * .25; // lmao\n            player.worlds.add(won);\n\n            player.skillCode = Date.now();\n            return el.textContent = `You won. The Syncasino offers you a grand total of 25% of the pot! [+${won} quarks]`;\n        }\n        \n        player.worlds.sub(bet);\n        el.textContent = `Try again... you can do it! [-${bet} quarks]`;\n    } else if (input === 'time') {\n        if ((Date.now() - player.promoCodeTiming.time) / 1000 < 3600) {\n            return Confirm(`\n            If you imported a save, you cannot use this code for 15 minutes to prevent cheaters.\n            \n            Otherwise, you must wait an hour between each use.\n            `);\n        }\n\n        const random = Math.random() * 15000; // random time within 15 seconds\n        const start = Date.now();\n        await Confirm(\n            `Click the button within the next 15 seconds to test your luck!` + \n            ` If you click within 500 ms of a randomly generated time, you will win a prize!`\n        );\n        \n        const diff = Math.abs(Date.now() - (start + random));\n        player.promoCodeTiming.time = Date.now();\n\n        if (diff <= 500) {\n            player.worlds.add(500);\n            return Confirm(`You clicked at the right time! [+500 Quarkies]`);\n        } else {\n            return Confirm(`You didn't guess within the correct times, try again soon!`);\n        }\n    } else {\n        el.textContent = \"Your code is either invalid or already used. Try again!\"\n    }\n\n    saveSynergy(); // should fix refresh bug where you can continuously enter promocodes\n    Synergism.emit('promocode', input);\n\n    setTimeout(function () {\n        el.textContent = ''\n    }, 15000);\n}\n", "import { toggleAscStatPerSecond, toggleTabs, toggleSubTab, toggleBuyAmount, toggleAutoTesseracts, toggleSettings, toggleautoreset, toggleautobuytesseract, toggleShops, toggleAutoSacrifice, toggleautoenhance, toggleautofortify, updateRuneBlessingBuyAmount, toggleChallenges, toggleAutoChallengesIgnore, toggleAutoChallengeRun, updateAutoChallenge, toggleResearchBuy, toggleAutoResearch, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleMaxBuyCube, toggleCorruptionLevel, toggleAutoAscend, toggleShopConfirmation } from \"./Toggles\"\nimport { resetrepeat, updateAutoReset, updateTesseractAutoBuyAmount } from \"./Reset\"\nimport { player, resetCheck, saveSynergy } from \"./Synergism\"\nimport { boostAccelerator, buyAccelerator, buyMultiplier, buyProducer, buyCrystalUpgrades, buyParticleBuilding, buyTesseractBuilding, buyUpgrades, buyRuneBonusLevels } from \"./Buy\"\nimport { crystalupgradedescriptions, constantUpgradeDescriptions, buyConstantUpgrades, upgradedescriptions } from \"./Upgrades\"\nimport { buyAutobuyers } from \"./Automation\"\nimport { buyGenerator } from \"./Generators\"\nimport { achievementdescriptions } from \"./Achievements\"\nimport { displayRuneInformation, redeemShards } from \"./Runes\"\nimport { toggleTalismanBuy, buyTalismanResources, showTalismanPrices, buyTalismanLevels, buyTalismanEnhance, showRespecInformation, respecTalismanConfirm, respecTalismanCancel, changeTalismanModifier, updateTalismanCostDisplay, showTalismanEffect, showEnhanceTalismanPrices } from \"./Talismans\"\nimport { challengeDisplay, toggleRetryChallenges } from \"./Challenges\"\nimport { buyResearch, researchDescriptions } from \"./Research\"\nimport { antRepeat, sacrificeAnts, buyAntProducers, updateAntDescription, antUpgradeDescription, buyAntUpgrade } from \"./Ants\"\nimport { buyCubeUpgrades, cubeUpgradeDesc } from \"./Cubes\"\nimport { buyPlatonicUpgrades, createPlatonicDescription } from \"./Platonic\"\nimport { corruptionCleanseConfirm, corruptionDisplay } from \"./Corruptions\"\nimport { exportSynergism, updateSaveString, promocodes, importSynergism, resetGame } from \"./ImportExport\"\nimport { resetHistoryTogglePerSecond } from \"./History\"\nimport { resetShopUpgrades, shopDescriptions, buyShopUpgrades, useConsumable, shopData } from \"./Shop\"\nimport { Globals as G } from './Variables';\nimport { changeTabColor } from \"./UpdateHTML\"\nimport { hepteractDescriptions, hepteractToOverfluxOrbDescription, tradeHepteractToOverfluxOrb, overfluxPowderDescription, overfluxPowderWarp } from \"./Hepteracts\"\nimport { exitOffline, forcedDailyReset, timeWarp } from \"./Calculate\"\nimport type { OneToFive, Player } from \"./types/Synergism\"\nimport { testing } from './Config';\n\n/* STYLE GUIDE */\n/* \n    1) When adding event handlers please put it in respective tabs, in the correct subcategory. \n    Generally it would be preferred to put it in the lowest spot.\n    2) Please put any Mouseover events before Click events, if two event handlers are needed for an element.\n    3) Do *NOT* add event handlers to index.html. You may only add them in js/ts files!\n    4) Using for loops: be careful about passing arguments. If necessary, please use a currying function (See: Line 80-90)\n    5) If you are documenting a new tab or subtab, please comment out the order in which you add event handlers.\n    6) It is strongly recommended you only add event handlers in the generateEventHandlers() function, but if you are\n    creating new elements through js/ts you may do so outside of this file (E.g. corruptions)\n\n    Platonic and/or Khafra have the right to close PRs that do not conform to this style guide\n\n    If you are editing this script, please update the below time:\n    Last Edited: June 10, 2021 3:04 AM UTC-8 \n*/\n\nexport const generateEventHandlers = () => {\n    const ordinals = ['null','first','second','third','fourth','fifth','sixth','seventh','eighth'] as const\n\n    if (testing) {\n        const warp = document.createElement('button');\n        const dayReset = document.createElement('button');\n        warp.textContent = 'Click here to warp time! [TESTING ONLY]';\n        warp.setAttribute('style',`width: auto; height: 30px; border: 6px solid gold;`);\n        warp.addEventListener('click', () => timeWarp());\n        dayReset.textContent = 'Click to force a new day! [TESTING ONLY]';\n        dayReset.setAttribute('style',`width: auto; height: 30px; border: 6px solid orange;`);\n        dayReset.addEventListener('click', () => forcedDailyReset());\n\n        const consumables = document.getElementById('actualConsumables');\n        consumables.appendChild(warp);\n        consumables.appendChild(dayReset);\n    }\n// Offline Button\n    document.getElementById('exitOffline').addEventListener('click', () => exitOffline());\n// UPPER UI ELEMENTS\n    //Prelude: Cube/Tesseract/Hypercube/Platonic display UIs (Onclicks)\n    document.getElementById('ascCubeStats').addEventListener('click', () => toggleAscStatPerSecond(1))\n    document.getElementById('ascTessStats').addEventListener('click', () => toggleAscStatPerSecond(2))\n    document.getElementById('ascHyperStats').addEventListener('click', () => toggleAscStatPerSecond(3))\n    document.getElementById('ascPlatonicStats').addEventListener('click', () => toggleAscStatPerSecond(4))\n    document.getElementById('ascHepteractStats').addEventListener('click', () => toggleAscStatPerSecond(5))\n//Part 1: Reset Tiers\n//Onmouseover Events\n    document.getElementById('prestigebtn').addEventListener('mouseover', () => resetrepeat(\"prestige\"))\n    document.getElementById('transcendbtn').addEventListener('mouseover', () => resetrepeat(\"transcension\"))\n    document.getElementById('reincarnatebtn').addEventListener('mouseover', () => resetrepeat(\"reincarnation\"))\n    document.getElementById('acceleratorboostbtn').addEventListener('mouseover', () => resetrepeat(\"acceleratorBoost\"))\n    document.getElementById('challengebtn').addEventListener('mouseover', () => resetrepeat(\"transcensionChallenge\"))\n    document.getElementById('reincarnatechallengebtn').addEventListener('mouseover', () => resetrepeat(\"reincarnationChallenge\"))\n    document.getElementById('ascendChallengeBtn').addEventListener('mouseover', () => resetrepeat(\"ascensionChallenge\"))\n    document.getElementById('ascendbtn').addEventListener('mouseover', () => resetrepeat(\"ascension\"))\n//Onclick Events (this is particularly bad)\n    document.getElementById('prestigebtn').addEventListener('click', () => resetCheck('prestige'))\n    document.getElementById('transcendbtn').addEventListener('click', () => resetCheck('transcend'))\n    document.getElementById('reincarnatebtn').addEventListener('click', () => resetCheck('reincarnate'))\n    document.getElementById('acceleratorboostbtn').addEventListener('click', () => boostAccelerator())\n    document.getElementById('challengebtn').addEventListener('click', () => resetCheck('challenge',undefined,true))\n    document.getElementById('reincarnatechallengebtn').addEventListener('click', () => resetCheck('reincarnationchallenge',undefined,true))\n    document.getElementById('ascendChallengeBtn').addEventListener('click', () => resetCheck('ascensionChallenge')) \n    document.getElementById('ascendbtn').addEventListener('click', () => resetCheck('ascend'))\n//Part 2: Tabs (sucks)\n//Onmouseover Events\n    document.getElementById('buildingstab').addEventListener('click', () => toggleTabs('buildings'))\n    document.getElementById('upgradestab').addEventListener('click', () => toggleTabs('upgrades'))\n    document.getElementById('settingstab').addEventListener('click', () => toggleTabs('settings'))\n    document.getElementById('achievementstab').addEventListener('click', () => toggleTabs('achievements'))\n    document.getElementById('runestab').addEventListener('click', () => toggleTabs('runes'))\n    document.getElementById('challengetab').addEventListener('click', () => toggleTabs('challenges'))\n    document.getElementById('researchtab').addEventListener('click', () => toggleTabs('researches'))\n    document.getElementById('shoptab').addEventListener('click', () => toggleTabs('shop'))\n    document.getElementById('anttab').addEventListener('click', () => toggleTabs('ants'))\n    document.getElementById('cubetab').addEventListener('click', () => toggleTabs('cubes'))\n    document.getElementById('traitstab').addEventListener('click', () => toggleTabs('traits'))\n\n// BUILDINGS TAB\n//Part 1: Upper portion (Subtab toggle)\n    const buildingTypes = ['Coin','Diamond','Mythos','Particle','Tesseract']\n    for (let index = 0; index < buildingTypes.length; index++) {\n        document.getElementById(`switchTo${buildingTypes[index]}Building`).addEventListener('click', () => toggleSubTab(1, index))\n    \n    }\n//Part 2: Building Amount Toggles\n    const buildingTypesAlternate = ['coin','crystal','mythos','particle','tesseract','offering'] as const;\n    const buildingOrds = ['one','ten','hundred','thousand']\n    const buildingOrdsToNum = [1, 10, 100, 1000] as const;\n    for (let index = 0; index < buildingOrds.length; index++) {\n        for (let index2 = 0; index2 < buildingTypesAlternate.length; index2++) {\n            document.getElementById(buildingTypesAlternate[index2]+buildingOrds[index]).addEventListener('click', () => \n                toggleBuyAmount(\n                    buildingOrdsToNum[index],\n                    buildingTypesAlternate[index2]\n                )\n            );\n        }\n    }\n//Part 3: Building Purchasers + Upgrades\n    // Accelerator, Multiplier, Accelerator Boost\n    document.getElementById('buyaccelerator').addEventListener('click', () => buyAccelerator())\n    document.getElementById('buymultiplier').addEventListener('click', () => buyMultiplier())\n    document.getElementById('buyacceleratorboost').addEventListener('click', () => boostAccelerator())\n\n    // Coin, Diamond and Mythos Buildings\n    const buildingTypesAlternate2 = ['coin', 'diamond', 'mythos']\n    const buildingTypesAlternate3 = ['Coin', 'Diamonds', 'Mythos'] as const; //TODO: A cleaner way to implement this dumb shit\n    for (let index = 0; index < 3; index++){\n        for (let index2 = 1; index2 <= 5; index2++) {\n            document.getElementById(`buy${buildingTypesAlternate2[index]}${index2}`).addEventListener('click', () => \n                buyProducer(ordinals[index2 as OneToFive], buildingTypesAlternate3[index], index === 0 ? index2 : index2 * (index2+1) / 2))\n        }\n    }\n\n    // Crystal Upgrades (Mouseover and Onclick)\n    for (let index = 1; index <= 5; index++) {\n        \n        document.getElementById(`buycrystalupgrade${index}`).addEventListener('mouseover', () => crystalupgradedescriptions(index))\n        document.getElementById(`buycrystalupgrade${index}`).addEventListener('click', () => buyCrystalUpgrades(index))\n        \n    }\n    \n    // Particle Buildings\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`buyparticles${index+1}`).addEventListener('click', () => buyParticleBuilding(\n            index+1 as OneToFive,\n        ));\n    }\n\n    // Tesseract Buildings\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`buyTesseracts${index+1}`).addEventListener('click', () => buyTesseractBuilding(index+1 as OneToFive))\n        document.getElementById(`tesseractAutoToggle${index+1}`).addEventListener('click', () => toggleAutoTesseracts(index+1))\n        \n    }\n\n    // Constant Upgrades\n    for (let index = 0; index < 10; index++) {\n        \n        document.getElementById(`buyConstantUpgrade${index+1}`).addEventListener('mouseover', () => constantUpgradeDescriptions(index+1))\n        document.getElementById(`buyConstantUpgrade${index+1}`).addEventListener('click', () => buyConstantUpgrades(index+1))\n        \n    }\n\n//Part 4: Toggles\n    // I'm just addressing all global toggles here\n    for (let index = 0; index < 32; index++) {\n        document.getElementById(`toggle${index+1}`).addEventListener('click', () => toggleSettings(index))   \n    }\n    // Toggles auto reset type (between TIME and AMOUNT)\n    document.getElementById(\"prestigeautotoggle\").addEventListener('click', () => toggleautoreset(1))\n    document.getElementById(\"transcendautotoggle\").addEventListener('click', () => toggleautoreset(2))\n    document.getElementById(\"reincarnateautotoggle\").addEventListener('click', () => toggleautoreset(3))\n    document.getElementById(\"ascensionAutoToggle\").addEventListener('click', () => toggleautoreset(4))\n    // Toggles auto reset amount required to trigger\n    document.getElementById(\"prestigeamount\").addEventListener('blur', () => updateAutoReset(1))\n    document.getElementById(\"transcendamount\").addEventListener('blur', () => updateAutoReset(2))\n    document.getElementById(\"reincarnationamount\").addEventListener('blur', () => updateAutoReset(3))\n    document.getElementById(\"ascensionAmount\").addEventListener('blur', () => updateAutoReset(4))\n    document.getElementById(\"autoAntSacrificeAmount\").addEventListener('blur', () => updateAutoReset(5))\n    // Tesseract-specific of the above. I don't know why I didn't standardize names here.\n    document.getElementById(\"tesseractautobuytoggle\").addEventListener('click', () => toggleautobuytesseract())\n    document.getElementById(\"tesseractAmount\").addEventListener('blur', () => updateTesseractAutoBuyAmount())\n\n// UPGRADES TAB\n// For all upgrades in the Upgrades Tab (125) count, we have the same mouseover event. So we'll work on those first.\n    for (let index = 1; index <= 125; index++) {\n\n        //Onmouseover events ()\n        document.getElementById(`upg${index}`).addEventListener('mouseover', () => upgradedescriptions(index));\n\n        console.log('Successfully added \"Onmouseover\" event to upgrades 1-120!')\n    }\n\n// The first 80 upgrades (Coin-Particle upgrade) are annoying since there are four cases based on which resource is needed.\n//Note: this part can almost certainly be improved, this was just the quickest implementation\n    const resourceTypes = ['coin', 'prestige', 'transcend', 'reincarnation'] as const; //Upgrades 1-20 are coin, 21-40 prestige, 41-60 transcend, 61-80 reincarnation\n    //End of shit portion (This is used in the following for loop though)\n    for (let index = 1; index <= 80; index++) {\n        const resourceType = resourceTypes[Math.floor((index - 1)/20)];\n\n        //Onclick events (Regular upgrades 1-80)\n        document.getElementById(`upg${index}`).addEventListener('click', () => buyUpgrades(resourceType,index));\n\n        console.log('Successfully added \"Onmouseover\" event to upgrades 1-120!')\n    }\n\n// Autobuyer (20 count, ID 81-100) and Generator (20 count, ID 101-120) Upgrades have a unique onclick\n    for (let index = 1; index <= 20; index++) {\n\n        //Onclick events (Autobuyer upgrades)\n        document.getElementById(`upg${index + 80}`).addEventListener('click', () => buyAutobuyers(index));\n        console.log('Successfully added \"Onclick\" event to Autobuyer upgrade!')\n    \n    }\n    for (let index = 1; index <= 20; index++) {\n\n        //Onclick events (Generator Upgrades)\n        document.getElementById(`upg${index + 100}`).addEventListener('click', () => buyGenerator(index));\n        console.log('Successfully added \"Onclick\" event to Generator upgrade!')\n    \n    }\n\n// Upgrades 121-125 are upgrades similar to the first 80.\n    for (let index = 1; index <= 5; index++) {\n\n        //Onclick events (Upgrade 121-125)\n        document.getElementById(`upg${index + 120}`).addEventListener('click', () => buyUpgrades('coin',index));\n        console.log('Successfully added \"Onclick\" event to Generator upgrade!')\n    \n    }\n\n// Next part: Shop-specific toggles\n    document.getElementById('coinAutoUpgrade').addEventListener('click', () => toggleShops('coin'))\n    document.getElementById('prestigeAutoUpgrade').addEventListener('click', () => toggleShops('prestige'))\n    document.getElementById('transcendAutoUpgrade').addEventListener('click', () => toggleShops('transcend'))\n    document.getElementById('generatorsAutoUpgrade').addEventListener('click', () => toggleShops('generators'))\n    document.getElementById('reincarnateAutoUpgrade').addEventListener('click', () => toggleShops('reincarnate'))\n\n// ACHIEVEMENTS TAB\n// Easy. There are 280 achievements, 280 mouseovers.\n    for (let index = 1; index <= 280; index++) {\n    \n        //Onmouseover events (Achievement descriptions)\n        document.getElementById(`ach${index}`).addEventListener('mouseover', () => achievementdescriptions(index));\n    \n    }\n\n// RUNES TAB [And all corresponding subtabs]\n// Part 0: Upper UI portion\n    //Auto sacrifice toggle button\n    document.getElementById('toggleautosacrifice').addEventListener('click', () => toggleAutoSacrifice(0))\n    //Toggle subtabs of Runes tab\n    for (let index = 0; index < 4; index++) {\n        \n        document.getElementById(`toggleRuneSubTab${index+1}`).addEventListener('click', () => toggleSubTab(4, index))\n    \n    }\n\n// Part 1: Runes Subtab\n    for (let index = 0; index < 7; index++) {\n        \n        document.getElementById(`rune${index+1}`).addEventListener('mouseover', () => displayRuneInformation(index+1))\n        document.getElementById(`rune${index+1}`).addEventListener('click', () => toggleAutoSacrifice(index+1))\n\n        document.getElementById(`activaterune${index+1}`).addEventListener('mouseover', () => displayRuneInformation(index+1))\n        document.getElementById(`activaterune${index+1}`).addEventListener('click', () => redeemShards(index+1))\n        \n    }\n\n// Part 2: Talismans Subtab\n    const talismanBuyPercents = [10, 25, 50, 100]\n    const talismanBuyPercentsOrd = ['Ten', 'TwentyFive', 'Fifty', 'Hundred']\n\n    for (let index = 0; index < talismanBuyPercents.length; index++) {\n    \n        document.getElementById(`talisman${talismanBuyPercentsOrd[index]}`).addEventListener('click', () => toggleTalismanBuy(talismanBuyPercents[index]))\n    \n    }\n\n    document.getElementById('toggleautoenhance').addEventListener('click', () => toggleautoenhance())\n    document.getElementById('toggleautofortify').addEventListener('click', () => toggleautofortify())\n\n    //Talisman Fragments/Shards\n    const talismanItemNames = ['shard','commonFragment','uncommonFragment','rareFragment','epicFragment','legendaryFragment','mythicalFragment'] as const;\n    for (let index = 0; index < talismanItemNames.length; index++) {\n        \n        document.getElementById(`buyTalismanItem${index+1}`).addEventListener('mouseover', () => updateTalismanCostDisplay(talismanItemNames[index]))\n        document.getElementById(`buyTalismanItem${index+1}`).addEventListener('click', () => buyTalismanResources(talismanItemNames[index]))\n\n    }\n\n    for (let index = 0; index < 7; index++) {\n        \n        document.getElementById(`talisman${index+1}`).addEventListener('click', () => showTalismanEffect(index+1))\n        document.getElementById(`leveluptalisman${index+1}`).addEventListener('mouseover', () => showTalismanPrices(index+1))\n        document.getElementById(`leveluptalisman${index+1}`).addEventListener('click', () => buyTalismanLevels(index+1))\n        document.getElementById(`enhancetalisman${index+1}`).addEventListener('mouseover', () => showEnhanceTalismanPrices(index+1))\n        document.getElementById(`enhancetalisman${index+1}`).addEventListener('click', () => buyTalismanEnhance(index+1))\n        document.getElementById(`respectalisman${index+1}`).addEventListener('click', () => showRespecInformation(index+1))\n\n    }\n\n    document.getElementById('respecAllTalismans').addEventListener('click', () => showRespecInformation(8))\n    document.getElementById('confirmTalismanRespec').addEventListener('click', () => respecTalismanConfirm(G['talismanRespec']))\n    document.getElementById('cancelTalismanRespec').addEventListener('click', () => respecTalismanCancel(G['talismanRespec']))\n\n    for (let index = 0; index < 5; index++) {\n        \n        document.getElementById(`talismanRespecButton${index+1}`).addEventListener('click', () => changeTalismanModifier(index+1))\n        \n    }\n    \n//Part 3: Blessings and Spirits\n    for (let index = 0; index < 5; index++) {\n\n        document.getElementById(`runeBlessingPurchase${index+1}`).addEventListener('click', () => buyRuneBonusLevels('Blessings', index+1))\n        document.getElementById(`runeSpiritPurchase${index+1}`).addEventListener('click', () => buyRuneBonusLevels('Spirits', index+1))\n\n    }\n    document.getElementById('buyRuneBlessingInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(1))\n    document.getElementById('buyRuneSpiritInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(2))\n\n// CHALLENGES TAB\n//Part 1: Challenges\n    // Challenge 1-15 buttons\n    for (let index = 0; index < 15; index++) {\n    \n        document.getElementById(`challenge${index+1}`).addEventListener('click', () => challengeDisplay(index+1))\n    \n    }\n//Part 2: QoL Buttons\n    // Individual buttons (Start, Retry)\n    document.getElementById('startChallenge').addEventListener('click', () => toggleChallenges(G['triggerChallenge'], false))\n    document.getElementById('retryChallenge').addEventListener('click', () => toggleRetryChallenges())\n    // Autochallenge buttons\n    document.getElementById('toggleAutoChallengeIgnore').addEventListener('click', () => toggleAutoChallengesIgnore(G['triggerChallenge']))\n    document.getElementById('toggleAutoChallengeStart').addEventListener('click', () => toggleAutoChallengeRun())\n    document.getElementById('startAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(1))\n    document.getElementById('exitAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(2))\n    document.getElementById('enterAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(3))\n\n// RESEARCH TAB\n//Part 1: Researches\n// There are 200 researches, ideally in rewrite 200 would instead be length of research list/array\n    for (let index = 1; index < 200; index++) {\n\n        //Eliminates listeners on index.html 1404-1617\n        document.getElementById(`res${index}`).addEventListener('click', () => buyResearch(index));\n        document.getElementById(`res${index}`).addEventListener('mouseover', () => researchDescriptions(index));    \n\n        console.log('Successfully added \"Onmouseover\" and \"Onclick\" events to researches 1-199!')\n    }\n    //Research 200 is special, uses more params\n    document.getElementById(`res200`).addEventListener('click', () => buyResearch(200, false, 0.01));\n    document.getElementById(`res200`).addEventListener('mouseover', () => researchDescriptions(200, false, 0.01));\n    console.log('Successfully added \"Onmouseover\" and \"Onclick\" events to research 200!')\n\n//Part 2: QoL buttons\n    document.getElementById('toggleresearchbuy').addEventListener('click', () => toggleResearchBuy())\n    document.getElementById('toggleautoresearch').addEventListener('click', () => toggleAutoResearch())\n\n// ANTHILL TAB\n//Part 1: Ant Producers (Tiers 1-8)\nconst antProducerCostVals = ['null','1e700','3','100','10000','1e12','1e36','1e100','1e300']\nfor (let index = 1; index <= 8 ; index++) {\n\n    //Onmouse Events\n    document.getElementById(`anttier${index}`).addEventListener('mouseover', () => updateAntDescription(index))\n    document.getElementById(`anttier${index}`).addEventListener('mouseover', () => antRepeat(index))\n    //Onclick Events\n    document.getElementById(`anttier${index}`).addEventListener('click', () => buyAntProducers(\n        ordinals[index] as Parameters<typeof buyAntProducers>[0],\n        antProducerCostVals[index],index)\n    );\n}\n//Part 2: Ant Upgrades (1-12)\nconst antUpgradeCostVals = ['null', '100', '100', '1000', '1000', '1e5', '1e6', '1e8', '1e11', '1e15', '1e20', '1e40', '1e100']\nfor (let index = 1; index <= 12; index++) {\n\n    //Onmouse Event\n    document.getElementById(`antUpgrade${index}`).addEventListener('mouseover', () => antUpgradeDescription(index))\n    //Onclick Event\n    document.getElementById(`antUpgrade${index}`).addEventListener('click', () => buyAntUpgrade(antUpgradeCostVals[index], false, index))\n    \n}\n//Part 3: Sacrifice\n    document.getElementById('antSacrifice').addEventListener('click', () => sacrificeAnts())\n\n//Part 4: QoL Buttons\n    document.getElementById('toggleAntMax').addEventListener('click', () => toggleAntMaxBuy())\n    document.getElementById('toggleAutoSacrificeAnt').addEventListener('click', () => toggleAntAutoSacrifice(0))\n    document.getElementById('autoSacrificeAntMode').addEventListener('click', () => toggleAntAutoSacrifice(1))\n\n// WOW! Cubes Tab\n//Part 0: Subtab UI\n    for (let index = 0; index < 7; index++) {\n    \n        document.getElementById(`switchCubeSubTab${index+1}`).addEventListener('click', () => toggleSubTab(8, index))\n        \n    }\n\n//Part 1: Cube Upgrades\n    // #1-49\n    for (let index = 0; index < 49; index++) {\n    \n        document.getElementById(`cubeUpg${index+1}`).addEventListener('mouseover', () => cubeUpgradeDesc(index+1))\n        document.getElementById(`cubeUpg${index+1}`).addEventListener('click', () => buyCubeUpgrades(index+1))\n    \n    }\n    // Cube Upgrade #50\n    document.getElementById('cubeUpg50').addEventListener('mouseover', () => cubeUpgradeDesc(50,0.01))\n    document.getElementById('cubeUpg50').addEventListener('click', () => buyCubeUpgrades(50,0.01))\n\n    // Toggle\n    document.getElementById('toggleCubeBuy').addEventListener('click', () => toggleMaxBuyCube())\n\n//Part 2: Cube Opening Buttons\n    //Wow Cubes\n    document.getElementById('open1Cube').addEventListener('click', () => player.wowCubes.open(1, false))\n    document.getElementById('open20Cube').addEventListener('click', () => player.wowCubes.open(20, false))\n    document.getElementById('open1000Cube').addEventListener('click', () => player.wowCubes.open(1000, false))\n    document.getElementById('openCustomCube').addEventListener('click', () => player.wowCubes.openCustom());\n    document.getElementById('openMostCube').addEventListener('click', () => player.wowCubes.open(1, true))\n    //Wow Tesseracts\n    document.getElementById('open1Tesseract').addEventListener('click', () => player.wowTesseracts.open(1, false))\n    document.getElementById('open20Tesseract').addEventListener('click', () => player.wowTesseracts.open(20, false))\n    document.getElementById('open1000Tesseract').addEventListener('click', () => player.wowTesseracts.open(1000, false))\n    document.getElementById('openCustomTesseract').addEventListener('click', () => player.wowTesseracts.openCustom());\n    document.getElementById('openMostTesseract').addEventListener('click', () => player.wowTesseracts.open(1, true))\n    //Wow Hypercubes\n    document.getElementById('open1Hypercube').addEventListener('click', () => player.wowHypercubes.open(1, false))\n    document.getElementById('open20Hypercube').addEventListener('click', () => player.wowHypercubes.open(20, false))\n    document.getElementById('open1000Hypercube').addEventListener('click', () => player.wowHypercubes.open(1000, false))\n    document.getElementById('openCustomHypercube').addEventListener('click', () => player.wowHypercubes.openCustom());\n    document.getElementById('openMostHypercube').addEventListener('click', () => player.wowHypercubes.open(1, true))\n    //Wow Platonic Cubes\n    document.getElementById('open1PlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1, false))\n    document.getElementById('open40kPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(4e4, false))\n    document.getElementById('open1mPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1e6, false))\n    document.getElementById('openCustomPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.openCustom());\n    document.getElementById('openMostPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1, true))\n\n//Part 3: Platonic Upgrade Section\nconst platonicUpgrades = document.getElementsByClassName('platonicUpgradeImage')\nfor (let index = 0; index < platonicUpgrades.length; index++) {\n\n    platonicUpgrades[index].addEventListener('mouseover', () => createPlatonicDescription(index+1))\n    platonicUpgrades[index].addEventListener('click', () => buyPlatonicUpgrades(index+1))\n\n}\n\n//Part 4: Hepteract Subtab\ndocument.getElementById('chronosHepteract').addEventListener('mouseover', () => hepteractDescriptions('chronos'))\ndocument.getElementById('hyperrealismHepteract').addEventListener('mouseover', () => hepteractDescriptions('hyperrealism'))\ndocument.getElementById('quarkHepteract').addEventListener('mouseover', () => hepteractDescriptions('quark'))\ndocument.getElementById('challengeHepteract').addEventListener('mouseover', () => hepteractDescriptions('challenge'))\ndocument.getElementById('abyssHepteract').addEventListener('mouseover', () => hepteractDescriptions('abyss'))\ndocument.getElementById('acceleratorHepteract').addEventListener('mouseover', () => hepteractDescriptions('accelerator'))\ndocument.getElementById('acceleratorBoostHepteract').addEventListener('mouseover', () => hepteractDescriptions('acceleratorBoost'))\ndocument.getElementById('multiplierHepteract').addEventListener('mouseover', () => hepteractDescriptions('multiplier'))\n\n\ndocument.getElementById('chronosHepteractCraft').addEventListener('click', () => player.hepteractCrafts.chronos.craft())\ndocument.getElementById('hyperrealismHepteractCraft').addEventListener('click', () => player.hepteractCrafts.hyperrealism.craft())\ndocument.getElementById('quarkHepteractCraft').addEventListener('click', () => player.hepteractCrafts.quark.craft())\ndocument.getElementById('challengeHepteractCraft').addEventListener('click', () => player.hepteractCrafts.challenge.craft())\ndocument.getElementById('abyssHepteractCraft').addEventListener('click', () => player.hepteractCrafts.abyss.craft())\ndocument.getElementById('acceleratorHepteractCraft').addEventListener('click', () => player.hepteractCrafts.accelerator.craft())\ndocument.getElementById('acceleratorBoostHepteractCraft').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.craft())\ndocument.getElementById('multiplierHepteractCraft').addEventListener('click', () => player.hepteractCrafts.multiplier.craft())\n\ndocument.getElementById('chronosHepteractCap').addEventListener('click', () => player.hepteractCrafts.chronos.expand())\ndocument.getElementById('hyperrealismHepteractCap').addEventListener('click', () => player.hepteractCrafts.hyperrealism.expand())\ndocument.getElementById('quarkHepteractCap').addEventListener('click', () => player.hepteractCrafts.quark.expand())\ndocument.getElementById('challengeHepteractCap').addEventListener('click', () => player.hepteractCrafts.challenge.expand())\ndocument.getElementById('abyssHepteractCap').addEventListener('click', () => player.hepteractCrafts.abyss.expand())\ndocument.getElementById('acceleratorHepteractCap').addEventListener('click', () => player.hepteractCrafts.accelerator.expand())\ndocument.getElementById('acceleratorBoostHepteractCap').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.expand())\ndocument.getElementById('multiplierHepteractCap').addEventListener('click', () => player.hepteractCrafts.multiplier.expand())\n\ndocument.getElementById('hepteractToQuark').addEventListener('mouseover', () => hepteractToOverfluxOrbDescription())\ndocument.getElementById('hepteractToQuarkTrade').addEventListener('click', () => tradeHepteractToOverfluxOrb())\ndocument.getElementById('overfluxPowder').addEventListener('mouseover', () => overfluxPowderDescription())\ndocument.getElementById('powderDayWarp').addEventListener('click', () => overfluxPowderWarp())\n// CORRUPTION TAB\n//Part 0: Subtabs\ndocument.getElementById('corrStatsBtn').addEventListener('click', () => toggleSubTab(9, 0))\ndocument.getElementById('corrLoadoutsBtn').addEventListener('click', () => toggleSubTab(9, 1))\n\n//Part 1: Displays\ndocument.getElementById('corruptionDisplays').addEventListener('click', () => corruptionDisplay(10))\ndocument.getElementById('corruptionCleanse').addEventListener('click', () => corruptionCleanseConfirm())\ndocument.getElementById('corruptionCleanseConfirm').addEventListener('click', () => toggleCorruptionLevel(10, 999))\n\n//Extra toggle\ndocument.getElementById('ascensionAutoEnable').addEventListener('click', () => toggleAutoAscend())\n\n// SETTNGS TAB\n// Part 0: Subtabs\nconst settingSubTabs = Array.from<HTMLElement>(document.querySelectorAll('button[id^=\"switchSettingSubTab\"]'));\nfor (const subtab of settingSubTabs) {\n    subtab.addEventListener('click', () => toggleSubTab(-1, settingSubTabs.indexOf(subtab)));\n}\n\n// Various functions\n/*Export Files*/ document.getElementById('exportgame').addEventListener('click', () => exportSynergism())\n/*Update name of File*/ \ndocument.getElementById('saveStringInput').addEventListener('blur', e => updateSaveString(<HTMLInputElement>e.target));\n/*Save Game Button*/ document.getElementById('savegame').addEventListener('click', () => saveSynergy(true))\n/*Delete Save Button*/ document.getElementById('deleteGame').addEventListener('click', () => resetGame())\n/*Submit Stats [Note: will eventually become obsolete if kong closes]*/ // document.getElementById('submitstats').addEventListener('click', () => submitStats()) \n/*Promotion Codes*/ document.getElementById('promocodes').addEventListener('click', () => promocodes())\n/*Toggle Ascension Per-Second Setting*/ document.getElementById('historyTogglePerSecondButton').addEventListener('click', () => resetHistoryTogglePerSecond())\n\n// SHOP TAB\n\n/*\n\nTODO: Fix this entire tab it's utter shit\n\n*/\n\n// Part 1: The Settings\n/*Respec The Upgrades*/ document.getElementById('resetShopUpgrades').addEventListener('click', () => resetShopUpgrades())\n/*Toggle Shop Confirmations*/ document.getElementById('toggleConfirmShop').addEventListener('click', () => toggleShopConfirmation())\n\n// Part 2: Potions\n/*Offering Potion*/\n    document.getElementById('offeringPotions').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"))\n    document.getElementById('offeringpotionowned').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"))\n    document.getElementById('buyofferingpotion').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"))\n    document.getElementById('useofferingpotion').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"))\n    document.getElementById('buyofferingpotion').addEventListener('click', () => buyShopUpgrades(\"offeringPotion\"))\n    document.getElementById('useofferingpotion').addEventListener('click', () => useConsumable(\"offeringPotion\"))\n/*Obtainium Potion*/\n    document.getElementById('obtainiumPotions').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"))\n    document.getElementById('obtainiumpotionowned').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"))\n    document.getElementById('buyobtainiumpotion').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"))\n    document.getElementById('useobtainiumpotion').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"))\n    document.getElementById('buyobtainiumpotion').addEventListener('click', () => buyShopUpgrades(\"obtainiumPotion\"))\n    document.getElementById('useobtainiumpotion').addEventListener('click', () => useConsumable(\"obtainiumPotion\"))\n/* Permanent Upgrade Images */\n    const shopKeys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\n    for (const key of shopKeys) {\n        const shopItem = shopData[key]\n        if (shopItem.type === 'upgrade') {\n            console.log(shopItem.description)\n            document.getElementById(`${key}`).addEventListener('mouseover', () => shopDescriptions(key))\n            document.getElementById(`${key}Level`).addEventListener('mouseover', () => shopDescriptions(key))\n            document.getElementById(`${key}Button`).addEventListener('mouseover', () => shopDescriptions(key))\n            document.getElementById(`${key}Button`).addEventListener('click', () => buyShopUpgrades(key))\n        }\n    }\n\n    const tabs = document.querySelectorAll<HTMLElement>('#tabrow > li');\n    tabs.forEach(b => b.addEventListener('click', () => changeTabColor()));\n\n    // Import button\n    document.getElementById('importfile').addEventListener('change', async e => {\n        const element = e.target as HTMLInputElement;\n        const file = element.files[0];\n        let save = '';\n        // https://developer.mozilla.org/en-US/docs/Web/API/Blob/text\n        // not available in (bad) browsers like Safari 11\n        if (typeof Blob.prototype.text === 'function') {\n            save = await file.text();\n        } else {\n            const reader = new FileReader();\n            reader.readAsText(file);\n            const text = await new Promise<string>(res => {\n                reader.addEventListener('load', () => res(reader.result.toString()));\n            });\n            \n            save = text;\n        }\n\n        element.value = null;\n\n        return importSynergism(save);\n    });\n}\n", "import { player, format, resetCheck, blankSave} from './Synergism';\nimport { testing } from './Config';\nimport { Player } from './types/Synergism';\nimport Decimal from 'break_infinity.js';\nimport { calculateMaxRunes, calculateTimeAcceleration } from './Calculate';\nimport { buyResearch } from './Research';\nimport { c15RewardUpdate } from './Statistics';\nimport { LegacyShopUpgrades } from './types/LegacySynergism';\nimport { padArray } from './Utility';\nimport { AbyssHepteract, AcceleratorBoostHepteract, AcceleratorHepteract, ChallengeHepteract, ChronosHepteract, createHepteract, HyperrealismHepteract, MultiplierHepteract, QuarkHepteract } from './Hepteracts';\nimport { WowCubes, WowHypercubes, WowPlatonicCubes, WowTesseracts } from './CubeExperimental';\nimport { Alert } from './UpdateHTML';\n\n/**\n * Given player data, it checks, on load if variables are undefined\n * or set incorrectly, and corrects it. This should be where all new\n * variable declarations for `player` should go!\n * @param data \n */\nexport const checkVariablesOnLoad = (data: Player) => {\n    if (player.currentChallenge.transcension === undefined) {\n        player.currentChallenge = {\n            transcension: 0,\n            reincarnation: 0,\n            ascension: 0,\n        }\n    }\n\n    data.shopUpgrades ??= { ...blankSave.shopUpgrades };\n    data.ascStatToggles ??= { ...blankSave.ascStatToggles };\n\n    if (typeof data.promoCodeTiming === 'object') {\n        for (const key of Object.keys(data.promoCodeTiming)) {\n            const k = key as keyof typeof data.promoCodeTiming;\n            player.promoCodeTiming[k] = data.promoCodeTiming[k];\n        }\n    } else {\n        player.promoCodeTiming.time = Date.now() - (60 * 1000 * 15);\n    }\n\n    // backwards compatibility for v1.0101 (and possibly older) saves\n    if (!Array.isArray(data.challengecompletions)) {\n        player.challengecompletions = Object.values(data.challengecompletions);\n        padArray(player.challengecompletions, 0, blankSave.challengecompletions.length);\n    }\n\n    // backwards compatibility for v1.0101 (and possibly older) saves\n    if (!Array.isArray(data.highestchallengecompletions)) {\n        // if highestchallengecompletions is every added onto, this will need to be padded.\n        player.highestchallengecompletions = Object.values(data.highestchallengecompletions);\n    }\n\n    if (data.wowCubes === undefined) {\n        player.wowCubes = new WowCubes();\n        player.wowTesseracts = new WowTesseracts(0);\n        player.wowHypercubes = new WowHypercubes(0);\n        player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    }\n    if (data.shoptoggles.reincarnate === undefined) {\n        player.shoptoggles.reincarnate = true\n    }\n    if (data.ascendBuilding1 === undefined) {\n        player.ascendBuilding1 = {\n            cost: 1,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        }\n        player.ascendBuilding2 = {\n            cost: 10,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        }\n        player.ascendBuilding3 = {\n            cost: 100,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        }\n        player.ascendBuilding4 = {\n            cost: 1000,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        }\n        player.ascendBuilding5 = {\n            cost: 10000,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        }\n    }\n    if (data.tesseractbuyamount === undefined) {\n        player.tesseractbuyamount = 1\n    }\n    if (data.tesseractBlessings === undefined) {\n        player.tesseractBlessings = {\n            accelerator: 0,\n            multiplier: 0,\n            offering: 0,\n            runeExp: 0,\n            obtainium: 0,\n            antSpeed: 0,\n            antSacrifice: 0,\n            antELO: 0,\n            talismanBonus: 0,\n            globalSpeed: 0\n        }\n        player.hypercubeBlessings = {\n            accelerator: 0,\n            multiplier: 0,\n            offering: 0,\n            runeExp: 0,\n            obtainium: 0,\n            antSpeed: 0,\n            antSacrifice: 0,\n            antELO: 0,\n            talismanBonus: 0,\n            globalSpeed: 0\n        }\n    }\n    if (data.prototypeCorruptions === undefined) {\n        player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    }\n    if (data.constantUpgrades === undefined) {\n        player.ascendShards = new Decimal(\"0\")\n        player.constantUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    }\n    if (data.roombaResearchIndex === undefined) {\n        player.roombaResearchIndex = 0;\n    }\n    if (data.history === undefined) {\n        player.history = { ants: [], ascend: [], reset: [] };\n        player.historyCountMax = 10;\n    }\n    if (data.autoChallengeRunning === undefined) {\n        player.autoChallengeRunning = false\n        player.autoChallengeIndex = 1\n        player.autoChallengeToggles = [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false]\n        player.autoChallengeStartExponent = 10\n        player.autoChallengeTimer = {\n            start: 10,\n            exit: 2,\n            enter: 2\n        }\n    }\n    if (data.autoAscend === undefined) {\n        player.autoAscend = false;\n        player.autoAscendMode = \"c10Completions\";\n        player.autoAscendThreshold = 1;\n    }\n    if (data.runeBlessingLevels === undefined) {\n        player.runeBlessingLevels = [0, 0, 0, 0, 0, 0];\n        player.runeSpiritLevels = [0, 0, 0, 0, 0, 0];\n        player.runeBlessingBuyAmount = 0;\n        player.runeSpiritBuyAmount = 0;\n    }\n\n    if (data.autoTesseracts === undefined) {\n        player.autoTesseracts = [false, false, false, false, false, false]\n    }\n\n    if (player.prototypeCorruptions[0] === null || player.prototypeCorruptions[0] === undefined) {\n        player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    }\n    if (player.corruptionLoadouts === undefined) {\n        player.corruptionLoadouts = {\n            1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        };\n        player.corruptionShowStats = true\n    }\n\n    for (let i = 0; i <= 4; i++) {\n        if (player.runelevels[i] > calculateMaxRunes(i + 1)) {\n            player.runelevels[i] = 0\n        }\n    }\n\n    if (data.shopUpgrades?.challengeExtension === undefined) {\n        player.shopUpgrades.challengeExtension = 0;\n        player.shopUpgrades.challengeTome = 0;\n        player.shopUpgrades.seasonPass = 0;\n        player.shopUpgrades.cubeToQuark = 0;\n        player.shopUpgrades.tesseractToQuark = 0;\n        player.shopUpgrades.hypercubeToQuark = 0;\n    }\n    if (data.cubeUpgrades === undefined || data.cubeUpgrades[19] === 0 || player.cubeUpgrades[19] === 0) {\n        for (let i = 121; i <= 125; i++) {\n            player.upgrades[i] = 0\n        }\n    }\n\n    // assign the save's toggles to the player toggles\n    // will overwrite player.toggles keys that exist on both objects,\n    // but new keys will default to the values on the player object\n    Object.assign(player.toggles, data.toggles);\n    \n    if (data.ascensionCount === 0) {\n        player.toggles[31] = true;\n        player.toggles[32] = true;\n    }\n\n    if (data.dayCheck === undefined) {\n        player.dayCheck = null;\n        player.dayTimer = 0;\n        player.cubeQuarkDaily = 0;\n        player.tesseractQuarkDaily = 0;\n        player.hypercubeQuarkDaily = 0;\n        player.cubeOpenedDaily = 0;\n        player.tesseractOpenedDaily = 0;\n        player.hypercubeOpenedDaily = 0;\n    }\n    if (data.loadedOct4Hotfix === undefined || player.loadedOct4Hotfix === false) {\n        player.loadedOct4Hotfix = true;\n        // Only process refund if the save's researches array is already updated to v2\n        if (player.researches.length > 200) {\n            player.researchPoints += player.researches[200] * 1e56;\n            player.researches[200] = 0;\n            buyResearch(200, true, 0.01);\n            console.log('Refunded 8x25, and gave you ' + format(player.researches[200]) + ' levels of new cost 8x25. Sorry!')\n            player.researchPoints += player.researches[195] * 1e60;\n            player.worlds.add(250 * player.researches[195]);\n            player.researches[195] = 0;\n            console.log('Refunded 8x20 and gave 250 quarks for each level you had prior to loading up the game.')\n            player.wowCubes.add(player.cubeUpgrades[50] * 5e10);\n            player.cubeUpgrades[50] = 0\n            console.log('Refunded w5x10. Enjoy!')\n        }\n    }\n\n    if (player.ascStatToggles === undefined || data.ascStatToggles === undefined) {\n        player.ascStatToggles = {\n            1: false,\n            2: false,\n            3: false,\n            4: false\n        };\n    }\n    if (player.ascStatToggles[4] === undefined || !('ascStatToggles' in data) || data.ascStatToggles[4] === undefined) {\n        player.ascStatToggles[4] = false;\n    }\n\n    if (player.usedCorruptions[0] > 0 ||\n        (Array.isArray(data.usedCorruptions) && data.usedCorruptions[0] > 0)) {\n        player.prototypeCorruptions[0] = 0\n        player.usedCorruptions[0] = 0\n    }\n    if (player.antSacrificeTimerReal === undefined) {\n        player.antSacrificeTimerReal = player.antSacrificeTimer / calculateTimeAcceleration();\n    }\n    if (player.subtabNumber === undefined || data.subtabNumber === undefined) {\n        player.subtabNumber = 0;\n    }\n    if (data.wowPlatonicCubes === undefined) {\n        player.wowPlatonicCubes = new WowPlatonicCubes(0);\n        player.wowAbyssals = 0;\n    }\n    if (data.platonicBlessings === undefined) {\n        const ascCount = player.ascensionCount\n        if (player.currentChallenge.ascension !== 0 && player.currentChallenge.ascension !== 15) {\n            resetCheck('ascensionChallenge', false, true);\n        }\n        if (player.currentChallenge.ascension === 15) {\n            resetCheck('ascensionChallenge', false, true);\n            player.challenge15Exponent = 0;\n            c15RewardUpdate();\n        }\n        player.ascensionCount = ascCount\n        player.challengecompletions[15] = 0;\n        player.highestchallengecompletions[15] = 0;\n        player.platonicBlessings = {\n            cubes: 0,\n            tesseracts: 0,\n            hypercubes: 0,\n            platonics: 0,\n            hypercubeBonus: 0,\n            taxes: 0,\n            scoreBonus: 0,\n            globalSpeed: 0,\n        }\n        player.platonicUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        player.challenge15Exponent = 0\n        player.loadedNov13Vers = false;\n    }\n    if (player.researches.includes(null)) { // Makes sure any nulls in the research array are fixed\n        for (let i = 0; i < 200; i++) {\n            player.researches[i + 1] = player.researches[i + 1] || 0;\n        }\n    }\n    if (data.loadedDec16Vers === false || data.loadedDec16Vers === undefined){\n        if (player.currentChallenge.ascension === 15) {\n            resetCheck('ascensionChallenge', false, true);\n            player.challenge15Exponent = 0;\n            c15RewardUpdate();\n        }\n        player.challenge15Exponent = 0;\n        c15RewardUpdate();\n        player.loadedDec16Vers = true;\n    }\n\n    // in old versions of the game (pre 2.5.0), the import function will only work\n    // if this variable = \"YES!\". Don't ask Platonic why.\n    if (typeof data.exporttest === 'string') {\n        player.exporttest = !testing;\n    } else {\n        player.exporttest = data.exporttest;\n    }\n\n    const shop = data.shopUpgrades as LegacyShopUpgrades | Player['shopUpgrades'];\n    if (shop && 'offeringTimerLevel' in shop) {\n        player.shopUpgrades = {\n            offeringPotion: shop.offeringPotion,\n            obtainiumPotion: shop.obtainiumPotion,\n            offeringEX: 0,\n            offeringAuto: Math.min(1, Number(shop.offeringAutoLevel)),\n            obtainiumEX: 0,\n            obtainiumAuto: Math.min(1, Number(shop.obtainiumAutoLevel)), //Number(shop.obtainiumAutoLevel),\n            instantChallenge: Number(shop.instantChallengeBought),\n            antSpeed: 0,\n            cashGrab: 0,\n            shopTalisman: Number(shop.talismanBought),\n            seasonPass: 0,\n            challengeExtension: shop.challengeExtension,\n            challengeTome: 0, // This was shop.challenge10Tomes\n            cubeToQuark: Number(shop.cubeToQuarkBought),\n            tesseractToQuark: Number(shop.tesseractToQuarkBought),\n            hypercubeToQuark: Number(shop.hypercubeToQuarkBought),\n            seasonPass2: 0,\n            seasonPass3: 0,\n            chronometer: 0,\n            infiniteAscent: 0,\n            calculator: 0,\n            calculator2: 0,\n            calculator3: 0,\n            constantEX: 0,\n            powderEX: 0,\n        }\n\n        const initialQuarks = Number(player.worlds);\n\n        player.worlds.add(150 * shop.offeringTimerLevel + 25/2 * (shop.offeringTimerLevel - 1) * shop.offeringTimerLevel, false);\n        player.worlds.add(150 * shop.obtainiumTimerLevel + 25/2 * (shop.obtainiumTimerLevel - 1) * shop.obtainiumTimerLevel, false);\n        player.worlds.add(150 * shop.offeringAutoLevel + 25/2 * (shop.offeringAutoLevel - 1) * shop.offeringAutoLevel - 150 * Math.min(1, shop.offeringAutoLevel), false);\n        player.worlds.add(150 * shop.obtainiumAutoLevel + 25/2 * (shop.obtainiumAutoLevel - 1) * shop.obtainiumAutoLevel - 150 * Math.min(1, shop.obtainiumAutoLevel), false);\n        player.worlds.add(100 * shop.cashGrabLevel + 100/2 * (shop.cashGrabLevel - 1) * shop.cashGrabLevel, false);\n        player.worlds.add(200 * shop.antSpeedLevel + 80/2 * (shop.antSpeedLevel - 1) * shop.antSpeedLevel, false);\n        player.worlds.add(500 * shop.challenge10Tomes + 250/2 * (shop.challenge10Tomes - 1) * (shop.challenge10Tomes), false);\n        player.worlds.add(\n            typeof shop.seasonPass === 'number' \n                ? 500 * shop.seasonPass + 250/2 * (shop.seasonPass - 1) * shop.seasonPass\n                : 500 * shop.seasonPassLevel + 250/2 * (shop.seasonPassLevel - 1) * shop.seasonPassLevel,\n            false\n        );\n\n        console.log('Because of the v2.5.0 update, you have been refunded ' + format(+player.worlds - +initialQuarks) + ' Quarks! If this appears wrong let Platonic know :)')\n    }\n\n    if (player.shopUpgrades.seasonPass2 === undefined) {\n        player.shopUpgrades.seasonPass2 = 0;\n        player.shopUpgrades.seasonPass3 = 0;\n        player.shopUpgrades.chronometer = 0;\n        player.shopUpgrades.infiniteAscent = 0;\n    }\n\n    if (player.runeexp[5] === undefined) {\n        player.runeexp[5] = player.runeexp[6] = 0;\n        player.runelevels[5] = player.runelevels[6] = 0;\n    }\n\n    // resets all hepteract values on the player object\n    player.hepteractCrafts = {\n        chronos: ChronosHepteract,\n        hyperrealism: HyperrealismHepteract,\n        quark: QuarkHepteract,\n        challenge: ChallengeHepteract,\n        abyss: AbyssHepteract,\n        accelerator: AcceleratorHepteract,\n        acceleratorBoost: AcceleratorBoostHepteract,\n        multiplier: MultiplierHepteract\n    }\n\n    // if the player has hepteracts, we need to overwrite the player values\n    // with the ones the save has.\n    if (data.hepteractCrafts !== undefined) {\n        for (const item in blankSave.hepteractCrafts) {\n            const k = item as keyof Player['hepteractCrafts'];\n            // if more crafts are added, some keys might not exist in the save\n            if (data.hepteractCrafts[k])\n                player.hepteractCrafts[k] = createHepteract(data.hepteractCrafts[k]);\n        }\n    }\n\n    if (data.platonicCubeOpenedDaily === undefined) {\n        player.platonicCubeOpenedDaily = 0;\n        player.platonicCubeQuarkDaily = 0;\n    }\n\n    if (data.shopUpgrades.calculator === undefined) {\n        player.shopUpgrades.calculator = 0;\n        player.shopUpgrades.calculator2 = 0;\n        player.shopUpgrades.calculator3 = 0;\n        player.shopUpgrades.constantEX = 0;\n    }\n\n    while (player.achievements[280] === undefined) {\n        player.achievements.push(0)\n    }\n    \n    if (data.overfluxOrbs === undefined) {\n        player.overfluxOrbs = 0;\n    } \n    if (data.overfluxPowder === undefined) {\n        player.overfluxPowder = 0;\n        player.shopUpgrades.powderEX = 0;\n        player.dailyPowderResetUses = 1;\n    }\n\n    if (data.ascStatToggles[5] === undefined) {\n        player.ascStatToggles[5] = false;\n    }\n\n    while (player.platonicUpgrades[20] === undefined) {\n        player.platonicUpgrades.push(0)\n    }\n\n    if (data.loadedV253 === undefined) {\n        player.loadedV253 = true;\n        player.worlds.add(10000 * player.shopUpgrades.calculator + 10000 / 2 * (player.shopUpgrades.calculator - 1) * (player.shopUpgrades.calculator), false);\n        player.worlds.add(10000 * player.shopUpgrades.calculator2 + 5000 / 2 * (player.shopUpgrades.calculator2 - 1) * (player.shopUpgrades.calculator2), false);\n        player.worlds.add(25000 * player.shopUpgrades.calculator3 + 25000 / 2 * (player.shopUpgrades.calculator3 - 1) * (player.shopUpgrades.calculator3), false);\n        player.shopUpgrades.calculator = 0;\n        player.shopUpgrades.calculator2 = 0;\n        player.shopUpgrades.calculator3 = 0;\n        player.wowAbyssals += 1e8 * player.platonicUpgrades[16] // Refund based off of abyss hepteracts spent\n        Alert('June 28, 2021: V2.5.3. You have been refunded quarks from calculators if you purchased them. They are no longer refundable so be wary!')\n    }\n\n    if (data.loadedV255 === undefined) {\n        player.loadedV255 = true;\n        player.worlds.add(1000 * player.shopUpgrades.powderEX + 1000 / 2 * (player.shopUpgrades.powderEX - 1) * (player.shopUpgrades.powderEX), false);\n        player.shopUpgrades.powderEX = 0;\n        Alert('July 2, 2021: V2.5.5. You have been refunded quarks from Powder EX upgrade, if you purchased levels. Your T1 ants were also reset and base cost set to 1e700 particles. Powder EX is no longer refundable, though, so be careful!')\n        player.firstCostAnts = new Decimal('1e700')\n        player.firstOwnedAnts = 0;\n    }\n}\n", "import { sacrificeAnts } from './Ants';\nimport { buyAccelerator, boostAccelerator, buyMultiplier } from './Buy';\nimport { player, resetCheck } from './Synergism';\nimport { keyboardTabChange } from './Toggles';\nimport { Alert, Prompt } from './UpdateHTML';\n\nexport const hotkeys = new Map<string, [string, () => unknown]>([\n    ['A', ['Buy Accelerators', () => buyAccelerator()]],\n    ['B', ['Boost Accelerator', () => boostAccelerator()]],\n    ['E', ['Exit Challenge', () => {\n        if (player.currentChallenge.reincarnation !== 0) {\n            resetCheck('reincarnationchallenge', undefined, true)\n        }\n        if (player.currentChallenge.transcension !== 0) {\n            resetCheck('challenge', undefined, true)\n        }\n    }]],\n    ['M', ['Multipliers', () => buyMultiplier()]],\n    ['P', ['Reset Prestige', () => resetCheck('prestige')]],\n    ['R', ['Reset Reincarnate', () => resetCheck('reincarnate')]],\n    ['S', ['Sacrifice Ants', () => sacrificeAnts()]],\n    ['T', ['Reset Transcend', () => resetCheck('transcend')]],\n    ['ARROWLEFT', ['Back a tab', () => keyboardTabChange(-1)]],\n    ['ARROWRIGHT', ['Next tab', () => keyboardTabChange(1)]],\n    ['ARROWUP', ['Back a subtab', () => keyboardTabChange(-1, false)]],\n    ['ARROWDOWN', ['Next subtab', () => keyboardTabChange(1, false)]]\n]);\n\ndocument.addEventListener('keydown', event => {\n    if (document.activeElement?.localName === 'input') {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\n        // finally fixes the bug where hotkeys would be activated when typing in an input field\n        return event.stopPropagation();\n    }\n\n    const key = event.key.toUpperCase();\n\n    if (hotkeys.has(key)) {\n        hotkeys.get(key)[1]();\n    }\n});\n\nconst makeSlot = (key: string, descr: string) => {\n    const div = document.createElement('div');\n    div.classList.add('hotkeyItem');\n\n    const span = document.createElement('span');\n    span.id = 'actualHotkey';\n    span.textContent = key;\n    span.addEventListener('click', async (e) => {\n        const target = e.target as HTMLElement;\n        // new value to set key as, unformatted\n        const newKey = await Prompt(`\n        Enter the new key you want to activate ${target.parentNode.querySelector('p').textContent} with.\n\n        MDN has a list of values for \"special keys\" if you would like to use one:\n        https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n        `);\n\n        if (typeof newKey !== 'string') return;\n\n        // old hotkey\n        const oldKey = target.textContent.toUpperCase();\n        const toSet = newKey.toUpperCase();\n\n        if (newKey.length === 0)\n            return Alert(`You didn't enter anything, canceled!`);\n\n        if (hotkeys.has(toSet)) {\n            return Alert(`That key is already binded to an action, use another key instead!`);\n        } else if (hotkeys.has(oldKey)) {\n            const old = hotkeys.get(oldKey)!;\n\n            hotkeys.set(toSet, old);\n            hotkeys.delete(oldKey);\n\n            target.textContent = toSet;\n        } else {\n            return Alert(`No hotkey is triggered by ${oldKey}!`);\n        }\n    });\n\n    const p = document.createElement('p');\n    p.id = 'hotKeyDesc';\n    p.textContent = descr;\n\n    div.appendChild(span);\n    div.appendChild(p);\n\n    return div;\n}\n\nexport const startHotkeys = () => {\n    const hotkey = document.querySelector('.hotkeys');\n\n    for (const child of Array.from(hotkey.children)) \n        hotkey.removeChild(child);\n    \n    for (const [key, [descr]] of [...hotkeys.entries()]) {\n        const div = makeSlot(key, descr);\n\n        hotkey.appendChild(div);\n    }\n}"],
  "mappings": "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DACA,iEACA,mEACA,0DACA,0DACA,0DACA,0DACA,2DACA,oEACA,kFACA,yFACA,yFACA,yFACA,qFACA,sFACA,gFACA,4EACA,uFACA,gGACA,gGACA,gGACA,gGACA,gGACA,sGACA,wGACA,uGACA,uGACA,6GACA,6GACA,kGACA,mFACA,oGACA,wEACA,6DACA,sDACA,2DACA,mEACA,mGACA,8CACA,oDACA,uEACA,gEACA,mGACA,wFACA,kEACA,kEACA,mGACA,sJACA,wGACA,qEACA,6DACA,4FACA,uJACA,qGACA,wHACA,yEACA,wFACA,uEACA,kFACA,yFACA,qFACA,2FACA,wFACA,uFACA,iFACA,sEACA,0DACA,kEACA,wEACA,kDACA,0CACA,0EACA,4DACA,mFACA,8DACA,sEACA,oGACA,yFACA,4FACA,oGACA,wFACA,oEACA,yFACA,8EACA,sGACA,yEACA,mEACA,kIACA,4GACA,oFACA,sEACA,mHACA,kGACA,+FACA,gFACA,uDACA,wFACA,4FACA,wEACA,4FACA,kHACA,oHACA,2HACA,0DACA,yDACA,mDACA,wHACA,mGACA,2DACA,sEACA,oEACA,+DACA,2DACA,kDACA,0GACA,kGACA,+DACA,uEACA,yEACA,0DACA,sDACA,6EACA,uHACA,sDACA,gFACA,6DACA,yDACA,uDACA,uFACA,6EACA,6GACA,0DACA,0EACA,6DACA,wDACA,qDACA,wGACA,kEACA,qFACA,4FACA,+DACA,mEACA,uGACA,4FACA,sFACA,iHACA,kGACA,0OAGS,GAAuB,CAAC,EAAW,EAAO,GAAO,EAAY,IAAM,CAC5E,GAAM,GAAa,EAAE,gBAAqB,EAAQ,IAAS,EACrD,EAAI,GAAQ,EAAE,GAChB,EAAI,GACF,EAAI,MAAQ,EACZ,EAAW,GAAgB,EAAG,EAAW,GAC/C,EAAI,UAAa,EAAO,EAAS,GAAI,EAAG,IAAU,gBAAkB,EAAO,EAAS,GAAK,EAAO,WAAW,GAAI,EAAG,IAAQ,WAC1H,AAAI,EAAO,WAAW,KAAQ,EAAE,kBAAqB,GACjD,UAAS,eAAe,gBAAgB,MAAM,MAAQ,OACtD,SAAS,eAAe,iBAAiB,MAAM,MAAQ,OACvD,EAAgB,EAAG,CAAC,iBAAkB,CAAC,oBAAqB,oBAAqB,+BACjF,EAAI,EAAI,cAER,UAAS,eAAe,gBAAgB,MAAM,MAAQ,YACtD,SAAS,eAAe,iBAAiB,MAAM,MAAQ,QACvD,AAAI,EAAO,WAAW,GAAK,EACvB,EAAgB,EAAG,CAAC,oBAAqB,8BAA+B,CAAC,oBAAqB,gBAAiB,wBAE/G,EAAgB,EAAG,CAAC,qBAAsB,CAAC,oBAAqB,gBAAiB,yBAIrF,EAAO,eAAiB,EAAE,kBAAqB,IAAM,EAAO,WAAW,GAAM,EAAE,kBAAqB,IACpG,UAAS,eAAe,gBAAgB,MAAM,MAAQ,UACtD,EAAgB,EAAG,GAAI,CAAC,gBAAiB,oBAAqB,gCAGlE,SAAS,eAAe,iBAAiB,YAAc,EACvD,SAAS,eAAe,gBAAgB,YAAc,EACtD,SAAS,eAAe,iBAAiB,YAAc,SAAW,EAAO,WAAW,GAAK,IAAO,EAAE,kBAAqB,IAG9G,GAAmB,AAAC,GAAc,CAE3C,AAAI,EAAO,WAAW,GAAK,EAAE,kBAAqB,IAC9C,GAAO,gBAAmB,GAAO,WAAW,GAAK,EAAE,kBAAqB,IAAM,EAAE,kBAAqB,GACrG,EAAO,WAAW,GAAK,EAAE,kBAAqB,IAGlD,GAAM,GAAI,MAAM,IAChB,AAAI,EAAO,WAAW,GAAK,IAAO,EAAO,WAAW,GAAK,EAAE,kBAAqB,GAC5E,EAAgB,EAAG,CAAC,qBAAsB,CAAC,sBAAuB,kBAC/D,AAAI,EAAO,WAAW,GAAK,IAAO,EAAO,WAAW,IAAM,EAAE,kBAAqB,GACpF,EAAgB,EAAG,CAAC,iBAAkB,CAAC,sBAAuB,sBAE9D,EAAgB,EAAG,CAAC,uBAAwB,CAAC,oBAAqB,mBCnYnE,GAAM,IAA8B,IAAM,CAI7C,GAAM,GAAO,OAAO,KAAK,EAAO,oBAEhC,OAAW,KAAO,GAAM,CACpB,GAAM,GAAM,EAAO,mBAAmB,GAChC,EAAM,EAAK,QAAQ,GAAO,EAE5B,EAAQ,EACR,EAAO,EACX,AAAI,GAAO,KACP,GAAQ,EAAE,mBAAsB,GAChC,GAAQ,KAAK,IAAI,IAAO,EAAI,EAAE,mBAAsB,KAGxD,EAAE,yBAA4B,GAAO,EAAI,EAAO,EAAE,gBAAmB,GAAO,KAAK,IAAI,EAAK,GAAS,EAAE,wBAA2B,KCjBjI,GAAM,IAAoB,AAAC,GAAkB,CAChD,AAAI,SAAS,eAAe,qBAAqB,MAAM,aAAe,WAClE,UAAS,eAAe,qBAAqB,MAAM,WAAa,WAEhE,SAAS,eAAe,yBAAyB,MAAM,aAAe,WACtE,UAAS,eAAe,yBAAyB,MAAM,WAAa,WAExE,EAAE,kBAAuB,EACzB,GAAM,GAAoB,KAAU,GAAK,IAAU,IAAM,EAAO,gBAAgB,IAAU,GAAM,EAAI,IAAO,EAAO,iBAAiB,IAAM,IAAO,KAAK,IAAI,EAAG,EAAO,iBAAiB,KAAO,EACrL,EAAkB,KAAU,GAAK,IAAU,IAAM,EAAO,qBAAqB,IAAU,GAAM,EAAI,IAAO,EAAO,iBAAiB,IAAM,IAAO,KAAK,IAAI,EAAG,EAAO,iBAAiB,KAAO,EA6FxL,EAAO,AA5F6H,CACtI,CACI,KAAM,6BACN,YAAa,iGACb,QAAS,+CAAiD,EAAO,EAAO,gBAAgB,IAAM,iCAAmC,EAAO,EAAE,kBAAqB,EAAO,gBAAgB,IAAK,GAC3L,QAAS,oDAAsD,EAAO,EAAO,qBAAqB,IAAM,uCAAyC,EAAO,EAAE,kBAAqB,EAAO,qBAAqB,IAAK,GAChN,WAAY,6BAA+B,EAAO,KAAK,IAAI,EAAE,2BAA8B,EAAO,gBAAgB,IAAK,GAAkB,GAAK,uCAAyC,EAAO,KAAK,IAAI,EAAE,2BAA8B,EAAO,qBAAqB,IAAK,GAAgB,GACxR,mBAAoB,4CAA8C,EAAO,EAAI,KAAK,IAAI,EAAO,gBAAgB,GAAG,GAAG,GAAK,0CAA4C,EAAO,EAAI,KAAK,IAAI,EAAO,qBAAqB,GAAG,GAAG,GAAK,IAC/N,MAAO,qCAEX,CACI,KAAM,6BACN,YAAa,gGACb,QAAS,+CAAiD,EAAO,EAAO,gBAAgB,IAAM,mCAAqC,EAAO,EAAE,iBAAoB,EAAO,gBAAgB,IAAK,GAC5L,QAAS,oDAAsD,EAAO,EAAO,qBAAqB,IAAM,wCAA0C,EAAO,EAAE,iBAAoB,EAAO,qBAAqB,IAAK,GAChN,WAAY,6BAA+B,EAAO,KAAK,IAAI,EAAE,2BAA8B,EAAO,gBAAgB,IAAK,GAAkB,GAAK,uCAAyC,EAAO,KAAK,IAAI,EAAE,2BAA8B,EAAO,qBAAqB,IAAK,GAAgB,GACxR,mBAAoB,4CAA8C,EAAO,EAAI,KAAK,IAAI,EAAO,gBAAgB,GAAG,GAAG,GAAK,0CAA4C,EAAO,EAAI,KAAK,IAAI,EAAO,qBAAqB,GAAG,GAAG,GAAK,IAC/N,MAAO,kCAEX,CACI,KAAM,mCACN,YAAa,qBACb,QAAS,+CAAiD,EAAO,EAAO,gBAAgB,IAAM,sCAAwC,EAAO,EAAI,EAAE,mBAAsB,EAAO,gBAAgB,IAAK,GACrM,QAAS,oDAAsD,EAAO,EAAO,qBAAqB,IAAM,gCAAkC,EAAO,EAAI,EAAE,mBAAsB,EAAO,qBAAqB,IAAK,GAC9M,WAAY,6BAA+B,EAAO,EAAE,2BAA8B,EAAO,gBAAgB,IAAK,GAAK,uCAAyC,EAAO,EAAE,2BAA8B,EAAO,qBAAqB,IAAK,GACpO,mBAAoB,4CAA8C,EAAO,EAAI,KAAK,IAAI,EAAO,gBAAgB,GAAG,GAAG,GAAK,0CAA4C,EAAO,EAAI,KAAK,IAAI,EAAO,qBAAqB,GAAG,GAAG,GAAK,IAC/N,MAAO,+BAEX,CACI,KAAM,iCACN,YAAa,yBACb,QAAS,+CAAiD,EAAO,EAAO,gBAAgB,IAAM,wCAA0C,EAAO,EAAE,0BAA6B,EAAO,gBAAgB,IAAK,GAC1M,QAAS,oDAAsD,EAAO,EAAO,qBAAqB,IAAM,wCAA0C,EAAO,EAAE,0BAA6B,EAAO,qBAAqB,IAAK,GACzN,WAAY,6BAA+B,EAAO,EAAE,2BAA8B,EAAO,gBAAgB,IAAK,GAAK,uCAAyC,EAAO,EAAE,2BAA8B,EAAO,qBAAqB,IAAK,GACpO,mBAAoB,4CAA8C,EAAO,EAAI,KAAK,IAAI,EAAO,gBAAgB,GAAG,GAAG,GAAK,0CAA4C,EAAO,EAAI,KAAK,IAAI,EAAO,qBAAqB,GAAG,GAAG,GAAK,IAC/N,MAAO,sCAEX,CACI,KAAM,sCACN,YAAa,2DACb,QAAS,+CAAiD,EAAO,EAAO,gBAAgB,IAAM,6BAA+B,EAAO,EAAE,gBAAmB,EAAO,gBAAgB,IAAK,GACrL,QAAS,oDAAsD,EAAO,EAAO,qBAAqB,IAAM,6BAA+B,EAAO,EAAE,gBAAmB,EAAO,qBAAqB,IAAK,GACpM,WAAY,6BAA+B,EAAO,EAAE,2BAA8B,EAAO,gBAAgB,IAAK,GAAK,uCAAyC,EAAO,EAAE,2BAA8B,EAAO,qBAAqB,IAAK,GACpO,mBAAoB,4CAA8C,EAAO,EAAI,KAAK,IAAI,EAAO,gBAAgB,GAAG,GAAG,GAAK,0CAA4C,EAAO,EAAI,KAAK,IAAI,EAAO,qBAAqB,GAAG,GAAG,GAAK,IAC/N,MAAO,4CAEX,CACI,KAAM,kCACN,YAAa,gDACb,QAAS,+CAAiD,EAAO,EAAO,gBAAgB,IAAM,6BAA+B,EAAO,EAAI,EAAE,oBAAuB,EAAO,gBAAgB,IAAK,GAC7L,QAAS,oDAAsD,EAAO,EAAO,qBAAqB,IAAM,6BAA+B,EAAO,EAAI,EAAE,oBAAuB,EAAO,qBAAqB,IAAK,GAC5M,WAAY,6BAA+B,EAAO,EAAE,2BAA8B,EAAO,gBAAgB,IAAK,GAAK,uCAAyC,EAAO,EAAE,2BAA8B,EAAO,qBAAqB,IAAK,GACpO,mBAAoB,4CAA8C,EAAO,EAAI,KAAK,IAAI,EAAO,gBAAgB,GAAG,GAAG,GAAK,0CAA4C,EAAO,EAAI,KAAK,IAAI,EAAO,qBAAqB,GAAG,GAAG,GAAK,IAC/N,MAAO,gCAEX,CACI,KAAM,6BACN,YAAa,0CACb,QAAS,+CAAiD,EAAO,EAAO,gBAAgB,IAAM,6BAA+B,EAAO,EAAE,qBAAwB,EAAO,gBAAgB,IAAK,GAC1L,QAAS,oDAAsD,EAAO,EAAO,qBAAqB,IAAM,6BAA+B,EAAO,EAAE,qBAAwB,EAAO,qBAAqB,IAAK,GACzM,WAAY,6BAA+B,EAAO,EAAE,2BAA8B,EAAO,gBAAgB,IAAK,GAAK,uCAAyC,EAAO,EAAE,2BAA8B,EAAO,qBAAqB,IAAK,GACpO,mBAAoB,4CAA8C,EAAO,EAAI,KAAK,IAAI,EAAO,gBAAgB,GAAG,GAAG,GAAK,0CAA4C,EAAO,EAAI,KAAK,IAAI,EAAO,qBAAqB,GAAG,GAAG,GAAK,IAC/N,MAAO,iCAEX,CACI,KAAM,2BACN,YAAa,oCACb,QAAS,+CAAiD,EAAO,EAAO,gBAAgB,IAAM,qCAAuC,EAAO,EAAE,kBAAqB,EAAO,gBAAgB,IAAK,GAC/L,QAAS,oDAAsD,EAAO,EAAO,qBAAqB,IAAM,qCAAuC,EAAO,EAAE,kBAAqB,EAAO,qBAAqB,IAAK,GAC9M,WAAY,6BAA+B,EAAO,EAAE,2BAA8B,EAAO,gBAAgB,IAAK,GAAK,uCAAyC,EAAO,EAAE,2BAA8B,EAAO,qBAAqB,IAAK,GACpO,mBAAoB,4CAA8C,EAAO,EAAI,KAAK,IAAI,EAAO,gBAAgB,GAAG,GAAG,GAAK,0CAA4C,EAAO,EAAI,KAAK,IAAI,EAAO,qBAAqB,GAAG,GAAG,GAAK,IAC/N,MAAO,8BAEX,CACI,KAAM,qCACN,YAAa,gCACb,QAAS,+CAAiD,EAAO,EAAO,gBAAgB,IAAM,wBAA0B,EAAO,EAAE,uBAA0B,EAAO,gBAAgB,IAAK,GACvL,QAAS,oDAAsD,EAAO,EAAO,qBAAqB,IAAM,wBAA0B,EAAO,EAAE,uBAA0B,EAAO,qBAAqB,IAAK,GACtM,WAAY,6BAA+B,EAAO,EAAE,2BAA8B,EAAO,gBAAgB,IAAK,GAAK,uCAAyC,EAAO,EAAE,2BAA8B,EAAO,qBAAqB,IAAK,GACpO,mBAAoB,4CAA8C,EAAO,EAAI,KAAK,IAAI,EAAO,gBAAgB,GAAG,GAAG,GAAK,0CAA4C,EAAO,EAAI,KAAK,IAAI,EAAO,qBAAqB,GAAG,GAAG,GAAK,IAC/N,MAAO,yCAEX,CACI,KAAM,yBACN,YAAa,0BACb,QAAS,sGACT,QAAS,qEACT,WAAY,gFACZ,mBAAoB,GACpB,MAAO,gCAGc,EAAM,GACnC,SAAS,eAAe,kBAAkB,YAAc,EAAK,KAC7D,SAAS,eAAe,yBAAyB,YAAc,EAAK,YACpE,SAAS,eAAe,0BAA0B,YAAc,EAAK,QACrE,SAAS,eAAe,0BAA0B,YAAc,EAAK,QACrE,SAAS,eAAe,oCAAoC,YAAc,EAAK,WAC/E,SAAS,eAAe,gCAAgC,YAAc,EAAK,mBAC3E,SAAS,eAAe,yBAAyB,aAAa,MAAO,EAAK,OAEtE,EAAQ,IACR,UAAS,eAAe,cAAc,KAAS,YAAc,EAAO,EAAO,gBAAgB,IAC3F,SAAS,eAAe,WAAW,KAAS,YAAc,EAAO,EAAO,qBAAqB,MAIxF,GAAwB,IAAM,CACvC,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CAEzB,GAAM,GAAI,SAAS,eAAe,cAAc,KAC1C,EAAI,SAAS,eAAe,WAAW,KAC7C,AAAI,EAAG,EAAE,YAAc,EAAO,EAAO,gBAAgB,IAChD,QAAQ,IAAI,gCAAgC,aACjD,AAAI,EAAG,EAAE,YAAc,EAAO,EAAO,qBAAqB,IACrD,QAAQ,IAAI,6BAA6B,eAIzC,GAAuB,IAAM,CACtC,GAAM,GAAO,SAAS,uBAAuB,qBAC7C,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CAClC,GAAM,GAAM,EAAK,GACX,EAAI,SAAS,cAAc,KACjC,EAAE,UAAY,WACd,GAAI,GAAO,SAAS,eAAe,aACnC,EAAE,YAAY,GACd,GAAI,GAAO,SAAS,cAAc,QAClC,EAAK,GAAK,cAAc,EAAI,IAC5B,EAAK,YAAc,EAAO,gBAAgB,EAAI,GAAK,GACnD,EAAE,YAAY,GAEd,EAAO,SAAS,eAAe,aAC/B,EAAE,YAAY,GAEd,EAAO,SAAS,cAAc,QAC9B,EAAK,GAAK,WAAW,EAAI,IACzB,EAAK,YAAc,EAAO,qBAAqB,EAAI,GAAK,GACxD,EAAE,YAAY,GACd,EAAI,YAAY,GAEhB,GAAI,GACJ,EAAM,SAAS,cAAc,UAC7B,EAAI,UAAY,wBAChB,EAAI,YAAc,MAClB,EAAI,QAAU,IAAM,GAAsB,EAAI,EAAG,IACjD,EAAI,YAAY,GAEhB,EAAM,SAAS,cAAc,UAC7B,EAAI,UAAY,uBAChB,EAAI,YAAc,KAClB,EAAI,QAAU,IAAM,GAAsB,EAAI,EAAG,GACjD,EAAI,YAAY,GAEhB,EAAM,SAAS,cAAc,UAC7B,EAAI,UAAY,yBAChB,EAAI,YAAc,KAClB,EAAI,QAAU,IAAM,GAAsB,EAAI,EAAG,IACjD,EAAI,YAAY,GAEhB,EAAM,SAAS,cAAc,UAC7B,EAAI,UAAY,0BAChB,EAAI,YAAc,MAClB,EAAI,iBAAiB,QAAS,IAAM,GAAsB,EAAI,EAAG,MACjE,EAAI,YAAY,GAChB,EAAI,iBAAiB,QAAS,IAAM,GAAkB,EAAI,MAIrD,GAA+B,IAAM,CAC9C,GAAM,GAAY,EACZ,EAAQ,EAAiC,0BAC/C,OAAS,GAAI,EAAG,EAAI,OAAO,KAAK,EAAO,oBAAoB,OAAS,EAAG,IAAK,CACxE,GAAM,GAAM,EAAM,YAClB,OAAS,GAAI,EAAG,GAAK,EAAW,IAAK,CACjC,GAAM,GAAO,EAAI,aACjB,AAAI,IAAM,EACN,EAAK,YAAe,IAAM,EAAK,QAAU,WAAW,KAC7C,GAAK,GACZ,GAAK,YAAgB,KAAM,EAAK,EAAO,qBAAqB,GAAK,EAAO,mBAAmB,GAAG,IAAI,WAClG,EAAK,MAAM,UAAY,UAG/B,GAAI,IAAM,EAAG,SACb,GAAI,GAAO,EAAI,aACX,EAAM,SAAS,cAAc,UACjC,EAAI,UAAY,WAChB,EAAI,YAAc,OAClB,EAAI,QAAU,IAAM,GAA0B,GAAM,GACpD,EAAK,YAAY,GAEjB,EAAO,EAAI,aACX,EAAM,SAAS,cAAc,UAC7B,EAAI,UAAY,WAChB,EAAI,YAAc,OAClB,EAAI,QAAU,IAAM,GAA0B,GAAO,GACrD,EAAK,YAAY,KAIZ,GAA+B,CAAC,EAAY,IAAM,CAC3D,GAAM,GAAM,EAAiC,0BAA0B,KAAK,EAAY,GAAG,MAC3F,OAAS,GAAI,EAAG,EAAI,EAAI,QAChB,IAAI,GADoB,IAE5B,EAAI,GAAG,YAAgB,KAAc,EAAK,EAAO,qBAAqB,GAAK,EAAO,mBAAmB,GAAW,IAAI,YAItH,GAA4B,CAAC,EAAO,GAAM,EAAU,IAAM,CAC5D,AAAI,EACA,GAAO,mBAAmB,GAAW,MAAM,KAAK,EAAO,sBACvD,GAA6B,IAE7B,GAAO,qBAAuB,MAAM,KAAK,EAAO,mBAAmB,IACnE,KACA,OAIK,GAA2B,IAAM,CAC1C,GAAM,GAAU,SAAS,eAAe,4BACxC,EAAQ,MAAM,WAAa,UAC3B,WAAW,IAAM,EAAQ,MAAM,WAAa,SAAU,MCnN1D,GAAI,IAES,GAAc,AAAC,GAAsB,CAC9C,GAAS,IACT,GAAc,GAAS,IAAM,GAAa,GAAQ,KAGzC,GAAe,AAAC,GAAsB,CAC/C,SAAS,eAAe,mBAAmB,MAAM,QAAU,QAE3D,GAAM,GAAwB,EAAO,iBAAiB,aAChD,EAAyB,EAAO,iBAAiB,cAEjD,EAAW,GAAmB,GAC9B,EAAgB,EAAiC,mBACjD,EAAe,SAAS,eAAe,mBACvC,EAAiB,EAAiC,kBAClD,EAAsB,SAAS,eAAe,kBAC9C,EAAqB,SAAS,eAAe,mBAC7C,EAAY,SAAS,eAAe,aACpC,EAAoB,SAAS,eAAe,kBAUlD,OARC,GAAS,gBACL,GAAoB,MAAM,QAAU,QAAS,EAAmB,YAAc,EAAO,KAAK,MAAM,EAAE,iBAClG,GAAoB,MAAM,QAAU,OAAQ,EAAmB,YAAc,IAEjF,GAAS,sBAAwB,GAAS,YACvC,EAAc,MAAM,QAAU,EAAa,MAAM,QAAU,OAC3D,EAAc,MAAM,QAAU,EAAa,MAAM,QAAU,QAExD,OACE,WACD,AAAK,EAAe,IAAI,SAAS,yBAC7B,GAAe,IAAM,wBAEzB,EAAe,MAAM,QAAU,QAC/B,EAAkB,YAAc,IAAM,EAAO,EAAE,mBAC/C,EAAU,YAAc,gIAAkI,EAAO,EAAO,mBAAqB,8BAAgC,EAAO,EAAO,iBAAmB,YAC9P,EAAU,MAAM,MAAQ,YACxB,UACC,eACD,AAAK,EAAe,IAAI,SAAS,wBAC7B,GAAe,IAAM,uBAEzB,EAAe,MAAM,QAAU,QAC/B,EAAkB,YAAc,IAAM,EAAO,EAAE,oBAC/C,EAAU,YAAc,+GAAiH,EAAO,EAAO,uBAAyB,+BAAiC,EAAO,EAAO,kBAAoB,YACnP,EAAU,MAAM,MAAQ,SACxB,UACC,gBACD,AAAK,EAAe,IAAI,SAAS,0BAC7B,GAAe,IAAM,yBAEzB,EAAe,MAAM,QAAU,QAC/B,EAAkB,YAAc,IAAM,EAAO,EAAE,wBAC/C,EAAU,YAAc,0FAA4F,EAAO,EAAO,iBAAmB,uCAAyC,EAAO,EAAO,sBAAwB,YACpO,EAAU,MAAM,MAAQ,YACxB,UACC,mBACD,AAAK,EAAe,IAAI,SAAS,yBAC7B,GAAe,IAAM,wBAEzB,EAAe,MAAM,QAAU,QAC/B,EAAkB,YAAc,IAAM,EAAO,EAAO,sBACpD,EAAU,YAAc,uHAAyH,EAAO,EAAO,gBAAkB,IAAM,EAAO,EAAO,sBAAwB,aAC7N,EAAU,MAAM,MAAQ,OACxB,UACC,wBACD,EAAe,MAAM,QAAU,OAC/B,EAAkB,YAAc,GAE/B,IAA0B,EAC1B,GAAU,MAAM,MAAQ,aAAc,EAAU,YAAc,+EAAiF,EAAwB,eAAiB,EAAO,EAAO,uBAAyB,IAAM,EAAO,EAAqB,EAAuB,EAAO,qBAAqB,KAA2B,uBAAyB,EAAO,EAAO,kBAAoB,aAC1Y,GAAU,MAAM,MAAQ,UAAW,EAAU,YAAc,8FAC5D,UACC,yBAID,GAHA,EAAe,MAAM,QAAU,OAC/B,EAAkB,YAAc,GAE5B,IAA2B,EAAG,CAC9B,GAAM,GAAO,GAA0B,EAAI,QAAU,kBAC/C,EAAW,GAA0B,EAAI,SAAW,iBAE1D,EAAU,MAAM,MAAQ,SACxB,EAAU,YAAc,8EAAgF,EAAyB,eAAiB,EAAO,EAAO,IAAS,IAAM,EAAO,EAAqB,EAAwB,EAAO,qBAAqB,GAAyB,IAA2B,EAAW,iBAAmB,EAAO,EAAO,sBAAwB,gBAEvX,GAAU,MAAM,MAAQ,UACxB,EAAU,YAAc,8FAE5B,UACC,qBACD,EAAe,MAAM,QAAU,OAC/B,EAAkB,YAAc,GAChC,EAAU,YAAc,wFACxB,EAAU,MAAM,MAAQ,OACxB,UACC,YACD,EAAe,MAAM,QAAU,OAC/B,EAAkB,YAAc,GAChC,EAAU,YAAc,8BAAgC,EAAO,KAAsB,GAAI,EAAG,IAAQ,mCAAqC,EAAO,EAAO,iBAAkB,EAAG,IAAS,YACrL,EAAU,MAAM,MAAQ,OACxB,MAER,SAAS,eAAe,mBAAmB,YAAc,IAAM,EAAO,IAG7D,GAAkB,AAAC,GAAc,CAC1C,GAAI,IAAM,EAAG,CACT,GAAM,GAAI,CAAC,EAAiC,kBAAkB,MAC9D,AAAI,GAAK,EACL,EAAO,eAAiB,EAExB,EAAO,eAAiB,UAErB,IAAM,EAAG,CAChB,GAAM,GAAI,CAAC,EAAiC,mBAAmB,MAC/D,AAAI,GAAK,EACL,EAAO,gBAAkB,EAEzB,EAAO,gBAAkB,UAEtB,IAAM,EAAG,CAChB,GAAM,GAAI,CAAC,EAAiC,uBAAuB,MACnE,AAAI,GAAK,EACL,EAAO,oBAAsB,EAE7B,EAAO,oBAAsB,UAE1B,IAAM,EAAG,CAChB,GAAI,GAAI,WAAW,EAAiC,mBAAmB,OACvE,EAAI,KAAK,MAAM,GACf,AAAI,GAAK,EACL,EAAO,oBAAsB,EAE7B,EAAO,oBAAsB,UAE1B,IAAM,EAAG,CAChB,GAAM,GAAI,WAAW,EAAiC,0BAA0B,OAChF,EAAO,gBAAkB,KAAK,IAAI,EAAG,KAIhC,GAA+B,IAAM,CAC9C,GAAI,GAAI,WAAW,EAAiC,mBAAmB,OACvE,EAAI,KAAK,MAAM,GACf,AAAI,GAAK,EACL,EAAO,yBAA2B,EAElC,EAAO,yBAA2B,GAIpC,GAAuB,CAAC,EAAmB,EAAO,YAAc,CAClE,GAAM,GAAiB,GAAmB,GACpC,EAAc,CAAC,iBAAkB,kBAAkB,SAAS,GAElE,GAAI,IAAU,WAAY,CACtB,GAAM,GAA0C,CAC5C,QAAS,EAAO,gBAChB,KAAM,KAAK,MACX,UAAW,EACX,KAAM,WACN,SAAU,EAAE,kBAAqB,YAGrC,GAAU,KAAK,aAAc,QAAS,WAC/B,IAAU,gBAAkB,IAAU,wBAAyB,CAGtE,GAAM,GAA2C,CAC7C,QAAS,EAAO,iBAChB,KAAM,KAAK,MACX,UAAW,EACX,KAAM,YACN,OAAQ,EAAE,mBAAsB,YAGpC,GAAU,KAAK,aAAc,QAAS,WAC/B,IAAU,iBAAmB,IAAU,0BAG9C,GAAI,CAAC,GAAe,EAAE,uBAA0B,IAAI,EAAO,oBAAoB,IAAI,KAAM,CACrF,GAAM,GAA6C,CAC/C,QAAS,EAAO,qBAChB,KAAM,KAAK,MACX,UAAW,EACX,KAAM,cACN,UAAW,EAAE,uBAA0B,WACvC,UAAW,EAAE,eAGjB,GAAU,KAAK,aAAc,QAAS,YAEnC,KAAU,aAAe,IAAU,uBAEtC,EAAO,qBAAqB,IAAM,EAAG,CACrC,GAAM,GAAqB,KACrB,EAAwC,CAC1C,QAAS,EAAO,iBAChB,KAAM,KAAK,MACX,eAAgB,EAAO,qBAAqB,IAC5C,gBAAiB,EAAO,gBAAgB,MAAM,GAC9C,gBAAiB,EAAmB,GACpC,SAAU,EAAmB,GAC7B,cAAe,EAAmB,GAClC,cAAe,EAAmB,GAClC,iBAAkB,EAAmB,GACrC,cAAe,EAAmB,GAClC,KAAM,UAIV,AAAI,IAAS,kBAAoB,EAAO,iBAAiB,YAAc,GACnE,GAAa,iBAAmB,EAAO,iBAAiB,WAG5D,GAAU,KAAK,aAAc,SAAU,KAKtC,EAAQ,CAAC,EAAmB,EAAO,GAAO,EAAO,YAAc,CAkIxE,GAhIA,GAAqB,EAAO,GAE5B,GAAe,GACf,GAAc,GACd,EAAO,MAAQ,GAAI,GAAQ,OAC3B,EAAO,kBAAoB,GAAI,GAAQ,OACvC,EAAO,eAAiB,EACxB,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,cAAgB,GAAI,GAAQ,OACnC,EAAO,gBAAkB,EACzB,EAAO,oBAAsB,GAAI,GAAQ,KACzC,EAAO,eAAiB,GAAI,GAAQ,OACpC,EAAO,eAAiB,EACxB,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,cAAgB,GAAI,GAAQ,OACnC,EAAO,gBAAkB,EACzB,EAAO,oBAAsB,GAAI,GAAQ,KACzC,EAAO,eAAiB,GAAI,GAAQ,OACpC,EAAO,eAAiB,EACxB,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,cAAgB,GAAI,GAAQ,SACnC,EAAO,uBAAyB,GAAI,GAAQ,KAC5C,EAAO,wBAA0B,GAAI,GAAQ,KAC7C,EAAO,uBAAyB,GAAI,GAAQ,KAC5C,EAAO,wBAA0B,GAAI,GAAQ,KAC7C,EAAO,uBAAyB,GAAI,GAAQ,KAC5C,EAAO,eAAiB,GAAI,GAAQ,OACpC,EAAO,iBAAmB,EAC1B,EAAO,gBAAkB,GAAI,GAAQ,OACrC,EAAO,kBAAoB,EAE3B,EAAO,eAAiB,EAExB,EAAO,eAAiB,EAAO,eAAe,IAAI,EAAE,mBACpD,EAAO,eAAiB,GAAI,GAAQ,KACpC,EAAO,sBAAwB,GAC/B,EAAO,qBAAuB,GAC9B,EAAO,uBAAyB,GAEhC,EAAO,QAAQ,SAAW,GAEtB,EAAO,gBAAkB,EAAO,iBAChC,GAAO,gBAAkB,EAAO,iBAGpC,EAAE,kBAAuB,GAAI,GAAQ,KAErC,EAAO,gBAAkB,EACzB,EAAE,gBAAmB,SAAW,EAG5B,AADU,CAAC,eAAgB,wBAAyB,gBAAiB,yBAA0B,YAAa,sBACtG,SAAS,IACf,IAAc,GACd,EAAO,sBAAwB,GAAI,GAAQ,OAC3C,EAAO,mBAAqB,EAC5B,EAAO,kBAAoB,GAAI,GAAQ,OACvC,EAAO,oBAAsB,EAC7B,EAAO,mBAAqB,GAAI,GAAQ,OACxC,EAAO,mBAAqB,EAC5B,EAAO,kBAAoB,GAAI,GAAQ,QACvC,EAAO,oBAAsB,EAC7B,EAAO,mBAAqB,GAAI,GAAQ,QACxC,EAAO,mBAAqB,EAC5B,EAAO,kBAAoB,GAAI,GAAQ,SACvC,EAAO,qBAAuB,GAAI,GAAQ,KAC1C,EAAO,sBAAwB,GAAI,GAAQ,KAC3C,EAAO,qBAAuB,GAAI,GAAQ,KAC1C,EAAO,sBAAwB,GAAI,GAAQ,KAC3C,EAAO,qBAAuB,GAAI,GAAQ,KAC1C,EAAO,uBAAyB,EAChC,EAAO,qBAAuB,GAAI,GAAQ,OAE1C,EAAO,gBAAkB,EAEzB,EAAO,eAAiB,GAAI,GAAQ,KACpC,EAAO,gBAAkB,EAAO,gBAAgB,IAAI,EAAE,oBACtD,EAAO,gBAAkB,GAAI,GAAQ,KACrC,EAAO,wBAA0B,GACjC,EAAO,kCAAoC,GAC3C,EAAO,uBAAyB,GAChC,EAAO,sBAAwB,GAE/B,EAAE,mBAAwB,GAAI,GAAQ,KAElC,EAAO,aAAa,IAAM,IAC1B,GAAO,oBAAsB,GAE7B,EAAO,aAAa,IAAM,IAC1B,GAAO,qBAAuB,GAE9B,EAAO,aAAa,IAAM,IAC1B,GAAO,oBAAsB,GAE7B,EAAO,aAAa,IAAM,IAC1B,GAAO,qBAAuB,GAE9B,EAAO,aAAa,KAAO,IAC3B,GAAO,oBAAsB,GAG7B,EAAO,aAAa,GAAK,IACzB,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAGtB,EAAO,iBAAmB,EAAO,kBAAoB,EAAO,iBAAiB,eAAiB,GAC9F,GAAO,iBAAmB,EAAO,kBAGrC,EAAO,iBAAmB,EAC1B,EAAE,gBAAmB,aAAe,GAIpC,IAAU,iBAAmB,IAAU,0BAA4B,IAAU,aAAe,IAAU,qBAAsB,CAE5H,AAAI,EAAO,eAAiB,GAAK,EAAO,aAAa,KAAO,GACxD,GAA0B,GAG9B,EAAO,gBAAkB,KAAK,MAAM,EAAE,eAEtC,GAAM,GAAW,EAAE,cAAoB,GAAI,EAAO,sBA+DlD,GA9DI,EAAW,EAAO,oBAClB,GAAO,mBAAqB,GAEhC,EAAO,iBAAiB,aAAe,EACvC,GAAc,GACd,EAAO,uBAAyB,GAAI,GAAQ,OAC5C,EAAO,iBAAmB,EAC1B,EAAO,gBAAkB,GAAI,GAAQ,KACrC,EAAO,kBAAoB,EAC3B,EAAO,iBAAmB,GAAI,GAAQ,OACtC,EAAO,iBAAmB,EAC1B,EAAO,gBAAkB,GAAI,GAAQ,OACrC,EAAO,kBAAoB,EAC3B,EAAO,iBAAmB,GAAI,GAAQ,OACtC,EAAO,iBAAmB,EAC1B,EAAO,gBAAkB,GAAI,GAAQ,QACrC,EAAO,wBAA0B,GAAI,GAAQ,KAC7C,EAAO,yBAA2B,GAAI,GAAQ,KAC9C,EAAO,wBAA0B,GAAI,GAAQ,KAC7C,EAAO,yBAA2B,GAAI,GAAQ,KAC9C,EAAO,wBAA0B,GAAI,GAAQ,KAE7C,EAAO,oBAAsB,EAE7B,EAAO,gBAAkB,GAAI,GAAQ,KACrC,EAAO,oBAAsB,EAAO,oBAAoB,IAAI,EAAE,wBAC1D,EAAO,gBAAgB,GAAK,IAAM,EAAO,iBAAiB,IAAM,GAChE,GAAO,eAAiB,EAAO,eAAe,IAAI,EAAE,yBAExD,EAAO,oBAAsB,GAAI,GAAQ,KACzC,EAAO,qBAAqB,GAAK,EACjC,EAAO,qBAAqB,GAAK,EACjC,EAAO,qBAAqB,GAAK,EACjC,EAAO,qBAAqB,GAAK,EACjC,EAAO,qBAAqB,GAAK,EAEjC,EAAE,uBAA4B,GAAI,GAAQ,KAEtC,EAAO,aAAa,iBAAmB,GAAK,EAAO,iBAAiB,gBAAkB,GACtF,GAAO,qBAAqB,GAAK,EAAO,4BAA4B,GACpE,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,GACpE,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,GACpE,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,GACpE,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,IAIxE,EAAO,0BAA4B,GACnC,EAAO,oCAAsC,GAC7C,EAAO,6CAA+C,GACtD,EAAO,sDAAwD,GAC/D,EAAO,yBAA2B,GAClC,EAAO,wBAA0B,GAE7B,EAAO,qBAAuB,EAAO,oBAAsB,EAAO,iBAAiB,gBAAkB,GACrG,GAAO,mBAAqB,EAAO,sBAGvC,KACA,EAAO,qBAAuB,EAC9B,EAAE,gBAAmB,cAAgB,EAEjC,EAAO,oBAAsB,EAAO,aAAe,GAAK,CACxD,GAAM,GAAa,EAAO,eAAiB,IAAO,IAAO,EACzD,GAAY,EAAO,aAAc,GAAM,GAG3C,IACA,KAGJ,GAAI,IAAU,aAAe,IAAU,qBAAsB,CACzD,GAAM,GAAW,KACjB,GAA0B,EAAG,EAAS,IAEtC,EAAO,iBAAiB,aAAe,EACvC,EAAO,iBAAiB,cAAgB,EACxC,EAAO,mBAAqB,EAC5B,GAA4B,SAC5B,EAAE,4BAAiC,EAEnC,KACA,KACA,KACA,EAAO,oBAAsB,GAAI,GAAQ,KACzC,EAAO,oBAAsB,GAAI,GAAQ,KACzC,EAAO,mBAAqB,EAC5B,EAAO,sBAAwB,EAC/B,EAAO,kBAAoB,EAC3B,EAAO,mBAAqB,EAC5B,EAAO,kBAAoB,EAC3B,EAAO,sBAAwB,EAC/B,EAAO,YAAY,GAAG,GAAK,EAC3B,OAAS,GAAI,GAAI,GAAK,GAAI,IACtB,EAAO,SAAS,GAAK,EAEzB,OAAS,GAAI,GAAI,GAAK,IAAK,IACvB,EAAO,SAAS,GAAK,EAkCzB,GAhCA,EAAO,oBAAsB,EAC7B,EAAO,qBAAuB,EAC9B,EAAO,oBAAsB,EAC7B,EAAO,qBAAuB,EAC9B,EAAO,oBAAsB,EAC7B,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,oBAAsB,GAAI,GAAQ,OACzC,EAAO,mBAAqB,GAAI,GAAQ,OACxC,EAAO,oBAAsB,GAAI,GAAQ,OACzC,EAAO,mBAAqB,GAAI,GAAQ,QACxC,EAAO,QAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAO,QAAQ,GAAI,EAAO,QAAQ,IACnE,EAAO,WAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAO,WAAW,GAAI,EAAO,WAAW,IAC5E,EAAO,WAAa,EACpB,EAAO,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE/C,EAAO,WAAW,GAAK,EAAI,EAAO,aAAa,IAC/C,EAAO,WAAW,GAAK,EAAI,EAAO,aAAa,IAC/C,EAAO,WAAW,GAAK,EAAI,EAAO,aAAa,IAC/C,EAAO,WAAW,GAAK,EAAI,EAAO,aAAa,IAC/C,EAAO,WAAW,GAAK,EAAI,EAAO,aAAa,IAE3C,EAAO,aAAa,MAAQ,GAC5B,GAAO,oBAAsB,EAC7B,EAAO,qBAAuB,EAC9B,EAAO,oBAAsB,EAC7B,EAAO,qBAAuB,EAC9B,EAAO,oBAAsB,GAG7B,EAAO,aAAa,IAAM,GAC1B,GAAO,gBAAkB,GAEzB,EAAO,qBAAqB,IAAM,EAAG,CACrC,GAAI,GAAW,EACf,AAAI,EAAO,kBAAoB,IACvB,GAAO,aAAa,KAAO,GAC3B,IAAY,IAEhB,GAAY,EAAK,GAAO,iBAAmB,GAAK,GAAM,GAAO,GAAO,aAAa,KAAO,EAAO,aAAa,KAAO,EAAO,aAAa,KAAO,EAAO,aAAa,KAAO,EAAO,aAAa,OAE7L,EAAO,aAAa,KAAO,GAAK,EAAS,GAAK,KAC9C,IAAa,KAAK,IAAI,EAAS,IAAM,KAAK,IAAI,IAAM,GAExD,GAAY,EAAE,mBAAsB,WAChC,EAAO,aAAa,KAAO,GAC3B,IAAY,KACZ,EAAO,aAAa,KAAO,GAC3B,IAAY,KACZ,EAAO,iBAAiB,IAAM,GAC9B,IAAY,GAChB,GAAa,EAAI,IAAO,EAAO,iBAAiB,IAChD,GAAa,EAAI,IAAO,EAAO,iBAAiB,IAAM,KAAK,IAAI,EAAG,EAAO,eAAiB,KAC1F,EAAW,KAAK,MAAM,GACtB,EAAO,gBAAkB,EACzB,EAAO,SAAS,IAAI,EAAS,IAC7B,EAAO,cAAc,IAAI,EAAS,IAClC,EAAO,cAAc,IAAI,EAAS,IAClC,EAAO,iBAAiB,IAAI,EAAS,IACrC,EAAO,aAAe,EAAS,GAGnC,OAAS,GAAI,EAAG,GAAK,GAAI,IACrB,EAAO,qBAAqB,GAAK,EACjC,EAAO,4BAA4B,GAAK,EAG5C,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,GAAK,EAAO,aAAa,IAC7F,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,GAAK,EAAO,aAAa,IAC7F,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,GAAK,EAAO,aAAa,IAE7F,SAAS,eAAe,MAAM,EAAO,cAAgB,KAAK,UAAU,OAAO,kBAC3E,EAAO,oBAAsB,EAC7B,EAAO,aAAe,EAEtB,OAAS,GAAI,EAAG,GAAM,IAAM,IAAK,CAC7B,GAAM,GAAI,MAAM,IAChB,AAAI,EAAO,WAAW,GAAK,IAAO,EAAO,WAAW,GAAK,EAAE,kBAAqB,GAC5E,EAAgB,EAAG,CAAC,qBAAsB,CAAC,oBAAqB,gBAAiB,6BAA8B,wBAC5G,AAAI,EAAO,WAAW,GAAK,IAAO,EAAO,WAAW,IAAM,EAAE,kBAAqB,GACpF,EAAgB,EAAG,CAAC,iBAAkB,CAAC,oBAAqB,oBAAqB,6BAA8B,wBAE/G,EAAgB,EAAG,CAAC,uBAAwB,CAAC,oBAAqB,oBAAqB,6BAA8B,kBAI7H,KACA,IACA,KACA,KACA,KACA,GAA0B,GAE1B,EAAO,iBAAmB,EAE1B,KACA,EAAyB,GACzB,EAAyB,GACzB,EAAyB,GACzB,EAAyB,GACzB,EAAyB,GACzB,EAAyB,GACzB,EAAyB,GACzB,KACA,KACA,KAEI,EAAO,aAAa,KAAO,GAC3B,GAAO,SAAS,IAAM,EACtB,EAAO,SAAS,IAAM,EACtB,EAAO,SAAS,IAAM,EACtB,EAAO,SAAS,IAAM,EACtB,EAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,KAAO,GAC3B,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,KAAO,GAC3B,GAAO,SAAS,KAAO,GAG3B,OAAS,GAAI,GAAI,GAAK,GAAI,IACtB,SAAS,eAAe,MAAQ,GAAG,MAAM,gBAAkB,QAE/D,OAAS,GAAI,GAAI,GAAK,IAAK,IACvB,AAAI,EAAO,SAAS,KAAO,GACvB,UAAS,eAAe,MAAQ,GAAG,MAAM,gBAAkB,SAGnE,EAAO,gBAAkB,MAAM,KAAK,EAAO,sBAC3C,KAIJ,EAAO,QAAQ,SAAW,GAEtB,IAAS,gBAAkB,GAAS,0BACpC,GAAO,QAAQ,UAAY,IAE3B,IAAS,iBAAmB,GAAS,2BACrC,GAAO,QAAQ,YAAc,IAE5B,GACD,KACA,OAIF,GAAgB,AAAC,GAAc,CACjC,GAAI,EAAI,IAAK,CACT,OAAS,GAAI,GAAI,EAAI,GAAI,IACrB,AAAI,IAAM,IACN,GAAO,SAAS,GAAK,GAI7B,AAAI,EAAO,WAAW,MAAQ,GAC1B,GAAO,SAAS,IAAM,GAGtB,EAAO,WAAW,IAAM,IACxB,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,MAAQ,GAC5B,GAAO,SAAS,IAAM,GAEtB,EAAO,WAAW,IAAM,IACxB,GAAO,SAAS,IAAM,GAEtB,EAAO,WAAW,IAAM,IACxB,GAAO,SAAS,IAAM,GAEtB,EAAO,WAAW,IAAM,IACxB,GAAO,SAAS,IAAM,GAEtB,EAAO,WAAW,IAAM,IACxB,GAAO,SAAS,IAAM,GAG1B,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EAG3B,OAAS,GAAI,EAAG,GAAK,GAAI,IACrB,EAAO,SAAS,GAAK,EAIzB,OAAS,GAAI,IAAK,EAAI,IAAK,GAAK,IAAK,IAAK,IACtC,EAAO,SAAS,GAAK,EACrB,EAAO,SAAS,GAAK,EAoCzB,GAjCI,EAAI,KACA,GAAO,aAAa,GAAK,IACzB,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAEtB,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,GAI1B,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,GAKvB,EAAI,IAAK,CACT,OAAS,GAAI,GAAI,EAAI,GAAI,IACrB,EAAO,SAAS,GAAK,EAGzB,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EACvB,EAAO,SAAS,KAAO,EAG3B,GAAI,EAAI,IAAK,CACT,EAAO,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,EAAO,oBAAsB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KAE5D,GAAI,GAAI,EACR,GAAK,KAAK,MAAM,EAAE,WAAgB,EAAE,mBAAwB,IAAM,IAAM,IACpE,EAAO,SAAS,IAAM,IAAO,EAAO,iBAAiB,gBAAkB,GACvE,IAAK,IAET,EAAO,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGnD,OAAS,GAAI,EAAG,GAAK,IAAK,IACtB,GAAc,EAAG,IAErB,AAAI,EAAO,aAAa,IAAM,IAC1B,GAAO,SAAS,IAAM,IAIjB,GAAY,IAAM,CAC3B,EAAO,eAAiB,EACpB,EAAO,aAAa,IAAM,GAC1B,GAAO,eAAiB,GAG5B,EAAO,gBAAkB,EACzB,EAAO,eAAiB,EACxB,EAAO,gBAAkB,EACzB,EAAO,eAAiB,EACxB,EAAO,eAAiB,EACxB,EAAO,iBAAmB,EAC1B,EAAO,gBAAkB,EAEzB,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,oBAAsB,GAAI,GAAQ,KACzC,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,oBAAsB,GAAI,GAAQ,KACzC,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,qBAAuB,GAAI,GAAQ,KAC1C,EAAO,oBAAsB,GAAI,GAAQ,KAEzC,EAAO,cAAgB,GAAI,GAAQ,SACnC,EAAO,eAAiB,GAAI,GAAQ,KACpC,EAAO,cAAgB,GAAI,GAAQ,OACnC,EAAO,eAAiB,GAAI,GAAQ,OACpC,EAAO,cAAgB,GAAI,GAAQ,QACnC,EAAO,cAAgB,GAAI,GAAQ,QACnC,EAAO,gBAAkB,GAAI,GAAQ,SACrC,EAAO,eAAiB,GAAI,GAAQ,SAEpC,GAAM,GAAQ,EAAO,YAAY,GAAG,GACpC,EAAO,YAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD,EAAO,UAAY,GAAI,GAAQ,KAE3B,EAAO,iBAAiB,YAAc,IACtC,GAAO,UAAY,GAAI,GAAQ,MAGnC,KACA,KAGE,GAAkB,IAAM,CAC1B,EAAO,eAAiB,EAExB,GAAM,GAAU,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/F,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/F,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAGnG,OAAW,KAAQ,GACf,EAAO,WAAW,GAAQ,GAI5B,GAAiB,IAAM,CACzB,EAAO,eAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,EAAO,eAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE3C,EAAO,eAAiB,EACxB,EAAO,gBAAkB,EACzB,EAAO,kBAAoB,EAC3B,EAAO,cAAgB,EACvB,EAAO,cAAgB,EACvB,EAAO,mBAAqB,EAC5B,EAAO,kBAAoB,GC/yBxB,GAAM,IAA6B,IAAM,CAE5C,GAAM,GAAgB,OAAO,OAAO,EAAO,mBACrC,EAAc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,OAAS,GAAI,EAAG,EAAI,EAAc,OAAQ,IAAK,CAC3C,GAAI,GAAQ,EACR,EAAO,EACX,AAAI,EAAc,IAAM,EAAY,IAChC,GAAQ,EAAE,gBAAmB,GAC7B,GAAQ,KAAK,IAAI,EAAY,GAAK,EAAI,EAAE,gBAAmB,KAG/D,EAAE,wBAA2B,GAAK,EAAI,EAAO,EAAE,iBAAoB,GAAK,KAAK,IAAI,EAAc,GAAI,KCPpG,GAAM,IAAqB,IAAM,CACpC,GAAI,GAAa,EACjB,MAAI,GAAO,kBAAoB,GAC3B,IAAc,EAAO,kBAAoB,MAEzC,EAAO,aAAa,KAAO,GAC3B,IAAc,IAEd,EAAO,aAAa,KAAO,GAC3B,IAAc,IAEd,EAAO,iBAAiB,GAAK,GAC7B,IAAc,IAEd,EAAO,iBAAiB,IAAM,GAC9B,IAAc,KAEd,EAAO,iBAAiB,IAAM,GAC9B,IAAc,IAEd,EAAO,qBAAuB,MAC9B,IAAe,EAAE,mBAAsB,OAAS,GAEhD,EAAO,aAAa,gBACpB,IAAe,IAAM,IAAO,GAAK,EAAO,WAAW,IAEnD,EAAO,qBAAuB,MAC9B,IAAe,EAAI,EAAE,IAAQ,EAAmB,UAEhD,EAAO,eAAiB,GACxB,IAAc,MAEd,EAAO,aAAa,KAAO,GAC3B,IAAe,EAAI,KAAK,IAAI,GAAM,EAAO,eAAkB,OAExD,GAGE,GAAe,IAAM,CAC9B,GAAI,GAAU,IACd,AAAI,EAAO,WAAW,KAAO,GACzB,IAAW,KAAQ,EAAO,WAAW,MAIzC,GAAI,GAAmB,EAEjB,EAAkB,CAAC,GAAI,IAAK,IAAK,IAAK,KAC5C,OAAW,KAAM,GACb,GAAoB,EAAO,WAAW,GAE1C,GAAM,GAAkB,KAClB,EAAe,EAAmB,EAGlC,EAAW,KAAK,MAAM,EAAe,EAAU,MAG/C,EAAY,KAAK,MAAM,EAAO,YAAc,EAAe,MAG3D,EAAW,KAEjB,MAAO,CACH,QAAS,EACT,QAAS,EACT,SAAU,EACV,KAAM,EACN,SAAU,IA5ElB,GAgFO,QAAmB,CAQtB,YAAY,CAAE,QAAO,UAA8C,CAN3D,WAAQ,EAER,YAAS,EAsFhB,SAAsB,AAAC,GAAc,IAAM,SAAW,KAAK,OAAS,KAjFjE,KAAK,OAAS,EACd,AAAI,EACA,KAAK,MAAQ,EAEb,KAAK,WAEL,GAAa,WAAa,MAC1B,IAAa,SAAW,YAAY,KAAK,SAAS,KAAK,MAAO,GAAK,IAAO,IAIlF,WAAW,EAAgB,CACvB,MAAO,GAAU,GAAK,KAAK,MAAQ,KAIvC,IAAI,EAAgB,EAAW,GAAM,CACjC,MAAI,GACA,KAAK,QAAU,KAAK,WAAW,GAE/B,KAAK,QAAU,EACZ,KAIX,IAAI,EAAgB,CAChB,YAAK,QAAU,EACX,KAAK,OAAS,GAAG,MAAK,OAAS,GAE5B,QAGA,SAAkB,CACzB,MAAO,MAAK,WAGV,WAAW,CACb,GAAM,GAAK,SAAS,eAAe,gBACnC,GAAI,aAAa,QAAQ,gBAAkB,KAAM,CAC7C,GAAM,CAAE,QAAO,WAAY,KAAK,MAAM,aAAa,QAAQ,eAC3D,GAAI,KAAK,MAAQ,EAAU,GAAK,IAAO,GACnC,eAAQ,IACJ,gBAAiB;AAAA,cAAkD,KACnE,wEAEJ,EAAG,YAAc,wCAAwC,kBAClD,KAAK,MAAQ,UAEjB,CAAC,UAAU,OAClB,MAAO,GAAG,YAAc,iCAG5B,GAAI,CAMA,GAAM,GAAI,KAAM,AALN,MAAM,OAAM,gEAAiE,CACnF,QAAS,CACL,OAAU,qCAGA,OACZ,EAAI,OAAO,EAAE,MAAM,2BAA2B,SAEpD,GAAI,OAAO,MAAM,GACb,MAAO,GAAM,0DACZ,GAAK,OAAO,SAAS,IAErB,GAAI,EAAI,EACT,MAAO,GAAM,+DAFb,OAAO,GAAM,+DAIjB,QAAQ,IAAI,gBAAiB,8BAA+B,wEAC5D,EAAG,YAAc,wCAAwC,kBACzD,aAAa,QAAQ,aAAc,KAAK,UAAU,CAAE,MAAO,EAAG,QAAS,KAAK,SAC5E,KAAK,MAAQ,QACT,EAAN,CACE,QAAQ,IAAI,qFAlFjB,MAhFP,AA0KK,UAAO,YApFO,AANZ,GAMY,SAAkD,KC7DrE,GAAM,IAGF,CACA,YAAe,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,IAC9D,WAAe,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,IAC9D,SAAe,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,IAC9D,QAAe,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,IAC9D,UAAe,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,IAC9D,SAAe,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,IAC9D,aAAe,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,IAC9D,OAAe,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,IAC9D,cAAe,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,IAC9D,YAAe,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,MAG5D,GAGF,CACA,MAAgB,CAAC,OAAQ,MAAO,IAAK,AAAC,GAAc,GAAK,GAAK,GAAK,IACnE,WAAgB,CAAC,OAAQ,MAAO,IAAK,AAAC,GAAc,GAAS,GAAK,GAAK,IACvE,WAAgB,CAAC,OAAQ,MAAO,IAAK,AAAC,GAAc,GAAS,GAAK,GAAK,IACvE,UAAgB,CAAC,OAAQ,IAAK,IAAK,AAAC,GAAc,GAAS,GAAK,GAAK,OACrE,eAAgB,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,MAAS,GAAK,GAAK,SACnE,MAAgB,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,QAAU,GAAK,GAAK,QACpE,WAAgB,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,OAAS,GAAK,GAAK,SACnE,YAAgB,CAAC,OAAQ,EAAG,IAAK,AAAC,GAAc,QAAU,GAAK,GAAK,MAkBjE,QAAoB,CAKvB,YACI,EACA,EAAI,EACN,CACE,KAAK,IAAM,EACX,KAAK,MAAQ,OAWX,aAAa,CAEf,GAAM,GAAe,EAAO,KAAK,KAC3B,EAAS,KAAM,IAAO,mDAAmD,EAAa,MAAM,qBAClG,GAAI,IAAW,KACX,MAAO,GAAM,wBACjB,GAAM,GAAc,OAAO,GAE3B,MAAI,QAAO,MAAM,IAAgB,CAAC,OAAO,SAAS,GACvC,EAAM,kCACR,EAAa,MAAQ,EACnB,EAAM,wCACR,GAAe,EACb,EAAM,8CAEV,KAAK,KAAK,EAAa,IAAgB,EAAa,OAI/D,eAAe,EAAc,EAAc,EAAuB,CAC9D,GAAI,EAAQ,EACR,MAAO,GAIX,GAAM,GAAa,KAAuB,EAAO,KAAe,SAChE,MAAO,MAAK,MAAM,KAAK,MAAM,GAAS,EAAO,GAIjD,sBAAsB,EAAc,EAAc,EAAgB,EAAuB,CAGrF,GAAM,GAAa,KAAuB,EAAO,KAAe,SAEhE,MAAO,MAAK,KAAK,KAAK,IAAI,GAAK,GAAS,GAAM,GAAa,IAAS,GAGxE,IAAI,EAAsB,CACtB,YAAK,OAAS,EACP,KAGX,IAAI,EAAsB,CACtB,YAAK,MAAQ,KAAK,IAAI,EAAG,KAAK,MAAQ,GAC/B,MAGV,OAAO,aAAa,EAAW,CAC5B,OAAQ,OACC,SAAU,MAAO,MAAK,MAAM,eAC5B,SAAU,MAAO,MAAK,cAClB,MAAO,SAKrB,gBAAuB,GAAK,CAC/B,YAAY,EAAS,OAAO,EAAO,UAAW,CAC1C,MAAM,WAAY,GAGtB,KAAK,EAAe,EAAM,GAAO,CAC7B,GAAI,GAAU,EAAM,OAAO,MAAQ,KAAK,IAAI,OAAO,MAAO,GAE1D,AAAI,IAAU,GAAK,EAAO,cAAc,aAAe,MAAQ,EAAO,aAAa,KAAO,GACtF,EAAiB,KAGrB,KAAK,IAAI,GACT,EAAO,iBAAmB,EAE1B,GAAM,GAAa,EAAO,aAAa,YAAe,IAAM,EACtD,EAAa,OAAO,KAAK,eAAe,EAAG,EAAW,EAAO,kBAC7D,EAAmB,KAAK,IAAI,EAAG,EAAa,EAAO,gBACzD,EAAO,gBAAkB,EACzB,EAAO,OAAO,IAAI,GAElB,GAAY,EAAI,EAAO,WAAW,KAAO,IACzC,GAAY,EAAI,GAAM,EAAO,WAAW,KAAO,IAC/C,GAAY,EAAI,GAAM,EAAO,WAAW,KAAO,IAE/C,EAAU,KAAK,MAAM,GACrB,GAAI,GAAgB,EAAU,GAC1B,EAAe,KAAK,MAAM,EAAU,IAExC,AAAI,EAAe,GAAK,EAAO,aAAa,MAAQ,GAChD,IAAiB,GAEjB,EAAe,GAAK,EAAO,aAAa,MAAQ,GAChD,IAAiB,GAEjB,EAAe,GAAK,EAAO,aAAa,MAAQ,GAChD,IAAiB,GAGrB,GAAgB,IAAM,IAAM,KAAK,MAAM,EAAgB,IACvD,EAAgB,EAAgB,GAEhC,GAAM,GAAO,OAAO,KAAK,EAAO,eAGhC,OAAW,KAAO,GACd,EAAO,cAAc,IAAQ,GAAU,GAAK,OAAS,EAAgB,GAAI,KAAK,MAAM,EAAQ,YAAa,EAAO,qBAAqB,OAIzI,OAAS,GAAI,EAAG,EAAI,EAAe,IAAK,CACpC,GAAM,GAAM,IAAM,KAAK,SACvB,OAAW,KAAO,GACd,AAAI,GAAU,GAAK,IAAI,IACnB,GAAO,cAAc,IAAS,EAAI,KAAK,MAAM,EAAQ,YAAa,EAAO,qBAAqB,OAI1G,OAID,gBAA4B,GAAK,CACpC,YAAY,EAAS,OAAO,EAAO,eAAgB,CAC/C,MAAM,gBAAiB,GAG3B,KAAK,EAAe,EAAM,GAAO,CAC7B,GAAM,GAAU,EAAM,OAAO,MAAQ,KAAK,IAAI,OAAO,MAAO,GAE5D,EAAO,cAAc,IAAI,GACzB,EAAO,sBAAwB,EAE/B,GAAM,GAAa,EAAO,aAAa,iBAAoB,IAAM,EAC3D,EAAa,OAAO,KAAK,eAAe,EAAG,EAAW,EAAO,uBAC7D,EAAmB,KAAK,IAAI,EAAG,EAAa,EAAO,qBACzD,EAAO,qBAAuB,EAC9B,EAAO,OAAO,IAAI,GAElB,GAAM,GAAgB,EAAU,GAC1B,EAAe,KAAK,MAAM,EAAU,IAG1C,OAAW,KAAO,GAAO,mBACrB,EAAO,mBAAmB,IAA8C,GAAU,GAA+B,OAAS,EAG9H,OAAS,GAAI,EAAG,EAAI,EAAe,IAAK,CACpC,GAAM,GAAM,IAAM,KAAK,SACvB,OAAW,KAAO,GAAO,mBACrB,AAAI,GAAU,GAA+B,IAAI,IAC7C,GAAO,mBAAmB,IAA8C,GAIpF,KACA,GAAM,GAAqB,KAAK,MAAM,GAAK,EAAU,EAAO,WAAW,MACvE,EAAO,SAAS,IAAI,GACpB,EAAO,SAAS,KAAK,EAAoB,MAI1C,gBAA4B,GAAK,CACpC,YAAY,EAAS,OAAO,EAAO,eAAgB,CAC/C,MAAM,gBAAiB,GAG3B,KAAK,EAAe,EAAM,GAAO,CAC7B,GAAM,GAAU,EAAM,OAAO,MAAQ,KAAK,IAAI,OAAO,MAAO,GAE5D,EAAO,cAAc,IAAI,GACzB,EAAO,sBAAwB,EAE/B,GAAM,GAAa,EAAO,aAAa,iBAAoB,IAAM,EAC3D,EAAa,KAAK,eAAe,GAAI,EAAW,EAAO,sBACvD,EAAmB,KAAK,IAAI,EAAG,EAAa,EAAO,qBACzD,EAAO,qBAAuB,EAC9B,EAAO,OAAO,IAAI,GAElB,GAAM,GAAgB,EAAU,GAC1B,EAAe,KAAK,MAAM,EAAQ,IAGxC,OAAW,KAAO,GAAO,mBACrB,EAAO,mBAAmB,IAA8C,GAAU,GAA+B,OAAS,EAG9H,OAAS,GAAI,EAAG,EAAI,EAAe,IAAK,CACpC,GAAM,GAAM,IAAM,KAAK,SACvB,OAAW,KAAO,GAAO,mBACrB,AAAI,GAAU,GAA+B,IAAI,IAC7C,GAAO,mBAAmB,IAA8C,GAIpF,KACA,GAAM,GAA0B,KAAK,MAAM,IAAM,EAAU,EAAO,WAAW,MAC7E,EAAO,cAAc,IAAI,GACzB,EAAO,cAAc,KAAK,EAAyB,MAIpD,gBAA+B,GAAK,CACvC,YAAY,EAAS,OAAO,EAAO,kBAAmB,CAClD,MAAM,mBAAoB,GAG9B,KAAK,EAAe,EAAM,GAAO,CAC7B,GAAM,GAAU,EAAM,OAAO,MAAQ,KAAK,IAAI,OAAO,MAAO,GAE5D,EAAO,iBAAiB,IAAI,GAC5B,EAAO,yBAA2B,EAElC,GAAM,GAAY,IACZ,EAAa,KAAK,eAAe,GAAI,EAAW,EAAO,yBACvD,EAAmB,KAAK,IAAI,EAAG,EAAa,EAAO,wBACzD,EAAO,wBAA0B,EACjC,EAAO,OAAO,IAAI,GAElB,GAAI,GAAgB,EAAU,IACxB,EAAkB,KAAK,MAAM,EAAU,KAG7C,OAAW,KAAO,GAAO,kBACrB,EAAO,kBAAkB,IAA6C,GAAkB,GAAuC,OAAS,EAG5I,GAAM,GAAU,CAAC,iBAAkB,QAAS,aAAc,eAC1D,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,IAAK,CACrC,GAAM,GAAM,KAAK,SACjB,AAAI,EAAgB,KAAS,GAAO,IAAkB,GAClD,GAAO,kBAAkB,EAAQ,KAA4C,EAC7E,GAAiB,GAGzB,GAAM,GAAa,CAAC,KAAK,MAAM,GAAK,EAAgB,KAAM,KAAK,MAAM,GAAK,EAAgB,KAAM,KAAK,MAAM,GAAK,EAAgB,KAAM,KAAK,MAAM,IAAM,EAAgB,MACjK,EAAc,CAAC,QAAS,aAAc,aAAc,aAC1D,OAAS,GAAI,EAAG,EAAI,EAAY,OAAQ,IACpC,EAAO,kBAAkB,EAAY,KAAO,EAAW,GACvD,GAAiB,EAAW,GAGhC,OAAS,GAAI,EAAG,EAAI,EAAe,IAAK,CACpC,GAAM,GAAM,IAAM,KAAK,SACvB,OAAW,KAAO,GAAO,kBACrB,AAAI,GAAkB,GAAuC,IAAI,IAC7D,GAAO,kBAAkB,IAA6C,GAIlF,GADA,KACI,EAAO,aAAa,KAAO,EAAG,CAC9B,GAAM,GAAkB,KAAK,MAAM,EAAU,KAAK,IAAI,EAAG,KAAK,IAAI,EAAI,GAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,IAAM,KAAO,OAC3H,EAAO,cAAc,IAAI,GACzB,EAAO,cAAc,KAAK,EAAiB,OCjUhD,YAAqB,CAqCxB,YAAY,EAAuB,CAjCnC,cAAW,GAKX,SAAM,EAMN,SAAM,EACN,cAAW,EAKX,0BAAuB,EAcvB,cAAW,EAaX,YAAS,AAAC,GACF,KAAK,WAAa,GACX,KAEX,MAAK,SAAW,GACT,EAAM,2DAA6D,EAAgB,6BAI9F,WAAQ,SAAqC,CAEzC,GAAM,GAAiB,KAAM,IAAO,qCACpC,GAAI,IAAmB,KACnB,MAAO,GAAM,0BACjB,GAAM,GAAc,OAAO,GAG3B,GAAI,OAAO,MAAM,IAAgB,CAAC,OAAO,SAAS,GAC9C,MAAO,GAAM,kCACZ,GAAI,GAAe,EACpB,MAAO,GAAM,6DAGjB,GAAI,CAAC,KAAK,SACN,MAAO,GAAM,mEAGjB,GAAM,GAAiB,KAAK,MAAO,EAAO,YAAc,KAAK,qBAAwB,EAAK,GAAI,KAAK,WAG7F,EAA4B,GAClC,OAAW,KAAQ,MAAK,kBAEpB,EAAW,KAAK,KAAK,MAAO,EAAO,GAAmC,KAAK,kBAAkB,IAAyB,EAAK,GAAI,KAAK,WAIxI,GAAM,GAAoB,KAAK,IAAI,GAAG,GAGhC,EAAgB,KAAK,IAAI,EAAmB,EAAgB,EAAa,KAAK,IAAM,KAAK,KAC/F,KAAK,KAAO,EAGZ,EAAO,aAAe,EAAgB,KAAK,qBAC3C,OAAW,KAAQ,MAAK,kBACpB,AAAI,MAAO,GAAO,IAA0B,SACvC,EAAO,IAAoC,EAAgB,KAAK,kBAAkB,GAClF,AAAI,OAAO,UAAU,cAAc,KAAK,GAAM,EAAO,IACrD,EAAO,GAA+B,IAAI,EAAgB,KAAK,kBAAkB,IAC7E,GAAQ,UACb,EAAO,OAAO,IAAI,EAAgB,KAAK,kBAAkB,IAEjE,MAAO,GAAM,iCAAmC,EAAO,EAAe,EAAG,IAAQ,wHAgBrF,YAAS,SACgB,KAAM,GAAQ,wGAI9B,KAAK,SAIN,KAAK,IAAM,KAAK,IACT,EAAM,oDAGjB,MAAK,IAAM,EACX,KAAK,KAAO,EACL,EAAM,yDAA2D,EAAO,KAAK,IAAK,EAAG,IAAQ,MATzF,EAAM,yCAHN,KA5InB,YA0DQ,KAAK,SAAW,EAAK,SACrB,KAAK,qBAAuB,EAAK,qBACjC,KAAK,kBAAoB,EAAK,kBAC9B,KAAK,SAAW,KAAK,WAAL,OAAiB,GACjC,KAAK,IAAM,KAAK,MAAL,OAAY,EACvB,KAAK,IAAM,KAAK,MAAL,OAAY,KAAK,SAC5B,KAAK,SAAW,KAAK,WAAL,OAAiB,EA6DrC,MAAM,EAAgC,CAClC,MAAK,MAAK,SAGV,MAAK,KAAO,EACL,MAHI,KAiCf,YAAY,EAAgC,CAExC,MAAI,MAAK,SAAW,EAAU,EAAI,OAAO,QACrC,MAAK,SAAW,EAAI,OAAO,QACpB,MAGX,MAAK,UAAY,EACV,SAIP,SAAS,CACT,MAAO,MAAK,OAEZ,WAAW,CACX,MAAO,MAAK,OAEZ,WAAW,CACX,MAAO,MAAK,WAKd,GAA2B,CAC7B,QAAW,CACP,MAAO,IACP,GAAI,EAAE,GAEV,aAAgB,CACZ,MAAO,IACP,GAAI,KAER,MAAS,CACL,MAAO,IACP,GAAI,IAER,UAAa,CACT,MAAO,IACP,GAAI,EAAE,GAEV,MAAS,CACL,MAAO,EACP,GAAI,GAER,YAAe,CACX,MAAO,IACP,GAAI,IAER,iBAAoB,CAChB,MAAO,IACP,GAAI,IAER,WAAc,CACV,MAAO,IACP,GAAI,KAIC,GAAkB,AAAC,GACrB,GAAI,IAAe,GAGjB,EAAqB,AAAC,GAAyB,CACxD,GAAI,GAAiB,KAAK,IAAI,EAAO,gBAAgB,GAAM,IAAK,GAAyB,GAAM,OAC3F,EAAgB,EACpB,MAAI,KAAS,WACT,IAAiB,EAAE,IAAM,EAAO,iBAAiB,KAEjD,EAAO,gBAAgB,GAAM,IAAM,GAAyB,GAAM,OAClE,IAAkB,KAAK,IAAI,EAAO,gBAAgB,GAAM,IAAM,GAAyB,GAAM,MAAO,GAAyB,GAAM,GAAK,IAGrI,GAGE,GAAwB,AAAC,GAAyB,CAC3D,SAAS,eAAe,yBAAyB,MAAM,QAAU,QACjE,SAAS,eAAe,8BAA8B,MAAM,QAAU,QACtE,SAAS,eAAe,wBAAwB,MAAM,QAAU,QAChE,SAAS,eAAe,qBAAqB,MAAM,QAAU,OAC7D,SAAS,eAAe,qBAAqB,MAAM,QAAU,QAE7D,GAAM,GAAe,SAAS,eAAe,yBACvC,EAAa,SAAS,eAAe,uBACrC,EAAoB,SAAS,eAAe,8BAC5C,EAAc,SAAS,eAAe,wBACtC,EAAW,SAAS,eAAe,qBACzC,OAAO,OACE,UACD,EAAa,YAAe,EAAO,gBAAgB,QAAQ,SAAY,eAAgB,aACvF,EAAW,YAAc,0FACzB,EAAkB,YAAc,oCAAsC,EAAO,EAAmB,WAAa,EAAI,IAAK,EAAG,IAAQ,IACjI,EAAY,YAAc,cAAgB,EAAO,EAAO,gBAAgB,QAAQ,IAAK,EAAG,IAAQ,MAAQ,EAAO,EAAO,gBAAgB,QAAQ,KAC9I,EAAS,YAAc,8BAAgC,EAAO,EAAO,gBAAgB,QAAQ,qBAAsB,EAAG,IAAQ,wCAC9H,UACC,eACD,EAAa,YAAe,EAAO,gBAAgB,aAAa,SAAY,eAAgB,aAC5F,EAAW,YAAc,6FACzB,EAAkB,YAAc,+BAAiC,EAAO,EAAmB,gBAAkB,EAAI,IAAK,EAAG,IAAQ,IACjI,EAAY,YAAc,cAAgB,EAAO,EAAO,gBAAgB,aAAa,IAAK,EAAG,IAAQ,MAAQ,EAAO,EAAO,gBAAgB,aAAa,KACxJ,EAAS,YAAc,8BAAgC,EAAO,EAAO,gBAAgB,aAAa,qBAAsB,EAAG,IAAQ,kCACnI,UACC,QACD,EAAa,YAAe,EAAO,gBAAgB,MAAM,SAAY,eAAgB,aACrF,EAAW,YAAc,sFACzB,EAAkB,YAAc,2BAA6B,EAAO,EAAmB,SAAW,EAAI,IAAK,EAAG,IAAQ,IACtH,EAAY,YAAc,cAAgB,EAAO,EAAO,gBAAgB,MAAM,IAAK,EAAG,IAAQ,MAAQ,EAAO,EAAO,gBAAgB,MAAM,KAC1I,EAAS,YAAc,8BAAgC,EAAO,EAAO,gBAAgB,MAAM,qBAAsB,EAAG,IAAQ,8BAC5H,UACC,YACD,EAAa,YAAe,EAAO,gBAAgB,UAAU,SAAY,eAAgB,aACzF,EAAW,YAAc,oGACzB,EAAkB,YAAc,iCAAmC,EAAO,EAAmB,aAAe,EAAI,IAAK,EAAG,IAAQ,IAChI,EAAY,YAAc,cAAgB,EAAO,EAAO,gBAAgB,UAAU,IAAK,EAAG,IAAQ,MAAQ,EAAO,EAAO,gBAAgB,UAAU,KAClJ,EAAS,YAAc,8BAAgC,EAAO,EAAO,gBAAgB,UAAU,qBAAsB,EAAG,IAAQ,mDAChI,UACC,QACD,EAAa,YAAe,EAAO,gBAAgB,MAAM,SAAY,eAAgB,aACrF,EAAW,YAAc,kGACzB,EAAkB,YAAc,kDAChC,EAAY,YAAc,cAAgB,EAAO,EAAO,gBAAgB,MAAM,IAAK,EAAG,IAAQ,MAAQ,EAAO,EAAO,gBAAgB,MAAM,KAC1I,EAAS,YAAc,8BAAgC,EAAO,EAAO,gBAAgB,MAAM,qBAAsB,EAAG,IAAQ,sCAC5H,UACC,cACD,EAAa,YAAe,EAAO,gBAAgB,YAAY,SAAY,eAAgB,aAC3F,EAAW,YAAc,gHACzB,EAAkB,YAAc,+CAAgD,EAAO,IAAO,EAAmB,eAAgB,EAAG,IAAO,KAAO,EAAO,EAAmB,eAAiB,EAAI,IAAK,EAAG,IAAQ,IACjN,EAAY,YAAc,cAAgB,EAAO,EAAO,gBAAgB,YAAY,IAAK,EAAG,IAAQ,MAAQ,EAAO,EAAO,gBAAgB,YAAY,KACtJ,EAAS,YAAc,8BAAgC,EAAO,EAAO,gBAAgB,YAAY,qBAAsB,EAAG,IAAQ,uCAClI,UACC,mBACD,EAAa,YAAe,EAAO,gBAAgB,iBAAiB,SAAY,eAAgB,aAChG,EAAW,YAAc,sGACzB,EAAkB,YAAc,uCAAwC,EAAO,EAAmB,oBAAsB,GAAI,EAAG,IAAQ,IACvI,EAAY,YAAc,cAAgB,EAAO,EAAO,gBAAgB,iBAAiB,IAAK,EAAG,IAAQ,MAAQ,EAAO,EAAO,gBAAgB,iBAAiB,KAChK,EAAS,YAAc,8BAAgC,EAAO,EAAO,gBAAgB,iBAAiB,qBAAsB,EAAG,IAAQ,kCACvI,UACC,aACD,EAAa,YAAe,EAAO,gBAAgB,WAAW,SAAY,eAAgB,aAC1F,EAAW,YAAc,8GACzB,EAAkB,YAAc,8CAAgD,EAAO,IAAO,EAAmB,cAAe,EAAG,IAAO,KAAO,EAAO,EAAmB,cAAgB,EAAI,IAAK,EAAG,IAAQ,IAC/M,EAAY,YAAc,cAAgB,EAAO,EAAO,gBAAgB,WAAW,IAAK,EAAG,IAAQ,MAAQ,EAAO,EAAO,gBAAgB,WAAW,KACpJ,EAAS,YAAc,8BAAgC,EAAO,EAAO,gBAAgB,WAAW,qBAAsB,EAAG,IAAQ,kCACjI,QAOC,GAAoC,IAAM,CACnD,SAAS,eAAe,yBAAyB,MAAM,QAAU,OACjE,SAAS,eAAe,qBAAqB,MAAM,QAAU,OAC7D,SAAS,eAAe,qBAAqB,MAAM,QAAU,QAE7D,SAAS,eAAe,8BAA8B,YAAc,mCAAqC,EAAO,IAAM,IAAK,MAAiC,EAAG,IAAQ,iBACvK,SAAS,eAAe,wBAAwB,YAAc,yBAA2B,EAAO,EAAO,aAAc,EAAG,IAAQ,IAChI,SAAS,eAAe,uBAAuB,YAAc,6FAC7D,SAAS,eAAe,qBAAqB,YAAc,6CAOlD,GAA8B,SAAY,CACnD,GAAM,GAAS,KAAK,MAAM,EAAO,YAAc,MACzC,EAAiB,KAAM,IAAO,+DAAiE,EAAO,EAAQ,EAAG,IAAS,0BAC1H,EAAQ,OAAO,GACrB,GACI,OAAO,MAAM,IACb,CAAC,OAAO,UAAU,IAClB,GAAS,EAET,MAAO,GAAM,mCAEjB,GAAM,GAAY,KAAK,IAAI,EAAQ,GAC7B,EAAe,KACrB,EAAO,cAAgB,EACvB,EAAO,aAAe,KAAS,EAC/B,GAAM,GAAc,KAEpB,MAAO,GAAM,sBAAwB,EAAO,EAAW,EAAG,IAAQ,oBAAoB,EAAO,IAAO,GAAc,GAAe,EAAG,4BAO3H,GAA4B,IAAM,CAC3C,GAAI,GAAmB,kBAAoB,EAAO,IAAO,MAAgC,GAAI,EAAG,IAAQ,wBAA0B,EAAO,IAAO,MAAiC,GAAI,EAAG,IAAQ,4BAChM,AAAI,EAAO,iBAAiB,IAAM,GAC9B,IAAoB,sBAAwB,EAAO,EAAI,EAAO,iBAAiB,IAAM,KAAK,IAAI,EAAG,EAAO,eAAiB,KAAM,EAAG,IAAQ,qCAA4C,EAAO,EAAQ,IAAI,EAAO,eAAiB,EAAG,GAAK,EAAO,iBAAiB,MAAQ,gCAC7Q,SAAS,eAAe,yBAAyB,MAAM,QAAU,OACjE,SAAS,eAAe,8BAA8B,YAAc,kBAAoB,EACxF,SAAS,eAAe,wBAAwB,YAAc,YAAc,EAAO,EAAO,eAAgB,EAAG,IAAQ,6BACrH,SAAS,eAAe,uBAAuB,YAAc,oDAAoD,EAAO,EAAI,KAA4B,KAAM,EAAG,4BACjK,SAAS,eAAe,qBAAqB,MAAM,QAAU,OAE7D,SAAS,eAAe,qBAAqB,MAAM,QAAU,QAC7D,SAAS,eAAe,qBAAqB,YAAc,8BAA8B,EAAO,wBAQvF,GAAqB,SAC1B,EAAO,eAAiB,GACjB,EAAM,8DACb,EAAO,sBAAwB,EACxB,EAAM,2CACP,KAAM,GAAQ,4KAIpB,GAAO,gBAAkB,GACzB,EAAO,sBAAwB,EAC/B,KACO,EAAM,kIALN,EAAM,kDAUR,GAAmB,GAAI,IAAe,CAC/C,SAAU,IACV,qBAAsB,IACtB,kBAAmB,CAAC,eAAkB,OACtC,SAAU,KAID,GAAwB,GAAI,IAAe,CACpD,SAAU,IACV,qBAAsB,IACtB,kBAAmB,CAAC,WAAc,MAClC,SAAU,KAID,GAAiB,GAAI,IAAe,CAC7C,SAAU,IACV,qBAAsB,IACtB,kBAAmB,CAAC,OAAU,KAC9B,SAAU,KAID,GAAqB,GAAI,IAAe,CACjD,SAAU,IACV,qBAAsB,IACtB,kBAAmB,CAAC,iBAAoB,KAAM,SAAY,QAIjD,GAAiB,GAAI,IAAe,CAC7C,SAAU,EACV,qBAAsB,IACtB,kBAAmB,CAAC,SAAY,MAIvB,GAAuB,GAAI,IAAe,CACnD,SAAU,IACV,qBAAsB,IACtB,kBAAmB,CAAC,cAAiB,QAI5B,GAA4B,GAAI,IAAe,CACxD,SAAU,IACV,qBAAsB,IACtB,kBAAmB,CAAC,cAAiB,QAI5B,GAAsB,GAAI,IAAe,CAClD,SAAU,IACV,qBAAsB,IACtB,kBAAmB,CAAC,eAAkB,SC1a1C,GAAM,IAAkC,CACpC,SAAU,gFACV,SAAU,8DACV,SAAU,oEACV,SAAU,yEACV,SAAU,kEACV,SAAU,gEACV,SAAU,oEACV,SAAU,yEAGR,GAAqC,CACvC,YAAa,sBACb,YAAa,sBACb,YAAa,sBACb,YAAa,uBACb,YAAa,mBACb,YAAa,yBACb,YAAa,iBACb,YAAa,yBACb,YAAa,wBACb,aAAc,sBACd,aAAc,0BACd,aAAc,0BAGZ,GAAqC,CACvC,YAAa,yEACb,YAAa,yHACb,YAAa,0DACb,YAAa,6CACb,YAAa,qEACb,YAAa,+DACb,YAAa,gGACb,YAAa,6DACb,YAAa,oGACb,aAAc,+CACd,aAAc,wEACd,aAAc,2HAGL,GAA0B,IAClB,EAAO,iBAAiB,YAAc,GACjD,IAAS,GAA4B,MAAW,GAAO,YAAY,EAAE,GAAK,EAAE,WAAgB,IAAO,IAAM,KACzG,EAAE,IAAS,KAAS,GAA4B,MAAW,GAAO,YAAY,EAAE,GAAK,EAAE,WAAgB,IAAO,IAAM,MAKxH,GAAkB,CACpB,IAAM,oBAAsB,EAAO,EAAQ,IAAI,KAAO,EAAI,IAAO,EAAO,WAAW,KAAM,EAAO,YAAY,EAAE,GAAK,EAAE,WAAe,GAAK,WACzI,IAAM,+BAAiC,EAAO,MAC9C,IAAM,+BAAiC,EAAO,KAAQ,KAAQ,KAAK,IAAI,IAAM,EAAO,YAAY,EAAE,GAAK,EAAE,WAAe,GACxH,IAAM,uBAAyB,EAAO,IAAO,IAA4B,GAAK,GAAO,YAAY,EAAE,GAAK,EAAE,WAAgB,IAAO,GAAK,IAAM,GAAI,GAAK,IACrJ,IAAM,gBAAkB,EAAO,IAAO,IAA4B,GAAK,GAAO,YAAY,EAAE,GAAK,EAAE,WAAgB,IAAO,GAAK,IAAM,GAAI,GAAK,IAC9I,IAAM,cAAgB,EAAO,EAAI,KAAK,IAAK,EAAO,YAAY,EAAE,GAAK,EAAE,UAAe,KAAO,GAC7F,IAAM,wBAA0B,EAAO,KAAK,IAAI,QAAQ,EAAI,EAAO,YAAY,EAAE,GAAK,EAAI,EAAE,WAAc,EAAE,IAAQ,YACpH,IAAM,6BAA+B,EAAO,GAA4B,IAAK,EAAI,IAAQ,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAE,UAAc,MAAO,GAAK,IACxJ,IAAM,kBAAoB,EAAO,EAAI,KAAK,IAAI,IAAM,EAAO,YAAY,EAAE,GAAK,EAAE,WAAe,EAAE,IAAQ,qBACzG,IAAM,cAAgB,EAAO,EAAI,EAAI,KAAK,IAAK,GAAO,YAAY,GAAG,GAAK,EAAE,YAAiB,GAAI,KAAO,GACxG,IAAM,kBAAoB,EAAO,EAAI,EAAK,GAAI,KAAK,IAAI,EAAG,CAAE,GAAO,YAAY,GAAG,GAAK,EAAE,YAAiB,MAAO,GAAK,iBACtH,IAAM,0CAA4C,EAAO,GAAiB,EAAG,EAAO,YAAY,GAAG,GAAK,EAAE,WAAe,IAAK,IAG9H,GAA2C,KAElC,GAAY,AAAC,GAAc,CACpC,GAAS,IACT,GAAY,GAAS,IAAM,GAAqB,GAAI,KAG3C,GAAuB,AAAC,GAAc,CAC/C,GAAM,GAAK,SAAS,eAAe,sBAC7B,EAAK,SAAS,eAAe,YAC7B,EAAK,SAAS,eAAe,eAC7B,EAAK,SAAS,eAAe,eAE/B,EAAY,kBACZ,EAAsB,QAG1B,OAFA,EAAG,YAAc,GAAQ,UAAY,GAE7B,OACC,GACD,EAAY,YACZ,EAAO,QACP,EAAG,YAAc,aAAe,EAAO,EAAE,cAAkB,GAAK,cAChE,UACC,GACD,EAAO,SACP,EAAG,YAAc,aAAe,EAAO,EAAE,cAAkB,GAAK,eAChE,UACC,GACD,EAAO,QACP,EAAG,YAAc,aAAe,EAAO,EAAE,gBAAoB,GAAK,gBAClE,UACC,GACD,EAAO,SACP,EAAG,YAAc,aAAe,EAAO,EAAE,eAAmB,GAAK,oBACjE,UACC,GACD,EAAO,QACP,EAAG,YAAc,aAAe,EAAO,EAAE,eAAmB,GAAK,oBACjE,UACC,GACD,EAAO,QACP,EAAG,YAAc,aAAe,EAAO,EAAE,cAAkB,GAAK,cAChE,UACC,GACD,EAAO,UACP,EAAG,YAAc,aAAe,EAAO,EAAE,gBAAoB,GAAK,cAClE,UACC,GACD,EAAO,SACP,EAAG,YAAc,aAAe,EAAO,EAAE,gBAAoB,GAAK,kBAClE,MAER,EAAG,YAAc,SAAW,EAAO,EAAO,GAAG,cAA4B,IAAM,EAC/E,EAAG,YAAc,UAAY,EAAO,EAAO,GAAG,eAA6B,MAAQ,EAAO,EAAO,GAAG,kBAA+B,GAAK,KAGtI,GAAa,CAAC,EAAuB,EAAe,IACtD,GAAE,EAGW,EACR,MAAM,EAAQ,IAAI,EAAE,cAAiB,EAAM,GAAI,IAC/C,IAAI,EAAI,IAKX,GAAoB,CAAC,EAAuB,EAAe,IAC7D,GAAE,EAEW,EAAa,MAAM,EAAQ,IAAI,EAAE,wBAA2B,EAAM,GAAI,KAK1E,GAAkB,CAAC,EAAoB,EAA6B,IAAkB,CAC/F,GAAM,GAAgB,GAA+B,EAAO,oBAI5D,EAAe,GAAI,GAAQ,GAE3B,GAAM,GAAM,IAAU,EAAI,sBAAwB,YAC5C,EAAM,GAAG,aAEX,EAAQ,EAAO,GAAO,EACtB,EAAY,GAAW,EAAc,EAAO,GAChD,KAAO,EAAO,GAAK,IAAI,IAEnB,EAAQ,EAAQ,EAChB,EAAY,GAAW,EAAc,EAAO,GAEhD,GAAI,GAAW,KAAK,MAAM,EAAQ,GAClC,KAAO,IAAa,GAChB,AAAI,GAAW,EAAc,EAAQ,EAAU,GAAO,IAAI,EAAO,IAC7D,EAAW,KAAK,MAAM,EAAW,GAEjC,EAAQ,EAAQ,EAIxB,AAAK,EAAO,QACJ,EAAI,EAAO,GAAO,GAClB,GAAQ,EAAO,GAAO,GAI9B,GAAI,GAAU,KAAK,IAAI,EAAQ,EAAG,EAAO,GAAO,GAC5C,EAAW,GAAW,EAAc,EAAS,GACjD,KAAO,GAAW,GAAS,EAAO,GAAK,IAAI,GAAW,EAAc,EAAS,KACzE,EAAO,GAAO,EAAO,GAAK,IAAI,GAC9B,EAAO,GAAO,EACd,EAAU,EAAU,EACpB,EAAW,GAAW,EAAc,EAAS,GAC7C,EAAO,GAAG,aAA0B,EAExC,AAAI,EAAO,oBAAoB,GAAG,IAC9B,GAAO,oBAAsB,GAAI,GAAQ,MAEzC,EAAO,UAAU,GAAG,IACpB,GAAO,UAAY,GAAI,GAAQ,MAEnC,KAEA,GAAM,GAAkB,CAAC,EAAG,EAAG,GAAI,IAAK,IAAK,KAAM,OACnD,OAAS,GAAI,EAAG,EAAI,EAAgB,OAAQ,IACxC,AAAI,EAAgB,EAAgB,IAAM,EAAO,GAAG,EAAE,SAAY,EAAI,eAAyC,GAAK,EAAO,aAAa,IAAM,KAAO,GACjJ,EAAiB,IAAM,GAI/B,AAAG,EAAO,eAAiB,MACvB,GAAO,eAAiB,OAInB,GAAgB,CAAC,EAA6B,EAAe,IAAkB,CACxF,GAAI,EAAO,iBAAiB,YAAc,GAAI,CAC1C,EAAe,GAAI,GAAQ,GAC3B,GAAI,GAAQ,EAAI,EAAO,YAAY,EAAM,GACrC,EAAY,GAAkB,EAAc,EAAO,GACvD,KAAO,EAAO,UAAU,IAAI,IAExB,EAAQ,EAAQ,EAChB,EAAY,GAAkB,EAAc,EAAO,GAEvD,GAAI,GAAW,KAAK,MAAM,EAAQ,GAClC,KAAO,IAAa,GAChB,AAAI,GAAkB,EAAc,EAAQ,EAAU,GAAO,IAAI,EAAO,WACpE,EAAW,KAAK,MAAM,EAAW,GAEjC,EAAQ,EAAQ,EAGxB,AAAK,EAAO,QACJ,EAAO,YAAY,EAAM,GAAK,EAAI,GAClC,GAAQ,EAAI,EAAO,YAAY,EAAM,IAI7C,GAAI,GAAU,KAAK,IAAI,EAAQ,EAAG,EAAI,EAAO,YAAY,EAAM,IAC3D,EAAW,GAAkB,EAAc,EAAS,GACxD,KAAO,GAAW,GAAS,EAAO,UAAU,IAAI,IAC5C,EAAO,UAAY,EAAO,UAAU,IAAI,GACxC,EAAO,YAAY,EAAM,GAAK,EAC9B,EAAU,EAAU,EACpB,EAAW,GAAkB,EAAc,EAAS,GAExD,KACA,IACA,KACK,GACD,GAAsB,GAEtB,EAAO,YAAY,GAAG,KAAO,GAAK,IAAU,IAC5C,MAKC,GAAwB,AAAC,GAAc,CAChD,GAAM,GAAK,SAAS,eAAe,cAC7B,EAAK,SAAS,eAAe,iBAC7B,EAAK,SAAS,eAAe,yBAC7B,EAAK,SAAS,eAAe,kBAC7B,EAAK,SAAS,eAAe,oBAE7B,EAAW,GAAW,aAAe,GACrC,EAAW,GAAW,aAAe,GACrC,EAAa,EAAE,WAAW,KAE1B,EAAM,EAAO,iBAAiB,YAAc,GAAK,IAAM,EAE7D,EAAG,WAAW,GAAG,YAAc,EAAW,UAAY,EAAO,EAAO,YAAY,EAAE,IAClF,EAAG,YAAc,MAAQ,EAAO,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAK,IAAe,IACvF,EAAG,YAAc,EACjB,EAAG,YAAc,SAAW,EAAO,EAAQ,IAAI,EAAE,wBAA2B,EAAE,GAAI,EAAO,YAAY,EAAE,GAAK,EAAE,qBAAwB,EAAO,gBAAgB,MAAM,MAAM,EAAE,mBAAsB,EAAE,KAAO,mBAC1M,EAAG,YAAc,mBAAqB,GAAgB,EAAI,MAkBjD,GAAiC,AAAC,GAAmB,CAC9D,GAAI,GAAa,KAAK,IAAI,EAAI,EAAS,IAAM,GAC7C,UAAe,EAAI,GAAM,KAAK,IAAI,EAAI,GAAU,KAAK,IAAI,IACrD,EAAO,aAAa,KAAO,GAC3B,IAAe,EAAI,GAAM,KAAK,IAAI,EAAI,GAAU,KAAK,IAAI,KAEtD,GAGE,GAAgB,IAAM,CAC/B,GAAM,GAAa,KACnB,SAAS,eAAe,uBAAuB,MAAM,QAAU,QAE/D,SAAS,eAAe,UAAU,WAAW,GAAG,YAAc,mBAC9D,SAAS,eAAe,OAAO,YAAc,EAAO,EAAE,OAAW,GACjE,SAAS,eAAe,gBAAgB,YAAc,IAAM,EAAO,EAAE,aAAiB,EAAG,IAAS,cAElG,SAAS,eAAe,0BAA0B,WAAW,GAAG,YAAc,mBAAqB,EAAO,GAA+B,EAAO,oBAAqB,EAAG,IAAS,QACjL,SAAS,eAAe,uBAAuB,YAAc,IAAM,EAAO,GAA+B,EAAO,mBAAqB,EAAW,oBAAqB,EAAG,IAExK,SAAS,eAAe,8BAA8B,YAAc,EAAO,EAAE,kBAAsB,EAAG,IAAQ,IAC9G,SAAS,eAAe,2BAA2B,YAAc,EAAO,EAAE,eAAmB,EAAG,IAAQ,IACxG,SAAS,eAAe,wBAAwB,YAAc,IAAM,EAAO,EAAW,WACtF,SAAS,eAAe,yBAAyB,YAAc,IAAM,EAAO,EAAW,WACnF,EAAO,qBAAqB,GAAK,GACjC,UAAS,eAAe,6BAA6B,YAAc,IAAM,EAAO,EAAW,gBAAkB,cAC7G,SAAS,eAAe,8BAA8B,YAAc,IAAM,EAAO,EAAW,iBAAmB,cAC/G,SAAS,eAAe,gCAAgC,YAAc,IAAM,EAAO,EAAW,mBAAqB,gBACnH,SAAS,eAAe,4BAA4B,YAAc,IAAM,EAAO,EAAW,eAAiB,gBAC3G,SAAS,eAAe,4BAA4B,YAAc,IAAM,EAAO,EAAW,eAAiB,gBAC3G,SAAS,eAAe,iCAAiC,YAAc,IAAM,EAAO,EAAW,oBAAsB,gBACrH,SAAS,eAAe,gCAAgC,YAAc,IAAM,EAAO,EAAW,mBAAqB,kBAI9G,GAAgB,MAAO,EAAO,KAAU,CACjD,GAAI,GAAI,GAER,GAAI,EAAO,UAAU,IAAI,SACjB,EAAC,GAAQ,EAAO,mBAAqB,KAAO,EAAO,QAAQ,KAC3D,GAAI,KAAM,GAAQ,4GAElB,GAAG,CACH,GAAM,GAA2B,EAAO,mBAElC,EAAa,KACnB,EAAO,oBAAsB,EAAW,mBACxC,EAAO,YAAc,EAAW,UAChC,EAAO,gBAAkB,EAAW,UAEpC,GAAM,GAA8C,CAChD,KAAM,KAAK,MACX,QAAS,EAAO,kBAChB,KAAM,eACN,UAAW,EAAW,UACtB,UAAW,EAAW,UACtB,yBAA0B,EAC1B,wBAAyB,EAAO,mBAChC,QAAS,EAAE,OACX,aAAc,EAAE,aAChB,OAAQ,EAAO,UAAU,WACzB,gBAAiB,EAAE,cAAiB,YAcxC,GAXI,EAAO,qBAAqB,GAAK,GACjC,GAAO,gBAAkB,EAAW,eACpC,EAAO,iBAAmB,EAAW,gBACrC,EAAO,mBAAqB,EAAW,kBACvC,EAAO,eAAiB,EAAW,cACnC,EAAO,eAAiB,EAAW,cACnC,EAAO,oBAAsB,EAAW,mBACxC,EAAO,mBAAqB,EAAW,mBAIvC,EAAO,aAAa,aAAe,IAAO,EAAO,qBAE7C,EAAO,aAAa,MAAQ,GAAK,EAAO,YAAc,EAAG,CACzD,GAAI,GAAU,EACd,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,AAAI,EAAO,WAAW,EAAI,GAAK,GAAkB,IAC7C,IAER,GAAI,EAAU,EAAG,CACb,GAAM,GAAa,KAAK,MAAM,EAAO,WAAa,GAClD,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,GAAa,EAAG,GAAM,GAE1B,EAAO,eAAiB,GAWpC,GAJA,KACA,EAAO,kBAAoB,EAC3B,EAAO,sBAAwB,EAC/B,KACI,EAAO,aAAe,GAAK,EAAO,mBAAoB,CACtD,GAAM,GAAa,EAAO,eAAiB,IAAO,IAAO,EACzD,GAAY,EAAO,aAAc,GAAM,GAE3C,KAEA,GAAU,KAAK,aAAc,OAAQ,GAI7C,AAAI,EAAO,mBAAqB,MAAQ,EAAO,iBAAiB,YAAc,IAAM,EAAO,aAAa,KAAO,GAC3G,EAAiB,MAIZ,GAAc,IAAM,CAC7B,GAAM,GAAmB,CAAC,EAAW,IAAqB,EAAO,UAAU,IAAI,GAAkB,GAAI,GAAQ,EAAE,mBAAsB,EAAE,IAAK,EAAO,YAAY,EAAE,GAAK,EAAG,GAAG,MAAM,IAC5K,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9D,EAAO,CAAC,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,SACjG,GAAI,EAAO,iBAAiB,YAAc,GACtC,OAAS,GAAI,EAAG,GAAK,EAAI,OAAQ,IAE7B,AAAI,AADU,KAAM,GAAK,EAAO,WAAW,EAAI,EAAI,IAAM,EAAO,aAAa,EAAI,EAAI,MACxE,EAAiB,EAAG,IAC7B,GAAc,EAAK,EAAI,GAAI,GAAM,GAK7C,GAAM,GAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3C,EAAQ,CAAC,QAAS,IAAK,MAAO,QAAS,OAAQ,OAAQ,QAAS,SACtE,OAAS,GAAI,EAAG,GAAK,EAAK,OAAQ,IAAK,CACnC,GAAM,GAAM,IAAM,EAAI,EAAO,oBAAsB,EAAO,UACpD,EAAI,IAAM,EAAI,EAAI,EACxB,AAAI,EAAO,aAAa,EAAK,EAAI,KAAO,EAAI,IAAI,EAAO,GAAG,EAAE,SAAY,EAAI,cAAsC,MAAM,KACpH,GACI,EAAE,SAAY,EAAI,GAClB,EAAM,EAAI,GAAI,KC7avB,GAAM,IAAU,QACV,GAAU,GACV,GAAc,GAAI,MAAK,KAAK,IAAI,KAAM,EAAG,GAAI,GAAI,GAAI,KCqB3D,GAAM,GAA4D,CACrE,eAAgB,CACZ,MAAO,IACP,cAAe,EACf,SAAU,OACV,KAAM,aACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,oHAEjB,gBAAiB,CACb,MAAO,IACP,cAAe,EACf,SAAU,OACV,KAAM,aACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,oHAEjB,WAAY,CACR,MAAO,IACP,cAAe,GACf,SAAU,IACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,6CAEjB,aAAc,CACV,MAAO,IACP,cAAe,GACf,SAAU,IACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,mLAEjB,YAAa,CACT,MAAO,IACP,cAAe,GACf,SAAU,IACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,6CAEjB,cAAe,CACX,MAAO,IACP,cAAe,GACf,SAAU,IACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,8LAEjB,iBAAkB,CACd,MAAO,IACP,cAAe,MACf,SAAU,EACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,6MAEjB,SAAU,CACN,MAAO,IACP,cAAe,GACf,SAAU,IACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,+GAEjB,SAAU,CACN,MAAO,IACP,cAAe,GACf,SAAU,IACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,8GAEjB,aAAc,CACV,MAAO,KACP,cAAe,MACf,SAAU,EACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,uCAEjB,WAAY,CACR,MAAO,IACP,cAAe,GACf,SAAU,IACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,qIAEjB,mBAAoB,CAChB,MAAO,IACP,cAAe,IACf,SAAU,EACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,0GAEjB,cAAe,CACX,MAAO,IACP,cAAe,IACf,SAAU,GACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,oPAEjB,YAAa,CACT,MAAO,IACP,cAAe,MACf,SAAU,EACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,2GAEjB,iBAAkB,CACd,MAAO,KACP,cAAe,MACf,SAAU,EACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,qHAEjB,iBAAkB,CACd,MAAO,IACP,cAAe,MACf,SAAU,EACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,qHAEjB,YAAa,CACT,MAAO,KACP,cAAe,IACf,SAAU,IACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,gGAEjB,YAAa,CACT,MAAO,IACP,cAAe,IACf,SAAU,IACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,mFAEjB,YAAa,CACT,MAAO,IACP,cAAe,IACf,SAAU,IACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,yGAEjB,eAAgB,CACZ,MAAO,IACP,cAAe,QACf,SAAU,EACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,4HAEjB,WAAY,CACR,MAAO,IACP,cAAe,IACf,SAAU,EACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,uMAEjB,YAAa,CACT,MAAO,IACP,cAAe,IACf,SAAU,GACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,4JAEjB,YAAa,CACT,MAAO,IACP,cAAe,IACf,SAAU,GACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,6SAEjB,WAAY,CACR,MAAO,IACP,cAAe,OACf,SAAU,EACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,mPAEjB,SAAU,CACN,MAAO,IACP,cAAe,IACf,SAAU,GACV,KAAM,UACN,WAAY,GACZ,mBAAoB,EACpB,YAAa,gIAaR,GAAe,AAAC,GAA4B,CACrD,GAAI,EAAS,GAAO,OAAS,cAAgB,EAAS,GAAO,WAAa,EACtE,MAAO,GAAS,GAAO,MAEtB,CACD,GAAM,GAAoB,EAAO,aAAa,GAC9C,MAAO,GAAS,GAAO,MAAQ,EAAS,GAAO,cAAgB,IAI1D,GAAmB,AAAC,GAA4B,CACzD,GAAM,GAAO,SAAS,eAAe,oBAC/B,EAAM,SAAS,eAAe,eAC9B,EAAa,SAAS,eAAe,mBAQ3C,OANA,EAAK,YAAc,EAAS,GAAO,YAEnC,EAAS,GAAO,WACZ,EAAW,YAAc,iDAAmD,EAAS,GAAO,mBAAqB,kBACjH,EAAW,YAAc,8CAErB,OACC,iBACD,EAAI,YAAc,QAAU,EAAQ,KAAO,EAAO,kBAAoB,IAA8B,EAAG,IAAQ,cAC/G,UACC,kBACD,EAAI,YAAc,QAAU,EAAQ,KAAO,EAAO,sBAAwB,IAA8B,EAAG,IAAQ,cACnH,UACC,aACD,EAAI,YAAc,iCAAmC,EAAO,EAAI,EAAO,aAAa,WAAW,EAAE,IAAQ,oBACzG,UACC,eACD,EAAI,YAAc,wCAA0C,EAAO,KAAK,IAAI,EAAG,EAAI,EAAO,aAAa,eAAiB,gBAAkB,EAAO,EAAI,EAAO,aAAa,aAAc,GAAK,eAC5L,UACC,cACD,EAAI,YAAc,iCAAmC,EAAO,EAAI,EAAO,aAAa,YAAY,EAAE,IAAQ,oBAC1G,UACC,gBACD,EAAI,YAAc,wEAA0E,EAAO,EAAO,aAAa,cAAgB,EAAG,GAAK,oBAC/I,UACC,mBACD,EAAI,YAAc,oEAClB,UACC,WACD,EAAI,YAAc,oCAAsC,EAAO,KAAK,IAAI,MAAO,EAAO,aAAa,UAAW,GAC9G,UACC,WACD,EAAI,YAAc,iCAAmC,EAAO,EAAO,aAAa,SAAU,GAAK,kCAC/F,UACC,eACD,EAAI,YAAc,oEAClB,UACC,aACD,EAAI,YAAc,mCAAqC,EAAO,EAAI,EAAI,EAAO,aAAa,YAAc,oCACxG,UACC,qBACD,EAAI,YAAc,2EAA6E,EAAO,EAAE,EAAO,aAAa,oBAAsB,UAClJ,UACC,gBACD,EAAI,YAAc,gEAAkE,EAAO,GAAG,EAAO,aAAa,eAAiB,uFAAyF,EAAO,EAAI,EAAO,aAAa,cAAgB,IAAK,EAAG,IAAQ,IAC3R,UACC,cACD,EAAI,YAAc,oEAClB,UACC,mBACD,EAAI,YAAc,oEAClB,UACC,mBACD,EAAI,YAAc,oEAClB,UACC,cACD,EAAI,YAAc,mCAAqC,EAAO,EAAO,aAAa,aAAe,wCACjG,UACC,cACD,EAAI,YAAc,mCAAqC,EAAO,EAAO,aAAa,aAAe,kCACjG,UACC,cACD,EAAI,YAAc,wCAA0C,EAAO,EAAO,aAAa,aAAe,YACtG,UACC,iBACD,EAAI,YAAc,wDAClB,UACC,aACD,EAAI,YAAc,uCAAyC,EAAO,GAAK,EAAO,aAAa,YAAc,8BAAiC,GAAO,aAAa,WAAa,GAAK,eAAkB,GAAO,aAAa,YAAc,GACpO,UACC,cACD,EAAI,YAAc,kCAAoC,EAAO,EAAI,EAAO,aAAa,aAAe,uCAAyC,EAAQ,EAAO,aAAa,cAAgB,EAAS,YAAe,SAAY,GAAI,GAAK,iBACtO,UACC,cACD,EAAI,YAAc,wCAA0C,EAAO,GAAK,EAAO,aAAa,aAAe,qBAAuB,EAAO,GAAK,EAAO,aAAa,aAAe,+BACjL,UACC,aACD,EAAI,YAAc,oBAAsB,EAAO,IAAO,EAAO,aAAa,WAAY,EAAG,IAAQ,gCACjG,UACC,WACD,EAAI,YAAc,oBAAsB,EAAO,EAAI,EAAO,aAAa,UAAY,wDAKlF,GAAkB,KAAO,IAA4B,CAC9D,GAAI,GAAI,GACR,AAAI,EAAE,kBACF,GAAI,KAAM,GAAQ,uCAAyC,EAAQ,QAAU,EAAO,GAAa,IAAU,8CAG3G,GACA,CAAI,OAAO,EAAO,SAAW,GAAa,IAAU,EAAO,aAAa,GAAS,EAAS,GAAO,SAC7F,GAAO,OAAO,IAAI,GAAa,IAC/B,EAAO,aAAa,IAAU,EAC9B,QAAQ,IAAI,uCAAyC,EAAQ,OAG7D,QAAQ,IAAI,sCAAwC,EAAQ,kBAGpE,KAGS,GAAgB,KAAO,IAA4B,CAK5D,GAJU,EAAE,iBACN,KAAM,GAAQ,sCACd,GAGF,OAAQ,OACC,iBACD,AAAI,EAAO,aAAa,eAAiB,IACrC,GAAO,aAAa,gBAAkB,EACtC,EAAO,YAAc,KAAK,MAAM,KAAO,EAAO,kBAAoB,MAEtE,UACC,kBACD,AAAI,EAAO,aAAa,gBAAkB,IACtC,GAAO,aAAa,iBAAmB,EACvC,EAAO,gBAAkB,KAAK,MAAM,KAAO,EAAO,sBAAwB,MAE9E,QAIH,GAAoB,SAAY,CAKzC,GAJU,EAAE,iBACN,KAAM,GAAQ,uHACd,GAEC,CACH,EAAO,OAAO,IAAI,IAClB,GAAI,GAAgB,EAAO,OAC3B,OAAU,KAAY,GAAS,CAC3B,GAAM,GAAM,EACZ,GAAG,EAAS,GAAK,YAAc,EAAO,aAAa,GAAO,EAAS,GAAK,mBAAmB,CAGvF,GAAM,GAAc,EAAS,GAAK,MAAQ,EAAS,GAAK,mBACxC,EAAS,GAAK,cAAiB,EAAS,GAAK,mBAAuB,GAAS,GAAK,mBAAqB,GAAK,EAG5H,EAAO,OAAO,IACV,EAAS,GAAK,MAAQ,EAAO,aAAa,GAC1C,EAAS,GAAK,cAAiB,EAAO,aAAa,GAAS,GAAO,aAAa,GAAO,GAAK,EAC1F,EACF,IAEJ,QAAQ,IAAI,yBAA2B,EAAO,CAAC,EAAO,OAAS,CAAC,GAAiB,iBAAmB,EAAW,mBAAqB,EAAO,EAAO,QAAU,YAC5J,EAAO,aAAa,GAAO,EAAS,GAAK,mBACzC,EAAgB,EAAO,WC7ZhC,GAAM,IAAwB,IAAM,CACvC,GAAI,EAAE,aAAkB,YAAa,CACjC,QAAQ,IAAI,8CACZ,OAIJ,GAAI,EAAE,iBAAsB,OAAQ,CAEhC,GAAM,GAAQ,CAAC,eAAgB,gBAAiB,eAAgB,gBAAiB,gBAC3E,EAAQ,CAAC,KAAM,UAAW,cAAe,WAAY,aAAc,aAGrE,EAAa,GAAI,GAEjB,EAAyB,GAAI,GAAQ,EAAE,cAC3C,AAAI,EAAuB,OAAO,IAC9B,GAAyB,GAAI,GAAQ,IAGzC,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAQ,EAAE,EAAM,EAAI,IACpB,EAAM,EAAE,SAAY,EAAI,GAE9B,SAAS,eAAe,YAAe,GAAI,EAAI,IAAI,YAAc,EAAM,GAAK,KAAO,EAAO,EAAO,GAAG,cAA0B,EAAG,IAAQ,MAAQ,EAAO,EAAO,GAAG,mBAAgC,IAClM,SAAS,eAAe,UAAY,GAAG,YAAc,SAAW,EAAO,EAAO,GAAG,cAA2B,UAC5G,EAAa,EAAW,qBAAqB,EAAM,SAAW,EAAuB,SAAU,EAAM,SAAW,EAAuB,UAAU,MAAM,KACvJ,SAAS,eAAe,YAAe,EAAI,GAAI,YAAc,cAAgB,EAAQ,EAAM,UAAU,EAAE,YAAgB,MAAM,IAAK,GAAK,KAAO,EAAO,EAAY,GAAK,KAG1K,SAAS,eAAe,eAAe,YAAc,iBAAmB,EAAO,EAAO,kBAAmB,EAAG,IAAQ,MAAQ,EAAO,EAAE,gBAAoB,EAAG,IAAQ,IACpK,SAAS,eAAe,eAAe,YAAc,uBAA2B,IAAE,iBAAsB,GAAM,KAAM,YAAY,GAAK,iCAAmC,EAAO,EAAE,kBAAsB,GAAK,IAC5M,SAAS,eAAe,eAAe,YAAc,gBAAkB,EAAO,EAAO,iBAAkB,EAAG,IAAQ,MAAQ,EAAO,EAAE,eAAmB,EAAG,IAAQ,IACjK,SAAS,eAAe,eAAe,YAAc,qBAAuB,EAAE,gBAAmB,YAAY,GAAK,oBAAsB,EAAO,EAAE,iBAAqB,GAAK,IAC3K,SAAS,eAAe,eAAe,YAAc,sBAAwB,EAAO,EAAO,uBAAwB,EAAG,IAAQ,MAAQ,EAAO,EAAE,qBAAyB,EAAG,IAAS,IACpL,SAAS,eAAe,eAAe,YAAc,iDAAoD,GAAE,aAAmB,GAAI,EAAO,WAAW,IAAM,IAAO,GAAI,EAAQ,YAAa,EAAO,qBAAqB,IAAM,MAAM,YAAY,GAAK,gDACnP,SAAS,eAAe,kBAAkB,YAAc,SAAW,EAAO,EAAO,iBAAmB,UACpG,SAAS,eAAe,iBAAiB,YAAc,SAAW,EAAO,EAAO,gBAAkB,UAClG,SAAS,eAAe,uBAAuB,YAAc,SAAW,EAAO,EAAO,sBAAwB,aAG9G,GAAI,GAAU,GACd,AAAI,EAAO,mBAAqB,IAC5B,GAAU,wCAAwC,EAAO,EAAQ,IAAI,GAAI,EAAE,YAAiB,EAAQ,IAAI,EAAE,gBAAoB,YAElI,SAAS,eAAe,WAAW,YAC/B,+DAA+D,EAAO,EAAE,WAAe,oBAAoB,IAGnH,GAAI,EAAE,iBAAsB,UAAW,CAEnC,GAAM,GAAQ,CAAC,uBAAwB,wBAAyB,uBAAwB,wBAAyB,wBAC3G,EAAQ,CAAC,KAAM,aAAc,cAAe,YAAa,WAAY,kBACrE,EAAc,CAAC,KAAM,cAAe,WAAY,aAAc,WAAY,gBAEhF,SAAS,eAAe,qBAAqB,YAAc,YAAc,EAAO,EAAO,eAAgB,GAAK,6CAA+C,EAAO,EAAE,mBAAuB,GAAK,KAEhM,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAQ,EAAE,EAAM,EAAE,IAClB,EAAM,EAAE,SAAY,EAAI,GAE9B,SAAS,eAAe,eAAkB,GAAI,EAAI,IAAI,YAAc,EAAM,GAAK,KAAO,EAAO,EAAO,GAAG,kBAA8B,EAAG,IAAQ,MAAQ,EAAO,EAAO,GAAG,sBAAkC,GAAK,IAChN,SAAS,eAAe,eAAkB,EAAI,GAAI,YAAc,EAAY,GAAK,KAAO,EAAQ,EAAO,MAAM,IAAK,GAClH,SAAS,eAAe,aAAe,GAAG,YAAc,SAAW,EAAO,EAAO,GAAG,iBAA6B,GAAK,YAG1H,GAAI,EAAO,eAAiB,GAAK,EAAO,eAAiB,EAAG,CACxD,GAAM,GAAI,EAAQ,IAAI,GAAI,EAAQ,IAAI,EAAE,kBAAqB,IAAI,GAAI,IAAM,EAAQ,IAAI,EAAO,eAAe,IAAI,GAAI,KACrH,SAAS,eAAe,gBAAgB,YAAc,wDAA0D,EAAO,EAAQ,IAAI,GAAI,EAAO,iBAAmB,+CAAiD,EAAO,GAAK,IAElO,AAAI,EAAO,eAAiB,GACxB,UAAS,eAAe,gBAAgB,YAAc,2CAA8C,EAAO,eAAkB,6DAA+D,EAAO,EAAE,gBAAmB,SAAU,GAAK,MAI/O,GAAI,EAAE,iBAAsB,SAAU,CAElC,GAAM,GAAQ,CAAC,qBAAsB,sBAAuB,qBAAsB,sBAAuB,sBACnG,EAAQ,CAAC,KAAM,WAAY,eAAgB,UAAW,UAAW,gBACjE,EAAc,CAAC,KAAM,aAAc,eAAgB,mBAAoB,cAAe,eAE5F,SAAS,eAAe,sBAAsB,YAAc,YAAc,EAAO,EAAO,gBAAiB,GAAK,6BAA+B,EAAO,EAAE,qBAAyB,EAAG,IAAQ,4BAE1L,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAQ,EAAE,EAAM,EAAE,IAClB,EAAM,EAAE,SAAY,EAAI,GAE9B,SAAS,eAAe,gBAAmB,GAAI,EAAI,IAAI,YAAc,EAAM,GAAK,KAAO,EAAO,EAAO,GAAG,gBAA4B,EAAG,IAAQ,MAAQ,EAAO,EAAO,GAAG,oBAAgC,GAAK,IAC7M,SAAS,eAAe,gBAAmB,EAAI,GAAI,YAAc,EAAY,GAAK,KAAO,EAAQ,EAAO,MAAM,IAAK,GACnH,SAAS,eAAe,YAAc,GAAG,YAAc,SAAW,EAAO,EAAO,GAAG,eAA2B,GAAK,UAGvH,AAAI,GAAO,eAAiB,GAAK,EAAO,eAAiB,IACrD,UAAS,eAAe,iBAAiB,YAAc,sDAAwD,EAAO,EAAQ,IAAI,GAAI,EAAO,kBAAoB,+CAAiD,EAAO,EAAQ,IAAI,GAAI,EAAQ,IAAI,EAAE,mBAAsB,IAAI,GAAI,IAAM,EAAQ,IAAI,EAAO,gBAAgB,IAAI,GAAI,KAAM,GAAK,KAEjV,EAAO,eAAiB,GACxB,UAAS,eAAe,iBAAiB,YAAc,4CAA+C,EAAO,gBAAmB,6DAA+D,EAAO,EAAE,gBAAmB,aAAc,GAAK,MAItP,GAAI,EAAE,iBAAsB,WAAY,CAGpC,GAAM,GAAQ,CAAC,iBAAkB,kBAAmB,iBAAkB,kBAAmB,kBACnF,EAAQ,CAAC,UAAW,WAAY,UAAW,UAAW,mBACtD,EAAc,CAAC,YAAa,cAAe,eAAgB,cAAe,eAEhF,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAM,EAAE,SAAY,EAAI,GACxB,EAAQ,EAAE,UAAU,EAAM,EAAE,MAElC,SAAS,eAAe,oBAAoB,KAAK,YAC7C,GAAG,EAAM,EAAE,OAAO,EAAO,EAAO,GAAG,mBAA+B,EAAG,SAAW,EAAO,EAAO,GAAG,uBAAmC,MACxI,SAAS,eAAe,oBAAoB,EAAE,KAAK,YAC/C,GAAG,EAAY,EAAE,OAAO,EAAQ,EAAO,MAAM,IAAK,KACtD,SAAS,eAAe,eAAe,KAAK,YACxC,SAAS,EAAO,EAAO,GAAG,kBAA8B,eAGhE,SAAS,eAAe,0BAA0B,YAAc,YAAc,EAAO,EAAO,oBAAqB,GAAK,qBAAuB,EAAE,cAAiB,YAAY,GAAK,mDAAqD,EAAO,EAAE,yBAC/O,SAAS,eAAe,4BAA4B,YAAc,oEAAsE,EAAO,EAAQ,IAAI,EAAE,wBAA4B,EAAI,IAAK,EAAG,IACrM,SAAS,eAAe,2BAA2B,YAAc,yEAA2E,EAAO,EAAQ,IAAI,EAAE,wBAA4B,EAAI,KAAM,EAAG,IAEtM,GAAO,eAAiB,GAAK,EAAO,eAAiB,IACrD,UAAS,eAAe,mBAAmB,YAAc,4DAA8D,EAAO,EAAQ,IAAI,GAAI,EAAO,sBAAwB,+CAAiD,EAAO,EAAQ,IAAI,GAAI,EAAQ,IAAI,EAAE,uBAA0B,IAAI,GAAI,IAAM,EAAQ,IAAI,EAAO,oBAAoB,IAAI,GAAI,KAAM,GAAK,KAErW,EAAO,eAAiB,GACxB,UAAS,eAAe,mBAAmB,YAAc,8CAAiD,EAAO,oBAAuB,6DAA+D,EAAO,EAAE,gBAAmB,cAAe,GAAK,MAI/P,GAAI,EAAE,iBAAsB,YAAa,CACrC,GAAM,GAAQ,CAAC,KAAM,MAAO,SAAU,cAAe,YAAa,iBAC5D,EAAc,CAAC,KAAM,gBAAiB,UAAW,aAAc,kBAAmB,iBACxF,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAkB,iBAAiB,IACzC,SAAS,eAAe,aAAe,GAAG,YAAc,EAAM,GAAK,KAAO,EAAO,EAAO,GAAiB,MAAU,EAAG,IAAQ,MAAQ,EAAO,EAAO,GAAiB,UAAc,GAAK,IACxL,SAAS,eAAe,aAAgB,GAAI,IAAI,YAC5C,EAAY,GAAK,KAAO,EAAS,EAAE,yBAA2D,EAAE,SAAY,EAAI,IAAM,GAC1H,SAAS,eAAe,gBAAkB,GAAG,YAAc,SAAW,EAAO,EAAO,GAAiB,KAAS,GAAK,cAGvH,SAAS,eAAe,iBAAiB,YAAc,YAAc,EAAO,EAAO,eAAiB,yEACpG,SAAS,eAAe,mBAAmB,YAAc,uCAAyC,EAAO,EAAO,aAAc,GAAK,0BAA4B,EAAO,KAAK,IAAI,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,IAAM,EAAG,EAAI,GAAK,GAAK,EAAO,qBAAqB,IAAM,EAAO,SAAS,KAAO,GAAM,EAAO,iBAAiB,GAAK,GAAM,EAAO,iBAAiB,IAAO,GAAE,wBAA2B,GAAK,IAAK,EAAG,IAAQ,IACja,SAAS,eAAe,uBAAuB,YAAc,iCAAmC,EAAO,EAAO,0BAA4B,uCAKrI,GAAuB,IAAM,GAG7B,GAA2B,IAAM,GAEjC,GAAoB,IAAM,CACnC,GAAI,EAAE,aAAkB,QAExB,IAAI,EAAE,aAAkB,QAAS,CAE7B,GAAM,GAAY,CACd,gBACA,gBACA,gBACA,gBACA,iBAGJ,SAAS,eAAe,iBAAiB,YAAc,YAAc,EAAO,EAAO,WAAY,EAAG,IAAQ,cAE1G,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAI,GAAQ,EAAE,EAAU,EAAE,IAC1B,AAAI,EAAI,GAAG,GAAQ,GACnB,SAAS,eAAe,OAAS,EAAI,SAAS,WAAW,GAAG,YAAc,UAAY,EAAO,EAAO,WAAW,EAAI,IAAM,IAAM,EAAO,GAAkB,IACxJ,SAAS,eAAe,OAAS,EAAI,OAAO,YAAc,SAAW,EAAO,GAAwB,EAAI,GAAK,EAAO,QAAQ,EAAI,GAAI,GAAK,OACzI,AAAI,GAAK,EAAG,SAAS,eAAe,YAAc,GAAG,YAAc,YAAc,EAAO,EAAI,EAAO,iBAAiB,GAAK,KAAK,IAAI,IAAK,EAAO,YAAY,EAAE,GAAK,EAAE,WAAgB,GAAS,IACvL,SAAS,eAAe,YAAc,GAAG,YAAc,iBAC5D,GAAuB,EAAG,IAG9B,SAAS,eAAe,2BAA2B,YAAc,QAAU,EAAQ,GAAI,KAAK,IAAI,EAAO,4BAA4B,GAAI,GAAK,EAAI,GAAK,EAAO,4BAA4B,GAAK,GAAM,EAAO,WAAW,IAAM,GAAM,EAAO,WAAW,IAAM,EAAI,GAAK,EAAO,SAAS,IAAM,EAAI,EAAO,SAAS,KAAO,KAA8B,EAAG,IAAQ,iCAC5V,SAAS,eAAe,uBAAuB,YAAc,YAAc,EAAQ,EAAI,EAAO,aAAa,IAAM,EAAI,EAAO,aAAa,IAAM,EAAI,EAAO,aAAa,IAAM,EAAI,EAAO,aAAa,KAAO,EAAI,EAAO,aAAa,KAAO,EAAI,EAAO,aAAa,KAAO,IAAM,EAAO,aAAa,KAAO,IAAM,EAAO,aAAa,KAAO,EAAI,EAAO,SAAS,IAAM,KAAK,IAAI,GAAI,EAAE,WAAgB,IAAM,GAAM,EAAO,aAAa,GAAK,EAAG,IAAQ,qEAAuE,EAAO,KAA8B,EAAG,IAAQ,IAGhjB,GAAI,EAAE,aAAkB,YACpB,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,SAAS,eAAe,WAAa,EAAI,SAAS,YAAc,SAAW,EAAO,eAAe,EAAE,GAAK,IAAO,IAAK,EAAO,eAAe,EAAE,GAAK,EAAI,EAAQ,YAAa,EAAO,qBAAqB,KAAO,KAAK,MAAM,EAAO,WAAW,KAAO,MAIzP,GAAI,EAAE,aAAkB,YAAa,CACjC,GAAM,GAA0B,CAAC,EAAG,EAAG,GAAI,KAAM,EAAG,GAChD,EAAI,EACR,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,SAAS,eAAe,oBAAoB,UAAU,YAAc,EAAO,EAAO,mBAAmB,GAAI,EAAG,IAC5G,SAAS,eAAe,oBAAoB,WAAW,YAAc,EAAO,EAAE,cAAiB,IAC/F,GAAM,GAAoB,GAAyB,EAAO,mBAAmB,GAAI,EAAE,iBAAqB,EAAO,WAAY,EAAO,uBAAuB,GAAK,EAAO,mBAAmB,GACxL,EAAoB,EACd,SAAS,eAAe,uBAAuB,KAAK,UAAU,IAAI,wBAClE,SAAS,eAAe,uBAAuB,KAAK,UAAU,OAAO,wBAC3E,SAAS,eAAe,6BAA6B,KAAK,YAAc,EAAO,KAAK,IAAI,EAAG,IAC3F,SAAS,eAAe,2BAA2B,KAAK,YAAc,EAAO,KAAK,IAAI,EAAE,iBAAuB,GAAI,EAAO,mBAAmB,IAAK,GAAyB,EAAO,mBAAmB,GAAI,EAAE,iBAAqB,EAAO,WAAY,EAAO,uBAAuB,KAC7Q,IAAM,GACN,GAAI,GAER,SAAS,eAAe,oBAAoB,WAAW,YAAc,EAAO,EAAI,EAAI,EAAwB,GAAK,EAAE,2BAA8B,GAAI,EAAG,KAIhK,GAAI,EAAE,aAAkB,UAAW,CAC/B,GAAM,GAAwB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,KACzC,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACjC,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,EAAsB,IAAO,IAA8B,IAC3D,SAAS,eAAe,kBAAkB,UAAU,YAAc,EAAO,EAAO,iBAAiB,GAAI,EAAG,IACxG,SAAS,eAAe,kBAAkB,WAAW,YAAc,EAAO,EAAE,YAAe,IAC3F,GAAM,GAAoB,GAAyB,EAAO,iBAAiB,GAAI,EAAE,eAAmB,EAAO,WAAY,EAAO,qBAAqB,GAAK,EAAO,iBAAiB,GAChL,EAAoB,EACd,SAAS,eAAe,qBAAqB,KAAK,UAAU,IAAI,wBAChE,SAAS,eAAe,qBAAqB,KAAK,UAAU,OAAO,wBACzE,SAAS,eAAe,2BAA2B,KAAK,YAAc,EAAO,KAAK,IAAI,EAAG,IACzF,SAAS,eAAe,yBAAyB,KAAK,YAAc,EAAO,KAAK,IAAI,EAAE,eAAqB,GAAI,EAAO,iBAAiB,IAAK,GAAyB,EAAO,iBAAiB,GAAI,EAAE,eAAmB,EAAO,WAAY,EAAO,qBAAqB,KACrQ,SAAS,eAAe,kBAAkB,WAAW,YAAc,EAAO,EAAI,EAAS,GAAK,EAAsB,GAAK,EAAE,yBAA4B,GAAI,EAAG,QAK3J,GAAyB,IAAM,CACxC,AAAI,EAAE,aAAkB,cAEpB,EAAO,WAAW,KAAO,GACzB,UAAS,eAAe,yBAAyB,YAAc,EAAO,EAAE,4BAAgC,GAAK,MAIxG,GAAuB,IAAM,CACtC,AAAI,EAAE,aAAkB,cAGpB,EAAO,WAAW,IAAM,GACxB,UAAS,eAAe,sBAAsB,YAAc,+CAAiD,EAAO,KAAgC,IAA6B,EAAG,IAAQ,qCAIvL,GAAmB,IAAM,CAClC,GAAI,EAAE,aAAkB,OACpB,OACJ,SAAS,eAAe,cAAc,YAAc,YAAc,EAAO,EAAO,UAAW,GAAK,qBAAuB,EAAO,EAAE,cAAkB,GAAK,oBAAsB,EAAO,EAAQ,IAAI,EAAQ,IAAI,EAAG,EAAO,WAAY,IAAS,GAA4B,MAAW,GAAO,YAAY,EAAE,GAAK,EAAE,WAAgB,IAAO,IAAM,OAAS,qBACpV,GAAM,GAAO,EAAO,uBAAyB,EAAI,YAAc,eACzD,EAAQ,EAAO,uBAAyB,EAAI,EAAO,sBAAwB,EAAO,kBACxF,SAAS,eAAe,oBAAoB,YAAc,wCAAwC,EAAO,4BAA4B,kBAAqB,EAAO,KAC7J,EAAO,aAAa,OAAS,GAC7B,UAAS,eAAe,qBAAqB,YAAc,GAAgB,EAAO,mBAClF,OAWK,GAAoB,IAAM,CACnC,GAAI,EAAE,aAAkB,QACpB,OACJ,SAAS,eAAe,yBAAyB,YAAc,EAAO,KAAK,MAAM,EAAO,SAAW,MAAO,GAAK,UAAY,EAAO,KAAK,MAAM,EAAO,SAAW,GAAK,IAAK,GAAK,SAAW,EAAO,KAAK,MAAM,EAAO,SAAW,IAAK,GAAK,SAEvO,GAAM,GAAY,EAAO,aAAa,YAAe,IAAM,EACrD,EAAiB,EAAO,aAAa,iBAAoB,IAAM,EAC/D,EAAiB,EAAO,aAAa,iBAAoB,IAAM,EAC/D,EAAe,IAEf,EAAyB,CAC3B,KAAM,OAAO,EAAO,SAAS,sBAAsB,EAAG,EAAU,EAAO,eAAgB,EAAO,kBAC9F,UAAW,OAAO,EAAO,cAAc,sBAAsB,EAAG,EAAe,EAAO,oBAAqB,EAAO,uBAClH,UAAW,OAAO,EAAO,cAAc,sBAAsB,GAAI,EAAe,EAAO,oBAAqB,EAAO,uBACnH,aAAc,OAAO,EAAO,iBAAiB,sBAAsB,GAAI,EAAc,EAAO,uBAAwB,EAAO,2BAGzH,EAAQ,OAAO,KAAK,GAC1B,OAAW,KAAQ,GACf,SAAS,eAAe,GAAG,qBAAwB,YAAc,EAAO,EAAO,GAAG,gBAClF,SAAS,eAAe,GAAG,yBAA4B,YAAc,EAAO,EAAO,GAAG,iBACtF,SAAS,eAAe,GAAG,+BAAkC,YAAc,EAAO,KAAK,IAAI,EAAG,EAAY,KAG1G,SAAS,eAAe,GAAG,0BAA6B,MAAM,MAAS,KAAK,IAAI,EAAG,EAAY,MAAW,EAAI,OAAQ,QAClH,SAAS,eAAe,GAAG,+BAAkC,MAAM,QAAU,QAC7E,SAAS,eAAe,GAAG,+BAAkC,MAAM,MAG3E,GAAI,GACJ,OAAQ,EAAO,kBACN,GAAG,CACJ,SAAS,eAAe,gBAAgB,YAAc,EAAO,EAAO,SAAU,EAAG,IACjF,GAAM,GAAY,CAAC,KAAM,EAAO,cAAc,YAAa,EAAO,cAAc,WAAY,EAAO,cAAc,SAAU,EAAO,cAAc,QAAS,EAAO,cAAc,UAAW,EAAO,cAAc,SAAU,EAAO,cAAc,aAAc,EAAO,cAAc,OAAQ,EAAO,cAAc,cAAe,EAAO,cAAc,aAEjV,EAAW,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7C,OAAS,GAAI,EAAG,GAAK,GAAI,IAAK,CAC1B,GAAI,GAAkB,EACtB,AAAI,EAAU,IAAM,KAAQ,IAAM,GAC9B,IAAmB,GAEvB,SAAS,eAAe,eAAe,WAAW,YAAc,IAAI,EAAO,EAAU,GAAI,EAAG,MAC5F,SAAS,eAAe,eAAe,WAAW,YAAc,IAAI,EAAO,IAAO,GAAE,oBAAuB,GAAK,GAAI,EAAS,GAAK,EAAiB,OAC/I,KAAM,GAAK,IAAM,GAAK,IAAM,IAC5B,UAAS,eAAe,eAAe,WAAW,YAAc,IAAI,EAAO,EAAE,oBAAuB,GAAK,EAAG,EAAS,GAAK,EAAiB,OAGnJ,SAAS,eAAe,2BAA2B,YAAc,EAAO,EAAY,GAAY,EAAG,IACnG,UAEC,GAAG,CACJ,SAAS,eAAe,qBAAqB,YAAc,EAAO,EAAO,cAAe,EAAG,IAC3F,GAAM,GAAiB,CAAC,KAAM,EAAO,mBAAmB,YAAa,EAAO,mBAAmB,WAAY,EAAO,mBAAmB,SAAU,EAAO,mBAAmB,QAAS,EAAO,mBAAmB,UAAW,EAAO,mBAAmB,SAAU,EAAO,mBAAmB,aAAc,EAAO,mBAAmB,OAAQ,EAAO,mBAAmB,cAAe,EAAO,mBAAmB,aACxY,EAAW,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7C,OAAS,GAAI,EAAG,GAAK,GAAI,IAAK,CAC1B,GAAI,GAAkB,EACtB,AAAI,EAAe,IAAM,KAAQ,IAAM,GACnC,IAAmB,GAEvB,SAAS,eAAe,oBAAoB,WAAW,YAAc,IAAI,EAAO,EAAe,GAAI,EAAG,MACtG,SAAS,eAAe,oBAAoB,WAAW,YAAc,IAAI,EAAO,IAAO,GAAE,yBAA4B,GAAK,GAAI,EAAS,GAAK,EAAiB,OAEjK,SAAS,eAAe,gCAAgC,YAAc,EAAO,EAAY,GAAiB,EAAG,IAC7G,UAEC,GAAG,CACJ,SAAS,eAAe,qBAAqB,YAAc,EAAO,EAAO,cAAe,EAAG,IAC3F,GAAM,GAAiB,CAAC,KAAM,EAAO,mBAAmB,YAAa,EAAO,mBAAmB,WAAY,EAAO,mBAAmB,SAAU,EAAO,mBAAmB,QAAS,EAAO,mBAAmB,UAAW,EAAO,mBAAmB,SAAU,EAAO,mBAAmB,aAAc,EAAO,mBAAmB,OAAQ,EAAO,mBAAmB,cAAe,EAAO,mBAAmB,aACxY,EAAW,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7C,OAAS,GAAI,EAAG,GAAK,GAAI,IAAK,CAC1B,GAAI,GAAkB,EACtB,AAAI,EAAe,IAAM,KACrB,IAAmB,GAEvB,SAAS,eAAe,oBAAoB,WAAW,YAAc,IAAI,EAAO,EAAe,GAAI,EAAG,MACtG,SAAS,eAAe,oBAAoB,WAAW,YAAc,IAAI,EAAO,IAAO,GAAE,yBAA4B,GAAK,GAAI,EAAS,GAAK,EAAiB,OAEjK,SAAS,eAAe,gCAAgC,YAAc,EAAO,EAAY,GAAiB,EAAG,IAC7G,UAEC,GAAG,CACJ,SAAS,eAAe,oBAAoB,YAAc,EAAO,EAAO,iBAAkB,EAAG,IAC7F,GAAM,GAAgB,CAAC,EAAO,kBAAkB,MAAO,EAAO,kBAAkB,WAAY,EAAO,kBAAkB,WAAY,EAAO,kBAAkB,UAAW,EAAO,kBAAkB,eAAgB,EAAO,kBAAkB,MAAO,EAAO,kBAAkB,WAAY,EAAO,kBAAkB,aACtS,EAAc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjC,OAAS,GAAI,EAAG,EAAI,EAAc,OAAQ,IAAK,CAC3C,GAAI,GAAkB,EACtB,AAAI,EAAc,IAAM,EAAY,IAChC,IAAmB,GAEvB,SAAS,eAAe,mBAAmB,EAAI,WAAW,YAAc,IAAI,EAAO,EAAc,GAAI,EAAG,MACxG,SAAS,eAAe,mBAAmB,EAAI,WAAW,YAAc,IAAI,EAAO,IAAO,GAAE,wBAA2B,GAAK,GAAI,EAAS,GAAK,EAAiB,OAEnK,SAAS,eAAe,+BAA+B,YAAc,EAAO,EAAY,GAAgB,EAAG,IAC3G,UAEC,GACD,SAAS,eAAe,eAAe,YAAc,YAAY,EAAO,EAAO,SAAU,EAAG,oBAC5F,UACC,GACD,UACC,GACD,SAAS,eAAe,qBAAqB,YAAc,EAAO,EAAO,YAAa,EAAG,IACzF,cAGA,QAIC,GAA0B,IAAM,CACzC,GAAI,EAAE,aAAkB,SACpB,OAEJ,SAAS,eAAe,oBAAoB,YAAc,EAAO,EAAO,oBAAqB,EAAG,IAChG,GAAM,GAAW,KAEjB,SAAS,eAAe,uBAAuB,YAAc,EAAO,EAAS,IAC7E,SAAS,eAAe,wBAAwB,YAAc,EAAO,EAAS,GAAI,EAAG,IACrF,SAAS,eAAe,6BAA6B,YAAc,EAAO,EAAS,GAAI,EAAG,IAC1F,SAAS,eAAe,wBAAwB,YAAc,EAAO,EAAS,GAAI,EAAG,IACrF,SAAS,eAAe,wBAAwB,YAAc,EAAO,EAAS,GAAI,EAAG,IACrF,SAAS,eAAe,6BAA6B,YAAc,EAAO,EAAS,IACnF,SAAS,eAAe,6BAA6B,YAAc,EAAO,EAAS,IACnF,SAAS,eAAe,gCAAgC,YAAc,EAAO,EAAS,IACtF,SAAS,eAAe,6BAA6B,YAAc,EAAO,EAAS,IACnF,SAAS,eAAe,8BAA8B,YAAc,EAAQ,GAAI,GAAM,GAAK,EAAY,EAAO,kBAAoB,EAAE,qBAAwB,EAAO,gBAAgB,IAAK,GACxL,SAAS,eAAe,8BAA8B,YAAc,EAAO,IAA4B,IAAI,EAAE,KAGpG,GAAuB,IAAM,CACtC,GAAI,EAAE,aAAkB,WACpB,OAEJ,SAAS,eAAe,0BAA0B,WAAW,GAAG,YAAc,EAAO,EAAO,cAAe,EAAG,IAC9G,SAAS,eAAe,8BAA8B,WAAW,GAAG,YAAc,EAAO,EAAO,eAAgB,EAAG,IACnH,SAAS,eAAe,+BAA+B,WAAW,GAAG,YAAc,EAAO,EAAO,mBAAoB,EAAG,IACxH,SAAS,eAAe,4BAA4B,WAAW,GAAG,YAAc,EAAO,IAAO,EAAO,iBAAmB,KACxH,SAAS,eAAe,gCAAgC,WAAW,GAAG,YAAc,EAAO,IAAO,EAAO,kBAAoB,KAC7H,SAAS,eAAe,iCAAiC,WAAW,GAAG,YAAc,EAAO,IAAO,EAAO,oBAAsB,KAChI,SAAS,eAAe,yBAAyB,WAAW,GAAG,YAAc,EAAO,EAAO,cAC3F,SAAS,eAAe,0BAA0B,WAAW,GAAG,YAAc,EAAO,EAAO,cAC5F,SAAS,eAAe,mCAAmC,WAAW,GAAG,YAAc,EAAO,EAAO,sBAAuB,EAAG,IAC/H,SAAS,eAAe,oBAAoB,WAAW,GAAG,YAAc,EAAO,EAAE,SACjF,SAAS,eAAe,+BAA+B,WAAW,GAAG,YAAc,EAAO,EAAO,mBAAoB,EAAG,IACxH,SAAS,eAAe,2BAA2B,WAAW,GAAG,YAAc,EAAO,EAAO,eAAgB,EAAG,IAEhH,SAAS,eAAe,cAAc,YAClC,cAAc,EAAO,WAAW,QAAQ,YAAa,IAAM,MAE/D,GAAM,GAAY,KACZ,EAAiB,EAAU,KAC3B,EAAkB,EAAU,SAC5B,EAAa,EAAI,EAAO,OAAO,OAAO,IAC5C,SAAS,eAAe,qBAAqB,YAAc,EAAQ,KAAQ,EAAU,QAAY,EAAO,YAAe,YAAc,EAAU,SAAa,GAAK,YAAc,EAAO,EAAY,EAAG,IAAQ,gBAC7M,SAAS,eAAe,oBAAoB,YACxC,qBAAqB,EAAO,KAAK,MAAM,EAAiB,YAAqB,EAAO,KAAK,MAAM,EAAkB,QAG5G,GAAmB,IAAM,CAClC,GAAI,EAAE,aAAkB,OACpB,OACJ,SAAS,eAAe,eAAe,YAAc,YAAc,EAAO,EAAO,QAAU,WAC3F,SAAS,eAAe,uBAAuB,YAAc,QAAU,EAAO,EAAO,aAAa,gBAClG,SAAS,eAAe,wBAAwB,YAAc,QAAU,EAAO,EAAO,aAAa,iBAGnG,GAAM,GAAO,OAAO,KAAK,EAAO,cAChC,OAAW,KAAO,GAAM,CAEpB,GAAM,GAAW,EAAS,GAG1B,AAAI,EAAS,OAAS,WAElB,CAAI,EAAS,WAAa,EACtB,EAAO,aAAa,KAAS,EAAS,SAClC,SAAS,eAAe,GAAG,UAAY,YAAc,UACrD,SAAS,eAAe,GAAG,UAAY,YAAc,cAIzD,SAAS,eAAe,GAAG,UAAY,YAAc,SAAW,EAAO,EAAO,aAAa,IAAQ,IAAM,EAAO,EAAS,UAE7H,EAAO,aAAa,KAAS,EAAS,SAClC,SAAS,eAAe,GAAG,WAAa,YAAc,SACtD,SAAS,eAAe,GAAG,WAAa,YAAc,eAAiB,EAAO,GAAa,IAAQ,aC/b5G,GAAM,IAAY,CAAC,EAAmB,IAAkB,CAC3D,GAAM,GAAkB,IAAU,aAAe,IAAU,SAAY,EAAI,IAE3E,OAAO,OACE,WAAY,CACb,EAAO,iBAAmB,EAAO,EACjC,UAEC,eAAgB,CACjB,EAAO,kBAAoB,EAAO,EAClC,UAEC,gBAAiB,CAClB,EAAO,sBAAwB,EAAO,EACtC,UAEC,YAAa,CACd,EAAO,kBAAoB,EAAO,EAAiB,KACnD,UAEC,SAAU,CAEX,GAAM,GAAgB,KAAe,QACrC,EAAO,aAAe,EAAO,EAG7B,EAAO,YAAe,EAAO,YAAc,EAAiB,EAAgB,EAAO,YACnF,SASC,GAAgB,IAAM,CAC/B,GAAI,GAAQ,EACZ,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,AAAI,EAAO,WAAW,EAAI,IAAM,GAAkB,IAC9C,IAER,MAAO,IAUE,GAAiB,CAAC,EAAsB,IAAiB,CAClE,GAAM,GAAkB,IAAU,iBAAmB,IAAU,eAAkB,EAAI,IAErF,OAAO,OACE,eAAgB,CAEjB,KACA,GAAM,GAAgB,KAEtB,EAAO,gBAAkB,EAAgB,EAAO,EAE5C,EAAE,aAAkB,cACpB,KAEJ,UAEC,eAGD,EAAE,qBAA0B,EAE5B,EAAO,YAAc,KAAK,MAAM,EAAE,qBAClC,EAAE,qBAA0B,EAC5B,UACC,gBAGD,GADA,EAAO,gBAAkB,EACrB,EAAO,gBAAkB,EAAE,CAE3B,GAAG,EAAO,aAAa,MAAQ,EAAE,CAC7B,GAAM,GAAY,EAAI,KACtB,GAAG,EAAW,EAAE,CACZ,GAAM,GAAa,KAAK,MAAM,EAAO,WAAa,GAClD,OAAS,GAAI,EAAG,EAAI,EAAG,IACnB,GAAa,EAAE,EAAG,GAAM,QAKhC,CACA,GAAM,GAAO,EAAO,cACpB,GAAa,EAAM,GAAM,GAG7B,EAAO,gBAAkB,EAE7B,UACC,eAAgB,CAEjB,EAAO,mBAAqB,EAAO,EACnC,EAAO,uBAAyB,EAM5B,AAHuB,GAAO,uBAAyB,EAC3D,EAAO,sBAAwB,EAAO,oBAEb,EAAO,iBAAmB,EAAO,WAAW,OAAS,GACvE,EAAO,kBAAoB,EAAO,UAAU,IAAI,SACnD,GAAc,IAElB,SCjHL,GAAM,IAA0B,IAAM,CACzC,EAAE,eACE,EAAO,eACP,EAAO,gBACP,EAAO,eACP,EAAO,gBACP,EAAO,gBAGF,GAAiC,IAAM,CAChD,GAAI,GAAI,EACR,AAAI,EAAO,SAAS,IAAM,IACtB,IAAK,GAEL,EAAO,SAAS,IAAM,IACtB,IAAK,KAAK,MAAM,EAAE,eAAoB,KAAQ,IAAM,KAEpD,EAAO,aAAa,GAAK,IACzB,IAAK,KAAK,MAAM,EAAO,eAAiB,MAExC,EAAO,aAAa,IAAM,IAC1B,IAAK,KAAK,MAAM,EAAO,gBAAkB,MAEzC,EAAO,aAAa,IAAM,IAC1B,IAAK,KAAK,MAAM,EAAO,eAAiB,MAExC,EAAO,aAAa,IAAM,IAC1B,IAAK,KAAK,MAAM,EAAO,gBAAkB,MAEzC,EAAO,aAAa,IAAM,IAC1B,IAAK,KAAK,MAAM,EAAO,eAAiB,MAG5C,GAAK,EAAO,WAAW,IAAM,KAAK,MAAM,EAAI,GAAM,GAAE,WAAgB,EAAE,WAAgB,EAAE,WAAgB,EAAE,WAAgB,EAAE,aAC5H,GAAK,KAAK,MAAO,KAAO,EAAE,YAAiB,EAAE,mBAAwB,IACrE,GAAM,EAAI,EAAI,EAAI,EAAO,WAAW,GAAM,GAAI,EAAI,EAAI,EAAQ,YAAa,EAAO,qBAAqB,MACvG,GAAM,EAAI,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,GAAK,EAAO,WAAW,IACtE,GAAM,EAAI,EAAI,GAAK,EAAO,WAAW,IACrC,GAAK,GAA4B,GAAK,GAAO,YAAY,EAAE,GAAK,EAAE,WAAgB,IAAO,GAAK,IAC9F,GAAM,EAAI,EAAI,IAAM,EAAO,WAAW,KACtC,GAAM,EAAI,GAAM,IAAM,EAAO,WAAW,KACxC,GAAM,EAAI,GAAM,IAAM,EAAO,WAAW,KACxC,GAAM,EAAI,GAAM,IAAM,EAAO,WAAW,KACxC,GAAM,EAAI,GAAM,IAAM,EAAO,WAAW,KACxC,GAAM,EAAI,IAAO,IAAM,EAAO,WAAW,KACzC,GAAM,EAAI,IAAO,IAAM,EAAO,aAAa,IAC3C,GAAM,EAAI,EAAE,IAAO,EAAmB,oBAClC,EAAO,SAAS,IAAM,IAAO,EAAO,iBAAiB,gBAAkB,GACvE,IAAK,GAET,EAAI,KAAK,MAAM,GACf,EAAE,qBAA0B,EAE5B,EAAE,sBAA2B,KAAK,MAAM,EAAO,uBAAyB,EAAE,sBAA2B,IAAM,KAGlG,GAAiC,IAAM,CAChD,EAAE,sBAA2B,EAC7B,EAAE,uBAA6B,EAAI,EAAO,aAAa,IAAM,IAC7D,EAAE,uBAA6B,EAAI,EAAO,aAAa,IAAM,IAC7D,EAAE,uBAA6B,EAAI,EAAO,aAAa,IAAM,IAC7D,EAAE,uBAA6B,EAAI,EAAI,EAAI,EAAO,WAAW,GAAM,GAAI,EAAI,EAAI,EAAQ,YAAa,EAAO,qBAAqB,MAChI,EAAE,uBAA6B,EAAI,EAAI,GAAK,EAAO,WAAW,GAAK,EAAI,GAAK,EAAO,WAAW,GAAK,EAAI,GAAK,EAAO,WAAW,GAAK,EAAI,IAAM,EAAO,WAAW,GAAK,EAAI,IAAM,EAAO,WAAW,IAChM,EAAE,uBAA6B,EAAI,EAAI,GAAK,EAAO,WAAW,IAC9D,EAAE,uBAA6B,EAAI,EAAI,IAAM,EAAO,WAAW,KAC/D,EAAE,uBAA6B,EAAI,GAAM,IAAM,EAAO,WAAW,KACjE,EAAE,uBAA6B,EAAI,GAAM,IAAM,EAAO,WAAW,KACjE,EAAE,uBAA6B,EAAI,GAAM,IAAM,EAAO,WAAW,KACjE,EAAE,uBAA6B,EAAI,GAAM,IAAM,EAAO,WAAW,KACjE,EAAE,uBAA6B,EAAI,IAAO,IAAM,EAAO,WAAW,KAClE,EAAE,uBAA6B,EAAI,IAAO,IAAM,EAAO,aAAa,IACpE,EAAE,uBAA4B,KAAK,IAAI,KAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,KAChJ,GAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,IAAM,EAAO,SAAS,IAAM,IACrH,GAAE,uBAA4B,OAIzB,GAA6B,IAAM,CAE5C,GAAM,GAAiB,EAAY,CAC/B,IAAO,EAAO,aAAa,IAC3B,IAAO,EAAO,aAAa,IAC3B,IAAO,EAAO,aAAa,IAC3B,IAAO,EAAO,aAAa,KAC3B,IAAO,EAAO,aAAa,KAC3B,IAAO,EAAO,aAAa,KAC3B,KAAQ,EAAO,aAAa,KAC5B,KAAQ,EAAO,aAAa,KAC5B,IAAO,EAAO,SAAS,IACvB,IAAO,KAAK,IAAI,EAAG,EAAE,WAAgB,KACrC,KAAQ,EAAO,aAAa,KAGhC,MAAO,GAAK,GAAI,IAOb,YAA+B,EAAmB,EAAM,GAAO,EAAY,EAAO,WAAW,GAAY,EAAgB,GAAO,CAEnI,GAAM,GAAoB,KAGtB,EAA8C,KAClD,AAAI,EACA,EAA+B,EAAY,CAEvC,EAAI,IAAM,EAAO,4BAA4B,GAE7C,EAAI,EAAO,SAAS,MAGxB,EAA+B,EAAY,CAEvC,EAEA,KAAK,IAAI,EAAG,EAAO,4BAA4B,IAE/C,GAAM,GAAK,EAAO,4BAA4B,GAE9C,GAAM,EAAO,WAAW,IAExB,GAAM,EAAO,WAAW,IAExB,EAAI,EAAO,SAAS,IAEpB,EAAO,SAAS,IAAM,EAAY,KAK1C,GAAM,GAAuB,EAAgB,CAEzC,EAAK,EAAO,WAAW,IAAM,GAE7B,EAAK,EAAO,WAAW,IAAM,GAE7B,GAA4B,IAAK,EAAI,IAAQ,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAE,UAAc,MAEhG,EAAE,oBAAuB,GAExB,EAAI,EAAO,iBAAmB,IAAO,EAAO,aAAa,IAE1D,EAAI,KAAK,IAAI,EAAE,kBAAqB,EAAO,gBAAgB,IAAK,EAAI,EAAI,EAAI,EAAO,iBAAiB,KAEpG,EAAI,EAAI,GAAK,EAAO,iBAAiB,GAErC,EAAE,mBAAsB,UAItB,EAAoB,CACtB,EAAgB,CACZ,EAAK,EAAO,WAAW,IAAM,GAAK,EAAK,EAAO,WAAW,KAAO,IAAM,EAAK,EAAQ,gBAAiB,EAAO,qBAAqB,IAAM,KAE1I,EAAgB,CACZ,EAAK,EAAO,WAAW,IAAM,GAAK,EAAK,EAAO,WAAW,KAAO,IAAM,EAAK,EAAQ,gBAAiB,EAAO,qBAAqB,IAAM,KAE1I,EAAgB,CACZ,EAAK,EAAO,WAAW,IAAM,GAAK,EAAK,EAAO,WAAW,KAAO,IAAM,EAAK,EAAQ,gBAAiB,EAAO,qBAAqB,IAAM,IAE1I,EAAgB,CACZ,EAAK,EAAO,WAAW,IAAM,GAAK,EAAK,EAAO,WAAW,KAAO,IAAM,EAAK,EAAQ,gBAAiB,EAAO,qBAAqB,IAAM,KAE1I,EAAgB,CACZ,EAAK,EAAO,WAAW,IAAM,GAAK,EAAK,EAAO,WAAW,KAAO,IAAM,EAAK,EAAQ,gBAAiB,EAAO,qBAAqB,IAAM,IAE1I,EAAgB,CAAC,IACjB,EAAgB,CAAC,KAGf,EAAO,CACT,EACA,EACA,EACA,EAAkB,IAGtB,MAAO,GAAgB,EAAO,EAAgB,GAG3C,GAAM,IAAiB,AAAC,GAEU,EAAgB,CACjD,KAAK,IAAK,GAAY,GAAK,EAAG,GAC5B,KAAM,EAAa,KAAO,IAC5B,KAAK,IAAI,EAAI,GAAY,KAAO,GAChC,KAAK,IAAI,EAAI,GAAY,KAAO,IAChC,KAAK,IAAI,EAAI,GAAY,KAAO,IAChC,KAAK,IAAI,EAAG,KAAK,IAAI,KAAO,GAAY,KAAO,MAMnD,GAAsC,KAG7B,GAA0B,CAAC,EAAmB,EAAY,EAAO,WAAW,KAAe,CACpG,cAAuB,MAAM,KAAK,CAAE,OAAQ,KAAS,CAAC,EAAG,IAAM,GAAe,KAG9E,GAAI,GAAa,GAAmB,GACpC,MAAI,KAAc,GACd,GAAa,KAAK,IAAI,IAAK,IAE3B,IAAc,GACd,GAAa,KAAK,IAAI,KAAM,IAEzB,EAAa,EAAE,YAAe,IAG5B,GAAoB,AAAC,GAAc,CAC5C,GAAI,GAAM,IAEJ,EAAc,GAAM,GAAI,EAAO,aAAa,IAAM,EAAI,EAAO,aAAa,KAC1E,EAAI,EAAO,iBAAiB,GAAK,GAAK,EAAQ,YAAa,EAAO,qBAAqB,KACvF,IAAM,EAAQ,YAAa,EAAO,qBAAqB,KACvD,KAAK,MAAM,IAAO,EAAO,WAAW,KAAO,IAAO,EAAO,aAAa,KAY5E,UAAO,AAXkB,CACrB,KACA,GAAM,GAAO,WAAW,IAAM,EAAO,WAAW,MAAQ,EACxD,GAAM,GAAO,WAAW,IAAM,EAAO,WAAW,MAAQ,EACxD,GAAM,GAAO,WAAW,IAAM,EAAO,WAAW,MAAQ,EACxD,GAAM,GAAO,WAAW,IAAM,EAAO,WAAW,MAAQ,EACxD,GAAK,EAAO,WAAW,KAAO,EAC9B,KACA,MAGoB,GACjB,GAOJ,YAA4B,EAAmB,EAAW,GAAM,EAAY,GAAO,CAEtF,GAAI,GAAS,oBAAsB,GAAS,aAAe,GAAS,qBAChE,MAAO,GAGX,GAAI,GAAI,EACJ,EAAI,EACJ,EAAI,EACJ,EAAI,EAER,AAAI,IAAS,iBAAmB,GAAS,2BACrC,IAAK,EACD,EAAO,aAAa,IAAM,IAC1B,IAAM,GAAK,KAAK,IAAI,EAAO,qBAAuB,KAAM,IAExD,EAAO,SAAS,IAAM,IACtB,IAAK,EAAI,GAAM,EAAY,EAAO,uBAEtC,GAAK,GAAM,EAAO,WAAW,IACzB,EAAO,WAAW,MAAQ,GAC1B,IAAK,GAET,GAAK,EAAI,IAAM,EAAE,WAAgB,EAAE,mBAAyB,GAAI,EAAO,WAAW,IAAM,KACxF,GAAM,EAAI,KAAK,IAAI,EAAQ,IAAI,EAAO,oBAAoB,IAAI,GAAI,IAAK,EAAI,GAAK,EAChF,GAAK,KAAK,IAAI,KAAK,IAAI,EAAO,qBAAuB,GAAI,GAAI,GACzD,EAAO,sBAAwB,GAC/B,IAAK,KAAK,IAAI,EAAG,EAAO,qBAAuB,MAInD,IAAS,gBAAkB,GAAS,yBAA2B,GAAS,iBACxE,GAAS,2BACT,IAAK,EACD,EAAO,mBAAqB,GAC5B,IAAK,GAEL,EAAO,aAAa,IAAM,IAC1B,IAAM,GAAK,KAAK,IAAI,EAAO,iBAAmB,KAAM,IAEpD,EAAO,qBAAqB,GAAK,GACjC,IAAK,GAET,GAAK,GAAM,EAAO,WAAW,IAC7B,GAAK,EAAI,IAAM,EAAE,WAAgB,EAAE,mBAAyB,GAAI,EAAO,WAAW,IAAM,KACxF,GAAM,EAAI,KAAK,IAAI,EAAQ,IAAI,EAAO,gBAAgB,IAAI,GAAI,IAAK,EAAI,GAAK,EAC5E,GAAM,EAAI,EAAQ,gBAAiB,EAAO,qBAAqB,IAAM,GACrE,GAAK,KAAK,IAAI,KAAK,IAAI,EAAO,iBAAmB,GAAI,GAAI,GACrD,EAAO,gBAAkB,GACzB,IAAK,KAAK,IAAI,EAAG,EAAO,iBAAmB,MAI/C,GAAK,EACD,GAAO,eAAiB,GAAK,EAAO,mBAAqB,IACzD,IAAK,GAEL,EAAO,mBAAqB,GAC5B,IAAK,GAEL,EAAO,aAAa,IAAM,IAC1B,IAAM,GAAK,KAAK,IAAI,EAAO,gBAAkB,KAAM,IAEnD,EAAO,qBAAqB,GAAK,GACjC,IAAK,GAET,GAAK,GAAM,EAAO,WAAW,IAC7B,GAAK,EAAI,IAAM,EAAE,WAAgB,EAAE,mBAAyB,GAAI,EAAO,WAAW,IAAM,KACxF,GAAM,EAAI,KAAK,IAAI,EAAQ,IAAI,EAAO,eAAe,IAAI,GAAI,IAAK,EAAI,GAAK,EAC3E,GAAM,EAAI,EAAQ,gBAAiB,EAAO,qBAAqB,IAAM,GACrE,GAAK,KAAK,IAAI,KAAK,IAAI,EAAO,gBAAkB,GAAI,GAAI,GACpD,EAAO,eAAiB,GACxB,IAAK,KAAK,IAAI,EAAG,EAAO,gBAAkB,KAElD,EAAI,EAAI,EAAI,EAEZ,GAAM,GAAM,CACR,EAAI,GAAK,EAAO,aAAa,IAAM,IACnC,EAAI,GAAK,EAAO,aAAa,IAAM,IACnC,EAAI,GAAK,EAAO,aAAa,IAAM,IACnC,EAAI,GAAK,EAAO,SAAS,IAAM,IAC/B,EAAI,EAAO,SAAS,IAAM,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAO,aAAe,IAAU,KACnF,EAAI,EAAI,GAAK,EAAO,aAAa,aACjC,EAAI,EAAI,GAAK,EAAO,aAAa,WACjC,EAAI,EAAI,IAAM,EAAO,aAAa,SAClC,EAAI,EAAI,IAAQ,EAAY,EAAO,sBAAwB,EAAO,WAAW,IAC7E,EAAI,KAAK,IAAK,EAAO,YAAY,EAAE,GAAK,EAAE,UAAe,KACzD,EAAE,oBAAuB,GACzB,EAAI,IAAO,EAAO,iBAAiB,GACnC,EAAI,KAAS,EAAO,eAAe,EAAE,GAAK,EAAO,WAAW,KAAO,KAAS,EAAO,eAAe,EAAE,GAAK,EAAO,WAAW,KAC3H,EAAI,IAAO,EAAQ,YAAa,EAAO,qBAAqB,KAC5D,EAAI,IAAO,IAAM,EAAO,WAAW,KACnC,EAAI,KAAK,IAAI,EAAG,EAAO,eAAiB,KAAO,EAAO,aAAa,KACnE,EAAI,GAAK,EAAO,aAAa,KAAO,EAAI,EAAO,aAAa,KAC5D,EAAI,IAAO,EAAO,aAAa,IAC/B,EAAI,IAAO,IAAM,EAAO,aAAa,IACrC,EAAI,EAAO,iBAAiB,GAC5B,EAAI,IAAM,EAAO,iBAAiB,IAClC,EAAI,EAAI,EAAO,iBAAiB,IAChC,EAAE,mBAAsB,UAG5B,GAAI,EACA,GAAK,EAAgB,WACd,CAAC,EACR,MAAO,GAGX,GAAI,EACA,MAAO,GAAgB,GAG3B,EAAI,KAAK,MAAM,GAAK,IAAM,IAE1B,GAAI,GAAY,EAChB,MAAI,KAAU,YACV,GAAY,EAAK,GAAI,EAAO,kBAE5B,KAAU,gBAAkB,GAAS,0BACrC,GAAY,EAAK,GAAI,EAAO,mBAE5B,KAAU,iBAAmB,GAAS,2BACtC,GAAY,EAAK,GAAI,EAAO,uBAE5B,EAAY,EAAO,mBACnB,GAAO,kBAAoB,GAGxB,EAGJ,GAAM,IAAqB,IAAM,CACpC,EAAE,cAAmB,EACjB,EAAO,SAAS,IAAM,GACtB,GAAE,eAAoB,KAAK,IAAI,GAAI,GAAI,GAAQ,EAAQ,IAAI,EAAQ,IAAI,EAAE,uBAA0B,IAAI,IAAK,IAAK,KAAM,aAEvH,EAAO,SAAS,IAAM,GACtB,GAAE,eAAoB,KAAK,IAAI,GAAK,EAAI,EAAI,EAAO,qBAAqB,GAAK,EAAI,EAAO,qBAAqB,GAAK,EAAI,EAAO,qBAAqB,GAAK,EAAI,EAAO,qBAAqB,GAAK,EAAI,EAAO,qBAAqB,MAE5N,EAAO,SAAS,IAAM,GACtB,GAAE,eAAqB,EAAI,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAO,aAAe,IAAQ,MAEtF,EAAE,eAAqB,EAAI,EAAO,WAAW,IAAM,EACnD,EAAE,eAAqB,EAAI,EAAO,WAAW,IAAM,GACnD,EAAE,eAAqB,EAAI,EAAO,WAAW,IAAM,GACnD,EAAE,eAAqB,EAAI,EAAO,aAAa,cAAgB,GAC/D,EAAE,eAAqB,EAAI,EAAO,aAAa,SAAW,IAC1D,EAAE,eAAqB,EAAI,EAAE,WAAgB,IAAM,EAAE,mBAAyB,GAAI,EAAO,WAAW,IAAM,IAAO,GAAI,EAAI,EAAE,yBAA4B,GAAK,IAA8B,MAC1L,EAAE,eAAqB,EAAI,IAAO,EAAO,aAAa,IAAM,IAAO,EAAO,aAAa,IAAM,IAAO,EAAO,aAAa,IAAM,IAAO,EAAO,aAAa,KAAO,IAAO,EAAO,aAAa,KAAO,IAAO,EAAO,aAAa,KAAO,IAAO,EAAO,aAAa,KAAO,IAAO,EAAO,aAAa,KAAO,IAAO,EAAO,aAAa,KAAO,IAAO,EAAO,aAAa,KACrW,EAAE,eAAqB,EAAI,EAAI,KAAK,IAAK,GAAO,YAAY,GAAG,GAAK,EAAE,YAAiB,GAAI,EAAI,GAC/F,EAAE,eAAqB,EAAI,EAAO,aAAa,KAAO,KAAK,IAAI,EAAG,EAAO,eAAiB,KAC1F,EAAE,eAAqB,EAAI,GAAM,EAAO,aAAa,KAAO,EAAI,EAAO,aAAa,KACpF,EAAE,eAAoB,EAAE,oBAAuB,GAC/C,EAAE,eAAqB,EAAI,IAAO,EAAO,iBAAiB,GAC1D,EAAE,eAAqB,EAAI,GAAM,EAAO,aAAa,IACrD,EAAE,eAAqB,EAAI,GAAM,EAAO,aAAa,GACrD,EAAE,eAAqB,EAAI,GAAM,EAAQ,YAAa,EAAO,qBAAqB,KAClF,EAAE,eAAqB,EAAI,IAA8B,IAAM,EAAE,yBAA4B,GAC7F,EAAE,eAAqB,EAAI,IAAO,KAAK,IAAI,EAAO,kBAAoB,GAAK,KAAK,IAAI,GAAK,EAAO,WAAW,KAC3G,EAAE,eAAqB,EAAI,IAAO,IAAM,EAAO,aAAa,IACxD,EAAO,aAAa,IAAM,GAC1B,GAAE,eAAqB,EAAI,EAAI,IAAO,EAAE,SAExC,EAAO,aAAa,MACpB,GAAE,eAAoB,KAEtB,EAAO,aAAa,MACpB,GAAE,eAAoB,MAGtB,EAAO,aAAa,IAAM,GAC1B,GAAE,eAAoB,GAEtB,EAAO,sBAAwB,GAC/B,GAAE,eAAoB,EAAI,EAAO,WAAW,KAE5C,EAAO,sBAAwB,GAC/B,GAAE,eAAoB,EAAI,EAAO,WAAW,KAEhD,EAAE,eAAoB,KAAK,IAAI,EAAG,KAAK,IAAI,EAAO,qBAAuB,GAAI,IAC7E,EAAE,eAAqB,EAAI,EAAI,GAAK,EAAO,aAAa,YACpD,EAAO,oBAAsB,GAC7B,GAAE,eAAoB,KAAK,IAAI,EAAG,EAAO,qBAAuB,KAEpE,EAAE,eAAoB,KAAK,IAAI,EAAQ,IAAI,EAAO,gBAAgB,IAAI,GAAI,IAAM,IAAK,GACrF,EAAE,cAAmB,KAAK,IAAI,EAAE,cAAkB,KAAK,IAAI,EAAG,EAAE,gBAAmB,EAAO,gBAAgB,IAAO,GAAI,EAAI,IAAM,EAAO,iBAAiB,GAAK,KAAK,IAAI,IAAK,KAAK,IAAI,EAAO,eAAiB,IAAM,KAAK,IAAI,QAC1N,EAAE,eAAqB,EAAI,EAAI,IAAM,EAAO,aAAa,IACzD,EAAE,eAAqB,EAAI,EAAI,IAAM,EAAO,aAAa,IACzD,EAAE,eAAqB,EAAI,EAAO,iBAAiB,GACnD,EAAE,eAAqB,EAAI,IAAM,EAAO,iBAAiB,GACzD,EAAE,eAAqB,EAAI,IAAM,EAAO,iBAAiB,IACzD,EAAE,eAAqB,EAAI,EAAI,EAAO,iBAAiB,IACvD,EAAE,eAAoB,EAAE,mBAAsB,UAC1C,EAAO,iBAAiB,YAAc,IACtC,GAAE,eAAoB,GAEtB,EAAO,iBAAiB,YAAc,IACtC,GAAE,cAAmB,GAEzB,EAAO,mBAAqB,EAAE,cAAoB,IAAM,EAAO,sBAC/D,EAAO,sBAAwB,KAAK,IAAI,EAAO,sBAAuB,EAAO,qBAGpE,GAA8B,IAChC,IAAQ,IAAK,EAAO,WAAW,IAAM,EAAI,EAAO,WAAW,KAAO,EAAO,sBAAyB,GAAI,EAAI,EAAO,aAAa,GAAK,GAGjI,GAA2B,IAAM,CAC1C,GAAI,GAAgB,EAChB,EAAgB,EACpB,AAAI,EAAO,aAAa,OAAS,GAC7B,IAAiB,KAEjB,EAAO,aAAa,OAAS,GAC7B,IAAiB,KAErB,GAAiB,IAAQ,GAAO,eAAe,EAAE,GAAK,GACtD,GAAiB,EAAI,EAAO,WAAW,KAAO,IAC9C,GAAiB,EAAI,EAAO,WAAW,KAAO,IAC9C,GAAiB,EAAI,EAAO,WAAW,KAAO,IAC9C,GAAiB,EAAI,EAAO,WAAW,KAAO,IAC9C,GAAkB,EAAE,oBAAuB,GAAK,EAChD,GAAiB,KAAS,EAAO,aAAa,IAC9C,GAAiB,IAAO,EAAO,WAAW,KAC1C,GAAiB,KAAS,EAAO,aAAa,IAC9C,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,AAAI,EAAO,YAAY,KAAQ,EAC3B,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAK,EAAE,mBAAsB,cAE7J,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAM,GAAM,EAAE,mBAAsB,cAGxK,AAAI,EAAO,YAAY,KAAQ,EAC3B,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAK,EAAE,mBAAsB,cAE7J,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAM,GAAM,EAAE,mBAAsB,cAGxK,AAAI,EAAO,cAAc,KAAQ,EAC7B,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAK,EAAE,mBAAsB,cAE7J,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAM,GAAM,EAAE,mBAAsB,cAGxK,AAAI,EAAO,aAAa,KAAQ,EAC5B,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAK,EAAE,mBAAsB,cAE7J,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAM,GAAM,EAAE,mBAAsB,cAGxK,AAAI,EAAO,aAAa,KAAQ,EAC5B,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAK,EAAE,mBAAsB,cAE7J,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAM,GAAM,EAAE,mBAAsB,cAGxK,AAAI,EAAO,YAAY,KAAQ,EAC3B,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAK,EAAE,mBAAsB,cAE7J,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAM,GAAM,EAAE,mBAAsB,cAGxK,AAAI,EAAO,cAAc,KAAQ,EAC7B,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAK,EAAE,mBAAsB,cAE7J,EAAE,gBAAmB,GAAM,GAAE,yBAA4B,EAAO,eAAe,EAAE,IAAM,GAAiB,EAAO,eAAe,EAAE,GAAM,GAAM,EAAE,mBAAsB,cAI5K,GAAM,GAAmB,CAAC,EAAE,gBAAoB,EAAE,gBAAoB,EAAE,gBAAoB,EAAE,gBAAoB,EAAE,gBAAoB,EAAE,gBAAoB,EAAE,iBAC1J,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACtC,EAAiB,QAAQ,AAAC,GAAmB,CACzC,EAAe,QAAQ,CAAC,EAAQ,IAAe,CAC3C,EAAc,IAAe,MAGrC,CAAC,CAAE,EAAE,cAAkB,EAAE,cAAkB,EAAE,cAAkB,EAAE,cAAkB,EAAE,eAAoB,EACzG,EAAE,eAAoB,EACtB,EAAE,gBAAqB,EACnB,EAAO,eAAe,EAAE,KAAO,GAC/B,GAAE,eAAoB,KAEtB,EAAO,eAAe,EAAE,KAAO,GAC/B,GAAE,eAAoB,KAEtB,EAAO,eAAe,EAAE,KAAO,GAC/B,GAAE,eAAoB,KAEtB,EAAO,eAAe,EAAE,KAAO,GAC/B,GAAE,eAAoB,KAEtB,EAAO,eAAe,EAAE,KAAO,GAC/B,GAAE,eAAoB,KAEtB,EAAO,eAAe,EAAE,KAAO,GAC/B,GAAE,eAAoB,KAEtB,EAAO,eAAe,EAAE,KAAO,GAC/B,GAAE,gBAAqB,IAIlB,EAAsB,IAAM,CACrC,KACI,EAAO,iBAAiB,gBAAkB,GAC1C,GAAE,WAAgB,KAAK,IAAI,EAAG,EAAO,WAAW,GAAK,KAAK,IAAI,IAAM,EAAO,YAAY,EAAE,GAAK,EAAE,WAAiB,EAAK,EAAE,cAAoB,EAAI,EAAO,iBAAiB,IACxK,EAAE,WAAgB,KAAK,IAAI,EAAG,EAAO,WAAW,GAAK,KAAK,IAAI,IAAM,EAAO,YAAY,EAAE,GAAK,EAAE,WAAiB,EAAK,EAAE,cAAoB,EAAI,EAAO,iBAAiB,IACxK,EAAE,WAAgB,KAAK,IAAI,EAAG,EAAO,WAAW,GAAK,KAAK,IAAI,IAAM,EAAO,YAAY,EAAE,GAAK,EAAE,WAAiB,EAAK,EAAE,cAAoB,EAAI,EAAO,iBAAiB,IACxK,EAAE,WAAgB,KAAK,IAAI,EAAG,EAAO,WAAW,GAAK,KAAK,IAAI,IAAM,EAAO,YAAY,EAAE,GAAK,EAAE,WAAiB,EAAK,EAAE,cAAoB,EAAI,EAAO,iBAAiB,IACxK,EAAE,WAAgB,KAAK,IAAI,EAAG,EAAO,WAAW,GAAK,KAAK,IAAI,IAAM,EAAO,YAAY,EAAE,GAAK,EAAE,WAAiB,EAAK,EAAE,cAAoB,EAAI,EAAO,iBAAiB,KAG5K,EAAE,QAAa,EAAY,CAAC,EAAE,WAAe,EAAE,WAAe,EAAE,WAAe,EAAE,WAAe,EAAE,aAClG,MAGS,GAAuB,IAAM,CACtC,EAAE,mBAAwB,EAC1B,EAAE,iBAAsB,EAExB,EAAE,oBAA0B,EAAI,IAAM,EAAO,WAAW,KAAO,IAC/D,EAAE,oBAA0B,EAAK,GAAO,eAAe,EAAE,GAAK,GAAK,GACnE,EAAE,oBAA0B,EAAI,GAAO,KAAK,IAAI,EAAO,cAAgB,GAAK,KAAK,IAAI,IAAM,EAAO,WAAW,KAC7G,EAAE,oBAA0B,EAAI,EAAI,EAAO,WAAW,KAAO,IACzD,EAAO,WAAW,KAAO,GACzB,GAAE,oBAAyB,KAAK,IAAI,KAAM,IAE9C,EAAE,kBAAwB,EAAI,EAAI,EAAO,WAAW,KAAO,IACvD,EAAO,WAAW,KAAO,GAAK,EAAO,iBAAiB,YAAc,GACpE,GAAE,kBAAuB,KAAK,IAAI,EAAG,IAEzC,EAAE,kBAAwB,EAAI,IAAO,KAAK,IAAI,EAAO,mBAAqB,GAAK,KAAK,IAAI,IAAM,EAAO,WAAW,KAChH,EAAE,kBAAwB,EAAI,EAAI,EAAO,WAAW,KAAO,IAC3D,EAAE,kBAAwB,EAAK,GAAO,eAAe,EAAE,GAAK,GAAK,IAEjE,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,EAAE,cAAiB,GAAK,EAAE,mBAAwB,EAAO,WAAW,EAAI,GAAK,EAAO,mBAAmB,GACvG,EAAE,YAAe,GAAK,EAAE,iBAAsB,EAAO,WAAW,EAAI,GAAK,EAAO,iBAAiB,GAGrG,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,AAAI,EAAE,cAAiB,IAAM,KACzB,EAAE,2BAA8B,GAAM,KAAK,IAAI,EAAE,cAAiB,GAAI,EAAI,GAAM,GAAK,EAAE,mBAAsB,cACtG,EAAE,cAAiB,GAAK,MAC/B,GAAE,2BAA8B,GAAK,KAAK,IAAI,GAAI,EAAI,GAAM,KAAK,IAAI,EAAE,cAAiB,GAAI,EAAI,IAAO,GAAK,EAAE,mBAAsB,eAGxI,AAAI,EAAE,YAAe,IAAM,KACvB,EAAE,yBAA4B,GAAM,KAAK,IAAI,EAAE,YAAe,GAAI,EAAI,GAAM,GAAK,EAAE,mBAAsB,YAClG,EAAE,YAAe,GAAK,MAC7B,GAAE,yBAA4B,GAAK,KAAK,IAAI,GAAI,GAAK,IAAO,KAAK,IAAI,EAAE,YAAe,GAAI,EAAI,IAAO,GAAK,EAAE,mBAAsB,cAMjI,GAAgB,IAAM,CAE/B,GAAI,GAAc,EAClB,GAAe,EAAK,GAAO,eAAe,EAAE,GAAK,GACjD,GAAe,EAAQ,gBAAiB,EAAO,qBAAqB,IACpE,GAAe,EAAI,EAAO,iBAAiB,GAC3C,GAAe,GAAK,EAAQ,YAAa,EAAO,qBAAqB,KACrE,GAAe,KAAK,MAAM,EAAI,IAAM,EAAO,WAAW,MACtD,GAAe,EAAE,mBAAsB,cACvC,GAAI,GAAM,EACN,EAAW,EACf,AAAI,EAAO,iBAAiB,YAAc,IACtC,GAAM,KAEN,EAAO,iBAAiB,YAAc,IACtC,GAAW,KAAK,MAAO,GAAI,EAAO,qBAAqB,GAAK,GAAK,EAAO,qBAAqB,IAAM,KAAK,IAAI,EAAI,EAAI,EAAO,qBAAqB,IAAM,MAE1J,EAAE,UAAe,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GACzJ,EAAE,UAAe,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GACzJ,EAAE,UAAe,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GACzJ,EAAE,UAAe,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GACzJ,EAAE,UAAe,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GACzJ,EAAE,UAAe,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GACzJ,EAAE,UAAe,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GACzJ,EAAE,UAAe,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GACzJ,EAAE,UAAe,KAAK,IAAI,EAAO,YAAY,EAAE,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GACzJ,EAAE,WAAgB,KAAK,IAAI,EAAO,YAAY,GAAG,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GAC3J,EAAE,WAAgB,KAAK,IAAI,EAAO,YAAY,GAAG,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,GAC3J,EAAE,WAAgB,KAAK,IAAI,EAAO,YAAY,GAAG,GAAK,EAAK,EAAI,EAAO,WAAW,IAAM,EAAc,EAAO,WAAW,KAAO,EAAI,EAAO,WAAW,KAAO,IAIlJ,GAA2B,IAAM,CAC1C,EAAE,OAAY,EACd,EAAE,aAAkB,EACpB,GAAM,GAAgB,EAAY,EAAO,aACzC,AAAI,EAAO,UAAU,IAAI,SACrB,GAAE,QAAa,EAAQ,IAAI,EAAO,UAAW,IAC7C,EAAE,QAAa,EAAI,EAAI,EACvB,EAAE,QAAa,EAAI,GAAK,EAAO,eAC/B,EAAE,QAAa,EAAI,EAAI,EAAO,gBAC9B,EAAE,QAAa,EAAI,EAAI,EAAO,eAC9B,EAAE,QAAa,EAAI,EAAI,EAAO,gBAC9B,EAAE,QAAa,EAAO,eACtB,EAAE,QAAa,EAAI,EAAO,eAC1B,EAAE,QAAa,EAAI,EAAO,iBAC1B,EAAE,QAAa,EAAI,EAAO,gBAC1B,EAAE,QAAa,IAAM,EAAO,WAAW,KAEnC,EAAO,aAAa,OAAS,GAC7B,GAAE,QAAa,MAEf,EAAO,aAAa,OAAS,GAC7B,GAAE,QAAa,KAAO,MAEtB,EAAO,aAAa,OAAS,GAC7B,GAAE,QAAa,KAAO,MAE1B,EAAE,QAAc,EAAI,EAAO,WAAW,KAAO,IAC7C,EAAE,QAAc,EAAI,IAAM,EAAO,WAAW,KAAO,IAE/C,EAAO,aAAa,OAAS,GAC7B,GAAE,QAAa,IAEf,EAAO,aAAa,OAAS,GAC7B,GAAE,QAAa,IAEf,EAAO,aAAa,OAAS,GAC7B,GAAE,QAAa,IAEf,EAAO,aAAa,OAAS,GAC7B,GAAE,QAAa,KAEnB,EAAE,QAAa,GAAK,EAAO,WAAW,KACtC,EAAE,QAAa,GAAK,EAAO,WAAW,KACtC,EAAE,QAAa,GAAK,EAAO,WAAW,KACtC,EAAE,QAAa,IAAM,EAAQ,gBAAiB,EAAO,qBAAqB,KAC1E,EAAE,QAAa,GAAK,EAAO,SAAS,IACpC,EAAE,OAAY,EAAI,GAAK,KAAK,MAAM,GAAK,EAAE,QAEzC,EAAE,cAAmB,GAAM,KAAK,IAAI,KAAM,EAAE,QAC5C,EAAE,cAAmB,GAAM,KAAK,IAAI,IAAM,EAAE,QAC5C,EAAE,cAAmB,GAAM,KAAK,IAAI,IAAM,EAAE,QAC5C,EAAE,cAAmB,GAAM,KAAK,IAAI,IAAO,EAAE,QAC7C,EAAE,cAAmB,GAAM,EAAE,OAC7B,EAAE,cAAoB,EAAE,oBAAuB,GAAK,EACpD,EAAE,cAAmB,EAAI,EAAO,aAAa,IAC7C,EAAE,cAAoB,EAAI,IAAO,EAAO,SAAS,OAInD,GAAmC,IAAM,CAC3C,EAAE,eAAoB,KAAK,IAAI,EAAG,KAAK,IAAI,EAAO,kBAAoB,GAAI,IACtE,EAAO,aAAa,OAAS,GAC7B,GAAE,gBAAqB,KAAK,IAAI,IAAM,KAAK,IAAI,EAAG,EAAO,kBAAoB,MAE7E,EAAO,aAAa,KAAO,GAC3B,GAAE,gBAAqB,KAAK,IAAI,EAAG,EAAO,kBAAoB,KAGlE,EAAE,kBAAuB,EACzB,EAAE,mBAAyB,EAAI,EAAK,GAAI,KAAK,IAAI,EAAG,CAAE,GAAO,YAAY,GAAG,GAAK,EAAE,YAAiB,MACpG,EAAE,mBAAyB,EAAI,EAAO,WAAW,KAAO,GACxD,EAAE,mBAAyB,EAAI,EAAO,WAAW,KAAO,GACpD,EAAO,aAAa,OAAS,GAC7B,GAAE,mBAAwB,MAE1B,EAAO,aAAa,OAAS,GAC7B,GAAE,mBAAwB,MAE9B,EAAE,mBAAyB,EAAI,KAAO,EAAE,2BAA8B,GACtE,EAAE,mBAAyB,EAAI,EAAI,GAAK,EAAQ,gBAAiB,EAAO,qBAAqB,KAC7F,EAAE,mBAAyB,EAAI,EAAI,GAAK,EAAO,WAAW,KAC1D,EAAE,mBAAyB,EAAI,EAAI,IAAM,EAAO,WAAW,KAC3D,EAAE,mBAAyB,EAAI,EAAI,IAAM,EAAO,WAAW,KAC3D,EAAE,mBAAyB,EAAI,EAAI,IAAM,EAAO,WAAW,KAC3D,EAAE,mBAAyB,EAAI,EAAI,GAAK,EAAO,SAAS,IACxD,EAAE,mBAAyB,EAAI,IAAO,EAAO,SAAS,IACtD,EAAE,mBAAwB,EAAE,oBAAuB,IAgB1C,GAA+B,IAAsB,CAC9D,KACA,KAEA,GAAM,GAAc,EAAE,eAAoB,EAAE,kBA4B5C,MA3BgC,CAC5B,mBAAoB,EAAE,aAAkB,EAAc,GACtD,UAAW,EAAO,kBAAoB,IAAO,EAAE,aAAkB,EAAc,IAC/E,UAAW,EAAO,sBAAwB,IAAO,EAAE,aAAkB,EAAc,IACnF,eAAiB,EAAE,OAAY,IACzB,KAAK,IAAI,EAAG,KAAK,MAAM,EAAc,IAAM,KAAK,IAAI,EAAI,EAAK,KAAK,IAAI,EAAG,EAAE,aAAkB,KAAO,KACpG,EACN,gBAAkB,EAAE,OAAY,IAC1B,KAAK,IAAI,EAAG,KAAK,MAAM,EAAc,IAAM,KAAK,IAAI,EAAI,EAAK,KAAK,IAAI,EAAG,EAAE,aAAkB,KAAO,QACpG,EACN,kBAAoB,EAAE,OAAY,IAC5B,KAAK,IAAI,EAAG,KAAK,MAAM,EAAc,IAAM,KAAK,IAAI,EAAI,GAAM,KAAK,IAAI,EAAG,EAAE,aAAkB,KAAQ,QACtG,EACN,cAAgB,EAAE,OAAY,KACxB,KAAK,IAAI,EAAG,KAAK,MAAM,EAAc,IAAM,KAAK,IAAI,EAAI,GAAM,KAAK,IAAI,EAAG,EAAE,aAAkB,MAAQ,OACtG,EACN,cAAgB,EAAE,OAAY,IACxB,KAAK,IAAI,EAAG,KAAK,MAAM,EAAc,IAAM,KAAK,IAAI,EAAI,GAAM,KAAK,IAAI,EAAG,EAAE,aAAkB,KAAQ,QACtG,EACN,mBAAqB,EAAE,OAAY,IAC7B,KAAK,IAAI,EAAG,KAAK,MAAM,EAAc,IAAM,KAAK,IAAI,EAAI,GAAM,KAAK,IAAI,EAAG,EAAE,aAAkB,KAAQ,QACtG,EACN,kBAAoB,EAAE,OAAY,IAC5B,KAAK,IAAI,EAAG,KAAK,MAAM,EAAc,IAAM,KAAK,IAAI,EAAI,GAAM,KAAK,IAAI,EAAG,EAAE,aAAkB,MAAQ,KACtG,IAMD,GAAW,SAAY,CAChC,GAAM,GAAO,KAAM,IAAO,0GACpB,EAAU,OAAO,GACnB,GACI,OAAO,MAAM,IACb,GAAW,EAEX,MAAO,GAAM,iCAErB,SAAS,eAAe,oBAAoB,MAAM,QAAU,OAC5D,SAAS,eAAe,WAAW,MAAM,QAAU,QACnD,GAAiB,IAGR,GAAmB,CAAC,EAAY,IAAM,CAC/C,EAAE,SAAc,GAGhB,GAAM,GAAe,MAAQ,EAAI,KAAO,EAAI,EAAO,WAAW,IAAM,KAAO,EAAI,EAAO,WAAW,IAC3F,EAAc,KAAK,MACnB,EAAU,KAAK,IAAI,EAAc,KAAK,IAAI,EAAY,GAAc,EAAO,aAAe,MAC1F,EAAW,EAAQ,IACrB,EAAgB,IAEpB,SAAS,eAAe,gBAAgB,YAAc,YAAc,EAAO,EAAS,GAAK,gCAIzF,GAAkB,EAAO,yBACzB,KAEA,SAAS,eAAe,WAAW,MAAM,QAAW,EAAY,EAAK,OAAS,QAC9E,SAAS,eAAe,oBAAoB,MAAM,QAAU,OAE5D,EAAO,YAAe,EAAO,YAAc,MAAW,KAAK,MAAS,EAAO,YAG3E,GAAM,GAAe,EAAiC,WACtD,EAAa,IAAM,6BAEnB,EAAE,eAAoB,IACtB,KACA,GAAM,GAAgB,KAEhB,EAAW,CACb,SAAU,EAAU,KAAK,IAAI,IAAM,EAAO,iBAC1C,SAAU,KAAK,MAAM,GACrB,aAAc,EAAU,KAAK,IAAI,IAAM,EAAO,kBAC9C,cAAe,EAAU,KAAK,IAAI,IAAM,EAAO,oBAC/C,UAAW,EAAU,EAAgB,EAAE,gBAGrC,EAAW,CACb,SAAU,EAAU,EAAE,eACtB,aAAc,EAAU,EAAE,eAC1B,cAAe,EAAU,EAAE,eAC3B,KAAM,EAAU,EAAE,eAClB,SAAU,EACV,UAAW,EAAO,iBAClB,OAAQ,KAAe,MAG3B,GAAU,YAAa,GACvB,GAAU,SAAU,GAEpB,EAAO,eAAiB,EAAS,SACjC,EAAO,gBAAkB,EAAS,aAClC,EAAO,oBAAsB,EAAS,cACtC,EAAS,UAAY,EAAO,iBAAmB,EAAS,UACxD,EAAS,OAAS,KAAe,KAAO,EAAS,OAGjD,GAAM,GAAa,GAAS,IAAM,CAC9B,EAAE,eAAoB,IACtB,KAGA,GAAU,WAAY,GACtB,GAAU,eAAgB,GAC1B,GAAU,gBAAiB,GAE3B,GAAa,EAAW,EAAE,gBAGrB,EAAO,WAAW,IAAM,GAAK,EAAO,iBAAiB,YAAc,IACtE,GAAe,eAAgB,GAG7B,EAAO,aAAa,KAAO,GAC3B,GAAe,eAAgB,GAGnC,GAAe,eAAgB,GAE3B,EAAO,aAAa,aAAe,GAAK,EAAO,qBAC/C,GAAe,gBAAiB,GAEhC,EAAgB,GAAM,GACtB,KAEJ,GAAiB,EAEb,EAAgB,GAChB,IAAS,GACT,EAAE,SAAc,KAErB,GAkBH,GAhBA,SAAS,eAAe,8BAA8B,YAAc,EAAO,EAAS,SAAU,EAAG,IACjG,SAAS,eAAe,8BAA8B,YAAc,EAAO,EAAS,SAAU,EAAG,IACjG,SAAS,eAAe,8BAA8B,YAAc,EAAO,EAAS,SAAU,EAAG,IACjG,SAAS,eAAe,kCAAkC,YAAc,EAAO,EAAS,aAAc,EAAG,IACzG,SAAS,eAAe,kCAAkC,YAAc,EAAO,EAAS,aAAc,EAAG,IACzG,SAAS,eAAe,mCAAmC,YAAc,EAAO,EAAS,cAAe,EAAG,IAC3G,SAAS,eAAe,mCAAmC,YAAc,EAAO,EAAS,cAAe,EAAG,IAC3G,SAAS,eAAe,+BAA+B,YAAc,EAAO,EAAS,UAAW,EAAG,IACnG,SAAS,eAAe,yBAAyB,YAAc,EAAO,EAAS,KAAM,EAAG,IACxF,SAAS,eAAe,6BAA6B,YAAc,EAAO,EAAS,SAAU,EAAG,IAChG,SAAS,eAAe,+BAA+B,YAAc,EAAO,EAAS,UAAW,EAAG,IACnG,SAAS,eAAe,2BAA2B,YAAc,EAAO,EAAS,OAAQ,EAAG,IAE5F,SAAS,eAAe,0BAA0B,YAAc,0DAEhE,EAAO,YAAc,EACjB,CAAC,EAAO,gBAAiB,CACzB,GAAI,EAAO,qBAAqB,IAAM,GAAK,EAAO,4BAA4B,IAAM,EAAG,CACnF,GAAM,GAAW,EAAO,eACxB,EAAM,sBACN,EAAO,eAAkB,EAAW,EAExC,EAAO,gBAAkB,GAG7B,KACA,KACA,KACA,KACA,KAIS,GAAc,IAAM,CAC7B,SAAS,eAAe,oBAAoB,MAAM,QAAU,OAC5D,SAAS,eAAe,WAAW,MAAM,QAAU,QAG1C,GAAmB,CAAC,EAAkB,EAAgB,IACvD,EAAK,GAAW,GAAM,GAAI,KAAK,IAAI,EAAG,CAAE,EAAW,IAGlD,GAA8B,CAAC,EAAkB,IAClD,EAAK,GAAW,GAAM,GAAI,KAAK,IAAI,CAAC,IAGnC,GAAyB,IAAM,CAExC,GAAM,GAAY,CAAC,EAAO,cAAc,YAAa,EAAO,cAAc,WAAY,EAAO,cAAc,SAAU,EAAO,cAAc,QAAS,EAAO,cAAc,UAAW,EAAO,cAAc,SAAU,EAAO,cAAc,aAAc,EAAO,cAAc,OAAQ,EAAO,cAAc,cAAe,EAAO,cAAc,aACrU,EAAa,CAAC,EAAO,aAAa,IAAM,IAAK,EAAO,aAAa,IAAM,IAAK,EAAO,aAAa,IAAM,IAAK,EAAO,aAAa,IAAM,IAAK,EAAO,aAAa,IAAM,IAAK,EAAO,aAAa,IAAM,GAAI,EAAO,aAAa,IAAM,IAAK,EAAO,aAAa,IAAM,IAAK,EAAO,aAAa,IAAM,IAAK,EAAO,aAAa,IAAM,KAEpU,OAAS,GAAI,EAAG,GAAK,GAAI,IAAK,CAC1B,GAAI,GAAQ,EACR,EAAO,EACX,AAAI,EAAU,EAAE,IAAM,KAClB,GAAQ,EAAE,gBAAmB,GAC7B,GAAQ,KAAK,IAAI,IAAO,GAAI,EAAE,gBAAmB,IAAO,GAAI,EAAW,EAAE,MAEzE,IAAM,GACN,GAAQ,KACR,EAAO,GAGX,EAAE,oBAAuB,GAAK,EAAI,EAAO,EAAE,aAAgB,GAAK,KAAK,IAAI,EAAU,EAAE,GAAI,EAAS,GAAI,EAAW,EAAE,KAAO,EAAE,yBAA4B,GAE5J,IACA,KACA,MAGS,GAA6B,IAAM,CAC5C,GAAM,GAAM,CAER,KAAK,IAAI,KAAK,IAAI,EAAG,EAAO,iBAAmB,IAAK,GAAM,GAAK,GAAI,EAAI,EAAO,aAAa,KAAO,EAAI,EAAI,EAAO,aAAa,KAAO,EAAI,EAAI,EAAO,aAAa,MAAQ,KAAK,IAAI,EAAG,EAAO,iBAAmB,GAAK,IAEpN,EAAI,EAAI,IAAM,EAAO,aAAa,KAAO,GAAK,IAAM,EAAO,aAAa,KAExE,EAAI,EAAO,aAAa,KAAO,KAAK,IAAI,GAAK,KAAK,IAAI,GAAK,EAAI,GAAK,KAAK,MAAM,IAA8B,OAE7G,EAAE,mBAAsB,MAAQ,EAAE,mBAAsB,MAAQ,EAAE,mBAAsB,MAAQ,EAAE,mBAAsB,MAAQ,EAAE,mBAAsB,MAExJ,EAAI,EAAE,IAAM,EAAO,WAAW,GAE9B,EAAI,EAAO,iBAAiB,IAE5B,KAAK,IAAI,KAAM,EAAO,iBAAiB,IAAM,EAAO,qBAAqB,IAEzE,KAEA,EAAI,MAAS,CAAC,EAAE,SAGpB,MAAO,CACH,KAAM,EAAgB,GACtB,KAAM,IAID,GAA0B,CAAC,EAAQ,KAAO,CACnD,AAAI,EAAQ,GACR,GAAQ,KAA0B,gBAEtC,GAAM,GAAM,CAER,KAAK,IAAI,EAAQ,IAAM,EAAI,KAE3B,KAA6B,KAE7B,EAAI,EAAI,IAAM,EAAO,aAAa,WAEjC,GAAI,EAAO,WAAW,KAAO,KAC7B,GAAI,EAAO,WAAW,KAAO,KAC7B,GAAI,EAAO,WAAW,KAAO,KAC7B,GAAI,GAAM,EAAO,WAAW,KAAO,KACnC,GAAI,GAAM,EAAO,WAAW,KAAO,KACnC,GAAI,GAAM,EAAO,WAAW,KAAO,KACnC,GAAI,IAAO,IAAM,EAAO,WAAW,KAAO,EAAO,YAAY,GAAG,IAChE,GAAI,GAAM,EAAO,WAAW,KAAO,KAEpC,EAAI,KAAQ,IAAM,EAAO,WAAW,KAEnC,GAAI,GAAK,EAAO,aAAa,GAAK,KAClC,GAAI,EAAI,EAAO,aAAa,IAAM,KAClC,GAAI,EAAI,EAAO,aAAa,IAAM,KAClC,GAAI,IAAO,EAAO,aAAa,KAC/B,GAAI,EAAI,EAAO,aAAa,IAAM,KAClC,GAAI,EAAI,EAAO,aAAa,IAAM,KAEnC,EAAI,IAAO,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,GAAK,KAAK,IAAI,EAAG,EAAO,iBAAiB,KAE5F,EAAI,EAAO,aAAa,KAAO,KAAK,IAAI,EAAG,EAAO,eAAiB,MAEnE,EAAI,EAAO,aAAa,KAAO,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,IAAM,IAE7E,EAAI,KAAK,IAAI,IAAK,EAAO,aAAa,KAAO,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,IAAM,KAE3F,EAAI,EAAI,IAAO,GAAO,aAAa,KAAO,EAAO,aAAa,KAAO,EAAO,aAAa,MAAQ,EAAI,IAAM,EAAO,aAAa,KAE/H,EAAK,KAAK,IAAI,IAAM,GAAI,IAAM,KAAK,MAAM,EAAQ,IAAO,EAAO,aAAa,KAE5E,EAAI,IAA8B,IAAM,EAAE,yBAA4B,GAEtE,EAAE,wBAA2B,GAE7B,EAAI,MAAW,EAAY,EAAO,iBAAmB,EAAO,iBAAiB,IAKjF,MAAO,CAAC,KAAM,EACN,KAAM,EAAgB,KAGrB,GAA+B,CAAC,EAAQ,KAAO,CACxD,AAAI,EAAQ,GACR,GAAQ,KAA0B,gBAEtC,GAAM,GAAM,CAER,KAAK,IAAI,EAAI,KAAK,IAAI,EAAI,EAAQ,KAAQ,IAAK,KAE/C,KAA6B,KAE7B,EAAI,EAAI,IAAM,EAAO,aAAa,WAElC,EAAI,IAAO,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,GAAK,KAAK,IAAI,EAAG,EAAO,iBAAiB,KAE5F,EAAI,IAAO,EAAO,aAAa,IAE/B,EAAI,EAAI,IAAM,EAAO,aAAa,IAAM,EAAY,EAAO,iBAE3D,EAAI,KAAK,IAAI,IAAK,EAAO,aAAa,KAAO,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,IAAM,KAE3F,EAAI,EAAO,aAAa,KAAO,KAAK,IAAI,EAAG,EAAO,eAAiB,KAEnE,EAAI,EAAI,IAAO,GAAO,aAAa,KAAO,EAAO,aAAa,KAAO,EAAO,aAAa,MAAQ,EAAI,IAAM,EAAO,aAAa,KAE/H,EAAI,KAAK,IAAI,IAAM,GAAI,IAAM,KAAK,MAAM,EAAQ,IAAM,EAAO,aAAa,KAE1E,EAAE,wBAA2B,GAE7B,EAAI,MAAU,EAAY,EAAO,iBAAmB,EAAO,iBAAiB,IAIhF,MAAO,CAAC,KAAM,EACN,KAAM,EAAgB,KAGrB,GAA+B,CAAC,EAAQ,KAAO,CACxD,AAAI,EAAQ,GACR,GAAQ,KAA0B,gBAEtC,GAAM,GAAM,CAER,KAAK,IAAI,EAAI,KAAK,IAAI,EAAI,EAAQ,KAAQ,IAAK,IAE/C,KAA6B,KAE7B,EAAI,EAAI,IAAM,EAAO,aAAa,YAElC,EAAI,EAAI,IAAO,GAAO,aAAa,KAAO,EAAO,aAAa,KAAO,EAAO,aAAa,MAAQ,EAAI,IAAM,EAAO,aAAa,KAE/H,EAAI,EAAO,aAAa,KAAO,KAAK,IAAI,EAAG,EAAO,eAAiB,KAEnE,EAAI,EAAI,GAAK,EAAO,aAAa,KAEjC,EAAI,KAAK,IAAI,IAAM,GAAI,IAAM,KAAK,MAAM,EAAQ,IAEhD,EAAI,KAAK,IAAI,EAAG,EAAO,eAAiB,MAAU,EAAO,aAAa,KAEtE,EAAE,wBAA2B,GAE7B,EAAI,MAAU,EAAY,EAAO,iBAAmB,EAAO,iBAAiB,GAE5E,EAAI,GAAI,IAAO,EAAmB,iBAItC,MAAO,CAAC,KAAM,EACN,KAAM,EAAgB,KAGrB,GAA8B,CAAC,EAAQ,KAAO,CACvD,AAAI,EAAQ,GACR,GAAQ,KAA0B,gBAEtC,GAAM,GAAM,CAER,KAAK,IAAI,EAAI,KAAK,IAAI,EAAG,EAAQ,QAAY,OAAU,KAEvD,KAA6B,KAE7B,EAAI,EAAI,IAAM,EAAO,aAAa,YAElC,EAAI,KAAK,IAAI,GAAI,EAAO,aAAa,KAAO,EAAI,IAAO,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,KAE/F,EAAI,EAAI,IAAO,GAAO,aAAa,KAAO,EAAO,aAAa,KAAO,EAAO,aAAa,MAAQ,EAAI,IAAM,EAAO,aAAa,KAE/H,EAAI,EAAO,aAAa,KAAO,KAAK,IAAI,EAAG,EAAO,eAAiB,QAEnE,EAAI,KAAK,IAAI,IAAM,GAAI,IAAM,KAAK,MAAM,EAAQ,IAAM,EAAO,aAAa,KAE1E,EAAE,wBAA2B,GAE7B,EAAI,EAAO,iBAAiB,GAAK,IAIrC,MAAO,CAAC,KAAM,EACN,KAAM,EAAgB,KAGrB,GAA+B,CAAC,EAAQ,KAAO,CACxD,AAAI,EAAQ,GACR,GAAQ,KAA0B,gBAEtC,GAAM,GAAM,CAER,KAAK,IAAI,EAAI,KAAK,IAAI,EAAG,EAAQ,QAAW,OAAS,KAErD,KAA6B,KAE7B,EAAI,EAAI,IAAM,EAAO,aAAa,YAElC,EAAI,KAAK,IAAI,IAAM,GAAI,IAAM,KAAK,MAAM,EAAQ,IAAM,EAAO,aAAa,KAE1E,EAAI,KAAK,IAAI,GAAK,EAAO,eAAiB,MAAQ,EAAO,aAAa,KAEtE,EAAI,KAAK,IAAI,GAAK,EAAO,eAAiB,MAAQ,EAAO,aAAa,KAEtE,KAAK,IAAI,EAAI,EAAI,EAAE,IAAS,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,MAIxE,MAAO,CAAC,KAAM,EACN,KAAM,EAAgB,KAGrB,EAA4B,IAAM,CAC3C,GAAI,GAAW,EACf,UAAa,EAAI,EAAI,IAAM,KAAK,IAAI,EAAO,aAAe,GAAK,KAAK,IAAI,IAAM,EAAO,SAAS,IAC9F,GAAa,EAAI,EAAO,WAAW,KAAO,GAC1C,GAAa,EAAI,KAAQ,EAAO,WAAW,KAC3C,GAAa,EAAI,KAAQ,EAAO,WAAW,KAC3C,GAAa,EAAI,KAAQ,EAAO,WAAW,KAC3C,GAAa,EAAI,KAAQ,EAAO,WAAW,KAC3C,GAAa,EAAI,KAAQ,EAAO,WAAW,KAC3C,GAAa,EAAI,EAAI,EAAE,2BAA8B,GACrD,GAAa,EAAI,IAA8B,IAAM,EAAE,yBAA4B,GACnF,GAAY,EAAE,oBAAuB,IACrC,GAAY,EAAI,EAAO,aAAa,IAAM,EAC1C,GAAY,GAAiB,EAAG,EAAO,YAAY,GAAG,GAAK,EAAE,WAAe,IAC5E,GAAa,EAAI,GAAQ,GAAO,eAAe,EAAE,GAAK,GACtD,GAAY,EAAE,mBAAsB,YACpC,GAAY,EAAE,mBAAsB,EAAO,gBAAgB,IACvD,EAAW,KACX,GAAW,GAAK,KAAK,KAAK,IAE1B,EAAW,GACX,GAAW,KAAK,IAAI,EAAU,EAAI,EAAO,iBAAiB,GAAK,KAEnE,GAAY,EAAE,wBAA2B,GACrC,EAAO,gBAAgB,IAAM,GAAK,EAAO,aAAa,KAAO,GAC7D,EAAiB,KAEjB,EAAW,MAAQ,EAAO,aAAa,KAAO,GAC9C,EAAiB,KAEb,GAGC,GAAiC,IAAM,CAChD,GAAM,GAAM,CACR,EAAI,EAAO,aAAa,YAAc,IACtC,EAAI,GAAI,IAAO,EAAmB,WAClC,EAAI,IAAO,EAAO,aAAa,KAC/B,EAAI,KAAK,IAAI,GAAM,EAAE,IAAM,KAAK,MAAM,EAAO,eAAiB,IAAM,EAAO,aAAa,KACxF,EAAI,KAAK,IAAI,GAAM,EAAE,IAAM,KAAK,MAAM,EAAO,eAAiB,IAAM,EAAO,aAAa,KACxF,EAAI,KAAQ,EAAY,EAAO,iBAAmB,EAAO,iBAAiB,IAC1E,EAAE,mBAAsB,gBAE5B,MAAO,GAAgB,IAGd,EAA4B,IAAM,CAC3C,GAAI,GAAa,IAEjB,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,GAAc,GAAK,KAAK,IAAI,EAAO,gBAAgB,GAAI,GAG3D,MAAQ,IAIC,GAA2B,CACpC,EACA,EACA,EACA,EAAgB,MACG,CACnB,GAAM,GAAe,EAAW,EAAa,GAAI,GAAa,EACxD,EAAa,KAAK,IAAI,EAAY,EAAe,KAAK,MAAM,GAAK,EAAI,KAAK,KAAK,EAAI,EAAI,EAAK,GAAoB,GAAgB,KAChI,EAAY,EAAW,EAAc,GAAI,GAAc,EAAK,EAElE,MAAO,CAAC,EAAY,IAIX,GAA8B,CACvC,EACA,EACA,EACA,EACA,IACmB,CACnB,GAAM,GAAI,EAAe,EACzB,EAAoB,GAAqB,EACzC,GAAM,GAAe,EAAY,GAAI,KAAK,IAAI,EAAW,GAAK,EAAa,GAAI,IAC/E,GAAqB,EACrB,GAAM,GAAI,EAAoB,EAC1B,EAAa,EAAI,EACf,KAAK,IAAI,EAAG,KAAK,MAAO,GAAI,GAAM,GAAI,GAAK,KAAK,IAAI,KAAK,IAAI,EAAI,EAAG,GAAK,EAAI,EAAI,EAAG,EAAI,GAAM,GAAI,KAClG,KAAK,MAAM,GAEjB,EAAa,KAAK,IAAI,EAAY,EAAY,GAC9C,GAAI,GAAY,EAAY,GAAI,KAAK,IAAI,EAAY,GAAK,EAAc,GAAI,IAAM,EAClF,MAAI,IAAc,GACd,GAAY,EAAY,GAAI,EAAI,EAAI,IAEjC,CAAC,EAAY,IAUX,GAA0B,IAAM,CACzC,GAAI,GAAY,EACZ,EAAuB,EACvB,EAAiB,EAGf,EAAwB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KACjE,EAAwB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KACnE,EAAwB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAK5E,OAAS,GAAI,EAAG,GAAK,GAAI,IACrB,GAAa,EAAsB,GAAK,EAAO,4BAA4B,GACvE,GAAK,GAAK,EAAO,4BAA4B,IAAM,IACnD,IAAa,EAAsB,GAAM,GAAO,4BAA4B,GAAK,IAC7E,EAAO,4BAA4B,IAAM,KACzC,IAAa,EAAsB,GAAM,GAAO,4BAA4B,GAAK,OAGrF,GAAK,IAAM,EAAI,GAAK,EAAO,4BAA4B,IAAM,IAC7D,IAAa,EAAsB,GAAM,GAAO,4BAA4B,GAAK,IAC7E,EAAO,4BAA4B,IAAM,IACzC,IAAa,EAAsB,GAAM,GAAO,4BAA4B,GAAK,MAW7F,GAAa,KAAK,IAAI,KAAO,KAAQ,EAAO,aAAa,IAAM,MAAU,GAAO,iBAAiB,GAAK,EAAO,iBAAiB,KAAM,EAAO,4BAA4B,KAEvK,OAAS,GAAI,EAAG,GAAK,GAAI,IAAK,CAC1B,GAAM,GAAa,KAAM,GAAK,IAAM,IAAM,EAAO,gBAAgB,IAAM,GAAM,KAAO,MAAS,EAAO,iBAAiB,IAAM,EAC3H,GAAwB,KAAK,IAAI,EAAE,2BAA8B,EAAO,gBAAgB,IAAK,GAGjG,SAAiB,EAAY,EAAuB,EAAE,mBAAsB,MAAQ,EAAE,wBAA2B,GAC7G,EAAO,aAAa,KAAO,GAC3B,IAAmB,EAAI,KAAK,IAAI,EAAG,EAAE,IAAS,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,MAEnF,CAAC,UAAW,EACX,qBAAsB,EACtB,eAAgB,IAGf,GAAsB,IAAM,CACrC,GAAI,GAAW,EACX,EAAoB,EAClB,EAAS,KAET,EAAY,EAAO,UACnB,EAAuB,EAAO,qBAC9B,EAAiB,EAAO,eAE9B,OAAS,GAAI,EAAG,GAAK,GAAI,IACrB,EAAqB,GAAK,EAAK,EAAI,EACnC,GAAY,EAAoB,EAAO,4BAA4B,GAIvE,GAAI,GAAW,EACf,GAAY,GAAwB,GAAgB,KAGpD,GAAI,GAAgB,EACpB,AAAG,GAAkB,KACjB,IAAiB,IACrB,GAAiB,GAA6B,GAAgB,KAG9D,GAAI,GAAiB,GAAkB,IAAO,EAAI,EAClD,GAAiB,GAA6B,GAAgB,KAG9D,GAAI,GAAgB,GAAkB,OAAY,EAAI,EACtD,GAAgB,GAA4B,GAAgB,KAG5D,GAAI,GAAiB,EAAE,mBAAsB,mBAAwB,GAAkB,QAAW,EAAO,aAAa,KAAO,EAAK,EAAI,EACtI,UAAiB,GAA6B,GAAgB,KAEvD,CAAC,EAAU,KAAK,MAAM,GAAY,EAAsB,KAAK,MAAM,GAAiB,KAAK,MAAM,GAAW,KAAK,MAAM,GAAgB,KAAK,MAAM,GAAgB,KAAK,MAAM,GAAe,KAAK,MAAM,KAOnM,GAA4B,IAAM,CAC3C,GAAM,GAAM,CACR,EAAE,IACF,EAAE,mBAAsB,OACvB,EAAI,EAAO,aAAa,SAAW,GACnC,EAAI,EAAO,aAAa,KAAO,GAC/B,EAAI,EAAO,aAAa,KAAO,GAChC,EAAI,IAAO,EAAO,iBAAiB,IACnC,GAGJ,MAAO,CACH,KAAM,EACN,KAAM,EAAgB,KAIjB,GAA+B,IACjC,GAAiB,EAAG,KAAK,IAAI,EAAO,aAAc,IAAM,IACxD,GAAiB,IAAK,KAAK,IAAI,EAAO,aAAc,IAAM,KAC1D,GAAiB,IAAK,KAAK,IAAI,EAAO,aAAc,IAAM,KAC1D,EAGE,GAA8B,IAC/B,EAAO,eAAiB,IAAU,EAAI,EAAE,GAAK,KAAK,IAAI,KAAK,MAAM,EAAO,gBAAiB,GAAO,EAAI,EAAE,IAAQ,EAAO,eAGpH,GAA+B,IAChC,EAAO,eAAiB,IAAU,EAAI,EAAE,GAAK,KAAK,MAAM,EAAO,gBAAoB,EAAI,EAAE,IAAS,EAAO,eAGxG,GAAkB,IAAM,CAl3CrC,MAm3CI,MAAO,UAAP,GAAO,SAAa,GAAI,OACpB,MAAO,GAAO,UAAa,UAC3B,GAAO,SAAW,GAAI,MAAK,EAAO,WAGtC,GAAM,GAAI,GAAI,MACR,EAAI,EAAE,WACN,EAAI,EAAE,aACN,EAAI,EAAE,aACZ,EAAO,SAAY,GAAK,GAAK,GAAO,GAAK,GAAK,EAAM,GAAK,EAAK,EAE1D,GAAE,YAAc,EAAO,SAAS,WAAa,EAAE,aAAe,EAAO,SAAS,YAAc,EAAE,gBAAkB,EAAO,SAAS,gBAChI,GAAO,SAAW,GAAI,MACtB,EAAO,eAAiB,EACxB,EAAO,oBAAsB,EAC7B,EAAO,oBAAsB,EAC7B,EAAO,uBAAyB,EAChC,EAAO,gBAAkB,EACzB,EAAO,qBAAuB,EAC9B,EAAO,qBAAuB,EAC9B,EAAO,wBAA0B,EAEjC,EAAO,gBAAkB,EAAO,aAAe,KAA4B,KAC3E,EAAO,aAAe,EAAE,mBAAsB,SAC9C,EAAO,qBAAuB,EAE9B,SAAS,eAAe,6BAA6B,MAAM,QAAU,QACjE,EAAO,qBAAqB,IAAM,GAClC,UAAS,eAAe,kCAAkC,MAAM,QAAU,SAE1E,EAAO,qBAAqB,IAAM,GAClC,UAAS,eAAe,kCAAkC,MAAM,QAAU,SAE1E,EAAO,qBAAqB,IAAM,GAClC,UAAS,eAAe,qCAAqC,MAAM,QAAU,WAQ5E,GAAmB,CAAC,EAAU,KAAU,CACjD,EAAO,SAAW,GAAI,MACtB,EAAO,eAAiB,EACxB,EAAO,oBAAsB,EAC7B,EAAO,oBAAsB,EAC7B,EAAO,uBAAyB,EAChC,EAAO,gBAAkB,EACzB,EAAO,qBAAuB,EAC9B,EAAO,qBAAuB,EAC9B,EAAO,wBAA0B,EAE7B,GACA,GAAO,gBAAkB,EAAO,aAAe,KAA4B,KAC3E,EAAO,aAAe,IAIxB,GAAa,sBACb,GAAW,sBAEJ,GAAa,IAAM,CAC5B,GAAM,GAAQ,GAAI,MAAK,IACjB,EAAM,GAAI,MAAK,IACf,EAAM,GAAI,MAEhB,AAAG,EAAI,WAAa,EAAM,WAAa,EAAI,WAAa,EAAI,UACxD,GAAE,QAAa,GACf,SAAS,eAAe,gBAAgB,YAAc,gBAAkB,EACxE,SAAS,eAAe,cAAc,YAAc,uEAGpD,GAAE,QAAa,GACf,SAAS,eAAe,gBAAgB,YAAc,WACtD,SAAS,eAAe,cAAc,YAAc,KCp7CrD,GAAM,GAAc,IAAM,CAC7B,GAAM,GAAU,SAAS,uBAAuB,eAChD,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,IAChC,EAAQ,GAAG,MAAM,QAAU,EAAO,QAAQ,QAAU,QAAU,OAGlE,GAAM,GAAW,SAAS,uBAAuB,eACjD,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IACjC,EAAS,GAAG,MAAM,QAAU,EAAO,QAAQ,QAAU,QAAU,OAGnE,GAAM,GAAW,SAAS,uBAAuB,eACjD,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IACjC,EAAS,GAAG,MAAM,QAAU,EAAO,QAAQ,UAAY,QAAU,OAGrE,GAAM,GAAW,SAAS,uBAAuB,eACjD,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IACjC,EAAS,GAAG,MAAM,QAAU,EAAO,QAAQ,SAAW,QAAU,OAGpE,GAAM,GAAW,SAAS,uBAAuB,kBACjD,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAEjC,AAAI,AADW,EAAS,GAAG,cAChB,UAAU,SAAS,gBAC1B,EAAS,GAAG,MAAM,QAAU,EAAO,QAAQ,SAAW,OAAS,OAE/D,EAAS,GAAG,MAAM,QAAU,EAAO,QAAQ,SAAW,QAAU,OAGxE,GAAM,GAAW,SAAS,uBAAuB,oBACjD,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IACjC,EAAS,GAAG,MAAM,QAAU,EAAO,QAAQ,WAAa,QAAU,OAGtE,GAAM,GAAW,SAAS,uBAAuB,mBACjD,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAEjC,AAAI,AADW,EAAS,GAAG,cAChB,UAAU,SAAS,gBAC1B,EAAS,GAAG,MAAM,QAAU,EAAO,QAAQ,UAAY,OAAS,OAEhE,EAAS,GAAG,MAAM,QAAU,EAAO,QAAQ,UAAY,QAAU,OAGzE,GAAM,GAAW,SAAS,uBAAuB,uBACjD,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAEjC,AAAI,AADW,EAAS,GAAG,cAChB,UAAU,SAAS,gBAC1B,EAAS,GAAG,MAAM,QAAU,EAAO,QAAQ,YAAc,OAAS,OAElE,EAAS,GAAG,MAAM,QAAU,EAAO,QAAQ,YAAc,QAAU,OAG3E,GAAM,GAAW,SAAS,uBAAuB,QACjD,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IACjC,EAAS,GAAG,MAAM,QAAU,OAGhC,GAAM,GAAY,SAAS,uBAAuB,YAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,WAAW,MAAQ,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAGtG,GAAM,GAAY,SAAS,uBAAuB,YAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,WAAW,MAAQ,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAGtG,GAAM,GAAY,SAAS,uBAAuB,YAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,WAAW,MAAQ,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAGtG,GAAM,GAAY,SAAS,uBAAuB,YAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,WAAW,MAAQ,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAGtG,GAAM,GAAY,SAAS,uBAAuB,SAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,aAAa,OAAS,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAGzG,GAAM,GAAY,SAAS,uBAAuB,SAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,aAAa,OAAS,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAGzG,GAAM,GAAY,SAAS,uBAAuB,YAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,aAAa,OAAS,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAGzG,GAAM,GAAY,SAAS,uBAAuB,SAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAElC,AAAI,AADW,EAAU,GAAG,cACjB,UAAU,SAAS,gBAC1B,EAAU,GAAG,MAAM,QAAU,EAAO,aAAa,OAAS,EAAI,OAAS,OAEvE,EAAU,GAAG,MAAM,QAAU,EAAO,aAAa,OAAS,EAAI,QAAU,OAGhF,GAAM,GAAY,SAAS,uBAAuB,SAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,aAAa,OAAS,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAGzG,GAAM,GAAY,SAAS,uBAAuB,WAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,4BAA4B,GAAK,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAGpH,GAAM,GAAY,SAAS,uBAAuB,UAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,aAAa,OAAS,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAGzG,GAAM,GAAY,SAAS,uBAAuB,gBAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAElC,AAAI,AADW,EAAU,GAAG,cACjB,UAAU,SAAS,gBAC1B,EAAU,GAAG,MAAM,QAAU,EAAO,eAAiB,EAAI,OAAS,OAElE,EAAU,GAAG,MAAM,QAAU,EAAO,eAAiB,EAAI,QAAU,OAG3E,GAAM,GAAY,SAAS,uBAAuB,UAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,qBAAqB,IAAM,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAG9G,GAAM,GAAY,SAAS,uBAAuB,UAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,qBAAqB,IAAM,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAG9G,GAAM,GAAY,SAAS,uBAAuB,UAClD,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,EAAO,qBAAqB,IAAM,EAAI,EAAU,GAAG,MAAM,QAAU,QAAU,EAAU,GAAG,MAAM,QAAU,OAG9G,GAAM,IAAY,SAAS,uBAAuB,UAClD,OAAS,GAAI,EAAG,EAAI,GAAU,OAAQ,IAClC,EAAO,qBAAqB,IAAM,EAAI,GAAU,GAAG,MAAM,QAAU,QAAU,GAAU,GAAG,MAAM,QAAU,OAG9G,GAAM,IAAY,SAAS,uBAAuB,kBAClD,OAAS,GAAI,EAAG,EAAI,GAAU,OAAQ,IAClC,GAAU,GAAG,MAAM,QAAU,EAAO,eAAiB,EAAI,eAAiB,OAG9E,GAAM,IAAY,SAAS,uBAAuB,oBAClD,OAAS,GAAI,EAAG,EAAI,GAAU,OAAQ,IAClC,GAAU,GAAG,MAAM,QAAU,CAAC,EAAO,QAAQ,SAAW,EAAI,eAAiB,OAGjF,GAAM,IAAY,SAAS,uBAAuB,eAClD,OAAS,GAAI,EAAG,EAAI,GAAU,OAAQ,IAClC,GAAU,GAAG,MAAM,QAAU,EAAO,WAAW,KAAO,EAAI,QAAU,OAGxE,GAAM,IAAY,SAAS,uBAAuB,iBAClD,OAAS,GAAI,EAAG,EAAI,GAAU,OAAQ,IAClC,GAAU,GAAG,MAAM,QAAU,EAAO,aAAa,IAAM,EAAI,OAAS,OAGxE,GAAM,IAAY,SAAS,uBAAuB,iBAClD,OAAS,GAAI,EAAG,EAAI,GAAU,OAAQ,IAClC,GAAU,GAAG,MAAM,QAAU,EAAO,aAAa,IAAM,EAAI,QAAU,OAGzE,GAAM,IAAY,SAAS,uBAAuB,iBAClD,OAAW,KAAM,OAAM,KAAK,IACxB,EAAG,MAAM,QAAU,EAAO,aAAa,OAAS,EAAI,QAAU,OAGlE,GAAM,IAAY,SAAS,uBAAuB,cAClD,OAAW,KAAM,OAAM,KAAK,IACxB,EAAG,MAAM,QAAU,EAAO,qBAAuB,KAAO,QAAU,OAGtE,GAAM,IAAQ,SAAS,eAAe,wBACtC,GAAM,MAAM,QAAW,EAAO,aAAa,KAAO,EAAK,QAAU,OAEjE,AAAI,EAAO,SAAS,MAAQ,EACxB,UAAS,eAAe,uBAAuB,MAAM,QAAU,QAC/D,SAAS,eAAe,mBAAmB,MAAM,QAAU,QAC3D,SAAS,eAAe,iBAAiB,MAAM,QAAU,SAEzD,UAAS,eAAe,uBAAuB,MAAM,QAAU,OAC/D,SAAS,eAAe,mBAAmB,MAAM,QAAU,OAC3D,SAAS,eAAe,iBAAiB,MAAM,QAAU,QAG9D,EAAO,aAAa,MAAQ,EACtB,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QACvH,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QAE5H,AAAI,EAAO,aAAa,MAAQ,EAC5B,UAAS,eAAe,sBAAsB,MAAM,QAAU,QAC9D,SAAS,eAAe,kBAAkB,MAAM,QAAU,QAC1D,SAAS,eAAe,gBAAgB,MAAM,QAAU,SAExD,UAAS,eAAe,sBAAsB,MAAM,QAAU,OAC9D,SAAS,eAAe,kBAAkB,MAAM,QAAU,OAC1D,SAAS,eAAe,gBAAgB,MAAM,QAAU,QAG5D,EAAO,aAAa,MAAQ,EAC3B,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QACvH,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QAExH,EAAO,aAAa,OAAS,EAC5B,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QACvH,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QAExH,EAAO,aAAa,OAAS,EACzB,SAAS,eAAe,iBAAiB,MAAM,QAAU,OACzD,SAAS,eAAe,iBAAiB,MAAM,QAAU,OAE7D,EAAO,aAAa,OAAS,EACzB,SAAS,eAAe,iBAAiB,MAAM,QAAU,OACzD,SAAS,eAAe,iBAAiB,MAAM,QAAU,OAE7D,EAAO,aAAa,OAAS,EACzB,SAAS,eAAe,iBAAiB,MAAM,QAAU,OACzD,SAAS,eAAe,iBAAiB,MAAM,QAAU,OAE7D,EAAO,aAAa,OAAS,EACxB,UAAS,eAAe,qBAAqB,MAAM,QAAU,QAAS,SAAS,eAAe,qBAAqB,MAAM,QAAU,SACnI,UAAS,eAAe,qBAAqB,MAAM,QAAU,OAAQ,SAAS,eAAe,qBAAqB,MAAM,QAAU,QAEvI,EAAO,aAAa,OAAS,EACzB,SAAS,eAAe,iBAAiB,MAAM,QAAU,OACzD,SAAS,eAAe,iBAAiB,MAAM,QAAU,OAE7D,EAAO,aAAa,OAAS,EACzB,SAAS,eAAe,iBAAiB,MAAM,QAAU,OACzD,SAAS,eAAe,iBAAiB,MAAM,QAAU,OAE7D,EAAO,aAAa,OAAS,EACzB,SAAS,eAAe,iBAAiB,MAAM,QAAU,QACzD,SAAS,eAAe,iBAAiB,MAAM,QAAU,OAE7D,EAAO,WAAW,IAAM,EACpB,SAAS,eAAe,4BAA4B,MAAM,QAAU,QACpE,SAAS,eAAe,4BAA4B,MAAM,QAAU,OAExE,EAAO,WAAW,IAAM,EACpB,SAAS,eAAe,2BAA2B,MAAM,QAAU,QACnE,SAAS,eAAe,2BAA2B,MAAM,QAAU,OAEvE,EAAO,WAAW,IAAM,EACpB,SAAS,eAAe,yBAAyB,MAAM,QAAU,QACjE,SAAS,eAAe,yBAAyB,MAAM,QAAU,OAErE,EAAO,WAAW,IAAM,EACvB,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QACvH,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QAExH,EAAO,WAAW,KAAO,EACpB,UAAS,eAAe,uBAAuB,MAAM,QAAU,QAAS,SAAS,eAAe,oBAAoB,MAAM,QAAU,SACpI,UAAS,eAAe,uBAAuB,MAAM,QAAU,OAAQ,SAAS,eAAe,oBAAoB,MAAM,QAAU,QAExI,EAAO,WAAW,KAAO,EACrB,SAAS,eAAe,qBAAqB,MAAM,QAAU,QAC7D,SAAS,eAAe,qBAAqB,MAAM,QAAU,OAEjE,EAAO,WAAW,KAAO,EACrB,SAAS,eAAe,qBAAqB,MAAM,QAAU,QAC7D,SAAS,eAAe,qBAAqB,MAAM,QAAU,OAEjE,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,AAAC,EAAO,WAAW,KAAO,EACtB,SAAS,eAAe,sBAAwB,GAAG,MAAM,QAAU,QACnE,SAAS,eAAe,sBAAwB,GAAG,MAAM,QAAU,OAE3E,EAAO,WAAW,KAAO,EACrB,SAAS,eAAe,0BAA0B,MAAM,QAAU,QAClE,SAAS,eAAe,0BAA0B,MAAM,QAAU,OACtE,EAAO,WAAW,KAAO,EACrB,SAAS,eAAe,mBAAmB,MAAM,QAAU,QAC3D,SAAS,eAAe,mBAAmB,MAAM,QAAU,OAC/D,EAAO,WAAW,KAAO,EACrB,SAAS,eAAe,uBAAuB,MAAM,QAAU,QAC/D,SAAS,eAAe,uBAAuB,MAAM,QAAU,OAClE,EAAO,YAAY,GAAG,GAAK,GAAK,EAAO,eAAiB,EACrD,SAAS,eAAe,iBAAiB,MAAM,QAAU,OACzD,SAAS,eAAe,iBAAiB,MAAM,QAAU,OAE7D,EAAO,aAAa,aAAe,EAC/B,SAAS,eAAe,uBAAuB,MAAM,QAAU,QAC/D,SAAS,eAAe,uBAAuB,MAAM,QAAU,OAEnE,EAAO,aAAa,cAAgB,EAChC,SAAS,eAAe,sBAAsB,MAAM,QAAU,QAC9D,SAAS,eAAe,sBAAsB,MAAM,QAAU,OAElE,EAAO,aAAa,aAAe,EAC/B,SAAS,eAAe,iBAAiB,MAAM,QAAU,OACzD,SAAS,eAAe,iBAAiB,MAAM,QAAU,OAE7D,EAAO,aAAa,GAAK,EACrB,SAAS,eAAe,0BAA0B,MAAM,QAAU,QAClE,SAAS,eAAe,0BAA0B,MAAM,QAAU,OAEtE,EAAO,aAAa,eACf,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QACvH,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QAE5H,EAAO,iBAAiB,IAAM,EACzB,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QACvH,UAAS,eAAe,aAAa,MAAM,QAAU,OAAQ,SAAS,eAAe,kBAAkB,MAAM,QAAU,QAE5H,SAAS,eAAe,kBAAkB,MAAM,WAAa,EAAO,aAAa,KAAO,EAAI,UAAY,SACxG,SAAS,eAAe,iBAAiB,MAAM,QAAU,EAAO,qBAAqB,IAAM,EAAI,GAAK,OACpG,SAAS,eAAe,oBAAoB,MAAM,QAAU,EAAO,qBAAqB,IAAM,EAAI,GAAK,OACvG,SAAS,eAAe,qBAAqB,MAAM,QAAU,EAAO,aAAa,KAAO,EAAI,GAAK,OAQjG,GAAM,IAA6C,CAC/C,QAAW,EAAO,SAAS,MAAQ,EACnC,QAAW,EAAO,SAAS,MAAQ,EACnC,QAAW,EAAO,SAAS,MAAQ,EACnC,QAAW,EAAO,SAAS,MAAQ,EACnC,QAAW,EAAO,SAAS,MAAQ,EACnC,QAAW,EAAO,SAAS,MAAQ,EACnC,QAAW,EAAO,SAAS,MAAQ,EACnC,QAAW,EAAO,SAAS,MAAQ,EACnC,SAAY,EAAO,aAAa,MAAQ,EACxC,SAAY,EAAO,aAAa,MAAQ,EACxC,SAAY,EAAO,aAAa,MAAQ,EACxC,SAAY,EAAO,aAAa,MAAQ,EACxC,SAAY,EAAO,aAAa,OAAS,EACzC,SAAY,EAAO,aAAa,MAAQ,EACxC,SAAY,EAAO,SAAS,MAAQ,EACpC,SAAY,EAAO,SAAS,MAAQ,EACpC,SAAY,EAAO,SAAS,MAAQ,EACpC,SAAY,EAAO,SAAS,MAAQ,EACpC,SAAY,EAAO,SAAS,MAAQ,EACpC,SAAY,EAAO,SAAS,MAAQ,EACpC,SAAY,EAAO,aAAa,KAAO,EACvC,SAAY,EAAO,aAAa,KAAO,EACvC,SAAY,EAAO,aAAa,KAAO,EACvC,SAAY,EAAO,aAAa,KAAO,EACvC,SAAY,EAAO,aAAa,KAAO,EACvC,SAAY,EAAO,WAAW,MAAQ,EACtC,gBAAmB,EAAO,SAAS,MAAQ,EAC3C,oBAAuB,EAAO,SAAS,MAAQ,EAC/C,qBAAwB,EAAO,SAAS,MAAQ,EAChD,sBAAyB,EAAO,SAAS,MAAQ,EACjD,QAAW,EAAO,QAAQ,SAC1B,SAAY,EAAO,cAAgB,IAAO,EAAO,mBAAqB,GACtE,SAAY,EAAO,eAAiB,IAAO,EAAO,mBAAqB,GACvE,SAAY,EAAO,mBAAqB,GACxC,SAAY,EAAO,eAAiB,EACpC,SAAY,EAAO,aAAa,KAAO,GAG3C,OAAO,KAAK,IAAmB,QAAQ,GAAO,CAC1C,GAAM,IAAK,SAAS,eAAe,GACnC,GAAI,CAAC,GAAI,CACL,QAAQ,MAAM,qDAAqD,OACnE,OAGJ,GAAG,MAAM,QAAU,GAAkB,GAAO,QAAU,UAIjD,GAAY,IAAM,CAE3B,SAAS,eAAe,aAAa,MAAM,QAAU,OACrD,SAAS,eAAe,gBAAgB,MAAM,gBAAkB,GAChE,SAAS,eAAe,YAAY,MAAM,QAAU,OACpD,SAAS,eAAe,eAAe,MAAM,gBAAkB,GAC/D,SAAS,eAAe,YAAY,MAAM,QAAU,OAEpD,SAAS,eAAe,cAAc,MAAM,QAAU,OACtD,SAAS,eAAe,mBAAmB,MAAM,gBAAkB,GACnE,SAAS,eAAe,mBAAmB,MAAM,MAAQ,QACzD,SAAS,eAAe,SAAS,MAAM,QAAU,OACjD,SAAS,eAAe,YAAY,MAAM,gBAAkB,GAC5D,SAAS,eAAe,cAAc,MAAM,QAAU,OACtD,SAAS,eAAe,gBAAgB,MAAM,gBAAkB,GAChE,SAAS,eAAe,YAAY,MAAM,QAAU,OACpD,SAAS,eAAe,eAAe,MAAM,gBAAkB,GAC/D,SAAS,eAAe,QAAQ,MAAM,QAAU,OAChD,SAAS,eAAe,WAAW,MAAM,gBAAkB,GAC3D,SAAS,eAAe,QAAQ,MAAM,QAAU,OAChD,SAAS,eAAe,UAAU,MAAM,gBAAkB,GAC1D,SAAS,eAAe,WAAW,MAAM,gBAAkB,GAC3D,SAAS,eAAe,aAAa,MAAM,gBAAkB,GAC7D,SAAS,eAAe,SAAS,MAAM,QAAU,OACjD,SAAS,eAAe,UAAU,MAAM,QAAU,OAElD,GAAM,GAAM,SAAS,eAAe,eAapC,GAZA,EAAI,MAAM,gBAAkB,GAC5B,EAAI,MAAM,OAAS,kBAEf,EAAE,aAAkB,aACpB,UAAS,eAAe,gBAAgB,MAAM,gBAAkB,SAChE,SAAS,eAAe,aAAa,MAAM,QAAU,SAErD,EAAE,aAAkB,YACpB,UAAS,eAAe,YAAY,MAAM,QAAU,QACpD,SAAS,eAAe,eAAe,MAAM,gBAAkB,SAC/D,SAAS,eAAe,sBAAsB,YAAc,0CAE5D,EAAE,aAAkB,WAAY,CAChC,SAAS,eAAe,YAAY,MAAM,QAAU,QACpD,GAAM,GAAM,SAAS,eAAe,eACpC,EAAI,MAAM,gBAAkB,SAC5B,EAAI,MAAM,OAAS,iBAEvB,AAAI,EAAE,aAAkB,gBACpB,UAAS,eAAe,cAAc,MAAM,QAAU,QACtD,SAAS,eAAe,mBAAmB,MAAM,gBAAkB,QACnE,SAAS,eAAe,mBAAmB,MAAM,MAAQ,QACzD,SAAS,eAAe,uBAAuB,YAAc,uBAAyB,EAAO,kBAAoB,IAAM,GAAyB,KAAQ,KAAM,EAAO,kBAAoB,IAAwB,YAAY,GAAK,MAElO,EAAE,aAAkB,SACpB,UAAS,eAAe,SAAS,MAAM,QAAU,QACjD,SAAS,eAAe,YAAY,MAAM,gBAAkB,OAC5D,SAAS,eAAe,mBAAmB,YAAc,yGACzD,SAAS,eAAe,qBAAqB,YAAc,gEAAmE,KAAM,EAAE,mBAAwB,KAAK,YAAY,GAAK,IACpL,GAAuB,EAAG,IAC1B,GAAuB,EAAG,IAC1B,GAAuB,EAAG,IAC1B,GAAuB,EAAG,IAC1B,GAAuB,EAAG,IAC1B,GAAuB,EAAG,IAC1B,GAAuB,EAAG,KAE1B,EAAE,aAAkB,cACpB,UAAS,eAAe,cAAc,MAAM,QAAU,QACtD,SAAS,eAAe,gBAAgB,MAAM,gBAAkB,UAEhE,EAAE,aAAkB,cACpB,UAAS,eAAe,YAAY,MAAM,QAAU,QACpD,SAAS,eAAe,eAAe,MAAM,gBAAkB,SAE/D,EAAE,aAAkB,QACpB,UAAS,eAAe,QAAQ,MAAM,QAAU,QAChD,SAAS,eAAe,WAAW,MAAM,gBAAkB,aAE3D,EAAE,aAAkB,QACpB,UAAS,eAAe,QAAQ,MAAM,QAAU,QAChD,SAAS,eAAe,UAAU,MAAM,gBAAkB,SAE1D,EAAE,aAAkB,SACpB,UAAS,eAAe,SAAS,MAAM,QAAU,QACjD,SAAS,eAAe,WAAW,MAAM,gBAAkB,SAE3D,EAAE,aAAkB,UACpB,UAAS,eAAe,UAAU,MAAM,QAAU,OAClD,SAAS,eAAe,aAAa,MAAM,gBAAkB,UAI/D,GAAwC,CAC1C,UAAW,GACX,SAAU,GACV,aAAc,GACd,MAAO,GACP,WAAY,GACZ,SAAU,GACV,SAAU,GACV,KAAM,GACN,KAAM,GACN,MAAO,GACP,OAAQ,IAGC,GAAc,IAAM,CAzejC,MA2eI,SAAS,eAAe,eAAe,YAAc,EAAO,EAAO,OACnE,SAAS,eAAe,mBAAmB,YAAc,EAAO,EAAO,YACvE,SAAS,eAAe,kBAAkB,YAAc,EAAO,EAAO,gBACtE,SAAS,eAAe,iBAAiB,YAAc,EAAO,EAAO,iBACrE,SAAS,eAAe,sBAAsB,YAAc,EAAO,EAAO,iBAC1E,SAAS,eAAe,oBAAoB,YAAc,EAAO,EAAO,qBACxE,SAAS,eAAe,gBAAgB,YAAc,EAAO,EAAO,QACpE,SAAS,eAAe,oBAAoB,YAAc,EAAO,EAAO,gBAExE,KAEA,MAAU,EAAE,cAAZ,kBAGS,GAAoB,IAAM,CA6BnC,GA5BC,EAAO,QAAQ,KAAO,EAAO,aAAa,MAAQ,EAC/C,SAAS,eAAe,eAAe,MAAM,gBAAkB,QAC/D,SAAS,eAAe,eAAe,MAAM,gBAAkB,UAElE,EAAO,QAAQ,KAAO,EAAO,SAAS,IAAM,IAAQ,EAAO,iBAAiB,eAAiB,EAC1F,SAAS,eAAe,gBAAgB,MAAM,gBAAkB,QAChE,SAAS,eAAe,gBAAgB,MAAM,gBAAkB,UAEnE,EAAO,QAAQ,KAAO,EAAO,WAAW,IAAM,IAAQ,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,EAC3I,SAAS,eAAe,kBAAkB,MAAM,gBAAkB,QAClE,SAAS,eAAe,kBAAkB,MAAM,gBAAkB,UAErE,EAAO,QAAQ,IAAM,EAAO,SAAS,IAAM,GACxC,SAAS,eAAe,uBAAuB,MAAM,gBAAkB,QACvE,SAAS,eAAe,uBAAuB,MAAM,gBAAkB,UAE1E,EAAO,iBAAiB,eAAiB,EACtC,SAAS,eAAe,gBAAgB,MAAM,gBAAkB,UAChE,SAAS,eAAe,gBAAgB,MAAM,gBAAkB,SAEnE,EAAO,iBAAiB,gBAAkB,EACvC,SAAS,eAAe,2BAA2B,MAAM,gBAAkB,UAC3E,SAAS,eAAe,2BAA2B,MAAM,gBAAkB,SAE9E,EAAO,iBAAiB,YAAc,EACnC,SAAS,eAAe,sBAAsB,MAAM,gBAAkB,UACtE,SAAS,eAAe,sBAAsB,MAAM,gBAAkB,SAEtE,EAAE,aAAkB,aAAe,EAAE,iBAAsB,OAAQ,CACnE,GAAM,GAAI,SAAS,eAAe,YAC5B,EAAI,SAAS,eAAe,YAC5B,EAAI,SAAS,eAAe,YAC5B,EAAI,SAAS,eAAe,YAC5B,EAAI,SAAS,eAAe,YAC5B,EAAI,SAAS,eAAe,kBAC5B,EAAI,SAAS,eAAe,iBAC5B,EAAI,SAAS,eAAe,uBAClC,AAAE,EAAC,EAAO,QAAQ,IAAM,EAAO,SAAS,MAAQ,IAAM,EAAO,MAAM,IAAI,EAAO,eACxE,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,IAAM,EAAO,SAAS,MAAQ,IAAM,EAAO,MAAM,IAAI,EAAO,gBACxE,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,IAAM,EAAO,SAAS,MAAQ,IAAM,EAAO,MAAM,IAAI,EAAO,eACxE,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,IAAM,EAAO,SAAS,MAAQ,IAAM,EAAO,MAAM,IAAI,EAAO,gBACxE,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,IAAM,EAAO,SAAS,MAAQ,IAAM,EAAO,MAAM,IAAI,EAAO,eACxE,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,IAAM,EAAO,SAAS,MAAQ,IAAM,EAAO,MAAM,IAAI,EAAO,iBACxE,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,IAAM,EAAO,SAAS,MAAQ,IAAM,EAAO,MAAM,IAAI,EAAO,gBACxE,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,IAAM,EAAO,SAAS,MAAQ,IAAM,EAAO,eAAe,IAAI,EAAO,sBACjF,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCAG7B,GAAI,EAAE,aAAkB,aAAe,EAAE,iBAAsB,UAAW,CACtE,GAAM,GAAI,SAAS,eAAe,eAC5B,EAAI,SAAS,eAAe,eAC5B,EAAI,SAAS,eAAe,eAC5B,EAAI,SAAS,eAAe,eAC5B,EAAI,SAAS,eAAe,eAC5B,EAAI,SAAS,eAAe,sBAC5B,EAAI,SAAS,eAAe,sBAC5B,EAAI,SAAS,eAAe,sBAC5B,EAAI,SAAS,eAAe,sBAC5B,EAAI,SAAS,eAAe,sBAClC,AAAE,EAAC,EAAO,QAAQ,KAAO,EAAO,aAAa,MAAQ,IAAM,EAAO,eAAe,IAAI,EAAO,mBACtF,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,KAAO,EAAO,aAAa,MAAQ,IAAM,EAAO,eAAe,IAAI,EAAO,oBACtF,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,KAAO,EAAO,aAAa,MAAQ,IAAM,EAAO,eAAe,IAAI,EAAO,mBACtF,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,KAAO,EAAO,aAAa,MAAQ,IAAM,EAAO,eAAe,IAAI,EAAO,oBACtF,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACvB,EAAC,EAAO,QAAQ,KAAO,EAAO,aAAa,OAAS,IAAM,EAAO,eAAe,IAAI,EAAO,mBACvF,EAAE,UAAU,IAAI,gCAChB,EAAE,UAAU,OAAO,gCACzB,GAAI,GAAI,EACR,GAAK,KAAK,MAAM,EAAE,WAAgB,GAAK,EAAE,oBAAyB,IAAM,IACpE,EAAO,SAAS,MAAQ,GAAK,EAAO,iBAAiB,gBAAkB,GACvE,IAAK,IAGR,EAAO,aAAa,IAAM,GAAK,EAAO,eAAe,IAAI,EAAQ,IAAI,GAAK,EAAE,oBAAuB,GAAK,EAAE,4BAA+B,GAAK,KAAK,MAAM,KAAK,IAAI,EAAO,gBAAgB,GAAK,GAAM,EAAG,GAAK,KAAS,EAAE,MAAM,gBAAkB,SAAW,EAAE,MAAM,gBAAkB,UACpR,EAAO,aAAa,IAAM,GAAK,EAAO,eAAe,IAAI,EAAQ,IAAI,GAAK,EAAE,oBAAuB,GAAK,EAAE,4BAA+B,GAAK,KAAK,MAAM,KAAK,IAAI,EAAO,gBAAgB,GAAK,GAAM,EAAG,GAAK,KAAS,EAAE,MAAM,gBAAkB,SAAW,EAAE,MAAM,gBAAkB,UACpR,EAAO,aAAa,IAAM,GAAK,EAAO,eAAe,IAAI,EAAQ,IAAI,GAAK,EAAE,oBAAuB,GAAK,EAAE,4BAA+B,GAAK,KAAK,MAAM,KAAK,IAAI,EAAO,gBAAgB,GAAK,GAAM,EAAG,GAAK,KAAS,EAAE,MAAM,gBAAkB,SAAW,EAAE,MAAM,gBAAkB,UACpR,EAAO,aAAa,KAAO,GAAK,EAAO,eAAe,IAAI,EAAQ,IAAI,GAAK,EAAE,oBAAuB,GAAK,EAAE,4BAA+B,GAAK,KAAK,MAAM,KAAK,IAAI,EAAO,gBAAgB,GAAK,GAAM,EAAG,GAAK,KAAS,EAAE,MAAM,gBAAkB,SAAW,EAAE,MAAM,gBAAkB,UACrR,EAAO,aAAa,KAAO,GAAK,EAAO,eAAe,IAAI,EAAQ,IAAI,GAAK,EAAE,oBAAuB,GAAK,EAAE,4BAA+B,GAAK,KAAK,MAAM,KAAK,IAAI,EAAO,gBAAgB,GAAK,GAAM,EAAG,GAAK,KAAS,EAAE,MAAM,gBAAkB,SAAW,EAAE,MAAM,gBAAkB,UAG1R,GAAI,EAAE,aAAkB,QAAS,CAC7B,GAAI,EAAE,aAAkB,QACpB,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,EAAO,WAAa,GACd,SAAS,eAAe,eAAe,KAAK,UAAU,IAAI,uBAC1D,SAAS,eAAe,eAAe,KAAK,UAAU,OAAO,uBAG3E,GAAI,EAAE,aAAkB,YAAa,CACjC,GAAM,GAAI,SAAS,eAAe,oBAC5B,EAAI,SAAS,eAAe,oBAC5B,EAAI,SAAS,eAAe,oBAC5B,EAAI,SAAS,eAAe,oBAC5B,EAAI,SAAS,eAAe,oBAC5B,EAAI,SAAS,eAAe,oBAC5B,EAAI,SAAS,eAAe,oBAC5B,EAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/B,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAC5B,AAAC,EAAO,eAAiB,EAAE,+BAAkC,IAAM,EAAO,WAAa,EAAE,8BAAiC,GACpH,EAAI,GAAG,UAAU,IAAI,wBACrB,EAAI,GAAG,UAAU,OAAO,yBAK1C,GAAI,EAAE,aAAkB,aAAe,EAAE,iBAAsB,SAC3D,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAS,EAAO,QAAQ,EAAI,IAC5B,EAAS,EAAO,GAAG,EAAE,SAAY,EAAI,gBAC3C,AAAC,EAAC,GAAU,CAAC,EAAO,SAAS,GAAK,KAAO,EAAO,gBAAgB,IAAI,GAC9D,SAAS,eAAe,YAAY,KAAK,UAAU,IAAI,gCACvD,SAAS,eAAe,YAAY,KAAK,UAAU,OAAO,gCAIxE,GAAI,EAAE,aAAkB,aAAe,EAAE,iBAAsB,WAC3D,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAgB,EAAO,GAAG,EAAE,SAAY,EAAI,mBAClD,EAAO,oBAAoB,IAAI,GACzB,SAAS,eAAe,eAAe,KAAK,UAAU,IAAI,gCAC1D,SAAS,eAAe,eAAe,KAAK,UAAU,OAAO,gCAI3E,GAAI,EAAE,aAAkB,aAAe,EAAE,iBAAsB,YAAa,CACxE,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAiB,EAAO,iBAAiB,KAA2B,KAC1E,OAAO,EAAO,gBAAkB,EAC1B,SAAS,eAAe,gBAAgB,KAAK,UAAU,IAAI,gCAC3D,SAAS,eAAe,gBAAgB,KAAK,UAAU,OAAO,gCAExE,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,AAAC,EAAO,aAAa,IAAI,EAAQ,IAAI,GAAI,EAAO,iBAAiB,IAAI,MAAM,EAAE,kBAAqB,KAC5F,SAAS,eAAe,qBAAqB,KAAK,UAAU,IAAI,yBAChE,SAAS,eAAe,qBAAqB,KAAK,UAAU,OAAO,yBAE7E,OAAS,GAAI,EAAG,GAAK,GAAI,IACrB,AAAI,EAAO,iBAAiB,IAAM,EAC9B,UAAS,eAAe,qBAAqB,KAAK,UAAU,IAAI,sBAChE,SAAS,eAAe,qBAAqB,KAAK,UAAU,OAAO,gCAChE,AAAI,EAAO,aAAa,IAAI,EAAQ,IAAI,GAAI,EAAO,iBAAiB,IAAI,MAAM,EAAE,kBAAqB,KACxG,SAAS,eAAe,qBAAqB,KAAK,UAAU,IAAI,+BAEhE,UAAS,eAAe,qBAAqB,KAAK,UAAU,OAAO,+BACnE,SAAS,eAAe,qBAAqB,KAAK,UAAU,OAAO,uBAK/E,GAAI,EAAE,aAAkB,OAAQ,CAC5B,AAAC,EAAO,oBAAoB,IAAI,EAAO,eAAkB,SAAS,eAAe,YAAY,UAAU,IAAI,uBAAyB,SAAS,eAAe,YAAY,UAAU,OAAO,uBACzL,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAW,EAAO,GAAG,EAAE,SAAa,EAAI,cAC9C,EAAO,UAAU,IAAI,GACf,SAAS,eAAe,UAAU,KAAK,UAAU,IAAI,uBACrD,SAAS,eAAe,UAAU,KAAK,UAAU,OAAO,uBAElE,OAAS,GAAI,EAAG,GAAK,GAAI,IACrB,EAAO,UAAU,IAAI,EAAQ,IAAI,EAAE,wBAA2B,EAAE,GAAI,EAAO,YAAY,EAAE,GAAK,EAAE,qBAAwB,EAAO,gBAAgB,MAAM,MAAM,EAAE,mBAAsB,EAAE,KAC/K,SAAS,eAAe,aAAa,KAAK,UAAU,IAAI,0BACxD,SAAS,eAAe,aAAa,KAAK,UAAU,OAAO,4BAKhE,GAAyB,IAAM,CAExC,OAAS,GAAI,EAAG,GAAK,GAAI,IAAK,CAC1B,GAAM,GAAK,SAAS,eAAe,YAAY,KAC/C,EAAG,UAAU,OAAO,mBAChB,EAAO,iBAAiB,eAAiB,GACzC,EAAG,UAAU,IAAI,mBAEjB,EAAO,iBAAiB,gBAAkB,GAC1C,EAAG,UAAU,IAAI,mBAEjB,EAAO,iBAAiB,YAAc,GACtC,EAAG,UAAU,IAAI,mBAIzB,AAAI,EAAO,gBACP,SAAS,eAAe,kBAAkB,YAAc,uBAExD,SAAS,eAAe,kBAAkB,YAAc,wBAE5D,OAAS,GAAI,EAAG,GAAK,GAAI,IACrB,GAAqB,IAIhB,GAAuB,AAAC,GAAc,CAC/C,GAAM,GAAK,SAAS,eAAe,YAAc,EAAI,SAC/C,EAAgB,GAAiB,GAEvC,EAAG,YAAc,GAAG,EAAO,qBAAqB,QAAQ,KAG/C,GAAsB,IAAM,CAErC,OAAS,GAAI,EAAG,GAAK,IAAK,IACtB,SAAS,eAAe,MAAQ,GAAG,MAAM,gBAAkB,QAE/D,GAAM,GAAc,SAAS,uBAAuB,aAC9C,EAAc,SAAS,uBAAuB,UACpD,OAAS,GAAI,EAAG,EAAI,EAAY,OAAQ,IACpC,EAAY,GAAG,MAAM,gBAAkB,SAE3C,OAAS,GAAI,EAAG,EAAI,EAAY,OAAQ,IACpC,EAAY,GAAG,MAAM,gBAAkB,SAE3C,OAAS,GAAI,EAAG,EAAI,EAAO,aAAa,OAAQ,IAC5C,AAAI,EAAO,aAAa,GAAK,IAAO,EAAO,aAAa,KAAO,QAC3D,EAAiB,IAKhB,GAAY,IAAM,CAC3B,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAI,SAAS,eAAe,aAAe,GAC3C,EAAI,SAAS,eAAe,aAAgB,GAAI,IAChD,EAAI,SAAS,eAAe,aAAe,GAC3C,EAAI,SAAS,eAAe,gBAAkB,GAC9C,EAAI,SAAS,eAAe,sBAAwB,GAE1D,EAAE,MAAM,IAAO,EAAI,GAAK,EAAK,KAC7B,EAAE,MAAM,IAAO,EAAI,GAAK,EAAK,KAC7B,EAAE,MAAM,IAAO,GAAK,GAAK,EAAK,KAC9B,EAAE,MAAM,IAAO,GAAK,GAAK,EAAK,KAC9B,EAAE,MAAM,IAAO,GAAK,GAAK,EAAK,KAE9B,EAAE,MAAM,KAAO,MACf,EAAE,MAAM,KAAO,QACf,EAAE,MAAM,KAAO,MAGnB,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAI,SAAS,eAAe,mBAAqB,GACvD,EAAE,MAAM,IAAO,GAAK,GAAK,EAAK,KAC9B,EAAE,MAAM,KAAO,OAIV,GAA8B,IAAM,CAC7C,AAAI,EAAO,oBACP,UAAS,eAAe,mBAAmB,MAAM,QAAU,QAC3D,SAAS,eAAe,sBAAsB,MAAM,QAAU,OAC9D,SAAS,eAAe,gBAAgB,MAAM,YAAc,aAC5D,SAAS,eAAe,mBAAmB,MAAM,YAAc,SAE/D,UAAS,eAAe,mBAAmB,MAAM,QAAU,OAC3D,SAAS,eAAe,sBAAsB,MAAM,QAAU,QAC9D,SAAS,eAAe,gBAAgB,MAAM,YAAc,QAC5D,SAAS,eAAe,mBAAmB,MAAM,YAAc,eAIjE,GAAuB,IAAM,CAC/B,GAAM,GAAI,EAAO,iBACX,CAAC,EAAO,EAAM,EAAO,EAAU,GAAa,KAAsB,OAAO,GACzE,EAAkC,CACpC,OAAU,GAAgB,EAAO,kBACjC,SAAY,EAAO,EAAS,GAAO,eAAe,GAAK,EAAI,EAAI,GAAI,GACnE,QAAW,EAAO,EAAQ,GAAO,eAAe,GAAK,EAAI,EAAI,GAAI,GACjE,SAAY,EAAO,EAAS,GAAO,eAAe,GAAK,EAAI,EAAI,GAAI,GACnE,YAAe,EAAO,EAAY,GAAO,eAAe,GAAK,EAAI,EAAI,GAAI,GACzE,aAAgB,EAAO,EAAa,GAAO,eAAe,GAAK,EAAI,EAAI,GAAI,GAC3E,OAAU,EAAO,qBAAqB,IAAM,GAC5C,aAAgB,GAAG,EAAO,IAA6B,MACvD,sBAAyB,GAAG,EAAO,KAAkC,OAEzE,OAAW,KAAO,GACd,SAAS,eAAe,GAAK,YAAc,EAAQ,IAIrD,GAAuC,CACzC,UAAW,SACX,SAAU,SACV,aAAc,QACd,MAAO,OACP,WAAY,OACZ,WAAY,QACZ,KAAM,QACN,MAAO,SACP,OAAQ,SACR,SAAU,QACV,KAAM,aAGG,GAAiB,IAAM,CAnzBpC,MAozBI,GAAM,GAAM,SAAS,eAAe,aAC9B,EAAQ,MAAU,EAAE,cAAZ,OAA8B,SAE5C,EAAI,MAAM,gBAAkB,GAG1B,GAAY,CAAC,EAAc,IAAiC,CAC9D,GAAM,GAAO,SAAS,eAAe,mBAC/B,EAAW,SAAS,eAAe,kBACnC,EAAQ,SAAS,cAA2B,YAC5C,EAAU,SAAS,cAA2B,kBAC9C,EAAK,EAAM,cAA2B,eACtC,EAAS,EAAM,cAA2B,mBAEhD,EAAK,MAAM,QAAU,QACrB,EAAS,MAAM,QAAU,QACzB,EAAQ,MAAM,QAAU,QACxB,EAAM,cAAc,KAAK,YAAc,EACvC,EAAM,QAEN,GAAM,GAAW,AAAC,GAAkB,CAChC,GAAM,CAAE,MAAO,EAAE,OACjB,EAAG,oBAAoB,QAAS,GAChC,EAAO,oBAAoB,QAAS,GAEpC,EAAK,MAAM,QAAU,OACrB,EAAS,MAAM,QAAU,OACzB,EAAQ,MAAM,QAAU,OAExB,AAAI,IAAO,EAAG,GAAI,EAAG,IAChB,EAAG,KAGZ,EAAG,iBAAiB,QAAS,GAC7B,EAAO,iBAAiB,QAAS,IAG/B,GAAU,CAAC,EAAc,IAAmC,CAC9D,GAAM,GAAO,SAAS,eAAe,mBAC/B,EAAY,SAAS,eAAe,gBACpC,EAAU,SAAS,cAA2B,kBAC9C,EAAQ,SAAS,cAA2B,UAC5C,EAAK,EAAM,cAA2B,aAE5C,EAAK,MAAM,QAAU,QACrB,EAAU,MAAM,QAAU,QAC1B,EAAQ,MAAM,QAAU,QACxB,EAAM,cAAc,KAAK,YAAc,EACvC,EAAM,QAEN,GAAM,GAAW,IAAM,CACnB,EAAG,oBAAoB,QAAS,GAChC,EAAM,oBAAoB,QAAS,GAEnC,EAAK,MAAM,QAAU,OACrB,EAAU,MAAM,QAAU,OAC1B,EAAQ,MAAM,QAAU,OACxB,EAAG,SAGD,EAAa,AAAC,GAAqB,EAAE,MAAQ,SAAW,IAE9D,EAAG,iBAAiB,QAAS,GAC7B,EAAM,iBAAiB,QAAS,IAGvB,GAAW,CAAC,EAAc,IAAuC,CAC1E,GAAM,GAAO,SAAS,eAAe,mBAC/B,EAAW,SAAS,eAAe,iBACnC,EAAU,SAAS,cAA2B,kBAC9C,EAAQ,SAAS,cAA2B,WAC5C,EAAK,EAAM,cAA2B,cACtC,EAAS,EAAM,cAA2B,kBAEhD,EAAK,MAAM,QAAU,QACrB,EAAS,MAAM,QAAU,QACzB,EAAQ,MAAM,QAAU,QACxB,EAAM,cAAc,SAAS,YAAc,EAC3C,EAAM,cAAc,SAAS,QAG7B,GAAM,GAAW,CAAC,CAAE,YAAmD,CACnE,GAAM,GAAW,EACX,EAAK,EAAS,WAAW,cAAc,SAE7C,EAAG,oBAAoB,QAAS,GAChC,EAAO,oBAAoB,QAAS,GACpC,EAAM,cAAc,SAAS,oBAAoB,QAAS,GAE1D,EAAK,MAAM,QAAU,OACrB,EAAS,MAAM,QAAU,OACzB,EAAQ,MAAM,QAAU,OAExB,AAAI,EAAS,KAAO,EAAG,GAAI,EAAG,EAAG,OAC5B,EAAG,MAER,EAAG,MAAQ,EAAG,YAAc,IAG1B,EAAa,AAAC,GACZ,EAAE,MAAQ,QACH,EAAS,CAAE,OAAQ,IAGvB,EAAE,iBAGb,EAAG,iBAAiB,QAAS,GAC7B,EAAO,iBAAiB,QAAS,GACjC,EAAM,cAAc,SAAS,iBAAiB,QAAS,IAI9C,EAAQ,AAAC,GAAqC,GAAI,SAAQ,GAAO,GAAQ,EAAM,IAE/E,GAAS,AAAC,GAAyC,GAAI,SAAQ,GAAO,GAAS,EAAM,IAErF,EAAU,AAAC,GAAmC,GAAI,SAAQ,GAAO,GAAU,EAAM,IAIxF,GAAS,SAAS,cAA2B,qBACnD,GAAO,SAAS,EAAG,GACnB,GAAI,IAAS,GACT,GACA,GAEJ,GAAO,iBAAiB,YAAa,AAAC,GAAM,CACxC,GAAS,GACT,GAAS,EAAE,MAAQ,GAAO,WAC1B,GAAa,GAAO,aAGxB,GAAO,iBAAiB,aAAc,IAAM,GAAS,IACrD,GAAO,iBAAiB,UAAW,IAAM,GAAS,IAElD,GAAO,iBAAiB,YAAa,AAAC,GAAM,CACxC,GAAG,CAAC,GAAQ,OACZ,EAAE,iBAGF,GAAM,GAAQ,CADJ,EAAE,MAAQ,GAAO,WACT,IAAU,IAC5B,GAAO,WAAa,GAAa,IC57B9B,GAAM,IAA4B,IAAM,CAC3C,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAE,uBAA2B,EAAG,IAC1F,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAE,sBAA4B,GAAI,EAAI,EAAO,WAAW,IAAM,EAAI,EAAO,WAAW,IAAM,EAAI,EAAO,WAAW,IAAM,EAAE,oBAAuB,IAAK,EAAG,IACjN,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,KAAK,MAAM,KAAK,IAAI,EAAE,WAAgB,EAAE,mBAAwB,GAAI,MAAO,EAAG,IACxI,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAI,EAAE,WAAgB,EAAI,IAAM,EAAE,mBAAuB,EAAG,IACtH,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,KAAK,IAAI,KAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,KAAM,EAAG,IAC1L,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,KAAK,IAAI,KAAM,EAAO,aAAa,IAAM,EAAO,aAAa,IAAM,EAAO,aAAa,KAAM,EAAG,IAC1J,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAI,EAAI,EAAI,EAAO,WAAW,GAAI,EAAG,IAC/F,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAI,EAAI,GAAK,EAAO,WAAW,GAAK,EAAI,GAAK,EAAO,WAAW,GAAK,EAAI,GAAK,EAAO,WAAW,GAAK,EAAI,IAAM,EAAO,WAAW,GAAK,EAAI,IAAM,EAAO,WAAW,IAAK,EAAG,IACnO,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAI,EAAI,GAAK,EAAO,WAAW,IAAK,EAAG,IACjG,SAAS,eAAe,QAAQ,YAAc,IAAM,EAAS,GAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,IAAM,EAAO,SAAS,IAAM,GAAM,KAAO,EAAI,EAAG,IACrM,SAAS,eAAe,QAAQ,YAAc,IAAM,EAAO,KAAK,IAAI,EAAI,GAAI,EAAO,iBAAiB,GAAK,IAAM,EAAE,iBAAoB,EAAO,gBAAgB,IAAO,GAAI,KAAK,IAAI,EAAO,gBAAgB,GAAK,EAAO,gBAAgB,MAAO,EAAG,IAC7O,SAAS,eAAe,QAAQ,YAAc,EAAO,EAAE,gBAAoB,EAAG,KAGrE,GAA2B,IAAM,CAC1C,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAE,sBAA0B,EAAG,IACzF,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,KAAK,MAAM,KAAK,MAAM,EAAE,WAAgB,GAAK,EAAE,oBAAyB,KAAK,MAAM,GAAK,EAAE,WAAgB,GAAK,EAAE,oBAAyB,GAAK,IAAM,IAAK,EAAG,IACvN,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAI,EAAE,WAAgB,IAAM,EAAE,mBAAuB,EAAG,IAClH,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,KAAK,IAAI,KAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,KAAQ,GAAI,EAAO,SAAS,IAAM,EAAI,KAAQ,GAAI,EAAO,SAAS,IAAO,GAAI,MAAO,EAAG,IACxQ,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,KAAK,IAAI,KAAM,EAAO,aAAa,IAAM,EAAO,aAAa,IAAM,EAAO,aAAa,KAAM,EAAG,IAC1J,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAI,EAAI,EAAI,EAAO,WAAW,GAAI,EAAG,IAC/F,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAI,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,IAAM,EAAO,WAAW,IAAM,EAAI,IAAM,EAAO,WAAW,IAAK,EAAG,IACvO,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,EAAI,EAAI,GAAK,EAAO,WAAW,IAAK,EAAG,IACjG,SAAS,eAAe,OAAO,YAAc,IAAM,EAAO,GAA4B,GAAK,GAAO,YAAY,EAAE,GAAK,EAAE,WAAgB,IAAO,GAAK,IAAI,EAAE,IACzJ,SAAS,eAAe,QAAQ,YAAc,IAAM,EAAO,EAAE,oBAAuB,GAAI,EAAG,IAC3F,SAAS,eAAe,QAAQ,YAAc,IAAM,EAAS,GAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,IAAM,EAAO,SAAS,IAAM,GAAM,KAAO,EAAI,EAAG,IACrM,SAAS,eAAe,QAAQ,YAAc,IAAM,EAAO,KAAK,IAAI,EAAI,GAAI,EAAO,iBAAiB,GAAK,IAAM,EAAE,kBAAqB,EAAO,gBAAgB,IAAO,GAAI,KAAK,IAAI,EAAO,gBAAgB,GAAK,EAAO,gBAAgB,MAAO,EAAG,IAC9O,SAAS,eAAe,QAAQ,YAAc,EAAO,EAAE,eAAmB,EAAG,KAGpE,GAAgC,IAAM,CAE/C,GAAM,GAAO,KAA6B,KACpC,EAAsD,CACxD,EAAG,CAAC,IAAK,EAAG,KAAM,8BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,8BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,sBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,gCAClB,EAAG,CAAC,IAAK,EAAG,KAAM,6BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,kBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,mBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,oBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,2CAEtB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CAClC,GAAM,GAAW,SAAS,eAAe,UAAU,EAAI,KACvD,EAAS,WAAW,GAAG,YAAc,EAAK,EAAI,GAAG,KACjD,SAAS,eAAe,OAAO,EAAI,KAAK,YAAc,IAAI,EAAO,EAAK,GAAI,EAAK,EAAI,GAAG,IAAK,MAG/F,SAAS,eAAe,SAAS,YAAc,IAAI,EAAO,KAA6B,KAAM,KAE7F,GAAM,GAAM,KAA0B,KAChC,EAAqD,CACvD,EAAG,CAAC,IAAK,EAAG,KAAM,+BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,2BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,kBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,6BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,kBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,kBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,wBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,GAAI,CAAC,IAAK,EAAG,KAAM,0BACnB,GAAI,CAAC,IAAK,EAAG,KAAM,8BACnB,GAAI,CAAC,IAAK,EAAG,KAAM,0BACnB,GAAI,CAAC,IAAK,EAAG,KAAM,iBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,mBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,kBAEvB,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,CACjC,GAAM,GAAU,SAAS,eAAe,SAAS,EAAI,KACrD,EAAQ,WAAW,GAAG,YAAc,EAAI,EAAI,GAAG,KAC/C,SAAS,eAAe,MAAM,EAAI,KAAK,YAAc,IAAI,EAAO,EAAI,GAAI,EAAI,EAAI,GAAG,IAAK,MAG5F,SAAS,eAAe,QAAQ,YAAc,IAAI,EAAO,KAA0B,KAAM,KAEzF,GAAM,GAAO,KAA+B,KACtC,EAAsD,CACxD,EAAG,CAAC,IAAK,EAAG,KAAM,+BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,2BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,kBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,wBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,sBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,qBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,8BAClB,GAAI,CAAC,IAAK,EAAG,KAAM,0BACnB,GAAI,CAAC,IAAK,EAAG,KAAM,mBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,kBAEvB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CAClC,GAAM,GAAW,SAAS,eAAe,UAAU,EAAI,KACvD,EAAS,WAAW,GAAG,YAAc,EAAK,EAAI,GAAG,KACjD,SAAS,eAAe,OAAO,EAAI,KAAK,YAAc,IAAI,EAAO,EAAK,GAAI,EAAK,EAAI,GAAG,IAAK,MAG/F,SAAS,eAAe,SAAS,YAAc,IAAI,EAAO,KAA+B,KAAM,KAE/F,GAAM,GAAO,KAA+B,KACtC,EAAsD,CACxD,EAAG,CAAC,IAAK,EAAG,KAAM,+BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,2BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,kBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,8BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,mBAClB,GAAI,CAAC,IAAK,EAAG,KAAM,iBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,+BAEvB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CAClC,GAAM,GAAW,SAAS,eAAe,UAAU,EAAI,KACvD,EAAS,WAAW,GAAG,YAAc,EAAK,EAAI,GAAG,KACjD,SAAS,eAAe,OAAO,EAAI,KAAK,YAAc,IAAI,EAAO,EAAK,GAAI,EAAK,EAAI,GAAG,IAAK,MAG/F,SAAS,eAAe,SAAS,YAAc,IAAI,EAAO,KAA+B,KAAM,KAE/F,GAAM,GAAO,KAA8B,KACrC,EAAsD,CACxD,EAAG,CAAC,IAAK,EAAG,KAAM,+BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,2BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,kBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,8BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,mBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,kBAEtB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CAClC,GAAM,GAAW,SAAS,eAAe,UAAU,EAAI,KACvD,EAAS,WAAW,GAAG,YAAc,EAAK,EAAI,GAAG,KACjD,SAAS,eAAe,OAAO,EAAI,KAAK,YAAc,IAAI,EAAO,EAAK,GAAI,EAAK,EAAI,GAAG,IAAK,MAG/F,SAAS,eAAe,SAAS,YAAc,IAAI,EAAO,KAA8B,KAAM,KAE9F,GAAM,GAAO,KAA+B,KACtC,EAAsD,CACxD,EAAG,CAAC,IAAK,EAAG,KAAM,+BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,2BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,kBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,2BAEtB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CAClC,GAAM,GAAW,SAAS,eAAe,UAAU,EAAI,KACvD,EAAS,WAAW,GAAG,YAAc,EAAK,EAAI,GAAG,KACjD,SAAS,eAAe,OAAO,EAAI,KAAK,YAAc,IAAI,EAAO,EAAK,GAAI,EAAK,EAAI,GAAG,IAAK,MAG/F,SAAS,eAAe,SAAS,YAAc,IAAI,EAAO,KAA+B,KAAM,MAGtF,GAAoC,IAAM,CACnD,GAAM,GAAM,GAAmB,WAAY,IACrC,EAAqD,CACvD,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,0BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,wBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,yBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,+BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,6BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,2BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,kBAClB,GAAI,CAAC,IAAK,EAAG,KAAM,2BACnB,GAAI,CAAC,IAAK,EAAG,KAAM,wBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,uBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,sBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,iBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,kBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,gCACnB,GAAI,CAAC,IAAK,EAAG,KAAM,8BACnB,GAAI,CAAC,IAAK,EAAG,KAAM,qBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,sBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,mBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,kBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,mBACnB,GAAI,CAAC,IAAK,EAAG,KAAM,kBAEvB,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,CACjC,GAAM,GAAW,SAAS,eAAe,UAAU,EAAI,KACvD,EAAS,WAAW,GAAG,YAAc,EAAI,EAAI,GAAG,KAChD,SAAS,eAAe,OAAO,EAAI,KAAK,YAAc,IAAI,EAAO,EAAI,GAAI,EAAI,EAAI,GAAG,IAAK,MAE7F,SAAS,eAAe,SAAS,YAAc,IAAI,EAAO,GAAmB,WAAY,GAAM,IAAO,MAG7F,GAAuB,IAAM,CACtC,GAAM,GAAO,KAA4B,KACnC,EAAsD,CACxD,EAAG,CAAC,IAAK,EAAG,KAAM,SAClB,EAAG,CAAC,IAAK,EAAG,KAAM,uBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,cAClB,EAAG,CAAC,IAAK,EAAG,KAAM,oBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,oBAClB,EAAG,CAAC,IAAK,EAAG,KAAM,6BAClB,EAAG,CAAC,IAAK,EAAG,KAAM,4CAEtB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CAClC,GAAM,GAAW,SAAS,eAAe,UAAU,EAAI,KACvD,EAAS,WAAW,GAAG,YAAc,EAAK,EAAI,GAAG,KACjD,SAAS,eAAe,OAAO,EAAI,KAAK,YAAc,IAAI,EAAO,EAAK,GAAI,EAAK,EAAI,GAAG,IAAK,MAG/F,SAAS,eAAe,SAAS,YAAc,IAAI,EAAO,KAA4B,KAAM,MAGnF,GAAkB,IAAM,CACjC,GAAM,GAAuB,CAAC,IAAK,KAAO,IAAK,IAAK,KAAO,KAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAS,OAAS,OAAS,KAAM,OAE7N,EAAO,OAAO,KAAK,EAAE,oBACrB,EAAI,EAAO,oBAEjB,OAAU,KAAO,GAAE,mBACf,EAAE,mBAAsB,GAAc,EAE1C,EAAE,mBAAsB,SAAW,EAEhC,GAAK,EAAqB,IAEzB,GAAE,mBAAsB,EAAK,IAAM,EAAI,EAAI,GAAK,KAAK,IAAI,EAAI,KAAO,KAAK,IAAI,IAE9E,GAAK,EAAqB,IAEzB,GAAE,mBAAsB,EAAK,IAAM,EAAI,EAAI,GAAK,KAAK,IAAI,EAAI,KAAO,KAAK,IAAI,IAE9E,GAAK,EAAqB,IAEzB,GAAE,mBAAsB,EAAK,IAAM,EAAI,EAAI,IAAM,KAAK,IAAI,EAAI,KAAO,KAAK,IAAI,IAE/E,GAAK,EAAqB,IAEzB,GAAE,mBAAsB,EAAK,IAAM,KAAK,IAAI,IAAM,KAAK,IAAI,EAAI,MAAU,KAAK,IAAI,KAEnF,GAAK,EAAqB,IAEzB,GAAE,mBAAsB,EAAK,IAAM,EAAI,EAAI,EAAI,KAAK,IAAI,EAAI,KAAO,MAEpE,GAAK,EAAqB,IAEzB,GAAE,mBAAsB,EAAK,IAAM,EAAI,EAAI,EAAI,KAAK,IAAI,EAAI,KAAO,MAEpE,GAAK,EAAqB,IAEzB,GAAE,mBAAsB,EAAK,IAAM,EAAI,EAAI,GAAK,KAAK,IAAI,EAAI,MAAS,KAAK,IAAI,IAEhF,GAAK,EAAqB,IAEzB,GAAE,mBAAsB,EAAK,IAAM,EAAI,EAAI,GAAK,KAAK,IAAI,EAAI,MAAS,KAAK,IAAI,IAEhF,GAAK,EAAqB,IAEzB,GAAE,mBAAsB,EAAK,IAAM,EAAI,KAAK,IAAI,EAAI,IAAK,MAE1D,GAAK,EAAqB,IAEzB,GAAE,mBAAsB,EAAK,IAAM,EAAI,EAAI,GAAK,KAAK,IAAI,EAAI,KAAO,KAAK,IAAI,IAE9E,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,IAAM,KAAK,IAAI,EAAI,MAAS,KAAK,IAAI,IAElF,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,KAAK,IAAI,IAAM,KAAK,IAAI,EAAI,MAAS,KAAK,IAAI,KAEnF,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,KAAK,IAAI,IAAM,KAAK,IAAI,EAAI,MAAS,KAAK,IAAI,KAEnF,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,KAAK,IAAI,EAAI,KAAK,IAAI,EAAI,KAAO,KAAK,IAAI,GAAI,IAEnF,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,GAAK,KAAK,IAAI,EAAI,MAAQ,KAAK,IAAI,IAEhF,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,IAAM,KAAK,IAAI,EAAI,MAAS,KAAK,IAAI,IAElF,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,GAAK,KAAK,IAAI,EAAI,MAAS,KAAK,IAAI,IAEjF,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,GAAK,KAAK,IAAI,EAAI,MAAS,KAAK,IAAI,IAEjF,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,EAAI,KAAK,IAAI,EAAI,IAAK,EAAI,IAEvE,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,EAAI,KAAK,IAAI,EAAI,IAAK,EAAI,IAEvE,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,IAAM,KAAK,IAAI,EAAI,OAAU,KAAK,IAAI,IAEnF,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,EAAI,KAAK,IAAI,EAAI,IAAK,EAAI,IAEvE,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,EAAI,KAAK,IAAI,EAAI,KAAO,EAAI,IAEzE,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,IAAM,KAAK,IAAI,EAAI,GAAK,MAAQ,KAAK,IAAI,IAEtF,GAAK,EAAqB,KAEzB,GAAE,mBAAsB,EAAK,KAAO,GAEpC,GAAK,EAAqB,KAE1B,EAAO,gBAAgB,UAAU,OAAO,8BAExC,GAAK,EAAqB,KAE1B,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,IAAM,KAAK,KAAK,EAAK,MAAO,QAExE,GAAK,EAAqB,KAE1B,GAAE,mBAAsB,EAAK,KAAO,EAAI,EAAI,GAAK,KAAK,KAAK,EAAK,MAAO,MAEvE,GAAK,EAAqB,KAE1B,EAAO,gBAAgB,MAAM,OAAO,8BAEpC,GAAK,EAAqB,KAE1B,GAAE,mBAAsB,EAAK,KAAO,GAAiB,KAAM,EAAG,OAE9D,GAAK,EAAqB,KAE1B,EAAO,gBAAgB,YAAY,OAAO,8CAE1C,GAAK,EAAqB,KAE1B,EAAO,gBAAgB,iBAAiB,OAAO,oDAE/C,GAAK,EAAqB,KAE1B,EAAO,gBAAgB,WAAW,OAAO,6CAEzC,GAAK,EAAqB,KAE1B,GAAE,mBAAsB,SAAW,KAAK,MAAM,IAAM,KAAK,IAAI,EAAI,KAAM,MAEvE,GAAK,EAAqB,KAE1B,GAAE,mBAAsB,eAAiB,EAAI,EAAE,IAAM,EAAI,KAAK,KAAK,EAAI,OAAU,KAIrF,MAGE,GAA0B,IAAM,CAClC,SAAS,eAAe,iBAAiB,YAAc,EAAO,EAAO,oBAAoB,EAAE,IAC3F,SAAS,eAAe,0BAA0B,YAAc,EAAO,EAAO,oBAAsB,KAA6B,EAAE,IACnI,GAAM,GAAuB,CAAC,IAAK,KAAO,IAAK,IAAK,KAAO,KAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAS,OAAS,OAAS,KAAM,OAC7N,EAAiC,CACnC,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,IAEF,EAAS,OAAO,OAAO,EAAE,oBAC3B,EAAgC,OAChC,EAAO,EACX,OAAQ,GAAI,EAAG,EAAI,EAAqB,OAAQ,IAC5C,AAAG,IAAiB,QAAU,EAAO,oBAAsB,EAAqB,IAC5E,GAAe,EAAqB,IAEpC,EAAO,qBAAuB,EAAqB,IACnD,UAAS,eAAe,YAAa,GAAE,GAAG,OAAO,YAAe,EAAM,GACtE,EAAO,IAAM,EAAO,EAAI,GAAQ,IAAI,EAAE,IACtC,YAEI,CAAC,EAAM,IAAM,IAAM,IACnB,IAAQ,GAGR,IAAM,IACN,UAAS,eAAe,kBAAkB,YAAc,EAAO,EAAO,EAAI,GAAO,EAAG,MAI5F,SAAS,eAAe,YAAa,GAAE,IAAI,MAAM,QAAW,EAAO,qBAAuB,EAAqB,GAAK,QAAS,OAC7H,SAAS,eAAe,iBAAiB,YAAc,MAAO,IAAkB,SAC1E,wDACA,6BAA+B,EAAO,EAAa,EAAE,IAAQ,cCpa3E,GAAM,IAAiB,CACnB,SAAY,GACZ,KAAQ,EACR,UAAa,EACb,SAAY,EACZ,aAAgB,EAChB,MAAS,EACT,WAAc,EACd,WAAc,EACd,KAAQ,EACR,MAAS,EACT,OAAU,GAGD,GAAa,AAAC,GAAsC,CAC7D,EAAE,WAAgB,EAClB,EAAO,UAAY,GAAe,GAElC,IACA,KAEA,GAAM,GAAa,GAAiB,EAAO,WAAW,WACtD,GAAI,EAAO,YAAc,GACrB,OAAS,GAAI,EAAG,EAAI,EAAW,OAAQ,IAAK,CACxC,GAAM,GAAS,SAAS,eAAe,EAAW,GAAG,UACrD,GAAI,GAAU,EAAO,MAAM,kBAAoB,UAAW,CACtD,EAAO,aAAe,EACtB,MAEJ,GAAI,EAAO,YAAc,GAAK,EAAO,MAAM,cAAgB,aAAc,CACrE,EAAO,aAAe,EACtB,WAGL,CAEH,GAAM,GAAO,SAAS,iBAAiB,sCACvC,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAC7B,GAAI,EAAK,GAAG,UAAU,SAAS,gBAAiB,CAC5C,EAAO,aAAe,EACtB,SAMH,GAAiB,AAAC,GAAc,CACzC,IACA,AAAI,EAAO,QAAQ,KAAO,GACtB,EAAO,QAAQ,GAAK,GAEpB,EAAO,QAAQ,GAAK,GAExB,MAGS,GAAmB,CAAC,EAAW,EAAO,KAAU,CAezD,GAdI,EAAO,iBAAiB,eAAiB,GAAM,GAAK,GACjD,GAAO,iBAAiB,YAAc,IAAM,EAAO,kBAAoB,IACtE,GAAO,iBAAiB,aAAe,EACvC,EAAM,wBAAyB,GAAO,kBACtC,EAAO,gBAAkB,GAG5B,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,GAAO,GAAK,GAAK,EAAI,IAC3G,GAAO,iBAAiB,YAAc,IAAM,EAAO,kBAAoB,IACtE,GAAO,iBAAiB,cAAgB,EACxC,EAAM,yBAA0B,GAAO,kBACvC,EAAO,oBAAsB,GAGjC,EAAO,qBAAqB,IAAM,GAC7B,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,GAAK,EAAO,iBAAiB,YAAc,GAAO,GAAK,IAChJ,GAAM,qBAAsB,GAAO,kBACnC,EAAO,iBAAiB,UAAY,EAEhC,EAAO,iBAAiB,YAAc,IACtC,GAAO,UAAY,GAAI,GAAQ,MAE/B,EAAO,iBAAiB,YAAc,IAAI,CAC1C,EAAO,gBAAgB,GAAK,EAC5B,EAAO,qBAAqB,GAAK,EACjC,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,EAAO,gBAAgB,GAAK,GAK5C,KACA,GAAuB,GAEnB,CAAC,GAAQ,EAAO,sBAChB,KAGA,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,GAAK,EAAO,iBAAiB,YAAc,GAAK,EAAO,aAAa,KAAO,GACnK,EAAiB,MAMZ,GAAkB,CAAC,EAA+B,IAAoB,CAC/E,EAAO,GAAG,cAA4B,EACtC,GAAM,GAAI,CAAC,MAAO,MAAO,UAAW,YAAY,EAAS,WAAW,OAAS,GAE7E,SAAS,eAAe,GAAG,IAAO,KAAK,MAAM,gBAAkB,QAC3D,IAAa,GACb,UAAS,eAAe,GAAG,QAAW,MAAM,gBAAkB,IAE9D,IAAa,IACb,UAAS,eAAe,GAAG,QAAW,MAAM,gBAAkB,IAE9D,IAAa,KACb,UAAS,eAAe,GAAG,YAAe,MAAM,gBAAkB,IAElE,IAAa,KACb,UAAS,eAAe,GAAG,aAAgB,MAAM,gBAAkB,KAU9D,GAAc,AAAC,GAA0B,CAElD,GAAI,EACA,EAAO,YAAY,GAAU,CAAC,EAAO,YAAY,GACjD,SAAS,eAAe,GAAG,gBAAqB,MAAM,YAAc,EAAO,YAAY,GAAU,QAAU,MAC3G,SAAS,eAAe,GAAG,gBAAqB,YAAc,SAAY,GAAO,YAAY,GAAU,KAAM,WAE5G,CACD,GAAM,GAAO,OAAO,KAAK,EAAO,aAChC,OAAW,KAAO,GAAM,CACpB,GAAM,GAAQ,EAAO,YAAY,GAAM,QAAS,MAC1C,EAAO,SAAY,GAAO,YAAY,GAAO,KAAO,OAC1D,QAAQ,IAAI,GACZ,SAAS,eAAe,GAAG,gBAAkB,MAAM,YAAc,EACjE,SAAS,eAAe,GAAG,gBAAkB,YAAc,KAOhE,YAAc,EAAkB,CACnC,GAAM,GAAY,CACd,KAAM,CAAC,QAAS,WAAY,SAAU,IACtC,EAAG,CAAC,QAAS,OAAQ,SAAU,EAAO,QAAQ,aAC9C,EAAG,CAAC,QAAS,YAAa,SAAU,IACpC,EAAG,CAAC,QAAS,WAAY,SAAU,IACnC,EAAG,CAAC,QAAS,eAAgB,SAAU,EAAO,QAAQ,UACtD,EAAG,CAAC,QAAS,QAAS,SAAU,EAAO,QAAQ,UAC/C,EAAG,CAAC,QAAS,aAAc,SAAU,EAAO,QAAQ,WACpD,EAAG,CAAC,QAAS,aAAc,SAAU,EAAO,QAAQ,aACpD,EAAG,CAAC,QAAS,OAAQ,SAAU,EAAO,aAAa,KAAO,GAC1D,EAAG,CAAC,QAAS,QAAS,SAAU,EAAO,aAAa,KAAO,GAC3D,EAAG,CAAC,QAAS,SAAU,SAAU,EAAO,aAAa,KAAO,IAGhE,MAAI,OAAO,IAAY,YACZ,EAGJ,EAAK,GAQT,GAAM,IAAmB,AAAC,GA0DtB,AArDiB,EACpB,KAAM,CACF,YAAa,GACb,WAAY,CACR,CAAC,SAAU,gBAAiB,SAAU,IACtC,CAAC,SAAU,gBAAiB,SAAU,IACtC,CAAC,SAAU,mBAAoB,SAAU,IACzC,CAAC,SAAU,qBAAsB,SAAU,EAAO,QAAQ,UAC1D,CAAC,SAAU,sBAAuB,SAAU,EAAO,eAAiB,GACpE,CAAE,SAAU,UAAW,SAAU,MAGzC,EAAG,CAAC,WAAY,IAChB,EAAG,CACC,YAAa,GACb,WAAY,CACR,CAAC,SAAU,OAAQ,SAAU,GAAM,SAAU,wBAC7C,CAAC,SAAU,UAAW,SAAU,EAAO,QAAQ,SAAU,SAAU,2BACnE,CAAC,SAAU,SAAU,SAAU,EAAO,QAAQ,UAAW,SAAU,0BACnE,CAAC,SAAU,WAAY,SAAU,EAAO,QAAQ,YAAa,SAAU,4BACvE,CAAC,SAAU,YAAa,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,+BAElF,EAAG,CAAC,WAAY,IAChB,EAAG,CAAC,WAAY,IAChB,EAAG,CACC,YAAa,GACb,WAAY,CACR,CAAC,SAAU,EAAG,SAAU,EAAO,QAAQ,SAAU,SAAU,qBAC3D,CAAC,SAAU,EAAG,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,qBAChE,CAAC,SAAU,EAAG,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,qBAChE,CAAC,SAAU,EAAG,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,uBAExE,EAAG,CAAC,WAAY,IAChB,EAAG,CAAC,WAAY,IAChB,EAAG,CAAC,WAAY,IAChB,EAAG,CACC,YAAa,GACb,WAAY,CACR,CAAC,SAAU,EAAG,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,qBAChE,CAAC,SAAU,EAAG,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,qBAChE,CAAC,SAAU,EAAG,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,qBAChE,CAAC,SAAU,EAAG,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,qBAChE,CAAC,SAAU,EAAG,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,qBAChE,CAAC,SAAU,EAAG,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,qBAChE,CAAC,SAAU,EAAG,SAAU,EAAO,qBAAuB,KAAM,SAAU,uBAE9E,EAAG,CACC,YAAa,GACb,WAAY,CACR,CAAC,SAAU,GAAM,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,gBACnE,CAAC,SAAU,GAAO,SAAU,EAAO,aAAa,KAAO,EAAG,SAAU,uBAGjE,GAGN,GAAoB,CAAC,EAAM,EAAG,EAAO,KAAS,CACvD,GAAI,EAAM,CACN,EAAO,WAAa,EACpB,GAAM,GAAS,OAAO,KAAK,MAAQ,OAAO,CAAC,EAAG,IAAM,KAAK,IAAI,EAAG,CAAC,GAAI,WAC/D,EAAS,OAAO,KAAK,MAAQ,OAAO,CAAC,EAAG,IAAM,KAAK,IAAI,EAAG,CAAC,GAAI,UAG/D,EAAiB,IAAM,CACzB,AAAI,EAAO,YAAc,EAAS,GAC9B,GAAO,UAAY,GAEnB,EAAO,YAAc,EAAS,GAC9B,GAAO,UAAY,IAI3B,IADA,IACO,CAAC,GAAK,EAAO,WAAW,UAC3B,EAAO,WAAa,EACpB,IAEJ,GAAW,GAAK,EAAO,WAAW,aAC/B,CACH,GAAM,GAAa,GAAiB,EAAO,WAAW,WACtD,GAAI,EAAW,SAAW,EACtB,OACJ,EAAO,cAAgB,EACvB,GAAM,GAAiB,IAAM,CACzB,GAAM,GAAa,EAAW,OAC9B,EAAO,aAAgB,GAAO,aAAe,GAAc,GAG/D,IADA,IACO,CAAC,EAAW,EAAO,cAAc,UACpC,EAAO,cAAgB,EACvB,IAEJ,GAAa,EAAO,UAAW,EAAO,cAG1C,MAGS,GAAe,CAAC,EAAU,EAAG,EAAS,IAAM,CACrD,GAAI,GAAK,GAAS,UAAY,GAAiB,GAAS,WAAW,OAAS,EACxE,GAAI,IAAY,GAAI,CAEhB,GAAM,GAAM,SAAS,eAAe,YAAY,uBAAuB,kBAAkB,GAAG,SAAS,GACrG,AAAI,GAAiB,GAAS,WAAW,GAAQ,UAC7C,GAAiB,GAAS,YAAY,GAAiB,GAAS,WAAW,GAAQ,SAAU,OAEjG,AAAI,IAAiB,GAAS,WAAW,GAAQ,UAC7C,GAAiB,GAAS,YAAY,GAAiB,GAAS,WAAW,GAAQ,WAKtF,GAAkB,AAAC,GAAc,CAC1C,AAAI,IAAM,EACN,AAAI,EAAO,eAAiB,GAAK,EAAO,eAAiB,EACrD,GAAO,aAAe,EACtB,SAAS,eAAe,sBAAsB,YAAc,cAE5D,GAAO,aAAe,EACtB,SAAS,eAAe,sBAAsB,YAAc,gBAE7D,AAAI,IAAM,EACb,AAAI,EAAO,eAAiB,GAAK,EAAO,eAAiB,EACrD,GAAO,aAAe,EACtB,SAAS,eAAe,uBAAuB,YAAc,cAE7D,GAAO,aAAe,EACtB,SAAS,eAAe,uBAAuB,YAAc,gBAE1D,IAAM,GACb,CAAI,EAAO,eAAiB,GAAK,EAAO,eAAiB,EACrD,GAAO,aAAe,EACtB,SAAS,eAAe,yBAAyB,YAAc,cAE/D,GAAO,aAAe,EACtB,SAAS,eAAe,yBAAyB,YAAc,kBAO9D,GAAyB,IAAM,CACxC,AAAI,EAAO,2BAA6B,GAAK,EAAO,2BAA6B,EAC7E,GAAO,yBAA2B,EAClC,SAAS,eAAe,0BAA0B,YAAc,gBAChE,SAAS,eAAe,0BAA0B,MAAM,OAAS,iBAGjE,GAAO,yBAA2B,EAClC,SAAS,eAAe,0BAA0B,YAAc,eAChE,SAAS,eAAe,0BAA0B,MAAM,OAAS,oBAI5D,GAAa,IAAM,CAC5B,GAAM,GAAQ,SAAS,uBAAuB,QAC9C,OAAW,KAAQ,OAAM,KAAK,GAAQ,CAClC,GAAM,GAAS,EAAK,aAAa,WAAa,WACxC,EAAW,EAAK,aAAa,YACnC,GAAI,AAA0B,GAAa,KACvC,SAGJ,GAAM,GAAiB,EAAO,QAAQ,IAAK,EAAO,QAAQ,CAAC,GAAY,KAAO,OAC9E,EAAK,YAAc,EACnB,EAAK,MAAM,OAAS,aAAgB,GAAO,QAAQ,CAAC,GAAY,QAAU,SAIrE,GAAoB,IAAM,CACnC,AAAI,EAAE,eACF,GAAE,eAAoB,GACtB,SAAS,eAAe,qBAAqB,YAAc,oBAE3D,GAAE,eAAoB,GACtB,SAAS,eAAe,qBAAqB,YAAc,+BAItD,GAAqB,IAAM,CACpC,GAAM,GAAK,SAAS,eAAe,sBACnC,AAAI,EAAO,mBACP,GAAO,mBAAqB,GAC5B,EAAG,YAAc,iBACjB,SAAS,eAAe,MAAM,EAAO,cAAgB,KAAK,UAAU,OAAO,kBAC3E,EAAO,aAAe,GAEtB,GAAO,mBAAqB,GAC5B,EAAG,YAAc,iBAGjB,EAAO,oBAAsB,EAAO,aAAa,KAAO,GACxD,GAAO,aAAe,EAAE,oBAAuB,EAAO,uBAKjD,GAAsB,AAAC,GAAkB,CAClD,GAAM,GAAK,SAAS,eAAe,uBACnC,AAAI,IAAU,EACV,AAAI,EAAO,oBACP,GAAO,oBAAsB,GAC7B,EAAG,YAAc,kBACjB,SAAS,eAAe,uBAAuB,MAAM,OAAS,gBAC9D,EAAO,cAAgB,GAEvB,GAAO,oBAAsB,GAC7B,EAAG,YAAc,iBACjB,SAAS,eAAe,uBAAuB,MAAM,OAAS,mBAE3D,EAAO,qBAAuB,EAAO,aAAa,aAAe,IACxE,GAAO,cAAgB,GAE3B,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,SAAS,eAAe,OAAS,GAAG,MAAM,gBAAkB,EAAO,gBAAkB,EAAI,SAAW,UAExG,KAGS,GAAuB,AAAC,GAA0B,CAC3D,EAAE,eAAoB,EACtB,GAAM,GAAmF,CACrF,KAAQ,CACJ,OAAQ,gBACR,OAAQ,uBACR,aAAc,GAElB,QAAW,CACP,OAAQ,WACR,OAAQ,0BACR,aAAc,GAElB,OAAU,CACN,OAAQ,eACR,OAAQ,yBACR,aAAc,GAElB,SAAY,CACR,OAAQ,gBACR,OAAQ,2BACR,aAAc,GAElB,UAAa,CACT,OAAQ,YACR,OAAQ,4BACR,aAAc,IAGtB,OAAW,KAAO,GACd,SAAS,eAAe,EAAO,GAAK,QAAQ,MAAM,QAAU,OAC5D,SAAS,eAAe,EAAO,GAAK,QAAQ,MAAM,gBAAkB,GAExE,SAAS,eAAe,EAAO,EAAE,gBAAmB,QAAQ,MAAM,QAAU,OAC5E,SAAS,eAAe,EAAO,EAAE,gBAAmB,QAAQ,MAAM,gBAAkB,UACpF,EAAO,aAAe,EAAO,EAAE,gBAAmB,cAGzC,GAAmB,AAAC,GAAkB,CAC/C,GAAM,GAAU,CAAC,QAAS,YAAa,YAAa,WACpD,EAAE,WAAgB,EAAQ,EAAQ,GAElC,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAI,SAAS,eAAe,mBAAqB,GACjD,EAAI,SAAS,eAAe,gBAAkB,GACpD,AAAI,IAAM,EACN,GAAE,MAAM,OAAS,iBACjB,EAAE,MAAM,gBAAkB,UAC1B,EAAE,MAAM,QAAU,QAElB,GAAE,MAAM,OAAS,mBACjB,EAAE,MAAM,gBAAkB,GAC1B,EAAE,MAAM,QAAU,QAG1B,EAAO,aAAe,EAAQ,GAGrB,GAAoB,IAAM,CACnC,GAAM,GAAK,SAAS,eAAe,qBACnC,AAAI,EAAO,oBAAsB,IAAS,EAAO,WAAW,MAAQ,EAChE,GAAG,YAAc,mBACjB,EAAG,MAAM,OAAS,mBAElB,GAAG,YAAc,oBACjB,EAAG,MAAM,OAAS,iBAGtB,EAAO,kBAAoB,CAAC,EAAO,mBAG1B,GAAoB,IAAM,CACnC,GAAM,GAAK,SAAS,eAAe,qBACnC,AAAI,EAAO,oBAAsB,IAAS,EAAO,WAAW,MAAQ,EAChE,GAAG,YAAc,mBACjB,EAAG,MAAM,OAAS,mBAElB,GAAG,YAAc,oBACjB,EAAG,MAAM,OAAS,iBAGtB,EAAO,kBAAoB,CAAC,EAAO,mBAGjC,GAAyB,MAAO,EAAgB,IAAqC,CACvF,GAAM,GAAW,SAAS,eAAe,GACzC,GAAI,EAAS,UAAU,SAAS,gBAC5B,OAUJ,GANA,AADmB,EAAc,WACtB,iBAAiB,iBAAiB,QAAQ,GAAK,EAAE,UAAU,OAAO,iBAC7E,EAAc,UAAU,IAAI,gBAE5B,EAAS,WAAW,iBAAiB,iBAAiB,QAAQ,GAAU,EAAO,UAAU,OAAO,iBAChG,EAAS,UAAU,IAAI,gBAEnB,IAAW,mBAAoB,CAC/B,GAAM,GAAe,UAAW,CAC5B,AAAI,EAAE,aAAkB,YACpB,GAAS,GAEb,KACA,KACA,KACA,KACA,KACK,EAAS,UAAU,SAAS,iBAC7B,GAAS,IAGX,EAAK,GAAS,EAAc,KAClC,YACO,IAAW,gBAAiB,CACnC,GAAM,GAAU,SAAS,eAAe,cAClC,EAAU,SAAS,eAAe,cAExC,GAAI,EAAQ,kBAAoB,GAAK,EAAQ,kBAAoB,EAC7D,OACC,GAAI,CAAC,UAAU,OAChB,OAEJ,GAAI,CAMA,GAAM,GAAI,KAAM,AALN,MAAM,OAAM,0EAA2E,CAC7F,QAAS,CACL,OAAU,qCAGA,OAElB,OAAW,KAAe,GAAG,CACzB,GAAM,GAAM,SAAS,cAAc,OACnC,EAAI,UAAU,IAAI,UAElB,GAAM,GAAM,GAAI,OAAM,GAAI,IAC1B,EAAI,IAAM,EAAY,WACtB,EAAI,IAAM,EAAY,MAEtB,GAAM,GAAI,SAAS,cAAc,KACjC,EAAE,KAAO,mEAAmE,EAAY,QACxF,EAAE,YAAc,EAAY,MAC5B,EAAE,OAAS,SACX,EAAE,IAAM,+BAER,EAAI,YAAY,GAChB,EAAI,YAAY,GAEhB,EAAQ,YAAY,UAEnB,EAAP,CACE,EAAQ,YAAY,SAAS,eAAe,EAAE,aAGlD,GAAI,CAOA,GAAM,GAAI,KAAM,AANN,MAAM,OAAM,gEAAiE,CACnF,QAAS,CACL,OAAU,qCAIA,OACZ,EAAI,KAAK,MAAM,EAAE,MAAM,0BAA0B,SAEvD,OAAW,KAAQ,GAAG,CAClB,GAAM,GAAI,SAAS,cAAc,KACjC,EAAE,YAAc,EAEhB,EAAQ,YAAY,UAEnB,EAAP,CACE,EAAQ,YAAY,SAAS,eAAe,EAAE,gBAK7C,GAAyB,IAAM,CACxC,GAAM,GAAK,SAAS,eAAe,qBACnC,EAAG,YAAc,EAAE,iBACb,0BACA,yBAEN,EAAE,iBAAsB,CAAC,EAAE,kBAGlB,GAAkB,IAAM,CACjC,GAAM,GAAK,SAAS,eAAe,gBACnC,EAAG,YAAc,EAAO,OAClB,eACA,cAEN,EAAO,OAAS,CAAC,EAAO,QAGf,GAAyB,CAAC,EAAO,IAAM,CAChD,GAAI,IAAS,EAAG,CACZ,GAAM,GAAK,SAAS,eAAe,0BACnC,AAAI,EAAO,iBACP,GAAO,iBAAmB,GAC1B,EAAG,YAAc,uBAEjB,GAAO,iBAAmB,GAC1B,EAAG,YAAc,8BAEd,IAAS,EAAG,CACnB,GAAM,GAAK,SAAS,eAAe,wBACnC,AAAI,EAAO,uBAAyB,GAAK,EAAO,uBAAyB,EACrE,GAAO,qBAAuB,EAC9B,EAAG,YAAc,mBAEjB,GAAO,qBAAuB,EAC9B,EAAG,YAAc,wBAKhB,GAAmB,IAAM,CAClC,GAAM,GAAK,SAAS,eAAe,iBACnC,AAAI,EAAE,mBACF,GAAE,mBAAwB,GAC1B,EAAG,YAAc,wBAEjB,GAAE,mBAAwB,GAC1B,EAAG,YAAc,mCAIZ,GAAmB,AAAC,GAAc,CAC3C,GAAM,GAAa,GAAiB,GAAG,WAAW,OAClD,OAAS,GAAI,EAAG,GAAK,EAAY,IAAK,CAClC,GAAM,GAAU,SAAS,eAAe,UAAU,KAClD,AAAI,EAAQ,MAAM,UAAY,QAAU,IAAM,GAC1C,GAAQ,MAAM,QAAU,QAExB,EAAQ,MAAM,UAAY,QAAU,IAAM,GAC1C,GAAQ,MAAM,QAAU,OACxB,EAAO,aAAe,EAAI,GAE9B,SAAS,eAAe,mBAAqB,GAAG,MAAM,gBAAkB,IAAM,EAAI,UAAY,GAGlG,MAGS,GAAsB,AAAC,GAAc,CAC9C,OAAQ,OACC,GAAG,CACJ,GAAM,GAAI,WAAY,SAAS,eAAe,gCAAqD,QAAU,EAC7G,EAAO,mBAAmB,MAAQ,KAAK,IAAI,EAAG,GAC9C,SAAS,eAAe,mBAAmB,YAAc,EAAO,EAAO,mBAAmB,MAAO,EAAG,IAAQ,IAC5G,WAEC,GAAG,CACJ,GAAM,GAAI,WAAY,SAAS,eAAe,+BAAoD,QAAU,EAC5G,EAAO,mBAAmB,KAAO,KAAK,IAAI,EAAG,GAC7C,SAAS,eAAe,kBAAkB,YAAc,EAAO,EAAO,mBAAmB,KAAM,EAAG,IAAQ,IAC1G,WAEC,GAAG,CACJ,GAAM,GAAI,WAAY,SAAS,eAAe,gCAAqD,QAAU,EAC7G,EAAO,mBAAmB,MAAQ,KAAK,IAAI,EAAG,GAC9C,SAAS,eAAe,mBAAmB,YAAc,EAAO,EAAO,mBAAmB,MAAO,EAAG,IAAQ,IAC5G,UAKC,GAA6B,AAAC,GAAc,CACrD,GAAM,GAAK,SAAS,eAAe,6BACnC,AAAI,EAAO,qBAAqB,GAC5B,GAAG,MAAM,OAAS,gBAClB,EAAG,YAAc,0BAA4B,EAAI,UAEjD,GAAG,MAAM,OAAS,kBAClB,EAAG,YAAc,0BAA4B,EAAI,SAGrD,EAAO,qBAAqB,GAAK,CAAC,EAAO,qBAAqB,IAGrD,GAAyB,IAAM,CACxC,GAAM,GAAK,SAAS,eAAe,4BACnC,AAAI,EAAO,qBACP,GAAG,MAAM,OAAS,gBAClB,EAAG,YAAc,6BACjB,EAAO,mBAAqB,EAC5B,EAAE,4BAAiC,EACnC,GAA4B,QAE5B,GAAG,MAAM,OAAS,iBAClB,EAAG,YAAc,4BACjB,GAA4B,UAGhC,EAAO,qBAAuB,CAAC,EAAO,sBAG7B,GAA8B,AAAC,GAAc,CACtD,GAAM,GAAI,SAAS,eAAe,qBAClC,EAAE,YAAc,SAAW,GAGlB,GAAmB,IAAM,CAClC,GAAM,GAAI,SAAS,eAAe,uBAClC,AAAI,EAAO,WACP,GAAE,MAAM,OAAS,gBACjB,EAAE,YAAc,qBAEhB,GAAE,MAAM,OAAS,kBACjB,EAAE,YAAc,oBAGpB,EAAO,WAAa,CAAC,EAAO,YAGnB,GAA8B,AAAC,GAAc,CACtD,OAAQ,OACC,GAAG,CACJ,GAAM,GAAI,KAAK,MAAM,WAAY,SAAS,eAAe,wBAA6C,SAAW,EACjH,EAAO,sBAAwB,KAAK,IAAI,EAAG,GAC3C,SAAS,eAAe,8BAA8B,YAAc,EAAO,EAAO,sBAAuB,EAAG,IAC5G,WAEC,GAAG,CACJ,GAAM,GAAI,KAAK,MAAM,WAAY,SAAS,eAAe,sBAA2C,SAAW,EAC/G,EAAO,oBAAsB,KAAK,IAAI,EAAG,GACzC,SAAS,eAAe,4BAA4B,YAAc,EAAO,EAAO,oBAAqB,EAAG,IACxG,UAKC,GAAuB,AAAC,GAAc,CAC/C,GAAM,GAAK,SAAS,eAAe,sBAAwB,GAC3D,AAAI,EAAO,eAAe,GACtB,GAAG,YAAc,aACjB,EAAG,MAAM,OAAS,iBAElB,GAAG,YAAc,YACjB,EAAG,MAAM,OAAS,mBAGtB,EAAO,eAAe,GAAK,CAAC,EAAO,eAAe,IAGzC,GAAwB,CAAC,EAAe,IAAkB,CACnE,GAAM,GAAU,EAAO,qBAAqB,GACtC,EAAgB,GAQtB,GAPI,EAAQ,GAAK,EAAU,GAAiB,EAAI,GAAS,GAAS,GAC9D,GAAO,qBAAqB,IAAU,KAAK,IAAI,EAAgB,EAAS,IAExE,EAAQ,GAAK,EAAU,GAAK,EAAI,GAAS,GAAS,GAClD,GAAO,qBAAqB,IAAU,KAAK,IAAI,EAAS,CAAC,IAE7D,EAAO,qBAAqB,GAAS,KAAK,IAAI,EAAe,KAAK,IAAI,EAAG,EAAO,qBAAqB,KACjG,IAAU,KAAO,EAAO,iBAAiB,YAAc,GAAI,CAC3D,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,EAAO,gBAAgB,GAAK,EAC5B,EAAO,qBAAqB,GAAK,EAC7B,EAAI,GACJ,GAAkB,GAG1B,GAAkB,EAAE,mBACpB,SAAS,eAAe,4BAA4B,MAAM,WAAa,SAEnE,EAAO,iBAAiB,YAAc,IACtC,EAAW,qBAAsB,GAAO,IAGhD,GAAkB,GAClB,MAGS,GAAgC,AAAC,GAAmB,CAC7D,EAAO,oBAAsB,EAC7B,MAGS,GAAyB,AAAC,GAAe,CAClD,GAAM,GAAK,SAAS,eAAe,OAAO,KAC1C,GAAI,CAAC,EAAI,CACL,QAAQ,IAAI,EAAI,yBAChB,OAGJ,EAAG,YAAc,EAAO,eAAe,GAAM,KAAO,GACpD,EAAO,eAAe,GAAM,CAAC,EAAO,eAAe,IClyBhD,GAAM,IAAmB,AAAC,GAAc,CAC3C,GAAI,GAAe,EAEnB,GAAI,GAAK,EAIL,MAFA,GAAe,GAEX,EAAO,WAAW,KAAO,EAClB,KAGX,IAAgB,EAAI,EAAO,WAAW,GAAK,GACpC,GAGX,GAAI,GAAK,IAAM,EAAI,EAEf,SAAe,GAEf,GAAgB,EAAI,EAAO,aAAa,IAExC,GAAgB,EAAI,EAAO,aAAa,mBAEpC,EAAO,iBAAiB,GAAK,GAC7B,IAAgB,IAGhB,EAAO,iBAAiB,IAAM,GAC9B,IAAgB,IAGhB,EAAO,iBAAiB,IAAM,GAC9B,IAAgB,IAEb,EAGX,GAAI,GAAK,IAAM,EAAI,GAEf,MAAI,KAAM,GACC,KAGX,GAAe,GAEX,EAAO,iBAAiB,GAAK,GAC7B,IAAgB,GAGhB,EAAO,iBAAiB,IAAM,GAC9B,IAAgB,GAGhB,EAAO,iBAAiB,IAAM,GAC9B,IAAgB,IAEb,IAIF,EAAmB,CAAC,EAAW,IAA0B,CAClE,EAAe,GAAgB,KAAqC,GAAO,EAC3E,GAAI,GAAmB,EAEvB,AAAI,GACA,GAAE,eAAoB,EACtB,SAAS,eAAe,uBAAuB,MAAM,QAAU,OAC/D,SAAS,eAAe,kBAAkB,MAAM,QAAU,QAC1D,SAAS,eAAe,kBAAkB,MAAM,QAAU,QAC1D,EAAE,iBAAsB,GAG5B,GAAM,GAAgB,GAAiB,GACvC,AAAI,GAAK,GAAK,GACV,CAAG,EAAO,qBAAqB,IAAM,IACjC,SAAS,eAAe,qBAAqB,YAAc,uDAAyD,EAAQ,YAAY,EAAO,qBAAqB,IAGpK,SAAS,eAAe,qBAAqB,YAAc,IAK/D,EAAI,GAAK,GAAK,IACd,GAAmB,GACnB,AAAG,EAAO,qBAAqB,IAAM,IAAM,EACvC,SAAS,eAAe,qBAAqB,YAAc,sDAAwD,EAAO,EAAQ,gBAAgB,EAAO,qBAAqB,IAAI,EAAE,IAGpL,SAAS,eAAe,qBAAqB,YAAc,IAG/D,EAAI,IACJ,CAAG,EAAO,qBAAqB,IAAM,GACjC,SAAS,eAAe,qBAAqB,YAAc,sDAAwD,EAAO,EAAQ,YAAY,EAAO,qBAAqB,IAAI,EAAE,IAGhL,SAAS,eAAe,qBAAqB,YAAc,IAGnE,GAAI,GAAa,GACX,EAAI,SAAS,eAAe,iBAC5B,EAAI,SAAS,eAAe,mBAC5B,EAAI,SAAS,eAAe,yBAC5B,EAAI,SAAS,eAAe,iBAC5B,EAAI,SAAS,eAAe,iBAAiB,WAAW,GACxD,EAAI,SAAS,eAAe,iBAAiB,WAAW,GACxD,EAAI,SAAS,eAAe,iBAAiB,WAAW,GACxD,EAAI,SAAS,eAAe,mBAC5B,EAAI,SAAS,eAAe,uBAC5B,EAAI,SAAS,eAAe,kBAC5B,EAAI,SAAS,eAAe,qBAC5B,EAAI,SAAS,eAAe,qBAC5B,EAAI,SAAS,eAAe,qBAGlC,AAAI,IAAM,GAAK,EAAE,iBAAsB,GACnC,GAAE,YAAc,+BAAiC,EAAO,qBAAqB,GAAK,IAAM,EAAO,GAAiB,eAChH,EAAE,YAAc,oEAChB,EAAE,YAAc,iHAChB,EAAE,YAAc,cAAgB,EAAO,EAAqB,EAAG,EAAO,qBAAqB,KAAO,uBAClG,EAAE,YAAc,0DAChB,EAAE,YAAc,0CAChB,EAAE,YAAc,8CAChB,EAAE,YAAc,qDAChB,EAAE,YAAc,yBAChB,EAAE,YAAc,IAAM,EAAO,GAAK,EAAQ,YAAa,EAAO,qBAAqB,KAAO,UAC1F,EAAE,YAAc,IAAM,EAAO,GAAK,EAAQ,YAAa,EAAO,qBAAqB,KAAO,gBAC1F,EAAE,YAAc,IAAM,EAAO,IAAO,EAAQ,YAAa,EAAO,qBAAqB,IAAK,EAAG,IAAQ,kCAErG,IAAM,GAAK,EAAE,iBAAsB,GACnC,GAAE,YAAc,gCAAkC,EAAO,qBAAqB,GAAK,IAAM,EAAO,GAAiB,eACjH,EAAE,YAAc,yDAChB,EAAE,YAAc,qGAChB,EAAE,YAAc,cAAgB,EAAO,EAAqB,EAAG,EAAO,qBAAqB,KAAO,uBAClG,EAAE,YAAc,kCAChB,EAAE,YAAc,yCAChB,EAAE,YAAc,sCAChB,EAAE,YAAc,mDAChB,EAAE,YAAc,0BAChB,EAAE,YAAc,IAAM,EAAO,EAAI,EAAQ,YAAa,EAAO,qBAAqB,KAAO,gBACzF,EAAE,YAAc,IAAM,EAAO,EAAI,EAAQ,YAAa,EAAO,qBAAqB,KAAO,kBACzF,EAAE,YAAc,IAAM,EAAO,IAAO,EAAQ,YAAa,EAAO,qBAAqB,IAAK,EAAG,IAAQ,uBAErG,IAAM,GAAK,EAAE,iBAAsB,GACnC,GAAE,YAAc,0BAA4B,EAAO,qBAAqB,GAAK,IAAM,EAAO,GAAiB,eAC3G,EAAE,YAAc,qEAChB,EAAE,YAAc,oFAChB,EAAE,YAAc,cAAgB,EAAO,EAAqB,EAAG,EAAO,qBAAqB,KAAO,uBAClG,EAAE,YAAc,wDAChB,EAAE,YAAc,wEAChB,EAAE,YAAc,iEAChB,EAAE,YAAc,kDAChB,EAAE,YAAc,oBAChB,EAAE,YAAc,aAAe,EAAO,IAAO,EAAO,qBAAqB,GAAI,EAAG,IAChF,EAAE,YAAc,IAAM,EAAO,GAAM,EAAQ,YAAa,EAAO,qBAAqB,IAAK,EAAG,IAAQ,IACpG,EAAE,YAAc,IAAM,EAAO,IAAO,EAAQ,YAAa,EAAO,qBAAqB,IAAK,EAAG,IAAQ,QAErG,IAAM,GAAK,EAAE,iBAAsB,GACnC,GAAE,YAAc,sBAAwB,EAAO,qBAAqB,GAAK,IAAM,EAAO,GAAiB,eACvG,EAAE,YAAc,gFAChB,EAAE,YAAc,+HAChB,EAAE,YAAc,cAAgB,EAAO,EAAqB,EAAG,EAAO,qBAAqB,KAAO,uBAClG,EAAE,YAAc,+DAChB,EAAE,YAAc,8DAChB,EAAE,YAAc,uCAChB,EAAE,YAAc,OAChB,EAAE,YAAc,gBAChB,EAAE,YAAc,sBAAwB,EAAO,EAAI,EAAQ,YAAa,EAAO,qBAAqB,KACpG,EAAE,YAAc,qBAAuB,EAAO,EAAI,EAAQ,YAAa,EAAO,qBAAqB,KACnG,EAAE,YAAc,wBAA0B,EAAO,GAAM,EAAQ,YAAa,EAAO,qBAAqB,IAAK,EAAG,IAAQ,KAExH,IAAM,GAAK,EAAE,iBAAsB,GACnC,GAAE,YAAc,iCAAmC,EAAO,qBAAqB,GAAK,IAAM,EAAO,GAAiB,eAClH,EAAE,YAAc,gDAChB,EAAE,YAAc,4GAChB,EAAE,YAAc,cAAgB,EAAO,EAAqB,EAAG,EAAO,qBAAqB,KAAO,uBAClG,EAAE,YAAc,oEAChB,EAAE,YAAc,+CAChB,EAAE,YAAc,GAChB,EAAE,YAAc,OAChB,EAAE,YAAc,2BAChB,EAAE,YAAc,eAAiB,EAAO,GAAM,EAAQ,YAAa,EAAO,qBAAqB,IAAM,IAAK,EAAG,IAC7G,EAAE,YAAc,uBAAyB,EAAO,KAAK,IAAI,GAAI,EAAQ,YAAa,EAAO,qBAAqB,MAC9G,EAAE,YAAc,IAEhB,IAAM,GAAK,EAAE,iBAAsB,GACnC,GAAE,YAAc,2BAA6B,EAAO,qBAAqB,GAAK,IAAM,EAAO,GAAiB,eAC5G,EAAE,YAAc,4DAChB,EAAE,YAAc,sGAChB,EAAE,YAAc,cAAgB,EAAO,EAAqB,EAAG,EAAO,qBAAqB,GAAI,IAAM,+BACrG,EAAE,YAAc,0CAChB,EAAE,YAAc,kCAChB,EAAE,YAAc,oCAChB,EAAE,YAAc,eAChB,EAAE,YAAc,qBAChB,EAAE,YAAc,mBAAqB,EAAO,KAAK,IAAI,KAAO,EAAQ,gBAAiB,EAAO,qBAAqB,KAAM,EAAG,IAC1H,EAAE,YAAc,QAAU,EAAO,GAAK,EAAQ,gBAAiB,EAAO,qBAAqB,KAAO,IAClG,EAAE,YAAc,IAAM,EAAO,EAAI,EAAQ,gBAAiB,EAAO,qBAAqB,KAAO,8BAE7F,IAAM,GAAK,EAAE,iBAAsB,GACnC,GAAE,YAAc,4CAA8C,EAAO,qBAAqB,GAAK,IAAM,EAAO,GAAiB,eAC7H,EAAE,YAAc,wCAChB,EAAE,YAAc,wHAChB,EAAE,YAAc,cAAgB,EAAO,EAAqB,EAAG,EAAO,qBAAqB,GAAG,IAAM,+BACpG,EAAE,YAAc,+DAChB,EAAE,YAAc,iCAChB,EAAE,YAAc,uCAChB,EAAE,YAAc,iFAChB,EAAE,YAAc,sCAChB,EAAE,YAAc,eAAiB,EAAO,EAAI,IAAO,EAAQ,gBAAiB,EAAO,qBAAqB,IAAK,EAAG,IAChH,EAAE,YAAc,QAAU,EAAO,GAAK,EAAQ,gBAAiB,EAAO,qBAAqB,KAAO,IAClG,EAAE,YAAc,QAAU,EAAO,GAAK,EAAQ,gBAAiB,EAAO,qBAAqB,KAAO,KAElG,IAAM,GAAK,EAAE,iBAAsB,GACnC,GAAE,YAAc,uBAAyB,EAAO,qBAAqB,GAAK,IAAM,EAAO,GAAiB,eACxG,EAAE,YAAc,4DAChB,EAAE,YAAc,yHAChB,EAAE,YAAc,cAAgB,EAAO,EAAqB,EAAG,EAAO,qBAAqB,GAAG,IAAM,+BACpG,EAAE,YAAc,uCAChB,EAAE,YAAc,iCAChB,EAAE,YAAc,qCAChB,EAAE,YAAc,oFAChB,EAAE,YAAc,iBAChB,EAAE,YAAc,IAAM,EAAO,IAAO,EAAQ,gBAAiB,EAAO,qBAAqB,IAAK,EAAG,IACjG,EAAE,YAAc,IAAM,EAAO,GAAK,EAAQ,gBAAiB,EAAO,qBAAqB,IAAK,EAAG,IAAQ,QACvG,EAAE,YAAc,IAAM,EAAO,EAAI,EAAQ,gBAAiB,EAAO,qBAAqB,IAAK,EAAG,IAAQ,+BAEtG,IAAM,GAAK,EAAE,iBAAsB,GACnC,GAAE,YAAc,yBAA2B,EAAO,qBAAqB,GAAK,IAAM,EAAO,GAAiB,eAC1G,EAAE,YAAc,qDAChB,EAAE,YAAc,yHAChB,EAAE,YAAc,cAAgB,EAAO,EAAqB,EAAG,EAAO,qBAAqB,GAAI,IAAM,uBACrG,EAAE,YAAc,+BAChB,EAAE,YAAc,6CAChB,EAAE,YAAc,8BAChB,EAAE,YAAc,0EAChB,EAAE,YAAc,mBAChB,EAAE,YAAc,IAAM,EAAO,EAAQ,gBAAiB,EAAO,qBAAqB,KAAO,eACzF,EAAE,YAAc,IAAM,EAAO,KAAK,IAAI,IAAK,EAAQ,gBAAiB,EAAO,qBAAqB,KAAM,EAAG,IAAQ,aACjH,EAAE,YAAc,IAAM,EAAO,GAAK,EAAQ,gBAAiB,EAAO,qBAAqB,IAAK,EAAG,IAAQ,SAEvG,IAAM,IAAM,EAAE,iBAAsB,IACpC,GAAE,YAAc,2BAA6B,EAAO,qBAAqB,IAAM,IAAM,EAAO,GAAiB,eAC7G,EAAE,YAAc,oDAChB,EAAE,YAAc,sHAChB,EAAE,YAAc,cAAgB,EAAO,EAAqB,EAAG,EAAO,qBAAqB,GAAI,KAAO,uBACtG,EAAE,YAAc,gDAChB,EAAE,YAAc,sCAChB,EAAE,YAAc,0CAChB,EAAE,YAAc,mCAChB,EAAE,YAAc,qBAChB,EAAE,YAAc,IAAM,EAAO,IAAM,EAAQ,gBAAiB,EAAO,qBAAqB,MAAQ,WAChG,EAAE,YAAc,IAAM,EAAO,EAAI,EAAQ,gBAAiB,EAAO,qBAAqB,MAAQ,yBAC9F,EAAE,YAAc,IAAM,EAAO,GAAK,EAAQ,gBAAiB,EAAO,qBAAqB,KAAM,EAAG,IAAQ,iCAExG,IAAM,IAAM,EAAE,iBAAsB,IACpC,GAAE,YAAc,6BAA+B,EAAO,qBAAqB,IAAM,IAAM,EAAO,GAAiB,eAC/G,EAAE,YAAc,8DAChB,EAAE,YAAc,oKAChB,EAAE,YAAc,sDAAwD,EAAO,EAAqB,EAAG,EAAO,qBAAqB,KAAO,UAC1I,EAAE,YAAc,iCAChB,EAAE,YAAc,0CAChB,EAAE,YAAc,8BAChB,EAAE,YAAc,mEAChB,EAAE,YAAc,2BAChB,EAAE,YAAc,IAAM,EAAO,GAAK,EAAQ,YAAa,EAAO,qBAAqB,MAAQ,mBAC3F,EAAE,YAAc,cAAgB,EAAO,EAAQ,IAAI,IAAK,EAAQ,YAAa,EAAO,qBAAqB,OACzG,EAAE,YAAc,IAAM,EAAO,GAAK,EAAQ,YAAa,EAAO,qBAAqB,MAAQ,iBAE3F,IAAM,IAAM,EAAE,iBAAsB,IACpC,GAAE,YAAc,iCAAmC,EAAO,qBAAqB,IAAM,IAAM,EAAO,GAAiB,eACnH,EAAE,YAAc,yCAChB,EAAE,YAAc,kHAChB,EAAE,YAAc,sDAAwD,EAAO,EAAqB,EAAG,EAAO,qBAAqB,KAAO,UAC1I,EAAE,YAAc,4BAChB,EAAE,YAAc,4BAChB,EAAE,YAAc,yCAChB,EAAE,YAAc,2FAChB,EAAE,YAAc,+BAChB,EAAE,YAAc,IAAM,EAAO,GAAK,EAAQ,YAAa,EAAO,qBAAqB,MAAQ,cAC3F,EAAE,YAAc,IAAM,EAAO,GAAK,EAAQ,YAAa,EAAO,qBAAqB,MAAQ,cAC3F,EAAE,YAAc,IAAM,EAAO,EAAQ,YAAa,EAAO,qBAAqB,MAAQ,6BAEtF,IAAM,IAAM,EAAE,iBAAsB,IACpC,GAAE,YAAc,uBAAyB,EAAO,qBAAqB,IAAM,IAAM,EAAO,GAAiB,eACzG,EAAE,YAAc,iCAChB,EAAE,YAAc,iHAChB,EAAE,YAAc,sDAAwD,EAAO,EAAqB,EAAG,EAAO,qBAAqB,KAAO,UAC1I,EAAE,YAAc,0CAChB,EAAE,YAAc,8CAChB,EAAE,YAAc,4CAChB,EAAE,YAAc,+DAChB,EAAE,YAAc,qBAChB,EAAE,YAAc,IAAM,EAAO,IAAM,IAAM,KAAK,IAAI,KAAO,EAAQ,YAAa,EAAO,qBAAqB,MAAM,EAAE,IAAQ,mBAC1H,EAAE,YAAc,IAAM,EAAO,EAAI,EAAQ,YAAa,EAAO,qBAAqB,MAAQ,sBAC1F,EAAE,YAAc,IAAM,EAAO,EAAI,EAAQ,YAAa,EAAO,qBAAqB,MAAQ,mBAE1F,IAAM,IAAM,EAAE,iBAAsB,IACpC,GAAE,YAAc,4BAA8B,EAAO,qBAAqB,IAAM,IAAM,EAAO,GAAiB,eAC9G,EAAE,YAAc,uFAChB,EAAE,YAAc,mHAChB,EAAE,YAAc,sDAAwD,EAAO,EAAqB,EAAG,EAAO,qBAAqB,KAAO,UAC1I,EAAE,YAAc,gEAChB,EAAE,YAAc,mDAChB,EAAE,YAAc,+BAChB,EAAE,YAAc,+EAChB,EAAE,YAAc,0BAChB,EAAE,YAAc,IAAM,EAAO,GAAK,EAAQ,YAAa,EAAO,qBAAqB,MAAQ,UAC3F,EAAE,YAAc,IAAM,EAAO,EAAI,EAAO,qBAAqB,KAAO,YACpE,EAAE,YAAc,IAAM,EAAO,IAAM,EAAQ,YAAa,EAAO,qBAAqB,MAAQ,iBAE5F,IAAM,IAAM,EAAE,iBAAsB,IACpC,GAAE,YAAc,4BAA8B,EAAO,qBAAqB,IAAM,IAAM,EAAO,GAAkB,eAC/G,EAAE,YAAc,sDAChB,EAAE,YAAc,6EAChB,EAAE,YAAc,SAAW,EAAO,EAAqB,EAAG,EAAO,qBAAqB,GAAI,KAAO,sDACjG,EAAE,YAAc,oBAChB,EAAE,YAAc,2BAChB,EAAE,YAAc,wCAChB,EAAE,YAAc,yBAChB,EAAE,YAAc,oCAChB,EAAE,YAAc,GAChB,EAAE,YAAc,GAChB,EAAE,YAAc,IAEpB,GAAM,GAAc,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KACvD,EAAc,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KACzD,EAAc,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9D,EAAe,EACnB,AAAG,GAAK,GACJ,CAAG,EAAO,4BAA4B,IAAM,IAAK,EAAe,EAAY,GACvE,AAAG,EAAO,4BAA4B,IAAM,GAAI,EAAe,EAAY,GAC3E,EAAe,EAAY,IAEjC,EAAI,GAAK,GAAK,IACb,CAAG,EAAO,4BAA4B,IAAM,GAAI,EAAe,EAAY,GACtE,AAAG,EAAO,4BAA4B,IAAM,GAAI,EAAe,EAAY,GAC3E,EAAe,EAAY,IAEhC,GACA,GAAE,YAAc,IAEhB,EAAO,iBAAmB,GAC1B,GAAa,SACb,EAAE,MAAM,MAAQ,QAEhB,EAAO,qBAAqB,IAAM,EAAO,4BAA4B,IAAM,EAAO,4BAA4B,GAAK,GAAiB,GAAe,EAAO,eAAiB,GAC3K,GAAE,YAAc,QAAU,KAAK,MAAM,EAAmB,EAAO,4BAA4B,GAAK,GAAK,EAAI,EAAO,aAAa,GAAK,EAAO,aAAa,IAAM,EAAO,aAAa,IAAM,EAAO,aAAa,IAAM,EAAO,aAAa,KAAO,IAAM,EAAa,sDAE/P,EAAO,qBAAqB,IAAM,EAAO,4BAA4B,IAAM,EAAO,4BAA4B,GAAK,GAAiB,GAAe,EAAO,gBAAkB,GAC3K,GAAE,YAAc,iCAAqC,GAAI,EAAK,EAAI,GAAK,iDAAmD,EAAe,KAEzI,EAAO,qBAAqB,IAAM,EAAO,4BAA4B,IAAM,EAAO,4BAA4B,GAAK,IAAM,EAAI,IAC7H,GAAE,YAAc,0EAGnB,GAAK,IAAM,EAAO,WAAW,KAAO,EAChC,UAAS,eAAe,6BAA6B,MAAM,QAAU,QAAS,SAAS,eAAe,6BAA6B,MAAM,OAAS,mBACnJ,SAAS,eAAe,6BAA6B,MAAM,QAAU,OAEzE,GAAI,GAAc,KAClB,AAAK,EAAO,qBAAqB,IAC7B,GAAc,MACd,SAAS,eAAe,6BAA6B,MAAM,OAAS,iBAExE,SAAS,eAAe,6BAA6B,YAAc,0BAA4B,EAAI,KAAO,EAAc,IAExH,GAAM,GAAO,SAAS,eAAe,4BACrC,AAAC,EAAO,qBACH,GAAK,YAAc,4BAA6B,EAAK,MAAM,OAAS,kBACpE,GAAK,YAAc,6BAA8B,EAAK,MAAM,OAAS,kBAGjE,GAAyB,AAAC,GAAe,CAClD,AAAI,EAAO,iBAAiB,gBAAkB,GAC1C,GAAE,WAAgB,EAClB,EAAE,WAAgB,EAClB,EAAE,WAAgB,EAClB,EAAE,WAAgB,EAClB,EAAE,WAAgB,EAClB,EAAO,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEnD,EAAE,kBAAuB,GAAI,GAAQ,KACjC,GAAK,GACL,GAAE,mBAAwB,GAAI,GAAQ,MAEtC,GAAK,IACL,GAAE,uBAA4B,GAAI,GAAQ,MAE9C,KAGS,GAAwB,IAAM,CACvC,SAAS,eAAe,kBAAkB,YAAc,EAAO,gBACzD,wBACA,uBAEN,EAAO,gBAAkB,CAAC,EAAO,iBAGxB,GAA0B,CAAC,EAAiB,IAAyB,CAC9E,GAAI,GAAa,EAAI,GACrB,AAAI,GAAW,GACX,GAAa,GAEb,EAAO,iBAAmB,GAC1B,EAAO,OAAO,IAAI,EAAI,KAAK,MAAM,EAAe,GAAc,IAAM,MAK/D,GAA0C,CAAC,EAAc,EAAqB,EAAU,IAAM,CACvG,GAAI,GAAwB,KAAK,IAC7B,EACA,EAAE,0BAA6B,EAAO,gBAAgB,IAAO,GAAI,EAAO,iBAAiB,GAAK,MAMlG,OAJI,IAAY,IAEZ,GAAwB,GAEpB,OACC,YACD,UAAyB,EAAE,mBAAsB,4BAEhD,GAAe,GACZ,GAAyB,KAAK,IAAI,EAAI,EAAa,IAAM,KAAK,IAAI,GAAI,GACtE,GAAyB,KAAK,IAAI,EAAI,EAAa,GAEnD,GAAe,KACf,IAAyB,GAAK,KAAK,IAAI,EAAc,IAAM,IAE3D,GAAe,KACf,IAAyB,MAErB,MACP,gBACD,MAAI,IAAe,KAAQ,KAAY,GAAK,IAAY,KACpD,IAAyB,KAAK,IAAI,KAAO,GAAc,KAAQ,GAAK,GAAc,KAAO,MAEzF,GAAe,IACf,CAAI,IAAY,EACZ,GAAyB,IACxB,AAAI,GAAW,EAChB,GAAyB,GACxB,AAAI,GAAW,EAChB,GAAyB,GAEzB,GAAyB,GAE7B,GAAe,IACf,CAAI,IAAY,EACZ,GAAyB,GACxB,AAAI,IAAY,EACjB,GAAyB,GACxB,AAAI,IAAY,EACjB,GAAyB,EAEzB,GAAyB,GAE7B,GAAe,IACf,CAAG,IAAY,EACX,GAAyB,GACxB,AAAG,IAAY,EAChB,GAAyB,GACxB,AAAG,IAAY,EAChB,GAAyB,EAEzB,GAAyB,GAE7B,GAAe,IACX,KAAY,GAAK,IAAY,KAC7B,IAAyB,KAAK,IAAI,IAAO,GAAc,IAAO,GAAI,IAAO,EAAO,aAAa,eAAiB,KAElH,GAAe,IACf,IAAyB,KAAK,IAAI,EAAI,EAAa,GAAK,KAExD,EAAc,IACd,IAAyB,KAAK,IAAI,KAAK,IAAI,EAAI,EAAa,GAAI,KAAK,IAAI,OAAQ,KAErF,GAAyB,EAAE,mBAAsB,gCAC1C,MACN,YACD,MAAI,KAAY,GACX,GAAe,GACZ,GAA0B,EAAK,GAAI,GAAe,GAClD,GAA0B,EAAI,EAGlC,GAAyB,KAAK,IAAI,IAAM,GAEpC,IAOP,EAAU,CAAC,EAAmD,IAAwB,CAC/F,GAAI,GAAY,EAChB,OAAQ,OACC,YACD,UAAa,KAAK,IAAI,IAAK,GAC3B,GAAa,EAAI,GAAM,MAAK,IAAI,IAAM,KAAK,IAAI,IAAK,IAAgB,KACpE,GAAa,EAAI,IAAO,MAAK,IAAI,IAAM,GAAe,KAC9C,MACP,gBACD,UAAa,KAAK,IAAI,GAAI,GAC1B,GAAa,EAAI,EAAK,MAAK,IAAI,GAAI,KAAK,IAAI,GAAI,IAAgB,IAChE,GAAa,EAAI,GAAM,MAAK,IAAI,GAAI,GAAe,IAC3C,MACP,YACD,UAAa,KAAK,IAAI,GAAI,GAC1B,GAAa,EAAI,EAAK,MAAK,IAAI,GAAI,GAAe,IAC1C,IAIP,EAAuB,CAAC,EAAmB,EAAoB,EAAU,IAAM,CACxF,GAAM,GAAO,EAAE,0BAA6B,EAAU,GACtD,GAAI,GAAa,EACb,MAAO,GAAQ,IAAI,GAAI,EAAO,GAAwC,YAAa,EAAY,IAC5F,GAAI,GAAa,GAAI,CACxB,GAAI,GAAe,EACnB,MAAI,KAAc,IACd,GAAgB,IAAO,GAAO,WAAW,KAAO,EAAO,WAAW,KAAO,EAAO,WAAW,KAAO,EAAO,WAAW,MAAQ,IAAM,EAAO,aAAa,eAEnJ,EAAQ,IAAI,GAAK,GAAO,GAAgB,GAAwC,gBAAiB,EAAY,QACjH,IAAI,GAAa,GACpB,MAAO,IAAwC,YAAa,EAAY,GACrE,GAAI,IAAc,GACrB,MAAO,GAAQ,IAAI,GAAI,EAAI,KAAK,IAAI,GAAI,IAAM,GAAwC,YAAa,EAAY,MAW1G,GAAoB,AAAC,GAAe,CAE7C,GACI,EAAO,WAAW,OAAS,GAC3B,CAAC,EAAO,qBACR,OAGA,EAAE,6BAAkC,EAGxC,GAAM,GAAgB,EAAO,iBAAiB,gBAAkB,EAAI,gBAAkB,eAGlF,EAAS,OAiBb,GAhBA,AAAI,EAAO,iBAAiB,gBAAkB,GAC1C,EAAO,iBAAiB,eAAiB,EAErC,EAAS,OAEZ,AAAI,EAAO,qBAAuB,EAEnC,EAAS,QAIT,EAAS,QAKT,EAAE,6BAAkC,EAAO,mBAAmB,MAAQ,IAAW,OAAQ,CAEzF,EAAO,oBAAsB,EAG7B,EAAE,4BAAiC,EAG/B,EAAO,mBAAqB,IAC5B,GAAO,mBAAqB,EAC5B,GAA4B,UAI5B,IAAkB,gBAClB,EAAW,YAAa,OAAW,IAEnC,IAAkB,iBAClB,EAAW,yBAA0B,OAAW,IAIpD,GAA4B,SAC5B,OAIJ,GAAI,EAAE,6BAAkC,EAAO,mBAAmB,OAAS,IAAW,QAAS,CAG3F,EAAE,4BAAiC,EAInC,GAAI,GAAiB,EACrB,OAAW,KAAQ,GAAO,qBAAqB,MAAM,EAAE,IAEnD,GAAI,CAAC,EAAM,QACN,OAMT,GAAI,GAAkB,GAAI,CACtB,KACA,OAIJ,EAAO,mBAAqB,EAC5B,GAAiB,EAAO,mBAAoB,IAG5C,GAA4B,QAC5B,OAIJ,GAAI,EAAE,6BAAkC,EAAO,mBAAmB,OAAS,IAAW,QAAS,CAG3F,EAAE,4BAAiC,EAKnC,GAAI,GAAiB,EAAO,mBAC5B,OAAS,GAAQ,EAAgB,GAAS,IAClC,EAAC,EAAO,qBAAqB,IAC5B,EAAO,qBAAqB,KAAW,GAAiB,IAFnB,IAGrC,GAAkB,EAO3B,GAAI,EAAiB,GAAI,CACrB,EAAO,mBAAqB,EAC5B,OAIJ,EAAO,mBAAqB,EAC5B,GAAiB,EAAO,mBAAoB,IAG5C,GAA4B,QAC5B,SAIK,GAA6B,IAAM,CAC5C,GAAM,GAAM,CACR,EAAI,EAAE,IAAQ,EAAmB,aACjC,EAAI,IAAO,EAAO,iBAAiB,KAEvC,MAAO,GAAgB,ICpkB3B,GAAM,IAAsB,AAAC,GAClB,EAAO,MAAO,IAAa,SAAW,GAAI,GAAQ,GAAY,GAInE,GAA6B,CAAC,EAAyB,IAErD,MAAO,IAAa,SACb,GAAoB,GAG3B,MAAQ,IAAc,UAAY,EAAO,sBAAwB,EAAK,UAAY,EAC9E,IAAa,EACN,UAIJ,EAAO,EAAW,EAAK,QAAS,EAAG,EAAW,KAAQ,KAE1D,EAAO,GAIZ,GAQF,CACA,UAAW,CACP,IAAK,wBACL,UAAW,GACX,SAAU,aAEd,UAAW,CACP,IAAK,yBACL,UAAW,GACX,SAAU,aAEd,UAAW,CACP,IAAK,wBACL,UAAW,GACX,SAAU,aAEd,SAAU,CACN,IAAK,uBACL,UAAW,GACX,SAAU,YAEd,OAAQ,CACJ,IAAK,sBACL,UAAW,GACX,SAAU,UAEd,cAAe,CACX,IAAK,4BACL,UAAW,GACX,SAAU,mBAEd,cAAe,CACX,IAAK,4BACL,UAAW,GACX,SAAU,kBACV,OAAQ,IAAM,EAAO,qBAAqB,IAAM,GAEpD,SAAU,CACN,IAAK,uBACL,UAAW,GACX,SAAU,cAEd,iBAAkB,CACd,IAAK,6BACL,UAAW,GACX,SAAU,iBACV,OAAQ,IAAM,EAAO,qBAAqB,IAAM,GAEpD,cAAe,CACX,IAAK,yBACL,UAAW,GACX,SAAU,aACV,OAAQ,IAAM,EAAO,aAAa,KAAO,IAK3C,GAA4C,CAC9C,YAAa,YACb,YAAa,WAAY,SACzB,WAAY,gBAAiB,gBAAiB,mBAAoB,iBAIhE,GAA8C,CAChD,aAAgB,CAAC,IAAK,6BACtB,SAAY,CAAC,IAAK,0CAClB,UAAa,CAAC,IAAK,2CACnB,YAAe,CAAC,IAAK,6CACrB,OAAU,CAAC,IAAK,8BAId,GAAqD,CACvD,KAAQ,mBACR,MAAS,oBACT,OAAU,sBAIR,GAA+B,CACjC,oCACA,iCACA,8BACA,qCACA,2CACA,+BACA,gCACA,6BACA,yCAGE,GAA+B,CACjC,6BACA,6BACA,0BACA,2CACA,oCACA,8BACA,oBACA,yBACA,+BAIE,GAAwB,AAAC,GAAgB,CAC3C,GAAI,GACJ,MAAQ,GAAI,EAAI,MAAM,eAAiB,KAAO,IAAI,EAAE,KAAO,GAIzD,GAAkB,CAAC,EAAoB,IAAiC,CAK1E,IAJI,EAAO,QAAQ,KAAc,QAC7B,GAAO,QAAQ,GAAY,IAGxB,EAAO,QAAQ,GAAU,OAAU,EAAO,gBAAkB,GAC/D,EAAO,QAAQ,GAAU,QAG7B,EAAO,QAAQ,GAAU,KAAK,GAC9B,GAAuB,EAAU,IAGrC,GAAU,GAAG,aAAc,IAG3B,GAAM,IAAyB,CAAC,EAAoB,IAAiC,CACjF,GAAM,GAAM,GAAsB,EAAU,GAEtC,EAAQ,AADA,SAAS,eAAe,GAAyB,IAC3C,cAAc,SAElC,IADA,EAAM,aAAa,EAAK,EAAM,WAAW,IAClC,EAAM,WAAW,OAAS,EAAO,iBACpC,EAAM,YAAY,EAAM,YAK1B,GAAwB,CAC1B,EACA,IACC,CACD,GAAI,GAAW,EACT,EAAM,SAAS,cAAc,MAC/B,EAAiB,GAEf,EAAW,GAAa,EAAK,MAGnC,GAAkB,sCADA,GAAI,MAAK,EAAK,MAAM,+BAC0C,EAAS,QAAQ,GAAgB,EAAK,QAAS,WAG/H,GAAM,GAAkB,GAClB,EAAmB,EACzB,GAAkB,QAAQ,AAAC,GAAa,CACpC,GAAI,OAAO,UAAU,eAAe,KAAK,EAAM,GAAW,CACtD,GAAM,GAAW,GAAa,GAC9B,GAAI,EAAS,QAAU,CAAC,EAAS,OAAO,GACpC,OAEJ,GAAM,GAAY,EAAS,WAAc,KAAM,IACzC,EAAM,aAAa,EAAS,kBAAkB,EAAS,eAAe,EAAS,aAAa,EAAU,EAAiB,GAAW,KAExI,EAAM,KAAK,MAMnB,GAAM,GAAkB,GACxB,GAAI,EAAK,OAAS,eAAgB,CAC9B,GAAM,GAAW,GAA+B,EAAK,0BAC/C,EAAW,GAA+B,EAAK,yBAC/C,EAAO,EAAW,EACxB,EAAM,KACF,gCAAgC,EAAO,EAAU,EAAG,YAAe,EAAO,EAAU,EAAG,iEAAoE,EAAO,EAAM,EAAG,aAC3K,iBAAiB,GAAoB,EAAK,kFAAkF,GAAsB,GAAoB,EAAK,kBAC3K,gBAAgB,EAAO,EAAK,yEAAyE,EAAO,EAAK,gCAE9G,EAAK,OAAS,SAAU,CAC/B,EAAM,KACF,oGAAoG,EAAK,kBAG7G,GAAM,GAAc,GAA8B,GAClD,AAAI,IAAgB,MAChB,GAAM,KAAK,EAAY,IACvB,EAAM,KAAK,EAAY,KAW/B,UAAY,EAAM,OAClB,GAAkB,EAAM,OAAO,CAAC,EAAK,IAC1B,GAAG,6BAA+B,SAC1C,IACH,GAAkB,uCAAuC,EAAI,WAG7D,GAAkB,EAAM,OAAO,CAAC,EAAK,IAC1B,GAAG,8BAAgC,SAC3C,IACH,GAAkB,uCAAuC,EAAI,EAAM,gBAEnE,EAAI,UAAY,EACT,GAIL,GAA8B,CAAC,EAA4B,IAA6B,CAC1F,GAAM,GAAQ,EAAY,cAAc,SAGxC,GAFA,EAAM,UAAY,GAEd,EAAC,EAAO,QAAQ,IAIhB,EAAO,QAAQ,GAAkB,OAAS,EAC1C,OAAS,GAAI,EAAO,QAAQ,GAAkB,OAAS,EAAG,GAAK,EAAG,EAAE,EAAG,CACnE,GAAM,GAAM,GAAsB,EAAkB,EAAO,QAAQ,GAAkB,IACrF,EAAM,YAAY,KAMjB,GAA8B,IAAM,CAC7C,AAAC,OAAO,KAAK,IAAyC,QAClD,GAAO,GAA4B,EAAK,SAAS,eAAe,GAAyB,OAKpF,GAA8B,IAAM,CAC7C,EAAO,qBAAuB,CAAC,EAAO,qBACtC,KACA,GAAM,GAAS,SAAS,eAAe,gCACvC,EAAO,YAAc,eAAkB,GAAO,qBAAuB,KAAO,OAC5E,EAAO,MAAM,YAAc,EAAO,qBAAuB,QAAU,OAIjE,GAAgC,AAAC,GAAoD,CACvF,GAAI,GAAQ,UAAY,EAAO,EAAK,gBAAiB,EAAG,IACpD,EAAc,GAClB,OAAS,GAAI,EAAG,EAAI,GAA6B,OAAQ,EAAE,EAAG,CAC1D,GAAM,GAAgB,EAAI,EAC1B,AAAI,IAAiB,GAAK,iBAAmB,EAAK,gBAAgB,KAAmB,GACjF,IAAe,cAAc,GAA6B,YAAY,GAA6B,cAAc,GAA6B,OAAO,EAAK,gBAAgB,MAGlL,MAAI,GAAK,mBAAqB,QAC1B,IAAS,OAAO,EAAK,oBAGlB,CAAC,EAAO,IC/XZ,GAAM,IAAe,IAAM,CAC9B,GAAI,GAAI,EACJ,EAAI,EACJ,EAAI,EACJ,EAAW,EACf,EAAE,aAAmB,EAAO,mBAAmB,IAAI,EAAO,gBAAiB,MAAM,EAAE,sBAAyB,MAAM,EAAE,cAAiB,MAAM,EAAO,kBAClJ,EAAE,cAAoB,EAAO,oBAAoB,IAAI,EAAO,iBAAkB,MAAM,EAAE,sBAAyB,MAAM,EAAE,cAAiB,MAAM,EAAO,mBACrJ,EAAE,aAAmB,EAAO,mBAAmB,IAAI,EAAO,gBAAiB,MAAM,EAAE,sBAAyB,MAAM,EAAE,gBAAmB,MAAM,EAAO,kBACpJ,EAAE,cAAoB,EAAO,oBAAoB,IAAI,EAAO,iBAAkB,MAAM,EAAE,sBAAyB,MAAM,EAAE,eAAkB,MAAM,EAAO,mBACtJ,EAAE,aAAmB,EAAO,mBAAmB,IAAI,EAAO,gBAAiB,MAAM,EAAE,sBAAyB,MAAM,EAAE,eAAkB,MAAM,EAAO,kBACnJ,EAAE,aAAkB,EAAE,aAAgB,IAAI,EAAE,eAAkB,IAAI,EAAE,cAAiB,IAAI,EAAE,eAAkB,IAAI,EAAE,cAE/G,EAAE,aAAgB,IAAI,OACtB,GAAE,aAAkB,GAAI,GAAQ,IAEhC,EAAE,cAAiB,IAAI,OACvB,GAAE,cAAmB,GAAI,GAAQ,IAEjC,EAAE,aAAgB,IAAI,OACtB,GAAE,aAAkB,GAAI,GAAQ,IAEhC,EAAE,cAAiB,IAAI,OACvB,GAAE,cAAmB,GAAI,GAAQ,IAEjC,EAAE,aAAgB,IAAI,OACtB,GAAE,aAAkB,GAAI,GAAQ,IAGpC,EAAE,iBAAsB,EAAE,aAAgB,MAAM,IAE5C,EAAO,iBAAiB,gBAAkB,GAC1C,GAAI,EAAI,KAAK,IAAK,EAAI,EAAO,qBAAqB,GAAK,GAAK,IAE5D,EAAO,iBAAiB,gBAAkB,GAC1C,GAAI,MAEJ,EAAO,iBAAiB,YAAc,IACtC,GAAI,MAGJ,EAAO,iBAAiB,YAAc,IACtC,IAAK,IAAO,GAAI,EAAI,EAAI,EAAO,qBAAqB,KACpD,GAAK,KAAK,IAAI,KAAM,KAAK,IAAI,EAAG,EAAY,EAAO,sBAAwB,EAAO,qBAAqB,IAAM,EAAO,qBAAqB,IAAM,EAAO,qBAAqB,IAAM,EAAO,qBAAqB,IAAM,EAAO,qBAAqB,IAAM,EAAI,EAAO,aAAa,OAE7Q,EAAO,qBAAqB,GAAK,GACjC,IAAK,OAET,GAAI,GAAW,EACf,GAAY,EACZ,GAAa,EAAI,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,IAAM,EAAO,WAAW,IAAM,EAAI,IAAM,EAAO,WAAW,IAClL,GAAa,EAAI,IAAO,KAAQ,GAAO,aAAa,IAAM,EAAO,aAAa,IAAM,EAAI,EAAO,aAAa,KAAO,KAAK,IAAI,EAAO,gBAAiB,MACpJ,GAAY,KAAK,IAAI,KAAO,EAAQ,gBAAiB,EAAO,qBAAqB,KACjF,GAAa,KAAQ,KAAQ,KAAK,IAAI,EAAG,CAAE,GAAE,WAAgB,EAAE,oBAAyB,KACxF,GAAa,IAAO,IAAO,KAAK,IAAI,EAAG,KAAK,IAAI,EAAI,KAAM,EAAE,YAAiB,OAC7E,GAAa,EAAI,IAAO,EAAO,aAAa,IAAM,IAAO,EAAO,aAAa,IAAM,IAAO,EAAO,aAAa,IAAM,IAAO,EAAO,aAAa,KAAO,IAAO,EAAO,aAAa,KAAO,MAAS,EAAO,aAAa,KAAO,MAAS,EAAO,aAAa,KAAO,MAAS,EAAO,aAAa,KAC7R,GAAY,EACZ,GAAY,KAAK,IAAI,MAAQ,EAAO,aAAa,KAAQ,GAAO,qBAAqB,GAAK,EAAO,qBAAqB,GAAK,EAAO,qBAAqB,GAAK,EAAO,qBAAqB,GAAK,EAAO,qBAAqB,MACzN,GAAa,KAAQ,KAAQ,KAAK,IAAI,IAAM,EAAO,YAAY,EAAE,GAAK,EAAE,WACxE,GAAY,EAAI,KAAK,IAAK,EAAI,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,IAAM,EAAI,GAAK,GAAK,EAAO,qBAAqB,IAAM,EAAO,SAAS,KAAO,GAAM,EAAO,iBAAiB,GAAK,GAAM,EAAO,iBAAiB,IAAO,GAAE,wBAA2B,GAAG,IAC3P,GAAa,EAAI,GAAQ,GAAO,eAAe,EAAE,GAAK,GACtD,GAAY,KAAK,IAAI,IAAM,EAAI,EAAI,KAAK,IAAI,EAAI,EAAO,eAAiB,KAAK,IAAI,IAAM,EAAO,WAAW,MACzG,GAAY,KAAK,IAAI,KAAO,EAAQ,YAAa,EAAO,qBAAqB,MAC7E,GAAa,EAAI,KAAQ,EAAO,WAAW,KAAO,IAClD,GAAa,EAAI,KAAQ,EAAO,aAAa,IAAM,IACnD,GAAY,EAAE,mBAAsB,MAChC,EAAO,SAAS,KAAO,GACvB,IAAY,IAEhB,EAAE,YAAiB,KAAK,MAAM,IAAO,GAAQ,IAAI,KAAM,IAAM,IAAa,EAC1E,GAAM,GAAK,KAAK,IAAI,EAAE,YAAgB,KAAK,MAAM,EAAQ,IAAI,EAAE,aAAgB,IAAI,GAAI,MAEvF,AAAI,EAAO,iBAAiB,YAAc,IAAM,EAAE,aAAkB,OAAS,EAAO,aAAa,KAAO,GACpG,EAAiB,KAGjB,GAAM,GACN,GAAI,KAAK,IAAI,EAAI,GAAK,KAI1B,EAAW,KAAK,IAAI,EAAE,YAAgB,GAAK,IAG3C,EAAE,WAAgB,EAAQ,IAAI,KAAO,EAAM,GAC3C,EAAE,gBAAqB,EAAQ,IAAI,KAAO,EAAa,ICtF3D,GAAM,IAAkB,CACpB,0BACA,yCACA,uCACA,kDACA,gDACA,wCACA,gDACA,6CACA,oDACA,0CACA,4BACA,6CACA,oDACA,sDACA,sDACA,kCACA,oDACA,kCACA,qDACA,+CACA,4BACA,+CACA,oDACA,uDACA,uDACA,oDACA,2EACA,wDACA,uEACA,kEACA,4BACA,wDACA,oDACA,wDACA,0DACA,6CACA,kCACA,+CACA,wDACA,wDACA,4BACA,4CACA,iDACA,qDACA,sDACA,mCACA,mCACA,8CACA,kEACA,kEAGE,GAAe,CACjB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAC9C,IAAM,IAAM,IAAO,IAAO,IAAO,IAAO,IAAM,IAAK,IAAO,MAC1D,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAChD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAGpC,GAAe,CACxB,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5B,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAC/B,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAC/B,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAC/B,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,KAG/B,GAA0B,CAC5B,yDACA,4GACA,kFACA,yEACA,4EACA,wEACA,oEACA,6CACA,+GACA,yFACA,8DACA,iEACA,kFACA,uHACA,2HACA,8DACA,gDACA,wDACA,uFACA,+HACA,kEACA,6EACA,kFACA,kIACA,iJACA,sGACA,wGACA,qFACA,2GACA,wDACA,uDACA,wFACA,4FACA,gGACA,sFACA,8DACA,mDACA,sGACA,mGACA,4DACA,6EACA,qFACA,qEACA,mEACA,oEACA,2CACA,4CACA,wFACA,kEACA,4OAGE,GAAc,CAAC,EAAW,EAAY,IAAM,CAC9C,GAAI,GAAc,EAAE,mBAAwB,IAAK,EACjD,EAAc,KAAK,IAAI,GAAa,EAAE,GAAK,EAAO,aAAa,GAAI,GACnE,GAAM,GAAW,GAA4B,EAAO,aAAa,GAAI,GAAa,EAAE,GAAI,OAAO,EAAO,UAAW,EAAW,GAC5H,MAAO,CAAC,EAAS,GAAG,EAAS,KAGpB,GAAkB,CAAC,EAAW,EAAY,IAAM,CACzD,GAAM,GAAW,GAAY,EAAE,GACzB,EAAI,SAAS,eAAe,mBAC5B,EAAI,SAAS,eAAe,0BAC5B,EAAI,SAAS,eAAe,mBAC5B,EAAI,SAAS,eAAe,oBAElC,EAAE,YAAc,GAAgB,EAAI,GACpC,EAAE,YAAc,GAAwB,EAAI,GAC5C,EAAE,YAAc,SAAW,EAAO,EAAS,GAAI,EAAG,IAAQ,iBAAmB,EAAO,EAAS,GAAG,EAAO,aAAa,GAAG,EAAE,IAAQ,WACjI,EAAE,MAAM,MAAQ,QAChB,EAAE,YAAc,UAAY,EAAO,EAAO,aAAa,GAAI,EAAG,IAAQ,IAAM,EAAO,GAAa,EAAE,GAAI,EAAG,IACzG,EAAE,MAAM,MAAQ,QAEZ,OAAO,EAAO,UAAY,GAAa,EAAE,IACzC,GAAE,MAAM,MAAQ,WAEhB,EAAO,aAAa,KAAO,GAAa,EAAE,IAC1C,GAAE,MAAM,MAAQ,OAChB,EAAE,MAAM,MAAQ,SAIX,GAAsB,AAAC,GAAc,CAC9C,GAAM,GAAI,SAAS,eAAe,UAAY,GAC9C,AAAI,EAAO,aAAa,GAAK,GAAa,EAAE,IACxC,SAAQ,IAAI,YAAe,GAAO,aAAa,GAAK,GAAa,EAAE,IAAM,2BAA6B,EAAI,YAAe,GAAO,aAAa,GAAK,GAAa,EAAE,IAAM,GAAa,EAAE,GAAK,2BAC3L,EAAO,SAAS,IAAK,GAAO,aAAa,GAAK,GAAa,EAAE,IAAM,GAAa,EAAE,IAClF,EAAO,aAAa,GAAK,GAAa,EAAE,IAExC,EAAO,aAAa,KAAO,GAC3B,GAAE,MAAM,gBAAkB,SAE1B,EAAO,aAAa,GAAK,GAAK,EAAO,aAAa,GAAK,GAAa,EAAE,IACtE,GAAE,MAAM,gBAAkB,UAE1B,EAAO,aAAa,KAAO,GAAa,EAAE,IAC1C,GAAE,MAAM,gBAAkB,UAKrB,GAAkB,CAAC,EAAW,EAAY,IAAM,CACzD,GAAM,GAAW,GAAY,EAAE,GAM/B,GALG,OAAO,EAAO,WAAa,EAAS,IAAM,EAAO,aAAa,GAAK,GAAa,EAAE,IACjF,GAAO,SAAS,IAAI,IAAM,IAAM,EAAS,IACzC,EAAO,aAAa,GAAK,EAAS,IAGnC,IAAM,GAAK,EAAO,aAAa,GAAK,EACnC,OAAQ,GAAI,GAAI,GAAK,GAAI,IACrB,EAAO,SAAS,GAAK,EACrB,GAAc,EAAG,IAGzB,AAAG,IAAM,GAAK,EAAO,aAAa,GAAK,GACnC,GAAO,SAAS,IAAM,EACtB,GAAc,GAAI,KAEnB,IAAM,GAAK,EAAO,aAAa,GAAK,GACnC,GAAO,SAAS,KAAO,EACvB,GAAc,IAAK,KAGvB,GAAgB,EAAG,GACnB,GAAoB,GACpB,IACA,MCtMJ,GAAM,IAAsB,CACxB,iDACA,qDACA,qDACA,wDACA,qKACA,oFACA,yDACA,6FACA,yIACA,6LACA,sKACA,6FACA,mDACA,mGACA,iaACA,qQACA,kKACA,wIACA,oGACA,wDAcS,EAAsD,CAC/D,EAAG,CACC,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,IACZ,WAAY,IACZ,UAAW,IACX,SAAU,EACV,SAAU,KAEd,EAAG,CACC,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,IACZ,WAAY,IACZ,UAAW,IACX,SAAU,EACV,SAAU,KAEd,EAAG,CACC,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,IACZ,WAAY,IACZ,UAAW,IACX,SAAU,EACV,SAAU,KAEd,EAAG,CACC,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,IACZ,WAAY,IACZ,UAAW,IACX,SAAU,EACV,SAAU,KAEd,EAAG,CACC,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,IACZ,WAAY,IACZ,UAAW,IACX,SAAU,EACV,SAAU,GAEd,EAAG,CACC,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,IACZ,WAAY,IACZ,UAAW,IACX,SAAU,EACV,SAAU,IAEd,EAAG,CACC,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,IACZ,WAAY,IACZ,UAAW,KACX,SAAU,EACV,SAAU,IAEd,EAAG,CACC,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,IACZ,WAAY,IACZ,UAAW,IACX,SAAU,EACV,SAAU,GAEd,EAAG,CACC,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,KACZ,WAAY,IACZ,UAAW,IACX,SAAU,EACV,SAAU,GAEd,GAAI,CACA,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,KACZ,WAAY,KACZ,UAAW,IACX,SAAU,EACV,SAAU,GAEd,GAAI,CACA,UAAW,KACX,UAAW,KACX,MAAO,KACP,WAAY,KACZ,WAAY,KACZ,UAAW,IACX,SAAU,EACV,SAAU,GAEd,GAAI,CACA,UAAW,MACX,UAAW,KACX,MAAO,KACP,WAAY,KACZ,WAAY,KACZ,UAAW,IACX,SAAU,EACV,SAAU,IAEd,GAAI,CACA,UAAW,MACX,UAAW,KACX,MAAO,KACP,WAAY,KACZ,WAAY,KACZ,UAAW,IACX,SAAU,EACV,SAAU,GAEd,GAAI,CACA,UAAW,MACX,UAAW,KACX,MAAO,KACP,WAAY,KACZ,WAAY,KACZ,UAAW,KACX,SAAU,EACV,SAAU,GAEd,GAAI,CACA,UAAW,MACX,UAAW,KACX,MAAO,KACP,WAAY,KACZ,WAAY,KACZ,UAAW,KACX,SAAU,EACV,SAAU,GAEd,GAAI,CACA,UAAW,MACX,UAAW,MACX,MAAO,EACP,WAAY,EACZ,WAAY,MACZ,UAAW,EACX,SAAU,EACV,SAAU,KAEd,GAAI,CACA,UAAW,MACX,UAAW,MACX,MAAO,EACP,WAAY,EACZ,WAAY,KACZ,UAAW,EACX,SAAU,EACV,SAAU,IAEd,GAAI,CACA,UAAW,MACX,UAAW,MACX,MAAO,EACP,WAAY,EACZ,WAAY,KACZ,UAAW,EACX,SAAU,EACV,SAAU,IAEd,GAAI,CACA,UAAW,MACX,UAAW,MACX,MAAO,EACP,WAAY,EACZ,WAAY,KACZ,UAAW,EACX,SAAU,IACV,SAAU,IAEd,GAAI,CACA,UAAW,MACX,UAAW,MACX,MAAO,KACP,WAAY,KACZ,WAAY,KACZ,UAAW,KACX,SAAU,KAAK,IAAI,EAAG,IAAM,EAC5B,SAAU,IAIZ,GAAuB,AAAC,GAAgF,CAC1G,GAAI,GAAW,EACT,EAAY,CAAC,YAAa,YAAa,QAAS,aAAc,aAAc,YAAa,YACzF,EAAgB,CAAC,iBAAkB,aAAc,WAAY,gBAAiB,gBAAiB,mBAAoB,eACnH,EAAkC,CACpC,UAAW,GACX,UAAW,GACX,MAAO,GACP,WAAY,GACZ,WAAY,GACZ,UAAW,GACX,SAAU,GACV,OAAQ,IAEZ,OAAS,GAAI,EAAG,EAAI,EAAU,OAAS,EAAG,IACtC,AAAI,EAAqB,GAAO,EAAU,KAAO,EAAO,EAAc,KAClE,KACA,EAAO,EAAU,IAAM,IAI/B,MAAI,GAAO,gBAAgB,MAAM,IAAM,GAAK,EAAqB,GAAO,UAAY,IAChF,KACA,EAAO,SAAc,IAGrB,IAAa,EAAU,QAAU,EAAO,iBAAiB,GAAS,EAAqB,GAAO,UAC9F,GAAO,OAAS,IAEb,GAGE,GAA4B,AAAC,GAAkB,CACxD,GAAI,GAAiB,GACrB,AAAI,EAAO,iBAAiB,KAAW,EAAqB,GAAO,UAC/D,GAAiB,UAErB,GAAM,GAAgB,GAAqB,GAC3C,SAAS,eAAe,8BAA8B,YAAc,GAAoB,EAAM,GAC9F,SAAS,eAAe,wBAAwB,YAAc,UAAY,EAAO,EAAO,iBAAiB,IAAU,IAAM,EAAO,EAAqB,GAAO,UAAY,EACxK,SAAS,eAAe,wBAAwB,YAAc,EAAO,EAAO,YAAc,IAAM,EAAO,EAAqB,GAAO,WAAa,aAChJ,SAAS,eAAe,yBAAyB,YAAc,EAAO,EAAO,gBAAkB,IAAM,EAAO,EAAqB,GAAO,WAAa,aACrJ,SAAS,eAAe,oBAAoB,YAAc,EAAO,EAAO,UAAY,IAAM,EAAO,EAAqB,GAAO,OAAS,cACtI,SAAS,eAAe,yBAAyB,YAAc,EAAO,EAAO,eAAiB,IAAM,EAAO,EAAqB,GAAO,YAAc,mBACrJ,SAAS,eAAe,yBAAyB,YAAc,EAAO,EAAO,eAAiB,IAAM,EAAO,EAAqB,GAAO,YAAc,mBACrJ,SAAS,eAAe,wBAAwB,YAAc,EAAO,EAAO,kBAAoB,IAAM,EAAO,EAAqB,GAAO,WAAa,mBACtJ,SAAS,eAAe,yBAAyB,YAAc,EAAO,EAAO,gBAAgB,MAAM,KAAO,IAAM,EAAO,EAAqB,GAAO,SAAU,EAAG,IAAQ,2BAExK,EAAc,UACV,SAAS,eAAe,wBAAwB,MAAM,MAAQ,OAC9D,SAAS,eAAe,wBAAwB,MAAM,MAAQ,UAElE,EAAc,UACV,SAAS,eAAe,yBAAyB,MAAM,MAAQ,OAC/D,SAAS,eAAe,yBAAyB,MAAM,MAAQ,UAEnE,EAAc,MACV,SAAS,eAAe,oBAAoB,MAAM,MAAQ,OAC1D,SAAS,eAAe,oBAAoB,MAAM,MAAQ,UAE9D,EAAc,WACV,SAAS,eAAe,yBAAyB,MAAM,MAAQ,OAC/D,SAAS,eAAe,yBAAyB,MAAM,MAAQ,UAEnE,EAAc,WACV,SAAS,eAAe,yBAAyB,MAAM,MAAQ,OAC/D,SAAS,eAAe,yBAAyB,MAAM,MAAQ,UAEnE,EAAc,UACV,SAAS,eAAe,wBAAwB,MAAM,MAAQ,OAC9D,SAAS,eAAe,wBAAwB,MAAM,MAAQ,UAElE,EAAc,SACV,SAAS,eAAe,yBAAyB,MAAM,MAAQ,OAC/D,SAAS,eAAe,yBAAyB,MAAM,MAAQ,UAE/D,EAAO,iBAAiB,GAAS,EAAqB,GAAO,UAC7D,UAAS,eAAe,wBAAwB,MAAM,MAAQ,OAC9D,EAAc,OACT,UAAS,eAAe,kBAAkB,MAAM,MAAQ,OAAQ,SAAS,eAAe,kBAAkB,YAAc,mCACxH,UAAS,eAAe,kBAAkB,MAAM,MAAQ,UAAW,SAAS,eAAe,kBAAkB,YAAc,kCAGhI,EAAO,iBAAiB,KAAW,EAAqB,GAAO,UAC/D,UAAS,eAAe,wBAAwB,MAAM,MAAQ,OAC9D,SAAS,eAAe,kBAAkB,MAAM,MAAQ,SACxD,SAAS,eAAe,kBAAkB,YAAc,gBAInD,GAA0B,AAAC,GAAc,CAClD,GAAM,GAAI,SAAS,eAAe,UAAU,KAEtC,EAAW,EAAqB,GAAG,SACzC,AAAI,EAAO,iBAAiB,KAAO,EAC/B,EAAE,MAAM,gBAAkB,QAEzB,AAAI,EAAO,iBAAiB,GAAK,GAAK,EAAO,iBAAiB,GAAK,EACpE,EAAE,MAAM,gBAAkB,SAErB,EAAO,iBAAiB,KAAO,GACpC,GAAE,MAAM,gBAAkB,UAKrB,GAAsB,AAAC,GAAkB,CAElD,GAAI,AADkB,GAAqB,GACzB,QACd,GAAO,iBAAiB,IAAU,EAClC,EAAO,gBAAkB,EAAqB,GAAO,UACrD,EAAO,YAAc,EAAqB,GAAO,UACjD,EAAO,SAAS,IAAI,EAAqB,GAAO,OAChD,EAAO,cAAc,IAAI,EAAqB,GAAO,YACrD,EAAO,cAAc,IAAI,EAAqB,GAAO,YACrD,EAAO,iBAAiB,IAAI,EAAqB,GAAO,WACxD,EAAO,gBAAgB,MAAM,MAAM,EAAqB,GAAO,UAE/D,GAAU,KAAK,wBAAyB,EAAqB,IACzD,IAAU,IACV,MAAO,GAAM,uJAGrB,GAA0B,GAC1B,GAAwB,GACxB,KC3WJ,OAAqB,SAYrB,GAAM,IAAW,GAAI,MAAK,eAAe,QAAS,CAC9C,KAAM,UACN,MAAO,UACP,IAAK,UACL,KAAM,UACN,OAAQ,GACR,OAAQ,UACR,OAAQ,YAEN,GAAW,GAAI,MAAK,eAAe,QAAS,CAC9C,KAAM,UACN,MAAO,UACP,IAAK,UACL,KAAM,UACN,OAAQ,GACR,OAAQ,UACR,OAAQ,YAGN,GAAc,CAAC,EAAQ,KAAU,CAEnC,GAAM,GAAY,OAAO,OAAO,GAAI,GAAG,AADxB,GAAQ,GAAW,IAE7B,cAAc,GAAI,OAClB,OAAO,AAAC,GAAM,EAAE,OAAS,WACzB,IAAI,GAAM,GAAG,EAAE,MAAO,EAAE,UAGvB,EAAS,EAAQ,IAAI,EAAU,UAAU,gBAAkB,GACjE,MAAO,GAAG,EAAU,QAAQ,EAAU,SAAS,EAAU,OAAO,EAAU,QAAQ,EAAU,UAAU,EAAU,SAAS,KAGhH,GAAmB,AAAC,GAA4B,CACzD,GAAM,GAAQ,EAAM,MAAM,MAAM,EAAG,KACnC,EAAO,WAAa,GAGlB,GAAe,IAEP,AADA,EAAO,WACL,QAAQ,aAAc,CAAC,EAAG,IAAM,CACxC,OAAQ,OACC,UAAW,MAAO,IAAI,SACtB,OAAQ,MAAO,UACf,SAAU,MAAO,IAAY,OAOjC,GAAkB,SAAY,CACvC,EAAO,YAAc,KAAK,MAC1B,GAAM,GAAY,KAClB,AAAI,EAAU,MAAQ,GAClB,GAAO,OAAO,IAAI,EAAU,MAC5B,EAAO,YAAe,EAAO,YAAe,MAAO,EAAU,UAGjE,KAEA,GAAM,GAAc,EAAiC,YAAY,QAC3D,EAAO,aAAa,QAAQ,gBAClC,GAAI,aAAe,YAAa,EAC5B,KAAM,WAAU,UAAU,UAAU,GAC/B,MAAM,GAAK,QAAQ,MAAM,YACvB,EAAa,CAEpB,GAAM,GAAW,SAAS,cAAc,YACxC,EAAS,MAAQ,EACjB,EAAS,aAAa,QAAS,qCAE/B,SAAS,KAAK,YAAY,GAC1B,EAAS,QACT,EAAS,SACT,GAAI,CACA,SAAS,YAAY,cAChB,EAAP,CACE,QAAQ,MAAM,yCAGlB,SAAS,KAAK,YAAY,OACvB,CACH,GAAM,GAAI,SAAS,cAAc,KACjC,EAAE,aAAa,OAAQ,iCAAmC,GAC1D,EAAE,aAAa,WAAY,MAC3B,EAAE,aAAa,KAAM,gBAIrB,SAAS,KAAK,YAAY,GAC1B,EAAE,QACF,SAAS,KAAK,YAAY,GAG9B,SAAS,eAAe,cAAc,YAAc,EAC9C,iCACA,4BAGG,GAAY,SAAY,CACjC,GAAM,GAAI,OAAO,OAAO,gBAAgB,GAAI,aAAY,IAAI,GAAK,GAC3D,EAAI,OAAO,OAAO,gBAAgB,GAAI,aAAY,IAAI,GAAK,GAGjE,GAAI,CADW,KAAM,IAAO,+DAA+D,KAAK,aAAa,EAAE,QAC/F,EAAI,EAChB,MAAO,GAAM,oCAGjB,GAAM,GAAO,OAAO,OAAO,GAAI,GAAW,CACtC,MAAO,MAAM,KAAK,GAAU,SAGhC,GAAW,aACX,GAAa,EAAG,GAEhB,GAAgB,KAAK,KAAK,UAAU,IAAQ,KAGnC,GAAkB,CAAC,EAAe,EAAQ,KAAU,CAC7D,GAAM,GAAI,WAAS,qBAAqB,GAClC,EAAY,EAAI,KAAK,MAAM,GAAK,KAAK,MAAM,KAAK,IAEtD,MACK,GAAE,aAAe,QAAU,EAAE,aAAe,IAC5C,EAAE,aAAe,IAAS,IAC1B,EAAE,aAAe,OAAS,GAE3B,cAAa,QAAQ,eAAgB,KAAK,KAAK,UAAU,KACzD,aAAa,QAAQ,qBAAsB,KAAK,MAAM,YAE/C,GAAW,IAEX,EAAM,wEAIR,GAAa,SAAY,CAClC,GAAM,GAAQ,KAAM,IAAO;AAAA;AAAA,kEACrB,EAAK,SAAS,eAAe,iBAEnC,GAAI,IAAU,KACV,MAAO,GAAM,4BAEjB,GAAI,IAAU,iBAAmB,CAAC,EAAO,MAAM,IAAI,GAC/C,EAAO,MAAM,IAAI,EAAG,IACpB,EAAO,YAAc,GACrB,EAAO,OAAO,IAAI,IAClB,EAAG,YAAc,wEACV,IAAU,aAAe,EAAO,aAAa,KAAO,EAC3D,EAAiB,KACjB,EAAG,YAAc,2DACV,IAAU,eAAiB,EAAO,aAAa,KAAO,EAC7D,EAAiB,KACjB,EAAG,YAAc,sGACX,IAAU,UAAY,CAAC,EAAO,MAAM,IAAI,IAAK,CACnD,EAAO,MAAM,IAAI,GAAI,IACrB,GAAM,GAAS,KAAK,MAAM,KAAK,SAAY,KAAM,IAAM,GAAK,KAC5D,EAAO,OAAO,IAAI,GAClB,EAAG,YAAc,+BAAiC,EAAS,mBACrD,IAAU,YAAc,CAAC,EAAO,MAAM,IAAI,IAChD,EAAO,MAAM,IAAI,GAAI,IACrB,EAAO,OAAO,IAAI,KAClB,EAAG,YAAc,mDACd,IAAG,IAAU,UAAY,CAAC,EAAO,MAAM,IAAI,IAC9C,SAAO,MAAM,IAAI,GAAI,IACd,EAAM,6FACV,GAAG,IAAU,QAAU,CAAC,EAAO,MAAM,IAAI,IAAK,CACjD,EAAO,MAAM,IAAI,GAAI,IACrB,GAAI,GAAY,IAChB,GAAc,EAAO,mBAAqB,EAAK,IAAM,EACrD,GAAc,EAAO,4BAA4B,GAAK,GAAK,EAAO,eAAiB,EAAK,IAAM,EAC9F,GAAc,EAAO,eAAiB,EAAK,IAAM,EACjD,GAAc,EAAO,qBAAqB,IAAM,EAAK,IAAM,EAC3D,GAAc,EAAO,WAAW,OAAS,EAAE,kBAAqB,KAAQ,IAAM,EAC9E,GAAc,EAAO,aAAa,MAAQ,GAAa,IAAO,IAAM,EACpE,GAAc,EAAO,iBAAiB,GAAK,EAAK,IAAO,EACvD,GAAc,EAAO,iBAAiB,IAAM,EAAK,IAAM,EACvD,GAAc,EAAO,oBAAsB,IAAO,IAAO,EACzD,GAAc,EAAO,oBAAsB,IAAO,IAAO,EACzD,GAAc,EAAO,oBAAsB,KAAQ,IAAO,EAC1D,GAAc,EAAO,oBAAsB,KAAQ,IAAM,EACzD,GAAc,EAAO,oBAAsB,KAAQ,IAAM,EACzD,GAAc,EAAO,iBAAiB,IAAM,EAAK,EAAG,EAEpD,GAAM,GAAe,KAAK,MAAM,EAAY,EAAO,OAAO,OAAS,KACnE,SAAO,OAAO,IAAI,GACX,EAAM,qHAAqH,EAAO,EAAY,cAAyB,EAAO,mCAC9K,IAAU,aAAe,CAAC,EAAO,MAAM,IAAI,IAAK,CACvD,EAAO,MAAM,IAAI,GAAI,IACrB,EAAO,SAAW,KAAO,IAAO,GAChC,GAAI,GAAY,IAChB,GAAc,EAAO,mBAAqB,EAAK,IAAM,EACrD,GAAc,EAAO,4BAA4B,GAAK,GAAK,EAAO,eAAiB,EAAK,IAAM,EAC9F,GAAc,EAAO,eAAiB,EAAK,IAAM,EACjD,GAAc,EAAO,qBAAqB,IAAM,EAAK,IAAM,EAC3D,GAAc,EAAO,WAAW,OAAS,EAAE,kBAAqB,KAAQ,IAAM,EAC9E,GAAc,EAAO,aAAa,MAAQ,GAAa,IAAO,IAAM,EACpE,GAAc,EAAO,iBAAiB,GAAK,EAAK,IAAO,EACvD,GAAc,EAAO,iBAAiB,IAAM,EAAK,IAAM,EACvD,GAAc,EAAO,oBAAsB,IAAO,IAAO,EACzD,GAAc,EAAO,oBAAsB,IAAO,IAAO,EACzD,GAAc,EAAO,oBAAsB,KAAQ,IAAO,EAC1D,GAAc,EAAO,oBAAsB,KAAQ,IAAM,EACzD,GAAc,EAAO,oBAAsB,KAAQ,IAAM,EACzD,GAAc,EAAO,iBAAiB,IAAM,EAAK,EAAG,EAEpD,GAAM,GAAe,KAAK,MAAM,EAAY,EAAO,OAAO,OAAS,KACnE,SAAO,OAAO,IAAI,GACX,EAAM,oEAAoE,EAAO,EAAY,cAAyB,EAAO,mCAC9H,EAAM,gBAAkB,MAAO,CACrC,GAAM,GAAO,KACP,EAAiB,KAAK,MAAM,EAAO,EAAO,QAAU,KAAK,OAAO,IAEtE,GAAG,EAAO,SAAY,KAAK,MAAQ,EAAO,CACtC,EAAG,YAAc,6DAA6D,aAC9E,OAGJ,GAAM,GAAiB,KAAK,MAAM,KAAK,IAAI,GAAK,EAAI,EAAO,aAAa,YAAc,MAAK,MAAQ,EAAO,SAAW,IAC/G,EAAe,KAAM,IAAO,qBAAqB,sDACvD,GAAI,IAAiB,KAChB,MAAO,GAAM,kDAElB,GAAM,GAAQ,OAAO,GACrB,GACI,OAAO,MAAM,IACb,CAAC,OAAO,UAAU,IAClB,GAAS,EAET,MAAO,GAAM,mCAEjB,GAAM,GAAmB,KAAK,IAAI,EAAgB,GAC9C,EAAO,KAAK,IAAI,GAAM,IAAO,EAAO,aAAa,YAAa,EAAE,EAAK,OAAO,OAAO,gBAAgB,GAAI,aAAY,IAAI,GAAK,IAAO,KACvI,GAAQ,EAAI,IAAO,EAAO,aAAa,WACvC,GAAS,EAAO,aAAa,cAAgB,EAAS,YAAe,SAAW,KAAM,EACtF,GAAS,EAAI,EAAC,EAAE,QAChB,GAAM,GAAY,KAAe,QAC3B,EAAe,KAAK,MAAM,EAAY,EAAO,GAC7C,EAAe,KAAK,MAAM,EAAgB,GAAO,OAAO,OAAS,MACjE,CAAC,EAAO,GAAU,OAAO,OAAO,gBAAgB,GAAI,YAAW,IAG/D,EAAI,KAAK,IAAI,KAAK,MAAS,IAAK,EAAI,EAAO,aAAa,YAAc,GAAoB,EAAM,EAAO,QAAU,EAAO,GACxH,EAAY,KAAK,MAAO,MAAK,MAAQ,GAAK,GAC1C,EAAa,KAAK,MAAO,GAAQ,MAAK,MAAQ,EAAI,EAAO,IAAc,KAGvE,EAAkB,EAAO,aAAa,YAAc,EACpD,+CAA4C,EAAO,GAAK,EAAO,aAAa,YAAc,GAAoB,8CAC9G,GAGN,GAAI,EAAO,aAAa,aAAe,EAAS,WAAc,SAC1D,SAAO,OAAO,IAAI,GAClB,GAAU,YAAa,GAAK,EAAO,aAAa,YAAc,GAC9D,EAAO,QAAU,EACV,EAAM,oCAAoC,OAAW,OAAY,EAAQ,qCAA0C,EAAe,aAAwB,0BAAqC,cAA2B,qCAA6C,EAAW,eAAe,UAAU,sBAItT,GAAM,GAAY,EAAO,aAAa,WAAa,EAC7C,iBAAoB,GAAQ,GAAU,iCACtC,GAEA,EAAY,KAAM,IAAO,OAAO,EAAe,gCAA2C,OAAW,MAAW,KAEtH,GAAI,IAAc,KACd,MAAO,GAAM,kDAGjB,EAAO,QAAU,EAEjB,AAAG,EAAQ,IAAW,CAAC,EACnB,GAAO,OAAO,IAAI,GAClB,GAAU,YAAa,GAAK,EAAO,aAAa,aAChD,KAAM,GAAM,oBAAoB,EAAe,aAAwB,0BAAqC,cAA2B,qCAA6C,EAAW,eAAe,UAAU,uBAExN,KAAM,GAAM,eAAe,yBAAiC,EAAQ,eAAoB,qCAA6C,EAAW,eAAe,UAAU,8BAGtK,IAAU,MAAO,CACxB,GAAM,GAAS,EAAI,OAAO,OAAO,gBAAgB,GAAI,aAAY,IAAI,GAAK,GACpE,EAAS,OAAO,EAAO,QAC7B,KAAM,GAAM,oDAAoD,gBAE5D,EAAS,GACT,KAAM,GAAM,cAAc,EAAS,4BAAiC,WAExE,EAAO,OAAO,IAAI,EAAS,EAAS,EAAS,EAAS,WAC/C,IAAU,SAAU,CAC3B,GACI,OAAO,GAAO,WAAc,UAC5B,MAAO,cAAa,QAAQ,uBAA0B,WAGjD,OAAK,MAAQ,EAAO,WAAa,IAAO,MACxC,MAAK,MAAQ,OAAO,aAAa,QAAQ,wBAA0B,IAAO,MAE3E,MAAO,GAAG,YAAc,4EAKhC,GAAI,CADc,KAAM,GAAQ,wCAE5B,MAAO,GAAG,YAAc,yBAE5B,GAAM,GAAM,OAAO,KAAM,IAAO,wCAChC,GAAI,OAAO,MAAM,IAAQ,GAAO,EAC5B,MAAO,GAAG,YAAc,kBAE5B,GAAI,OAAO,EAAO,QAAU,EACxB,MAAO,GAAG,YAAc,iCAK5B,GAHA,aAAa,QAAQ,qBAAsB,KAAK,MAAM,YAGlD,AAFS,OAAO,OAAO,gBAAgB,GAAI,YAAW,IAAI,GAAK,EAAI,IAE1D,EAAG,CACZ,GAAM,GAAM,EAAM,IAClB,SAAO,OAAO,IAAI,GAElB,EAAO,UAAY,KAAK,MACjB,EAAG,YAAc,wEAAwE,YAGpG,EAAO,OAAO,IAAI,GAClB,EAAG,YAAc,iCAAiC,oBAC3C,IAAU,OAAQ,CACzB,GAAK,MAAK,MAAQ,EAAO,gBAAgB,MAAQ,IAAO,KACpD,MAAO,GAAQ;AAAA;AAAA;AAAA;AAAA,eAOnB,GAAM,GAAS,KAAK,SAAW,KACzB,EAAQ,KAAK,MACnB,KAAM,GACF,iJAIJ,GAAM,GAAO,KAAK,IAAI,KAAK,MAAS,GAAQ,IAG5C,MAFA,GAAO,gBAAgB,KAAO,KAAK,MAE/B,GAAQ,IACR,GAAO,OAAO,IAAI,KACX,EAAQ,mDAER,EAAQ,kEAGnB,GAAG,YAAc,0DAGrB,KACA,GAAU,KAAK,YAAa,GAE5B,WAAW,UAAY,CACnB,EAAG,YAAc,IAClB,OC3UA,GAAM,IAAwB,IAAM,CACvC,GAAM,GAAW,CAAC,OAAO,QAAQ,SAAS,QAAQ,SAAS,QAAQ,QAAQ,UAAU,UAErF,GAAI,GAAS,CACT,GAAM,GAAO,SAAS,cAAc,UAC9B,EAAW,SAAS,cAAc,UACxC,EAAK,YAAc,0CACnB,EAAK,aAAa,QAAQ,sDAC1B,EAAK,iBAAiB,QAAS,IAAM,MACrC,EAAS,YAAc,2CACvB,EAAS,aAAa,QAAQ,wDAC9B,EAAS,iBAAiB,QAAS,IAAM,MAEzC,GAAM,GAAc,SAAS,eAAe,qBAC5C,EAAY,YAAY,GACxB,EAAY,YAAY,GAG5B,SAAS,eAAe,eAAe,iBAAiB,QAAS,IAAM,MAGvE,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,GAAuB,IAC/F,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,GAAuB,IAC/F,SAAS,eAAe,iBAAiB,iBAAiB,QAAS,IAAM,GAAuB,IAChG,SAAS,eAAe,oBAAoB,iBAAiB,QAAS,IAAM,GAAuB,IACnG,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,GAAuB,IAGpG,SAAS,eAAe,eAAe,iBAAiB,YAAa,IAAM,GAAY,aACvF,SAAS,eAAe,gBAAgB,iBAAiB,YAAa,IAAM,GAAY,iBACxF,SAAS,eAAe,kBAAkB,iBAAiB,YAAa,IAAM,GAAY,kBAC1F,SAAS,eAAe,uBAAuB,iBAAiB,YAAa,IAAM,GAAY,qBAC/F,SAAS,eAAe,gBAAgB,iBAAiB,YAAa,IAAM,GAAY,0BACxF,SAAS,eAAe,2BAA2B,iBAAiB,YAAa,IAAM,GAAY,2BACnG,SAAS,eAAe,sBAAsB,iBAAiB,YAAa,IAAM,GAAY,uBAC9F,SAAS,eAAe,aAAa,iBAAiB,YAAa,IAAM,GAAY,cAErF,SAAS,eAAe,eAAe,iBAAiB,QAAS,IAAM,EAAW,aAClF,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,EAAW,cACnF,SAAS,eAAe,kBAAkB,iBAAiB,QAAS,IAAM,EAAW,gBACrF,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,MAC/E,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,EAAW,YAAY,OAAU,KACzG,SAAS,eAAe,2BAA2B,iBAAiB,QAAS,IAAM,EAAW,yBAAyB,OAAU,KACjI,SAAS,eAAe,sBAAsB,iBAAiB,QAAS,IAAM,EAAW,uBACzF,SAAS,eAAe,aAAa,iBAAiB,QAAS,IAAM,EAAW,WAGhF,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,GAAW,cACnF,SAAS,eAAe,eAAe,iBAAiB,QAAS,IAAM,GAAW,aAClF,SAAS,eAAe,eAAe,iBAAiB,QAAS,IAAM,GAAW,aAClF,SAAS,eAAe,mBAAmB,iBAAiB,QAAS,IAAM,GAAW,iBACtF,SAAS,eAAe,YAAY,iBAAiB,QAAS,IAAM,GAAW,UAC/E,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,GAAW,eACnF,SAAS,eAAe,eAAe,iBAAiB,QAAS,IAAM,GAAW,eAClF,SAAS,eAAe,WAAW,iBAAiB,QAAS,IAAM,GAAW,SAC9E,SAAS,eAAe,UAAU,iBAAiB,QAAS,IAAM,GAAW,SAC7E,SAAS,eAAe,WAAW,iBAAiB,QAAS,IAAM,GAAW,UAC9E,SAAS,eAAe,aAAa,iBAAiB,QAAS,IAAM,GAAW,WAIhF,GAAM,GAAgB,CAAC,OAAO,UAAU,SAAS,WAAW,aAC5D,OAAS,GAAQ,EAAG,EAAQ,EAAc,OAAQ,IAC9C,SAAS,eAAe,WAAW,EAAc,cAAkB,iBAAiB,QAAS,IAAM,GAAa,EAAG,IAIvH,GAAM,GAAyB,CAAC,OAAO,UAAU,SAAS,WAAW,YAAY,YAC3E,EAAe,CAAC,MAAM,MAAM,UAAU,YACtC,EAAoB,CAAC,EAAG,GAAI,IAAK,KACvC,OAAS,GAAQ,EAAG,EAAQ,EAAa,OAAQ,IAC7C,OAAS,GAAS,EAAG,EAAS,EAAuB,OAAQ,IACzD,SAAS,eAAe,EAAuB,GAAQ,EAAa,IAAQ,iBAAiB,QAAS,IAClG,GACI,EAAkB,GAClB,EAAuB,KAOvC,SAAS,eAAe,kBAAkB,iBAAiB,QAAS,IAAM,MAC1E,SAAS,eAAe,iBAAiB,iBAAiB,QAAS,IAAM,MACzE,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,MAG/E,GAAM,GAA0B,CAAC,OAAQ,UAAW,UAC9C,EAA0B,CAAC,OAAQ,WAAY,UACrD,OAAS,GAAQ,EAAG,EAAQ,EAAG,IAC3B,OAAS,GAAS,EAAG,GAAU,EAAG,IAC9B,SAAS,eAAe,MAAM,EAAwB,KAAS,KAAU,iBAAiB,QAAS,IAC/F,GAAY,EAAS,GAAsB,EAAwB,GAAQ,IAAU,EAAI,EAAS,EAAU,GAAO,GAAK,IAKpI,OAAS,GAAQ,EAAG,GAAS,EAAG,IAE5B,SAAS,eAAe,oBAAoB,KAAS,iBAAiB,YAAa,IAAM,GAA2B,IACpH,SAAS,eAAe,oBAAoB,KAAS,iBAAiB,QAAS,IAAM,GAAmB,IAK5G,OAAS,GAAQ,EAAG,EAAQ,EAAG,IAC3B,SAAS,eAAe,eAAe,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAC9E,EAAM,IAKd,OAAS,GAAQ,EAAG,EAAQ,EAAG,IAC3B,SAAS,eAAe,gBAAgB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAqB,EAAM,IAC9G,SAAS,eAAe,sBAAsB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAqB,EAAM,IAKxH,OAAS,GAAQ,EAAG,EAAQ,GAAI,IAE5B,SAAS,eAAe,qBAAqB,EAAM,KAAK,iBAAiB,YAAa,IAAM,GAA4B,EAAM,IAC9H,SAAS,eAAe,qBAAqB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAoB,EAAM,IAMtH,OAAS,GAAQ,EAAG,EAAQ,GAAI,IAC5B,SAAS,eAAe,SAAS,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAe,IAG/F,SAAS,eAAe,sBAAsB,iBAAiB,QAAS,IAAM,GAAgB,IAC9F,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,GAAgB,IAC/F,SAAS,eAAe,yBAAyB,iBAAiB,QAAS,IAAM,GAAgB,IACjG,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,GAAgB,IAE/F,SAAS,eAAe,kBAAkB,iBAAiB,OAAQ,IAAM,GAAgB,IACzF,SAAS,eAAe,mBAAmB,iBAAiB,OAAQ,IAAM,GAAgB,IAC1F,SAAS,eAAe,uBAAuB,iBAAiB,OAAQ,IAAM,GAAgB,IAC9F,SAAS,eAAe,mBAAmB,iBAAiB,OAAQ,IAAM,GAAgB,IAC1F,SAAS,eAAe,0BAA0B,iBAAiB,OAAQ,IAAM,GAAgB,IAEjG,SAAS,eAAe,0BAA0B,iBAAiB,QAAS,IAAM,MAClF,SAAS,eAAe,mBAAmB,iBAAiB,OAAQ,IAAM,MAI1E,OAAS,GAAQ,EAAG,GAAS,IAAK,IAG9B,SAAS,eAAe,MAAM,KAAS,iBAAiB,YAAa,IAAM,GAAoB,IAE/F,QAAQ,IAAI,6DAKhB,GAAM,GAAgB,CAAC,OAAQ,WAAY,YAAa,iBAExD,OAAS,GAAQ,EAAG,GAAS,GAAI,IAAS,CACtC,GAAM,GAAe,EAAc,KAAK,MAAO,GAAQ,GAAG,KAG1D,SAAS,eAAe,MAAM,KAAS,iBAAiB,QAAS,IAAM,GAAY,EAAa,IAEhG,QAAQ,IAAI,6DAIhB,OAAS,GAAQ,EAAG,GAAS,GAAI,IAG7B,SAAS,eAAe,MAAM,EAAQ,MAAM,iBAAiB,QAAS,IAAM,GAAc,IAC1F,QAAQ,IAAI,4DAGhB,OAAS,GAAQ,EAAG,GAAS,GAAI,IAG7B,SAAS,eAAe,MAAM,EAAQ,OAAO,iBAAiB,QAAS,IAAM,GAAa,IAC1F,QAAQ,IAAI,4DAKhB,OAAS,GAAQ,EAAG,GAAS,EAAG,IAG5B,SAAS,eAAe,MAAM,EAAQ,OAAO,iBAAiB,QAAS,IAAM,GAAY,OAAO,IAChG,QAAQ,IAAI,4DAKhB,SAAS,eAAe,mBAAmB,iBAAiB,QAAS,IAAM,GAAY,SACvF,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,GAAY,aAC3F,SAAS,eAAe,wBAAwB,iBAAiB,QAAS,IAAM,GAAY,cAC5F,SAAS,eAAe,yBAAyB,iBAAiB,QAAS,IAAM,GAAY,eAC7F,SAAS,eAAe,0BAA0B,iBAAiB,QAAS,IAAM,GAAY,gBAI9F,OAAS,GAAQ,EAAG,GAAS,IAAK,IAG9B,SAAS,eAAe,MAAM,KAAS,iBAAiB,YAAa,IAAM,GAAwB,IAOvG,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,GAAoB,IAEnG,OAAS,GAAQ,EAAG,EAAQ,EAAG,IAE3B,SAAS,eAAe,mBAAmB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAa,EAAG,IAK1G,OAAS,GAAQ,EAAG,EAAQ,EAAG,IAE3B,SAAS,eAAe,OAAO,EAAM,KAAK,iBAAiB,YAAa,IAAM,GAAuB,EAAM,IAC3G,SAAS,eAAe,OAAO,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAoB,EAAM,IAEpG,SAAS,eAAe,eAAe,EAAM,KAAK,iBAAiB,YAAa,IAAM,GAAuB,EAAM,IACnH,SAAS,eAAe,eAAe,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAa,EAAM,IAKzG,GAAM,GAAsB,CAAC,GAAI,GAAI,GAAI,KACnC,EAAyB,CAAC,MAAO,aAAc,QAAS,WAE9D,OAAS,GAAQ,EAAG,EAAQ,EAAoB,OAAQ,IAEpD,SAAS,eAAe,WAAW,EAAuB,MAAU,iBAAiB,QAAS,IAAM,GAAkB,EAAoB,KAI9I,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,MAC7E,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,MAG7E,GAAM,GAAoB,CAAC,QAAQ,iBAAiB,mBAAmB,eAAe,eAAe,oBAAoB,oBACzH,OAAS,GAAQ,EAAG,EAAQ,EAAkB,OAAQ,IAElD,SAAS,eAAe,kBAAkB,EAAM,KAAK,iBAAiB,YAAa,IAAM,GAA0B,EAAkB,KACrI,SAAS,eAAe,kBAAkB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAqB,EAAkB,KAIhI,OAAS,GAAQ,EAAG,EAAQ,EAAG,IAE3B,SAAS,eAAe,WAAW,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAmB,EAAM,IACvG,SAAS,eAAe,kBAAkB,EAAM,KAAK,iBAAiB,YAAa,IAAM,GAAmB,EAAM,IAClH,SAAS,eAAe,kBAAkB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAkB,EAAM,IAC7G,SAAS,eAAe,kBAAkB,EAAM,KAAK,iBAAiB,YAAa,IAAM,GAA0B,EAAM,IACzH,SAAS,eAAe,kBAAkB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAmB,EAAM,IAC9G,SAAS,eAAe,iBAAiB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAsB,EAAM,IAIpH,SAAS,eAAe,sBAAsB,iBAAiB,QAAS,IAAM,GAAsB,IACpG,SAAS,eAAe,yBAAyB,iBAAiB,QAAS,IAAM,GAAsB,EAAE,iBACzG,SAAS,eAAe,wBAAwB,iBAAiB,QAAS,IAAM,GAAqB,EAAE,iBAEvG,OAAS,GAAQ,EAAG,EAAQ,EAAG,IAE3B,SAAS,eAAe,uBAAuB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAuB,EAAM,IAK3H,OAAS,GAAQ,EAAG,EAAQ,EAAG,IAE3B,SAAS,eAAe,uBAAuB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAmB,YAAa,EAAM,IAChI,SAAS,eAAe,qBAAqB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAmB,UAAW,EAAM,IAGhI,SAAS,eAAe,wBAAwB,iBAAiB,OAAQ,IAAM,GAA4B,IAC3G,SAAS,eAAe,sBAAsB,iBAAiB,OAAQ,IAAM,GAA4B,IAKzG,OAAS,GAAQ,EAAG,EAAQ,GAAI,IAE5B,SAAS,eAAe,YAAY,EAAM,KAAK,iBAAiB,QAAS,IAAM,EAAiB,EAAM,IAK1G,SAAS,eAAe,kBAAkB,iBAAiB,QAAS,IAAM,GAAiB,EAAE,iBAAqB,KAClH,SAAS,eAAe,kBAAkB,iBAAiB,QAAS,IAAM,MAE1E,SAAS,eAAe,6BAA6B,iBAAiB,QAAS,IAAM,GAA2B,EAAE,mBAClH,SAAS,eAAe,4BAA4B,iBAAiB,QAAS,IAAM,MACpF,SAAS,eAAe,gCAAgC,iBAAiB,QAAS,IAAM,GAAoB,IAC5G,SAAS,eAAe,+BAA+B,iBAAiB,QAAS,IAAM,GAAoB,IAC3G,SAAS,eAAe,gCAAgC,iBAAiB,QAAS,IAAM,GAAoB,IAK5G,OAAS,GAAQ,EAAG,EAAQ,IAAK,IAG7B,SAAS,eAAe,MAAM,KAAS,iBAAiB,QAAS,IAAM,GAAY,IACnF,SAAS,eAAe,MAAM,KAAS,iBAAiB,YAAa,IAAM,GAAqB,IAEhG,QAAQ,IAAI,8EAGhB,SAAS,eAAe,UAAU,iBAAiB,QAAS,IAAM,GAAY,IAAK,GAAO,MAC1F,SAAS,eAAe,UAAU,iBAAiB,YAAa,IAAM,GAAqB,IAAK,GAAO,MACvG,QAAQ,IAAI,0EAGZ,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,MAC7E,SAAS,eAAe,sBAAsB,iBAAiB,QAAS,IAAM,MAIlF,GAAM,GAAsB,CAAC,OAAO,QAAQ,IAAI,MAAM,QAAQ,OAAO,OAAO,QAAQ,SACpF,OAAS,GAAQ,EAAG,GAAS,EAAI,IAG7B,SAAS,eAAe,UAAU,KAAS,iBAAiB,YAAa,IAAM,GAAqB,IACpG,SAAS,eAAe,UAAU,KAAS,iBAAiB,YAAa,IAAM,GAAU,IAEzF,SAAS,eAAe,UAAU,KAAS,iBAAiB,QAAS,IAAM,GACvE,EAAS,GACT,EAAoB,GAAO,IAInC,GAAM,GAAqB,CAAC,OAAQ,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,SACvH,OAAS,GAAQ,EAAG,GAAS,GAAI,IAG7B,SAAS,eAAe,aAAa,KAAS,iBAAiB,YAAa,IAAM,GAAsB,IAExG,SAAS,eAAe,aAAa,KAAS,iBAAiB,QAAS,IAAM,GAAc,EAAmB,GAAQ,GAAO,IAI9H,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,MAGxE,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,MACxE,SAAS,eAAe,0BAA0B,iBAAiB,QAAS,IAAM,GAAuB,IACzG,SAAS,eAAe,wBAAwB,iBAAiB,QAAS,IAAM,GAAuB,IAIvG,OAAS,GAAQ,EAAG,EAAQ,EAAG,IAE3B,SAAS,eAAe,mBAAmB,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAa,EAAG,IAM1G,OAAS,GAAQ,EAAG,EAAQ,GAAI,IAE5B,SAAS,eAAe,UAAU,EAAM,KAAK,iBAAiB,YAAa,IAAM,GAAgB,EAAM,IACvG,SAAS,eAAe,UAAU,EAAM,KAAK,iBAAiB,QAAS,IAAM,GAAgB,EAAM,IAIvG,SAAS,eAAe,aAAa,iBAAiB,YAAa,IAAM,GAAgB,GAAG,MAC5F,SAAS,eAAe,aAAa,iBAAiB,QAAS,IAAM,GAAgB,GAAG,MAGxF,SAAS,eAAe,iBAAiB,iBAAiB,QAAS,IAAM,MAIzE,SAAS,eAAe,aAAa,iBAAiB,QAAS,IAAM,EAAO,SAAS,KAAK,EAAG,KAC7F,SAAS,eAAe,cAAc,iBAAiB,QAAS,IAAM,EAAO,SAAS,KAAK,GAAI,KAC/F,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,EAAO,SAAS,KAAK,IAAM,KACnG,SAAS,eAAe,kBAAkB,iBAAiB,QAAS,IAAM,EAAO,SAAS,cAC1F,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,EAAO,SAAS,KAAK,EAAG,KAEhG,SAAS,eAAe,kBAAkB,iBAAiB,QAAS,IAAM,EAAO,cAAc,KAAK,EAAG,KACvG,SAAS,eAAe,mBAAmB,iBAAiB,QAAS,IAAM,EAAO,cAAc,KAAK,GAAI,KACzG,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,EAAO,cAAc,KAAK,IAAM,KAC7G,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,EAAO,cAAc,cACpG,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,EAAO,cAAc,KAAK,EAAG,KAE1G,SAAS,eAAe,kBAAkB,iBAAiB,QAAS,IAAM,EAAO,cAAc,KAAK,EAAG,KACvG,SAAS,eAAe,mBAAmB,iBAAiB,QAAS,IAAM,EAAO,cAAc,KAAK,GAAI,KACzG,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,EAAO,cAAc,KAAK,IAAM,KAC7G,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,EAAO,cAAc,cACpG,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,EAAO,cAAc,KAAK,EAAG,KAE1G,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,EAAO,iBAAiB,KAAK,EAAG,KAC7G,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,EAAO,iBAAiB,KAAK,IAAK,KACjH,SAAS,eAAe,sBAAsB,iBAAiB,QAAS,IAAM,EAAO,iBAAiB,KAAK,IAAK,KAChH,SAAS,eAAe,0BAA0B,iBAAiB,QAAS,IAAM,EAAO,iBAAiB,cAC1G,SAAS,eAAe,wBAAwB,iBAAiB,QAAS,IAAM,EAAO,iBAAiB,KAAK,EAAG,KAGpH,GAAM,GAAmB,SAAS,uBAAuB,wBACzD,OAAS,GAAQ,EAAG,EAAQ,EAAiB,OAAQ,IAEjD,EAAiB,GAAO,iBAAiB,YAAa,IAAM,GAA0B,EAAM,IAC5F,EAAiB,GAAO,iBAAiB,QAAS,IAAM,GAAoB,EAAM,IAKtF,SAAS,eAAe,oBAAoB,iBAAiB,YAAa,IAAM,GAAsB,YACtG,SAAS,eAAe,yBAAyB,iBAAiB,YAAa,IAAM,GAAsB,iBAC3G,SAAS,eAAe,kBAAkB,iBAAiB,YAAa,IAAM,GAAsB,UACpG,SAAS,eAAe,sBAAsB,iBAAiB,YAAa,IAAM,GAAsB,cACxG,SAAS,eAAe,kBAAkB,iBAAiB,YAAa,IAAM,GAAsB,UACpG,SAAS,eAAe,wBAAwB,iBAAiB,YAAa,IAAM,GAAsB,gBAC1G,SAAS,eAAe,6BAA6B,iBAAiB,YAAa,IAAM,GAAsB,qBAC/G,SAAS,eAAe,uBAAuB,iBAAiB,YAAa,IAAM,GAAsB,eAGzG,SAAS,eAAe,yBAAyB,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,QAAQ,SAChH,SAAS,eAAe,8BAA8B,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,aAAa,SAC1H,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,MAAM,SAC5G,SAAS,eAAe,2BAA2B,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,UAAU,SACpH,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,MAAM,SAC5G,SAAS,eAAe,6BAA6B,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,YAAY,SACxH,SAAS,eAAe,kCAAkC,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,iBAAiB,SAClI,SAAS,eAAe,4BAA4B,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,WAAW,SAEtH,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,QAAQ,UAC9G,SAAS,eAAe,4BAA4B,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,aAAa,UACxH,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,MAAM,UAC1G,SAAS,eAAe,yBAAyB,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,UAAU,UAClH,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,MAAM,UAC1G,SAAS,eAAe,2BAA2B,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,YAAY,UACtH,SAAS,eAAe,gCAAgC,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,iBAAiB,UAChI,SAAS,eAAe,0BAA0B,iBAAiB,QAAS,IAAM,EAAO,gBAAgB,WAAW,UAEpH,SAAS,eAAe,oBAAoB,iBAAiB,YAAa,IAAM,MAChF,SAAS,eAAe,yBAAyB,iBAAiB,QAAS,IAAM,MACjF,SAAS,eAAe,kBAAkB,iBAAiB,YAAa,IAAM,MAC9E,SAAS,eAAe,iBAAiB,iBAAiB,QAAS,IAAM,MAGzE,SAAS,eAAe,gBAAgB,iBAAiB,QAAS,IAAM,GAAa,EAAG,IACxF,SAAS,eAAe,mBAAmB,iBAAiB,QAAS,IAAM,GAAa,EAAG,IAG3F,SAAS,eAAe,sBAAsB,iBAAiB,QAAS,IAAM,GAAkB,KAChG,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,MAC7E,SAAS,eAAe,4BAA4B,iBAAiB,QAAS,IAAM,GAAsB,GAAI,MAG9G,SAAS,eAAe,uBAAuB,iBAAiB,QAAS,IAAM,MAI/E,GAAM,GAAiB,MAAM,KAAkB,SAAS,iBAAiB,sCACzE,OAAW,KAAU,GACjB,EAAO,iBAAiB,QAAS,IAAM,GAAa,GAAI,EAAe,QAAQ,KAIlE,SAAS,eAAe,cAAc,iBAAiB,QAAS,IAAM,MAEvF,SAAS,eAAe,mBAAmB,iBAAiB,OAAQ,GAAK,GAAmC,EAAE,SACzF,SAAS,eAAe,YAAY,iBAAiB,QAAS,IAAM,GAAY,KAC9E,SAAS,eAAe,cAAc,iBAAiB,QAAS,IAAM,MAEzE,SAAS,eAAe,cAAc,iBAAiB,QAAS,IAAM,MAClD,SAAS,eAAe,gCAAgC,iBAAiB,QAAS,IAAM,MAWxG,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,MACvE,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,MAIvG,SAAS,eAAe,mBAAmB,iBAAiB,YAAa,IAAM,GAAiB,mBAChG,SAAS,eAAe,uBAAuB,iBAAiB,YAAa,IAAM,GAAiB,mBACpG,SAAS,eAAe,qBAAqB,iBAAiB,YAAa,IAAM,GAAiB,mBAClG,SAAS,eAAe,qBAAqB,iBAAiB,YAAa,IAAM,GAAiB,mBAClG,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,GAAgB,mBAC7F,SAAS,eAAe,qBAAqB,iBAAiB,QAAS,IAAM,GAAc,mBAE3F,SAAS,eAAe,oBAAoB,iBAAiB,YAAa,IAAM,GAAiB,oBACjG,SAAS,eAAe,wBAAwB,iBAAiB,YAAa,IAAM,GAAiB,oBACrG,SAAS,eAAe,sBAAsB,iBAAiB,YAAa,IAAM,GAAiB,oBACnG,SAAS,eAAe,sBAAsB,iBAAiB,YAAa,IAAM,GAAiB,oBACnG,SAAS,eAAe,sBAAsB,iBAAiB,QAAS,IAAM,GAAgB,oBAC9F,SAAS,eAAe,sBAAsB,iBAAiB,QAAS,IAAM,GAAc,oBAE5F,GAAM,GAAW,OAAO,KAAK,EAAO,cACpC,OAAW,KAAO,GAAU,CACxB,GAAM,GAAW,EAAS,GAC1B,AAAI,EAAS,OAAS,WAClB,SAAQ,IAAI,EAAS,aACrB,SAAS,eAAe,GAAG,KAAO,iBAAiB,YAAa,IAAM,GAAiB,IACvF,SAAS,eAAe,GAAG,UAAY,iBAAiB,YAAa,IAAM,GAAiB,IAC5F,SAAS,eAAe,GAAG,WAAa,iBAAiB,YAAa,IAAM,GAAiB,IAC7F,SAAS,eAAe,GAAG,WAAa,iBAAiB,QAAS,IAAM,GAAgB,KAKhG,AADa,SAAS,iBAA8B,gBAC/C,QAAQ,GAAK,EAAE,iBAAiB,QAAS,IAAM,OAGpD,SAAS,eAAe,cAAc,iBAAiB,SAAU,KAAM,IAAK,CACxE,GAAM,GAAU,EAAE,OACZ,EAAO,EAAQ,MAAM,GACvB,EAAO,GAGX,GAAI,MAAO,MAAK,UAAU,MAAS,WAC/B,EAAO,KAAM,GAAK,WACf,CACH,GAAM,GAAS,GAAI,YACnB,EAAO,WAAW,GAKlB,EAJa,KAAM,IAAI,SAAgB,GAAO,CAC1C,EAAO,iBAAiB,OAAQ,IAAM,EAAI,EAAO,OAAO,eAMhE,SAAQ,MAAQ,KAET,GAAgB,MCrjBxB,GAAM,IAAuB,AAAC,GAAiB,CAnBtD,UA+BI,GAXI,EAAO,iBAAiB,eAAiB,QACzC,GAAO,iBAAmB,CACtB,aAAc,EACd,cAAe,EACf,UAAW,IAInB,KAAK,eAAL,SAAK,aAAiB,MAAK,GAAU,eACrC,KAAK,iBAAL,SAAK,eAAmB,MAAK,GAAU,iBAEnC,MAAO,GAAK,iBAAoB,SAChC,OAAW,KAAO,QAAO,KAAK,EAAK,iBAAkB,CACjD,GAAM,GAAI,EACV,EAAO,gBAAgB,GAAK,EAAK,gBAAgB,OAGrD,GAAO,gBAAgB,KAAO,KAAK,MAAS,GAAK,IAAO,GAI5D,AAAK,MAAM,QAAQ,EAAK,uBACpB,GAAO,qBAAuB,OAAO,OAAO,EAAK,sBACjD,GAAS,EAAO,qBAAsB,EAAG,GAAU,qBAAqB,SAIvE,MAAM,QAAQ,EAAK,8BAEpB,GAAO,4BAA8B,OAAO,OAAO,EAAK,8BAGxD,EAAK,WAAa,QAClB,GAAO,SAAW,GAAI,IACtB,EAAO,cAAgB,GAAI,IAAc,GACzC,EAAO,cAAgB,GAAI,IAAc,GACzC,EAAO,aAAe,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEhL,EAAK,YAAY,cAAgB,QACjC,GAAO,YAAY,YAAc,IAEjC,EAAK,kBAAoB,QACzB,GAAO,gBAAkB,CACrB,KAAM,EACN,MAAO,EACP,UAAW,GAAI,GAAQ,KACvB,WAAY,KAEhB,EAAO,gBAAkB,CACrB,KAAM,GACN,MAAO,EACP,UAAW,GAAI,GAAQ,KACvB,WAAY,KAEhB,EAAO,gBAAkB,CACrB,KAAM,IACN,MAAO,EACP,UAAW,GAAI,GAAQ,KACvB,WAAY,KAEhB,EAAO,gBAAkB,CACrB,KAAM,IACN,MAAO,EACP,UAAW,GAAI,GAAQ,KACvB,WAAY,KAEhB,EAAO,gBAAkB,CACrB,KAAM,IACN,MAAO,EACP,UAAW,GAAI,GAAQ,KACvB,WAAY,MAGhB,EAAK,qBAAuB,QAC5B,GAAO,mBAAqB,GAE5B,EAAK,qBAAuB,QAC5B,GAAO,mBAAqB,CACxB,YAAa,EACb,WAAY,EACZ,SAAU,EACV,QAAS,EACT,UAAW,EACX,SAAU,EACV,aAAc,EACd,OAAQ,EACR,cAAe,EACf,YAAa,GAEjB,EAAO,mBAAqB,CACxB,YAAa,EACb,WAAY,EACZ,SAAU,EACV,QAAS,EACT,UAAW,EACX,SAAU,EACV,aAAc,EACd,OAAQ,EACR,cAAe,EACf,YAAa,IAGjB,EAAK,uBAAyB,QAC9B,GAAO,qBAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnE,EAAO,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE9D,EAAK,mBAAqB,QAC1B,GAAO,aAAe,GAAI,GAAQ,KAClC,EAAO,iBAAmB,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5D,EAAK,sBAAwB,QAC7B,GAAO,oBAAsB,GAE7B,EAAK,UAAY,QACjB,GAAO,QAAU,CAAE,KAAM,GAAI,OAAQ,GAAI,MAAO,IAChD,EAAO,gBAAkB,IAEzB,EAAK,uBAAyB,QAC9B,GAAO,qBAAuB,GAC9B,EAAO,mBAAqB,EAC5B,EAAO,qBAAuB,CAAC,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,IAC9H,EAAO,2BAA6B,GACpC,EAAO,mBAAqB,CACxB,MAAO,GACP,KAAM,EACN,MAAO,IAGX,EAAK,aAAe,QACpB,GAAO,WAAa,GACpB,EAAO,eAAiB,iBACxB,EAAO,oBAAsB,GAE7B,EAAK,qBAAuB,QAC5B,GAAO,mBAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5C,EAAO,iBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1C,EAAO,sBAAwB,EAC/B,EAAO,oBAAsB,GAG7B,EAAK,iBAAmB,QACxB,GAAO,eAAiB,CAAC,GAAO,GAAO,GAAO,GAAO,GAAO,KAG5D,GAAO,qBAAqB,KAAO,MAAQ,EAAO,qBAAqB,KAAO,SAC9E,GAAO,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9D,EAAO,qBAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEnE,EAAO,qBAAuB,QAC9B,GAAO,mBAAqB,CACxB,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5C,EAAO,oBAAsB,IAGjC,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,AAAI,EAAO,WAAW,GAAK,GAAkB,EAAI,IAC7C,GAAO,WAAW,GAAK,GAY/B,GARI,MAAK,eAAL,cAAmB,sBAAuB,QAC1C,GAAO,aAAa,mBAAqB,EACzC,EAAO,aAAa,cAAgB,EACpC,EAAO,aAAa,WAAa,EACjC,EAAO,aAAa,YAAc,EAClC,EAAO,aAAa,iBAAmB,EACvC,EAAO,aAAa,iBAAmB,GAEvC,EAAK,eAAiB,QAAa,EAAK,aAAa,MAAQ,GAAK,EAAO,aAAa,MAAQ,EAC9F,OAAS,GAAI,IAAK,GAAK,IAAK,IACxB,EAAO,SAAS,GAAK,EAqE7B,GA9DA,OAAO,OAAO,EAAO,QAAS,EAAK,SAE/B,EAAK,iBAAmB,GACxB,GAAO,QAAQ,IAAM,GACrB,EAAO,QAAQ,IAAM,IAGrB,EAAK,WAAa,QAClB,GAAO,SAAW,KAClB,EAAO,SAAW,EAClB,EAAO,eAAiB,EACxB,EAAO,oBAAsB,EAC7B,EAAO,oBAAsB,EAC7B,EAAO,gBAAkB,EACzB,EAAO,qBAAuB,EAC9B,EAAO,qBAAuB,GAE9B,GAAK,mBAAqB,QAAa,EAAO,mBAAqB,KACnE,GAAO,iBAAmB,GAEtB,EAAO,WAAW,OAAS,KAC3B,GAAO,gBAAkB,EAAO,WAAW,KAAO,KAClD,EAAO,WAAW,KAAO,EACzB,GAAY,IAAK,GAAM,KACvB,QAAQ,IAAI,+BAAiC,EAAO,EAAO,WAAW,MAAQ,oCAC9E,EAAO,gBAAkB,EAAO,WAAW,KAAO,KAClD,EAAO,OAAO,IAAI,IAAM,EAAO,WAAW,MAC1C,EAAO,WAAW,KAAO,EACzB,QAAQ,IAAI,0FACZ,EAAO,SAAS,IAAI,EAAO,aAAa,IAAM,MAC9C,EAAO,aAAa,IAAM,EAC1B,QAAQ,IAAI,4BAIhB,GAAO,iBAAmB,QAAa,EAAK,iBAAmB,SAC/D,GAAO,eAAiB,CACpB,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,KAGP,GAAO,eAAe,KAAO,QAAa,CAAE,mBAAoB,KAAS,EAAK,eAAe,KAAO,SACpG,GAAO,eAAe,GAAK,IAG3B,GAAO,gBAAgB,GAAK,GAC3B,MAAM,QAAQ,EAAK,kBAAoB,EAAK,gBAAgB,GAAK,IAClE,GAAO,qBAAqB,GAAK,EACjC,EAAO,gBAAgB,GAAK,GAE5B,EAAO,wBAA0B,QACjC,GAAO,sBAAwB,EAAO,kBAAoB,KAE1D,GAAO,eAAiB,QAAa,EAAK,eAAiB,SAC3D,GAAO,aAAe,GAEtB,EAAK,mBAAqB,QAC1B,GAAO,iBAAmB,GAAI,IAAiB,GAC/C,EAAO,YAAc,GAErB,EAAK,oBAAsB,OAAW,CACtC,GAAM,GAAW,EAAO,eACxB,AAAI,EAAO,iBAAiB,YAAc,GAAK,EAAO,iBAAiB,YAAc,IACjF,EAAW,qBAAsB,GAAO,IAExC,EAAO,iBAAiB,YAAc,IACtC,GAAW,qBAAsB,GAAO,IACxC,EAAO,oBAAsB,EAC7B,MAEJ,EAAO,eAAiB,EACxB,EAAO,qBAAqB,IAAM,EAClC,EAAO,4BAA4B,IAAM,EACzC,EAAO,kBAAoB,CACvB,MAAO,EACP,WAAY,EACZ,WAAY,EACZ,UAAW,EACX,eAAgB,EAChB,MAAO,EACP,WAAY,EACZ,YAAa,GAEjB,EAAO,iBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxE,EAAO,oBAAsB,EAC7B,EAAO,gBAAkB,GAE7B,GAAI,EAAO,WAAW,SAAS,MAC3B,OAAS,GAAI,EAAG,EAAI,IAAK,IACrB,EAAO,WAAW,EAAI,GAAK,EAAO,WAAW,EAAI,IAAM,EAG/D,AAAI,GAAK,kBAAoB,IAAS,EAAK,kBAAoB,SACvD,GAAO,iBAAiB,YAAc,IACtC,GAAW,qBAAsB,GAAO,IACxC,EAAO,oBAAsB,EAC7B,MAEJ,EAAO,oBAAsB,EAC7B,KACA,EAAO,gBAAkB,IAK7B,AAAI,MAAO,GAAK,YAAe,SAC3B,EAAO,WAAa,CAAC,GAErB,EAAO,WAAa,EAAK,WAG7B,GAAM,GAAO,EAAK,aAClB,GAAI,GAAQ,sBAAwB,GAAM,CACtC,EAAO,aAAe,CAClB,eAAgB,EAAK,eACrB,gBAAiB,EAAK,gBACtB,WAAY,EACZ,aAAc,KAAK,IAAI,EAAG,OAAO,EAAK,oBACtC,YAAa,EACb,cAAe,KAAK,IAAI,EAAG,OAAO,EAAK,qBACvC,iBAAkB,OAAO,EAAK,wBAC9B,SAAU,EACV,SAAU,EACV,aAAc,OAAO,EAAK,gBAC1B,WAAY,EACZ,mBAAoB,EAAK,mBACzB,cAAe,EACf,YAAa,OAAO,EAAK,mBACzB,iBAAkB,OAAO,EAAK,wBAC9B,iBAAkB,OAAO,EAAK,wBAC9B,YAAa,EACb,YAAa,EACb,YAAa,EACb,eAAgB,EAChB,WAAY,EACZ,YAAa,EACb,YAAa,EACb,WAAY,EACZ,SAAU,GAGd,GAAM,GAAgB,OAAO,EAAO,QAEpC,EAAO,OAAO,IAAI,IAAM,EAAK,mBAAqB,GAAG,EAAK,GAAK,mBAAqB,GAAK,EAAK,mBAAoB,IAClH,EAAO,OAAO,IAAI,IAAM,EAAK,oBAAsB,GAAG,EAAK,GAAK,oBAAsB,GAAK,EAAK,oBAAqB,IACrH,EAAO,OAAO,IAAI,IAAM,EAAK,kBAAoB,GAAG,EAAK,GAAK,kBAAoB,GAAK,EAAK,kBAAoB,IAAM,KAAK,IAAI,EAAG,EAAK,mBAAoB,IAC3J,EAAO,OAAO,IAAI,IAAM,EAAK,mBAAqB,GAAG,EAAK,GAAK,mBAAqB,GAAK,EAAK,mBAAqB,IAAM,KAAK,IAAI,EAAG,EAAK,oBAAqB,IAC/J,EAAO,OAAO,IAAI,IAAM,EAAK,cAAgB,IAAI,EAAK,GAAK,cAAgB,GAAK,EAAK,cAAe,IACpG,EAAO,OAAO,IAAI,IAAM,EAAK,cAAgB,GAAG,EAAK,GAAK,cAAgB,GAAK,EAAK,cAAe,IACnG,EAAO,OAAO,IAAI,IAAM,EAAK,iBAAmB,IAAI,EAAK,GAAK,iBAAmB,GAAM,EAAK,iBAAmB,IAC/G,EAAO,OAAO,IACV,MAAO,GAAK,YAAe,SACrB,IAAM,EAAK,WAAa,IAAI,EAAK,GAAK,WAAa,GAAK,EAAK,WAC7D,IAAM,EAAK,gBAAkB,IAAI,EAAK,GAAK,gBAAkB,GAAK,EAAK,gBAC7E,IAGJ,QAAQ,IAAI,wDAA0D,EAAO,CAAC,EAAO,OAAS,CAAC,GAAiB,uDA6BpH,GA1BI,EAAO,aAAa,cAAgB,QACpC,GAAO,aAAa,YAAc,EAClC,EAAO,aAAa,YAAc,EAClC,EAAO,aAAa,YAAc,EAClC,EAAO,aAAa,eAAiB,GAGrC,EAAO,QAAQ,KAAO,QACtB,GAAO,QAAQ,GAAK,EAAO,QAAQ,GAAK,EACxC,EAAO,WAAW,GAAK,EAAO,WAAW,GAAK,GAIlD,EAAO,gBAAkB,CACrB,QAAS,GACT,aAAc,GACd,MAAO,GACP,UAAW,GACX,MAAO,GACP,YAAa,GACb,iBAAkB,GAClB,WAAY,IAKZ,EAAK,kBAAoB,OACzB,OAAW,KAAQ,IAAU,gBAAiB,CAC1C,GAAM,GAAI,EAEV,AAAI,EAAK,gBAAgB,IACrB,GAAO,gBAAgB,GAAK,GAAgB,EAAK,gBAAgB,KAgB7E,IAZI,EAAK,0BAA4B,QACjC,GAAO,wBAA0B,EACjC,EAAO,uBAAyB,GAGhC,EAAK,aAAa,aAAe,QACjC,GAAO,aAAa,WAAa,EACjC,EAAO,aAAa,YAAc,EAClC,EAAO,aAAa,YAAc,EAClC,EAAO,aAAa,WAAa,GAG9B,EAAO,aAAa,OAAS,QAChC,EAAO,aAAa,KAAK,GAgB7B,IAbI,EAAK,eAAiB,QACtB,GAAO,aAAe,GAEtB,EAAK,iBAAmB,QACxB,GAAO,eAAiB,EACxB,EAAO,aAAa,SAAW,EAC/B,EAAO,qBAAuB,GAG9B,EAAK,eAAe,KAAO,QAC3B,GAAO,eAAe,GAAK,IAGxB,EAAO,iBAAiB,MAAQ,QACnC,EAAO,iBAAiB,KAAK,GAGjC,AAAI,EAAK,aAAe,QACpB,GAAO,WAAa,GACpB,EAAO,OAAO,IAAI,IAAQ,EAAO,aAAa,WAAa,IAAQ,EAAK,GAAO,aAAa,WAAa,GAAM,EAAO,aAAa,WAAa,IAChJ,EAAO,OAAO,IAAI,IAAQ,EAAO,aAAa,YAAc,IAAO,EAAK,GAAO,aAAa,YAAc,GAAM,EAAO,aAAa,YAAc,IAClJ,EAAO,OAAO,IAAI,KAAQ,EAAO,aAAa,YAAc,KAAQ,EAAK,GAAO,aAAa,YAAc,GAAM,EAAO,aAAa,YAAc,IACnJ,EAAO,aAAa,WAAa,EACjC,EAAO,aAAa,YAAc,EAClC,EAAO,aAAa,YAAc,EAClC,EAAO,aAAe,IAAM,EAAO,iBAAiB,IACpD,EAAM,2IAGN,EAAK,aAAe,QACpB,GAAO,WAAa,GACpB,EAAO,OAAO,IAAI,IAAO,EAAO,aAAa,SAAW,IAAO,EAAK,GAAO,aAAa,SAAW,GAAM,EAAO,aAAa,SAAW,IACxI,EAAO,aAAa,SAAW,EAC/B,EAAM,qOACN,EAAO,cAAgB,GAAI,GAAQ,SACnC,EAAO,eAAiB,IC1bzB,GAAM,IAAU,GAAI,KAAqC,CAC5D,CAAC,IAAK,CAAC,mBAAoB,IAAM,OACjC,CAAC,IAAK,CAAC,oBAAqB,IAAM,OAClC,CAAC,IAAK,CAAC,iBAAkB,IAAM,CAC3B,AAAI,EAAO,iBAAiB,gBAAkB,GAC1C,EAAW,yBAA0B,OAAW,IAEhD,EAAO,iBAAiB,eAAiB,GACzC,EAAW,YAAa,OAAW,OAG3C,CAAC,IAAK,CAAC,cAAe,IAAM,OAC5B,CAAC,IAAK,CAAC,iBAAkB,IAAM,EAAW,cAC1C,CAAC,IAAK,CAAC,oBAAqB,IAAM,EAAW,iBAC7C,CAAC,IAAK,CAAC,iBAAkB,IAAM,OAC/B,CAAC,IAAK,CAAC,kBAAmB,IAAM,EAAW,eAC3C,CAAC,YAAa,CAAC,aAAc,IAAM,GAAkB,MACrD,CAAC,aAAc,CAAC,WAAY,IAAM,GAAkB,KACpD,CAAC,UAAW,CAAC,gBAAiB,IAAM,GAAkB,GAAI,MAC1D,CAAC,YAAa,CAAC,cAAe,IAAM,GAAkB,EAAG,QAG7D,SAAS,iBAAiB,UAAW,GAAS,CA5B9C,MA6BI,GAAI,aAAS,gBAAT,cAAwB,aAAc,QAGtC,MAAO,GAAM,kBAGjB,GAAM,GAAM,EAAM,IAAI,cAEtB,AAAI,GAAQ,IAAI,IACZ,GAAQ,IAAI,GAAK,OAIzB,GAAM,IAAW,CAAC,EAAa,IAAkB,CAC7C,GAAM,GAAM,SAAS,cAAc,OACnC,EAAI,UAAU,IAAI,cAElB,GAAM,GAAO,SAAS,cAAc,QACpC,EAAK,GAAK,eACV,EAAK,YAAc,EACnB,EAAK,iBAAiB,QAAS,KAAO,IAAM,CACxC,GAAM,GAAS,EAAE,OAEX,EAAS,KAAM,IAAO;AAAA,iDACa,EAAO,WAAW,cAAc,KAAK;AAAA;AAAA;AAAA;AAAA,WAM9E,GAAI,MAAO,IAAW,SAAU,OAGhC,GAAM,GAAS,EAAO,YAAY,cAC5B,EAAQ,EAAO,cAErB,GAAI,EAAO,SAAW,EAClB,MAAO,GAAM,wCAEjB,GAAI,GAAQ,IAAI,GACZ,MAAO,GAAM,qEACV,GAAI,GAAQ,IAAI,GAAS,CAC5B,GAAM,GAAM,GAAQ,IAAI,GAExB,GAAQ,IAAI,EAAO,GACnB,GAAQ,OAAO,GAEf,EAAO,YAAc,MAErB,OAAO,GAAM,6BAA6B,QAIlD,GAAM,GAAI,SAAS,cAAc,KACjC,SAAE,GAAK,aACP,EAAE,YAAc,EAEhB,EAAI,YAAY,GAChB,EAAI,YAAY,GAET,GAGE,GAAe,IAAM,CAC9B,GAAM,GAAS,SAAS,cAAc,YAEtC,OAAW,KAAS,OAAM,KAAK,EAAO,UAClC,EAAO,YAAY,GAEvB,OAAW,CAAC,EAAK,CAAC,KAAW,CAAC,GAAG,GAAQ,WAAY,CACjD,GAAM,GAAM,GAAS,EAAK,GAE1B,EAAO,YAAY,KrCrDpB,GAAM,IAAe,GAAI,KACnB,GAAW,GAAI,OAAM,YAAa,CAC3C,MAAM,EAAQ,EAAS,EAAsC,CACzD,GAAM,GAAM,EAAO,MAAM,EAAS,GAClC,UAAa,IAAI,GACV,KAIF,GAAW,GAAI,OAAM,cAAe,CAC7C,MAAM,EAAQ,EAAS,EAAwC,CAC3D,GAAM,GAAK,EAAK,GAChB,MAAI,IAAa,IAAI,IACjB,GAAa,OAAO,GAEjB,EAAO,MAAM,EAAS,MAIxB,EAAiB,CAC1B,OAAQ,GAAI,IAAa,CAAE,OAAQ,IACnC,MAAO,GAAI,GAAQ,OACnB,kBAAmB,GAAI,GAAQ,OAC/B,sBAAuB,GAAI,GAAQ,OACnC,uBAAwB,GAAI,GAAQ,OACpC,WAAY,GAAI,GAAQ,OAExB,eAAgB,EAChB,mBAAoB,GAAI,GAAQ,KAChC,cAAe,GAAI,GAAQ,OAC3B,iBAAkB,IAElB,gBAAiB,EACjB,oBAAqB,GAAI,GAAQ,KACjC,eAAgB,GAAI,GAAQ,OAC5B,kBAAmB,IAEnB,eAAgB,EAChB,mBAAoB,GAAI,GAAQ,KAChC,cAAe,GAAI,GAAQ,OAC3B,iBAAkB,GAElB,gBAAiB,EACjB,oBAAqB,GAAI,GAAQ,KACjC,eAAgB,GAAI,GAAQ,OAC5B,kBAAmB,IAEnB,eAAgB,EAChB,mBAAoB,GAAI,GAAQ,KAChC,cAAe,GAAI,GAAQ,QAC3B,iBAAkB,KAElB,mBAAoB,EACpB,uBAAwB,GAAI,GAAQ,KACpC,kBAAmB,GAAI,GAAQ,OAC/B,qBAAsB,IAEtB,oBAAqB,EACrB,wBAAyB,GAAI,GAAQ,KACrC,mBAAoB,GAAI,GAAQ,OAChC,sBAAuB,KAEvB,mBAAoB,EACpB,uBAAwB,GAAI,GAAQ,KACpC,kBAAmB,GAAI,GAAQ,QAC/B,qBAAsB,KAEtB,oBAAqB,EACrB,wBAAyB,GAAI,GAAQ,KACrC,mBAAoB,GAAI,GAAQ,QAChC,sBAAuB,KAEvB,mBAAoB,EACpB,uBAAwB,GAAI,GAAQ,KACpC,kBAAmB,GAAI,GAAQ,SAC/B,qBAAsB,KAEtB,iBAAkB,EAClB,qBAAsB,GAAI,GAAQ,KAClC,gBAAiB,GAAI,GAAQ,KAC7B,mBAAoB,EAEpB,kBAAmB,EACnB,sBAAuB,GAAI,GAAQ,KACnC,iBAAkB,GAAI,GAAQ,OAC9B,oBAAqB,IAErB,iBAAkB,EAClB,qBAAsB,GAAI,GAAQ,KAClC,gBAAiB,GAAI,GAAQ,OAC7B,mBAAoB,KAEpB,kBAAmB,EACnB,sBAAuB,GAAI,GAAQ,KACnC,iBAAkB,GAAI,GAAQ,OAC9B,oBAAqB,KAErB,iBAAkB,EAClB,qBAAsB,GAAI,GAAQ,KAClC,gBAAiB,GAAI,GAAQ,QAC7B,mBAAoB,KAEpB,oBAAqB,EACrB,wBAAyB,GAAI,GAAQ,KACrC,mBAAoB,GAAI,GAAQ,KAChC,sBAAuB,IAEvB,qBAAsB,EACtB,yBAA0B,GAAI,GAAQ,KACtC,oBAAqB,GAAI,GAAQ,OACjC,uBAAwB,GAExB,oBAAqB,EACrB,wBAAyB,GAAI,GAAQ,KACrC,mBAAoB,GAAI,GAAQ,OAChC,sBAAuB,IAEvB,qBAAsB,EACtB,yBAA0B,GAAI,GAAQ,KACtC,oBAAqB,GAAI,GAAQ,OACjC,uBAAwB,GAExB,oBAAqB,EACrB,wBAAyB,GAAI,GAAQ,KACrC,mBAAoB,GAAI,GAAQ,QAChC,sBAAuB,GAEvB,eAAgB,EAChB,mBAAoB,GAAI,GAAQ,KAChC,cAAe,GAAI,GAAQ,SAC3B,iBAAkB,KAElB,gBAAiB,EACjB,oBAAqB,GAAI,GAAQ,KACjC,eAAgB,GAAI,GAAQ,KAC5B,kBAAmB,KAEnB,eAAgB,EAChB,mBAAoB,GAAI,GAAQ,KAChC,cAAe,GAAI,GAAQ,OAC3B,iBAAkB,KAElB,gBAAiB,EACjB,oBAAqB,GAAI,GAAQ,KACjC,eAAgB,GAAI,GAAQ,OAC5B,kBAAmB,KAEnB,eAAgB,EAChB,mBAAoB,GAAI,GAAQ,KAChC,cAAe,GAAI,GAAQ,QAC3B,iBAAkB,KAElB,eAAgB,EAChB,mBAAoB,GAAI,GAAQ,KAChC,cAAe,GAAI,GAAQ,QAC3B,iBAAkB,KAElB,iBAAkB,EAClB,qBAAsB,GAAI,GAAQ,KAClC,gBAAiB,GAAI,GAAQ,SAC7B,mBAAoB,KAEpB,gBAAiB,EACjB,oBAAqB,GAAI,GAAQ,KACjC,eAAgB,GAAI,GAAQ,SAC5B,kBAAmB,KAEnB,gBAAiB,CACb,KAAM,EACN,MAAO,EACP,UAAW,GAAI,GAAQ,KACvB,WAAY,KAEhB,gBAAiB,CACb,KAAM,GACN,MAAO,EACP,UAAW,GAAI,GAAQ,KACvB,WAAY,KAEhB,gBAAiB,CACb,KAAM,IACN,MAAO,EACP,UAAW,GAAI,GAAQ,KACvB,WAAY,KAEhB,gBAAiB,CACb,KAAM,IACN,MAAO,EACP,UAAW,GAAI,GAAQ,KACvB,WAAY,KAEhB,gBAAiB,CACb,KAAM,IACN,MAAO,EACP,UAAW,GAAI,GAAQ,KACvB,WAAY,KAGhB,eAAgB,GAAI,GAAQ,OAC5B,iBAAkB,EAElB,gBAAiB,GAAI,GAAQ,OAC7B,kBAAmB,EAEnB,uBAAwB,EACxB,qBAAsB,GAAI,GAAQ,OAElC,SAAU,MAAM,KAAK,KAAK,GAE1B,cAAe,EACf,eAAgB,EAChB,mBAAoB,EAEpB,eAAgB,GAAI,GAAQ,KAC5B,gBAAiB,GAAI,GAAQ,KAC7B,oBAAqB,GAAI,GAAQ,KAEjC,eAAgB,GAAI,GAAQ,KAC5B,gBAAiB,GAAI,GAAQ,KAC7B,oBAAqB,GAAI,GAAQ,KAEjC,QAAS,CACL,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,IAGR,qBAAsB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpE,4BAA6B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3E,oBAAqB,EACrB,2BAA4B,EAE5B,gBAAiB,GACjB,iBAAkB,CACd,aAAc,EACd,cAAe,EACf,UAAW,GAEf,eAAgB,EAChB,eAAgB,EAChB,mBAAoB,EACpB,sBAAuB,EACvB,aAAc,EAEd,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACpF,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE5E,QAAS,CACL,QAAS,GACT,QAAS,GACT,UAAW,GACX,SAAU,GACV,SAAU,GACV,WAAY,GACZ,UAAW,GACX,YAAa,GACb,MAAO,GACP,MAAO,GACP,MAAO,GACP,MAAO,IAEX,aAAc,MAAM,KAAK,KAAK,GAE9B,kBAAmB,EAEnB,qBAAsB,GACtB,sBAAuB,GACvB,sBAAuB,GACvB,uBAAwB,GACxB,wBAAyB,GACzB,yBAA0B,GAC1B,uBAAwB,GACxB,wBAAyB,GACzB,kCAAmC,GACnC,0BAA2B,GAC3B,oCAAqC,GACrC,6CAA8C,GAC9C,sDAAuD,GAEvD,gBAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvC,oBAAqB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KAEpD,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/B,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,WAAY,EACZ,aAAc,EACd,kBAAmB,EAEnB,gBAAiB,EACjB,iBAAkB,EAClB,qBAAsB,EACtB,YAAa,EAEb,eAAgB,EAChB,gBAAiB,EACjB,oBAAqB,EAErB,gBAAiB,WACjB,iBAAkB,YAClB,mBAAoB,aAEpB,aAAc,EACd,aAAc,EACd,aAAc,EAEd,yBAA0B,EAC1B,yBAA0B,EAE1B,cAAe,EACf,iBAAkB,EAClB,gBAAiB,EACjB,kBAAmB,EACnB,kBAAmB,EACnB,mBAAoB,EAGpB,YAAa,CACT,KAAM,GACN,SAAU,GACV,UAAW,GACX,WAAY,GACZ,YAAa,IAEjB,UAAW,EACX,aAAc,EAGd,MAAO,GAAI,KACP,MAAM,KAAK,CAAE,OAAQ,IAAM,CAAC,EAAG,IAAM,CAAC,EAAI,EAAG,MAGjD,WAAY,GACZ,kBAAmB,GACnB,YAAa,GACb,WAAY,GACZ,YAAa,GAEb,aAAc,CACV,eAAgB,EAChB,gBAAiB,EACjB,WAAY,EACZ,aAAc,EACd,YAAa,EACb,cAAe,EACf,iBAAkB,EAClB,SAAU,EACV,SAAU,EACV,aAAc,EACd,WAAY,EACZ,mBAAoB,EACpB,cAAe,EACf,YAAa,EACb,iBAAkB,EAClB,iBAAkB,EAClB,YAAa,EACb,YAAa,EACb,YAAa,EACb,eAAgB,EAChB,WAAY,EACZ,YAAa,EACb,YAAa,EACb,WAAY,EACZ,SAAU,GAEd,oBAAqB,GACrB,kBAAmB,GACnB,kBAAmB,GACnB,mBAAoB,GACpB,aAAc,EACd,cAAe,EACf,eAAgB,EAChB,YAAa,IAEb,UAAW,GAAI,GAAQ,KACvB,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,mBAAoB,EACpB,kBAAmB,IACnB,sBAAuB,IAEvB,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,YAAa,CAAC,KAAM,GAAI,EAAG,EAAG,EAAG,IACjC,YAAa,CAAC,KAAM,EAAG,EAAG,GAAI,GAAI,GAClC,cAAe,CAAC,KAAM,EAAG,GAAI,EAAG,EAAG,IACnC,aAAc,CAAC,KAAM,GAAI,GAAI,EAAG,EAAG,GACnC,aAAc,CAAC,KAAM,EAAG,EAAG,GAAI,GAAI,GACnC,YAAa,CAAC,KAAM,EAAG,EAAG,EAAG,GAAI,IACjC,cAAe,CAAC,KAAM,GAAI,EAAG,GAAI,EAAG,GACpC,eAAgB,EAChB,gBAAiB,EACjB,kBAAmB,EACnB,cAAe,EACf,cAAe,EACf,mBAAoB,EACpB,kBAAmB,EAEnB,wBAAyB,GAEzB,iBAAkB,GAClB,gBAAiB,IACjB,qBAAsB,EACtB,OAAQ,GAER,eAAgB,EAChB,iBAAkB,EAClB,aAAc,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/B,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/E,SAAU,GAAI,IAAS,GACvB,cAAe,GAAI,IAAc,GACjC,cAAe,GAAI,IAAc,GACjC,iBAAkB,GAAI,IAAiB,GACvC,YAAa,EACb,cAAe,CACX,YAAa,EACb,WAAY,EACZ,SAAU,EACV,QAAS,EACT,UAAW,EACX,SAAU,EACV,aAAc,EACd,OAAQ,EACR,cAAe,EACf,YAAa,GAEjB,mBAAoB,CAChB,YAAa,EACb,WAAY,EACZ,SAAU,EACV,QAAS,EACT,UAAW,EACX,SAAU,EACV,aAAc,EACd,OAAQ,EACR,cAAe,EACf,YAAa,GAEjB,mBAAoB,CAChB,YAAa,EACb,WAAY,EACZ,SAAU,EACV,QAAS,EACT,UAAW,EACX,SAAU,EACV,aAAc,EACd,OAAQ,EACR,cAAe,EACf,YAAa,GAEjB,kBAAmB,CACf,MAAO,EACP,WAAY,EACZ,WAAY,EACZ,UAAW,EACX,eAAgB,EAChB,MAAO,EACP,WAAY,EACZ,YAAa,GAIjB,gBAAiB,CACb,QAAS,GACT,aAAc,GACd,MAAO,GACP,UAAW,GACX,MAAO,GACP,YAAa,GACb,iBAAkB,GAClB,WAAY,IAGhB,aAAc,GAAI,GAAQ,KAC1B,WAAY,GACZ,eAAgB,iBAChB,oBAAqB,EACrB,oBAAqB,EACrB,eAAgB,CACZ,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,IAGP,qBAAsB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3D,gBAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtD,mBAAoB,CAChB,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5C,oBAAqB,GAErB,iBAAkB,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpD,QAAS,CAAE,KAAM,GAAI,OAAQ,GAAI,MAAO,IACxC,gBAAiB,GACjB,qBAAsB,GAEtB,qBAAsB,GACtB,mBAAoB,EACpB,qBAAsB,CAAC,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,IACtH,2BAA4B,GAC5B,mBAAoB,CAChB,MAAO,GACP,KAAM,EACN,MAAO,GAGX,mBAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpC,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,sBAAuB,EACvB,oBAAqB,EAErB,eAAgB,CAAC,GAAO,GAAO,GAAO,GAAO,GAAO,IAEpD,WAAY,iCACZ,WAAY,CAAC,GAEb,SAAU,KACV,SAAU,EACV,gBAAiB,EACjB,eAAgB,EAChB,qBAAsB,EACtB,oBAAqB,EACrB,qBAAsB,EACtB,oBAAqB,EACrB,wBAAyB,EACzB,uBAAwB,EACxB,aAAc,EACd,eAAgB,EAChB,qBAAsB,EACtB,iBAAkB,GAClB,gBAAiB,GACjB,gBAAiB,GACjB,WAAY,GACZ,WAAY,GACZ,WACA,QAAS,EACT,gBAAiB,CACb,KAAM,IAID,GAAY,OAAO,OAAO,GAAI,EAAQ,CAC/C,MAAO,GAAI,KAAI,MAAM,KAAK,CAAE,OAAQ,IAAM,CAAC,EAAG,IAAM,CAAC,EAAI,EAAG,QAGnD,GAAc,AAAC,GAAqB,CAC7C,EAAO,YAAc,KAAK,MAC1B,EAAO,WAAa,GACpB,EAAO,kBAAoB,GAG3B,GAAM,GAAI,OAAO,OAAO,GAAI,EAAQ,CAChC,MAAO,MAAM,KAAK,EAAO,OACzB,OAAQ,OAAO,EAAO,QACtB,SAAU,OAAO,EAAO,UACxB,cAAe,OAAO,EAAO,eAC7B,cAAe,OAAO,EAAO,eAC7B,iBAAkB,OAAO,EAAO,oBAMpC,GAHA,aAAa,WAAW,gBACxB,aAAa,QAAQ,eAAgB,KAAK,KAAK,UAAU,KAErD,EAAQ,CACR,GAAM,GAAK,SAAS,eAAe,YACnC,EAAG,YAAc,2BACjB,WAAW,IAAM,EAAG,YAAc,GAAI,OAOxC,GAAU,GAAI,KAA6C,CAC7D,CAAC,SAAU,GAAQ,GAAI,IAAa,CAAE,OAAQ,OAAO,EAAK,WAC1D,CAAC,WAAY,GAAQ,GAAI,IAAS,OAAO,EAAK,YAC9C,CAAC,gBAAiB,GAAQ,GAAI,IAAc,OAAO,EAAK,iBACxD,CAAC,gBAAiB,GAAQ,GAAI,IAAc,OAAO,EAAK,iBACxD,CAAC,mBAAoB,GAAQ,GAAI,IAAiB,OAAO,EAAK,sBAG5D,GAAc,IAAM,CACtB,QAAQ,IAAI,oBACZ,GAAM,GAAO,aAAa,QAAQ,gBAC5B,EAAO,EAAO,KAAK,MAAM,KAAK,IAAS,KAU7C,GARI,IACA,OAAO,eAAe,OAAQ,SAAU,CACpC,MAAO,IAIf,OAAO,OAAO,EAAG,MAAK,KAElB,EAAM,CACN,GACK,GAAK,aAAe,IAAS,EAAK,aAAe,QAClD,CAAC,GAED,MAAO,GAAM,qCAGjB,GAAM,GAAe,MAAM,KACvB,CAAE,OAAQ,IACV,CAAC,EAAG,IAAM,aAAgB,GAAI,GAAK,QAIjC,EAAO,EAAO,MAAM,KAEpB,EAAe,OAAO,KAAK,GAAM,OAAO,GAAK,EAAE,SAAS,eAuC9D,GAtCI,EAAa,OAAS,GACtB,EAAa,QAAQ,GAAK,CACtB,GAAM,GAAQ,EAAK,GACb,EAAM,CAAC,EAAE,QAAQ,SAAU,IACjC,EAAO,MAAM,IAAI,EAAK,QAAQ,MAItC,OAAO,KAAK,GAAM,QAAQ,AAAC,GAAe,CACtC,GAAM,GAAO,EACb,MAAI,IAAQ,IAAI,GACH,EAAO,GAAoB,GAAQ,IAAI,GAAM,GAGtD,GAAU,EAAO,IACR,EAAO,GAAoB,GAAI,GAAQ,EAAK,IAC9C,IAAS,QACR,EAAO,MAAQ,GAAI,KAAI,EAAK,IAC7B,EAAa,SAAS,GAC7B,OACO,MAAM,QAAQ,EAAK,KAKrB,EAAO,GAAoB,OAAS,EAAK,GAAM,OACxC,EAAO,GAAsB,EAAK,GAAM,MAAM,EAAK,GAAM,OAAU,EAAO,GAAoB,QAIrG,EAAO,GAAoB,EAAK,KAGzC,EAAK,mBAAqB,QAC1B,EAAO,MAAM,IAAI,GAAI,IAIrB,EAAO,MAAM,KAAO,EACpB,OAAS,GAAI,EAAO,MAAM,KAAO,EAAG,GAAK,EAAM,IAC3C,AAAK,EAAO,MAAM,IAAI,IAClB,EAAO,MAAM,IAAI,EAAG,IAMhC,GAAI,EAAO,MAAM,KAAO,EACpB,OAAS,GAAI,EAAO,MAAM,KAAO,EAAG,GAAK,EAAM,IAC3C,AAAK,EAAO,MAAM,IAAI,IAClB,EAAO,MAAM,IAAI,EAAG,IAoNhC,GA/MK,WAAa,IACd,GAAO,QAAU,GAGjB,GAAK,aAAe,QAAa,CAAC,EAAK,aACvC,GAAO,WAAa,IAEpB,GAAK,oBAAsB,QAAa,CAAC,EAAK,oBAC9C,GAAO,kBAAoB,IAE3B,EAAK,cAAgB,QACrB,GAAO,YAAc,IAErB,EAAK,aAAe,QACpB,GAAO,WAAa,IAEpB,EAAK,cAAgB,QACrB,GAAO,YAAc,IAKtB,EAAK,eAAiB,QACrB,GAAO,aAAe,OAAO,OAAO,GAAI,GAAU,eAGlD,EAAO,WAAW,MAAQ,QAC1B,GAAO,MAAM,IAAI,GAAI,IACrB,EAAO,WAAW,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/F,EAAO,aAAa,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrF,EAAO,aAAe,EAAO,WAC7B,EAAO,aAAe,EAAO,eAC7B,EAAO,gBAAkB,MAAQ,EAAO,WAAW,IACnD,EAAO,WAAW,IAAM,GAG5B,EAAO,aAAe,EAAO,cAAgB,EAC7C,EAAO,aAAe,EAAO,cAAgB,EAC7C,EAAO,WAAa,EAAO,YAAc,EACzC,EAAO,eAAiB,EAAO,gBAAkB,EAE7C,EAAC,EAAK,YAAc,EAAK,oBAAsB,MAAQ,EAAK,aAAa,iBAAmB,SAC5F,GAAO,oBAAsB,EAC7B,EAAO,qBAAuB,EAC9B,EAAO,oBAAsB,EAC7B,EAAO,qBAAuB,EAC9B,EAAO,oBAAsB,EAC7B,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,oBAAsB,GAAI,GAAQ,OACzC,EAAO,mBAAqB,GAAI,GAAQ,OACxC,EAAO,oBAAsB,GAAI,GAAQ,OACzC,EAAO,mBAAqB,GAAI,GAAQ,QACxC,EAAO,oBAAsB,GAC7B,EAAO,mBAAqB,GAC5B,EAAO,aAAe,EACtB,EAAO,cAAgB,EACvB,EAAO,eAAiB,EACxB,EAAO,WAAa,GACpB,EAAO,MAAM,IAAI,GAAI,KAEpB,EAAK,mBACN,GAAO,kBAAoB,GAC3B,EAAO,MAAM,IAAI,GAAI,IACrB,EAAO,oBAAsB,EAC7B,EAAO,qBAAuB,EAC9B,EAAO,oBAAsB,EAC7B,EAAO,qBAAuB,EAC9B,EAAO,oBAAsB,EAC7B,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,oBAAsB,GAAI,GAAQ,OACzC,EAAO,mBAAqB,GAAI,GAAQ,OACxC,EAAO,oBAAsB,GAAI,GAAQ,OACzC,EAAO,mBAAqB,GAAI,GAAQ,SAExC,GAAK,cAAgB,QAAa,CAAC,EAAK,aAAe,EAAO,WAAW,IAAM,KAAO,EAAO,WAAW,IAAM,KAAO,EAAO,WAAW,IAAM,KAAO,EAAO,WAAW,IAAM,KAAO,EAAO,WAAW,IAAM,KAC3M,GAAO,YAAc,GACrB,EAAO,gBAAkB,KAAQ,EAAO,WAAW,IACnD,EAAO,gBAAkB,IAAM,EAAO,WAAW,IACjD,EAAO,gBAAkB,KAAQ,EAAO,WAAW,IACnD,EAAO,gBAAkB,KAAQ,EAAO,WAAW,IACnD,EAAO,gBAAkB,KAAQ,EAAO,WAAW,IACnD,EAAO,gBAAkB,IAAM,EAAO,WAAW,IACjD,EAAO,gBAAkB,IAAM,EAAO,WAAW,IACjD,EAAO,gBAAkB,KAAQ,EAAO,WAAW,IACnD,EAAO,gBAAkB,IAAM,EAAO,WAAW,IACjD,EAAO,gBAAkB,IAAM,EAAO,WAAW,IACjD,EAAO,gBAAkB,IAAM,EAAO,WAAW,IACjD,EAAO,gBAAkB,MAAU,EAAO,WAAW,IACrD,EAAO,WAAW,IAAM,EACxB,EAAO,WAAW,IAAM,EACxB,EAAO,WAAW,IAAM,EACxB,EAAO,WAAW,IAAM,EACxB,EAAO,WAAW,IAAM,EACxB,EAAO,WAAW,IAAM,EACxB,EAAO,WAAW,IAAM,GAKxB,GAAK,aAAa,OAAS,QAC3B,EAAO,aAAa,OAAS,QAG7B,EAAK,aAAe,QACpB,EAAK,aAAe,KAEpB,GAAO,WAAa,GACpB,EAAO,MAAM,IAAI,GAAI,IAErB,EAAO,eAAiB,EACxB,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,cAAgB,GAAI,GAAQ,SACnC,EAAO,iBAAmB,KAE1B,EAAO,gBAAkB,EACzB,EAAO,oBAAsB,GAAI,GAAQ,KACzC,EAAO,eAAiB,GAAI,GAAQ,KACpC,EAAO,kBAAoB,KAE3B,EAAO,eAAiB,EACxB,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,cAAgB,GAAI,GAAQ,OACnC,EAAO,iBAAmB,KAE1B,EAAO,gBAAkB,EACzB,EAAO,oBAAsB,GAAI,GAAQ,KACzC,EAAO,eAAiB,GAAI,GAAQ,OACpC,EAAO,kBAAoB,KAE3B,EAAO,eAAiB,EACxB,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,cAAgB,GAAI,GAAQ,QACnC,EAAO,iBAAmB,KAE1B,EAAO,eAAiB,EACxB,EAAO,mBAAqB,GAAI,GAAQ,KACxC,EAAO,cAAgB,GAAI,GAAQ,QACnC,EAAO,iBAAmB,KAE1B,EAAO,iBAAmB,EAC1B,EAAO,qBAAuB,GAAI,GAAQ,KAC1C,EAAO,gBAAkB,GAAI,GAAQ,SACrC,EAAO,mBAAqB,KAE5B,EAAO,gBAAkB,EACzB,EAAO,oBAAsB,GAAI,GAAQ,KACzC,EAAO,eAAiB,GAAI,GAAQ,SACpC,EAAO,kBAAoB,KAE3B,EAAO,aAAa,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChE,EAAO,UAAY,GAAI,GAAQ,KAE/B,EAAO,SAAS,IAAM,EACtB,EAAO,SAAS,IAAM,EACtB,EAAO,SAAS,IAAM,EAEtB,EAAO,SAAS,IAAM,EACtB,EAAO,SAAS,IAAM,EACtB,EAAO,SAAS,IAAM,EACtB,EAAO,SAAS,IAAM,EACtB,EAAO,SAAS,IAAM,EAMtB,EAAO,YAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEvD,EAAO,QAAQ,MAAQ,GACvB,EAAO,gBAAkB,IAAM,EAAO,WAAW,IACjD,EAAO,gBAAkB,IAAM,EAAO,WAAW,IACjD,EAAO,gBAAkB,IAAM,EAAO,WAAW,IACjD,EAAO,gBAAkB,KAAO,EAAO,WAAW,IAClD,EAAO,WAAW,IAAM,EACxB,EAAO,WAAW,IAAM,EACxB,EAAO,WAAW,IAAM,EACxB,EAAO,WAAW,IAAM,EACxB,EAAO,WAAW,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE/F,EAAO,eAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,EAAO,eAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE3C,EAAO,eAAiB,EACxB,EAAO,gBAAkB,EACzB,EAAO,kBAAoB,EAC3B,EAAO,cAAgB,EACvB,EAAO,cAAgB,EACvB,EAAO,mBAAqB,EAC5B,EAAO,kBAAoB,EAC3B,EAAO,wBAA0B,GAEjC,EAAO,YAAc,CAAC,KAAM,GAAI,EAAG,EAAG,EAAG,IACzC,EAAO,YAAc,CAAC,KAAM,EAAG,EAAG,GAAI,GAAI,GAC1C,EAAO,cAAgB,CAAC,KAAM,EAAG,GAAI,EAAG,EAAG,IAC3C,EAAO,aAAe,CAAC,KAAM,GAAI,GAAI,EAAG,EAAG,GAC3C,EAAO,aAAe,CAAC,KAAM,EAAG,EAAG,GAAI,GAAI,GAC3C,EAAO,YAAc,CAAC,KAAM,EAAG,EAAG,EAAG,GAAI,IACzC,EAAO,cAAgB,CAAC,KAAM,GAAI,EAAG,GAAI,EAAG,GAE5C,EAAO,mBAAqB,EAC5B,EAAO,kBAAoB,EAE3B,EAAO,mBAAqB,EAC5B,EAAO,sBAAwB,GAI/B,EAAK,cAAgB,QAAa,EAAK,cAAgB,GAAO,CAC9D,EAAO,YAAc,GAErB,GAAM,GAAc,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAC5B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjC,EAAe,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAChE,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KACnC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9C,OAAS,GAAI,EAAG,EAAI,EAAY,OAAQ,IACpC,EAAO,gBAAkB,EAAO,WAAW,EAAY,IAAM,EAAa,GAC1E,EAAO,WAAW,EAAY,IAAM,EAExC,EAAO,iBAAmB,GAC1B,EAAO,OAAS,GA0CpB,GAvCI,EAAO,eAAiB,GAAK,EAAO,cAAc,IAAI,WACtD,GAAO,cAAgB,GAAI,GAAQ,SACnC,EAAO,eAAiB,GAG5B,GAAqB,GACjB,GAAK,iBAAmB,QAAa,EAAO,iBAAmB,IAC/D,GAAO,eAAiB,EACpB,GAAO,mBAAqB,QAAc,EAAO,mBAAqB,GAAK,EAAO,cAAgB,IAClG,GAAO,iBAAmB,MAAQ,IAEtC,EAAO,aAAe,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/B,EAAO,SAAW,GAAI,IAAS,GAC/B,EAAO,cAAgB,GAAI,IAAc,GACzC,EAAO,cAAgB,GAAI,IAAc,GACzC,EAAO,cAAgB,CACnB,YAAa,EACb,WAAY,EACZ,SAAU,EACV,QAAS,EACT,UAAW,EACX,SAAU,EACV,aAAc,EACd,OAAQ,EACR,cAAe,EACf,YAAa,IAGjB,EAAK,kBAAoB,QACzB,GAAO,gBAAkB,KAEzB,EAAK,uBAAyB,QAC9B,GAAO,qBAAuB,GAG9B,EAAO,aAAa,KAAO,GAAK,EAAO,QAAQ,IAC/C,OAAS,GAAI,GAAI,GAAK,GAAI,IACtB,EAAO,QAAQ,GAAK,GAI5B,AAAI,EAAO,eAAiB,GACxB,GAAO,eAAiB,GAExB,EAAO,mBAAqB,GAC5B,GAAO,mBAAqB,GAE5B,EAAO,WAAa,GACpB,GAAO,WAAa,GAEpB,EAAO,eAAiB,GACxB,GAAO,eAAiB,GAGxB,EAAO,eAAiB,GACxB,GAAO,aAAe,EACtB,EAAO,aAAe,EACtB,EAAO,aAAe,GAEtB,EAAO,2BAA6B,GACpC,GAAO,yBAA2B,GAElC,EAAO,mBAAqB,IAAO,EAAO,QAAQ,QAAU,IAC5D,GAAO,QAAU,CACb,QAAS,GACT,QAAS,GACT,UAAW,GACX,SAAU,GACV,SAAU,GACV,WAAY,GACZ,UAAW,GACX,YAAa,GACb,MAAO,GACP,MAAO,GACP,MAAO,GACP,MAAO,KAIX,GAAK,UAAY,QAAa,EAAO,UAAY,SACjD,GAAO,QAAU,CAAE,KAAM,GAAI,OAAQ,GAAI,MAAO,KAEhD,GAAK,uBAAyB,QAAa,EAAO,uBAAyB,SAC3E,GAAO,qBAAuB,GAC9B,EAAO,gBAAkB,IAGxB,OAAO,UAAU,EAAO,gBAAgB,OACzC,GAAO,gBAAgB,KAAO,EAC9B,EAAO,gBAAgB,MAAQ,EAC/B,EAAO,gBAAgB,KAAO,GAC9B,EAAO,gBAAgB,MAAQ,EAC/B,EAAO,gBAAgB,KAAO,IAC9B,EAAO,gBAAgB,MAAQ,EAC/B,EAAO,gBAAgB,KAAO,IAC9B,EAAO,gBAAgB,MAAQ,EAC/B,EAAO,gBAAgB,KAAO,IAC9B,EAAO,gBAAgB,MAAQ,GAG9B,EAAO,UACR,GAAO,SAAW,GAAI,MAAK,EAAO,WAGtC,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAkB,iBAAiB,IACzC,EAAO,GAAiB,UAAY,GAAI,GAAQ,EAAO,GAAiB,WAG5E,KAAO,EAAO,aAAa,OAAS,QAChC,EAAO,aAAa,KAAK,GAE7B,KAAO,EAAO,WAAW,OAAS,QAC9B,EAAO,WAAW,KAAK,GAE3B,KAAO,EAAO,SAAS,OAAS,QAC5B,EAAO,SAAS,KAAK,GAIzB,AAAI,GAAO,aAAe,QAAa,EAAO,aAAe,IAAM,EAAO,aAAe,4BACrF,GAAO,WAAa,kCAExB,EAAiC,mBAAmB,MAAQ,EAAO,WAEnE,EAAO,SAAW,GAAI,IAAS,OAAO,EAAO,WAAa,GAE1D,OAAS,GAAI,EAAG,EAAI,IAAK,IACrB,GAAc,GAGlB,OAAS,GAAI,EAAG,GAAM,IAAM,IACxB,GAAiB,GAErB,OAAS,GAAI,EAAG,GAAK,GAAI,IACrB,GAAoB,GAExB,GAAM,GAAU,SAAS,iBAAiB,sBAC1C,OAAS,GAAI,EAAG,GAAK,EAAQ,OAAQ,IACjC,GAAwB,GAG5B,GAAM,GAAI,CAAC,OAAQ,UAAW,SAAU,WAAY,WAAY,aAChE,AAAI,EAAO,gBAAkB,GAAK,EAAO,gBAAkB,IAAM,EAAO,gBAAkB,KAAO,EAAO,gBAAkB,KACtH,GAAO,cAAgB,GAEvB,EAAO,mBAAqB,GAAK,EAAO,mBAAqB,IAAM,EAAO,mBAAqB,KAAO,EAAO,mBAAqB,KAClI,GAAO,iBAAmB,GAE1B,EAAO,kBAAoB,GAAK,EAAO,kBAAoB,IAAM,EAAO,kBAAoB,KAAO,EAAO,kBAAoB,KAC9H,GAAO,gBAAkB,GAEzB,EAAO,oBAAsB,GAAK,EAAO,oBAAsB,IAAM,EAAO,oBAAsB,KAAO,EAAO,oBAAsB,KACtI,GAAO,kBAAoB,GAE3B,EAAO,oBAAsB,GAAK,EAAO,oBAAsB,IAAM,EAAO,oBAAsB,KAAO,EAAO,oBAAsB,KACtI,GAAO,kBAAoB,GAE3B,EAAO,qBAAuB,GAAK,EAAO,qBAAuB,IAAM,EAAO,qBAAuB,KAAO,EAAO,qBAAuB,KAC1I,GAAO,mBAAqB,GAEhC,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,CACxB,GAAI,GACJ,AAAI,IAAM,GACN,GAAI,OAEJ,IAAM,GACN,GAAI,OAEJ,IAAM,GACN,GAAI,WAEJ,IAAM,GACN,GAAI,YAER,GAAM,GAAI,EAAE,GAAK,EACjB,SAAS,eAAe,GAAG,MAAM,gBAAkB,GAEvD,GAAI,GACE,EAAe,EAAO,GAAG,EAAE,eACjC,AAAI,IAAiB,GACjB,GAAI,OAEJ,IAAiB,IACjB,GAAI,OAEJ,IAAiB,KACjB,GAAI,WAEJ,IAAiB,KACjB,GAAI,YAGR,GAAM,GAAI,EAAE,GAAK,EACjB,SAAS,eAAe,GAAG,MAAM,gBAAkB,QAIvD,GAAM,GAAY,GAElB,OAAS,GAAI,EAAG,EAAI,EAAE,kBAAqB,OAAQ,IAC/C,EAAU,KAAK,EAAE,kBAAqB,IAG1C,EAAE,oBAAyB,GAAgB,GAC3C,EAAO,oBAAsB,EAG7B,KACA,KACA,KACA,IACA,KAEA,SAAS,eAAe,mBAAmB,YAAc,EAAO,EAAO,mBAAmB,MAAO,EAAG,IAAQ,IAC5G,EAAiC,gCAAgC,MAAQ,EAAO,mBAAmB,MAAQ,GAC3G,SAAS,eAAe,kBAAkB,YAAc,EAAO,EAAO,mBAAmB,KAAM,EAAG,IAAQ,IAC1G,EAAiC,+BAA+B,MAAQ,EAAO,mBAAmB,KAAO,GACzG,SAAS,eAAe,mBAAmB,YAAc,EAAO,EAAO,mBAAmB,MAAO,EAAG,IAAQ,IAC5G,EAAiC,gCAAgC,MAAQ,EAAO,mBAAmB,MAAQ,GAE3G,KACA,OAAS,GAAI,EAAG,EAAI,EAAG,IACnB,GAA6B,GAEjC,KAEA,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAO,SAAS,eAAe,sBAAwB,GAC7D,AAAC,EAAO,eAAe,GAClB,GAAK,YAAc,YAAa,EAAK,MAAM,OAAS,mBACpD,GAAK,YAAc,aAAc,EAAK,MAAM,OAAS,iBAG9D,SAAS,eAAe,8BAA8B,YAAc,EAAO,EAAO,sBAAuB,EAAG,IAC5G,SAAS,eAAe,4BAA4B,YAAc,EAAO,EAAO,oBAAqB,EAAG,IAExG,SAAS,eAAe,qBAAqB,YAAc,gEAAmE,KAAM,EAAE,mBAAwB,KAAK,YAAY,GAAK,IAEpL,SAAS,eAAe,mBAAmB,MAAM,QAAU,OAC3D,SAAS,eAAe,kBAAkB,MAAM,QAAU,OAC1D,KACA,KACA,KACA,KACA,EAAyB,GACzB,EAAyB,GACzB,EAAyB,GACzB,EAAyB,GACzB,EAAyB,GACzB,EAAyB,GACzB,EAAyB,GACzB,OAAW,KAAM,GAAO,eACpB,GAAuB,CAAC,GACxB,GAAuB,CAAC,GAI5B,AAAI,EAAO,eAAiB,GACxB,UAAS,eAAe,sBAAsB,YAAc,gBAE5D,EAAO,eAAiB,GACxB,UAAS,eAAe,uBAAuB,YAAc,gBAE7D,EAAO,eAAiB,GACxB,UAAS,eAAe,yBAAyB,YAAc,gBAG/D,EAAO,eAAiB,GACxB,UAAS,eAAe,sBAAsB,YAAc,cAE5D,EAAO,eAAiB,GACxB,UAAS,eAAe,uBAAuB,YAAc,cAE7D,EAAO,eAAiB,GACxB,UAAS,eAAe,yBAAyB,YAAc,cAG/D,EAAO,2BAA6B,GACpC,UAAS,eAAe,0BAA0B,YAAc,eAChE,SAAS,eAAe,0BAA0B,MAAM,OAAS,mBAEjE,EAAO,2BAA6B,GACpC,UAAS,eAAe,0BAA0B,YAAc,gBAChE,SAAS,eAAe,0BAA0B,MAAM,OAAS,iBAGjE,EAAO,oBACP,UAAS,eAAe,sBAAsB,YAAc,iBAE3D,EAAO,oBACR,UAAS,eAAe,sBAAsB,YAAc,kBAE5D,EAAO,qBAAuB,IAC9B,UAAS,eAAe,uBAAuB,YAAc,gBAC7D,SAAS,eAAe,uBAAuB,MAAM,OAAS,mBAE9D,EAAO,qBAAuB,IAC9B,UAAS,eAAe,uBAAuB,YAAc,iBAC7D,SAAS,eAAe,uBAAuB,MAAM,OAAS,iBAE9D,EAAO,mBAAqB,IAC5B,UAAS,eAAe,qBAAqB,YAAc,mBAC3D,SAAS,eAAe,qBAAqB,MAAM,OAAS,mBAE5D,EAAO,mBAAqB,IAC5B,UAAS,eAAe,qBAAqB,YAAc,oBAC3D,SAAS,eAAe,qBAAqB,MAAM,OAAS,iBAE5D,EAAO,mBAAqB,IAC5B,UAAS,eAAe,qBAAqB,YAAc,mBAC3D,SAAS,eAAe,qBAAqB,MAAM,OAAS,mBAE5D,EAAO,mBAAqB,IAC5B,UAAS,eAAe,qBAAqB,YAAc,oBAC3D,SAAS,eAAe,qBAAqB,MAAM,OAAS,iBAE3D,EAAO,YACR,UAAS,eAAe,uBAAuB,YAAc,oBAC7D,SAAS,eAAe,uBAAuB,MAAM,OAAS,iBAGlE,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,KACA,GAAuB,GACvB,GAAuB,GAG3B,SAAS,eAAe,gCAAgC,YAAc,eAAkB,GAAO,qBAAuB,KAAO,OAC7H,SAAS,eAAe,gCAAgC,MAAM,YAAe,EAAO,qBAAuB,QAAU,MAEhH,EAAO,YACR,UAAS,eAAe,uBAAuB,YAAc,oBAC7D,SAAS,eAAe,uBAAuB,MAAM,OAAS,iBAGlE,EAAO,aAAe,KAAK,IAAI,IAAK,EAAO,cAC3C,EAAO,cAAgB,KAAK,IAAI,EAAG,EAAO,eAGtC,EAAO,WAAW,MAAQ,GAC1B,UAAS,eAAe,sBAAsB,YAAc,gCAG5D,EAAO,qBAAuB,EAAO,cAAgB,IACrD,UAAS,eAAe,OAAS,EAAO,eAAe,MAAM,gBAAkB,UAGnF,GAAkB,EAAO,yBACzB,KACA,KACA,KACA,IACA,KACA,KAEJ,KACA,KAEA,GAAM,GAAI,GAAI,MACR,EAAI,EAAE,WACN,EAAI,EAAE,aACN,EAAI,EAAE,aACZ,EAAO,SAAY,GAAK,GAAK,GAAM,GAAI,GAAK,EAAI,GAAK,GAAK,IAt0C9D,MA20CM,GAAwB,MAAO,gCAAM,eAAN,eAAoB,YAApB,eAA+B,gBAAkB,WAKhF,GAAgB,AAAC,GAA+B,KAAK,eACtD,cAAc,QACd,OAAO,GAAQ,EAAK,OAAS,WAAa,EAAK,OAAS,SAFd,KAKzC,CAAC,CAAE,MAAO,IAAS,CAAE,MAAO,KAAS,oBAAe,UAAW,EAC/D,CAAC,CAAE,MAAO,KAAO,CAAE,MAAO,MAC1B,GAGA,GAAU,CAAE,sBAAuB,EAAG,sBAAuB,GAUtD,EAAS,CAClB,EACA,EAAW,EACX,EAAO,GACP,EAAW,KACF,CAST,GAPI,MAAO,IAAU,UACjB,IAAU,MACV,OAAO,cAAe,IAEtB,GAAQ,OAAO,IAIf,CAAE,aAAiB,KACnB,MAAO,IAAU,UACjB,MAAM,GAEN,MAAO,WACN,GACD,MAAO,IAAU,UACjB,EAAQ,MACR,EAAQ,EAER,MAAO,GAAM,cAAc,GAE/B,GAAI,GACA,EACJ,GAAI,GAAU,GAEV,EAAQ,EAAM,EACd,EAAW,EAAM,iBACV,MAAO,IAAU,SAAU,CAClC,GAAI,IAAU,EACV,MAAO,IAIX,EAAQ,KAAK,MAAM,KAAK,MAAM,KAAK,IAAI,KACvC,EAAW,EAAQ,KAAK,IAAI,GAAI,GAcpC,GAVI,EAAW,WACX,GAAW,EACX,EAAE,GAGF,EAAW,GAAK,EAAW,UAC3B,GAAW,GAIX,EAAQ,IACR,MAAO,IACJ,GAAI,EAAQ,GAAM,GAAQ,EAAQ,GAAK,CAG1C,GAAI,GAAW,EAAW,KAAK,IAAI,GAAI,GACnC,EAEJ,AAAI,EAAW,KAAK,MAAM,GAAY,UAClC,GAAW,KAAK,KAAK,IAGzB,AAAK,GAAQ,GAAM,GAAQ,EAAQ,IAAO,EAAW,EACjD,EAAiB,EAAS,QAAQ,GAGlC,GAAW,KAAK,MAAM,GACtB,EAAiB,EAAS,YAI9B,GAAM,CAAC,EAAO,GAAQ,EAAe,MAAM,KAErC,EAAiB,MAAO,SAAW,WACnC,OAAO,GAAO,iBACd,EAAM,QAAQ,qBAAsB,KAAK,MAG/C,MAAO,AAAC,GAEF,GAAG,IAAiB,KAAM,IAD1B,UAEC,EAAQ,IAAK,CAGpB,GAAM,GAAgB,MAAK,MAAM,EAAW,KAAO,KAAK,eAAe,OAAW,IAE5E,EAAY,MAAO,SAAW,WAC9B,OAAO,GAAO,iBACd,EAAM,WAAW,QAAQ,qBAAsB,KAAK,MAE1D,MAAO,GAAG,KAAgB,YACnB,GAAS,IAAK,CAGrB,GAAM,GAAe,IAAW,EAAW,GAAM,MAAK,MAAM,EAAW,KAAO,KAAK,eAAe,OAAW,IAGvG,EAAc,KAAK,KAAK,KAAK,MAAM,IACrC,EAAe,GAAc,GAAK,EAAK,EACvC,EAAY,EAAQ,KAAK,IAAI,GAAI,EAAc,GACnD,AAAI,IAAc,KACd,GAAY,EACZ,EAAa,GAGjB,GAAM,GAAa,EAAU,eAAe,OAAW,CACnD,sBAAuB,EAAI,EAAY,sBAAuB,EAAI,IAGtE,MAAI,GAAQ,IACD,GAAG,KAAgB,KAE1B,EAAQ,KACD,GAAG,KAAgB,KAE1B,EAAQ,KACD,GAAG,KAAgB,KAE1B,EAAQ,KACD,GAAG,KAAgB,MAE1B,EAAQ,KACD,GAAG,KAAgB,MAE1B,EAAQ,KACD,GAAG,KAAgB,MAE1B,EAAQ,KACD,GAAG,KAAgB,MAE1B,EAAQ,KACD,GAAG,KAAgB,MAE1B,EAAQ,KACD,GAAG,KAAgB,MAE1B,EAAQ,KACD,GAAG,KAAgB,MAE1B,EAAQ,KACD,GAAG,KAAgB,OAE1B,EAAQ,KACD,GAAG,KAAgB,OAE1B,EAAQ,KACD,GAAG,KAAgB,OAE1B,EAAQ,KACD,GAAG,KAAgB,QAE1B,EAAQ,KACD,GAAG,KAAgB,QAE1B,EAAQ,KACD,GAAG,KAAgB,QAIvB,GAAG,KAAY,QAEtB,OAAO,YAIF,GAAkB,CAAC,EAAiB,IACpC,IAAW,MACd,EAAO,KAAK,MAAM,EAAU,QAAU,IACtC,IACA,IAAW,KACP,EAAO,KAAK,MAAM,EAAU,MAAQ,IAAM,IAC1C,IACJ,IAAW,GACP,EAAO,KAAK,MAAM,EAAU,IAAM,IAAM,IACxC,IACN,EAAO,KAAK,MAAM,GAAW,IAC3B,IAAgB,EAAU,EACtB,IAAO,KAAK,MAAO,EAAU,EAAK,KAAM,WAAW,SAAS,EAAG,KAC/D,IAAM,IAGP,GAAgB,IAAY,CACrC,GAAI,GAAI,EAER,EAAE,iBAAsB,EAAO,kBAC/B,EAAE,YAAiB,EAEf,EAAO,SAAS,KAAO,GACvB,IAAK,KAAK,MAAM,EAAO,iBAAmB,IAE1C,EAAO,SAAS,MAAQ,GACxB,IAAK,GAEL,EAAO,SAAS,MAAQ,GACxB,IAAK,GAEL,EAAO,SAAS,MAAQ,GACxB,IAAK,GAEL,EAAO,SAAS,MAAQ,GACxB,IAAK,GAEL,EAAO,SAAS,MAAQ,GACxB,IAAK,GAEL,EAAO,SAAS,MAAQ,GACxB,IAAK,KAAK,IAAI,IAAK,KAAK,MAAM,EAAQ,IAAI,EAAO,MAAM,IAAI,GAAI,OAAS,KAAK,IAAI,KAAM,KAAK,IAAI,EAAG,KAAK,MAAM,EAAQ,IAAI,EAAO,MAAM,IAAI,GAAI,OAAS,MAExJ,EAAO,SAAS,MAAQ,GACxB,IAAK,KAAK,MAAM,KAAK,IAAI,IAAO,GAAO,eAAiB,EAAO,gBAAkB,EAAO,eAAiB,EAAO,gBAAkB,EAAO,gBAAkB,MAE3J,EAAO,SAAS,MAAQ,GACxB,IAAK,KAAK,IAAI,IAAK,KAAK,MAAM,EAAQ,IAAI,EAAO,eAAe,IAAI,GAAI,SAExE,EAAO,SAAS,MAAQ,GACxB,IAAK,KAAK,IAAI,KAAM,KAAK,MAAM,EAAQ,IAAI,EAAO,gBAAgB,IAAI,GAAI,OAE1E,EAAO,aAAa,KAAO,GAC3B,IAAK,KAAK,MAAM,EAAO,eAAiB,MAExC,EAAO,aAAa,MAAQ,GAC5B,IAAK,KAAK,MAAM,EAAO,gBAAkB,MAEzC,EAAO,aAAa,MAAQ,GAC5B,IAAK,KAAK,MAAM,EAAO,eAAiB,MAExC,EAAO,aAAa,MAAQ,GAC5B,IAAK,KAAK,MAAM,EAAO,gBAAkB,MAEzC,EAAO,aAAa,MAAQ,GAC5B,IAAK,KAAK,MAAM,EAAO,eAAiB,MAExC,EAAO,aAAa,MAAQ,GAC5B,IAAK,GAEL,EAAO,aAAa,MAAQ,GAC5B,IAAK,GAEL,EAAO,aAAa,MAAQ,GAC5B,IAAK,GAGT,GAAK,EAAI,EAAQ,YAAa,EAAO,qBAAqB,IAC1D,EAAE,uBAA4B,EAC9B,GAAK,EAAE,sBAA4B,GAAI,EAAI,EAAO,WAAW,IAAM,EAAI,EAAO,WAAW,IAAM,EAAI,EAAO,WAAW,IAAM,EAAE,oBAAuB,IAChJ,EAAO,QAAQ,WAAa,IAC5B,IAAK,KAAK,MAAM,KAAK,IAAI,EAAE,WAAgB,EAAE,mBAAwB,EAAG,OACxE,GAAM,EAAI,EAAE,WAAgB,EAAI,IAAM,EAAE,oBAG5C,KACA,GAAK,EAAE,sBACP,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAI,GAAI,EAAO,iBAAiB,GAAK,IAAM,EAAE,iBAAoB,EAAO,gBAAgB,IAAO,GAAI,KAAK,IAAI,EAAO,gBAAgB,GAAK,EAAO,gBAAgB,OACxL,GAAK,IAAO,EAAmB,eAC/B,GAAK,EAAE,mBAAsB,YAC7B,GAAM,EAAI,EAAE,IAAQ,EAAmB,eACvC,EAAI,KAAK,MAAM,GAEf,EAAE,gBAAqB,EACvB,EAAE,kBAAuB,EAAE,gBAE3B,EAAE,aAAkB,EAGhB,EAAO,SAAS,IAAM,IACtB,GAAE,aAAkB,MAGxB,EAAE,iBAAsB,KAAK,IACzB,IAAM,EAAE,aACP,GAAE,sBAA2B,KAC3B,GAAI,EAAQ,YAAa,EAAO,qBAAqB,IAAM,IAC9D,EAAI,IAAO,EAAQ,gBAAiB,EAAO,qBAAqB,KAEpE,EAAE,kBAAuB,EAAI,IAAM,KAAK,MAAM,EAAQ,YAAa,EAAO,qBAAqB,IAAM,GAAK,IAAM,IAChH,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,AAAI,EAAO,aAAa,EAAI,EAAI,GAAK,GACjC,GAAE,kBAAuB,KAAS,GAK1C,AAAI,EAAO,iBAAiB,gBAAkB,GAAK,EAAO,iBAAiB,gBAAkB,IACrF,GAAO,iBAAiB,eAAiB,GACzC,GAAE,kBAAuB,GAAM,IAAK,EAAO,qBAAqB,IAChE,EAAE,kBAAuB,IACzB,EAAE,iBAAsB,KAAK,IAAI,EAAG,EAAE,mBAEtC,EAAO,iBAAiB,eAAiB,GACzC,GAAE,iBAAsB,GAExB,EAAO,iBAAiB,eAAiB,GACzC,GAAE,iBACE,KACA,EAAI,EAAE,aACL,GAAE,sBAA2B,KAC7B,GAAI,EAAQ,YAAa,EAAO,qBAAqB,IAAM,MAIpE,EAAO,iBAAiB,gBAAkB,GAC1C,GAAE,iBAAsB,GAExB,EAAO,iBAAiB,gBAAkB,IAC1C,GAAE,iBAAsB,GAGxB,EAAO,iBAAiB,eAAiB,GACzC,GAAE,kBAAuB,EAAQ,IAAI,EAAE,iBAAqB,EAAE,mBAG9D,EAAO,iBAAiB,eAAiB,GACzC,GAAE,kBAAuB,EAAQ,IAAI,EAAE,iBAAqB,EAAE,iBAAsB,EAAE,kBAE1F,EAAE,yBAA8B,GAAI,GAAQ,EAAE,iBAAsB,IAAM,KACtE,EAAO,iBAAiB,gBAAkB,IAC1C,GAAE,kBAAuB,GAAI,GAAQ,IAEzC,EAAE,eAAoB,GAAI,GAAQ,GAC9B,EAAO,SAAS,IAAM,IAAO,EAAO,iBAAiB,gBAAkB,GACvE,GAAE,eAAoB,EAAQ,IAAI,KAAM,EAAE,oBAKrC,GAAsB,IAAY,CAC3C,GAAI,GAAI,EAER,AAAI,EAAO,SAAS,GAAK,GACrB,IAAK,KAAK,IAAI,EAAG,EAAI,KAAK,MAAM,EAAQ,IAAI,EAAO,eAAiB,EAAG,OAEvE,EAAO,SAAS,GAAK,GACrB,IAAK,KAAK,MAAM,EAAO,kBAAoB,KAE3C,EAAO,SAAS,IAAM,GACtB,IAAK,GAEL,EAAO,SAAS,IAAM,GACtB,IAAK,GAEL,EAAO,SAAS,IAAM,GACtB,IAAK,GAEL,EAAO,SAAS,IAAM,GACtB,IAAK,GAEL,EAAO,SAAS,IAAM,GACtB,IAAK,GAEL,EAAO,SAAS,IAAM,GACtB,IAAK,KAAK,IAAI,IAAM,KAAK,MAAO,GAAO,eAAiB,EAAO,gBAAkB,EAAO,eAAiB,EAAO,gBAAkB,EAAO,gBAAkB,OAE3J,EAAO,SAAS,IAAM,GACtB,IAAK,KAAK,IAAI,GAAI,KAAK,MAAM,EAAQ,IAAI,EAAO,MAAM,IAAI,GAAI,QAAU,KAAK,IAAI,IAAK,KAAK,MAAM,EAAQ,IAAI,EAAO,MAAM,IAAI,GAAI,SAElI,EAAO,SAAS,IAAM,GACtB,IAAK,EAAE,uBAEP,EAAO,SAAS,IAAM,GACtB,IAAK,KAAK,IAAI,GAAI,KAAK,MAAM,EAAQ,IAAI,EAAO,gBAAgB,IAAI,GAAI,SAExE,EAAO,SAAS,IAAM,GACtB,IAAK,KAAK,IAAI,KAAM,KAAK,MAAM,EAAQ,IAAI,EAAE,WAAe,IAAM,EAAI,OAEtE,EAAO,qBAAqB,GAAK,GACjC,IAAK,GAEL,EAAO,aAAa,GAAK,IACzB,IAAK,KAAK,MAAM,EAAO,eAAiB,MAExC,EAAO,aAAa,IAAM,IAC1B,IAAK,KAAK,MAAM,EAAO,gBAAkB,MAEzC,EAAO,aAAa,IAAM,IAC1B,IAAK,KAAK,MAAM,EAAO,eAAiB,MAExC,EAAO,aAAa,IAAM,IAC1B,IAAK,KAAK,MAAM,EAAO,gBAAkB,MAEzC,EAAO,aAAa,IAAM,IAC1B,IAAK,KAAK,MAAM,EAAO,eAAiB,MAExC,EAAO,aAAa,IAAM,IAC1B,IAAK,GAEL,EAAO,aAAa,IAAM,IAC1B,IAAK,GAEL,EAAO,aAAa,IAAM,IAC1B,IAAK,GAET,GAAK,GAAK,EAAO,WAAW,IAAM,KAAK,MAClC,GAAE,WAAgB,EAAE,WAAgB,EAAE,WAAgB,EAAE,WAAgB,EAAE,YAAiB,GAGhG,EAAE,sBAA2B,EAEzB,EAAO,aAAa,IAAM,IAC1B,IAAK,KAAK,MAAM,KAAK,MACjB,EAAE,WAAgB,GAAK,EAAE,oBACzB,KAAK,MAAM,EAAI,EAAE,WAAgB,GAAK,EAAE,oBAAyB,GACjE,IAAM,KAGd,GAAM,EAAI,EAAO,aAAa,IAAM,IACpC,GAAM,EAAI,EAAO,aAAa,IAAM,IACpC,GAAM,EAAI,EAAO,aAAa,IAAM,IACpC,GAAK,KAAK,IAAI,KAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,IAAM,EAAO,SAAS,KACxH,EAAO,SAAS,IAAM,IACtB,IAAK,KAAO,IAAM,KAElB,EAAO,SAAS,IAAM,IACtB,IAAK,KAAO,KAAO,IAAM,KAE7B,GAAM,EAAI,EAAI,EAAI,EAAO,WAAW,GAAM,GAAI,EAAI,EAAI,EAAQ,YAAa,EAAO,qBAAqB,MACvG,GAAM,EAAI,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,IAAM,EAAO,WAAW,IAAM,EAAI,IAAM,EAAO,WAAW,IAC3K,GAAM,EAAI,EAAE,WAAgB,IAAM,EAAE,mBACpC,GAAM,EAAI,EAAI,GAAK,EAAO,WAAW,IACrC,GAAM,EAAI,EAAI,IAAM,EAAO,WAAW,KACtC,GAAM,EAAI,GAAM,IAAM,EAAO,WAAW,KACxC,GAAM,EAAI,GAAM,IAAM,EAAO,WAAW,KACxC,GAAM,EAAI,GAAM,IAAM,EAAO,WAAW,KACxC,GAAM,EAAI,GAAM,IAAM,EAAO,WAAW,KACxC,GAAM,EAAI,IAAO,IAAM,EAAO,WAAW,KACzC,GAAM,EAAI,IAAO,IAAM,EAAO,aAAa,IAC3C,GAAK,GAA4B,GAAK,GAAO,YAAY,EAAE,GAAK,EAAE,WAAgB,IAAO,GAAK,IAC9F,GAAK,EAAE,oBAAuB,GACzB,GAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,IAAM,EAAO,SAAS,IAAM,IACrH,IAAK,MAET,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAI,GAAI,EAAO,iBAAiB,GAAK,IAAM,EAAE,kBAAqB,EAAO,gBAAgB,IAAO,GAAI,KAAK,IAAI,EAAO,gBAAgB,GAAK,EAAO,gBAAgB,OACzL,GAAK,IAAO,EAAmB,cAC/B,GAAK,EAAE,mBAAsB,WAC7B,GAAM,EAAI,EAAE,IAAQ,EAAmB,cACvC,EAAI,KAAK,MAAM,GACf,EAAE,eAAoB,EACtB,EAAE,gBAAqB,EAAE,eAAoB,EAAO,iBAEpD,EAAE,gBAAqB,EAEvB,GAAI,GAAI,EACJ,EAAI,EACR,GAAK,EAAQ,IAAI,EAAO,gBAAgB,IAAI,GAAI,GAChD,GAAM,EAAI,GAAK,EAAO,WAAW,IAAM,IACvC,GAAM,EAAI,GAAK,EAAO,WAAW,IAAM,IACvC,GAAM,EAAI,GAAK,EAAO,WAAW,IAAM,IACvC,GAAM,EAAI,EAAO,WAAW,IAAM,EAClC,GAAM,EAAI,GAAK,EAAE,2BAA8B,GAE/C,GAAK,KAAK,MAAO,GAAM,EAAI,EAAQ,YAAa,EAAO,qBAAqB,KAC5E,GAAM,EAAQ,YAAa,EAAO,qBAAqB,IAAM,GAC7D,EAAE,oBAAyB,EAC3B,EAAE,qBAA0B,KAAK,IAAI,KAAK,MAAM,GAAK,EAAG,EAAI,EAAQ,gBAAiB,EAAO,qBAAqB,IAAM,KAEvH,GAAI,GAAK,EACT,AAAI,EAAO,qBAAqB,GAAK,IACjC,GAAK,MAGT,EAAE,gBAAqB,EAAI,KAAQ,EAAE,qBAA0B,EAG3D,EAAO,iBAAiB,gBAAkB,GAAK,EAAO,iBAAiB,gBAAkB,IACrF,GAAO,iBAAiB,eAAiB,GACzC,GAAE,gBAAqB,GAEvB,EAAO,iBAAiB,eAAiB,GACzC,GAAE,gBAAsB,KAAO,MAAU,GAAI,GAAK,IAItD,EAAO,iBAAiB,gBAAkB,GAC1C,GAAE,gBAAqB,GAEvB,EAAO,iBAAiB,gBAAkB,IAC1C,GAAE,gBAAqB,GAG3B,EAAE,iBAAsB,EAAQ,IAAI,EAAE,gBAAoB,EAAE,kBAGnD,GAAc,IAAY,CACnC,GAAI,GAAI,GAAI,GAAQ,GAChB,EAAI,GAAI,GAAQ,GAChB,EAAkB,EAAI,EAC1B,GAAmB,KAAK,IAAI,GAAK,IAAO,EAAO,WAAW,KAAO,KAAK,IAAI,EAAO,gBAAkB,GAAK,KAAK,IAAI,GAAK,GAAK,IAA8B,IAAM,EAAE,yBAA4B,GAAI,IAAO,EAAO,gBAAgB,IAC/N,GAAmB,IAAO,EAAQ,YAAa,EAAO,qBAAqB,IAC3E,GAAmB,IAAO,EAAO,WAAW,IAC5C,GAAmB,IAAO,EAAO,WAAW,IAC5C,GAAmB,IAAO,EAAO,WAAW,IAC5C,GAAmB,EAAI,EAAO,aAAa,IAC3C,EAAE,mBAAwB,EAAQ,IAAI,EAAO,eAAgB,GAAiB,IAAI,GAElF,GAAI,GAAK,EACT,AAAI,EAAO,iBAAiB,gBAAkB,GAC1C,GAAK,KAEL,EAAO,iBAAiB,gBAAkB,GAC1C,GAAK,GAGT,EAAE,cACE,EAAK,GAAI,KAAK,IAAI,EAAG,GAAK,MAAQ,EAAK,EAAQ,IAC3C,EAAO,oBAAoB,IAAI,GAAI,IAClC,GAAI,EAAI,GAAK,EAAO,WAAW,IAChC,EAAI,GAAK,EAAO,WAAW,IAAM,EAAI,GACrC,EAAO,WAAW,KACjB,GAAK,IAAO,IAAO,IACpB,EAAQ,gBAAiB,EAAO,qBAAqB,IAG7D,EAAE,cAAmB,KAAK,IAAI,EAAE,cAAkB,EAAI,EAAO,aAAa,IAAM,KAChF,EAAE,cAAmB,KAAK,IAAI,EAAE,cAAkB,EAAI,EAAO,aAAa,IAAM,KAChF,EAAE,wBAA6B,EAAQ,IAAI,EAAE,cAAkB,EAAE,gBAEjE,EAAE,cAAmB,EAAQ,IAAI,EAAQ,IAAI,EAAG,EAAO,WAAY,MAEnE,EAAI,EAAE,MAAM,EAAE,kBACd,EAAI,EAAE,MAAM,EAAE,mBACd,EAAI,EAAE,MAAM,EAAE,oBACd,EAAI,EAAE,MAAM,EAAE,yBACd,EAAI,EAAE,MAAM,EAAE,eAEd,GAAM,GAAe,GAAI,GAAQ,EAAE,eAAoB,GAAG,MAAM,EAAQ,IAAI,KAAM,EAAQ,IAAI,MAAO,EAAE,kBAEvG,AAAI,EAAO,SAAS,GAAK,IACrB,GAAI,EAAE,MAAM,IAEZ,EAAO,SAAS,IAAM,IACtB,GAAI,EAAE,MAAM,EAAQ,IAAI,IAAK,EAAQ,IAAI,KAAM,EAAO,kBAEtD,EAAO,SAAS,IAAM,IAEtB,GAAI,EAAE,MAAM,KAAK,IAAI,EAAE,eAAoB,EAAI,EAAG,MAElD,EAAO,SAAS,IAAM,IACtB,GAAI,EAAE,MAAM,EAAQ,IAAI,KAAM,EAAQ,IAAI,EAAO,gBAAgB,IAAI,GAAI,EAAI,MAE7E,EAAO,SAAS,IAAM,IACtB,GAAI,EAAE,MAAM,EAAQ,IAAI,KAAM,EAAQ,IAAI,KAAM,EAAO,mBAEvD,EAAO,SAAS,IAAM,IACtB,GAAI,EAAE,MAAM,EAAQ,IAAK,EAAE,gBAAqB,EAAE,iBAAsB,IAAO,EAAI,KAEnF,EAAO,iBAAiB,gBAAkB,GAC1C,GAAI,EAAE,UAAU,QAEhB,EAAO,iBAAiB,gBAAkB,GAC1C,GAAI,EAAE,UAAU,WAEhB,EAAO,iBAAiB,gBAAkB,GAC1C,GAAI,EAAE,UAAU,cAEhB,EAAO,iBAAiB,gBAAkB,IAC1C,GAAI,EAAE,UAAU,eAEpB,EAAI,EAAQ,IAAI,EAAG,EAAI,KAAQ,EAAO,WAAW,KACjD,GAAI,GAAM,EAAQ,IAAI,EAAG,EAAI,KAAQ,EAAO,SAAS,MACrD,AAAI,EAAO,iBAAiB,YAAc,IAAM,EAAO,iBAAiB,GAAK,GACzE,GAAM,EAAQ,IAAI,EAAK,MAEvB,EAAO,iBAAiB,YAAc,IAAM,EAAO,iBAAiB,IAAM,GAC1E,GAAM,EAAQ,IAAI,EAAK,EAAI,EAAI,GAAK,EAAO,gBAAgB,GAAK,EAAQ,IAAI,EAAO,MAAM,IAAI,GAAI,IAAO,KAAM,EAAQ,IAAI,EAAO,MAAM,IAAI,GAAI,OAE/I,EAAO,iBAAiB,YAAc,IAAM,EAAO,iBAAiB,IAAM,GAC1E,GAAM,EAAQ,IAAI,EAAK,MAE3B,EAAM,EAAQ,IAAI,EAAK,EAAE,mBAAsB,cAC/C,EAAE,qBAA0B,EAC5B,EAAE,qBAA0B,EAAQ,IAAI,EAAE,qBAAyB,EAAE,uBAA0B,EAAO,gBAAgB,KAEtH,EAAE,aAAkB,GAAI,GAAQ,GAC5B,EAAO,SAAS,GAAK,IACrB,GAAE,aAAkB,EAAE,aAAgB,MAAM,IAE5C,EAAO,SAAS,IAAM,IACtB,GAAE,aAAkB,EAAE,aAAgB,MAAM,EAAQ,IAAI,EAAG,KAAK,IAAI,GAAI,EAAO,gBAAkB,OAEjG,EAAO,SAAS,IAAM,IACtB,GAAE,aAAkB,EAAE,aAAgB,MAAM,WAGhD,EAAE,aAAkB,GAAI,GAAQ,GAC5B,EAAO,SAAS,GAAK,IACrB,GAAE,aAAkB,EAAE,aAAgB,MAAM,IAE5C,EAAO,SAAS,IAAM,IACtB,GAAE,aAAkB,EAAE,aAAgB,MAAM,EAAQ,IAAI,KAAM,EAAQ,IAAI,EAAO,qBAAqB,IAAI,EAAO,kBAAkB,IAAI,GAAI,EAAI,GAAG,MAAM,SAExJ,EAAO,SAAS,IAAM,IACtB,GAAE,aAAkB,EAAE,aAAgB,MAAM,EAAQ,IAAI,MAAO,EAAO,gBAAgB,MAAM,MAAM,IAAI,MAEtG,EAAO,SAAS,IAAM,IACtB,GAAE,aAAkB,EAAE,aAAgB,MAAM,WAGhD,EAAE,eAAoB,GAAI,GAAQ,GAC9B,EAAO,SAAS,GAAK,IACrB,GAAE,eAAoB,EAAE,eAAkB,MAAM,IAEhD,EAAO,SAAS,IAAM,IACtB,GAAE,eAAoB,EAAE,eAAkB,MAAM,EAAQ,IAAI,MAAO,EAAO,gBAAgB,IAAI,MAE9F,EAAO,SAAS,IAAM,IACtB,GAAE,eAAoB,EAAE,eAAkB,MAAM,YAGpD,EAAE,cAAmB,GAAI,GAAQ,GAC7B,EAAO,SAAS,GAAK,IACrB,GAAE,cAAmB,EAAE,cAAiB,MAAM,IAE9C,EAAO,SAAS,IAAM,IACtB,GAAE,cAAmB,EAAE,cAAiB,MAAM,QAE9C,EAAO,SAAS,IAAM,IACtB,GAAE,cAAmB,EAAE,cAAiB,MAAM,YAGlD,EAAE,cAAmB,GAAI,GAAQ,GAC7B,EAAO,SAAS,GAAK,IACrB,GAAE,cAAmB,EAAE,cAAiB,MAAM,IAE9C,EAAO,SAAS,IAAM,IACtB,GAAE,cAAmB,EAAE,cAAiB,MAAM,YAGlD,EAAE,wBAA6B,GAAI,GAAQ,GACvC,EAAO,aAAa,IAAM,IAC1B,GAAE,wBAA6B,EAAE,wBAA2B,MAAM,IAElE,EAAO,aAAa,IAAM,IAAO,EAAO,eAAe,IAAI,KAC3D,GAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,EAAO,eAAe,IAAI,GAAI,MAE5G,EAAO,aAAa,IAAM,IAC1B,GAAE,wBAA6B,EAAE,wBAC5B,MAAM,EAAQ,IAAI,EAAE,WAAgB,EAAI,EAAE,mBAAuB,GACjE,MAAM,EAAQ,IAAI,EAAG,EAAE,WAAgB,EAAE,mBAAwB,EAAI,IACrE,IAAI,KAET,EAAO,SAAS,IAAM,IACtB,GAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,SAAU,EAAQ,IAAI,EAAO,eAAgB,EAAI,QAE/H,EAAO,SAAS,IAAM,IACtB,GAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,SAAU,EAAQ,IAAI,EAAO,oBAAoB,IAAI,GAAI,MAEvI,EAAO,WAAW,IAAM,IACxB,GAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,EAAE,wBAA4B,EAAI,MAGpH,EAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,EAAQ,IAAI,GAAI,GAAK,EAAI,EAAO,gBAAgB,IAAK,EAAQ,IAAI,KAAM,EAAO,kBAAoB,EAAO,gBAAgB,MACvM,EAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,EAAQ,IAAI,GAAI,IAAM,EAAI,EAAO,gBAAgB,IAAK,EAAQ,IAAI,EAAQ,IAAI,EAAO,MAAM,IAAI,GAAI,IAAK,EAAO,gBAAgB,GAAK,KAClN,EAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,EAAI,KAAK,IAAI,IAAO,IAAO,EAAO,SAAS,KAAO,KAAQ,EAAO,WAAW,KAAO,KAAK,IAAI,EAAO,gBAAkB,GAAK,KAAK,IAAI,GAAI,KAAQ,EAAO,gBAAgB,IAAK,EAAO,mBAAqB,EAAO,oBAAsB,EAAO,mBAAqB,EAAO,oBAAsB,EAAO,qBAClX,EAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,KAAO,GAAO,qBAAqB,GAAK,EAAO,qBAAqB,GAAK,EAAO,qBAAqB,GAAK,EAAO,qBAAqB,GAAK,EAAO,qBAAqB,IAAM,EAAO,gBAAgB,KAClR,EAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,GAAI,EAAQ,YAAa,EAAO,qBAAqB,MACnI,EAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,IAAK,EAAO,WAAW,GAAM,GAAI,EAAI,EAAI,EAAQ,YAAa,EAAO,qBAAqB,QACxK,EAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,IAAK,EAAO,WAAW,MACrG,EAAE,wBAA6B,EAAE,wBAA2B,MAAM,EAAQ,IAAI,IAAK,EAAO,WAAW,MAErG,EAAE,uBAA4B,GAAI,GAAQ,GAEtC,EAAO,SAAS,IAAM,IACtB,GAAE,uBAA4B,EAAE,uBAA0B,MAAM,EAAQ,IAAI,EAAQ,IAAI,EAAO,eAAe,IAAI,IAAK,IAAK,KAE5H,EAAO,SAAS,IAAM,IACtB,GAAE,uBAA4B,EAAE,uBAA0B,MAAM,EAAQ,IAAI,KAAM,EAAQ,IAAI,EAAO,eAAe,IAAI,GAAI,EAAI,IAAI,UAAU,KAAK,IAAI,MAEvJ,EAAO,SAAS,IAAM,IACtB,GAAE,uBAA4B,EAAE,uBAA0B,MAAM,KAAK,IAAI,KAAM,EAAO,oBAAoB,MAAM,EAAO,kBAAoB,IAE3I,EAAO,SAAS,IAAM,IACtB,GAAE,uBAA4B,EAAE,uBAA0B,MAAM,EAAQ,IAAI,EAAE,sBAA0B,KAExG,EAAO,SAAS,IAAM,IACtB,GAAE,uBAA4B,EAAE,uBAA0B,MAAM,EAAQ,IAAI,EAAE,uBAA2B,QAEzG,EAAO,SAAS,IAAM,IACtB,GAAE,uBAA4B,EAAE,uBAA0B,MAAM,EAAQ,IAAI,EAAO,oBAAoB,IAAI,GAAI,KAE/G,EAAO,WAAW,IAAM,IACxB,GAAE,uBAA4B,EAAE,uBAA0B,MAAM,EAAQ,IAAI,EAAE,wBAA4B,EAAI,OAElH,EAAE,sBAA2B,GAAI,GAAQ,GACzC,EAAE,iBAAsB,EAAO,iBAAmB,EAAO,kBAAoB,EAAO,iBAAmB,EAAO,kBAAoB,EAAO,iBAEzI,EAAE,oBAAyB,EAAK,EAAQ,YAAa,EAAO,qBAAqB,IAAM,IACvF,EAAE,yBAA8B,EAAQ,IAAI,EAAE,oBAAwB,EAAE,kBAExE,EAAE,sBAA2B,EAAE,sBAAyB,MAAM,EAAE,0BAEhE,EAAE,gBAAqB,GAAI,GAAQ,GACnC,EAAE,gBAAqB,GAAI,GAAQ,GACnC,EAAE,gBAAqB,GAAI,GAAQ,GAC/B,EAAO,SAAS,MAAQ,GACxB,GAAE,gBAAqB,EAAE,gBAAmB,MAAM,EAAQ,IAAI,SAAU,EAAQ,IAAI,EAAE,kBAAsB,EAAI,QAEhH,EAAO,SAAS,MAAQ,GACxB,GAAE,gBAAqB,EAAE,gBAAmB,MAAM,EAAQ,IAAI,SAAU,EAAQ,IAAI,EAAE,iBAAqB,EAAI,QAE/G,EAAO,SAAS,MAAQ,GACxB,GAAE,gBAAqB,EAAE,gBAAmB,MAAM,EAAQ,IAAI,SAAU,KAAK,IAAI,IAAM,EAAE,cAAmB,MA8DhH,EAAE,mBAAwB,GAAI,GAAQ,KACtC,EAAE,mBAAwB,EAAE,mBAAsB,MAAM,EAAQ,IAAI,KAAO,IAAO,EAAO,aAAa,KAAO,KAAQ,EAAO,iBAAiB,IAAK,EAAO,iBAAiB,KAC1K,EAAE,mBAAwB,EAAE,mBAAsB,MAAM,EAAQ,IAAI,EAAI,KAAQ,KAAK,IAAI,IAAM,GAAK,EAAO,aAAa,KAAO,GAAK,EAAO,aAAa,WAAa,IAAQ,GAAE,mBAAsB,SAAW,GAAK,EAAI,EAAO,iBAAiB,IAAK,EAAO,iBAAiB,IAAK,OACnR,EAAE,mBAAwB,EAAE,mBAAsB,MAAM,EAAI,EAAI,IAAM,EAAO,WAAW,MACxF,EAAE,mBAAwB,EAAE,mBAAsB,MAAM,EAAI,EAAI,IAAM,EAAO,WAAW,MACxF,EAAE,mBAAwB,EAAE,mBAAsB,MAAM,EAAI,EAAI,IAAM,EAAO,WAAW,MACxF,EAAE,mBAAwB,EAAE,mBAAsB,MAAM,EAAI,EAAI,IAAM,EAAO,WAAW,MACxF,EAAE,mBAAwB,EAAE,mBAAsB,MAAM,EAAI,GAAK,IAAM,EAAO,WAAW,MACzF,EAAE,mBAAwB,EAAE,mBAAsB,MAAM,EAAE,mBAAsB,eAC5E,EAAO,iBAAiB,GAAK,GAC7B,GAAE,mBAAwB,EAAE,mBAAsB,MAAM,IAExD,EAAO,iBAAiB,IAAM,GAC9B,GAAE,mBAAwB,EAAE,mBAAsB,MAAM,KAExD,EAAO,iBAAiB,IAAM,GAC9B,GAAE,mBAAwB,EAAE,mBAAsB,MAAM,QAE5D,EAAE,mBAAwB,EAAE,mBAAsB,MAAM,EAAQ,IAAI,EAAO,eAAiB,EAAG,GAAK,EAAO,iBAAiB,OAGnH,GAAe,AAAC,GAAqB,CAS9C,GAPA,KACA,KAEA,KACA,KACA,KACA,KACI,EAAE,aAAgB,IAAI,MAAQ,CAC9B,GAAM,GAAU,EAAQ,IAAI,EAAE,aAAgB,UAAU,EAAE,YAAgB,EAAQ,IAAI,GAAI,EAAE,YAAiB,EAAQ,IAAI,EAAE,gBAAoB,MAC/I,EAAO,MAAQ,EAAO,MAAM,IAAI,EAAQ,MAAM,EAAK,OACnD,EAAO,kBAAoB,EAAO,kBAAkB,IAAI,EAAQ,MAAM,EAAK,OAC3E,EAAO,sBAAwB,EAAO,sBAAsB,IAAI,EAAQ,MAAM,EAAK,OACnF,EAAO,uBAAyB,EAAO,uBAAuB,IAAI,EAAQ,MAAM,EAAK,OACrF,EAAO,WAAa,EAAO,WAAW,IAAI,EAAQ,MAAM,EAAK,OAGjE,KACI,EAAO,SAAS,MAAQ,GAAK,EAAO,kBAAkB,IAAI,OAC1D,GAAO,eAAiB,EAAO,eAAe,IAAI,EAAQ,MAAM,EAAE,kBAAqB,UAAU,KAAM,MAAM,EAAK,SAElH,EAAO,SAAS,OAAS,GAAK,EAAO,sBAAsB,IAAI,QAC/D,GAAO,gBAAkB,EAAO,gBAAgB,IAAI,EAAQ,MAAM,EAAE,mBAAsB,UAAU,KAAM,MAAM,EAAK,SAErH,EAAO,aAAa,IAAM,GAAK,EAAO,gBAAgB,IAAI,QAC1D,GAAO,oBAAsB,EAAO,oBAAoB,IAAI,EAAQ,MAAM,EAAE,uBAA0B,UAAU,KAAM,MAAM,EAAK,SAErI,EAAE,qBAA0B,EAAO,uBAAuB,IAAI,EAAO,oBAAoB,MAAM,EAAO,sBAAsB,MAAM,EAAE,yBACpI,EAAE,sBAA2B,EAAO,wBAAwB,IAAI,EAAO,qBAAqB,MAAM,EAAO,uBAAuB,MAAM,EAAE,yBACxI,EAAE,qBAA0B,EAAO,uBAAuB,IAAI,EAAO,oBAAoB,MAAM,EAAO,sBAAsB,MAAM,EAAE,yBACpI,EAAE,sBAA2B,EAAO,wBAAwB,IAAI,EAAO,qBAAqB,MAAM,EAAO,uBAAuB,MAAM,EAAE,yBACxI,EAAE,qBAA0B,EAAO,uBAAuB,IAAI,EAAO,oBAAoB,MAAM,EAAO,sBAAsB,MAAM,EAAE,yBAEpI,EAAO,wBAA0B,EAAO,wBAAwB,IAAI,EAAE,qBAAwB,MAAM,EAAK,OACzG,EAAO,uBAAyB,EAAO,uBAAuB,IAAI,EAAE,sBAAyB,MAAM,EAAK,OACxG,EAAO,wBAA0B,EAAO,wBAAwB,IAAI,EAAE,qBAAwB,MAAM,EAAK,OACzG,EAAO,uBAAyB,EAAO,uBAAuB,IAAI,EAAE,sBAAyB,MAAM,EAAK,OACxG,EAAE,gBAAqB,EAAE,qBAErB,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,IACxF,GAAO,eAAiB,EAAO,eAAe,IAAI,EAAE,gBAAmB,MAAM,EAAK,QAGtF,EAAE,mBAAwB,EAAO,qBAAqB,IAAI,EAAO,kBAAkB,MAAM,EAAO,oBAAoB,MAAM,EAAE,wBAA2B,MAAM,EAAE,uBAA0B,MAAM,EAAE,iBACjM,EAAE,oBAAyB,EAAO,sBAAsB,IAAI,EAAO,mBAAmB,MAAM,EAAO,qBAAqB,MAAM,EAAE,wBAChI,EAAE,mBAAwB,EAAO,qBAAqB,IAAI,EAAO,kBAAkB,MAAM,EAAO,oBAAoB,MAAM,EAAE,wBAA2B,MAAM,EAAE,iBAC/J,EAAE,oBAAyB,EAAO,sBAAsB,IAAI,EAAO,mBAAmB,MAAM,EAAO,qBAAqB,MAAM,EAAE,wBAChI,EAAE,mBAAwB,EAAO,qBAAqB,IAAI,EAAO,kBAAkB,MAAM,EAAO,oBAAoB,MAAM,EAAE,wBAA2B,MAAM,EAAE,iBAC/J,EAAO,sBAAwB,EAAO,sBAAsB,IAAI,EAAE,mBAAsB,MAAM,EAAK,OACnG,EAAO,qBAAuB,EAAO,qBAAqB,IAAI,EAAE,oBAAuB,MAAM,EAAK,OAClG,EAAO,sBAAwB,EAAO,sBAAsB,IAAI,EAAE,mBAAsB,MAAM,EAAK,OACnG,EAAO,qBAAuB,EAAO,qBAAqB,IAAI,EAAE,oBAAuB,MAAM,EAAK,OAGlG,EAAE,cAAmB,GAAI,GAAQ,KACjC,EAAE,cAAoB,EAAO,qBAAqB,IAAI,EAAO,kBAAmB,MAAM,EAAO,oBAAoB,MAAM,EAAE,wBAA2B,MAAM,EAAE,iBAC5J,EAAE,uBAA4B,EAAE,cAAiB,MAAM,IAEvD,GAAI,GAAK,GAAI,GAAQ,KACrB,AAAI,EAAO,SAAS,IAAM,IACtB,GAAK,EAAG,MAAM,EAAQ,IAAI,KAAM,EAAO,oBAAsB,EAAO,qBAAuB,EAAO,oBAAsB,EAAO,qBAAuB,EAAO,uBAEjK,EAAE,sBAA2B,EAAO,wBAAwB,IAAI,EAAO,qBAAqB,MAAM,EAAO,uBACzG,EAAE,uBAA4B,EAAO,yBAAyB,IAAI,EAAO,sBAAsB,MAAM,EAAO,wBAC5G,EAAE,sBAA2B,EAAO,wBAAwB,IAAI,EAAO,qBAAqB,MAAM,EAAO,uBACzG,EAAE,uBAA4B,EAAO,yBAAyB,IAAI,EAAO,sBAAsB,MAAM,EAAO,wBAC5G,EAAE,sBAA2B,EAAO,wBAAwB,IAAI,EAAO,qBAAqB,MAAM,EAAO,uBAAuB,MAAM,GACtI,EAAO,yBAA2B,EAAO,yBAAyB,IAAI,EAAE,sBAAyB,MAAM,EAAK,OAC5G,EAAO,wBAA0B,EAAO,wBAAwB,IAAI,EAAE,uBAA0B,MAAM,EAAK,OAC3G,EAAO,yBAA2B,EAAO,yBAAyB,IAAI,EAAE,sBAAyB,MAAM,EAAK,OAC5G,EAAO,wBAA0B,EAAO,wBAAwB,IAAI,EAAE,uBAA0B,MAAM,EAAK,OAE3G,EAAE,iBAAsB,GAAI,GAAQ,KACpC,EAAE,iBAAuB,EAAO,wBAAwB,IAAI,EAAO,qBAAsB,MAAM,EAAO,uBAAuB,MAAM,GACnI,EAAE,0BAA+B,EAAE,iBAAoB,MAAM,IAEzD,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,IACxF,GAAO,gBAAkB,EAAO,gBAAgB,IAAI,EAAE,cAAiB,MAAM,EAAK,QAElF,EAAO,iBAAiB,gBAAkB,IAC1C,GAAO,oBAAsB,EAAO,oBAAoB,IAAI,EAAE,iBAAoB,MAAM,EAAK,QAGjG,GAAW,GACX,OAAS,GAAI,EAAG,GAAK,EAAG,IAGpB,GAFA,EAAE,yBAA4B,EAAE,SAAY,EAAI,IAAqB,EAAO,iBAAiB,EAAI,KAA2B,UAAc,IAAI,EAAO,iBAAiB,EAAI,KAA2B,OAAU,MAAM,EAAO,iBAAiB,KAA2B,YAAe,MAAM,EAAE,oBAE3R,IAAM,EAAG,CACT,GAAM,GAAa,EAAI,EACvB,EAAO,iBAAiB,KAAuB,UAAe,EAAO,iBAAiB,KAAuB,UACxG,IAAI,EAAE,yBAA4B,EAAE,SAAY,IAAa,MAAM,IAIhF,EAAO,aAAe,EAAO,aAAa,IAAI,EAAE,yBAA4B,MAAM,MAAM,IAEpF,EAAO,eAAiB,GACxB,GAA0B,GAG1B,EAAO,WAAW,IAAM,IAAO,EAAO,qBAAqB,GAAM,KAAK,IAAI,EAAO,4BAA4B,GAAI,GAAK,EAAI,EAAO,WAAW,IAAM,IAAM,EAAO,WAAW,OAAU,EAAO,MAAM,IAAI,EAAQ,IAAI,GAAI,KAAO,EAAE,0BAA6B,GAAK,KAAK,IAAI,EAAI,EAAO,qBAAqB,GAAI,MAC7S,GAAO,qBAAqB,IAAM,EAClC,EAAiB,EAAG,IACpB,GAA0B,EAAG,IAC7B,GAAqB,IAErB,EAAO,WAAW,IAAM,IAAO,EAAO,qBAAqB,GAAM,KAAK,IAAI,EAAO,4BAA4B,GAAI,GAAK,EAAI,EAAO,WAAW,IAAM,IAAM,EAAO,WAAW,OAAU,EAAO,MAAM,IAAI,EAAQ,IAAI,GAAI,IAAM,EAAE,0BAA6B,GAAK,KAAK,IAAI,EAAI,EAAO,qBAAqB,GAAI,MAC5S,GAAO,qBAAqB,IAAM,EAClC,EAAiB,EAAG,IACpB,GAA0B,EAAG,IAC7B,GAAqB,IAErB,EAAO,WAAW,IAAM,IAAO,EAAO,qBAAqB,GAAM,KAAK,IAAI,EAAO,4BAA4B,GAAI,GAAK,EAAI,EAAO,WAAW,IAAM,IAAM,EAAO,WAAW,OAAU,EAAO,MAAM,IAAI,EAAQ,IAAI,GAAI,IAAM,EAAE,0BAA6B,GAAK,KAAK,IAAI,EAAI,EAAO,qBAAqB,GAAI,MAC5S,GAAO,qBAAqB,IAAM,EAClC,EAAiB,EAAG,IACpB,GAA0B,EAAG,IAC7B,GAAqB,IAErB,EAAO,WAAW,IAAM,IAAO,EAAO,qBAAqB,GAAM,KAAK,IAAI,EAAO,4BAA4B,GAAI,GAAK,EAAI,EAAO,WAAW,IAAM,IAAM,EAAO,WAAW,OAAU,EAAO,MAAM,IAAI,EAAQ,IAAI,GAAI,KAAO,EAAE,0BAA6B,GAAK,KAAK,IAAI,EAAI,EAAO,qBAAqB,GAAI,MAC7S,GAAO,qBAAqB,IAAM,EAClC,EAAiB,EAAG,IACpB,GAA0B,EAAG,IAC7B,GAAqB,IAErB,EAAO,WAAW,IAAM,IAAO,EAAO,qBAAqB,GAAM,KAAK,IAAI,EAAO,4BAA4B,GAAI,GAAK,EAAI,EAAO,WAAW,IAAM,IAAM,EAAO,WAAW,OAAU,EAAO,MAAM,IAAI,EAAQ,IAAI,GAAI,EAAI,EAAE,0BAA6B,GAAK,KAAK,IAAI,EAAI,EAAO,qBAAqB,GAAI,MAC1S,GAAO,qBAAqB,IAAM,EAClC,EAAiB,EAAG,IACpB,GAA0B,EAAG,IAC7B,GAAqB,IAGrB,EAAO,MAAM,IAAI,MAAS,EAAO,QAAQ,UAAY,IACrD,GAAO,QAAQ,QAAU,GACzB,KAEA,EAAO,MAAM,IAAI,MAAU,EAAO,QAAQ,UAAY,IACtD,GAAO,QAAQ,QAAU,GACzB,KAEA,EAAO,MAAM,IAAI,MAAW,EAAO,QAAQ,YAAc,IACzD,GAAO,QAAQ,UAAY,GAC3B,KAEA,EAAO,MAAM,IAAI,MAAQ,EAAO,QAAQ,WAAa,IACrD,GAAO,QAAQ,SAAW,GAC1B,KAEA,EAAO,UAAU,IAAI,IAAM,EAAO,aAAa,OAAS,GACxD,EAAiB,KAEjB,EAAO,UAAU,IAAI,MAAQ,EAAO,aAAa,OAAS,GAC1D,EAAiB,KAEjB,EAAO,UAAU,IAAI,YAAc,EAAO,aAAa,OAAS,GAChE,EAAiB,KAEjB,EAAO,UAAU,IAAI,OAAS,EAAO,aAAa,OAAS,GAC3D,EAAiB,KAEjB,EAAO,UAAU,IAAI,OAAS,EAAO,aAAa,OAAS,GAC3D,EAAiB,KAEjB,EAAO,UAAU,IAAI,UAAY,EAAO,aAAa,OAAS,GAC9D,EAAiB,KAEjB,EAAO,UAAU,IAAI,WAAa,EAAO,aAAa,OAAS,GAC/D,EAAiB,KAGrB,GAAM,GAAO,EAAO,iBAAiB,aAC/B,EAAW,EAAO,iBAAiB,cACnC,EAAa,EAAO,iBAAiB,UAC3C,AAAI,IAAS,GACL,EAAO,sBAAsB,IAAI,EAAqB,EAAM,EAAO,qBAAqB,GAAO,KAC/F,GAAW,YAAa,IACxB,EAAE,4BAAiC,GAGvC,EAAW,GAAK,IAAa,GACzB,EAAO,gBAAgB,IAAI,EAAqB,EAAU,EAAO,qBAAqB,GAAW,KACjG,GAAW,yBAA0B,IACrC,EAAE,4BAAiC,GAGvC,GAAY,GACR,EAAO,MAAM,IAAI,EAAqB,EAAU,EAAO,qBAAqB,GAAW,KACvF,GAAW,yBAA0B,IACrC,EAAE,4BAAiC,GAGvC,IAAe,GAAK,EAAa,IAC7B,EAAO,qBAAqB,KAAO,EAAqB,EAAY,EAAO,qBAAqB,GAAa,IAC7G,GAAW,qBAAsB,IACjC,GAA0B,EAAY,KAG1C,IAAe,IACX,EAAO,MAAM,IAAI,EAAqB,EAAY,EAAO,qBAAqB,GAAa,KAC3F,EAAW,qBAAsB,KAKhC,GAAuB,IAAY,CAE5C,EAAE,cAAmB,GAAI,GAAQ,IACjC,EAAE,cAAmB,EAAE,cAAiB,MAAM,EAAI,EAAI,KAAO,KAAK,IAAI,EAAE,WAAgB,EAAE,mBAAyB,GAAI,EAAO,WAAW,IAAM,IAAO,GAAI,EAAI,EAAE,yBAA4B,GAAK,IAA8B,MAAO,IAClO,EAAO,SAAS,MAAQ,GACxB,GAAE,cAAmB,EAAE,cAAiB,MAAM,IAElD,EAAE,cAAmB,EAAE,cAAiB,MAAM,EAAQ,IAAI,EAAI,EAAO,SAAS,IAAM,IAAM,EAAO,WAAW,IAAM,IAAM,EAAO,eAAiB,EAAO,gBAAkB,EAAO,eAAiB,EAAO,gBAAkB,EAAO,eAAiB,EAAO,eAAiB,EAAO,iBAAmB,EAAO,kBAC3S,EAAE,cAAmB,EAAE,cAAiB,MAAM,EAAI,EAAO,SAAS,IAAM,KAAQ,KAAK,IAAI,KAAK,IAAI,EAAO,aAAe,GAAK,KAAK,IAAI,IAAK,IAC3I,EAAE,cAAmB,EAAE,cAAiB,MAAM,EAAQ,IAAI,KAAO,EAAO,WAAW,KAAO,IAAO,EAAO,WAAW,KAAO,IAAO,EAAO,YAAY,EAAE,GAAK,EAAE,YAC7J,EAAE,cAAmB,EAAE,cAAiB,MAAM,GAA+B,EAAO,qBACpF,EAAE,cAAmB,EAAE,cAAiB,MAAM,EAAQ,IAAI,KAAK,IAAI,EAAG,EAAO,gBAAiB,EAAE,2BAA8B,KAC9H,EAAE,cAAmB,EAAE,cAAiB,MAAM,KAAK,IAAI,EAAI,EAAE,QAAa,IAAK,EAAE,iBACjF,EAAE,cAAmB,EAAE,cAAiB,MAAM,KAAK,IAAI,IAAK,EAAQ,gBAAiB,EAAO,qBAAqB,MACjH,EAAE,cAAmB,EAAE,cAAiB,MAAM,EAAE,oBAAuB,IACnE,EAAO,aAAa,OAAS,GAC7B,GAAE,cAAmB,EAAE,cAAiB,MAAM,EAAQ,IAAI,EAAO,UAAU,IAAI,IAAK,MAEpF,EAAO,aAAa,OAAS,GAC7B,GAAE,cAAmB,EAAE,cAAiB,MAAM,UAE9C,EAAO,aAAa,OAAS,GAC7B,GAAE,cAAmB,EAAE,cAAiB,MAAM,EAAI,EAAK,GAAI,KAAK,IAAI,EAAG,CAAC,KAAK,IAAI,EAAG,EAAO,qBAAuB,UAElH,EAAO,SAAS,MAAQ,GACxB,GAAE,cAAmB,EAAE,cAAiB,MAAM,MAElD,EAAE,cAAmB,EAAE,cAAiB,MAAM,EAAQ,IAAI,EAAI,GAAM,EAAQ,IAAI,EAAO,aAAa,IAAI,GAAI,IAAK,EAAO,iBAAiB,KACzI,EAAE,cAAmB,EAAE,cAAiB,MAAM,EAAQ,IAAI,IAAK,EAAQ,YAAa,EAAO,qBAAqB,OAC5G,EAAO,WAAW,KAAO,GACzB,GAAE,cAAmB,EAAE,cAAiB,MAAM,EAAQ,IAAI,EAAO,UAAU,IAAI,IAAK,MAEpF,EAAO,WAAW,KAAO,GACzB,GAAE,cAAmB,EAAE,cAAiB,MAAM,EAAQ,IAAI,EAAQ,IAAI,EAAO,UAAU,IAAI,IAAK,IAAK,EAAO,WAAW,QAGvH,EAAO,iBAAiB,YAAc,IACtC,GAAE,cAAmB,EAAQ,IAAI,EAAE,cAAkB,KAErD,EAAO,iBAAiB,YAAc,IACtC,GAAE,cAAmB,EAAQ,IAAI,EAAE,cAAkB,MAErD,EAAO,iBAAiB,YAAc,IACtC,GAAE,cAAmB,EAAQ,IAAI,EAAE,cAAkB,KAGzD,EAAE,cAAmB,EAAQ,IAAI,EAAE,cAAkB,EAAI,GAAM,GAAK,KAAK,IAAI,GAAI,EAAY,EAAO,mBACpG,EAAE,cAAmB,EAAQ,IAAI,EAAE,cAAkB,EAAE,qBAAwB,EAAO,gBAAgB,KACtG,EAAE,cAAmB,EAAE,cAAiB,MAAM,EAAE,mBAAsB,UAEtE,EAAE,cAAmB,EAAE,cAAiB,MAAM,KAAK,IAAI,MAAO,EAAO,aAAa,WAG9E,EAAO,iBAAiB,IAAM,GAC9B,GAAE,cAAmB,EAAE,cAAiB,MAAM,EAAQ,IAAI,EAAI,EAAI,IAAM,EAAO,iBAAiB,IAAK,EAAY,EAAO,gCAExH,EAAO,iBAAiB,YAAc,IAAM,EAAO,iBAAiB,IAAM,GAC1E,GAAE,cAAmB,EAAQ,IAAI,EAAE,cAAkB,QAIhD,GAAa,AAAC,GAAqB,CAC5C,KACA,EAAE,gBAAqB,EAAO,oBAAoB,IAAI,EAAO,iBAAiB,MAAM,EAAO,mBAAmB,MAAM,EAAE,eACtH,EAAE,gBAAqB,EAAO,qBAAqB,IAAI,EAAO,kBAAkB,MAAM,EAAO,oBAAoB,MAAM,EAAE,eACzH,EAAE,cAAmB,EAAO,mBAAmB,IAAI,EAAO,gBAAgB,MAAM,EAAO,kBAAkB,MAAM,EAAE,eACjH,EAAE,eAAoB,EAAO,mBAAmB,IAAI,EAAO,gBAAgB,MAAM,EAAO,kBAAkB,MAAM,EAAE,eAClH,EAAE,eAAoB,EAAO,oBAAoB,IAAI,EAAO,iBAAiB,MAAM,EAAO,mBAAmB,MAAM,EAAE,eACrH,EAAE,gBAAqB,EAAO,mBAAmB,IAAI,EAAO,gBAAgB,MAAM,EAAO,kBAAkB,MAAM,EAAE,eACnH,EAAE,cAAmB,EAAO,oBAAoB,IAAI,EAAO,iBAAiB,MAAM,EAAO,mBAAmB,MAAM,EAAE,eACpH,EAAE,cAAmB,EAAO,mBAAmB,IAAI,EAAO,gBAAgB,MAAM,EAAO,kBAAkB,MAAM,EAAE,eACjH,EAAO,qBAAuB,EAAO,qBAAqB,IAAI,EAAE,gBAAmB,MAAM,EAAK,IAC9F,EAAO,mBAAqB,EAAO,mBAAmB,IAAI,EAAE,gBAAmB,MAAM,EAAK,IAC1F,EAAO,mBAAqB,EAAO,mBAAmB,IAAI,EAAE,cAAiB,MAAM,EAAK,IACxF,EAAO,oBAAsB,EAAO,oBAAoB,IAAI,EAAE,eAAkB,MAAM,EAAK,IAC3F,EAAO,mBAAqB,EAAO,mBAAmB,IAAI,EAAE,eAAkB,MAAM,EAAK,IACzF,EAAO,oBAAsB,EAAO,oBAAoB,IAAI,EAAE,gBAAmB,MAAM,EAAK,IAC5F,EAAO,mBAAqB,EAAO,mBAAmB,IAAI,EAAE,cAAiB,MAAM,EAAK,IAExF,EAAO,UAAY,EAAO,UAAU,IAAI,EAAE,cAAiB,MAAM,EAAK,KAG7D,GAAgB,IAAY,CACrC,GAAI,GAAc,GAAM,EAAQ,YAAa,EAAO,qBAAqB,IAAM,IAC3E,EAAe,IAGnB,AAAI,EAAO,iBAAiB,eAAiB,GACzC,GAAc,IAAQ,GAAI,EAAO,qBAAqB,IACtD,EAAe,MAEf,EAAO,iBAAiB,gBAAkB,IAC1C,GAAe,KAAS,GAAI,EAAO,qBAAqB,KACxD,EAAe,MAEnB,GAAe,EAAE,oBAAuB,EAAO,gBAAgB,IAE/D,EAAE,kBAAuB,EAAQ,MAAM,EAAQ,IAAI,EAAO,kBAAkB,UAAU,MAAO,IACzF,EAAO,SAAS,IAAM,IAAO,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,IACrH,GAAE,kBAAuB,EAAE,kBAAqB,MAAM,EAAQ,IAAI,EAAQ,IAAI,GAAI,MAAO,EAAQ,IAAI,EAAE,kBAAsB,EAAI,EAAI,EAAE,oBAAuB,EAAO,gBAAgB,QAIzL,EAAE,mBAAwB,EAAQ,MAAM,EAAQ,IAAI,EAAO,sBAAsB,UAAU,OAAQ,IAC/F,EAAO,SAAS,IAAM,IAAO,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,IACrH,GAAE,mBAAwB,EAAE,mBAAsB,MAAM,EAAQ,IAAI,IAAK,EAAQ,IAAI,KAAM,EAAO,mBAItG,EAAE,uBAA4B,EAAQ,MAAM,EAAQ,IAAI,EAAO,gBAAgB,UAAU,OAAQ,MAC7F,EAAO,iBAAiB,gBAAkB,GAC1C,GAAE,uBAA4B,EAAQ,IAAI,EAAE,uBAA2B,MAEvE,EAAO,aAAa,MAAQ,GAC5B,GAAE,uBAA4B,EAAE,uBAA0B,MAAM,IAEhE,EAAO,SAAS,IAAM,IACtB,GAAE,uBAA4B,EAAE,uBAA0B,MAAM,IAEhE,EAAO,iBAAiB,YAAc,IACtC,GAAE,uBAA4B,GAAI,GAAQ,OAIrC,EAAa,MAAO,EAAW,EAAS,GAAM,EAAU,KAAyB,CAsB1F,GArBI,IAAM,YACF,GAAO,kBAAkB,IAAI,OAAS,EAAE,kBAAqB,IAAI,OACjE,CAAI,EACA,GAAkB,YAElB,GAAsB,GACtB,EAAM,cAId,IAAM,aACD,GAAO,sBAAsB,IAAI,QAAU,EAAE,mBAAsB,IAAI,MAAS,EAAO,iBAAiB,eAAiB,GACtH,IACA,GAAkB,aAEjB,GACD,GAAsB,GACtB,EAAM,kBAId,IAAM,YAAa,CACnB,GAAM,GAAI,EAAO,iBAAiB,aAC5B,EAAiB,GAAiB,GACxC,GAAI,EAAO,iBAAiB,eAAiB,EAAG,CAC5C,GAAM,GAAW,AAAC,GAAiB,EAAO,sBAAsB,IAAI,EAAqB,EAAG,EAAM,IAElG,GAAI,EAAS,EAAO,qBAAqB,KAAO,EAAO,qBAAqB,GAAK,EAAgB,CAC7F,GAAM,GAAS,EAAO,aAAa,iBAAmB,GAAK,EAAO,iBAAiB,YAAc,GAAK,GAAK,EACvG,EAAU,EACV,EAAO,EAAO,qBAAqB,GACvC,KAAO,EAAU,GACb,AAAI,EAAS,IAAS,EAAO,GACzB,IAEJ,IAEJ,EAAO,qBAAqB,GAAK,EACjC,EAAiB,EAAG,IACpB,GAAqB,GAEzB,GAAI,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,GACpE,KAAO,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,IACvE,EAAO,4BAA4B,IAAM,EACzC,EAAiB,EAAG,IACpB,GAAqB,GACrB,GAAwB,EAAG,EAAO,4BAA4B,IAC9D,KAKR,GAA0B,GACtB,GAAO,aAAa,mBAAqB,GAAK,IAC9C,GAAM,wBAAyB,GAAO,kBACtC,EAAO,gBAAkB,GAIjC,AAAI,EAAC,EAAO,iBAAmB,GAAU,EAAO,qBAAqB,IAAO,IACxE,IAA4B,SAC5B,EAAO,iBAAiB,aAAe,EACvC,MAeR,GAXI,IAAM,eACF,EAAE,uBAA0B,GAAG,KAAQ,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,GAC3H,IACA,GAAkB,eAEjB,GACD,GAAsB,GACtB,EAAM,mBAId,IAAM,0BAA4B,EAAO,iBAAiB,gBAAkB,EAAG,CAC/E,GAAM,GAAI,EAAO,iBAAiB,cAC5B,EAAiB,GAAiB,GACxC,AAAI,EAAO,iBAAiB,eAAiB,GACzC,GAAO,iBAAiB,aAAe,GAE3C,GAAM,GAAW,AAAC,GACV,GAAK,EACE,EAAO,gBAAgB,IAAI,EAAqB,EAAG,EAAM,IAEzD,EAAO,MAAM,IAAI,EAAqB,EAAG,EAAM,IAG9D,GAAI,EAAS,EAAO,qBAAqB,KAAO,EAAO,qBAAqB,GAAK,EAAgB,CAC7F,GAAM,GAAS,EAAO,aAAa,iBAAmB,GAAK,EAAO,iBAAiB,YAAc,GAAK,GAAK,EACvG,EAAU,EACV,EAAO,EAAO,qBAAqB,GACvC,KAAO,EAAU,GACb,AAAI,EAAS,IAAS,EAAO,GACzB,IAEJ,IAEJ,EAAO,qBAAqB,GAAK,EACjC,EAAiB,EAAG,IACpB,GAAqB,GAOzB,GALI,GAAO,aAAa,mBAAqB,GAAK,IAC9C,GAAM,yBAA0B,GAAO,kBACvC,EAAO,oBAAsB,GAEjC,GAA0B,GACtB,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,GACpE,KAAO,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,IACvE,EAAO,4BAA4B,IAAM,EACzC,GAAwB,EAAG,EAAO,4BAA4B,IAC9D,KACA,KACA,KAGR,GAAI,CAAC,EAAO,iBAAmB,GAAU,EAAO,qBAAqB,KAAO,EAAgB,CAIxF,GAHA,EAAM,yBAA0B,GAAO,kBACvC,GAA4B,SAC5B,EAAO,iBAAiB,cAAgB,EACpC,EAAO,aAAa,iBAAmB,EACvC,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,GAG5E,KACA,IACA,MAYR,GARI,IAAM,UACF,EAAO,qBAAqB,IAAM,GAC9B,GACA,GAAkB,UAK1B,IAAM,sBAAwB,EAAO,iBAAiB,YAAc,EAAG,CACvE,GAAI,GAAO,GAIX,GAHI,GACA,GAAO,KAAM,GAAQ,iKAErB,CAAC,EACD,OAEJ,GAAM,GAAI,EAAO,iBAAiB,UAC5B,EAAI,EAAO,iBAAiB,cAC5B,EAAI,EAAO,iBAAiB,aAElC,AAAI,EAAO,qBAAqB,KAAO,IAAM,IAAM,IAAM,EAAO,gBAAgB,IAAM,GAAK,EAAO,aAAa,KAAO,GAClH,EAAiB,KAGrB,GAAM,GAAiB,GAAiB,GACxC,AAAI,IAAM,GAAK,EAAI,IACX,EAAO,qBAAqB,KAAO,EAAqB,EAAG,EAAO,qBAAqB,GAAI,IAAM,EAAO,qBAAqB,GAAK,GAClI,GAAO,qBAAqB,IAAM,GAGtC,IAAM,IACN,CAAI,EAAO,MAAM,IAAI,EAAqB,EAAG,EAAO,qBAAqB,GAAI,KAAO,EAAO,qBAAqB,GAAK,EACjH,EAAO,qBAAqB,IAAM,EAE9B,EAAO,MAAM,IAAI,EAAQ,IAAI,GAAI,EAAO,oBAAsB,QAC9D,GAAO,oBAAsB,EAAQ,IAAI,EAAO,MAAM,IAAI,GAAI,IAAM,KACpE,OAIR,IAAM,GAEF,MAAO,GAAO,kBAAqB,UACnC,GAAO,iBAAmB,MAAK,GAAU,mBAG7C,IAAM,GACN,GAAO,iBAAiB,aAAe,GAE3C,EAAiB,EAAG,IACpB,EAAM,sBAEF,EAAO,qBAAqB,GAAK,EAAO,4BAA4B,IACpE,GAAO,4BAA4B,IAAM,EACzC,EAAO,cAAc,IAAI,IAGzB,EAAC,EAAO,iBAAmB,GAAU,EAAO,qBAAqB,IAAM,GAAkB,IAAM,KAC/F,GAAO,iBAAiB,UAAY,GAExC,KACA,GAA0B,EAAG,MAIxB,GAAoB,KAAO,IAA6B,CACjE,AAAI,IAAM,YACN,CAAI,EAAO,QAAQ,MAAQ,GAEnB,AADM,KAAM,GAAQ,6KACd,IACN,GAAsB,GACtB,EAAM,aAGV,GAAsB,GACtB,EAAM,cAGV,IAAM,aACN,CAAI,EAAO,QAAQ,MAAQ,GAEnB,AADM,KAAM,GAAQ,mNACd,IACN,GAAsB,GACtB,EAAM,iBAGV,GAAsB,GACtB,EAAM,kBAGV,IAAM,eACF,EAAO,iBAAiB,YAAc,IACtC,CAAI,EAAO,QAAQ,MAAQ,GAEnB,AADM,KAAM,GAAQ,sOACd,IACN,GAAsB,GACtB,EAAM,kBAGV,GAAsB,GACtB,EAAM,mBAId,IAAM,UACI,EAAC,EAAO,QAAQ,KAChB,KAAM,GAAQ,iMAEpB,EAAM,cAKL,GAAY,IAAY,CACjC,EAAE,eAAoB,GAAI,GAAQ,GAClC,EAAE,cAAmB,GAAI,GAAQ,GAE7B,EAAO,SAAS,IAAM,IACtB,GAAE,eAAoB,EAAQ,IAAI,KAAM,EAAE,kBAE1C,EAAO,SAAS,IAAM,IACtB,GAAE,cAAmB,EAAQ,IAAI,KAAM,EAAE,kBAGzC,EAAO,WAAW,MAAQ,KAAO,EAAO,aAAa,KAAO,GAC5D,EAAiB,KAEjB,EAAO,aAAa,KAAO,KAAO,EAAO,aAAa,KAAO,GAC7D,EAAiB,KAKjB,EAAO,QAAQ,KAAO,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,MAAM,IAAI,EAAO,gBACnF,EAAO,EAAG,QAEV,EAAO,QAAQ,KAAO,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,MAAM,IAAI,EAAO,iBACnF,EAAO,EAAG,QAEV,EAAO,QAAQ,KAAO,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,MAAM,IAAI,EAAO,gBACnF,EAAO,EAAG,QAEV,EAAO,QAAQ,KAAO,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,MAAM,IAAI,EAAO,iBACnF,EAAO,EAAG,QAEV,EAAO,QAAQ,KAAO,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,MAAM,IAAI,EAAO,gBACnF,EAAO,EAAG,QAEV,EAAO,QAAQ,KAAO,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,MAAM,IAAI,EAAO,kBACnF,GAAe,IAEf,EAAO,QAAQ,KAAO,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,MAAM,IAAI,EAAO,iBACnF,GAAc,IAEd,EAAO,QAAQ,KAAO,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,eAAe,IAAI,EAAO,uBAC5F,GAAiB,IAKjB,EAAO,QAAQ,MAAQ,IAAQ,EAAO,aAAa,MAAQ,GAAK,EAAO,eAAe,IAAI,EAAO,oBACjG,EAAO,EAAG,YAEV,EAAO,QAAQ,MAAQ,IAAQ,EAAO,aAAa,MAAQ,GAAK,EAAO,eAAe,IAAI,EAAO,qBACjG,EAAO,EAAG,YAEV,EAAO,QAAQ,MAAQ,IAAQ,EAAO,aAAa,MAAQ,GAAK,EAAO,eAAe,IAAI,EAAO,oBACjG,EAAO,EAAG,YAEV,EAAO,QAAQ,MAAQ,IAAQ,EAAO,aAAa,MAAQ,GAAK,EAAO,eAAe,IAAI,EAAO,qBACjG,EAAO,EAAG,YAEV,EAAO,QAAQ,MAAQ,IAAQ,EAAO,aAAa,OAAS,GAAK,EAAO,eAAe,IAAI,EAAO,oBAClG,EAAO,EAAG,YAGd,GAAI,GAAI,EA0DR,GAzDA,GAAK,KAAK,MAAM,EAAE,WAAgB,GAAK,EAAE,oBAAyB,IAAM,IACpE,EAAO,SAAS,IAAM,IAAO,EAAO,iBAAiB,gBAAkB,GACvE,IAAK,IAEL,EAAO,aAAa,IAAM,IAAO,EAAO,eAAe,IAAI,EAAQ,IAAI,GAAK,EAAE,oBAAuB,GAAK,EAAE,4BAA+B,GAAK,KAAK,MAAM,KAAK,IAAI,EAAO,gBAAgB,GAAK,GAAM,EAAG,GAAK,MAC9M,GAAmB,EAAG,IAEtB,EAAO,aAAa,IAAM,IAAO,EAAO,eAAe,IAAI,EAAQ,IAAI,GAAK,EAAE,oBAAuB,GAAK,EAAE,4BAA+B,GAAK,KAAK,MAAM,KAAK,IAAI,EAAO,gBAAgB,GAAK,GAAM,EAAG,GAAK,MAC9M,GAAmB,EAAG,IAEtB,EAAO,aAAa,IAAM,IAAO,EAAO,eAAe,IAAI,EAAQ,IAAI,GAAK,EAAE,oBAAuB,GAAK,EAAE,4BAA+B,GAAK,KAAK,MAAM,KAAK,IAAI,EAAO,gBAAgB,GAAK,GAAM,EAAG,GAAK,MAC9M,GAAmB,EAAG,IAEtB,EAAO,aAAa,KAAO,IAAO,EAAO,eAAe,IAAI,EAAQ,IAAI,GAAK,EAAE,oBAAuB,GAAK,EAAE,4BAA+B,GAAK,KAAK,MAAM,KAAK,IAAI,EAAO,gBAAgB,GAAK,GAAM,EAAG,GAAK,MAC/M,GAAmB,EAAG,IAEtB,EAAO,aAAa,KAAO,IAAO,EAAO,eAAe,IAAI,EAAQ,IAAI,GAAK,EAAE,oBAAuB,GAAK,EAAE,4BAA+B,GAAK,KAAK,MAAM,KAAK,IAAI,EAAO,gBAAgB,GAAK,GAAM,EAAG,GAAK,MAC/M,GAAmB,EAAG,IAKtB,EAAO,QAAQ,MAAQ,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,gBAAgB,IAAI,EAAO,kBAC9F,EAAO,EAAG,UAEV,EAAO,QAAQ,MAAQ,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,gBAAgB,IAAI,EAAO,mBAC9F,EAAO,EAAG,UAEV,EAAO,QAAQ,MAAQ,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,gBAAgB,IAAI,EAAO,kBAC9F,EAAO,EAAG,UAEV,EAAO,QAAQ,MAAQ,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,gBAAgB,IAAI,EAAO,mBAC9F,EAAO,EAAG,UAEV,EAAO,QAAQ,MAAQ,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAO,gBAAgB,IAAI,EAAO,kBAC9F,EAAO,EAAG,UAKV,EAAO,QAAQ,MAAQ,IAAQ,EAAO,oBAAoB,IAAI,EAAO,qBACrE,GAAoB,EAAG,IAEvB,EAAO,QAAQ,MAAQ,IAAQ,EAAO,oBAAoB,IAAI,EAAO,sBACrE,GAAoB,EAAG,IAEvB,EAAO,QAAQ,MAAQ,IAAQ,EAAO,oBAAoB,IAAI,EAAO,qBACrE,GAAoB,EAAG,IAEvB,EAAO,QAAQ,MAAQ,IAAQ,EAAO,oBAAoB,IAAI,EAAO,sBACrE,GAAoB,EAAG,IAEvB,EAAO,QAAQ,MAAQ,IAAQ,EAAO,oBAAoB,IAAI,EAAO,qBACrE,GAAoB,EAAG,IAIvB,EAAO,WAAW,KAAO,EACzB,OAAS,GAAI,EAAG,GAAK,GAAI,IACrB,AAAI,EAAO,aAAa,IAAI,GAAwB,GAAG,QACnD,GAAoB,EAAG,IAMnC,GAAK,EAAO,WAAW,KAAO,GAAO,EAAO,0BAA4B,EAAI,CACxE,GAAM,GAAqC,CAAC,KAAM,KAAM,KAAM,KAAM,MACpE,OAAS,GAAI,EAAG,GAAK,EAAG,IACpB,AAAI,EAAO,eAAe,IACtB,GAAe,EAAE,GAAK,EAAO,iBAAiB,KAA2B,OAGjF,GAAM,GAAS,OAAO,EAAO,eAAiB,EAAO,yBAC/C,EAAiB,GAA+B,EAAgB,GAGtE,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAU,EAAe,EAAE,GAC3B,EAAQ,EAAe,EAAE,GAC/B,AAAI,IAAY,MAAQ,IAAU,MAAQ,IAAU,GAChD,GAAqB,EAAgB,EAAQ,IASzD,AAAI,EAAO,SAAS,KAAO,IACvB,GAAO,oBAAsB,EAAO,oBAAoB,IAAK,EAAO,mBAAmB,IAAI,EAAO,gBAAiB,MAAM,EAAE,eAAkB,MAAM,EAAE,kBAErJ,EAAO,SAAS,KAAO,IACvB,GAAO,mBAAqB,EAAO,mBAAmB,IAAK,EAAO,oBAAoB,IAAI,EAAO,iBAAkB,MAAM,EAAE,gBAAmB,MAAM,EAAE,kBAEtJ,EAAO,SAAS,KAAO,IACvB,GAAO,oBAAsB,EAAO,oBAAoB,IAAK,EAAO,mBAAmB,IAAI,EAAO,gBAAiB,MAAM,EAAE,kBAE3H,EAAO,SAAS,KAAO,IACvB,GAAO,mBAAqB,EAAO,mBAAmB,IAAK,EAAO,oBAAoB,IAAI,EAAO,iBAAkB,MAAM,EAAE,kBAE3H,EAAO,SAAS,KAAO,IACvB,GAAO,mBAAqB,EAAO,mBAAmB,IAAI,EAAO,iBAErE,GAAI,GAAI,EACR,GAAK,EAAI,IAAO,GAAO,aAAa,IAAM,EAAO,aAAa,IAAM,EAAO,aAAa,IAAM,EAAO,aAAa,IAAM,EAAO,aAAa,IAAM,EAAO,aAAa,IAAM,EAAO,aAAa,KAEhM,GAAI,GAAI,EACR,AAAI,EAAO,SAAS,KAAO,IACvB,IAAK,IAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAET,GAAK,EAEL,GAAI,GAAI,EACR,AAAI,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAET,GAAK,EAEL,EAAI,EACA,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAEL,EAAO,SAAS,KAAO,IACvB,IAAK,KAET,GAAK,EAED,IAAM,GACN,GAAO,mBAAqB,EAAO,mBAAmB,IAAI,EAAQ,IAAI,EAAO,uBAAuB,IAAI,EAAO,oBAAoB,IAAI,GAAI,KAE3I,IAAM,GACN,GAAO,uBAAyB,EAAO,uBAAuB,IAAI,EAAQ,IAAI,EAAO,qBAAqB,IAAI,EAAO,kBAAkB,IAAI,GAAI,KAE/I,IAAM,GACN,GAAO,qBAAuB,EAAO,qBAAqB,IAAI,EAAQ,IAAI,EAAO,wBAAwB,IAAI,EAAO,qBAAqB,IAAI,GAAI,KAGjJ,EAAO,WAAa,EAAO,cAC3B,GAAO,aAAe,EAAO,YAE7B,EAAO,eAAiB,EAAO,cAC/B,GAAO,aAAe,EAAO,gBAGjC,EAAE,mBAAwB,EAC1B,EAAE,oBAA0B,EAAI,EAAO,WAAW,GAAK,GAAM,GAAI,EAAI,EAAI,EAAQ,YAAa,EAAO,qBAAqB,MAC1H,EAAE,oBAA0B,EAAI,EAAO,WAAW,IAAM,IACxD,EAAE,oBAA0B,EAAI,EAAO,WAAW,IAAM,IACxD,EAAE,oBAA0B,EAAI,EAAO,WAAW,KAAO,IACzD,EAAE,oBAA0B,EAAI,EAAO,WAAW,KAAO,IAAM,EAAI,EACnE,EAAE,oBAA0B,EAAI,EAAO,WAAW,KAAO,IAAM,EAAI,EACnE,EAAE,oBAA0B,EAAI,EAAO,WAAW,KAAO,IAAM,EAAI,EACnE,EAAE,oBAA0B,EAAI,EAAO,WAAW,KAAO,IAAM,EAAI,EACnE,EAAE,oBAA0B,EAAI,IAAO,KAAK,IAAI,EAAO,eAAiB,GAAK,KAAK,IAAI,GAAK,KAAK,IAAI,EAAG,EAAO,iBAAiB,IAC/H,EAAE,oBAAyB,EAAE,mBAAsB,UAEnD,EAAE,qBAA0B,IAAM,GAAK,EAAO,WAAW,IAAM,GAAM,EAAE,WAAgB,IAAM,EAAO,aAAa,WACjH,EAAE,sBAA2B,KAAO,IAAM,EAAO,aAAa,YAC9D,KAEI,EAAO,YACH,EAAO,iBAAmB,kBAAoB,EAAO,qBAAqB,KAAO,KAAK,IAAI,EAAG,EAAO,sBACpG,EAAM,YAAa,IAG3B,GAAI,GAAW,KACf,GAAI,EAAO,WAAW,KAAO,EACzB,OAAS,GAAI,EAAG,GAAK,GAAI,IACrB,EAAW,GAAwB,GAC/B,EAAO,aAAa,IAAI,EAAS,KACjC,GAAoB,EAAG,IAKnC,GAAM,GAAiB,KACvB,GAAI,IAAmB,EAAE,mBAAuB,CAC5C,EAAE,mBAAwB,EAC1B,GAAM,GAAY,CAAC,OAAQ,WAAY,UAEvC,OAAS,GAAM,EAAG,EAAM,EAAU,OAAQ,EAAE,EAAK,CAC7C,GAAM,GAAW,EAAU,GAC3B,OAAS,GAAM,EAAG,EAAM,EAAG,EAAE,EAAK,CAC9B,GAAM,GAAM,EAAE,SAAY,GAC1B,EAAO,GAAG,QAAU,KAAuB,GAAQ,EAAI,EAAgB,EAAU,EAAO,GAAG,SAAW,KAAuB,EAAG,IAIxI,OAAS,GAAI,EAAG,GAAK,EAAG,IAAK,CACzB,GAAM,GAAuB,CAAC,EAAG,IAAK,IAAK,IAAK,MAC1C,EAAM,EAAE,SAAY,GACpB,EAAQ,EAAO,GAAG,mBAAgC,EACxD,EAAO,GAAG,kBAA+B,GAAI,GAAQ,EAAQ,IAAI,EAAG,EAAQ,GAAG,MAAM,EAAQ,IAAI,MAAO,KAAK,IAAI,EAAI,EAAQ,OAAW,KAAK,IAAI,EAAI,EAAQ,MAAU,GAAK,KAAK,MAAM,EAAqB,OAK3M,GAAoB,IAAY,CACzC,GAAS,GAAa,KACtB,GAAS,GAAc,KACvB,GAAS,GAAmB,KAC5B,GAAS,GAAa,IACtB,GAAS,GAAW,KACpB,GAAS,GAA0B,KAE9B,EAAE,UACH,UAAS,eAAe,WAAW,MAAM,QAAU,OACnD,SAAS,eAAe,oBAAoB,MAAM,QAAU,SAIhE,GAAa,EAEJ,GAAc,IAAY,CACnC,GAAa,YAAY,MACzB,GAAS,GAAM,IAGb,GAAK,EACL,GAAiB,GACnB,GAAY,EAEV,GAAO,IAAM,CAEf,GAAI,GAAQ,AADA,YAAY,MACN,GAElB,IAAc,GAAQ,IAAa,GACnC,GAAI,GACJ,KAAO,EAAQ,GAEX,EAAc,GAEd,GAAe,GAAY,GAAK,KAAK,IAAI,KAAO,IAAM,GAAY,IAAM,EAExE,EAAc,KAAK,IAAI,EAAO,GAE9B,GAAK,EAAc,KACnB,IAAc,EACd,GAAS,GAIjB,YAAc,EAAY,CAItB,GAHI,SAAS,aAAe,YACxB,KAEA,CAAC,EAAE,SAAa,CAChB,KAEA,GAAM,GAAW,IA6BjB,GA5BA,GAAa,EAAK,GAElB,GAAU,WAAY,GACtB,GAAU,eAAgB,GAC1B,GAAU,gBAAiB,GAC3B,GAAU,YAAa,GACvB,GAAU,SAAU,GAGhB,EAAO,aAAa,aAAe,IAAO,EAAO,qBACjD,GAAe,gBAAiB,GAIhC,EAAO,aAAa,OAAS,GAC7B,GAAe,eAAgB,GAKnC,AAAI,EAAO,WAAW,MAAQ,EAC1B,GAAe,eAAgB,GAG/B,KAIA,EAAO,oBAAsB,EAAO,cAAgB,GAAuB,GAAS,CAEhF,GAAI,GAAU,EACR,EAAW,EAAI,EAAO,qBAAqB,IACjD,KAAO,EAAU,GACT,EAAO,aAAe,GADH,CACM,CACzB,GAAM,GAAa,EAAO,eAAiB,IAAO,IAAO,EACzD,GAAI,CAAC,GAAY,EAAO,aAAc,GAAM,GACxC,MAMR,MAeZ,GATI,EAAO,4BAA4B,GAAK,GACxC,GAAe,eAAgB,EAAG,GAIlC,EAAO,aAAa,GAAK,GACzB,GAAe,eAAgB,EAAK,EAAO,aAAa,IAGxD,EAAO,WAAW,KAAO,GAAK,EAAO,WAAW,KAAO,EAAG,CAC1D,GAAM,GAAoB,CACtB,EAAO,aAAa,KAAO,EAC3B,EAAO,aAAa,KAAO,EAC3B,EAAO,aAAa,KAAO,EAC3B,EAAO,aAAa,KAAO,EAC3B,EAAO,aAAa,KAAO,EAC3B,EAAO,YAAY,GAAG,GAAK,GAAK,EAAO,eAAiB,EACxD,EAAO,aAAa,aAAe,GAEnC,EAAmB,GAMvB,GAAI,EAAO,kBACP,OAAS,GAAI,EAAG,EAAI,EAAkB,OAAQ,EAAE,EAC5C,AAAI,EAAkB,IAElB,GAAmB,GAAmB,EAAI,EAAG,KAAS,GAKlE,GAAI,EAAO,kBACP,OAAS,GAAI,EAAG,EAAI,EAAkB,OAAQ,EAAE,EAC5C,AAAI,EAAkB,IAElB,GAAmB,GAAkB,EAAI,EAAG,KAAS,GAMjE,AAAI,GACA,MACA,KAcR,GAVA,GAAkB,GAId,GAAO,eAAiB,GAAK,EAAO,eAAiB,IACjD,EAAO,QAAQ,MAAQ,IAAQ,EAAO,aAAa,MAAQ,GAAK,EAAE,kBAAqB,IAAI,EAAO,eAAe,MAAM,EAAQ,IAAI,GAAI,EAAO,mBAAqB,EAAO,kBAAkB,IAAI,OAChM,GAAsB,GACtB,EAAM,WAAY,KAGtB,EAAO,eAAiB,EAAG,CAC3B,EAAE,gBAAmB,UAAY,EACjC,GAAM,GAAO,KAAK,IAAI,IAAM,EAAO,gBACnC,AAAI,EAAO,QAAQ,MAAQ,IAAQ,EAAO,aAAa,MAAQ,GAAK,EAAE,gBAAmB,UAAY,GAAQ,EAAO,kBAAkB,IAAI,OACtI,GAAsB,GACtB,EAAM,WAAY,KAU1B,GANI,GAAO,eAAiB,GAAK,EAAO,eAAiB,IACjD,EAAO,QAAQ,MAAQ,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAE,mBAAsB,IAAI,EAAO,gBAAgB,MAAM,EAAQ,IAAI,GAAI,EAAO,oBAAsB,EAAO,sBAAsB,IAAI,QAAU,EAAO,iBAAiB,eAAiB,GACtP,GAAsB,GACtB,EAAM,eAAgB,KAG1B,EAAO,eAAiB,EAAG,CAC3B,EAAE,gBAAmB,cAAgB,EACrC,GAAM,GAAO,KAAK,IAAI,IAAM,EAAO,iBACnC,AAAI,EAAO,QAAQ,MAAQ,IAAQ,EAAO,SAAS,MAAQ,GAAK,EAAE,gBAAmB,cAAgB,GAAQ,EAAO,sBAAsB,IAAI,QAAU,EAAO,iBAAiB,eAAiB,GAC7L,GAAsB,GACtB,EAAM,eAAgB,KAI9B,GAAI,EAAO,iBAAiB,YAAc,GAAI,CAE1C,GADA,EAAE,gBAAmB,eAAiB,EAClC,EAAO,eAAiB,EAAG,CAC3B,GAAM,GAAO,KAAK,IAAI,IAAM,EAAO,qBACnC,AAAI,EAAO,QAAQ,MAAQ,IAAQ,EAAO,WAAW,IAAM,IAAO,EAAO,gBAAgB,IAAI,UAAY,EAAE,gBAAmB,eAAiB,GAAQ,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,GAC3O,GAAsB,GACtB,EAAM,gBAAiB,KAG/B,AAAI,GAAO,eAAiB,GAAK,EAAO,eAAiB,IACjD,EAAO,QAAQ,MAAQ,IAAQ,EAAO,WAAW,IAAM,IAAO,EAAE,uBAA0B,IAAI,EAAO,oBAAoB,MAAM,EAAQ,IAAI,GAAI,EAAO,wBAA0B,EAAO,gBAAgB,IAAI,QAAU,EAAO,iBAAiB,eAAiB,GAAK,EAAO,iBAAiB,gBAAkB,GAC7S,GAAsB,GACtB,EAAM,gBAAiB,KAInC,GAAmB,iBAG3B,SAAS,iBAAiB,UAAW,AAAC,GAAU,CAC5C,GAAI,SAAS,eAAiB,SAAS,cAAc,YAAc,QAAS,CAGxE,EAAM,kBACN,OAWJ,GAAM,GAAO,AARC,CACV,KAAM,OACN,QAAS,WACT,OAAQ,SACR,SAAU,YACV,UAAW,cAGI,EAAE,gBAEf,EAAM,EAAM,IAAI,cACtB,OAAQ,OACC,QACA,QACA,QACA,QACA,IAAK,CACN,GAAM,GAAM,OAAO,GAEnB,AAAI,EAAE,aAAkB,aACpB,CAAI,IAAS,YACT,GAAoB,GACjB,AAAI,IAAS,aAChB,GAAqB,GAErB,EAAO,EAAK,IAGhB,EAAE,aAAkB,SAChB,GAAE,aAAkB,SACpB,GAAa,GAEb,EAAE,aAAkB,aACpB,GAAmB,YAAa,GAEhC,EAAE,aAAkB,WACpB,GAAmB,UAAW,IAGlC,EAAE,aAAkB,cACpB,IAAiB,GACjB,EAAiB,IAErB,UAGC,IACD,AAAI,EAAE,aAAkB,aAAe,EAAE,iBAAsB,WAC3D,GAAmB,GAEnB,EAAE,aAAkB,cAAgB,EAAO,mBAAqB,GAChE,IAAiB,GACjB,EAAiB,IAErB,UACC,IACD,AAAI,EAAE,aAAkB,aAAe,EAAE,iBAAsB,WAC3D,GAAmB,GAEnB,EAAE,aAAkB,cAAgB,EAAO,aAAa,OAAS,GACjE,IAAiB,GACjB,EAAiB,IAErB,UACC,IACD,AAAI,EAAE,aAAkB,aAAe,EAAE,iBAAsB,WAC3D,GAAmB,GAEnB,EAAE,aAAkB,cAAgB,EAAO,aAAa,OAAS,GACjE,IAAiB,GACjB,EAAiB,IAErB,UACC,IACD,AAAI,EAAE,aAAkB,aAAe,EAAE,iBAAsB,WAC3D,GAAmB,GAEnB,EAAE,aAAkB,cAAgB,EAAO,aAAa,OAAS,GACjE,IAAiB,GACjB,EAAiB,IAErB,UACC,IACD,AAAI,EAAE,aAAkB,aAAe,EAAE,iBAAsB,WAC3D,GAAmB,GAEnB,EAAE,aAAkB,cAAgB,EAAO,aAAa,OAAS,GACjE,IAAiB,IACjB,EAAiB,KAErB,SAQL,GAAM,IAAa,MAAO,EAAQ,KAAU,CAC/C,OAAW,KAAS,IAChB,GAAS,GAEb,GAAa,QAEb,GAAM,GAAM,WAAS,qBAAqB,aAAa,QAAQ,iBAG/D,AAAI,AAFe,IAAQ,IAGvB,cAAa,QACb,aAAa,QAAQ,eAAgB,KAAK,IAC1C,KAAM,GAAM,iDAGhB,KACA,AAAK,EAGD,EAAO,OAAS,GAAI,IAAa,CAAC,OAAQ,IAFtC,KAGR,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,MAGJ,OAAO,iBAAiB,OAAQ,IAAM,CAClC,GAAM,GAAM,SAAS,eAAe,iBACpC,GAAQ,GAAI,YACR,UAAU,GAAU,UAAY,cAAc,2CAC5B,GAAY,cAAc,GAAY,oBAAoB,GAAY,aAAa,GAAY,eAAe,QAAS,CAAC,MAAO,aAAa,GAAY,mBACtK,GAAU,oCAAsC,MAExD,SAAS,MAAQ,cAAc,KAE/B,KACA,KACA,KAEA",
  "names": []
}