{
  "version": 3,
  "sources": ["../node_modules/pad-end/index.js", "../node_modules/lz-string/libs/lz-string.js", "../node_modules/eventemitter3/index.js", "../node_modules/fast-unique-numbers/build/es5/bundle.js", "../node_modules/localforage/dist/localforage.js", "../node_modules/clipboard/dist/clipboard.js", "../node_modules/break_infinity.js/dist/break_infinity.esm.js", "../src/Synergism.ts", "../src/Cache/DOM.ts", "../src/Utility.ts", "../src/Variables.ts", "../src/Events.ts", "../node_modules/@babel/runtime/helpers/esm/typeof.js", "../node_modules/@babel/runtime/helpers/esm/classCallCheck.js", "../node_modules/@babel/runtime/helpers/esm/toPrimitive.js", "../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js", "../node_modules/@babel/runtime/helpers/esm/createClass.js", "../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js", "../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js", "../node_modules/@babel/runtime/helpers/esm/inherits.js", "../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js", "../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js", "../node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js", "../node_modules/@babel/runtime/helpers/esm/iterableToArray.js", "../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js", "../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js", "../node_modules/@babel/runtime/helpers/esm/toArray.js", "../node_modules/i18next/dist/esm/i18next.js", "../src/Achievements.ts", "../src/Talismans.ts", "../src/Runes.ts", "../src/Tesseracts.ts", "../src/Buy.ts", "../src/Automation.ts", "../src/Upgrades.ts", "../src/DynamicUpgrade.ts", "../src/singularity.ts", "../src/Research.ts", "../src/Hypercubes.ts", "../src/Themes.ts", "../src/Corruptions.ts", "../src/PlatonicCubes.ts", "../src/Quark.ts", "../src/CubeExperimental.ts", "../src/Config.ts", "../src/ImportExport.ts", "../src/Shop.ts", "../node_modules/worker-timers-broker/src/module.ts", "../node_modules/worker-timers-broker/src/guards/call-notification.ts", "../node_modules/worker-timers-broker/src/guards/clear-response.ts", "../node_modules/worker-timers/src/factories/load-worker-timers.ts", "../node_modules/worker-timers/src/worker/worker.ts", "../node_modules/worker-timers/src/module.ts", "../src/Timers.ts", "../src/Ants.ts", "../src/Hepteracts.ts", "../src/Statistics.ts", "../src/UpdateVisuals.ts", "../src/Helper.ts", "../src/Event.ts", "../src/Tabs.ts", "../src/Cubes.ts", "../src/Platonic.ts", "../src/Reset.ts", "../src/Hotkeys.ts", "../src/Calculate.ts", "../src/UpdateHTML.ts", "../src/Toggles.ts", "../src/Challenges.ts", "../src/History.ts", "../src/Tax.ts", "../src/Summary.ts", "../src/EventListeners.ts", "../src/Octeracts.ts", "../src/SingularityChallenges.ts", "../src/CheckVariables.ts", "../src/Plugins/ColorText.ts", "../src/i18n.ts"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = function (string, maxLength, fillString) {\n\n  if (string == null || maxLength == null) {\n    return string;\n  }\n\n  var result    = String(string);\n  var targetLen = typeof maxLength === 'number'\n    ? maxLength\n    : parseInt(maxLength, 10);\n\n  if (isNaN(targetLen) || !isFinite(targetLen)) {\n    return result;\n  }\n\n\n  var length = result.length;\n  if (length >= targetLen) {\n    return result;\n  }\n\n\n  var filled = fillString == null ? '' : String(fillString);\n  if (filled === '') {\n    filled = ' ';\n  }\n\n\n  var fillLen = targetLen - length;\n\n  while (filled.length < fillLen) {\n    filled += filled;\n  }\n\n  var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;\n\n  return result + truncated;\n};\n", "// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n\n\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n\n          return cache(collection, nextNumber);\n        } // Quickly check if there is a theoretical chance to generate a new number.\n\n\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        } // Otherwise use the full scale of safely usable integers.\n\n\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n", "/*!\n * clipboard.js v2.0.11\n * https://clipboardjs.com/\n *\n * Licensed MIT \u00A9 Zeno Rocha\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClipboardJS\"] = factory();\n\telse\n\t\troot[\"ClipboardJS\"] = factory();\n})(this, function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 686:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ clipboard; }\n});\n\n// EXTERNAL MODULE: ./node_modules/tiny-emitter/index.js\nvar tiny_emitter = __webpack_require__(279);\nvar tiny_emitter_default = /*#__PURE__*/__webpack_require__.n(tiny_emitter);\n// EXTERNAL MODULE: ./node_modules/good-listener/src/listen.js\nvar listen = __webpack_require__(370);\nvar listen_default = /*#__PURE__*/__webpack_require__.n(listen);\n// EXTERNAL MODULE: ./node_modules/select/src/select.js\nvar src_select = __webpack_require__(817);\nvar select_default = /*#__PURE__*/__webpack_require__.n(src_select);\n;// CONCATENATED MODULE: ./src/common/command.js\n/**\n * Executes a given operation type.\n * @param {String} type\n * @return {Boolean}\n */\nfunction command(type) {\n  try {\n    return document.execCommand(type);\n  } catch (err) {\n    return false;\n  }\n}\n;// CONCATENATED MODULE: ./src/actions/cut.js\n\n\n/**\n * Cut action wrapper.\n * @param {String|HTMLElement} target\n * @return {String}\n */\n\nvar ClipboardActionCut = function ClipboardActionCut(target) {\n  var selectedText = select_default()(target);\n  command('cut');\n  return selectedText;\n};\n\n/* harmony default export */ var actions_cut = (ClipboardActionCut);\n;// CONCATENATED MODULE: ./src/common/create-fake-element.js\n/**\n * Creates a fake textarea element with a value.\n * @param {String} value\n * @return {HTMLElement}\n */\nfunction createFakeElement(value) {\n  var isRTL = document.documentElement.getAttribute('dir') === 'rtl';\n  var fakeElement = document.createElement('textarea'); // Prevent zooming on iOS\n\n  fakeElement.style.fontSize = '12pt'; // Reset box model\n\n  fakeElement.style.border = '0';\n  fakeElement.style.padding = '0';\n  fakeElement.style.margin = '0'; // Move element out of screen horizontally\n\n  fakeElement.style.position = 'absolute';\n  fakeElement.style[isRTL ? 'right' : 'left'] = '-9999px'; // Move element to the same position vertically\n\n  var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  fakeElement.style.top = \"\".concat(yPosition, \"px\");\n  fakeElement.setAttribute('readonly', '');\n  fakeElement.value = value;\n  return fakeElement;\n}\n;// CONCATENATED MODULE: ./src/actions/copy.js\n\n\n\n/**\n * Create fake copy action wrapper using a fake element.\n * @param {String} target\n * @param {Object} options\n * @return {String}\n */\n\nvar fakeCopyAction = function fakeCopyAction(value, options) {\n  var fakeElement = createFakeElement(value);\n  options.container.appendChild(fakeElement);\n  var selectedText = select_default()(fakeElement);\n  command('copy');\n  fakeElement.remove();\n  return selectedText;\n};\n/**\n * Copy action wrapper.\n * @param {String|HTMLElement} target\n * @param {Object} options\n * @return {String}\n */\n\n\nvar ClipboardActionCopy = function ClipboardActionCopy(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    container: document.body\n  };\n  var selectedText = '';\n\n  if (typeof target === 'string') {\n    selectedText = fakeCopyAction(target, options);\n  } else if (target instanceof HTMLInputElement && !['text', 'search', 'url', 'tel', 'password'].includes(target === null || target === void 0 ? void 0 : target.type)) {\n    // If input type doesn't support `setSelectionRange`. Simulate it. https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n    selectedText = fakeCopyAction(target.value, options);\n  } else {\n    selectedText = select_default()(target);\n    command('copy');\n  }\n\n  return selectedText;\n};\n\n/* harmony default export */ var actions_copy = (ClipboardActionCopy);\n;// CONCATENATED MODULE: ./src/actions/default.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\n/**\n * Inner function which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n * @param {Object} options\n */\n\nvar ClipboardActionDefault = function ClipboardActionDefault() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // Defines base properties passed from constructor.\n  var _options$action = options.action,\n      action = _options$action === void 0 ? 'copy' : _options$action,\n      container = options.container,\n      target = options.target,\n      text = options.text; // Sets the `action` to be performed which can be either 'copy' or 'cut'.\n\n  if (action !== 'copy' && action !== 'cut') {\n    throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n  } // Sets the `target` property using an element that will be have its content copied.\n\n\n  if (target !== undefined) {\n    if (target && _typeof(target) === 'object' && target.nodeType === 1) {\n      if (action === 'copy' && target.hasAttribute('disabled')) {\n        throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n      }\n\n      if (action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n        throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n      }\n    } else {\n      throw new Error('Invalid \"target\" value, use a valid Element');\n    }\n  } // Define selection strategy based on `text` property.\n\n\n  if (text) {\n    return actions_copy(text, {\n      container: container\n    });\n  } // Defines which selection strategy based on `target` property.\n\n\n  if (target) {\n    return action === 'cut' ? actions_cut(target) : actions_copy(target, {\n      container: container\n    });\n  }\n};\n\n/* harmony default export */ var actions_default = (ClipboardActionDefault);\n;// CONCATENATED MODULE: ./src/clipboard.js\nfunction clipboard_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { clipboard_typeof = function _typeof(obj) { return typeof obj; }; } else { clipboard_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return clipboard_typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (clipboard_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n/**\n * Helper function to retrieve attribute value.\n * @param {String} suffix\n * @param {Element} element\n */\n\nfunction getAttributeValue(suffix, element) {\n  var attribute = \"data-clipboard-\".concat(suffix);\n\n  if (!element.hasAttribute(attribute)) {\n    return;\n  }\n\n  return element.getAttribute(attribute);\n}\n/**\n * Base class which takes one or more elements, adds event listeners to them,\n * and instantiates a new `ClipboardAction` on each click.\n */\n\n\nvar Clipboard = /*#__PURE__*/function (_Emitter) {\n  _inherits(Clipboard, _Emitter);\n\n  var _super = _createSuper(Clipboard);\n\n  /**\n   * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n   * @param {Object} options\n   */\n  function Clipboard(trigger, options) {\n    var _this;\n\n    _classCallCheck(this, Clipboard);\n\n    _this = _super.call(this);\n\n    _this.resolveOptions(options);\n\n    _this.listenClick(trigger);\n\n    return _this;\n  }\n  /**\n   * Defines if attributes would be resolved using internal setter functions\n   * or custom functions that were passed in the constructor.\n   * @param {Object} options\n   */\n\n\n  _createClass(Clipboard, [{\n    key: \"resolveOptions\",\n    value: function resolveOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n      this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n      this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n      this.container = clipboard_typeof(options.container) === 'object' ? options.container : document.body;\n    }\n    /**\n     * Adds a click event listener to the passed trigger.\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n     */\n\n  }, {\n    key: \"listenClick\",\n    value: function listenClick(trigger) {\n      var _this2 = this;\n\n      this.listener = listen_default()(trigger, 'click', function (e) {\n        return _this2.onClick(e);\n      });\n    }\n    /**\n     * Defines a new `ClipboardAction` on each click event.\n     * @param {Event} e\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      var trigger = e.delegateTarget || e.currentTarget;\n      var action = this.action(trigger) || 'copy';\n      var text = actions_default({\n        action: action,\n        container: this.container,\n        target: this.target(trigger),\n        text: this.text(trigger)\n      }); // Fires an event based on the copy operation result.\n\n      this.emit(text ? 'success' : 'error', {\n        action: action,\n        text: text,\n        trigger: trigger,\n        clearSelection: function clearSelection() {\n          if (trigger) {\n            trigger.focus();\n          }\n\n          window.getSelection().removeAllRanges();\n        }\n      });\n    }\n    /**\n     * Default `action` lookup function.\n     * @param {Element} trigger\n     */\n\n  }, {\n    key: \"defaultAction\",\n    value: function defaultAction(trigger) {\n      return getAttributeValue('action', trigger);\n    }\n    /**\n     * Default `target` lookup function.\n     * @param {Element} trigger\n     */\n\n  }, {\n    key: \"defaultTarget\",\n    value: function defaultTarget(trigger) {\n      var selector = getAttributeValue('target', trigger);\n\n      if (selector) {\n        return document.querySelector(selector);\n      }\n    }\n    /**\n     * Allow fire programmatically a copy action\n     * @param {String|HTMLElement} target\n     * @param {Object} options\n     * @returns Text copied.\n     */\n\n  }, {\n    key: \"defaultText\",\n\n    /**\n     * Default `text` lookup function.\n     * @param {Element} trigger\n     */\n    value: function defaultText(trigger) {\n      return getAttributeValue('text', trigger);\n    }\n    /**\n     * Destroy lifecycle.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.listener.destroy();\n    }\n  }], [{\n    key: \"copy\",\n    value: function copy(target) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        container: document.body\n      };\n      return actions_copy(target, options);\n    }\n    /**\n     * Allow fire programmatically a cut action\n     * @param {String|HTMLElement} target\n     * @returns Text cutted.\n     */\n\n  }, {\n    key: \"cut\",\n    value: function cut(target) {\n      return actions_cut(target);\n    }\n    /**\n     * Returns the support of the given action, or all actions if no action is\n     * given.\n     * @param {String} [action]\n     */\n\n  }, {\n    key: \"isSupported\",\n    value: function isSupported() {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n      var actions = typeof action === 'string' ? [action] : action;\n      var support = !!document.queryCommandSupported;\n      actions.forEach(function (action) {\n        support = support && !!document.queryCommandSupported(action);\n      });\n      return support;\n    }\n  }]);\n\n  return Clipboard;\n}((tiny_emitter_default()));\n\n/* harmony default export */ var clipboard = (Clipboard);\n\n/***/ }),\n\n/***/ 828:\n/***/ (function(module) {\n\nvar DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar closest = __webpack_require__(828);\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n\n\n/***/ }),\n\n/***/ 879:\n/***/ (function(__unused_webpack_module, exports) {\n\n/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n\n\n/***/ }),\n\n/***/ 370:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar is = __webpack_require__(879);\nvar delegate = __webpack_require__(438);\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n\n\n/***/ }),\n\n/***/ 817:\n/***/ (function(module) {\n\nfunction select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n\n\n/***/ }),\n\n/***/ 279:\n/***/ (function(module) {\n\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(686);\n/******/ })()\n.default;\n});", "import t from\"pad-end\";var n=9e15,e=function(){for(var t=[],n=-323;n<=308;n++)t.push(Number(\"1e\"+n));return function(n){return t[n+323]}}(),r=function(t){return t instanceof a?t:new a(t)},i=function(t,n){return(new a).fromMantissaExponent(t,n)},o=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)};function u(t,n,e,r){var i=n.mul(e.pow(r));return a.floor(t.div(i).mul(e.sub(1)).add(1).log10()/e.log10())}function s(t,n,e,r){return n.mul(e.pow(r)).mul(a.sub(1,e.pow(t))).div(a.sub(1,e))}var a=function(){function a(t){this.mantissa=NaN,this.exponent=NaN,void 0===t?(this.m=0,this.e=0):t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):this.fromString(t)}return Object.defineProperty(a.prototype,\"m\",{get:function(){return this.mantissa},set:function(t){this.mantissa=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"e\",{get:function(){return this.exponent},set:function(t){this.exponent=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"s\",{get:function(){return this.sign()},set:function(t){if(0===t)return this.e=0,void(this.m=0);this.sgn()!==t&&(this.m=-this.m)},enumerable:!1,configurable:!0}),a.fromMantissaExponent=function(t,n){return(new a).fromMantissaExponent(t,n)},a.fromMantissaExponent_noNormalize=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)},a.fromDecimal=function(t){return(new a).fromDecimal(t)},a.fromNumber=function(t){return(new a).fromNumber(t)},a.fromString=function(t){return(new a).fromString(t)},a.fromValue=function(t){return(new a).fromValue(t)},a.fromValue_noAlloc=function(t){return t instanceof a?t:new a(t)},a.abs=function(t){return r(t).abs()},a.neg=function(t){return r(t).neg()},a.negate=function(t){return r(t).neg()},a.negated=function(t){return r(t).neg()},a.sign=function(t){return r(t).sign()},a.sgn=function(t){return r(t).sign()},a.round=function(t){return r(t).round()},a.floor=function(t){return r(t).floor()},a.ceil=function(t){return r(t).ceil()},a.trunc=function(t){return r(t).trunc()},a.add=function(t,n){return r(t).add(n)},a.plus=function(t,n){return r(t).add(n)},a.sub=function(t,n){return r(t).sub(n)},a.subtract=function(t,n){return r(t).sub(n)},a.minus=function(t,n){return r(t).sub(n)},a.mul=function(t,n){return r(t).mul(n)},a.multiply=function(t,n){return r(t).mul(n)},a.times=function(t,n){return r(t).mul(n)},a.div=function(t,n){return r(t).div(n)},a.divide=function(t,n){return r(t).div(n)},a.recip=function(t){return r(t).recip()},a.reciprocal=function(t){return r(t).recip()},a.reciprocate=function(t){return r(t).reciprocate()},a.cmp=function(t,n){return r(t).cmp(n)},a.compare=function(t,n){return r(t).cmp(n)},a.eq=function(t,n){return r(t).eq(n)},a.equals=function(t,n){return r(t).eq(n)},a.neq=function(t,n){return r(t).neq(n)},a.notEquals=function(t,n){return r(t).notEquals(n)},a.lt=function(t,n){return r(t).lt(n)},a.lte=function(t,n){return r(t).lte(n)},a.gt=function(t,n){return r(t).gt(n)},a.gte=function(t,n){return r(t).gte(n)},a.max=function(t,n){return r(t).max(n)},a.min=function(t,n){return r(t).min(n)},a.clamp=function(t,n,e){return r(t).clamp(n,e)},a.clampMin=function(t,n){return r(t).clampMin(n)},a.clampMax=function(t,n){return r(t).clampMax(n)},a.cmp_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.compare_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.eq_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.equals_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.neq_tolerance=function(t,n,e){return r(t).neq_tolerance(n,e)},a.notEquals_tolerance=function(t,n,e){return r(t).notEquals_tolerance(n,e)},a.lt_tolerance=function(t,n,e){return r(t).lt_tolerance(n,e)},a.lte_tolerance=function(t,n,e){return r(t).lte_tolerance(n,e)},a.gt_tolerance=function(t,n,e){return r(t).gt_tolerance(n,e)},a.gte_tolerance=function(t,n,e){return r(t).gte_tolerance(n,e)},a.log10=function(t){return r(t).log10()},a.absLog10=function(t){return r(t).absLog10()},a.pLog10=function(t){return r(t).pLog10()},a.log=function(t,n){return r(t).log(n)},a.log2=function(t){return r(t).log2()},a.ln=function(t){return r(t).ln()},a.logarithm=function(t,n){return r(t).logarithm(n)},a.pow10=function(t){return Number.isInteger(t)?o(1,t):i(Math.pow(10,t%1),Math.trunc(t))},a.pow=function(t,n){return\"number\"==typeof t&&10===t&&\"number\"==typeof n&&Number.isInteger(n)?o(1,n):r(t).pow(n)},a.exp=function(t){return r(t).exp()},a.sqr=function(t){return r(t).sqr()},a.sqrt=function(t){return r(t).sqrt()},a.cube=function(t){return r(t).cube()},a.cbrt=function(t){return r(t).cbrt()},a.dp=function(t){return r(t).dp()},a.decimalPlaces=function(t){return r(t).dp()},a.affordGeometricSeries=function(t,n,e,i){return u(r(t),r(n),r(e),i)},a.sumGeometricSeries=function(t,n,e,i){return s(t,r(n),r(e),i)},a.affordArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e)).sub(e.div(2)),o=i.pow(2);return i.neg().add(o.add(e.mul(t).mul(2)).sqrt()).div(e).floor()}(r(t),r(n),r(e),r(i))},a.sumArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e));return t.div(2).mul(i.mul(2).plus(t.sub(1).mul(e)))}(r(t),r(n),r(e),r(i))},a.efficiencyOfPurchase=function(t,n,e){return function(t,n,e){return t.div(n).add(t.div(e))}(r(t),r(n),r(e))},a.randomDecimalForTesting=function(t){if(20*Math.random()<1)return o(0,0);var n=10*Math.random();10*Math.random()<1&&(n=Math.round(n)),n*=Math.sign(2*Math.random()-1);var e=Math.floor(Math.random()*t*2)-t;return i(n,e)},a.prototype.normalize=function(){if(this.m>=1&&this.m<10)return this;if(0===this.m)return this.m=0,this.e=0,this;var t=Math.floor(Math.log10(Math.abs(this.m)));return this.m=-324===t?10*this.m/1e-323:this.m/e(t),this.e+=t,this},a.prototype.fromMantissaExponent=function(t,n){return isFinite(t)&&isFinite(n)?(this.m=t,this.e=n,this.normalize(),this):(t=Number.NaN,n=Number.NaN,this)},a.prototype.fromMantissaExponent_noNormalize=function(t,n){return this.m=t,this.e=n,this},a.prototype.fromDecimal=function(t){return this.m=t.m,this.e=t.e,this},a.prototype.fromNumber=function(t){return isNaN(t)?(this.m=Number.NaN,this.e=Number.NaN):t===Number.POSITIVE_INFINITY?(this.m=1,this.e=n):t===Number.NEGATIVE_INFINITY?(this.m=-1,this.e=n):0===t?(this.m=0,this.e=0):(this.e=Math.floor(Math.log10(Math.abs(t))),this.m=-324===this.e?10*t/1e-323:t/e(this.e),this.normalize()),this},a.prototype.fromString=function(t){if(-1!==t.indexOf(\"e\")){var n=t.split(\"e\");this.m=parseFloat(n[0]),this.e=parseFloat(n[1]),this.normalize()}else if(\"NaN\"===t)this.m=Number.NaN,this.e=Number.NaN;else if(this.fromNumber(parseFloat(t)),isNaN(this.m))throw Error(\"[DecimalError] Invalid argument: \"+t);return this},a.prototype.fromValue=function(t){return t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):\"string\"==typeof t?this.fromString(t):(this.m=0,this.e=0,this)},a.prototype.toNumber=function(){if(!isFinite(this.e))return Number.NaN;if(this.e>308)return this.m>0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY;if(this.e<-324)return 0;if(-324===this.e)return this.m>0?5e-324:-5e-324;var t=this.m*e(this.e);if(!isFinite(t)||this.e<0)return t;var n=Math.round(t);return Math.abs(n-t)<1e-10?n:t},a.prototype.mantissaWithDecimalPlaces=function(t){if(isNaN(this.m)||isNaN(this.e))return Number.NaN;if(0===this.m)return 0;var n=t+1,e=Math.ceil(Math.log10(Math.abs(this.m))),r=Math.round(this.m*Math.pow(10,n-e))*Math.pow(10,e-n);return parseFloat(r.toFixed(Math.max(n-e,0)))},a.prototype.toString=function(){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\":this.e<21&&this.e>-7?this.toNumber().toString():this.m+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toExponential=function(e){if(isNaN(this.m)||isNaN(this.e))return\"NaN\";if(this.e>=n)return this.m>0?\"Infinity\":\"-Infinity\";if(this.e<=-n||0===this.m)return\"0\"+(e>0?t(\".\",e+1,\"0\"):\"\")+\"e+0\";if(this.e>-324&&this.e<308)return this.toNumber().toExponential(e);isFinite(e)||(e=17);var r=e+1,i=Math.max(1,Math.ceil(Math.log10(Math.abs(this.m))));return(Math.round(this.m*Math.pow(10,r-i))*Math.pow(10,i-r)).toFixed(Math.max(r-i,0))+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toFixed=function(e){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\"+(e>0?t(\".\",e+1,\"0\"):\"\"):this.e>=17?this.m.toString().replace(\".\",\"\").padEnd(this.e+1,\"0\")+(e>0?t(\".\",e+1,\"0\"):\"\"):this.toNumber().toFixed(e)},a.prototype.toPrecision=function(t){return this.e<=-7?this.toExponential(t-1):t>this.e?this.toFixed(t-this.e-1):this.toExponential(t-1)},a.prototype.valueOf=function(){return this.toString()},a.prototype.toJSON=function(){return this.toString()},a.prototype.toStringWithDecimalPlaces=function(t){return this.toExponential(t)},a.prototype.abs=function(){return o(Math.abs(this.m),this.e)},a.prototype.neg=function(){return o(-this.m,this.e)},a.prototype.negate=function(){return this.neg()},a.prototype.negated=function(){return this.neg()},a.prototype.sign=function(){return Math.sign(this.m)},a.prototype.sgn=function(){return this.sign()},a.prototype.round=function(){return this.e<-1?new a(0):this.e<17?new a(Math.round(this.toNumber())):this},a.prototype.floor=function(){return this.e<-1?Math.sign(this.m)>=0?new a(0):new a(-1):this.e<17?new a(Math.floor(this.toNumber())):this},a.prototype.ceil=function(){return this.e<-1?Math.sign(this.m)>0?new a(1):new a(0):this.e<17?new a(Math.ceil(this.toNumber())):this},a.prototype.trunc=function(){return this.e<0?new a(0):this.e<17?new a(Math.trunc(this.toNumber())):this},a.prototype.add=function(t){var n,o,u=r(t);if(0===this.m)return u;if(0===u.m)return this;if(this.e>=u.e?(n=this,o=u):(n=u,o=this),n.e-o.e>17)return n;var s=Math.round(1e14*n.m+1e14*o.m*e(o.e-n.e));return i(s,n.e-14)},a.prototype.plus=function(t){return this.add(t)},a.prototype.sub=function(t){return this.add(r(t).neg())},a.prototype.subtract=function(t){return this.sub(t)},a.prototype.minus=function(t){return this.sub(t)},a.prototype.mul=function(t){if(\"number\"==typeof t)return t<1e307&&t>-1e307?i(this.m*t,this.e):i(1e-307*this.m*t,this.e+307);var n=\"string\"==typeof t?new a(t):t;return i(this.m*n.m,this.e+n.e)},a.prototype.multiply=function(t){return this.mul(t)},a.prototype.times=function(t){return this.mul(t)},a.prototype.div=function(t){return this.mul(r(t).recip())},a.prototype.divide=function(t){return this.div(t)},a.prototype.divideBy=function(t){return this.div(t)},a.prototype.dividedBy=function(t){return this.div(t)},a.prototype.recip=function(){return i(1/this.m,-this.e)},a.prototype.reciprocal=function(){return this.recip()},a.prototype.reciprocate=function(){return this.recip()},a.prototype.cmp=function(t){var n=r(t);if(0===this.m){if(0===n.m)return 0;if(n.m<0)return 1;if(n.m>0)return-1}if(0===n.m){if(this.m<0)return-1;if(this.m>0)return 1}if(this.m>0)return n.m<0||this.e>n.e?1:this.e<n.e?-1:this.m>n.m?1:this.m<n.m?-1:0;if(this.m<0)return n.m>0||this.e>n.e?-1:this.e<n.e||this.m>n.m?1:this.m<n.m?-1:0;throw Error(\"Unreachable code\")},a.prototype.compare=function(t){return this.cmp(t)},a.prototype.eq=function(t){var n=r(t);return this.e===n.e&&this.m===n.m},a.prototype.equals=function(t){return this.eq(t)},a.prototype.neq=function(t){return!this.eq(t)},a.prototype.notEquals=function(t){return this.neq(t)},a.prototype.lt=function(t){var n=r(t);return 0===this.m?n.m>0:0===n.m?this.m<=0:this.e===n.e?this.m<n.m:this.m>0?n.m>0&&this.e<n.e:n.m>0||this.e>n.e},a.prototype.lte=function(t){return!this.gt(t)},a.prototype.gt=function(t){var n=r(t);return 0===this.m?n.m<0:0===n.m?this.m>0:this.e===n.e?this.m>n.m:this.m>0?n.m<0||this.e>n.e:n.m<0&&this.e<n.e},a.prototype.gte=function(t){return!this.lt(t)},a.prototype.max=function(t){var n=r(t);return this.lt(n)?n:this},a.prototype.min=function(t){var n=r(t);return this.gt(n)?n:this},a.prototype.clamp=function(t,n){return this.max(t).min(n)},a.prototype.clampMin=function(t){return this.max(t)},a.prototype.clampMax=function(t){return this.min(t)},a.prototype.cmp_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)?0:this.cmp(e)},a.prototype.compare_tolerance=function(t,n){return this.cmp_tolerance(t,n)},a.prototype.eq_tolerance=function(t,n){var e=r(t);return a.lte(this.sub(e).abs(),a.max(this.abs(),e.abs()).mul(n))},a.prototype.equals_tolerance=function(t,n){return this.eq_tolerance(t,n)},a.prototype.neq_tolerance=function(t,n){return!this.eq_tolerance(t,n)},a.prototype.notEquals_tolerance=function(t,n){return this.neq_tolerance(t,n)},a.prototype.lt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.lt(e)},a.prototype.lte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.lt(e)},a.prototype.gt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.gt(e)},a.prototype.gte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.gt(e)},a.prototype.log10=function(){return this.e+Math.log10(this.m)},a.prototype.absLog10=function(){return this.e+Math.log10(Math.abs(this.m))},a.prototype.pLog10=function(){return this.m<=0||this.e<0?0:this.log10()},a.prototype.log=function(t){return Math.LN10/Math.log(t)*this.log10()},a.prototype.log2=function(){return 3.321928094887362*this.log10()},a.prototype.ln=function(){return 2.302585092994045*this.log10()},a.prototype.logarithm=function(t){return this.log(t)},a.prototype.pow=function(t){var n,e=t instanceof a?t.toNumber():t,r=this.e*e;if(Number.isSafeInteger(r)&&(n=Math.pow(this.m,e),isFinite(n)&&0!==n))return i(n,r);var o=Math.trunc(r),u=r-o;if(n=Math.pow(10,e*Math.log10(this.m)+u),isFinite(n)&&0!==n)return i(n,o);var s=a.pow10(e*this.absLog10());return-1===this.sign()?1===Math.abs(e%2)?s.neg():0===Math.abs(e%2)?s:new a(Number.NaN):s},a.prototype.pow_base=function(t){return r(t).pow(this)},a.prototype.factorial=function(){var t=this.toNumber()+1;return a.pow(t/Math.E*Math.sqrt(t*Math.sinh(1/t)+1/(810*Math.pow(t,6))),t).mul(Math.sqrt(2*Math.PI/t))},a.prototype.exp=function(){var t=this.toNumber();return-706<t&&t<709?a.fromNumber(Math.exp(t)):a.pow(Math.E,t)},a.prototype.sqr=function(){return i(Math.pow(this.m,2),2*this.e)},a.prototype.sqrt=function(){return this.m<0?new a(Number.NaN):this.e%2!=0?i(3.16227766016838*Math.sqrt(this.m),Math.floor(this.e/2)):i(Math.sqrt(this.m),Math.floor(this.e/2))},a.prototype.cube=function(){return i(Math.pow(this.m,3),3*this.e)},a.prototype.cbrt=function(){var t=1,n=this.m;n<0&&(t=-1,n=-n);var e=t*Math.pow(n,1/3),r=this.e%3;return i(1===r||-1===r?2.154434690031883*e:0!==r?4.641588833612778*e:e,Math.floor(this.e/3))},a.prototype.sinh=function(){return this.exp().sub(this.negate().exp()).div(2)},a.prototype.cosh=function(){return this.exp().add(this.negate().exp()).div(2)},a.prototype.tanh=function(){return this.sinh().div(this.cosh())},a.prototype.asinh=function(){return a.ln(this.add(this.sqr().add(1).sqrt()))},a.prototype.acosh=function(){return a.ln(this.add(this.sqr().sub(1).sqrt()))},a.prototype.atanh=function(){return this.abs().gte(1)?Number.NaN:a.ln(this.add(1).div(new a(1).sub(this)))/2},a.prototype.ascensionPenalty=function(t){return 0===t?this:this.pow(Math.pow(10,-t))},a.prototype.egg=function(){return this.add(9)},a.prototype.lessThanOrEqualTo=function(t){return this.cmp(t)<1},a.prototype.lessThan=function(t){return this.cmp(t)<0},a.prototype.greaterThanOrEqualTo=function(t){return this.cmp(t)>-1},a.prototype.greaterThan=function(t){return this.cmp(t)>0},a.prototype.decimalPlaces=function(){return this.dp()},a.prototype.dp=function(){if(!isFinite(this.mantissa))return NaN;if(this.exponent>=17)return 0;for(var t=this.mantissa,n=-this.exponent,e=1;Math.abs(Math.round(t*e)/e-t)>1e-10;)e*=10,n++;return n>0?n:0},Object.defineProperty(a,\"MAX_VALUE\",{get:function(){return h},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"MIN_VALUE\",{get:function(){return c},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MAX_VALUE\",{get:function(){return p},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MIN_VALUE\",{get:function(){return f},enumerable:!1,configurable:!0}),a}(),h=o(1,n),c=o(1,-n),p=r(Number.MAX_VALUE),f=r(Number.MIN_VALUE);export default a;\n", "import type { DecimalSource } from 'break_infinity.js'\r\nimport Decimal from 'break_infinity.js'\r\nimport LZString from 'lz-string'\r\n\r\nimport { isDecimal, sortWithIndices, sumContents, btoa, cleanString } from './Utility'\r\nimport { blankGlobals, Globals as G } from './Variables'\r\nimport { CalcECC, getChallengeConditions, challengeDisplay, highestChallengeRewards, challengeRequirement, runChallengeSweep, getMaxChallenges, challenge15ScoreMultiplier, getNextChallenge, autoAscensionChallengeSweepUnlock } from './Challenges'\r\n\r\nimport type { OneToFive, Player, resetNames, ZeroToFour } from './types/Synergism'\r\nimport { upgradeupdate, getConstUpgradeMetadata, buyConstantUpgrades, ascendBuildingDR, categoryUpgrades } from './Upgrades'\r\nimport { updateResearchBG, maxRoombaResearchIndex, buyResearch } from './Research'\r\nimport { updateChallengeDisplay, revealStuff, showCorruptionStatsLoadouts, updateAchievementBG, updateChallengeLevel, buttoncolorchange, htmlInserts, changeTabColor, Confirm, Alert, Notification } from './UpdateHTML'\r\nimport { calculateHypercubeBlessings } from './Hypercubes'\r\nimport { calculateTesseractBlessings } from './Tesseracts'\r\nimport { calculateCubeBlessings, calculateObtainium, calculateAnts, calculateRuneLevels, calculateOffline, calculateSigmoidExponential, calculateCorruptionPoints, calculateTotalCoinOwned, calculateTotalAcceleratorBoost, dailyResetCheck, calculateOfferings, calculateAcceleratorMultiplier, calculateTimeAcceleration, exitOffline, calculateGoldenQuarkGain } from './Calculate'\r\nimport { updateTalismanAppearance, toggleTalismanBuy, updateTalismanInventory, buyTalismanEnhance, buyTalismanLevels, calculateMaxTalismanLevel } from './Talismans'\r\nimport { toggleAscStatPerSecond, toggleChallenges, toggleauto, toggleAutoChallengeModeText, toggleShops, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleAutoAscend, updateAutoChallenge, updateRuneBlessingBuyAmount, autoCubeUpgradesToggle, autoPlatonicUpgradesToggle } from './Toggles'\r\nimport { c15RewardUpdate } from './Statistics'\r\nimport { resetHistoryRenderAllTables } from './History'\r\nimport { calculatePlatonicBlessings } from './PlatonicCubes'\r\nimport { antSacrificePointsToMultiplier, autoBuyAnts, calculateCrumbToCoinExp } from './Ants'\r\nimport { calculatetax } from './Tax'\r\nimport { ascensionAchievementCheck, challengeachievementcheck, achievementaward, resetachievementcheck, buildingAchievementCheck } from './Achievements'\r\nimport { reset, resetrepeat, singularity, updateSingularityAchievements, updateAutoReset, updateTesseractAutoBuyAmount, updateAutoCubesOpens, updateSingularityGlobalPerks } from './Reset'\r\nimport type { TesseractBuildings } from './Buy'\r\nimport { buyMax, buyAccelerator, buyMultiplier, boostAccelerator, buyCrystalUpgrades, buyParticleBuilding, getReductionValue, getCost, buyRuneBonusLevels, buyTesseractBuilding, calculateTessBuildingsInBudget } from './Buy'\r\nimport { autoUpgrades } from './Automation'\r\nimport { redeemShards } from './Runes'\r\nimport { updateCubeUpgradeBG } from './Cubes'\r\nimport { corruptionLoadoutTableUpdate, corruptionButtonsAdd, corruptionLoadoutTableCreate, corruptionStatsUpdate, updateCorruptionLoadoutNames, corruptionLoadoutSaveLoad, corrChallengeMinimum, maxCorruptionLevel } from './Corruptions'\r\nimport { generateEventHandlers } from './EventListeners'\r\nimport { addTimers, automaticTools } from './Helper'\r\nimport { autoResearchEnabled } from './Research'\r\n//import { LegacyShopUpgrades } from './types/LegacySynergism';\r\n\r\nimport { checkVariablesOnLoad } from './CheckVariables'\r\nimport { AbyssHepteract, AcceleratorBoostHepteract, AcceleratorHepteract, ChallengeHepteract, ChronosHepteract, hepteractEffective, HyperrealismHepteract, MultiplierHepteract, QuarkHepteract, toggleAutoBuyOrbs } from './Hepteracts'\r\nimport { QuarkHandler } from './Quark'\r\nimport { WowCubes, WowHypercubes, WowPlatonicCubes, WowTesseracts } from './CubeExperimental'\r\nimport { updatePlatonicUpgradeBG } from './Platonic'\r\nimport { testing, version, lastUpdated, prod } from './Config'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport localforage from 'localforage'\r\nimport { singularityData, SingularityUpgrade, getFastForwardTotalMultiplier } from './singularity'\r\nimport type { PlayerSave } from './types/LegacySynergism'\r\nimport { eventCheck } from './Event'\r\nimport { disableHotkeys } from './Hotkeys'\r\nimport { octeractData, OcteractUpgrade } from './Octeracts'\r\nimport { settingAnnotation, toggleTheme, toggleIconSet } from './Themes'\r\nimport { setInterval, setTimeout, clearTimeout, clearTimers } from './Timers'\r\nimport { SingularityChallenge, singularityChallengeData } from './SingularityChallenges'\r\nimport { init as i18nInit } from './i18n'\r\nimport i18next from 'i18next'\r\nimport { changeTab, changeSubTab } from './Tabs'\r\n\r\nexport const player: Player = {\r\n  firstPlayed: new Date().toISOString(),\r\n  worlds: new QuarkHandler({ quarks: 0, bonus: 0 }),\r\n  coins: new Decimal('1e2'),\r\n  coinsThisPrestige: new Decimal('1e2'),\r\n  coinsThisTranscension: new Decimal('1e2'),\r\n  coinsThisReincarnation: new Decimal('1e2'),\r\n  coinsTotal: new Decimal('100'),\r\n\r\n  firstOwnedCoin: 0,\r\n  firstGeneratedCoin: new Decimal('0'),\r\n  firstCostCoin: new Decimal('100'),\r\n  firstProduceCoin: 0.25,\r\n\r\n  secondOwnedCoin: 0,\r\n  secondGeneratedCoin: new Decimal('0'),\r\n  secondCostCoin: new Decimal('1e3'),\r\n  secondProduceCoin: 2.5,\r\n\r\n  thirdOwnedCoin: 0,\r\n  thirdGeneratedCoin: new Decimal('0'),\r\n  thirdCostCoin: new Decimal('2e4'),\r\n  thirdProduceCoin: 25,\r\n\r\n  fourthOwnedCoin: 0,\r\n  fourthGeneratedCoin: new Decimal('0'),\r\n  fourthCostCoin: new Decimal('4e5'),\r\n  fourthProduceCoin: 250,\r\n\r\n  fifthOwnedCoin: 0,\r\n  fifthGeneratedCoin: new Decimal('0'),\r\n  fifthCostCoin: new Decimal('8e6'),\r\n  fifthProduceCoin: 2500,\r\n\r\n  firstOwnedDiamonds: 0,\r\n  firstGeneratedDiamonds: new Decimal('0'),\r\n  firstCostDiamonds: new Decimal('100'),\r\n  firstProduceDiamonds: 0.05,\r\n\r\n  secondOwnedDiamonds: 0,\r\n  secondGeneratedDiamonds: new Decimal('0'),\r\n  secondCostDiamonds: new Decimal('1e5'),\r\n  secondProduceDiamonds: 0.0005,\r\n\r\n  thirdOwnedDiamonds: 0,\r\n  thirdGeneratedDiamonds: new Decimal('0'),\r\n  thirdCostDiamonds: new Decimal('1e15'),\r\n  thirdProduceDiamonds: 0.00005,\r\n\r\n  fourthOwnedDiamonds: 0,\r\n  fourthGeneratedDiamonds: new Decimal('0'),\r\n  fourthCostDiamonds: new Decimal('1e40'),\r\n  fourthProduceDiamonds: 0.000005,\r\n\r\n  fifthOwnedDiamonds: 0,\r\n  fifthGeneratedDiamonds: new Decimal('0'),\r\n  fifthCostDiamonds: new Decimal('1e100'),\r\n  fifthProduceDiamonds: 0.000005,\r\n\r\n  firstOwnedMythos: 0,\r\n  firstGeneratedMythos: new Decimal('0'),\r\n  firstCostMythos: new Decimal('1'),\r\n  firstProduceMythos: 1,\r\n\r\n  secondOwnedMythos: 0,\r\n  secondGeneratedMythos: new Decimal('0'),\r\n  secondCostMythos: new Decimal('100'),\r\n  secondProduceMythos: 0.01,\r\n\r\n  thirdOwnedMythos: 0,\r\n  thirdGeneratedMythos: new Decimal('0'),\r\n  thirdCostMythos: new Decimal('1e4'),\r\n  thirdProduceMythos: 0.001,\r\n\r\n  fourthOwnedMythos: 0,\r\n  fourthGeneratedMythos: new Decimal('0'),\r\n  fourthCostMythos: new Decimal('1e8'),\r\n  fourthProduceMythos: 0.0002,\r\n\r\n  fifthOwnedMythos: 0,\r\n  fifthGeneratedMythos: new Decimal('0'),\r\n  fifthCostMythos: new Decimal('1e16'),\r\n  fifthProduceMythos: 0.00004,\r\n\r\n  firstOwnedParticles: 0,\r\n  firstGeneratedParticles: new Decimal('0'),\r\n  firstCostParticles: new Decimal('1'),\r\n  firstProduceParticles: .25,\r\n\r\n  secondOwnedParticles: 0,\r\n  secondGeneratedParticles: new Decimal('0'),\r\n  secondCostParticles: new Decimal('100'),\r\n  secondProduceParticles: .20,\r\n\r\n  thirdOwnedParticles: 0,\r\n  thirdGeneratedParticles: new Decimal('0'),\r\n  thirdCostParticles: new Decimal('1e4'),\r\n  thirdProduceParticles: .15,\r\n\r\n  fourthOwnedParticles: 0,\r\n  fourthGeneratedParticles: new Decimal('0'),\r\n  fourthCostParticles: new Decimal('1e8'),\r\n  fourthProduceParticles: .10,\r\n\r\n  fifthOwnedParticles: 0,\r\n  fifthGeneratedParticles: new Decimal('0'),\r\n  fifthCostParticles: new Decimal('1e16'),\r\n  fifthProduceParticles: .5,\r\n\r\n  firstOwnedAnts: 0,\r\n  firstGeneratedAnts: new Decimal('0'),\r\n  firstCostAnts: new Decimal('1e700'),\r\n  firstProduceAnts: .0001,\r\n\r\n  secondOwnedAnts: 0,\r\n  secondGeneratedAnts: new Decimal('0'),\r\n  secondCostAnts: new Decimal('3'),\r\n  secondProduceAnts: .00005,\r\n\r\n  thirdOwnedAnts: 0,\r\n  thirdGeneratedAnts: new Decimal('0'),\r\n  thirdCostAnts: new Decimal('100'),\r\n  thirdProduceAnts: .00002,\r\n\r\n  fourthOwnedAnts: 0,\r\n  fourthGeneratedAnts: new Decimal('0'),\r\n  fourthCostAnts: new Decimal('1e4'),\r\n  fourthProduceAnts: .00001,\r\n\r\n  fifthOwnedAnts: 0,\r\n  fifthGeneratedAnts: new Decimal('0'),\r\n  fifthCostAnts: new Decimal('1e12'),\r\n  fifthProduceAnts: .000005,\r\n\r\n  sixthOwnedAnts: 0,\r\n  sixthGeneratedAnts: new Decimal('0'),\r\n  sixthCostAnts: new Decimal('1e36'),\r\n  sixthProduceAnts: .000002,\r\n\r\n  seventhOwnedAnts: 0,\r\n  seventhGeneratedAnts: new Decimal('0'),\r\n  seventhCostAnts: new Decimal('1e100'),\r\n  seventhProduceAnts: .000001,\r\n\r\n  eighthOwnedAnts: 0,\r\n  eighthGeneratedAnts: new Decimal('0'),\r\n  eighthCostAnts: new Decimal('1e300'),\r\n  eighthProduceAnts: .00000001,\r\n\r\n  ascendBuilding1: {\r\n    cost: 1,\r\n    owned: 0,\r\n    generated: new Decimal('0'),\r\n    multiplier: 0.01\r\n  },\r\n  ascendBuilding2: {\r\n    cost: 10,\r\n    owned: 0,\r\n    generated: new Decimal('0'),\r\n    multiplier: 0.01\r\n  },\r\n  ascendBuilding3: {\r\n    cost: 100,\r\n    owned: 0,\r\n    generated: new Decimal('0'),\r\n    multiplier: 0.01\r\n  },\r\n  ascendBuilding4: {\r\n    cost: 1000,\r\n    owned: 0,\r\n    generated: new Decimal('0'),\r\n    multiplier: 0.01\r\n  },\r\n  ascendBuilding5: {\r\n    cost: 10000,\r\n    owned: 0,\r\n    generated: new Decimal('0'),\r\n    multiplier: 0.01\r\n  },\r\n\r\n  multiplierCost: new Decimal('1e4'),\r\n  multiplierBought: 0,\r\n\r\n  acceleratorCost: new Decimal('500'),\r\n  acceleratorBought: 0,\r\n\r\n  acceleratorBoostBought: 0,\r\n  acceleratorBoostCost: new Decimal('1e3'),\r\n\r\n  upgrades: Array(141).fill(0) as number[],\r\n\r\n  prestigeCount: 0,\r\n  transcendCount: 0,\r\n  reincarnationCount: 0,\r\n\r\n  prestigePoints: new Decimal('0'),\r\n  transcendPoints: new Decimal('0'),\r\n  reincarnationPoints: new Decimal('0'),\r\n\r\n  prestigeShards: new Decimal('0'),\r\n  transcendShards: new Decimal('0'),\r\n  reincarnationShards: new Decimal('0'),\r\n\r\n  toggles: {\r\n    1: false,\r\n    2: false,\r\n    3: false,\r\n    4: false,\r\n    5: false,\r\n    6: false,\r\n    7: false,\r\n    8: false,\r\n    9: false,\r\n    10: false,\r\n    11: false,\r\n    12: false,\r\n    13: false,\r\n    14: false,\r\n    15: false,\r\n    16: false,\r\n    17: false,\r\n    18: false,\r\n    19: false,\r\n    20: false,\r\n    21: false,\r\n    22: false,\r\n    23: false,\r\n    24: false,\r\n    25: false,\r\n    26: false,\r\n    27: false,\r\n    28: true,\r\n    29: true,\r\n    30: true,\r\n    31: true,\r\n    32: true,\r\n    33: true,\r\n    34: true,\r\n    35: true,\r\n    36: false,\r\n    37: false,\r\n    38: false,\r\n    39: true,\r\n    40: true,\r\n    41: true,\r\n    42: false,\r\n    43: false\r\n  },\r\n\r\n  challengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  highestchallengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  challenge15Exponent: 0,\r\n  highestChallenge15Exponent: 0,\r\n\r\n  retrychallenges: false,\r\n  currentChallenge: {\r\n    transcension: 0,\r\n    reincarnation: 0,\r\n    ascension: 0\r\n  },\r\n  researchPoints: 0,\r\n  obtainiumtimer: 0,\r\n  obtainiumpersecond: 0,\r\n  maxobtainiumpersecond: 0,\r\n  maxobtainium: 0,\r\n  // Ignore the first index. The other 25 are shaped in a 5x5 grid similar to the production appearance\r\n  researches: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n\r\n  unlocks: {\r\n    coinone: false,\r\n    cointwo: false,\r\n    cointhree: false,\r\n    coinfour: false,\r\n    prestige: false,\r\n    generation: false,\r\n    transcend: false,\r\n    reincarnate: false,\r\n    rrow1: false,\r\n    rrow2: false,\r\n    rrow3: false,\r\n    rrow4: false\r\n  },\r\n  achievements: Array(281).fill(0) as number[],\r\n\r\n  achievementPoints: 0,\r\n\r\n  prestigenomultiplier: true,\r\n  prestigenoaccelerator: true,\r\n  transcendnomultiplier: true,\r\n  transcendnoaccelerator: true,\r\n  reincarnatenomultiplier: true,\r\n  reincarnatenoaccelerator: true,\r\n  prestigenocoinupgrades: true,\r\n  transcendnocoinupgrades: true,\r\n  transcendnocoinorprestigeupgrades: true,\r\n  reincarnatenocoinupgrades: true,\r\n  reincarnatenocoinorprestigeupgrades: true,\r\n  reincarnatenocoinprestigeortranscendupgrades: true,\r\n  reincarnatenocoinprestigetranscendorgeneratorupgrades: true,\r\n\r\n  crystalUpgrades: [0, 0, 0, 0, 0, 0, 0, 0],\r\n  crystalUpgradesCost: [7, 15, 20, 40, 100, 200, 500, 1000],\r\n\r\n  runelevels: [1, 1, 1, 1, 1, 0, 0],\r\n  runeexp: [0, 0, 0, 0, 0, 0, 0],\r\n  runeshards: 0,\r\n  maxofferings: 0,\r\n  offeringpersecond: 0,\r\n\r\n  prestigecounter: 0,\r\n  transcendcounter: 0,\r\n  reincarnationcounter: 0,\r\n  offlinetick: 0,\r\n\r\n  prestigeamount: 0,\r\n  transcendamount: 0,\r\n  reincarnationamount: 0,\r\n\r\n  fastestprestige: 9999999999,\r\n  fastesttranscend: 99999999999,\r\n  fastestreincarnate: 999999999999,\r\n\r\n  resettoggle1: 1,\r\n  resettoggle2: 1,\r\n  resettoggle3: 1,\r\n  resettoggle4: 1,\r\n\r\n  tesseractAutoBuyerToggle: 0,\r\n  tesseractAutoBuyerAmount: 0,\r\n\r\n  coinbuyamount: 1,\r\n  crystalbuyamount: 1,\r\n  mythosbuyamount: 1,\r\n  particlebuyamount: 1,\r\n  offeringbuyamount: 1,\r\n  tesseractbuyamount: 1,\r\n\r\n\r\n  shoptoggles: {\r\n    coin: true,\r\n    prestige: true,\r\n    transcend: true,\r\n    generators: true,\r\n    reincarnate: true\r\n  },\r\n  tabnumber: 1,\r\n  subtabNumber: 0,\r\n\r\n  // create a Map with keys defaulting to false\r\n  codes: new Map(\r\n    Array.from({ length: 40 }, (_, i) => [i + 1, false])\r\n  ),\r\n\r\n  loaded1009: true,\r\n  loaded1009hotfix1: true,\r\n  loaded10091: true,\r\n  loaded1010: true,\r\n  loaded10101: true,\r\n\r\n  shopUpgrades: {\r\n    offeringPotion: 1,\r\n    obtainiumPotion: 1,\r\n    offeringEX: 0,\r\n    offeringAuto: 0,\r\n    obtainiumEX: 0,\r\n    obtainiumAuto: 0,\r\n    instantChallenge: 0,\r\n    antSpeed: 0,\r\n    cashGrab: 0,\r\n    shopTalisman: 0,\r\n    seasonPass: 0,\r\n    challengeExtension: 0,\r\n    challengeTome: 0,\r\n    cubeToQuark: 0,\r\n    tesseractToQuark: 0,\r\n    hypercubeToQuark: 0,\r\n    seasonPass2: 0,\r\n    seasonPass3: 0,\r\n    chronometer: 0,\r\n    infiniteAscent: 0,\r\n    calculator: 0,\r\n    calculator2: 0,\r\n    calculator3: 0,\r\n    calculator4: 0,\r\n    calculator5: 0,\r\n    calculator6: 0,\r\n    constantEX: 0,\r\n    powderEX: 0,\r\n    chronometer2: 0,\r\n    chronometer3: 0,\r\n    seasonPassY: 0,\r\n    seasonPassZ: 0,\r\n    challengeTome2: 0,\r\n    instantChallenge2: 0,\r\n    cashGrab2: 0,\r\n    chronometerZ: 0,\r\n    cubeToQuarkAll: 0,\r\n    offeringEX2: 0,\r\n    obtainiumEX2: 0,\r\n    seasonPassLost: 0,\r\n    powderAuto: 0,\r\n    challenge15Auto: 0,\r\n    extraWarp: 0,\r\n    autoWarp: 0,\r\n    improveQuarkHept: 0,\r\n    improveQuarkHept2: 0,\r\n    improveQuarkHept3: 0,\r\n    improveQuarkHept4: 0,\r\n    shopImprovedDaily: 0,\r\n    shopImprovedDaily2: 0,\r\n    shopImprovedDaily3: 0,\r\n    shopImprovedDaily4: 0,\r\n    offeringEX3: 0,\r\n    obtainiumEX3: 0,\r\n    improveQuarkHept5: 0,\r\n    seasonPassInfinity: 0,\r\n    chronometerInfinity: 0,\r\n    shopSingularityPenaltyDebuff: 0\r\n  },\r\n  shopBuyMaxToggle: false,\r\n  shopHideToggle: false,\r\n  shopConfirmationToggle: true,\r\n  autoPotionTimer: 0,\r\n  autoPotionTimerObtainium: 0,\r\n\r\n  autoSacrificeToggle: false,\r\n  autoBuyFragment: false,\r\n  autoFortifyToggle: false,\r\n  autoEnhanceToggle: false,\r\n  autoResearchToggle: false,\r\n  researchBuyMaxToggle: false,\r\n  autoResearchMode: 'manual',\r\n  autoResearch: 0,\r\n  autoSacrifice: 0,\r\n  sacrificeTimer: 0,\r\n  quarkstimer: 90000,\r\n  goldenQuarksTimer: 90000,\r\n\r\n  antPoints: new Decimal('1'),\r\n  antUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  antSacrificePoints: 0,\r\n  antSacrificeTimer: 900,\r\n  antSacrificeTimerReal: 900,\r\n\r\n  talismanLevels: [0, 0, 0, 0, 0, 0, 0],\r\n  talismanRarity: [1, 1, 1, 1, 1, 1, 1],\r\n  talismanOne: [null, -1, 1, 1, 1, -1],\r\n  talismanTwo: [null, 1, 1, -1, -1, 1],\r\n  talismanThree: [null, 1, -1, 1, 1, -1],\r\n  talismanFour: [null, -1, -1, 1, 1, 1],\r\n  talismanFive: [null, 1, 1, -1, -1, 1],\r\n  talismanSix: [null, 1, 1, 1, -1, -1],\r\n  talismanSeven: [null, -1, 1, -1, 1, 1],\r\n  talismanShards: 0,\r\n  commonFragments: 0,\r\n  uncommonFragments: 0,\r\n  rareFragments: 0,\r\n  epicFragments: 0,\r\n  legendaryFragments: 0,\r\n  mythicalFragments: 0,\r\n\r\n  buyTalismanShardPercent: 10,\r\n\r\n  autoAntSacrifice: false,\r\n  autoAntSacTimer: 900,\r\n  autoAntSacrificeMode: 0,\r\n  antMax: false,\r\n\r\n  ascensionCount: 0,\r\n  ascensionCounter: 0,\r\n  ascensionCounterReal: 0,\r\n  ascensionCounterRealReal: 0,\r\n  cubeUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  cubeUpgradesBuyMaxToggle: false,\r\n  autoCubeUpgradesToggle: false,\r\n  autoPlatonicUpgradesToggle: false,\r\n  platonicUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  wowCubes: new WowCubes(0),\r\n  wowTesseracts: new WowTesseracts(0),\r\n  wowHypercubes: new WowHypercubes(0),\r\n  wowPlatonicCubes: new WowPlatonicCubes(0),\r\n  saveOfferingToggle: false,\r\n  wowAbyssals: 0,\r\n  wowOcteracts: 0,\r\n  totalWowOcteracts: 0,\r\n  cubeBlessings: {\r\n    accelerator: 0,\r\n    multiplier: 0,\r\n    offering: 0,\r\n    runeExp: 0,\r\n    obtainium: 0,\r\n    antSpeed: 0,\r\n    antSacrifice: 0,\r\n    antELO: 0,\r\n    talismanBonus: 0,\r\n    globalSpeed: 0\r\n  },\r\n  tesseractBlessings: {\r\n    accelerator: 0,\r\n    multiplier: 0,\r\n    offering: 0,\r\n    runeExp: 0,\r\n    obtainium: 0,\r\n    antSpeed: 0,\r\n    antSacrifice: 0,\r\n    antELO: 0,\r\n    talismanBonus: 0,\r\n    globalSpeed: 0\r\n  },\r\n  hypercubeBlessings: {\r\n    accelerator: 0,\r\n    multiplier: 0,\r\n    offering: 0,\r\n    runeExp: 0,\r\n    obtainium: 0,\r\n    antSpeed: 0,\r\n    antSacrifice: 0,\r\n    antELO: 0,\r\n    talismanBonus: 0,\r\n    globalSpeed: 0\r\n  },\r\n  platonicBlessings: {\r\n    cubes: 0,\r\n    tesseracts: 0,\r\n    hypercubes: 0,\r\n    platonics: 0,\r\n    hypercubeBonus: 0,\r\n    taxes: 0,\r\n    scoreBonus: 0,\r\n    globalSpeed: 0\r\n\r\n  },\r\n\r\n  hepteractCrafts: {\r\n    chronos: ChronosHepteract,\r\n    hyperrealism: HyperrealismHepteract,\r\n    quark: QuarkHepteract,\r\n    challenge: ChallengeHepteract,\r\n    abyss: AbyssHepteract,\r\n    accelerator: AcceleratorHepteract,\r\n    acceleratorBoost: AcceleratorBoostHepteract,\r\n    multiplier: MultiplierHepteract\r\n  },\r\n\r\n  ascendShards: new Decimal('0'),\r\n  autoAscend: false,\r\n  autoAscendMode: 'c10Completions',\r\n  autoAscendThreshold: 1,\r\n  autoOpenCubes: false,\r\n  openCubes: 0,\r\n  autoOpenTesseracts: false,\r\n  openTesseracts: 0,\r\n  autoOpenHypercubes: false,\r\n  openHypercubes: 0,\r\n  autoOpenPlatonicsCubes: false,\r\n  openPlatonicsCubes: 0,\r\n  roombaResearchIndex: 0,\r\n  ascStatToggles: { // false here means show per second\r\n    1: false,\r\n    2: false,\r\n    3: false,\r\n    4: false,\r\n    5: false,\r\n    6: false\r\n  },\r\n\r\n  prototypeCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  usedCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  corruptionLoadouts: {  //If you add loadouts don't forget to add loadout names!\r\n    1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    4: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    5: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    6: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    7: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    8: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  },\r\n  corruptionLoadoutNames: [\r\n    'Loadout 1',\r\n    'Loadout 2',\r\n    'Loadout 3',\r\n    'Loadout 4',\r\n    'Loadout 5',\r\n    'Loadout 6',\r\n    'Loadout 7',\r\n    'Loadout 8'\r\n  ],\r\n  corruptionShowStats: true,\r\n\r\n  constantUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  history: { ants: [], ascend: [], reset: [], singularity: [] },\r\n  historyShowPerSecond: false,\r\n\r\n  autoChallengeRunning: false,\r\n  autoChallengeIndex: 1,\r\n  autoChallengeToggles: [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false],\r\n  autoChallengeStartExponent: 10,\r\n  autoChallengeTimer: {\r\n    start: 10,\r\n    exit: 2,\r\n    enter: 2\r\n  },\r\n\r\n  runeBlessingLevels: [0, 0, 0, 0, 0, 0],\r\n  runeSpiritLevels: [0, 0, 0, 0, 0, 0],\r\n  runeBlessingBuyAmount: 0,\r\n  runeSpiritBuyAmount: 0,\r\n\r\n  autoTesseracts: [false, false, false, false, false, false],\r\n\r\n  saveString: 'Synergism-$VERSION$-$TIME$.txt',\r\n  exporttest: !testing,\r\n\r\n  dayCheck: null,\r\n  dayTimer: 0,\r\n  cubeOpenedDaily: 0,\r\n  cubeQuarkDaily: 0,\r\n  tesseractOpenedDaily: 0,\r\n  tesseractQuarkDaily: 0,\r\n  hypercubeOpenedDaily: 0,\r\n  hypercubeQuarkDaily: 0,\r\n  platonicCubeOpenedDaily: 0,\r\n  platonicCubeQuarkDaily: 0,\r\n  overfluxOrbs: 0,\r\n  overfluxOrbsAutoBuy: false,\r\n  overfluxPowder: 0,\r\n  dailyPowderResetUses: 1,\r\n  autoWarpCheck: false,\r\n  loadedOct4Hotfix: false,\r\n  loadedNov13Vers: true,\r\n  loadedDec16Vers: true,\r\n  loadedV253: true,\r\n  loadedV255: true,\r\n  loadedV297Hotfix1: true,\r\n  loadedV2927Hotfix1: true,\r\n  loadedV2930Hotfix1: true,\r\n  loadedV2931Hotfix1: true,\r\n  loadedV21003Hotfix1: true,\r\n  loadedV21007Hotfix1: true,\r\n  version,\r\n  rngCode: 0,\r\n  promoCodeTiming: {\r\n    time: 0\r\n  },\r\n  singularityCount: 0,\r\n  highestSingularityCount: 0,\r\n  singularityCounter: 0,\r\n  goldenQuarks: 0,\r\n  quarksThisSingularity: 0,\r\n  totalQuarksEver: 0,\r\n  hotkeys: {},\r\n  theme: 'Dark Mode',\r\n  iconSet: 0,\r\n  notation: 'Default',\r\n\r\n  singularityUpgrades: {\r\n    goldenQuarks1: new SingularityUpgrade(singularityData.goldenQuarks1, 'goldenQuarks1'),\r\n    goldenQuarks2: new SingularityUpgrade(singularityData.goldenQuarks2, 'goldenQuarks2'),\r\n    goldenQuarks3: new SingularityUpgrade(singularityData.goldenQuarks3, 'goldenQuarks3'),\r\n    starterPack: new SingularityUpgrade(singularityData.starterPack, 'starterPack'),\r\n    wowPass: new SingularityUpgrade(singularityData.wowPass, 'wowPass'),\r\n    cookies: new SingularityUpgrade(singularityData.cookies, 'cookies'),\r\n    cookies2: new SingularityUpgrade(singularityData.cookies2, 'cookies2'),\r\n    cookies3: new SingularityUpgrade(singularityData.cookies3, 'cookies3'),\r\n    cookies4: new SingularityUpgrade(singularityData.cookies4, 'cookies4'),\r\n    cookies5: new SingularityUpgrade(singularityData.cookies5, 'cookies5'),\r\n    ascensions: new SingularityUpgrade(singularityData.ascensions, 'ascensions'),\r\n    corruptionFourteen: new SingularityUpgrade(singularityData.corruptionFourteen, 'corruptionFourteen'),\r\n    corruptionFifteen: new SingularityUpgrade(singularityData.corruptionFifteen, 'corruptionFifteen'),\r\n    singOfferings1: new SingularityUpgrade(singularityData.singOfferings1, 'singOfferings1'),\r\n    singOfferings2: new SingularityUpgrade(singularityData.singOfferings2, 'singOfferings2'),\r\n    singOfferings3: new SingularityUpgrade(singularityData.singOfferings3, 'singOfferings3'),\r\n    singObtainium1: new SingularityUpgrade(singularityData.singObtainium1, 'singObtainium1'),\r\n    singObtainium2: new SingularityUpgrade(singularityData.singObtainium2, 'singObtainium2'),\r\n    singObtainium3: new SingularityUpgrade(singularityData.singObtainium3, 'singObtainium3'),\r\n    singCubes1: new SingularityUpgrade(singularityData.singCubes1, 'singCubes1'),\r\n    singCubes2: new SingularityUpgrade(singularityData.singCubes2, 'singCubes2'),\r\n    singCubes3: new SingularityUpgrade(singularityData.singCubes3, 'singCubes3'),\r\n    singCitadel: new SingularityUpgrade(singularityData.singCitadel, 'singCitadel'),\r\n    singCitadel2: new SingularityUpgrade(singularityData.singCitadel2, 'singCitadel2'),\r\n    octeractUnlock: new SingularityUpgrade(singularityData.octeractUnlock, 'octeractUnlock'),\r\n    singOcteractPatreonBonus: new SingularityUpgrade(singularityData.singOcteractPatreonBonus, 'singOcteractPatreonBonus'),\r\n    intermediatePack: new SingularityUpgrade(singularityData.intermediatePack, 'intermediatePack'),\r\n    advancedPack: new SingularityUpgrade(singularityData.advancedPack, 'advancedPack'),\r\n    expertPack: new SingularityUpgrade(singularityData.expertPack, 'expertPack'),\r\n    masterPack: new SingularityUpgrade(singularityData.masterPack, 'masterPack'),\r\n    divinePack: new SingularityUpgrade(singularityData.divinePack, 'divinePack'),\r\n    wowPass2: new SingularityUpgrade(singularityData.wowPass2, 'wowPass2'),\r\n    potionBuff: new SingularityUpgrade(singularityData.potionBuff, 'potionBuff'),\r\n    potionBuff2: new SingularityUpgrade(singularityData.potionBuff2, 'potionBuff2'),\r\n    potionBuff3: new SingularityUpgrade(singularityData.potionBuff3, 'potionBuff3'),\r\n    singChallengeExtension: new SingularityUpgrade(singularityData.singChallengeExtension, 'singChallengeExtension'),\r\n    singChallengeExtension2: new SingularityUpgrade(singularityData.singChallengeExtension2, 'singChallengeExtension2'),\r\n    singChallengeExtension3: new SingularityUpgrade(singularityData.singChallengeExtension3, 'singChallengeExtension3'),\r\n    singQuarkImprover1: new SingularityUpgrade(singularityData.singQuarkImprover1, 'singQuarkImprover1'),\r\n    singQuarkHepteract: new SingularityUpgrade(singularityData.singQuarkHepteract, 'singQuarkHepteract'),\r\n    singQuarkHepteract2: new SingularityUpgrade(singularityData.singQuarkHepteract2, 'singQuarkHepteract2'),\r\n    singQuarkHepteract3: new SingularityUpgrade(singularityData.singQuarkHepteract3, 'singQuarkHepteract3'),\r\n    singOcteractGain: new SingularityUpgrade(singularityData.singOcteractGain, 'singOcteractGain'),\r\n    singOcteractGain2: new SingularityUpgrade(singularityData.singOcteractGain2, 'singOcteractGain2'),\r\n    singOcteractGain3: new SingularityUpgrade(singularityData.singOcteractGain3, 'singOcteractGain3'),\r\n    singOcteractGain4: new SingularityUpgrade(singularityData.singOcteractGain4, 'singOcteractGain4'),\r\n    singOcteractGain5: new SingularityUpgrade(singularityData.singOcteractGain5, 'singOcteractGain5'),\r\n    wowPass3: new SingularityUpgrade(singularityData.wowPass3, 'wowPass3'),\r\n    ultimatePen: new SingularityUpgrade(singularityData.ultimatePen, 'ultimatePen'),\r\n    platonicTau: new SingularityUpgrade(singularityData.platonicTau, 'platonicTau'),\r\n    platonicAlpha: new SingularityUpgrade(singularityData.platonicAlpha, 'platonicAlpha'),\r\n    platonicDelta: new SingularityUpgrade(singularityData.platonicDelta, 'platonicDelta'),\r\n    platonicPhi: new SingularityUpgrade(singularityData.platonicPhi, 'platonicPhi'),\r\n    singFastForward: new SingularityUpgrade(singularityData.singFastForward, 'singFastForward'),\r\n    singFastForward2: new SingularityUpgrade(singularityData.singFastForward2, 'singFastForward2'),\r\n    singAscensionSpeed: new SingularityUpgrade(singularityData.singAscensionSpeed, 'singAscensionSpeed'),\r\n    singAscensionSpeed2: new SingularityUpgrade(singularityData.singAscensionSpeed2, 'singAscensionSpeed2'),\r\n    oneMind: new SingularityUpgrade(singularityData.oneMind, 'oneMind'),\r\n    wowPass4: new SingularityUpgrade(singularityData.wowPass4, 'wowPass4'),\r\n    offeringAutomatic: new SingularityUpgrade(singularityData.offeringAutomatic, 'offeringAutomatic'),\r\n    blueberries: new SingularityUpgrade(singularityData.blueberries, 'blueberries')\r\n  },\r\n\r\n  octeractUpgrades: {\r\n    octeractStarter: new OcteractUpgrade(octeractData.octeractStarter, 'octeractStarter'),\r\n    octeractGain: new OcteractUpgrade(octeractData.octeractGain, 'octeractGain'),\r\n    octeractGain2: new OcteractUpgrade(octeractData.octeractGain2, 'octeractGain2'),\r\n    octeractQuarkGain: new OcteractUpgrade(octeractData.octeractQuarkGain, 'octeractQuarkGain'),\r\n    octeractQuarkGain2: new OcteractUpgrade(octeractData.octeractQuarkGain2, 'octeractQuarkGain2'),\r\n    octeractCorruption: new OcteractUpgrade(octeractData.octeractCorruption, 'octeractCorruption'),\r\n    octeractGQCostReduce: new OcteractUpgrade(octeractData.octeractGQCostReduce, 'octeractGQCostReduce'),\r\n    octeractExportQuarks: new OcteractUpgrade(octeractData.octeractExportQuarks, 'octeractExportQuarks'),\r\n    octeractImprovedDaily: new OcteractUpgrade(octeractData.octeractImprovedDaily, 'octeractImprovedDaily'),\r\n    octeractImprovedDaily2: new OcteractUpgrade(octeractData.octeractImprovedDaily2, 'octeractImprovedDaily2'),\r\n    octeractImprovedDaily3: new OcteractUpgrade(octeractData.octeractImprovedDaily3, 'octeractImprovedDaily3'),\r\n    octeractImprovedQuarkHept: new OcteractUpgrade(octeractData.octeractImprovedQuarkHept, 'octeractImprovedQuarkHept'),\r\n    octeractImprovedGlobalSpeed: new OcteractUpgrade(octeractData.octeractImprovedGlobalSpeed, 'octeractImprovedGlobalSpeed'),\r\n    octeractImprovedAscensionSpeed: new OcteractUpgrade(octeractData.octeractImprovedAscensionSpeed, 'octeractImprovedAscensionSpeed'),\r\n    octeractImprovedAscensionSpeed2: new OcteractUpgrade(octeractData.octeractImprovedAscensionSpeed2, 'octeractImprovedAscensionSpeed2'),\r\n    octeractImprovedFree: new OcteractUpgrade(octeractData.octeractImprovedFree, 'octeractImprovedFree'),\r\n    octeractImprovedFree2: new OcteractUpgrade(octeractData.octeractImprovedFree2, 'octeractImprovedFree2'),\r\n    octeractImprovedFree3: new OcteractUpgrade(octeractData.octeractImprovedFree3, 'octeractImprovedFree3'),\r\n    octeractImprovedFree4: new OcteractUpgrade(octeractData.octeractImprovedFree4, 'octeractImprovedFree4'),\r\n    octeractSingUpgradeCap: new OcteractUpgrade(octeractData.octeractSingUpgradeCap, 'octeractSingUpgradeCap'),\r\n    octeractOfferings1: new OcteractUpgrade(octeractData.octeractOfferings1, 'octeractOfferings1'),\r\n    octeractObtainium1: new OcteractUpgrade(octeractData.octeractObtainium1, 'octeractObtainium1'),\r\n    octeractAscensions: new OcteractUpgrade(octeractData.octeractAscensions, 'octeractAscensions'),\r\n    octeractAscensions2: new OcteractUpgrade(octeractData.octeractAscensions2, 'octeractAscensions2'),\r\n    octeractAscensionsOcteractGain: new OcteractUpgrade(octeractData.octeractAscensionsOcteractGain, 'octeractAscensionsOcteractGain'),\r\n    octeractFastForward: new OcteractUpgrade(octeractData.octeractFastForward, 'octeractFastForward'),\r\n    octeractAutoPotionSpeed: new OcteractUpgrade(octeractData.octeractAutoPotionSpeed, 'octeractAutoPotionSpeed'),\r\n    octeractAutoPotionEfficiency: new OcteractUpgrade(octeractData.octeractAutoPotionEfficiency, 'octeractAutoPotionEfficiency'),\r\n    octeractOneMindImprover: new OcteractUpgrade(octeractData.octeractOneMindImprover, 'octeractOneMindImprover'),\r\n    octeractAmbrosiaLuck: new OcteractUpgrade(octeractData.octeractAmbrosiaLuck, 'octeractAmbrosiaLuck')\r\n  },\r\n\r\n  dailyCodeUsed: false,\r\n  hepteractAutoCraftPercentage: 50,\r\n  octeractTimer: 0,\r\n  insideSingularityChallenge: false,\r\n\r\n  singularityChallenges: {\r\n    noSingularityUpgrades: new SingularityChallenge(singularityChallengeData.noSingularityUpgrades, 'noSingularityUpgrades'),\r\n    oneChallengeCap: new SingularityChallenge(singularityChallengeData.oneChallengeCap, 'oneChallengeCap'),\r\n    noOcteracts: new SingularityChallenge(singularityChallengeData.noOcteracts, 'noOcteracts'),\r\n    limitedAscensions: new SingularityChallenge(singularityChallengeData.limitedAscensions, 'limitedAscensions')\r\n  }\r\n}\r\n\r\nexport const blankSave = Object.assign({}, player, {\r\n  codes: new Map(Array.from({ length: 44 }, (_, i) => [i + 1, false]))\r\n})\r\n\r\n// The main cause of the double singularity bug was caused by a race condition\r\n// when the game was saving just as the user was entering a Singularity. To fix\r\n// this, hopefully, we disable saving the game when in the prompt or currently\r\n// entering a Singularity.\r\nexport const saveCheck = { canSave: true }\r\n\r\nexport const saveSynergy = async (button?: boolean): Promise<boolean> => {\r\n  player.offlinetick = Date.now()\r\n  player.loaded1009 = true\r\n  player.loaded1009hotfix1 = true\r\n\r\n  // shallow hold, doesn't modify OG object nor is affected by modifications to OG\r\n  const p = Object.assign({}, player, {\r\n    codes: Array.from(player.codes),\r\n    worlds: Number(player.worlds),\r\n    wowCubes: Number(player.wowCubes),\r\n    wowTesseracts: Number(player.wowTesseracts),\r\n    wowHypercubes: Number(player.wowHypercubes),\r\n    wowPlatonicCubes: Number(player.wowPlatonicCubes),\r\n    singularityUpgrades: Object.fromEntries(\r\n      Object.entries(player.singularityUpgrades).map(([key, value]) => {\r\n        return [key, {\r\n          level: value.level,\r\n          goldenQuarksInvested: value.goldenQuarksInvested,\r\n          toggleBuy: value.toggleBuy,\r\n          freeLevels: value.freeLevels\r\n        }]\r\n      })\r\n    ),\r\n    octeractUpgrades: Object.fromEntries(\r\n      Object.entries(player.octeractUpgrades).map(([key, value]) => {\r\n        return [key, {\r\n          level: value.level,\r\n          octeractsInvested: value.octeractsInvested,\r\n          toggleBuy: value.toggleBuy,\r\n          freeLevels: value.freeLevels\r\n        }]\r\n      })\r\n    ),\r\n    singularityChallenges: Object.fromEntries(\r\n      Object.entries(player.singularityChallenges).map(([key, value]) => {\r\n        return [key, {\r\n          completions: value.completions,\r\n          highestSingularityCompleted: value.highestSingularityCompleted,\r\n          enabled: value.enabled\r\n        }]\r\n      })\r\n    )\r\n  })\r\n\r\n  const save = btoa(JSON.stringify(p))\r\n  if (save !== null) {\r\n    const saveBlob = new Blob([save], { type: 'text/plain' })\r\n\r\n    //Should prevent overwritting of localforage that is currently used\r\n    if (!saveCheck.canSave) {\r\n      return false\r\n    }\r\n\r\n    await localforage.setItem<Blob>('Synergysave2', saveBlob)\r\n  } else {\r\n    await Alert(i18next.t('testing.errorSaving'))\r\n    return false\r\n  }\r\n\r\n  if (button) {\r\n    const el = DOMCacheGetOrSet('saveinfo')\r\n    el.textContent = i18next.t('testing.gameSaved')\r\n    setTimeout(() => el.textContent = '', 4000)\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Map of properties on the Player object to adapt\r\n */\r\nconst toAdapt = new Map<keyof Player, (data: PlayerSave) => unknown>([\r\n  ['worlds', data => new QuarkHandler({ quarks: Number(data.worlds) || 0 })],\r\n  ['wowCubes', data => new WowCubes(Number(data.wowCubes) || 0)],\r\n  ['wowTesseracts', data => new WowTesseracts(Number(data.wowTesseracts) || 0)],\r\n  ['wowHypercubes', data => new WowHypercubes(Number(data.wowHypercubes) || 0)],\r\n  ['wowPlatonicCubes', data => new WowPlatonicCubes(Number(data.wowPlatonicCubes) || 0)]\r\n])\r\n\r\nconst loadSynergy = async () => {\r\n  const save =\r\n    await localforage.getItem<Blob>('Synergysave2') ??\r\n    localStorage.getItem('Synergysave2')\r\n\r\n  const saveString = typeof save === 'string' ? save : await save?.text()\r\n  const data = saveString\r\n    ? JSON.parse(atob(saveString)) as PlayerSave & Record<string, unknown>\r\n    : null\r\n\r\n  if (testing || !prod) {\r\n    Object.defineProperties(window, {\r\n      player: { value: player },\r\n      G: { value: G },\r\n      Decimal: { value: Decimal },\r\n      i18n: { value: i18next }\r\n    })\r\n\r\n    if (data && testing) {\r\n      data.exporttest = false\r\n    }\r\n  }\r\n\r\n  Object.assign(G, { ...blankGlobals })\r\n\r\n  if (data) {\r\n    if (\r\n      (data.exporttest === false || data.exporttest === 'NO!') &&\r\n            !testing\r\n    ) {\r\n      return Alert(i18next.t('testing.saveInLive2'))\r\n    }\r\n\r\n    const oldCodesUsed = Array.from(\r\n      { length: 24 }, // old codes only went up to 24\r\n      (_, i) => `offerpromo${(i + 1)}used`\r\n    )\r\n\r\n    // size before loading\r\n    const size = player.codes.size\r\n\r\n    const oldPromoKeys = Object.keys(data).filter(k => k.includes('offerpromo'))\r\n    if (oldPromoKeys.length > 0) {\r\n      oldPromoKeys.forEach(k => {\r\n        const value = data[k]\r\n        const num = +k.replace(/[^\\d]/g, '')\r\n        player.codes.set(num, Boolean(value))\r\n      })\r\n    }\r\n\r\n    Object.keys(data).forEach((stringProp) => {\r\n      const prop = stringProp as keyof Player\r\n      if (!(prop in player)) {\r\n        return\r\n      } else if (toAdapt.has(prop)) {\r\n        return ((player[prop] as unknown) = toAdapt.get(prop)!(data))\r\n      } else if (isDecimal(player[prop])) {\r\n        return ((player[prop] as Decimal) = new Decimal(data[prop] as DecimalSource))\r\n      } else if (prop === 'codes') {\r\n        const codes = data[prop]\r\n        if (codes != null) {\r\n          return (player.codes = new Map(codes))\r\n        }\r\n      } else if (oldCodesUsed.includes(prop)) {\r\n        return\r\n      } else if (Array.isArray(data[prop])) {\r\n        const arr = data[prop] as unknown[]\r\n        // in old savefiles, some arrays may be 1-based instead of 0-based (newer)\r\n        // so if the lengths of the savefile key is greater than that of the player obj\r\n        // it means a key was removed; likely a 1-based index where array[0] was null\r\n        // so we can get rid of it entirely.\r\n        if ((player[prop] as unknown[]).length < arr.length) {\r\n          return (player[prop] as unknown[]) = arr.slice(arr.length - (player[prop] as unknown[]).length)\r\n        }\r\n      }\r\n\r\n      return ((player[prop] as unknown) = data[prop])\r\n    })\r\n\r\n    if (data.offerpromo24used !== undefined) {\r\n      player.codes.set(25, false)\r\n    }\r\n\r\n    // sets all non-existent codes to default value false\r\n    if (player.codes.size < size) {\r\n      for (let i = player.codes.size + 1; i <= size; i++) {\r\n        if (!player.codes.has(i)) {\r\n          player.codes.set(i, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    // sets all non-existent codes to default value false\r\n    if (player.codes.size < size) {\r\n      for (let i = player.codes.size + 1; i <= size; i++) {\r\n        if (!player.codes.has(i)) {\r\n          player.codes.set(i, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!('rngCode' in data)) {\r\n      player.rngCode = 0\r\n    }\r\n\r\n    if (data.loaded1009 === undefined || !data.loaded1009) {\r\n      player.loaded1009 = false\r\n    }\r\n    if (data.loaded1009hotfix1 === undefined || !data.loaded1009hotfix1) {\r\n      player.loaded1009hotfix1 = false\r\n    }\r\n    if (data.loaded10091 === undefined) {\r\n      player.loaded10091 = false\r\n    }\r\n    if (data.loaded1010 === undefined) {\r\n      player.loaded1010 = false\r\n    }\r\n    if (data.loaded10101 === undefined) {\r\n      player.loaded10101 = false\r\n    }\r\n\r\n    //Fix dumb shop stuff\r\n    //First, if shop isn't even defined we just define it as so\r\n    if (data.shopUpgrades === undefined) {\r\n      player.shopUpgrades = Object.assign({}, blankSave.shopUpgrades)\r\n    }\r\n\r\n    if (typeof player.researches[76] === 'undefined') {\r\n      player.codes.set(13, false)\r\n      player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\r\n      player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\r\n      player.maxofferings = player.runeshards\r\n      player.maxobtainium = player.researchPoints\r\n      player.researchPoints += 51200 * player.researches[50]\r\n      player.researches[50] = 0\r\n    }\r\n\r\n    player.maxofferings = player.maxofferings || 0\r\n    player.maxobtainium = player.maxobtainium || 0\r\n    player.runeshards = player.runeshards || 0\r\n    player.researchPoints = player.researchPoints || 0\r\n\r\n    if (!data.loaded1009 || data.loaded1009hotfix1 === null || data.shopUpgrades?.offeringPotion === undefined) {\r\n      player.firstOwnedParticles = 0\r\n      player.secondOwnedParticles = 0\r\n      player.thirdOwnedParticles = 0\r\n      player.fourthOwnedParticles = 0\r\n      player.fifthOwnedParticles = 0\r\n      player.firstCostParticles = new Decimal('1')\r\n      player.secondCostParticles = new Decimal('1e2')\r\n      player.thirdCostParticles = new Decimal('1e4')\r\n      player.fourthCostParticles = new Decimal('1e8')\r\n      player.fifthCostParticles = new Decimal('1e16')\r\n      player.autoSacrificeToggle = false\r\n      player.autoResearchToggle = false\r\n      player.autoResearchMode = 'manual'\r\n      player.autoResearch = 0\r\n      player.autoSacrifice = 0\r\n      player.sacrificeTimer = 0\r\n      player.loaded1009 = true\r\n      player.codes.set(18, false)\r\n    }\r\n    if (!data.loaded1009hotfix1) {\r\n      player.loaded1009hotfix1 = true\r\n      player.codes.set(19, true)\r\n      player.firstOwnedParticles = 0\r\n      player.secondOwnedParticles = 0\r\n      player.thirdOwnedParticles = 0\r\n      player.fourthOwnedParticles = 0\r\n      player.fifthOwnedParticles = 0\r\n      player.firstCostParticles = new Decimal('1')\r\n      player.secondCostParticles = new Decimal('1e2')\r\n      player.thirdCostParticles = new Decimal('1e4')\r\n      player.fourthCostParticles = new Decimal('1e8')\r\n      player.fifthCostParticles = new Decimal('1e16')\r\n    }\r\n    if (data.loaded10091 === undefined || !data.loaded10091 || player.researches[86] > 100 || player.researches[87] > 100 || player.researches[88] > 100 || player.researches[89] > 100 || player.researches[90] > 10) {\r\n      player.loaded10091 = true\r\n      player.researchPoints += 7.5e8 * player.researches[82]\r\n      player.researchPoints += 2e8 * player.researches[83]\r\n      player.researchPoints += 4.5e9 * player.researches[84]\r\n      player.researchPoints += 2.5e7 * player.researches[86]\r\n      player.researchPoints += 7.5e7 * player.researches[87]\r\n      player.researchPoints += 3e8 * player.researches[88]\r\n      player.researchPoints += 1e9 * player.researches[89]\r\n      player.researchPoints += 2.5e7 * player.researches[90]\r\n      player.researchPoints += 1e8 * player.researches[91]\r\n      player.researchPoints += 2e9 * player.researches[92]\r\n      player.researchPoints += 9e9 * player.researches[93]\r\n      player.researchPoints += 7.25e10 * player.researches[94]\r\n      player.researches[86] = 0\r\n      player.researches[87] = 0\r\n      player.researches[88] = 0\r\n      player.researches[89] = 0\r\n      player.researches[90] = 0\r\n      player.researches[91] = 0\r\n      player.researches[92] = 0\r\n    }\r\n\r\n    //const shop = data.shopUpgrades as LegacyShopUpgrades & Player['shopUpgrades'];\r\n    if (\r\n      data.achievements?.[169] === undefined ||\r\n            typeof player.achievements[169] === 'undefined' ||\r\n            //    (shop.antSpeed === undefined && shop.antSpeedLevel === undefined) ||\r\n            //    (shop.antSpeed === undefined && typeof shop.antSpeedLevel === 'undefined') ||\r\n            data.loaded1010 === undefined ||\r\n            data.loaded1010 === false\r\n    ) {\r\n      player.loaded1010 = true\r\n      player.codes.set(21, false)\r\n\r\n      player.firstOwnedAnts = 0\r\n      player.firstGeneratedAnts = new Decimal('0')\r\n      player.firstCostAnts = new Decimal('1e700')\r\n      player.firstProduceAnts = .0001\r\n\r\n      player.secondOwnedAnts = 0\r\n      player.secondGeneratedAnts = new Decimal('0')\r\n      player.secondCostAnts = new Decimal('3')\r\n      player.secondProduceAnts = .00005\r\n\r\n      player.thirdOwnedAnts = 0\r\n      player.thirdGeneratedAnts = new Decimal('0')\r\n      player.thirdCostAnts = new Decimal('100')\r\n      player.thirdProduceAnts = .00002\r\n\r\n      player.fourthOwnedAnts = 0\r\n      player.fourthGeneratedAnts = new Decimal('0')\r\n      player.fourthCostAnts = new Decimal('1e4')\r\n      player.fourthProduceAnts = .00001\r\n\r\n      player.fifthOwnedAnts = 0\r\n      player.fifthGeneratedAnts = new Decimal('0')\r\n      player.fifthCostAnts = new Decimal('1e12')\r\n      player.fifthProduceAnts = .000005\r\n\r\n      player.sixthOwnedAnts = 0\r\n      player.sixthGeneratedAnts = new Decimal('0')\r\n      player.sixthCostAnts = new Decimal('1e36')\r\n      player.sixthProduceAnts = .000002\r\n\r\n      player.seventhOwnedAnts = 0\r\n      player.seventhGeneratedAnts = new Decimal('0')\r\n      player.seventhCostAnts = new Decimal('1e100')\r\n      player.seventhProduceAnts = .000001\r\n\r\n      player.eighthOwnedAnts = 0\r\n      player.eighthGeneratedAnts = new Decimal('0')\r\n      player.eighthCostAnts = new Decimal('1e300')\r\n      player.eighthProduceAnts = .00000001\r\n\r\n      player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\r\n      player.antPoints = new Decimal('1')\r\n\r\n      player.upgrades[38] = 0\r\n      player.upgrades[39] = 0\r\n      player.upgrades[40] = 0\r\n\r\n      player.upgrades[76] = 0\r\n      player.upgrades[77] = 0\r\n      player.upgrades[78] = 0\r\n      player.upgrades[79] = 0\r\n      player.upgrades[80] = 0\r\n\r\n\r\n      //    player.shopUpgrades.antSpeed = 0;\r\n      //    player.shopUpgrades.shopTalisman = 0;\r\n\r\n      player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n      player.unlocks.rrow4 = false\r\n      player.researchPoints += 3e7 * player.researches[50]\r\n      player.researchPoints += 2e9 * player.researches[96]\r\n      player.researchPoints += 5e9 * player.researches[97]\r\n      player.researchPoints += 3e10 * player.researches[98]\r\n      player.researches[50] = 0\r\n      player.researches[96] = 0\r\n      player.researches[97] = 0\r\n      player.researches[98] = 0\r\n      player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\r\n\r\n      player.talismanLevels = [0, 0, 0, 0, 0, 0, 0]\r\n      player.talismanRarity = [1, 1, 1, 1, 1, 1, 1]\r\n\r\n      player.talismanShards = 0\r\n      player.commonFragments = 0\r\n      player.uncommonFragments = 0\r\n      player.rareFragments = 0\r\n      player.epicFragments = 0\r\n      player.legendaryFragments = 0\r\n      player.mythicalFragments = 0\r\n      player.buyTalismanShardPercent = 10\r\n\r\n      player.talismanOne = [null, -1, 1, 1, 1, -1]\r\n      player.talismanTwo = [null, 1, 1, -1, -1, 1]\r\n      player.talismanThree = [null, 1, -1, 1, 1, -1]\r\n      player.talismanFour = [null, -1, -1, 1, 1, 1]\r\n      player.talismanFive = [null, 1, 1, -1, -1, 1]\r\n      player.talismanSix = [null, 1, 1, 1, -1, -1]\r\n      player.talismanSeven = [null, -1, 1, -1, 1, 1]\r\n\r\n      player.antSacrificePoints = 0\r\n      player.antSacrificeTimer = 0\r\n\r\n      player.obtainiumpersecond = 0\r\n      player.maxobtainiumpersecond = 0\r\n\r\n    }\r\n\r\n    if (data.loaded10101 === undefined || data.loaded10101 === false) {\r\n      player.loaded10101 = true\r\n\r\n      const refundThese = [0, 31, 32, 61, 62, 63, 64, 76, 77, 78, 79, 80,\r\n        81, 98, 104, 105, 106, 107, 108,\r\n        109, 110, 111, 112, 113, 114, 115, 116,\r\n        117, 118, 119, 120, 121, 122, 123, 125]\r\n      const refundReward = [0, 2, 20, 5, 10, 80, 5e3, 1e7, 1e7, 2e7, 3e7, 4e7,\r\n        2e8, 3e10, 1e11, 1e12, 2e11, 1e12, 2e10,\r\n        2e11, 1e12, 2e13, 5e13, 1e14, 2e14, 5e14, 1e15,\r\n        2e15, 1e16, 1e15, 1e16, 1e14, 1e15, 1e15, 1e20]\r\n      for (let i = 1; i < refundThese.length; i++) {\r\n        player.researchPoints += player.researches[refundThese[i]] * refundReward[i]\r\n        player.researches[refundThese[i]] = 0\r\n      }\r\n      player.autoAntSacrifice = false\r\n      player.antMax = false\r\n    }\r\n\r\n    if (player.firstOwnedAnts < 1 && player.firstCostAnts.gte('1e1200')) {\r\n      player.firstCostAnts = new Decimal('1e700')\r\n      player.firstOwnedAnts = 0\r\n    }\r\n\r\n    checkVariablesOnLoad(data)\r\n    if (data.ascensionCount === undefined || player.ascensionCount === 0) {\r\n      player.ascensionCount = 0\r\n      if (player.ascensionCounter === 0 && player.prestigeCount > 0) {\r\n        player.ascensionCounter = 86400 * 90\r\n      }\r\n      /*player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];*/\r\n\r\n      if (player.singularityCount === 0) {\r\n        player.cubeUpgrades = [...blankSave.cubeUpgrades]\r\n      }\r\n      player.wowCubes = new WowCubes(0)\r\n      player.wowTesseracts = new WowTesseracts(0)\r\n      player.wowHypercubes = new WowHypercubes(0)\r\n      player.wowPlatonicCubes = new WowPlatonicCubes(0)\r\n      player.cubeBlessings = {\r\n        accelerator: 0,\r\n        multiplier: 0,\r\n        offering: 0,\r\n        runeExp: 0,\r\n        obtainium: 0,\r\n        antSpeed: 0,\r\n        antSacrifice: 0,\r\n        antELO: 0,\r\n        talismanBonus: 0,\r\n        globalSpeed: 0\r\n      }\r\n    }\r\n    if (data.autoAntSacTimer == null) {\r\n      player.autoAntSacTimer = 900\r\n    }\r\n    if (data.autoAntSacrificeMode === undefined) {\r\n      player.autoAntSacrificeMode = 0\r\n    }\r\n\r\n    if (player.transcendCount < 0) {\r\n      player.transcendCount = 0\r\n    }\r\n    if (player.reincarnationCount < 0) {\r\n      player.reincarnationCount = 0\r\n    }\r\n    if (player.runeshards < 0) {\r\n      player.runeshards = 0\r\n    }\r\n    if (player.researchPoints < 0) {\r\n      player.researchPoints = 0\r\n    }\r\n\r\n    if (player.resettoggle1 === 0) {\r\n      player.resettoggle1 = 1\r\n      player.resettoggle2 = 1\r\n      player.resettoggle3 = 1\r\n      player.resettoggle4 = 1\r\n    }\r\n    if (player.tesseractAutoBuyerToggle === 0) {\r\n      player.tesseractAutoBuyerToggle = 1\r\n    }\r\n    if (player.reincarnationCount < 0.5 && player.unlocks.rrow4) {\r\n      player.unlocks = {\r\n        coinone: false,\r\n        cointwo: false,\r\n        cointhree: false,\r\n        coinfour: false,\r\n        prestige: false,\r\n        generation: false,\r\n        transcend: false,\r\n        reincarnate: false,\r\n        rrow1: false,\r\n        rrow2: false,\r\n        rrow3: false,\r\n        rrow4: false\r\n      }\r\n    }\r\n\r\n    if (data.history === undefined) {\r\n      player.history = { ants: [], ascend: [], reset: [], singularity: [] }\r\n    } else {\r\n      // See: https://discord.com/channels/677271830838640680/964168000360038481/964168002071330879\r\n      const keys = Object.keys(blankSave.history) as (keyof typeof blankSave['history'])[]\r\n\r\n      for (const historyKey of keys) {\r\n        if (!(historyKey in player.history)) {\r\n          player.history[historyKey] = []\r\n        }\r\n      }\r\n    }\r\n\r\n    if (data.historyShowPerSecond === undefined) {\r\n      player.historyShowPerSecond = false\r\n    }\r\n\r\n    if (!Number.isInteger(player.ascendBuilding1.cost)) {\r\n      player.ascendBuilding1.cost = 1\r\n      player.ascendBuilding1.owned = 0\r\n      player.ascendBuilding2.cost = 10\r\n      player.ascendBuilding2.owned = 0\r\n      player.ascendBuilding3.cost = 100\r\n      player.ascendBuilding3.owned = 0\r\n      player.ascendBuilding4.cost = 1000\r\n      player.ascendBuilding4.owned = 0\r\n      player.ascendBuilding5.cost = 10000\r\n      player.ascendBuilding5.owned = 0\r\n    }\r\n\r\n    if (!player.dayCheck) {\r\n      player.dayCheck = new Date()\r\n    }\r\n    if (typeof player.dayCheck === 'string') {\r\n      player.dayCheck = new Date(player.dayCheck)\r\n      if (isNaN(player.dayCheck.getTime())) {\r\n        player.dayCheck = new Date()\r\n      }\r\n    }\r\n    // Measures for people who play the past\r\n    let updatedLast = lastUpdated\r\n    if (!isNaN(updatedLast.getTime())) {\r\n      updatedLast = new Date(updatedLast.getFullYear(), updatedLast.getMonth(), updatedLast.getDate() - 1)\r\n      if (player.dayCheck.getTime() < updatedLast.getTime()) {\r\n        player.dayCheck = updatedLast\r\n      }\r\n    } else if (player.dayCheck.getTime() < 1654009200000) {\r\n      player.dayCheck = new Date('06/01/2022 00:00:00')\r\n    }\r\n    // Calculate daily\r\n    player.dayCheck = new Date(player.dayCheck.getFullYear(), player.dayCheck.getMonth(), player.dayCheck.getDate())\r\n\r\n    const maxLevel = maxCorruptionLevel()\r\n    player.usedCorruptions = player.usedCorruptions.map((curr:number, index:number) => {\r\n      if (index >= 2 && index <= 9) {\r\n        return Math.min(maxLevel * (player.challengecompletions[corrChallengeMinimum(index)] > 0 ? 1: 0), curr)\r\n      }\r\n      return curr\r\n    })\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const ascendBuildingI = `ascendBuilding${i as OneToFive}` as const\r\n      player[ascendBuildingI].generated = new Decimal(player[ascendBuildingI].generated)\r\n    }\r\n\r\n    while (typeof player.achievements[252] === 'undefined') {\r\n      player.achievements.push(0)\r\n    }\r\n    while (typeof player.researches[200] === 'undefined') {\r\n      player.researches.push(0)\r\n    }\r\n    while (typeof player.upgrades[140] === 'undefined') {\r\n      player.upgrades.push(0)\r\n    }\r\n\r\n    if (player.saveString === '' || player.saveString === 'Synergism-v1011Test.txt') {\r\n      player.saveString = player.singularityCount === 0 ?\r\n        'Synergism-$VERSION$-$TIME$.txt' :\r\n        'Synergism-$VERSION$-$TIME$-$SING$.txt'\r\n    }\r\n    (DOMCacheGetOrSet('saveStringInput') as HTMLInputElement).value = cleanString(player.saveString)\r\n\r\n    for (let j = 1; j < 126; j++) {\r\n      upgradeupdate(j, true)\r\n    }\r\n\r\n    for (let j = 1; j <= (200); j++) {\r\n      updateResearchBG(j)\r\n    }\r\n    for (let j = 1; j < player.cubeUpgrades.length; j++) {\r\n      updateCubeUpgradeBG(j)\r\n    }\r\n    const platUpg = document.querySelectorAll('img[id^=\"platUpg\"]')\r\n    for (let j = 1; j <= platUpg.length; j++) {\r\n      updatePlatonicUpgradeBG(j)\r\n    }\r\n\r\n    const q = ['coin', 'crystal', 'mythos', 'particle', 'offering', 'tesseract'] as const\r\n    if (player.coinbuyamount !== 1 && player.coinbuyamount !== 10 && player.coinbuyamount !== 100 && player.coinbuyamount !== 1000) {\r\n      player.coinbuyamount = 1\r\n    }\r\n    if (player.crystalbuyamount !== 1 && player.crystalbuyamount !== 10 && player.crystalbuyamount !== 100 && player.crystalbuyamount !== 1000) {\r\n      player.crystalbuyamount = 1\r\n    }\r\n    if (player.mythosbuyamount !== 1 && player.mythosbuyamount !== 10 && player.mythosbuyamount !== 100 && player.mythosbuyamount !== 1000) {\r\n      player.mythosbuyamount = 1\r\n    }\r\n    if (player.particlebuyamount !== 1 && player.particlebuyamount !== 10 && player.particlebuyamount !== 100 && player.particlebuyamount !== 1000) {\r\n      player.particlebuyamount = 1\r\n    }\r\n    if (player.offeringbuyamount !== 1 && player.offeringbuyamount !== 10 && player.offeringbuyamount !== 100 && player.offeringbuyamount !== 1000) {\r\n      player.offeringbuyamount = 1\r\n    }\r\n    if (player.tesseractbuyamount !== 1 && player.tesseractbuyamount !== 10 && player.tesseractbuyamount !== 100 && player.tesseractbuyamount !== 1000) {\r\n      player.tesseractbuyamount = 1\r\n    }\r\n    for (let j = 0; j <= 5; j++) {\r\n      for (let k = 0; k < 4; k++) {\r\n        let d\r\n        if (k === 0) {\r\n          d = 'one'\r\n        }\r\n        if (k === 1) {\r\n          d = 'ten'\r\n        }\r\n        if (k === 2) {\r\n          d = 'hundred'\r\n        }\r\n        if (k === 3) {\r\n          d = 'thousand'\r\n        }\r\n        const e = `${q[j]}${d}`\r\n        DOMCacheGetOrSet(e).style.backgroundColor = ''\r\n      }\r\n      let c\r\n      const curBuyAmount = player[`${q[j]}buyamount` as const]\r\n      if (curBuyAmount === 1) {\r\n        c = 'one'\r\n      }\r\n      if (curBuyAmount === 10) {\r\n        c = 'ten'\r\n      }\r\n      if (curBuyAmount === 100) {\r\n        c = 'hundred'\r\n      }\r\n      if (curBuyAmount === 1000) {\r\n        c = 'thousand'\r\n      }\r\n\r\n      const b = `${q[j]}${c}`\r\n      DOMCacheGetOrSet(b).style.backgroundColor = 'green'\r\n\r\n    }\r\n\r\n    const testArray = []\r\n    //Creates a copy of research costs array\r\n    for (let i = 0; i < G.researchBaseCosts.length; i++) {\r\n      testArray.push(G.researchBaseCosts[i])\r\n    }\r\n    //Sorts the above array, and returns the index order of sorted array\r\n    G.researchOrderByCost = sortWithIndices(testArray)\r\n    player.roombaResearchIndex = 0\r\n\r\n    // June 09, 2021: Updated toggleShops() and removed boilerplate - Platonic\r\n    toggleShops()\r\n    getChallengeConditions()\r\n    updateChallengeDisplay()\r\n    revealStuff()\r\n    toggleauto()\r\n\r\n    // Challenge summary should be displayed\r\n    if (player.currentChallenge.transcension > 0) {\r\n      challengeDisplay(player.currentChallenge.transcension)\r\n    } else if (player.currentChallenge.reincarnation > 0) {\r\n      challengeDisplay(player.currentChallenge.reincarnation)\r\n    } else if (player.currentChallenge.ascension > 0) {\r\n      challengeDisplay(player.currentChallenge.ascension)\r\n    } else {\r\n      challengeDisplay(1)\r\n    }\r\n\r\n    corruptionStatsUpdate()\r\n    const corrs = Math.min(8, Object.keys(player.corruptionLoadouts).length) + 1\r\n    for (let i = 0; i < corrs; i++) {\r\n      corruptionLoadoutTableUpdate(i)\r\n    }\r\n    showCorruptionStatsLoadouts()\r\n    updateCorruptionLoadoutNames()\r\n\r\n    DOMCacheGetOrSet('researchrunebonus').textContent = i18next.t('runes.thanksResearches', {\r\n      percent: format(100 * G.effectiveLevelMult - 100, 4, true)\r\n    })\r\n\r\n    DOMCacheGetOrSet('talismanlevelup').style.display = 'none'\r\n    DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n\r\n    DOMCacheGetOrSet('antSacrificeSummary').style.display = 'none'\r\n\r\n    // This must be initialized at the beginning of the calculation\r\n    c15RewardUpdate()\r\n\r\n    calculatePlatonicBlessings()\r\n    calculateHypercubeBlessings()\r\n    calculateTesseractBlessings()\r\n    calculateCubeBlessings()\r\n    updateTalismanAppearance(0)\r\n    updateTalismanAppearance(1)\r\n    updateTalismanAppearance(2)\r\n    updateTalismanAppearance(3)\r\n    updateTalismanAppearance(4)\r\n    updateTalismanAppearance(5)\r\n    updateTalismanAppearance(6)\r\n    for (const id in player.ascStatToggles) {\r\n      toggleAscStatPerSecond(+id) // toggle each stat twice to make sure the displays are correct and match what they used to be\r\n      toggleAscStatPerSecond(+id)\r\n    }\r\n\r\n    // Strictly check the input and data with values other than numbers\r\n    const omit = /e\\+/\r\n    let inputd = player.autoChallengeTimer.start\r\n    let inpute = Number((DOMCacheGetOrSet('startAutoChallengeTimerInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('startAutoChallengeTimerInput') as HTMLInputElement).value =\r\n        `${player.autoChallengeTimer.start || blankSave.autoChallengeTimer.start}`.replace(omit, 'e')\r\n      updateAutoChallenge(1)\r\n    }\r\n\r\n    DOMCacheGetOrSet('startTimerValue').innerHTML = i18next.t('challenges.timeStartSweep', {\r\n      time: format(player.autoChallengeTimer.start, 2, true)\r\n    })\r\n\r\n    inputd = player.autoChallengeTimer.exit\r\n    inpute = Number((DOMCacheGetOrSet('exitAutoChallengeTimerInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('exitAutoChallengeTimerInput') as HTMLInputElement).value =\r\n        `${player.autoChallengeTimer.exit || blankSave.autoChallengeTimer.exit}`.replace(omit, 'e')\r\n      updateAutoChallenge(2)\r\n    }\r\n\r\n    DOMCacheGetOrSet('exitTimerValue').innerHTML = i18next.t('challenges.timeExitChallenge', {\r\n      time: format(player.autoChallengeTimer.exit, 2, true)\r\n    })\r\n\r\n    inputd = player.autoChallengeTimer.enter\r\n    inpute = Number((DOMCacheGetOrSet('enterAutoChallengeTimerInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('enterAutoChallengeTimerInput') as HTMLInputElement).value =\r\n        `${player.autoChallengeTimer.enter || blankSave.autoChallengeTimer.enter}`.replace(omit, 'e')\r\n      updateAutoChallenge(3)\r\n    }\r\n\r\n    DOMCacheGetOrSet('enterTimerValue').innerHTML = i18next.t('challenges.timeEnterChallenge', {\r\n      time: format(player.autoChallengeTimer.enter, 2, true)\r\n    })\r\n\r\n    inputd = player.prestigeamount\r\n    inpute = Number((DOMCacheGetOrSet('prestigeamount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('prestigeamount') as HTMLInputElement).value =\r\n        `${player.prestigeamount || blankSave.prestigeamount}`.replace(omit, 'e')\r\n      updateAutoReset(1)\r\n    }\r\n    inputd = player.transcendamount\r\n    inpute = Number((DOMCacheGetOrSet('transcendamount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('transcendamount') as HTMLInputElement).value =\r\n        `${player.transcendamount || blankSave.transcendamount}`.replace(omit, 'e')\r\n      updateAutoReset(2)\r\n    }\r\n    inputd = player.reincarnationamount\r\n    inpute = Number((DOMCacheGetOrSet('reincarnationamount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('reincarnationamount') as HTMLInputElement).value =\r\n        `${player.reincarnationamount || blankSave.reincarnationamount}`.replace(omit, 'e')\r\n      updateAutoReset(3)\r\n    }\r\n    inputd = player.autoAscendThreshold\r\n    inpute = Number((DOMCacheGetOrSet('ascensionAmount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('ascensionAmount') as HTMLInputElement).value =\r\n        `${player.autoAscendThreshold || blankSave.autoAscendThreshold}`.replace(omit, 'e')\r\n      updateAutoReset(4)\r\n    }\r\n    inputd = player.autoAntSacTimer\r\n    inpute = Number((DOMCacheGetOrSet('autoAntSacrificeAmount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('autoAntSacrificeAmount') as HTMLInputElement).value =\r\n        `${player.autoAntSacTimer || blankSave.autoAntSacTimer}`.replace(omit, 'e')\r\n      updateAutoReset(5)\r\n    }\r\n    inputd = player.tesseractAutoBuyerAmount\r\n    inpute = Number((DOMCacheGetOrSet('tesseractAmount') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('tesseractAmount') as HTMLInputElement).value =\r\n        `${player.tesseractAutoBuyerAmount || blankSave.tesseractAutoBuyerAmount}`.replace(omit, 'e')\r\n      updateTesseractAutoBuyAmount()\r\n    }\r\n    inputd = player.openCubes\r\n    inpute = Number((DOMCacheGetOrSet('cubeOpensInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('cubeOpensInput') as HTMLInputElement).value =\r\n        `${player.openCubes || blankSave.openCubes}`.replace(omit, 'e')\r\n      updateAutoCubesOpens(1)\r\n    }\r\n    inputd = player.openTesseracts\r\n    inpute = Number((DOMCacheGetOrSet('tesseractsOpensInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('tesseractsOpensInput') as HTMLInputElement).value =\r\n        `${player.openTesseracts || blankSave.openTesseracts}`.replace(omit, 'e')\r\n      updateAutoCubesOpens(2)\r\n    }\r\n    inputd = player.openHypercubes\r\n    inpute = Number((DOMCacheGetOrSet('hypercubesOpensInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('hypercubesOpensInput') as HTMLInputElement).value =\r\n        `${player.openHypercubes || blankSave.openHypercubes}`.replace(omit, 'e')\r\n      updateAutoCubesOpens(3)\r\n    }\r\n    inputd = player.openPlatonicsCubes\r\n    inpute = Number((DOMCacheGetOrSet('platonicCubeOpensInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('platonicCubeOpensInput') as HTMLInputElement).value =\r\n        `${player.openPlatonicsCubes || blankSave.openPlatonicsCubes}`.replace(omit, 'e')\r\n      updateAutoCubesOpens(4)\r\n    }\r\n    inputd = player.runeBlessingBuyAmount\r\n    inpute = Number((DOMCacheGetOrSet('buyRuneBlessingInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('buyRuneBlessingInput') as HTMLInputElement).value =\r\n        `${player.runeBlessingBuyAmount || blankSave.runeBlessingBuyAmount}`.replace(omit, 'e')\r\n      updateRuneBlessingBuyAmount(1)\r\n    }\r\n\r\n    DOMCacheGetOrSet('buyRuneBlessingToggle').innerHTML = i18next.t('runes.blessings.buyUpTo', {\r\n      amount: format(player.runeBlessingBuyAmount)\r\n    })\r\n\r\n    inputd = player.runeSpiritBuyAmount\r\n    inpute = Number((DOMCacheGetOrSet('buyRuneSpiritInput') as HTMLInputElement).value)\r\n    if (inpute !== inputd || isNaN(inpute + inputd)) {\r\n      (DOMCacheGetOrSet('buyRuneSpiritInput') as HTMLInputElement).value =\r\n        `${player.runeSpiritBuyAmount || blankSave.runeSpiritBuyAmount}`.replace(omit, 'e')\r\n      updateRuneBlessingBuyAmount(2)\r\n    }\r\n    DOMCacheGetOrSet('buyRuneSpiritToggleValue').innerHTML = i18next.t('runes.spirits.buyUpTo', {\r\n      amount: format(player.runeSpiritBuyAmount, 0, true)\r\n    })\r\n\r\n    if (player.resettoggle1 === 1) {\r\n      DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n    if (player.resettoggle2 === 1) {\r\n      DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n    if (player.resettoggle3 === 1) {\r\n      DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n    if (player.resettoggle4 === 1) {\r\n      DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n\r\n    if (player.resettoggle1 === 2) {\r\n      DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    }\r\n    if (player.resettoggle2 === 2) {\r\n      DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    }\r\n    if (player.resettoggle3 === 2) {\r\n      DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    }\r\n    if (player.resettoggle4 === 2) {\r\n      DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modePercentage')\r\n    }\r\n\r\n    if (player.tesseractAutoBuyerToggle === 1) {\r\n      DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOn')\r\n      DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid green'\r\n    }\r\n    if (player.tesseractAutoBuyerToggle === 2) {\r\n      DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOff')\r\n      DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid red'\r\n    }\r\n\r\n    if (player.autoOpenCubes) {\r\n      DOMCacheGetOrSet('openCubes').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openCubes, 0) })\r\n      DOMCacheGetOrSet('openCubes').style.border = '1px solid green'\r\n      DOMCacheGetOrSet('cubeOpensInput').style.border = '1px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('openCubes').textContent = i18next.t('wowCubes.autoOff')\r\n      DOMCacheGetOrSet('openCubes').style.border = '1px solid red'\r\n      DOMCacheGetOrSet('cubeOpensInput').style.border = '1px solid red'\r\n    }\r\n    if (player.autoOpenTesseracts) {\r\n      DOMCacheGetOrSet('openTesseracts').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openTesseracts, 0) })\r\n      DOMCacheGetOrSet('openTesseracts').style.border = '1px solid green'\r\n      DOMCacheGetOrSet('tesseractsOpensInput').style.border = '1px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('openTesseracts').textContent = i18next.t('wowCubes.autoOff')\r\n      DOMCacheGetOrSet('openTesseracts').style.border = '1px solid red'\r\n      DOMCacheGetOrSet('tesseractsOpensInput').style.border = '1px solid red'\r\n    }\r\n    if (player.autoOpenHypercubes) {\r\n      DOMCacheGetOrSet('openHypercubes').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openHypercubes, 0) })\r\n      DOMCacheGetOrSet('openHypercubes').style.border = '1px solid green'\r\n      DOMCacheGetOrSet('hypercubesOpensInput').style.border = '1px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('openHypercubes').textContent = i18next.t('wowCubes.autoOff')\r\n      DOMCacheGetOrSet('openHypercubes').style.border = '1px solid red'\r\n      DOMCacheGetOrSet('hypercubesOpensInput').style.border = '1px solid red'\r\n    }\r\n    if (player.autoOpenPlatonicsCubes) {\r\n      DOMCacheGetOrSet('openPlatonicCube').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openPlatonicsCubes, 0) })\r\n      DOMCacheGetOrSet('openPlatonicCube').style.border = '1px solid green'\r\n      DOMCacheGetOrSet('platonicCubeOpensInput').style.border = '1px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('openPlatonicCube').textContent = i18next.t('wowCubes.autoOff')\r\n      DOMCacheGetOrSet('openPlatonicCube').style.border = '1px solid red'\r\n      DOMCacheGetOrSet('platonicCubeOpensInput').style.border = '1px solid red'\r\n    }\r\n\r\n    if (player.autoResearchToggle) {\r\n      DOMCacheGetOrSet('toggleautoresearch').textContent = i18next.t('researches.automaticOn')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautoresearch').textContent = i18next.t('researches.automaticOff')\r\n    }\r\n    if (player.autoResearchMode === 'cheapest') {\r\n      DOMCacheGetOrSet('toggleautoresearchmode').textContent = i18next.t('researches.autoModeCheapest')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautoresearchmode').textContent = i18next.t('researches.autoModeManual')\r\n    }\r\n    if (player.autoSacrificeToggle) {\r\n      DOMCacheGetOrSet('toggleautosacrifice').textContent = i18next.t('runes.blessings.autoRuneOn')\r\n      DOMCacheGetOrSet('toggleautosacrifice').style.border = '2px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautosacrifice').textContent = i18next.t('runes.blessings.autoRuneOff')\r\n      DOMCacheGetOrSet('toggleautosacrifice').style.border = '2px solid red'\r\n    }\r\n    if (player.autoBuyFragment) {\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').textContent = i18next.t('runes.talismans.autoBuyOn')\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').style.border = '2px solid white'\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').style.color = 'orange'\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').textContent = i18next.t('runes.talismans.autoBuyOff')\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').style.border = '2px solid orange'\r\n      DOMCacheGetOrSet('toggleautoBuyFragments').style.color = 'white'\r\n    }\r\n    if (player.autoFortifyToggle) {\r\n      DOMCacheGetOrSet('toggleautofortify').textContent = i18next.t('runes.autoFortifyOn')\r\n      DOMCacheGetOrSet('toggleautofortify').style.border = '2px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautofortify').textContent = i18next.t('runes.autoFortifyOff')\r\n      DOMCacheGetOrSet('toggleautofortify').style.border = '2px solid red'\r\n    }\r\n    if (player.autoEnhanceToggle) {\r\n      DOMCacheGetOrSet('toggleautoenhance').textContent = i18next.t('runes.autoEnhanceOn')\r\n      DOMCacheGetOrSet('toggleautoenhance').style.border = '2px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('toggleautoenhance').textContent = i18next.t('runes.autoEnhanceOff')\r\n      DOMCacheGetOrSet('toggleautoenhance').style.border = '2px solid red'\r\n    }\r\n    player.saveOfferingToggle = false //Lint doesnt like it being inside if\r\n    DOMCacheGetOrSet('saveOffToggle').textContent = i18next.t('toggles.saveOfferingsOff')\r\n    DOMCacheGetOrSet('saveOffToggle').style.color = 'white'\r\n    if (player.autoAscend) {\r\n      DOMCacheGetOrSet('ascensionAutoEnable').textContent = i18next.t('corruptions.autoAscend.on')\r\n      DOMCacheGetOrSet('ascensionAutoEnable').style.border = '2px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('ascensionAutoEnable').textContent = i18next.t('corruptions.autoAscend.off')\r\n      DOMCacheGetOrSet('ascensionAutoEnable').style.border = '2px solid red'\r\n    }\r\n    if (player.shopConfirmationToggle) {\r\n      DOMCacheGetOrSet('toggleConfirmShop').textContent = i18next.t('shop.shopConfirmationOn')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleConfirmShop').textContent = i18next.t('shop.shopConfirmationOff')\r\n    }\r\n    switch (player.shopBuyMaxToggle) {\r\n      case false:\r\n        DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buy1')\r\n        break\r\n      case 'TEN':\r\n        DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buy10')\r\n        break\r\n      case true:\r\n        DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buyMax')\r\n        break\r\n      case 'ANY':\r\n        DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buyAny')\r\n    }\r\n    if (player.shopHideToggle) {\r\n      DOMCacheGetOrSet('toggleHideShop').textContent = i18next.t('shop.hideMaxedOn')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleHideShop').textContent = i18next.t('shop.hideMaxedOff')\r\n    }\r\n    if (player.researchBuyMaxToggle) {\r\n      DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeMax')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeOne')\r\n    }\r\n    if (player.cubeUpgradesBuyMaxToggle) {\r\n      DOMCacheGetOrSet('toggleCubeBuy').textContent = i18next.t('toggles.upgradeMaxIfPossible')\r\n    } else {\r\n      DOMCacheGetOrSet('toggleCubeBuy').textContent = i18next.t('toggles.upgradeOneLevelWow')\r\n    }\r\n    autoCubeUpgradesToggle(false)\r\n    autoPlatonicUpgradesToggle(false)\r\n\r\n    for (let i = 1; i <= 2; i++) {\r\n      toggleAntMaxBuy()\r\n      toggleAntAutoSacrifice(0)\r\n      toggleAntAutoSacrifice(1)\r\n    }\r\n\r\n    for (let i = 1; i <= 2; i++) {\r\n      toggleAutoAscend(0)\r\n      toggleAutoAscend(1)\r\n    }\r\n\r\n    DOMCacheGetOrSet('historyTogglePerSecondButton').textContent = 'Per second: ' + (player.historyShowPerSecond ? 'ON' : 'OFF')\r\n    DOMCacheGetOrSet('historyTogglePerSecondButton').style.borderColor = (player.historyShowPerSecond ? 'green' : 'red')\r\n\r\n    //If auto research is enabled and runing; Make sure there is something to try to research if possible\r\n    if (player.autoResearchToggle && autoResearchEnabled() && player.autoResearchMode === 'cheapest') {\r\n      player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n    }\r\n\r\n    player.autoResearch = Math.min(200, player.autoResearch)\r\n    player.autoSacrifice = Math.min(5, player.autoSacrifice)\r\n\r\n\r\n    if (player.researches[61] === 0) {\r\n      DOMCacheGetOrSet('automaticobtainium').textContent = i18next.t('main.buyResearch3x11')\r\n    }\r\n\r\n    if (player.autoSacrificeToggle && player.autoSacrifice > 0.5) {\r\n      DOMCacheGetOrSet(`rune${player.autoSacrifice}`).style.backgroundColor = 'orange'\r\n    }\r\n\r\n    if (player.autoWarpCheck) {\r\n      DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOnColon')\r\n      DOMCacheGetOrSet('warpAuto').style.border = '2px solid green'\r\n    } else {\r\n      DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOffColon')\r\n      DOMCacheGetOrSet('warpAuto').style.border = '2px solid red'\r\n    }\r\n    DOMCacheGetOrSet('autoHepteractPercentage').textContent = i18next.t('wowCubes.hepteractForge.autoSetting', {\r\n      x: `${player.hepteractAutoCraftPercentage}`\r\n    })\r\n    DOMCacheGetOrSet('hepteractToQuarkTradeAuto').textContent = player.overfluxOrbsAutoBuy\r\n      ? i18next.t('general.autoOnColon')\r\n      : i18next.t('general.autoOffColon')\r\n    DOMCacheGetOrSet('hepteractToQuarkTradeAuto').style.border = `2px solid ${player.overfluxOrbsAutoBuy ? 'green' : 'red'}`\r\n    toggleAutoBuyOrbs(true, true)\r\n\r\n    toggleTalismanBuy(player.buyTalismanShardPercent)\r\n    updateTalismanInventory()\r\n    calculateObtainium()\r\n    calculateAnts()\r\n    calculateRuneLevels()\r\n    resetHistoryRenderAllTables()\r\n    updateSingularityAchievements()\r\n    updateSingularityGlobalPerks()\r\n  }\r\n\r\n  updateAchievementBG()\r\n  if (player.currentChallenge.reincarnation) {\r\n    resetrepeat('reincarnationChallenge')\r\n  } else if (player.currentChallenge.transcension) {\r\n    resetrepeat('transcensionChallenge')\r\n  }\r\n\r\n  const d = new Date()\r\n  const h = d.getHours()\r\n  const m = d.getMinutes()\r\n  const s = d.getSeconds()\r\n  player.dayTimer = (60 * 60 * 24 - (s + 60 * m + 60 * 60 * h))\r\n}\r\n\r\nconst FormatList = ['', 'K', 'M', 'B', 'T', 'Qa', 'Qt', 'Sx', 'Sp', 'Oc', 'No', 'Dc', 'UDc', 'DDc', 'TDc', 'QaDc', 'QtDc', 'SxDc', 'SpDc', 'OcDc', 'NoDc', 'Vg', 'UVg', 'DVg', 'TVg', 'QaVg', 'QtVg', 'SxVg', 'SpVg', 'OcVg', 'NoVg', 'Tg', 'UTg', 'DTg', 'TTg', 'QaTg', 'QtTg', 'SxTg', 'SpTg', 'OTg', 'NTg', 'Qd', 'UQd', 'DQd', 'TQd', 'QaQd', 'QtQd', 'SxQd', 'SpQd', 'OcQd', 'NoQd', 'Qi', 'UQi', 'DQi', 'TQi', 'QaQi', 'QtQi', 'SxQi', 'SpQi', 'OQi', 'NQi', 'Se', 'USe', 'DSe', 'TSe', 'QaSe', 'QtSe', 'SxSe', 'SpSe', 'OcSe', 'NoSe', 'St', 'USt', 'DSt', 'TSt', 'QaSt', 'QtSt', 'SxSt', 'SpSt', 'OcSt', 'NoSt', 'Ocg', 'UOcg', 'DOcg', 'TOcg', 'QaOcg', 'QtOcg', 'SxOcg', 'SpOcg', 'OcOcg', 'NoOcg', 'Nono', 'UNono', 'DNono', 'TNono', 'QaNono', 'QtNono', 'SxNono', 'SpNono', 'OcNono', 'NoNono', 'Ce']\r\n\r\n// Bad browsers (like Safari) only recently implemented this.\r\n// eslint-disable-next-line\r\nconst supportsFormatToParts = typeof (Intl.NumberFormat.prototype).formatToParts === 'function'\r\n\r\n// In some browsers, this will return an empty-1 length array (?), causing a \"TypeError: Cannot read property 'value' of undefined\"\r\n// if we destructure it... To reproduce: ` const [ { value } ] = []; `\r\n// https://discord.com/channels/677271830838640680/730669616870981674/830218436201283584\r\nconst IntlFormatter = !supportsFormatToParts ? null : Intl.NumberFormat()\r\n  .formatToParts(1000.1)\r\n  .filter(part => part.type === 'decimal' || part.type === 'group')\r\n\r\n// gets the system number delimiter and decimal values, defaults to en-US\r\nconst [{ value: group }, { value: dec }] = IntlFormatter?.length !== 2\r\n  ? [{ value: ',' }, { value: '.' }]\r\n  : IntlFormatter\r\n\r\n// Number.toLocaleString opts for 2 decimal places\r\nconst locOpts = { minimumFractionDigits: 2, maximumFractionDigits: 2 }\r\n\r\nconst padEvery = (str: string, places = 3) => {\r\n  let step = 1, newStr = ''\r\n  const strParts = str.split('.')\r\n  // don't take any decimal places\r\n  for (let i = (strParts[0].length - 1); i >= 0; i--) {\r\n    // pad every [places] places if we aren't at the beginning of the string\r\n    if (step++ === places && i !== 0) {\r\n      step = 1\r\n      newStr = group + str[i] + newStr\r\n    } else {\r\n      newStr = str[i] + newStr\r\n    }\r\n  }\r\n  // re-add decimal places\r\n  if (typeof strParts[1] !== 'undefined') {\r\n    newStr += dec + strParts[1]\r\n  }\r\n  // see https://www.npmjs.com/package/flatstr\r\n  // eslint-disable-next-line no-bitwise\r\n  (newStr as unknown as number) | 0\r\n  return newStr\r\n}\r\n\r\n/**\r\n * This function displays the numbers such as 1,234 or 1.00e1234 or 1.00e1.234M.\r\n * @param input value to format\r\n * @param accuracy\r\n * how many decimal points that are to be displayed (Values <10 if !long, <1000 if long).\r\n * only works up to 305 (308 - 3), however it only worked up to ~14 due to rounding errors regardless\r\n * @param long dictates whether or not a given number displays as scientific at 1,000,000. This auto defaults to short if input >= 1e7\r\n */\r\nexport const format = (\r\n  input: Decimal | number | { [Symbol.toPrimitive]: unknown } | null | undefined,\r\n  accuracy = 0,\r\n  long = false,\r\n  truncate = true,\r\n  fractional = false\r\n): string => {\r\n  if (input == null) {\r\n    return '0 [null]'\r\n  }\r\n\r\n  if (\r\n    typeof input === 'object' &&\r\n        Symbol.toPrimitive in input\r\n  ) {\r\n    input = Number(input)\r\n  }\r\n\r\n  if ( // invalid parameter\r\n    !(input instanceof Decimal) &&\r\n        typeof input !== 'number' ||\r\n        isNaN(input as number)\r\n  ) {\r\n    return isNaN(input as number) ? '0 [NaN]' : '0 [und.]'\r\n  } else if ( // this case handles numbers less than 1e-6 and greater than 0\r\n    typeof input === 'number' &&\r\n        player.notation == 'Default' &&\r\n        input < (!fractional ? 1e-3 : 1e-15) && // arbitrary number, don't change 1e-3\r\n        input > 0 // don't handle negative numbers, probably could be removed\r\n  ) {\r\n    return input.toExponential(accuracy)\r\n  }\r\n\r\n  let power!: number\r\n  let mantissa!: number\r\n  if (isDecimal(input)) {\r\n    // Gets power and mantissa if input is of type decimal\r\n    power = input.e\r\n    mantissa = input.mantissa\r\n  } else if (typeof input === 'number') {\r\n    if (input === 0) {\r\n      return '0'\r\n    }\r\n\r\n    // Gets power and mantissa if input is of type number and isn't 0\r\n    power = Math.floor(Math.log10(Math.abs(input)))\r\n    mantissa = input / Math.pow(10, power)\r\n  }\r\n\r\n  // This prevents numbers from jittering between two different powers by rounding errors\r\n  if (mantissa > 9.9999999) {\r\n    mantissa = 1\r\n    ++power\r\n  }\r\n\r\n  if (mantissa < 1 && mantissa > 0.9999999) {\r\n    mantissa = 1\r\n  }\r\n\r\n  // If the power is less than 15 it's effectively 0\r\n\r\n  if (power < -15) {\r\n    return '0'\r\n  }\r\n  if (player.notation == 'Pure Engineering') {\r\n    const powerOver = (power % 3 < 0) ? (3 + power % 3) : (power % 3)\r\n    power = power - powerOver\r\n    mantissa = mantissa * Math.pow(10, powerOver)\r\n  }\r\n  if (player.notation == 'Pure Scientific' || player.notation == 'Pure Engineering') {\r\n    if (power >= 1e6) {\r\n      if (!Number.isFinite(power)) {\r\n        return 'Infinity'\r\n      }\r\n      return `E${format(power, 3)}`\r\n    }\r\n    accuracy = power === 2 && accuracy > 2 ? 2 : accuracy\r\n    if (power >= 6 || power < 0) {\r\n      accuracy = (accuracy < 2 ? 2 : accuracy)\r\n      // Makes the power group 3 with commas\r\n      const mantissaLook = (Math.floor(mantissa * Math.pow(10, accuracy)) / Math.pow(10, accuracy)).toLocaleString(undefined, locOpts)\r\n      const powerLook = padEvery(power.toString())\r\n      // returns format (1.23e456,789)\r\n      return `${mantissaLook}e${powerLook}`\r\n    }\r\n    const mantissaLook = (Math.floor(mantissa * Math.pow(10, power) * Math.pow(10, accuracy)) / Math.pow(10, accuracy)).toLocaleString(undefined, {\r\n      minimumFractionDigits: accuracy, maximumFractionDigits: accuracy\r\n    })\r\n    return `${mantissaLook}`\r\n  }\r\n  // If the power is negative, then we will want to address that separately.\r\n  if (power < 0 && !isDecimal(input) && fractional) {\r\n    if (power <= -15) {\r\n      return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 15)}Qa`\r\n    }\r\n    if (power <= -12) {\r\n      return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 12)}T`\r\n    }\r\n    if (power <= -9) {\r\n      return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 9)}B`\r\n    }\r\n    if (power <= -6) {\r\n      return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 6)}M`\r\n    }\r\n    if (power <= -3) {\r\n      return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 3)}K`\r\n    }\r\n    return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power)}`\r\n  } else if (power < 6 || (long && power < 7)) {\r\n    // If the power is less than 6 or format long and less than 7 use standard formatting (1,234,567)\r\n    // Gets the standard representation of the number, safe as power is guaranteed to be > -12 and < 7\r\n    let standard = mantissa * Math.pow(10, power)\r\n    let standardString\r\n    // Rounds up if the number experiences a rounding error\r\n    if (standard - Math.floor(standard) > 0.9999999) {\r\n      standard = Math.ceil(standard)\r\n    }\r\n    // If the power is less than 1 or format long and less than 3 apply toFixed(accuracy) to get decimal places\r\n    if ((power < 2 || (long && power < 3)) && accuracy > 0) {\r\n      standardString = standard.toFixed(power === 2 && accuracy > 2 ? 2 : accuracy)\r\n    } else {\r\n      // If it doesn't fit those criteria drop the decimal places\r\n      standard = Math.floor(standard)\r\n      standardString = standard.toString()\r\n    }\r\n\r\n    // Split it on the decimal place\r\n    return padEvery(standardString)\r\n  } else if (power < 1e6) {\r\n    // If the power is less than 1e6 then apply standard scientific notation\r\n    // Makes mantissa be rounded down to 2 decimal places\r\n    const mantissaLook = (Math.floor(mantissa * 100) / 100).toLocaleString(undefined, locOpts)\r\n    // Makes the power group 3 with commas\r\n    const powerLook = padEvery(power.toString())\r\n    // returns format (1.23e456,789)\r\n    return `${mantissaLook}e${powerLook}`\r\n  } else if (power >= 1e6) {\r\n    if (!Number.isFinite(power)) {\r\n      return 'Infinity'\r\n    }\r\n\r\n    // if the power is greater than 1e6 apply notation scientific notation\r\n    // Makes mantissa be rounded down to 2 decimal places\r\n    const mantissaLook = testing && truncate ? '' : (Math.floor(mantissa * 100) / 100).toLocaleString(undefined, locOpts)\r\n\r\n    // Drops the power down to 4 digits total but never greater than 1000 in increments that equate to notations, (1234000 -> 1.234) ( 12340000 -> 12.34) (123400000 -> 123.4) (1234000000 -> 1.234)\r\n    const powerDigits = Math.ceil(Math.log10(power))\r\n    let powerFront = ((powerDigits - 1) % 3) + 1\r\n    let powerLook = power / Math.pow(10, powerDigits - powerFront)\r\n    if (powerLook === 1000) {\r\n      powerLook = 1\r\n      powerFront = 1\r\n    }\r\n\r\n    const powerLookF = powerLook.toLocaleString(undefined, {\r\n      minimumFractionDigits: 4 - powerFront, maximumFractionDigits: 4 - powerFront\r\n    })\r\n    const powerLodge = Math.floor(Math.log10(power) / 3)\r\n    // Return relevant notations alongside the \"look\" power based on what the power actually is\r\n    if (typeof FormatList[powerLodge] === 'string') {\r\n      return `${mantissaLook}e${powerLookF}${FormatList[powerLodge]}`\r\n    }\r\n\r\n    // If it doesn't fit a notation then default to mantissa e power\r\n    return `e${power.toExponential(2)}`\r\n  } else {\r\n    return '0 [und.]'\r\n  }\r\n}\r\n\r\nexport const formatTimeShort = (seconds: number, msMaxSeconds?: number): string => {\r\n  return ((seconds >= 86400) ? format(Math.floor(seconds / 86400)) + 'd' : '') +\r\n        ((seconds >= 3600) ? format(Math.floor(seconds / 3600) % 24) + 'h' : '') +\r\n        ((seconds >= 60)   ? format(Math.floor(seconds / 60) % 60) + 'm'   : '') +\r\n        ((seconds >= 8640000) ? '' : format(Math.floor(seconds) % 60) + ((msMaxSeconds && seconds < msMaxSeconds)  //Don't show seconds when you're over 100 days, like honestly\r\n          ? '.' + (Math.floor((seconds % 1) * 1000).toString().padStart(3, '0')) : '') + 's')\r\n}\r\n\r\nexport const updateAllTick = (): void => {\r\n  let a = 0\r\n\r\n  G.totalAccelerator = player.acceleratorBought\r\n  G.costDivisor = 1\r\n\r\n  if (player.upgrades[8] !== 0) {\r\n    a += Math.floor(player.multiplierBought / 7)\r\n  }\r\n  if (player.upgrades[21] !== 0) {\r\n    a += 5\r\n  }\r\n  if (player.upgrades[22] !== 0) {\r\n    a += 4\r\n  }\r\n  if (player.upgrades[23] !== 0) {\r\n    a += 3\r\n  }\r\n  if (player.upgrades[24] !== 0) {\r\n    a += 2\r\n  }\r\n  if (player.upgrades[25] !== 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[27] !== 0) {\r\n    a += Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.min(1750, Math.max(0, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50))\r\n  }\r\n  if (player.upgrades[29] !== 0) {\r\n    a += Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))\r\n  }\r\n  if (player.upgrades[32] !== 0) {\r\n    a += Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)))\r\n  }\r\n  if (player.upgrades[45] !== 0) {\r\n    a += Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)))\r\n  }\r\n  if (player.achievements[5] !== 0) {\r\n    a += Math.floor(player.firstOwnedCoin / 500)\r\n  }\r\n  if (player.achievements[12] !== 0) {\r\n    a += Math.floor(player.secondOwnedCoin / 500)\r\n  }\r\n  if (player.achievements[19] !== 0) {\r\n    a += Math.floor(player.thirdOwnedCoin / 500)\r\n  }\r\n  if (player.achievements[26] !== 0) {\r\n    a += Math.floor(player.fourthOwnedCoin / 500)\r\n  }\r\n  if (player.achievements[33] !== 0) {\r\n    a += Math.floor(player.fifthOwnedCoin / 500)\r\n  }\r\n  if (player.achievements[60] !== 0) {\r\n    a += 2\r\n  }\r\n  if (player.achievements[61] !== 0) {\r\n    a += 2\r\n  }\r\n  if (player.achievements[62] !== 0) {\r\n    a += 2\r\n  }\r\n\r\n  a += 5 * CalcECC('transcend', player.challengecompletions[2])\r\n  G.freeUpgradeAccelerator = a\r\n  a += G.totalAcceleratorBoost * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G.cubeBonusMultiplier[1])\r\n  if (player.unlocks.prestige) {\r\n    a += Math.floor(Math.pow(G.rune1level * G.effectiveLevelMult / 4, 1.25))\r\n    a *= (1 + G.rune1level * 1 / 400 * G.effectiveLevelMult)\r\n  }\r\n\r\n  calculateAcceleratorMultiplier()\r\n  a *= G.acceleratorMultiplier\r\n  a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G.viscosityPower[player.usedCorruptions[2]]))\r\n  a += 2000 * hepteractEffective('accelerator')\r\n  a *= G.challenge15Rewards.accelerator\r\n  a *= (1 + 3/10000 * hepteractEffective('accelerator'))\r\n  a = Math.floor(Math.min(1e100, a))\r\n\r\n  if (player.usedCorruptions[2] >= 15) {\r\n    a = Math.pow(a, 0.2)\r\n  }\r\n  if (player.usedCorruptions[2] >= 16) {\r\n    a = 1\r\n  }\r\n\r\n  G.freeAccelerator = a\r\n  G.totalAccelerator += G.freeAccelerator\r\n\r\n  G.tuSevenMulti = 1\r\n\r\n\r\n  if (player.upgrades[46] > 0.5) {\r\n    G.tuSevenMulti = 1.05\r\n  }\r\n\r\n  G.acceleratorPower = Math.pow(\r\n    1.1 + G.tuSevenMulti *\r\n        (G.totalAcceleratorBoost / 100)\r\n        * (1 + CalcECC('transcend', player.challengecompletions[2]) / 20),\r\n    1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7])\r\n  )\r\n  G.acceleratorPower += 1 / 200 * Math.floor(CalcECC('transcend', player.challengecompletions[2]) / 2) * 100 / 100\r\n  for (let i = 1; i <= 5; i++) {\r\n    if (player.achievements[7 * i - 4] > 0) {\r\n      G.acceleratorPower += 0.0005 * i\r\n    }\r\n  }\r\n\r\n  //No MA and Sadistic will always overwrite Transcend challenges starting in v2.0.0\r\n  if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\r\n    if (player.currentChallenge.transcension === 1) {\r\n      G.acceleratorPower *= 25 / (50 + player.challengecompletions[1])\r\n      G.acceleratorPower += 0.55\r\n      G.acceleratorPower = Math.max(1, G.acceleratorPower)\r\n    }\r\n    if (player.currentChallenge.transcension === 2) {\r\n      G.acceleratorPower = 1\r\n    }\r\n    if (player.currentChallenge.transcension === 3) {\r\n      G.acceleratorPower =\r\n                1.05 +\r\n                2 * G.tuSevenMulti *\r\n                (G.totalAcceleratorBoost / 300) *\r\n                (1 + CalcECC('transcend', player.challengecompletions[2]) / 20\r\n                )\r\n    }\r\n  }\r\n  G.acceleratorPower = Math.min(1e300, G.acceleratorPower)\r\n  if (player.currentChallenge.reincarnation === 7) {\r\n    G.acceleratorPower = 1\r\n  }\r\n  if (player.currentChallenge.reincarnation === 10) {\r\n    G.acceleratorPower = 1\r\n  }\r\n\r\n  if (player.currentChallenge.transcension !== 1) {\r\n    G.acceleratorEffect = Decimal.pow(G.acceleratorPower, G.totalAccelerator)\r\n  }\r\n\r\n  if (player.currentChallenge.transcension === 1) {\r\n    G.acceleratorEffect = Decimal.pow(G.acceleratorPower, G.totalAccelerator + G.totalMultiplier)\r\n  }\r\n  G.acceleratorEffectDisplay = new Decimal(G.acceleratorPower * 100 - 100)\r\n  if (player.currentChallenge.reincarnation === 10) {\r\n    G.acceleratorEffect = new Decimal(1)\r\n  }\r\n  G.generatorPower = new Decimal(1)\r\n  if (player.upgrades[11] > 0.5 && player.currentChallenge.reincarnation !== 7) {\r\n    G.generatorPower = Decimal.pow(1.02, G.totalAccelerator)\r\n  }\r\n\r\n}\r\n\r\nexport const updateAllMultiplier = (): void => {\r\n  let a = 0\r\n\r\n  if (player.upgrades[7] > 0) {\r\n    a += Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10)))\r\n  }\r\n  if (player.upgrades[9] > 0) {\r\n    a += Math.floor(player.acceleratorBought / 10)\r\n  }\r\n  if (player.upgrades[21] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[22] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[23] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[24] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[25] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.upgrades[28] > 0) {\r\n    a += Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))\r\n  }\r\n  if (player.upgrades[30] > 0) {\r\n    a += Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)))\r\n  }\r\n  if (player.upgrades[33] > 0) {\r\n    a += G.totalAcceleratorBoost\r\n  }\r\n  if (player.upgrades[49] > 0) {\r\n    a += Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)))\r\n  }\r\n  if (player.upgrades[68] > 0) {\r\n    a += Math.min(2500, Math.floor(Decimal.log(G.taxdivisor, 10) * 1 / 1000))\r\n  }\r\n  if (player.challengecompletions[1] > 0) {\r\n    a += 1\r\n  }\r\n  if (player.achievements[6] > 0.5) {\r\n    a += Math.floor(player.firstOwnedCoin / 1000)\r\n  }\r\n  if (player.achievements[13] > 0.5) {\r\n    a += Math.floor(player.secondOwnedCoin / 1000)\r\n  }\r\n  if (player.achievements[20] > 0.5) {\r\n    a += Math.floor(player.thirdOwnedCoin / 1000)\r\n  }\r\n  if (player.achievements[27] > 0.5) {\r\n    a += Math.floor(player.fourthOwnedCoin / 1000)\r\n  }\r\n  if (player.achievements[34] > 0.5) {\r\n    a += Math.floor(player.fifthOwnedCoin / 1000)\r\n  }\r\n  if (player.achievements[57] > 0.5) {\r\n    a += 1\r\n  }\r\n  if (player.achievements[58] > 0.5) {\r\n    a += 1\r\n  }\r\n  if (player.achievements[59] > 0.5) {\r\n    a += 1\r\n  }\r\n  a += 20 * player.researches[94] * Math.floor(\r\n    (G.rune1level + G.rune2level + G.rune3level + G.rune4level + G.rune5level) / 8\r\n  )\r\n\r\n  G.freeUpgradeMultiplier = Math.min(1e100, a)\r\n\r\n  if (player.achievements[38] > 0.5) {\r\n    a += Math.floor(Math.floor(\r\n      G.rune2level / 10 * G.effectiveLevelMult) *\r\n            Math.floor(1 + G.rune2level / 10 * G.effectiveLevelMult) / 2\r\n    ) * 100 / 100\r\n  }\r\n\r\n  a *= (1 + player.achievements[57] / 100)\r\n  a *= (1 + player.achievements[58] / 100)\r\n  a *= (1 + player.achievements[59] / 100)\r\n  a *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25])\r\n  a *= (1 + 0.03 * player.upgrades[34] + 0.02 * player.upgrades[35])\r\n  a *= (1 + 1 / 5 * player.researches[2] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\r\n  a *= (1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15])\r\n  a *= (1 + G.rune2level / 400 * G.effectiveLevelMult)\r\n  a *= (1 + 1 / 20 * player.researches[87])\r\n  a *= (1 + 1 / 100 * player.researches[128])\r\n  a *= (1 + 0.8 / 100 * player.researches[143])\r\n  a *= (1 + 0.6 / 100 * player.researches[158])\r\n  a *= (1 + 0.4 / 100 * player.researches[173])\r\n  a *= (1 + 0.2 / 100 * player.researches[188])\r\n  a *= (1 + 0.01 / 100 * player.researches[200])\r\n  a *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\r\n  a *= calculateSigmoidExponential(40, (player.antUpgrades[4]! + G.bonusant5) / 1000 * 40 / 39)\r\n  a *= G.cubeBonusMultiplier[2]\r\n  if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\r\n    a *= 1.25\r\n  }\r\n  a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G.viscosityPower[player.usedCorruptions[2]]))\r\n  a += 1000 * hepteractEffective('multiplier')\r\n  a *= G.challenge15Rewards.multiplier\r\n  a *= (1 + 3/10000 * hepteractEffective('multiplier'))\r\n  a = Math.floor(Math.min(1e100, a))\r\n\r\n  if (player.usedCorruptions[2] >= 15) {\r\n    a = Math.pow(a, 0.2)\r\n  }\r\n  if (player.usedCorruptions[2] >= 16) {\r\n    a = 1\r\n  }\r\n\r\n  G.freeMultiplier = a\r\n  G.totalMultiplier = G.freeMultiplier + player.multiplierBought\r\n\r\n  G.challengeOneLog = 3\r\n\r\n  let b = 0\r\n  let c = 0\r\n  b += Decimal.log(player.transcendShards.add(1), 3)\r\n  b *= (1 + 11 * player.researches[33] / 100)\r\n  b *= (1 + 11 * player.researches[34] / 100)\r\n  b *= (1 + 11 * player.researches[35] / 100)\r\n  b *= (1 + player.researches[89] / 5)\r\n  b *= (1 + 10 * G.effectiveRuneBlessingPower[2])\r\n\r\n  c += Math.floor((0.1 * b * CalcECC('transcend', player.challengecompletions[1])))\r\n  c += (CalcECC('transcend', player.challengecompletions[1]) * 10)\r\n  G.freeMultiplierBoost = c\r\n  G.totalMultiplierBoost = Math.pow(Math.floor(b) + c, 1 + CalcECC('reincarnation', player.challengecompletions[7]) * 0.04)\r\n\r\n  let c7 = 1\r\n  if (player.challengecompletions[7] > 0.5) {\r\n    c7 = 1.25\r\n  }\r\n\r\n  G.multiplierPower = 2 + 0.005 * G.totalMultiplierBoost * c7\r\n\r\n  //No MA and Sadistic will always override Transcend Challenges starting in v2.0.0\r\n  if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\r\n    if (player.currentChallenge.transcension === 1) {\r\n      G.multiplierPower = 1\r\n    }\r\n    if (player.currentChallenge.transcension === 2) {\r\n      G.multiplierPower = (1.25 + 0.0012 * (b + c) * c7)\r\n    }\r\n  }\r\n  G.multiplierPower = Math.min(1e300, G.multiplierPower)\r\n\r\n  if (player.currentChallenge.reincarnation === 7) {\r\n    G.multiplierPower = 1\r\n  }\r\n  if (player.currentChallenge.reincarnation === 10) {\r\n    G.multiplierPower = 1\r\n  }\r\n\r\n  G.multiplierEffect = Decimal.pow(G.multiplierPower, G.totalMultiplier)\r\n}\r\n\r\nexport const multipliers = (): void => {\r\n  let s = new Decimal(1)\r\n  let c = new Decimal(1)\r\n  let crystalExponent = 1 / 3\r\n  crystalExponent += Math.min(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[3], 0.05 * player.crystalUpgrades[3])\r\n  crystalExponent += 0.04 * CalcECC('transcend', player.challengecompletions[3])\r\n  crystalExponent += 0.08 * player.researches[28]\r\n  crystalExponent += 0.08 * player.researches[29]\r\n  crystalExponent += 0.04 * player.researches[30]\r\n  crystalExponent += 8 * player.cubeUpgrades[17]\r\n  G.prestigeMultiplier = Decimal.pow(player.prestigeShards, crystalExponent).add(1)\r\n\r\n  let c7 = 1\r\n  if (player.currentChallenge.reincarnation === 7) {\r\n    c7 = 0.05\r\n  }\r\n  if (player.currentChallenge.reincarnation === 8) {\r\n    c7 = 0\r\n  }\r\n\r\n  G.buildingPower =\r\n        1 + (1 - Math.pow(2, -1 / 160)) * c7 * Decimal.log(\r\n          player.reincarnationShards.add(1), 10) *\r\n            (1 + 1 / 20 * player.researches[36] +\r\n            1 / 40 * player.researches[37] + 1 / 40 *\r\n            player.researches[38]) +\r\n            (c7 + 0.2) * 0.25 / 1.2 *\r\n            CalcECC('reincarnation', player.challengecompletions[8]\r\n            )\r\n\r\n  G.buildingPower = Math.pow(G.buildingPower, 1 + player.cubeUpgrades[12] * 0.09)\r\n  G.buildingPower = Math.pow(G.buildingPower, 1 + player.cubeUpgrades[36] * 0.05)\r\n  G.reincarnationMultiplier = Decimal.pow(G.buildingPower, G.totalCoinOwned)\r\n\r\n  G.antMultiplier = Decimal.pow(Decimal.max(1, player.antPoints), calculateCrumbToCoinExp())\r\n\r\n  s = s.times(G.multiplierEffect)\r\n  s = s.times(G.acceleratorEffect)\r\n  s = s.times(G.prestigeMultiplier)\r\n  s = s.times(G.reincarnationMultiplier)\r\n  s = s.times(G.antMultiplier)\r\n  // PLAT - check\r\n  const first6CoinUp = new Decimal(G.totalCoinOwned + 1).times(Decimal.min(1e30, Decimal.pow(1.008, G.totalCoinOwned)))\r\n\r\n  if (player.highestSingularityCount > 0) {\r\n    s = s.times(Math.pow(player.goldenQuarks + 1, 1.5) * Math.pow(player.highestSingularityCount + 1, 2))\r\n  }\r\n  if (player.upgrades[6] > 0.5) {\r\n    s = s.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[12] > 0.5) {\r\n    s = s.times(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)))\r\n  }\r\n  if (player.upgrades[20] > 0.5) {\r\n    // PLAT - check\r\n    s = s.times(Decimal.pow(G.totalCoinOwned / 4 + 1, 10))\r\n  }\r\n  if (player.upgrades[41] > 0.5) {\r\n    s = s.times(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2)))\r\n  }\r\n  if (player.upgrades[43] > 0.5) {\r\n    s = s.times(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)))\r\n  }\r\n  if (player.upgrades[48] > 0.5) {\r\n    s = s.times(Decimal.pow((G.totalMultiplier * G.totalAccelerator / 1000 + 1), 8))\r\n  }\r\n  if (player.currentChallenge.reincarnation === 6) {\r\n    s = s.dividedBy(1e250)\r\n  }\r\n  if (player.currentChallenge.reincarnation === 7) {\r\n    s = s.dividedBy('1e1250')\r\n  }\r\n  if (player.currentChallenge.reincarnation === 9) {\r\n    s = s.dividedBy('1e2000000')\r\n  }\r\n  if (player.currentChallenge.reincarnation === 10) {\r\n    s = s.dividedBy('1e12500000')\r\n  }\r\n  c = Decimal.pow(s, 1 + 0.001 * player.researches[17])\r\n  let lol = Decimal.pow(c, 1 + 0.025 * player.upgrades[123])\r\n  if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[5] > 0) {\r\n    lol = Decimal.pow(lol, 1.1)\r\n  }\r\n  if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[14] > 0) {\r\n    lol = Decimal.pow(lol, 1 + 1 / 20 * player.usedCorruptions[9] * Decimal.log(player.coins.add(1), 10) / (1e7 + Decimal.log(player.coins.add(1), 10)))\r\n  }\r\n  if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[15] > 0) {\r\n    lol = Decimal.pow(lol, 1.1)\r\n  }\r\n  lol = Decimal.pow(lol, G.challenge15Rewards.coinExponent)\r\n  G.globalCoinMultiplier = lol\r\n  G.globalCoinMultiplier = Decimal.pow(G.globalCoinMultiplier, G.financialcollapsePower[player.usedCorruptions[9]])\r\n\r\n  G.coinOneMulti = new Decimal(1)\r\n  if (player.upgrades[1] > 0.5) {\r\n    G.coinOneMulti = G.coinOneMulti.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[10] > 0.5) {\r\n    G.coinOneMulti = G.coinOneMulti.times(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)))\r\n  }\r\n  if (player.upgrades[56] > 0.5) {\r\n    G.coinOneMulti = G.coinOneMulti.times('1e5000')\r\n  }\r\n\r\n  G.coinTwoMulti = new Decimal(1)\r\n  if (player.upgrades[2] > 0.5) {\r\n    G.coinTwoMulti = G.coinTwoMulti.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[13] > 0.5) {\r\n    G.coinTwoMulti = G.coinTwoMulti.times(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)))\r\n  }\r\n  if (player.upgrades[19] > 0.5) {\r\n    G.coinTwoMulti = G.coinTwoMulti.times(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1)))\r\n  }\r\n  if (player.upgrades[57] > 0.5) {\r\n    G.coinTwoMulti = G.coinTwoMulti.times('1e7500')\r\n  }\r\n\r\n  G.coinThreeMulti = new Decimal(1)\r\n  if (player.upgrades[3] > 0.5) {\r\n    G.coinThreeMulti = G.coinThreeMulti.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[18] > 0.5) {\r\n    G.coinThreeMulti = G.coinThreeMulti.times(Decimal.min(1e125, player.transcendShards.add(1)))\r\n  }\r\n  if (player.upgrades[58] > 0.5) {\r\n    G.coinThreeMulti = G.coinThreeMulti.times('1e15000')\r\n  }\r\n\r\n  G.coinFourMulti = new Decimal(1)\r\n  if (player.upgrades[4] > 0.5) {\r\n    G.coinFourMulti = G.coinFourMulti.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[17] > 0.5) {\r\n    G.coinFourMulti = G.coinFourMulti.times(1e100)\r\n  }\r\n  if (player.upgrades[59] > 0.5) {\r\n    G.coinFourMulti = G.coinFourMulti.times('1e25000')\r\n  }\r\n\r\n  G.coinFiveMulti = new Decimal(1)\r\n  if (player.upgrades[5] > 0.5) {\r\n    G.coinFiveMulti = G.coinFiveMulti.times(first6CoinUp)\r\n  }\r\n  if (player.upgrades[60] > 0.5) {\r\n    G.coinFiveMulti = G.coinFiveMulti.times('1e35000')\r\n  }\r\n\r\n  G.globalCrystalMultiplier = new Decimal(1)\r\n  if (player.achievements[36] > 0.5) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(2)\r\n  }\r\n  if (player.achievements[37] > 0.5 && player.prestigePoints.gte(10)) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.log(player.prestigePoints.add(1), 10))\r\n  }\r\n  if (player.achievements[44] > 0.5) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier\r\n      .times(Decimal.pow(G.rune3level / 2 * G.effectiveLevelMult, 2)\r\n        .times(Decimal.pow(2, G.rune3level * G.effectiveLevelMult / 2 - 8))\r\n        .add(1))\r\n  }\r\n  if (player.upgrades[36] > 0.5) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.min('1e5000', Decimal.pow(player.prestigePoints, 1 / 500)))\r\n  }\r\n  if (player.upgrades[63] > 0.5) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.min('1e6000', Decimal.pow(player.reincarnationPoints.add(1), 6)))\r\n  }\r\n  if (player.researches[39] > 0.5) {\r\n    G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(G.reincarnationMultiplier, 1 / 50))\r\n  }\r\n\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.min(Decimal.pow(10, 50 + 2 * player.crystalUpgrades[0]), Decimal.pow(1.05, player.achievementPoints * player.crystalUpgrades[0])))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.min(Decimal.pow(10, 100 + 5 * player.crystalUpgrades[1]), Decimal.pow(Decimal.log(player.coins.add(1), 10), player.crystalUpgrades[1] / 3)))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(1 + Math.min(0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4), 0.001 * player.crystalUpgrades[2]), player.firstOwnedDiamonds + player.secondOwnedDiamonds + player.thirdOwnedDiamonds + player.fourthOwnedDiamonds + player.fifthOwnedDiamonds))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(1.01, (player.challengecompletions[1] + player.challengecompletions[2] + player.challengecompletions[3] + player.challengecompletions[4] + player.challengecompletions[5]) * player.crystalUpgrades[4]))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(10, CalcECC('transcend', player.challengecompletions[5])))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(1e4, player.researches[5] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(2.5, player.researches[26]))\r\n  G.globalCrystalMultiplier = G.globalCrystalMultiplier.times(Decimal.pow(2.5, player.researches[27]))\r\n\r\n  G.globalMythosMultiplier = new Decimal(1)\r\n\r\n  if (player.upgrades[37] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2))\r\n  }\r\n  if (player.upgrades[42] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)))\r\n  }\r\n  if (player.upgrades[47] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(1.05, player.achievementPoints)).times(player.achievementPoints + 1)\r\n  }\r\n  if (player.upgrades[51] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(G.totalAcceleratorBoost, 2))\r\n  }\r\n  if (player.upgrades[52] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(G.globalMythosMultiplier, 0.025))\r\n  }\r\n  if (player.upgrades[64] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(player.reincarnationPoints.add(1), 2))\r\n  }\r\n  if (player.researches[40] > 0.5) {\r\n    G.globalMythosMultiplier = G.globalMythosMultiplier.times(Decimal.pow(G.reincarnationMultiplier, 1 / 250))\r\n  }\r\n  G.grandmasterMultiplier = new Decimal(1)\r\n  G.totalMythosOwned = player.firstOwnedMythos + player.secondOwnedMythos + player.thirdOwnedMythos + player.fourthOwnedMythos + player.fifthOwnedMythos\r\n\r\n  G.mythosBuildingPower = 1 + (CalcECC('transcend', player.challengecompletions[3]) / 200)\r\n  G.challengeThreeMultiplier = Decimal.pow(G.mythosBuildingPower, G.totalMythosOwned)\r\n\r\n  G.grandmasterMultiplier = G.grandmasterMultiplier.times(G.challengeThreeMultiplier)\r\n\r\n  G.mythosupgrade13 = new Decimal(1)\r\n  G.mythosupgrade14 = new Decimal(1)\r\n  G.mythosupgrade15 = new Decimal(1)\r\n  if (player.upgrades[53] === 1) {\r\n    G.mythosupgrade13 = G.mythosupgrade13.times(Decimal.min('1e1250', Decimal.pow(G.acceleratorEffect, 1 / 125)))\r\n  }\r\n  if (player.upgrades[54] === 1) {\r\n    G.mythosupgrade14 = G.mythosupgrade14.times(Decimal.min('1e2000', Decimal.pow(G.multiplierEffect, 1 / 180)))\r\n  }\r\n  if (player.upgrades[55] === 1) {\r\n    G.mythosupgrade15 = G.mythosupgrade15.times(Decimal.pow('1e1000', Math.min(1000, G.buildingPower - 1)))\r\n  }\r\n\r\n  G.globalConstantMult = new Decimal('1')\r\n  G.globalConstantMult = G.globalConstantMult.times(Decimal.pow(1.05 + 0.01 * player.achievements[270] + 0.001 * player.platonicUpgrades[18], player.constantUpgrades[1]))\r\n  G.globalConstantMult = G.globalConstantMult.times(Decimal.pow(1 + 0.001 * Math.min(100 + 10 * player.achievements[270] + 10 * player.shopUpgrades.constantEX + 1000 * (G.challenge15Rewards.exponent - 1) + 3 * player.platonicUpgrades[18], player.constantUpgrades[2]), ascendBuildingDR()))\r\n  G.globalConstantMult = G.globalConstantMult.times(1 + 2 / 100 * player.researches[139])\r\n  G.globalConstantMult = G.globalConstantMult.times(1 + 3 / 100 * player.researches[154])\r\n  G.globalConstantMult = G.globalConstantMult.times(1 + 4 / 100 * player.researches[169])\r\n  G.globalConstantMult = G.globalConstantMult.times(1 + 5 / 100 * player.researches[184])\r\n  G.globalConstantMult = G.globalConstantMult.times(1 + 10 / 100 * player.researches[199])\r\n  G.globalConstantMult = G.globalConstantMult.times(G.challenge15Rewards.constantBonus)\r\n  if (player.platonicUpgrades[5] > 0) {\r\n    G.globalConstantMult = G.globalConstantMult.times(2)\r\n  }\r\n  if (player.platonicUpgrades[10] > 0) {\r\n    G.globalConstantMult = G.globalConstantMult.times(10)\r\n  }\r\n  if (player.platonicUpgrades[15] > 0) {\r\n    G.globalConstantMult = G.globalConstantMult.times(1e250)\r\n  }\r\n  G.globalConstantMult = G.globalConstantMult.times(Decimal.pow(player.overfluxPowder + 1, 10 * player.platonicUpgrades[16]))\r\n}\r\n\r\nexport const resourceGain = (dt: number): void => {\r\n\r\n  calculateTotalCoinOwned()\r\n  calculateTotalAcceleratorBoost()\r\n\r\n  updateAllTick()\r\n  updateAllMultiplier()\r\n  multipliers()\r\n  calculatetax()\r\n  if (G.produceTotal.gte(0.001)) {\r\n    const addcoin = (Decimal.min(G.produceTotal.dividedBy(G.taxdivisor), Decimal.pow(10, G.maxexponent - Decimal.log(G.taxdivisorcheck, 10)))).times(dt / 0.025)\r\n    player.coins = player.coins.add(addcoin)\r\n    player.coinsThisPrestige = player.coinsThisPrestige.add(addcoin)\r\n    player.coinsThisTranscension = player.coinsThisTranscension.add(addcoin)\r\n    player.coinsThisReincarnation = player.coinsThisReincarnation.add(addcoin)\r\n    player.coinsTotal = player.coinsTotal.add(addcoin)\r\n  }\r\n\r\n  resetCurrency()\r\n  if (player.upgrades[93] === 1 && player.coinsThisPrestige.gte(1e16)) {\r\n    player.prestigePoints = player.prestigePoints.add(Decimal.floor(G.prestigePointGain.dividedBy(4000).times(dt / 0.025)))\r\n  }\r\n  if (player.upgrades[100] === 1 && player.coinsThisTranscension.gte(1e100)) {\r\n    player.transcendPoints = player.transcendPoints.add(Decimal.floor(G.transcendPointGain.dividedBy(4000).times(dt / 0.025)))\r\n  }\r\n  if (player.cubeUpgrades[28] > 0 && player.transcendShards.gte(1e300)) {\r\n    player.reincarnationPoints = player.reincarnationPoints.add(Decimal.floor(G.reincarnationPointGain.dividedBy(4000).times(dt / 0.025)))\r\n  }\r\n  G.produceFirstDiamonds = player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).times(player.firstProduceDiamonds).times(G.globalCrystalMultiplier)\r\n  G.produceSecondDiamonds = player.secondGeneratedDiamonds.add(player.secondOwnedDiamonds).times(player.secondProduceDiamonds).times(G.globalCrystalMultiplier)\r\n  G.produceThirdDiamonds = player.thirdGeneratedDiamonds.add(player.thirdOwnedDiamonds).times(player.thirdProduceDiamonds).times(G.globalCrystalMultiplier)\r\n  G.produceFourthDiamonds = player.fourthGeneratedDiamonds.add(player.fourthOwnedDiamonds).times(player.fourthProduceDiamonds).times(G.globalCrystalMultiplier)\r\n  G.produceFifthDiamonds = player.fifthGeneratedDiamonds.add(player.fifthOwnedDiamonds).times(player.fifthProduceDiamonds).times(G.globalCrystalMultiplier)\r\n\r\n  player.fourthGeneratedDiamonds = player.fourthGeneratedDiamonds.add(G.produceFifthDiamonds.times(dt / 0.025))\r\n  player.thirdGeneratedDiamonds = player.thirdGeneratedDiamonds.add(G.produceFourthDiamonds.times(dt / 0.025))\r\n  player.secondGeneratedDiamonds = player.secondGeneratedDiamonds.add(G.produceThirdDiamonds.times(dt / 0.025))\r\n  player.firstGeneratedDiamonds = player.firstGeneratedDiamonds.add(G.produceSecondDiamonds.times(dt / 0.025))\r\n  G.produceDiamonds = G.produceFirstDiamonds\r\n\r\n  if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\r\n    player.prestigeShards = player.prestigeShards.add(G.produceDiamonds.times(dt / 0.025))\r\n  }\r\n\r\n  G.produceFifthMythos = player.fifthGeneratedMythos.add(player.fifthOwnedMythos).times(player.fifthProduceMythos).times(G.globalMythosMultiplier)\r\n    .times(G.grandmasterMultiplier)\r\n    .times(G.mythosupgrade15)\r\n  G.produceFourthMythos = player.fourthGeneratedMythos.add(player.fourthOwnedMythos).times(player.fourthProduceMythos).times(G.globalMythosMultiplier)\r\n  G.produceThirdMythos = player.thirdGeneratedMythos.add(player.thirdOwnedMythos).times(player.thirdProduceMythos).times(G.globalMythosMultiplier)\r\n    .times(G.mythosupgrade14)\r\n  G.produceSecondMythos = player.secondGeneratedMythos.add(player.secondOwnedMythos).times(player.secondProduceMythos).times(G.globalMythosMultiplier)\r\n  G.produceFirstMythos = player.firstGeneratedMythos.add(player.firstOwnedMythos).times(player.firstProduceMythos).times(G.globalMythosMultiplier)\r\n    .times(G.mythosupgrade13)\r\n  player.fourthGeneratedMythos = player.fourthGeneratedMythos.add(G.produceFifthMythos.times(dt / 0.025))\r\n  player.thirdGeneratedMythos = player.thirdGeneratedMythos.add(G.produceFourthMythos.times(dt / 0.025))\r\n  player.secondGeneratedMythos = player.secondGeneratedMythos.add(G.produceThirdMythos.times(dt / 0.025))\r\n  player.firstGeneratedMythos = player.firstGeneratedMythos.add(G.produceSecondMythos.times(dt / 0.025))\r\n\r\n\r\n  G.produceMythos = new Decimal('0')\r\n  G.produceMythos = (player.firstGeneratedMythos.add(player.firstOwnedMythos)).times(player.firstProduceMythos).times(G.globalMythosMultiplier)\r\n    .times(G.mythosupgrade13)\r\n  G.producePerSecondMythos = G.produceMythos.times(40)\r\n\r\n  let pm = new Decimal('1')\r\n  if (player.upgrades[67] > 0.5) {\r\n    pm = pm.times(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles))\r\n  }\r\n  G.produceFifthParticles = player.fifthGeneratedParticles.add(player.fifthOwnedParticles).times(player.fifthProduceParticles)\r\n  G.produceFourthParticles = player.fourthGeneratedParticles.add(player.fourthOwnedParticles).times(player.fourthProduceParticles)\r\n  G.produceThirdParticles = player.thirdGeneratedParticles.add(player.thirdOwnedParticles).times(player.thirdProduceParticles)\r\n  G.produceSecondParticles = player.secondGeneratedParticles.add(player.secondOwnedParticles).times(player.secondProduceParticles)\r\n  G.produceFirstParticles = player.firstGeneratedParticles.add(player.firstOwnedParticles).times(player.firstProduceParticles).times(pm)\r\n  player.fourthGeneratedParticles = player.fourthGeneratedParticles.add(G.produceFifthParticles.times(dt / 0.025))\r\n  player.thirdGeneratedParticles = player.thirdGeneratedParticles.add(G.produceFourthParticles.times(dt / 0.025))\r\n  player.secondGeneratedParticles = player.secondGeneratedParticles.add(G.produceThirdParticles.times(dt / 0.025))\r\n  player.firstGeneratedParticles = player.firstGeneratedParticles.add(G.produceSecondParticles.times(dt / 0.025))\r\n\r\n  G.produceParticles = new Decimal('0')\r\n  G.produceParticles = (player.firstGeneratedParticles.add(player.firstOwnedParticles)).times(player.firstProduceParticles).times(pm)\r\n  G.producePerSecondParticles = G.produceParticles.times(40)\r\n\r\n  if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\r\n    player.transcendShards = player.transcendShards.add(G.produceMythos.times(dt / 0.025))\r\n  }\r\n  if (player.currentChallenge.reincarnation !== 10) {\r\n    player.reincarnationShards = player.reincarnationShards.add(G.produceParticles.times(dt / 0.025))\r\n  }\r\n\r\n  createAnts(dt)\r\n  for (let i = 1; i <= 5; i++) {\r\n    G.ascendBuildingProduction[G.ordinals[5 - i as ZeroToFour]] = (player[`ascendBuilding${6 - i as OneToFive}` as const].generated).add(player[`ascendBuilding${6 - i as OneToFive}` as const].owned).times(player[`ascendBuilding${i as OneToFive}` as const].multiplier).times(G.globalConstantMult)\r\n\r\n    if (i !== 5) {\r\n      const fiveMinusI = 5 - i as 1|2|3|4\r\n      player[`ascendBuilding${fiveMinusI}` as const].generated = player[`ascendBuilding${fiveMinusI}` as const].generated\r\n        .add(G.ascendBuildingProduction[G.ordinals[fiveMinusI]].times(dt))\r\n    }\r\n  }\r\n\r\n  player.ascendShards = player.ascendShards.add(G.ascendBuildingProduction.first.times(dt))\r\n\r\n  if (player.ascensionCount > 0) {\r\n    ascensionAchievementCheck(2)\r\n  }\r\n\r\n  if (player.researches[71] > 0.5 && player.challengecompletions[1] < (Math.min(player.highestchallengecompletions[1], 25 + 5 * player.researches[66] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.25 * G.challengeBaseRequirements[0] * Math.pow(1 + player.challengecompletions[1], 2)))) {\r\n    player.challengecompletions[1] += 1\r\n    challengeachievementcheck(1, true)\r\n    updateChallengeLevel(1)\r\n  }\r\n  if (player.researches[72] > 0.5 && player.challengecompletions[2] < (Math.min(player.highestchallengecompletions[2], 25 + 5 * player.researches[67] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.6 * G.challengeBaseRequirements[1] * Math.pow(1 + player.challengecompletions[2], 2)))) {\r\n    player.challengecompletions[2] += 1\r\n    challengeachievementcheck(2, true)\r\n    updateChallengeLevel(2)\r\n  }\r\n  if (player.researches[73] > 0.5 && player.challengecompletions[3] < (Math.min(player.highestchallengecompletions[3], 25 + 5 * player.researches[68] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.7 * G.challengeBaseRequirements[2] * Math.pow(1 + player.challengecompletions[3], 2)))) {\r\n    player.challengecompletions[3] += 1\r\n    challengeachievementcheck(3, true)\r\n    updateChallengeLevel(3)\r\n  }\r\n  if (player.researches[74] > 0.5 && player.challengecompletions[4] < (Math.min(player.highestchallengecompletions[4], 25 + 5 * player.researches[69] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.45 * G.challengeBaseRequirements[3] * Math.pow(1 + player.challengecompletions[4], 2)))) {\r\n    player.challengecompletions[4] += 1\r\n    challengeachievementcheck(4, true)\r\n    updateChallengeLevel(4)\r\n  }\r\n  if (player.researches[75] > 0.5 && player.challengecompletions[5] < (Math.min(player.highestchallengecompletions[5], 25 + 5 * player.researches[70] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 2 * G.challengeBaseRequirements[4] * Math.pow(1 + player.challengecompletions[5], 2)))) {\r\n    player.challengecompletions[5] += 1\r\n    challengeachievementcheck(5, true)\r\n    updateChallengeLevel(5)\r\n  }\r\n\r\n  const chal = player.currentChallenge.transcension\r\n  const reinchal = player.currentChallenge.reincarnation\r\n  const ascendchal = player.currentChallenge.ascension\r\n  if (chal !== 0) {\r\n    if (player.coinsThisTranscension.gte(challengeRequirement(chal, player.challengecompletions[chal], chal))) {\r\n      void resetCheck('transcensionChallenge', false)\r\n      G.autoChallengeTimerIncrement = 0\r\n    }\r\n  }\r\n  if (reinchal < 9 && reinchal !== 0) {\r\n    if (player.transcendShards.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\r\n      void resetCheck('reincarnationChallenge', false)\r\n      G.autoChallengeTimerIncrement = 0\r\n    }\r\n  }\r\n  if (reinchal >= 9) {\r\n    if (player.coins.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\r\n      void resetCheck('reincarnationChallenge', false)\r\n      G.autoChallengeTimerIncrement = 0\r\n    }\r\n  }\r\n  if (ascendchal !== 0 && ascendchal < 15) {\r\n    if (player.challengecompletions[10] >= (challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal) as number)) {\r\n      void resetCheck('ascensionChallenge', false)\r\n      challengeachievementcheck(ascendchal, true)\r\n    }\r\n  }\r\n  if (ascendchal === 15) {\r\n    if (player.coins.gte(challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal))) {\r\n      void resetCheck('ascensionChallenge', false)\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAntMultipliers = (): void => {\r\n  //Update 2.5.0: Updated to have a base of 10 instead of 1x\r\n  G.globalAntMult = new Decimal(10)\r\n  //Update 2.9.0: Updated to give a 5x multiplier no matter what\r\n  G.globalAntMult = G.globalAntMult.times(5)\r\n  G.globalAntMult = G.globalAntMult.times(1 + 1 / 2500 * Math.pow(G.rune5level * G.effectiveLevelMult * (1 + player.researches[84] / 200 * (1 + 1 * G.effectiveRuneSpiritPower[5] * calculateCorruptionPoints() / 400)), 2))\r\n  if (player.upgrades[76] === 1) {\r\n    G.globalAntMult = G.globalAntMult.times(5)\r\n  }\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1 + player.upgrades[77] / 250 + player.researches[96] / 5000 + player.cubeUpgrades[65] / 250, player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts))\r\n  G.globalAntMult = G.globalAntMult.times(1 + player.upgrades[78] * 0.005 * Math.pow(Math.log10(player.maxofferings + 1), 2))\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1.11 + player.researches[101] / 1000 + player.researches[162] / 10000, player.antUpgrades[0]! + G.bonusant1))\r\n  G.globalAntMult = G.globalAntMult.times(antSacrificePointsToMultiplier(player.antSacrificePoints))\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(Math.max(1, player.researchPoints), G.effectiveRuneBlessingPower[5]))\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1 + G.runeSum / 100, G.talisman6Power))\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])))\r\n  G.globalAntMult = G.globalAntMult.times(G.cubeBonusMultiplier[6])\r\n  if (player.achievements[169] === 1) {\r\n    G.globalAntMult = G.globalAntMult.times(Decimal.log(player.antPoints.add(10), 10))\r\n  }\r\n  if (player.achievements[171] === 1) {\r\n    G.globalAntMult = G.globalAntMult.times(1.16666)\r\n  }\r\n  if (player.achievements[172] === 1) {\r\n    G.globalAntMult = G.globalAntMult.times(1 + 2 * (1 - Math.pow(2, -Math.min(1, player.reincarnationcounter / 7200))))\r\n  }\r\n  if (player.upgrades[39] === 1) {\r\n    G.globalAntMult = G.globalAntMult.times(1.60)\r\n  }\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]))\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])))\r\n  if (player.researches[147] > 0) {\r\n    G.globalAntMult = G.globalAntMult.times(Decimal.log(player.antPoints.add(10), 10))\r\n  }\r\n  if (player.researches[177] > 0) {\r\n    G.globalAntMult = G.globalAntMult.times(Decimal.pow(Decimal.log(player.antPoints.add(10), 10), player.researches[177]))\r\n  }\r\n\r\n  if (player.currentChallenge.ascension === 12) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.5)\r\n  }\r\n  if (player.currentChallenge.ascension === 13) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.23)\r\n  }\r\n  if (player.currentChallenge.ascension === 14) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.2)\r\n  }\r\n\r\n  if (player.currentChallenge.ascension !== 15) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 1 - 0.9 / 90 * Math.min(99, sumContents(player.usedCorruptions)))\r\n  } else { // C15 used to have 9 corruptions set to 11, which above would provide a power of 0.01. Now it's hardcoded this way.\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.01)\r\n  }\r\n\r\n  G.globalAntMult = Decimal.pow(G.globalAntMult, G.extinctionMultiplier[player.usedCorruptions[7]])\r\n  G.globalAntMult = G.globalAntMult.times(G.challenge15Rewards.antSpeed)\r\n  //V2.5.0: Moved ant shop upgrade as 'uncorruptable'\r\n  G.globalAntMult = G.globalAntMult.times(Decimal.pow(1.2, player.shopUpgrades.antSpeed))\r\n\r\n\r\n  if (player.platonicUpgrades[12] > 0) {\r\n    G.globalAntMult = G.globalAntMult.times(Decimal.pow(1 + 1 / 100 * player.platonicUpgrades[12], sumContents(player.highestchallengecompletions)))\r\n  }\r\n  if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[10] > 0) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 1.25)\r\n  }\r\n  if (player.achievements[274] > 0) {\r\n    G.globalAntMult = G.globalAntMult.times(4.44)\r\n  }\r\n\r\n  if (player.usedCorruptions[7] >= 14) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.02)\r\n  }\r\n  if (player.usedCorruptions[7] >= 15) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.02)\r\n  }\r\n  if (player.usedCorruptions[7] >= 16) {\r\n    G.globalAntMult = Decimal.pow(G.globalAntMult, 0.02)\r\n  }\r\n\r\n  if (player.octeractUpgrades.octeractStarter.getEffect().bonus) {\r\n    G.globalAntMult = G.globalAntMult.times(100000)\r\n  }\r\n\r\n  if (player.highestSingularityCount >= 30) {\r\n    G.globalAntMult = G.globalAntMult.times(1000)\r\n  }\r\n\r\n  if (player.highestSingularityCount >= 70) {\r\n    G.globalAntMult = G.globalAntMult.times(1000)\r\n  }\r\n\r\n  if (player.highestSingularityCount >= 100) {\r\n    G.globalAntMult = G.globalAntMult.times(1e6)\r\n  }\r\n}\r\n\r\nexport const createAnts = (dt: number): void => {\r\n  updateAntMultipliers()\r\n  G.antEightProduce = player.eighthGeneratedAnts.add(player.eighthOwnedAnts).times(player.eighthProduceAnts).times(G.globalAntMult)\r\n  G.antSevenProduce = player.seventhGeneratedAnts.add(player.seventhOwnedAnts).times(player.seventhProduceAnts).times(G.globalAntMult)\r\n  G.antSixProduce = player.sixthGeneratedAnts.add(player.sixthOwnedAnts).times(player.sixthProduceAnts).times(G.globalAntMult)\r\n  G.antFiveProduce = player.fifthGeneratedAnts.add(player.fifthOwnedAnts).times(player.fifthProduceAnts).times(G.globalAntMult)\r\n  G.antFourProduce = player.fourthGeneratedAnts.add(player.fourthOwnedAnts).times(player.fourthProduceAnts).times(G.globalAntMult)\r\n  G.antThreeProduce = player.thirdGeneratedAnts.add(player.thirdOwnedAnts).times(player.thirdProduceAnts).times(G.globalAntMult)\r\n  G.antTwoProduce = player.secondGeneratedAnts.add(player.secondOwnedAnts).times(player.secondProduceAnts).times(G.globalAntMult)\r\n  G.antOneProduce = player.firstGeneratedAnts.add(player.firstOwnedAnts).times(player.firstProduceAnts).times(G.globalAntMult)\r\n  player.seventhGeneratedAnts = player.seventhGeneratedAnts.add(G.antEightProduce.times(dt / 1))\r\n  player.sixthGeneratedAnts = player.sixthGeneratedAnts.add(G.antSevenProduce.times(dt / 1))\r\n  player.fifthGeneratedAnts = player.fifthGeneratedAnts.add(G.antSixProduce.times(dt / 1))\r\n  player.fourthGeneratedAnts = player.fourthGeneratedAnts.add(G.antFiveProduce.times(dt / 1))\r\n  player.thirdGeneratedAnts = player.thirdGeneratedAnts.add(G.antFourProduce.times(dt / 1))\r\n  player.secondGeneratedAnts = player.secondGeneratedAnts.add(G.antThreeProduce.times(dt / 1))\r\n  player.firstGeneratedAnts = player.firstGeneratedAnts.add(G.antTwoProduce.times(dt / 1))\r\n\r\n  player.antPoints = player.antPoints.add(G.antOneProduce.times(dt / 1))\r\n}\r\n\r\nexport const resetCurrency = (): void => {\r\n  let prestigePow = 0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100\r\n  let transcendPow = 0.03\r\n\r\n  // Calculates the conversion exponent for resets (Challenges 5 and 10 reduce the exponent accordingly).\r\n  if (player.currentChallenge.transcension === 5) {\r\n    prestigePow = 0.01 / (1 + player.challengecompletions[5])\r\n    transcendPow = 0.001\r\n  }\r\n  if (player.currentChallenge.reincarnation === 10) {\r\n    prestigePow = (1e-4) / (1 + player.challengecompletions[10])\r\n    transcendPow = 0.001\r\n  }\r\n  prestigePow *= G.deflationMultiplier[player.usedCorruptions[6]]\r\n  //Prestige Point Formulae\r\n  G.prestigePointGain = Decimal.floor(Decimal.pow(player.coinsThisPrestige.dividedBy(1e12), prestigePow))\r\n  if (player.upgrades[16] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\r\n    G.prestigePointGain = G.prestigePointGain.times(Decimal.min(Decimal.pow(10, 1e33), Decimal.pow(G.acceleratorEffect, 1 / 3 * G.deflationMultiplier[player.usedCorruptions[6]])))\r\n  }\r\n\r\n  //Transcend Point Formulae\r\n  G.transcendPointGain = Decimal.floor(Decimal.pow(player.coinsThisTranscension.dividedBy(1e100), transcendPow))\r\n  if (player.upgrades[44] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\r\n    G.transcendPointGain = G.transcendPointGain.times(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)))\r\n  }\r\n\r\n  //Reincarnation Point Formulae\r\n  G.reincarnationPointGain = Decimal.floor(Decimal.pow(player.transcendShards.dividedBy(1e300), 0.01))\r\n  if (player.currentChallenge.reincarnation !== 0) {\r\n    G.reincarnationPointGain = Decimal.pow(G.reincarnationPointGain, 0.01)\r\n  }\r\n  if (player.achievements[50] === 1) {\r\n    G.reincarnationPointGain = G.reincarnationPointGain.times(2)\r\n  }\r\n  if (player.upgrades[65] > 0.5) {\r\n    G.reincarnationPointGain = G.reincarnationPointGain.times(5)\r\n  }\r\n  if (player.currentChallenge.ascension === 12) {\r\n    G.reincarnationPointGain = new Decimal('0')\r\n  }\r\n}\r\n\r\nexport const resetCheck = async (i: resetNames, manual = true, leaving = false): Promise<void> => {\r\n  if (i === 'prestige') {\r\n    if (player.coinsThisPrestige.gte(1e16) || G.prestigePointGain.gte(100)) {\r\n      if (manual) {\r\n        void resetConfirmation('prestige')\r\n      } else {\r\n        resetachievementcheck(1)\r\n        reset('prestige')\r\n      }\r\n    }\r\n  }\r\n  if (i === 'transcension') {\r\n    if ((player.coinsThisTranscension.gte(1e100) || G.transcendPointGain.gte(0.5)) && player.currentChallenge.transcension === 0) {\r\n      if (manual) {\r\n        void resetConfirmation('transcend')\r\n      }\r\n      if (!manual) {\r\n        resetachievementcheck(2)\r\n        reset('transcension')\r\n      }\r\n    }\r\n  }\r\n  if (i === 'transcensionChallenge' && player.currentChallenge.transcension !== 0) {\r\n    const q = player.currentChallenge.transcension\r\n    const maxCompletions = getMaxChallenges(q)\r\n    const reqCheck = (comp: number) => player.coinsThisTranscension.gte(challengeRequirement(q, comp, q))\r\n    if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\r\n      let maxInc = 1\r\n      if (player.shopUpgrades.instantChallenge > 0) {\r\n        maxInc = 10\r\n      }\r\n      if (player.shopUpgrades.instantChallenge2 > 0) {\r\n        maxInc += player.highestSingularityCount\r\n      }\r\n      if (player.currentChallenge.ascension === 13) {\r\n        maxInc = 1\r\n      }\r\n      let counter = 0\r\n      let comp = player.challengecompletions[q]\r\n      while (counter < maxInc) {\r\n        if (reqCheck(comp) && comp < maxCompletions) {\r\n          comp++\r\n        }\r\n        counter++\r\n      }\r\n      player.challengecompletions[q] = comp\r\n      challengeDisplay(q, false)\r\n      updateChallengeLevel(q)\r\n    }\r\n    if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n      while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n        player.highestchallengecompletions[q] += 1\r\n        highestChallengeRewards(q, player.highestchallengecompletions[q])\r\n      }\r\n      calculateCubeBlessings()\r\n    }\r\n    challengeachievementcheck(q)\r\n    if (!player.retrychallenges || manual || (player.autoChallengeRunning && player.challengecompletions[q] >= maxCompletions)) {\r\n      toggleAutoChallengeModeText('ENTER')\r\n      player.currentChallenge.transcension = 0\r\n      updateChallengeDisplay()\r\n    }\r\n    if (player.shopUpgrades.instantChallenge === 0 || leaving) {\r\n      reset('transcensionChallenge', false, 'leaveChallenge')\r\n      player.transcendCount -= 1\r\n    }\r\n  }\r\n\r\n  if (i === 'reincarnation') {\r\n    if (G.reincarnationPointGain.gt(0.5) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\r\n      if (manual) {\r\n        void resetConfirmation('reincarnate')\r\n      }\r\n      if (!manual) {\r\n        resetachievementcheck(3)\r\n        reset('reincarnation')\r\n      }\r\n    }\r\n  }\r\n  if (i === 'reincarnationChallenge' && player.currentChallenge.reincarnation !== 0) {\r\n    const q = player.currentChallenge.reincarnation\r\n    const maxCompletions = getMaxChallenges(q)\r\n    const reqCheck = (comp: number) => {\r\n      if (q <= 8) {\r\n        return player.transcendShards.gte(challengeRequirement(q, comp, q))\r\n      } else { // challenges 9 and 10\r\n        return player.coins.gte(challengeRequirement(q, comp, q))\r\n      }\r\n    }\r\n    if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\r\n      let maxInc = 1\r\n      if (player.shopUpgrades.instantChallenge > 0) {\r\n        maxInc = 10\r\n      }\r\n      if (player.shopUpgrades.instantChallenge2 > 0) {\r\n        maxInc += player.highestSingularityCount\r\n      }\r\n      if (player.currentChallenge.ascension === 13) {\r\n        maxInc = 1\r\n      }\r\n      let counter = 0\r\n      let comp = player.challengecompletions[q]\r\n      while (counter < maxInc) {\r\n        if (reqCheck(comp) && comp < maxCompletions) {\r\n          comp++\r\n        }\r\n        counter++\r\n      }\r\n      player.challengecompletions[q] = comp\r\n      challengeDisplay(q, false)\r\n      updateChallengeLevel(q)\r\n    }\r\n    if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n      while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n        player.highestchallengecompletions[q] += 1\r\n        highestChallengeRewards(q, player.highestchallengecompletions[q])\r\n      }\r\n      calculateHypercubeBlessings()\r\n      calculateTesseractBlessings()\r\n      calculateCubeBlessings()\r\n    }\r\n    challengeachievementcheck(q)\r\n    if (!player.retrychallenges || manual || (player.autoChallengeRunning && player.challengecompletions[q] >= maxCompletions)) {\r\n      toggleAutoChallengeModeText('ENTER')\r\n      player.currentChallenge.reincarnation = 0\r\n      if (player.shopUpgrades.instantChallenge > 0) {\r\n        for (let i = 1; i <= 5; i++) {\r\n          player.challengecompletions[i] = player.highestchallengecompletions[i]\r\n        }\r\n      }\r\n      updateChallengeDisplay()\r\n      calculateRuneLevels()\r\n      calculateAnts()\r\n    }\r\n    if (player.shopUpgrades.instantChallenge === 0 || leaving) {\r\n      reset('reincarnationChallenge', false, 'leaveChallenge')\r\n      player.reincarnationCount -= 1\r\n    }\r\n  }\r\n\r\n  if (i === 'ascension') {\r\n    if (player.achievements[141] > 0 && (!player.toggles[31] || player.challengecompletions[10] > 0)) {\r\n      if (manual) {\r\n        void resetConfirmation('ascend')\r\n      }\r\n    }\r\n  }\r\n\r\n  if (i === 'ascensionChallenge' && player.currentChallenge.ascension !== 0) {\r\n    let conf = true\r\n    if (manual) {\r\n      if (player.challengecompletions[11] === 0 || player.toggles[31]) {\r\n        conf = await Confirm(i18next.t('main.exitAscensionChallenge'))\r\n      }\r\n    }\r\n    if (!conf) {\r\n      return\r\n    }\r\n    const a = player.currentChallenge.ascension\r\n    const maxCompletions = getMaxChallenges(a)\r\n\r\n    if (a !== 0 && a < 15) {\r\n      if (player.challengecompletions[10] >= (challengeRequirement(a, player.challengecompletions[a], a) as number) && player.challengecompletions[a] < maxCompletions) {\r\n        player.challengecompletions[a] += 1\r\n        updateChallengeLevel(a)\r\n        challengeDisplay(a, false)\r\n      }\r\n      challengeachievementcheck(a, true)\r\n    }\r\n    if (a === 15) {\r\n      const c15SM = challenge15ScoreMultiplier()\r\n      if (player.coins.gte(challengeRequirement(a, player.challengecompletions[a], a)) && player.challengecompletions[a] < maxCompletions) {\r\n        player.challengecompletions[a] += 1\r\n        updateChallengeLevel(a)\r\n        challengeDisplay(a, false)\r\n      }\r\n      if ((manual || leaving || player.shopUpgrades.challenge15Auto > 0) && player.usedCorruptions.slice(2, 10).every((a) => a === 11)) {\r\n        if (player.coins.gte(Decimal.pow(10, player.challenge15Exponent / c15SM))) {\r\n          player.challenge15Exponent = Decimal.log(player.coins.add(1), 10) * c15SM\r\n          c15RewardUpdate()\r\n        }\r\n      }\r\n    }\r\n\r\n    if (player.challengecompletions[a] > player.highestchallengecompletions[a]) {\r\n      player.highestchallengecompletions[a] += 1\r\n      player.wowHypercubes.add(1)\r\n      if (player.highestchallengecompletions[a] >= maxCompletions) {\r\n        leaving = true\r\n      }\r\n    }\r\n\r\n    if (!player.retrychallenges || manual || leaving) {\r\n      if (!(!manual && (autoAscensionChallengeSweepUnlock() || !player.autoChallengeRunning) // If not autochallenge, don't reset\r\n                             && player.autoAscend && player.challengecompletions[11] > 0\r\n                             && player.cubeUpgrades[10] > 0)) {\r\n        player.currentChallenge.ascension = 0\r\n        updateChallengeDisplay()\r\n      }\r\n    }\r\n\r\n    if ((player.shopUpgrades.instantChallenge2 === 0 && a !== 15) || manual) {\r\n      reset('ascensionChallenge', false)\r\n    }\r\n  }\r\n\r\n  if (i === 'singularity') {\r\n    if (player.runelevels[6] === 0) {\r\n      return Alert(i18next.t('main.noAntiquity'))\r\n    }\r\n\r\n    const thankSing = 300\r\n\r\n    if (player.insideSingularityChallenge) {\r\n      return Alert(i18next.t('main.insideSingularityChallenge'))\r\n    }\r\n\r\n    if (player.singularityCount >= thankSing) {\r\n      return Alert(i18next.t('main.gameBeat'))\r\n    }\r\n\r\n    let confirmed = false\r\n    const nextSingularityNumber = player.singularityCount + 1 + getFastForwardTotalMultiplier()\r\n\r\n    if (!player.toggles[33] && player.singularityCount > 0) {\r\n      confirmed = await Confirm(i18next.t('main.singularityConfirm0', {\r\n        x: format(nextSingularityNumber),\r\n        y: format(calculateGoldenQuarkGain(), 2, true)\r\n      }))\r\n    } else {\r\n      await Alert(i18next.t('main.singularityMessage1', { x: format(player.singularityCount) }))\r\n      await Alert(i18next.t('main.singularityMessage2'))\r\n      await Alert(i18next.t('main.singularityMessage3'))\r\n      await Alert(i18next.t('main.singularityMessage4', {\r\n        x: format(nextSingularityNumber),\r\n        y: format(calculateGoldenQuarkGain(), 2, true),\r\n        z: format(player.worlds.BONUS)\r\n      }))\r\n      await Alert(i18next.t('main.singularityMessage5'))\r\n\r\n      confirmed = await Confirm(i18next.t('main.singularityConfirm1'))\r\n      if (confirmed) {\r\n        confirmed = await Confirm(i18next.t('main.singularityConfirm2'))\r\n      }\r\n      if (confirmed) {\r\n        confirmed = await Confirm(i18next.t('main.singularityConfirm3'))\r\n      }\r\n    }\r\n\r\n    if (!confirmed) {\r\n      return Alert(i18next.t('main.singularityCancelled'))\r\n    } else {\r\n      await singularity()\r\n      await saveSynergy()\r\n      return Alert(i18next.t('main.welcomeToSingularity', { x: format(player.singularityCount) }))\r\n    }\r\n  }\r\n}\r\n\r\nexport const resetConfirmation = async (i: string): Promise<void> => {\r\n  if (i === 'prestige') {\r\n    if (player.toggles[28]) {\r\n      const r = await Confirm(i18next.t('main.prestigePrompt'))\r\n      if (r) {\r\n        resetachievementcheck(1)\r\n        reset('prestige')\r\n      }\r\n    } else {\r\n      resetachievementcheck(1)\r\n      reset('prestige')\r\n    }\r\n  }\r\n  if (i === 'transcend') {\r\n    if (player.toggles[29]) {\r\n      const z = await Confirm(i18next.t('main.transcendPrompt'))\r\n      if (z) {\r\n        resetachievementcheck(2)\r\n        reset('transcension')\r\n      }\r\n    } else {\r\n      resetachievementcheck(2)\r\n      reset('transcension')\r\n    }\r\n  }\r\n  if (i === 'reincarnate') {\r\n    if (player.currentChallenge.ascension !== 12) {\r\n      if (player.toggles[30]) {\r\n        const z = await Confirm(i18next.t('main.reincarnatePrompt'))\r\n        if (z) {\r\n          resetachievementcheck(3)\r\n          reset('reincarnation')\r\n        }\r\n      } else {\r\n        resetachievementcheck(3)\r\n        reset('reincarnation')\r\n      }\r\n    }\r\n  }\r\n  if (i === 'ascend') {\r\n    const z = !player.toggles[31] ||\r\n                  await Confirm(i18next.t('main.ascendPrompt'))\r\n    if (z) {\r\n      reset('ascension')\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAll = (): void => {\r\n  G.uFourteenMulti = new Decimal(1)\r\n  G.uFifteenMulti = new Decimal(1)\r\n\r\n  if (player.upgrades[14] > 0.5) {\r\n    G.uFourteenMulti = Decimal.pow(1.15, G.freeAccelerator)\r\n  }\r\n  if (player.upgrades[15] > 0.5) {\r\n    G.uFifteenMulti = Decimal.pow(1.15, G.freeAccelerator)\r\n  }\r\n\r\n  if (!player.unlocks.coinone && player.coins.gte(500)) {\r\n    player.unlocks.coinone = true\r\n    revealStuff()\r\n  }\r\n  if (!player.unlocks.cointwo && player.coins.gte(10000)) {\r\n    player.unlocks.cointwo = true\r\n    revealStuff()\r\n  }\r\n  if (!player.unlocks.cointhree && player.coins.gte(100000)) {\r\n    player.unlocks.cointhree = true\r\n    revealStuff()\r\n  }\r\n  if (!player.unlocks.coinfour && player.coins.gte(4e6)) {\r\n    player.unlocks.coinfour = true\r\n    revealStuff()\r\n  }\r\n  if (player.achievements[169] === 0 && player.antPoints.gte(3)) {\r\n    achievementaward(169)\r\n  }\r\n  if (player.achievements[170] === 0 && player.antPoints.gte(1e5)) {\r\n    achievementaward(170)\r\n  }\r\n  if (player.achievements[171] === 0 && player.antPoints.gte(666666666)) {\r\n    achievementaward(171)\r\n  }\r\n  if (player.achievements[172] === 0 && player.antPoints.gte(1e20)) {\r\n    achievementaward(172)\r\n  }\r\n  if (player.achievements[173] === 0 && player.antPoints.gte(1e40)) {\r\n    achievementaward(173)\r\n  }\r\n  if (player.achievements[174] === 0 && player.antPoints.gte('1e500')) {\r\n    achievementaward(174)\r\n  }\r\n  if (player.achievements[175] === 0 && player.antPoints.gte('1e2500')) {\r\n    achievementaward(175)\r\n  }\r\n\r\n  if (player.researches[200] >= 1e5 && player.achievements[250] < 1) {\r\n    achievementaward(250)\r\n  }\r\n  if (player.cubeUpgrades[50] >= 1e5 && player.achievements[251] < 1) {\r\n    achievementaward(251)\r\n  }\r\n\r\n  //Autobuy \"Upgrades\" Tab\r\n  autoUpgrades()\r\n\r\n  //Autobuy \"Building\" Tab\r\n\r\n  if (player.toggles[1] && player.upgrades[81] === 1 && player.coins.gte(player.firstCostCoin)) {\r\n    buyMax(1, 'Coin')\r\n  }\r\n  if (player.toggles[2] && player.upgrades[82] === 1 && player.coins.gte(player.secondCostCoin)) {\r\n    buyMax(2, 'Coin')\r\n  }\r\n  if (player.toggles[3] && player.upgrades[83] === 1 && player.coins.gte(player.thirdCostCoin)) {\r\n    buyMax(3, 'Coin')\r\n  }\r\n  if (player.toggles[4] && player.upgrades[84] === 1 && player.coins.gte(player.fourthCostCoin)) {\r\n    buyMax(4, 'Coin')\r\n  }\r\n  if (player.toggles[5] && player.upgrades[85] === 1 && player.coins.gte(player.fifthCostCoin)) {\r\n    buyMax(5, 'Coin')\r\n  }\r\n  if (player.toggles[6] && player.upgrades[86] === 1 && player.coins.gte(player.acceleratorCost)) {\r\n    buyAccelerator(true)\r\n  }\r\n  if (player.toggles[7] && player.upgrades[87] === 1 && player.coins.gte(player.multiplierCost)) {\r\n    buyMultiplier(true)\r\n  }\r\n  if (player.toggles[8] && player.upgrades[88] === 1 && player.prestigePoints.gte(player.acceleratorBoostCost)) {\r\n    boostAccelerator(true)\r\n  }\r\n\r\n  //Autobuy \"Prestige\" Tab\r\n\r\n  if (player.toggles[10] && player.achievements[78] === 1 && player.prestigePoints.gte(player.firstCostDiamonds)) {\r\n    buyMax(1, 'Diamonds')\r\n  }\r\n  if (player.toggles[11] && player.achievements[85] === 1 && player.prestigePoints.gte(player.secondCostDiamonds)) {\r\n    buyMax(2, 'Diamonds')\r\n  }\r\n  if (player.toggles[12] && player.achievements[92] === 1 && player.prestigePoints.gte(player.thirdCostDiamonds)) {\r\n    buyMax(3, 'Diamonds')\r\n  }\r\n  if (player.toggles[13] && player.achievements[99] === 1 && player.prestigePoints.gte(player.fourthCostDiamonds)) {\r\n    buyMax(4, 'Diamonds')\r\n  }\r\n  if (player.toggles[14] && player.achievements[106] === 1 && player.prestigePoints.gte(player.fifthCostDiamonds)) {\r\n    buyMax(5, 'Diamonds')\r\n  }\r\n\r\n  let c = 0\r\n  c += Math.floor(G.rune3level / 16 * G.effectiveLevelMult) * 100 / 100\r\n  if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n    c += 10\r\n  }\r\n  if (player.achievements[79] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[0] + G.crystalUpgradeCostIncrement[0] * Math.floor(Math.pow(player.crystalUpgrades[0] - 0.5 - c, 2) / 2))))) {\r\n    buyCrystalUpgrades(1, true)\r\n  }\r\n  if (player.achievements[86] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[1] + G.crystalUpgradeCostIncrement[1] * Math.floor(Math.pow(player.crystalUpgrades[1] - 0.5 - c, 2) / 2))))) {\r\n    buyCrystalUpgrades(2, true)\r\n  }\r\n  if (player.achievements[93] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[2] + G.crystalUpgradeCostIncrement[2] * Math.floor(Math.pow(player.crystalUpgrades[2] - 0.5 - c, 2) / 2))))) {\r\n    buyCrystalUpgrades(3, true)\r\n  }\r\n  if (player.achievements[100] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[3] + G.crystalUpgradeCostIncrement[3] * Math.floor(Math.pow(player.crystalUpgrades[3] - 0.5 - c, 2) / 2))))) {\r\n    buyCrystalUpgrades(4, true)\r\n  }\r\n  if (player.achievements[107] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[4] + G.crystalUpgradeCostIncrement[4] * Math.floor(Math.pow(player.crystalUpgrades[4] - 0.5 - c, 2) / 2))))) {\r\n    buyCrystalUpgrades(5, true)\r\n  }\r\n\r\n  //Autobuy \"Transcension\" Tab\r\n\r\n  if (player.toggles[16] && player.upgrades[94] === 1 && player.transcendPoints.gte(player.firstCostMythos)) {\r\n    buyMax(1, 'Mythos')\r\n  }\r\n  if (player.toggles[17] && player.upgrades[95] === 1 && player.transcendPoints.gte(player.secondCostMythos)) {\r\n    buyMax(2, 'Mythos')\r\n  }\r\n  if (player.toggles[18] && player.upgrades[96] === 1 && player.transcendPoints.gte(player.thirdCostMythos)) {\r\n    buyMax(3, 'Mythos')\r\n  }\r\n  if (player.toggles[19] && player.upgrades[97] === 1 && player.transcendPoints.gte(player.fourthCostMythos)) {\r\n    buyMax(4, 'Mythos')\r\n  }\r\n  if (player.toggles[20] && player.upgrades[98] === 1 && player.transcendPoints.gte(player.fifthCostMythos)) {\r\n    buyMax(5, 'Mythos')\r\n  }\r\n\r\n  //Autobuy \"Reincarnation\" Tab\r\n\r\n  if (player.toggles[22] && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.firstCostParticles)) {\r\n    buyParticleBuilding(1, true)\r\n  }\r\n  if (player.toggles[23] && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.secondCostParticles)) {\r\n    buyParticleBuilding(2, true)\r\n  }\r\n  if (player.toggles[24] && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.thirdCostParticles)) {\r\n    buyParticleBuilding(3, true)\r\n  }\r\n  if (player.toggles[25] && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.fourthCostParticles)) {\r\n    buyParticleBuilding(4, true)\r\n  }\r\n  if (player.toggles[26] && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.fifthCostParticles)) {\r\n    buyParticleBuilding(5, true)\r\n  }\r\n\r\n  //Autobuy \"ascension\" tab\r\n  if (player.researches[175] > 0) {\r\n    for (let i = 1; i <= 10; i++) {\r\n      if (player.ascendShards.gte(getConstUpgradeMetadata(i).pop()!)) {\r\n        buyConstantUpgrades(i, true)\r\n      }\r\n    }\r\n  }\r\n\r\n  //Autobuy tesseract buildings (Mode: AMOUNT)\r\n  if (player.researches[190] > 0 && player.tesseractAutoBuyerToggle === 1 && player.resettoggle4 < 2) {\r\n    const ownedBuildings: TesseractBuildings = [null, null, null, null, null]\r\n    for (let i = 1; i <= 5; i++) {\r\n      if (player.autoTesseracts[i]) {\r\n        ownedBuildings[i-1] = player[`ascendBuilding${i as OneToFive}` as const].owned\r\n      }\r\n    }\r\n    const budget = Number(player.wowTesseracts) - player.tesseractAutoBuyerAmount\r\n    const buyToBuildings = calculateTessBuildingsInBudget(ownedBuildings, budget)\r\n    // Prioritise buying buildings from highest tier to lowest,\r\n    // in case there are any off-by-ones or floating point errors.\r\n    for (let i = 5; i >= 1; i--) {\r\n      const buyFrom = ownedBuildings[i-1]\r\n      const buyTo = buyToBuildings[i-1]\r\n      if (buyFrom !== null && buyTo !== null && buyTo !== buyFrom) {\r\n        buyTesseractBuilding(i as OneToFive, buyTo - buyFrom)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Talismans\r\n  if (player.researches[130] > 0 || player.researches[135] > 0) {\r\n    const talismansUnlocked = [\r\n      player.achievements[119] > 0,\r\n      player.achievements[126] > 0,\r\n      player.achievements[133] > 0,\r\n      player.achievements[140] > 0,\r\n      player.achievements[147] > 0,\r\n                player.antUpgrades[11]! > 0 || player.ascensionCount > 0,\r\n                player.shopUpgrades.shopTalisman > 0\r\n    ]\r\n    let upgradedTalisman = false\r\n\r\n    // First, we need to enhance all of the talismans. Then, we can fortify all of the talismans.\r\n    // If we were to do this in one loop, the players resources would be drained on individual expensive levels\r\n    // of early talismans before buying important enhances for the later ones. This results in drastically\r\n    // reduced overall gains when talisman resources are scarce.\r\n    if (player.autoEnhanceToggle && player.researches[135] > 0) {\r\n      for (let i = 0; i < talismansUnlocked.length; ++i) {\r\n        if (talismansUnlocked[i] && player.talismanRarity[i] < 6) {\r\n          upgradedTalisman = buyTalismanEnhance(i, true) || upgradedTalisman\r\n        }\r\n      }\r\n    }\r\n\r\n    if (player.autoFortifyToggle && player.researches[130] > 0) {\r\n      for (let i = 0; i < talismansUnlocked.length; ++i) {\r\n        const maxTalismanLevel = calculateMaxTalismanLevel(i)\r\n        if (talismansUnlocked[i] && player.talismanLevels[i] < maxTalismanLevel) {\r\n          upgradedTalisman = buyTalismanLevels(i, true) || upgradedTalisman\r\n        }\r\n      }\r\n    }\r\n\r\n    // Recalculate talisman-related upgrades and display on success\r\n    if (upgradedTalisman) {\r\n      updateTalismanInventory()\r\n      calculateRuneLevels()\r\n    }\r\n  }\r\n\r\n  //Generation\r\n  if (player.upgrades[101] > 0.5) {\r\n    player.fourthGeneratedCoin = player.fourthGeneratedCoin.add((player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G.uFifteenMulti).times(G.generatorPower))\r\n  }\r\n  if (player.upgrades[102] > 0.5) {\r\n    player.thirdGeneratedCoin = player.thirdGeneratedCoin.add((player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G.uFourteenMulti).times(G.generatorPower))\r\n  }\r\n  if (player.upgrades[103] > 0.5) {\r\n    player.secondGeneratedCoin = player.secondGeneratedCoin.add((player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G.generatorPower))\r\n  }\r\n  if (player.upgrades[104] > 0.5) {\r\n    player.firstGeneratedCoin = player.firstGeneratedCoin.add((player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G.generatorPower))\r\n  }\r\n  if (player.upgrades[105] > 0.5) {\r\n    player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(player.firstOwnedCoin)\r\n  }\r\n  let p = 1\r\n  p += 1 / 100 * (player.achievements[71] + player.achievements[72] + player.achievements[73] + player.achievements[74] + player.achievements[75] + player.achievements[76] + player.achievements[77])\r\n\r\n  let a = 0\r\n  if (player.upgrades[106] > 0.5) {\r\n    a += 0.10\r\n  }\r\n  if (player.upgrades[107] > 0.5) {\r\n    a += 0.15\r\n  }\r\n  if (player.upgrades[108] > 0.5) {\r\n    a += 0.25\r\n  }\r\n  if (player.upgrades[109] > 0.5) {\r\n    a += 0.25\r\n  }\r\n  if (player.upgrades[110] > 0.5) {\r\n    a += 0.25\r\n  }\r\n  a *= p\r\n\r\n  let b = 0\r\n  if (player.upgrades[111] > 0.5) {\r\n    b += 0.08\r\n  }\r\n  if (player.upgrades[112] > 0.5) {\r\n    b += 0.08\r\n  }\r\n  if (player.upgrades[113] > 0.5) {\r\n    b += 0.08\r\n  }\r\n  if (player.upgrades[114] > 0.5) {\r\n    b += 0.08\r\n  }\r\n  if (player.upgrades[115] > 0.5) {\r\n    b += 0.08\r\n  }\r\n  b *= p\r\n\r\n  c = 0\r\n  if (player.upgrades[116] > 0.5) {\r\n    c += 0.05\r\n  }\r\n  if (player.upgrades[117] > 0.5) {\r\n    c += 0.05\r\n  }\r\n  if (player.upgrades[118] > 0.5) {\r\n    c += 0.05\r\n  }\r\n  if (player.upgrades[119] > 0.5) {\r\n    c += 0.05\r\n  }\r\n  if (player.upgrades[120] > 0.5) {\r\n    c += 0.05\r\n  }\r\n  c *= p\r\n\r\n  if (a !== 0) {\r\n    player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(Decimal.pow(player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).add(1), a))\r\n  }\r\n  if (b !== 0) {\r\n    player.fifthGeneratedDiamonds = player.fifthGeneratedDiamonds.add(Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), b))\r\n  }\r\n  if (c !== 0) {\r\n    player.fifthGeneratedMythos = player.fifthGeneratedMythos.add(Decimal.pow(player.firstGeneratedParticles.add(player.firstOwnedParticles).add(1), c))\r\n  }\r\n\r\n  if (player.runeshards > player.maxofferings) {\r\n    player.maxofferings = player.runeshards\r\n  }\r\n  if (player.researchPoints > player.maxobtainium) {\r\n    player.maxobtainium = player.researchPoints\r\n  }\r\n\r\n  if (isNaN(player.runeshards)) {\r\n    player.runeshards = 0\r\n  }\r\n  if (player.runeshards > 1e300) {\r\n    player.runeshards = 1e300\r\n  }\r\n  if (isNaN(player.researchPoints)) {\r\n    player.researchPoints = 0\r\n  }\r\n  if (player.researchPoints > 1e300) {\r\n    player.researchPoints = 1e300\r\n  }\r\n\r\n  G.effectiveLevelMult = 1\r\n  G.effectiveLevelMult *= (1 + player.researches[4] / 10 * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))) //Research 1x4\r\n  G.effectiveLevelMult *= (1 + player.researches[21] / 100) //Research 2x6\r\n  G.effectiveLevelMult *= (1 + player.researches[90] / 100) //Research 4x15\r\n  G.effectiveLevelMult *= (1 + player.researches[131] / 200) //Research 6x6\r\n  G.effectiveLevelMult *= (1 + player.researches[161] / 200 * 3 / 5) //Research 7x11\r\n  G.effectiveLevelMult *= (1 + player.researches[176] / 200 * 2 / 5) //Research 8x1\r\n  G.effectiveLevelMult *= (1 + player.researches[191] / 200 * 1 / 5) //Research 8x16\r\n  G.effectiveLevelMult *= (1 + player.researches[146] / 200 * 4 / 5) //Research 6x21\r\n  G.effectiveLevelMult *= (1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]))\r\n  G.effectiveLevelMult *= G.challenge15Rewards.runeBonus\r\n\r\n  G.optimalOfferingTimer = 600 + 30 * player.researches[85] + 0.4 * G.rune5level + 120 * player.shopUpgrades.offeringEX\r\n  G.optimalObtainiumTimer = 3600 + 120 * player.shopUpgrades.obtainiumEX\r\n  autoBuyAnts()\r\n\r\n  if (player.autoAscend && player.challengecompletions[11] > 0 && player.cubeUpgrades[10] > 0 && player.currentChallenge.reincarnation !== 10) {\r\n    let ascension = false\r\n    if (player.autoAscendMode === 'c10Completions' && player.challengecompletions[10] >= Math.max(1, player.autoAscendThreshold)) {\r\n      ascension = true\r\n    }\r\n    if (player.autoAscendMode === 'realAscensionTime' && player.ascensionCounterRealReal >= Math.max(0.1, player.autoAscendThreshold)) {\r\n      ascension = true\r\n    }\r\n    if (ascension && player.challengecompletions[10] > 0) {\r\n      // Auto Ascension and Auto Challenge Sweep enables rotation of the Ascension Challenge\r\n      if (autoAscensionChallengeSweepUnlock() && player.currentChallenge.ascension !== 0 && player.retrychallenges && player.researches[150] === 1 && player.autoChallengeRunning) {\r\n        let nextChallenge = getNextChallenge(player.currentChallenge.ascension + 1, false, 11, 15)\r\n        if (nextChallenge <= 15 && player.currentChallenge.ascension !== nextChallenge) {\r\n          void resetCheck('ascensionChallenge', false, true)\r\n          player.currentChallenge.ascension = nextChallenge\r\n          reset('ascensionChallenge', false)\r\n        } else {\r\n          nextChallenge = getNextChallenge(player.currentChallenge.ascension + 1, true, 11, 15)\r\n          void resetCheck('ascensionChallenge', false, true)\r\n          player.currentChallenge.ascension = nextChallenge <= 15 ? nextChallenge : 0\r\n          reset('ascensionChallenge', false)\r\n        }\r\n      } else {\r\n        if (player.currentChallenge.ascension !== 0) {\r\n          void resetCheck('ascensionChallenge', false, true)\r\n          reset('ascensionChallenge', false)\r\n        } else {\r\n          reset('ascension', false)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let metaData = null\r\n  if (player.researches[175] > 0) {\r\n    for (let i = 1; i <= 10; i++) {\r\n      metaData = getConstUpgradeMetadata(i)\r\n      if (player.ascendShards.gte(metaData[1])) {\r\n        buyConstantUpgrades(i, true)\r\n      }\r\n    }\r\n  }\r\n\r\n  const reductionValue = getReductionValue()\r\n  if (reductionValue !== G.prevReductionValue) {\r\n    G.prevReductionValue = reductionValue\r\n    const resources = ['Coin', 'Diamonds', 'Mythos'] as const\r\n\r\n    for (let res = 0; res < resources.length; ++res) {\r\n      const resource = resources[res]\r\n      for (let ord = 0; ord < 5; ++ord) {\r\n        const num = G.ordinals[ord as ZeroToFour]\r\n        player[`${num}Cost${resource}` as const] = getCost(ord+1 as OneToFive, resource, player[`${num}Owned${resource}` as const] + 1, reductionValue)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i <= 4; i++) {\r\n      const particleOriginalCost = [1, 1e2, 1e4, 1e8, 1e16]\r\n      const num = G.ordinals[i as ZeroToFour]\r\n      const buyTo = player[`${num}OwnedParticles` as const] + 1\r\n      player[`${num}CostParticles` as const] = new Decimal(Decimal.pow(2, buyTo - 1).times(Decimal.pow(1.001, Math.max(0, (buyTo - 325000)) * Math.max(0, (buyTo - 325000) + 1) / 2))).times(particleOriginalCost[i])\r\n    }\r\n  }\r\n\r\n  // Challenge 15 autoupdate\r\n  if (player.shopUpgrades.challenge15Auto > 0 && player.currentChallenge.ascension === 15 && player.usedCorruptions.slice(2, 10).every((a) => a === 11)) {\r\n    const c15SM = challenge15ScoreMultiplier()\r\n    if (player.coins.gte(Decimal.pow(10, player.challenge15Exponent / c15SM))) {\r\n      player.challenge15Exponent = Decimal.log(player.coins.add(1), 10) * c15SM\r\n      c15RewardUpdate()\r\n    }\r\n  }\r\n}\r\n\r\nexport const fastUpdates = (): void => {\r\n  updateAll()\r\n  htmlInserts()\r\n}\r\n\r\nexport const slowUpdates = (): void => {\r\n  buttoncolorchange()\r\n  buildingAchievementCheck()\r\n}\r\n\r\nexport const constantIntervals = (): void => {\r\n  setInterval(saveSynergy, 5000)\r\n  setInterval(slowUpdates, 200)\r\n  setInterval(fastUpdates, 50)\r\n\r\n  if (!G.timeWarp) {\r\n    exitOffline()\r\n  }\r\n}\r\n\r\nlet lastUpdate = 0\r\n\r\nexport const createTimer = (): void => {\r\n  lastUpdate = performance.now()\r\n  setInterval(tick, 5)\r\n}\r\n\r\nconst dt = 5\r\nconst filterStrength = 20\r\nlet deltaMean = 0\r\n\r\nconst loadingDate = new Date()\r\nconst loadingBasePerfTick = performance.now()\r\n\r\n// performance.now() doesn't always reset on reload, so we capture a \"base value\"\r\n// to keep things stable\r\n// The returned time is pinned to when the page itself was loaded to remain\r\n// resilient against changed system clocks\r\nexport const getTimePinnedToLoadDate = () => {\r\n  return loadingDate.getTime() + (performance.now() - loadingBasePerfTick)\r\n}\r\n\r\nconst tick = () => {\r\n  const now = performance.now()\r\n  let delta = now - lastUpdate\r\n  // compute pseudo-average delta cf. https://stackoverflow.com/a/5111475/343834\r\n  deltaMean += (delta - deltaMean) / filterStrength\r\n  let dtEffective\r\n  while (delta > 5) {\r\n    // tack will compute dtEffective milliseconds of game time\r\n    dtEffective = dt\r\n    // If the mean lag (deltaMean) is more than a whole frame (16ms), compensate by computing deltaMean - dt ms, up to 1 hour\r\n    dtEffective += deltaMean > 16 ? Math.min(3600 * 1000, deltaMean - dt) : 0\r\n    // compute at max delta ms to avoid negative delta\r\n    dtEffective = Math.min(delta, dtEffective)\r\n    // run tack and record timings\r\n    tack(dtEffective / 1000)\r\n    lastUpdate += dtEffective\r\n    delta -= dtEffective\r\n  }\r\n}\r\n\r\nconst tack = (dt: number) => {\r\n  if (!G.timeWarp) {\r\n    //Adds Resources (coins, ants, etc)\r\n    const timeMult = calculateTimeAcceleration().mult\r\n    resourceGain(dt * timeMult)\r\n    //Adds time (in milliseconds) to all reset functions, and quarks timer.\r\n    addTimers('prestige', dt)\r\n    addTimers('transcension', dt)\r\n    addTimers('reincarnation', dt)\r\n    addTimers('ascension', dt)\r\n    addTimers('quarks', dt)\r\n    addTimers('goldenQuarks', dt)\r\n    addTimers('octeracts', dt)\r\n    addTimers('singularity', dt)\r\n    addTimers('autoPotion', dt)\r\n\r\n    //Triggers automatic rune sacrifice (adds milliseconds to payload timer)\r\n    if (player.shopUpgrades.offeringAuto > 0 && player.autoSacrificeToggle) {\r\n      automaticTools('runeSacrifice', dt)\r\n    }\r\n\r\n    //Triggers automatic ant sacrifice (adds milliseonds to payload timers)\r\n    if (player.achievements[173] === 1) {\r\n      automaticTools('antSacrifice', dt)\r\n    }\r\n\r\n    /*Triggers automatic obtainium gain if research [2x11] is unlocked,\r\n        Otherwise it just calculates obtainium multiplier values. */\r\n    if (player.researches[61] === 1) {\r\n      automaticTools('addObtainium', dt)\r\n    } else {\r\n      calculateObtainium()\r\n    }\r\n\r\n    //Automatically tries and buys researches lol\r\n    if (player.autoResearchToggle && player.autoResearch > 0 && player.autoResearch <= maxRoombaResearchIndex(player) &&\r\n                (autoResearchEnabled() || player.autoResearchMode === 'manual')) {\r\n      // buyResearch() probably shouldn't even be called if player.autoResearch exceeds the highest unlocked research\r\n      let counter = 0\r\n      const maxCount = 1 + player.challengecompletions[14]\r\n      while (counter < maxCount) {\r\n        if (player.autoResearch > 0) {\r\n          const linGrowth = (player.autoResearch === 200) ? 0.01 : 0\r\n          if (!buyResearch(player.autoResearch, true, linGrowth)) {\r\n            break\r\n          }\r\n        } else {\r\n          break\r\n        }\r\n        counter++\r\n      }\r\n    }\r\n  }\r\n\r\n  // Adds an offering every 2 seconds\r\n  if (player.highestchallengecompletions[3] > 0) {\r\n    automaticTools('addOfferings', dt/2)\r\n  }\r\n\r\n  // Adds an offering every 1/(cube upgrade 1x2) seconds. It shares a timer with the one above.\r\n  if (player.cubeUpgrades[2] > 0) {\r\n    automaticTools('addOfferings', dt * player.cubeUpgrades[2])\r\n  }\r\n\r\n  runChallengeSweep(dt)\r\n\r\n  //Check for automatic resets\r\n  //Auto Prestige. === 1 indicates amount, === 2 indicates time.\r\n  if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\r\n    if (player.toggles[15] && player.achievements[43] === 1 && G.prestigePointGain.gte(player.prestigePoints.times(Decimal.pow(10, player.prestigeamount))) && player.coinsThisPrestige.gte(1e16)) {\r\n      resetachievementcheck(1)\r\n      reset('prestige', true)\r\n    }\r\n  }\r\n  if (player.resettoggle1 === 2) {\r\n    G.autoResetTimers.prestige += dt\r\n    const time = Math.max(0.01, player.prestigeamount)\r\n    if (player.toggles[15] && player.achievements[43] === 1 && G.autoResetTimers.prestige >= time && player.coinsThisPrestige.gte(1e16)) {\r\n      resetachievementcheck(1)\r\n      reset('prestige', true)\r\n    }\r\n  }\r\n\r\n  if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\r\n    if (player.toggles[21] && player.upgrades[89] === 1 && G.transcendPointGain.gte(player.transcendPoints.times(Decimal.pow(10, player.transcendamount))) && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\r\n      resetachievementcheck(2)\r\n      reset('transcension', true)\r\n    }\r\n  }\r\n  if (player.resettoggle2 === 2) {\r\n    G.autoResetTimers.transcension += dt\r\n    const time = Math.max(0.01, player.transcendamount)\r\n    if (player.toggles[21] && player.upgrades[89] === 1 && G.autoResetTimers.transcension >= time && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\r\n      resetachievementcheck(2)\r\n      reset('transcension', true)\r\n    }\r\n  }\r\n\r\n  if (player.currentChallenge.ascension !== 12) {\r\n    G.autoResetTimers.reincarnation += dt\r\n    if (player.resettoggle3 === 2) {\r\n      const time = Math.max(0.01, player.reincarnationamount)\r\n      if (player.toggles[27] && player.researches[46] > 0.5 && player.transcendShards.gte('1e300') && G.autoResetTimers.reincarnation >= time && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\r\n        resetachievementcheck(3)\r\n        reset('reincarnation', true)\r\n      }\r\n    }\r\n    if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\r\n      if (player.toggles[27] && player.researches[46] > 0.5 && G.reincarnationPointGain.gte(player.reincarnationPoints.add(1).times(Decimal.pow(10, player.reincarnationamount))) && player.transcendShards.gte(1e300) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\r\n        resetachievementcheck(3)\r\n        reset('reincarnation', true)\r\n      }\r\n    }\r\n  }\r\n  calculateOfferings('reincarnation')\r\n}\r\n\r\nexport const synergismHotkeys = (event: KeyboardEvent, key: string): void => {\r\n  if (!player.toggles[40]) {\r\n    return\r\n  }\r\n\r\n  const types = {\r\n    coin: 'Coin',\r\n    diamond: 'Diamonds',\r\n    mythos: 'Mythos',\r\n    particle: 'Particles',\r\n    tesseract: 'Tesseracts'\r\n  } as const\r\n\r\n  const type = types[G.buildingSubTab]\r\n\r\n  if (event.shiftKey) {\r\n    let num = Number(key) - 1\r\n    if (key ==='BACKQUOTE') {\r\n      num = -1\r\n    }\r\n    if (player.challengecompletions[11] > 0 && !isNaN(num)) {\r\n      if (num >= 0 && num < player.corruptionLoadoutNames.length) {\r\n        if (player.toggles[41]) {\r\n          void Notification(\r\n            i18next.t('main.corruptionLoadoutApplied', {\r\n              x: num + 1,\r\n              y: player.corruptionLoadoutNames[num]\r\n            }),\r\n            5000\r\n          )\r\n        }\r\n        corruptionLoadoutSaveLoad(false, num + 1)\r\n      } else {\r\n        if (player.toggles[41]) {\r\n          void Notification(i18next.t('main.allCorruptionsZero'), 5000)\r\n        }\r\n        corruptionLoadoutSaveLoad(false, 0)\r\n      }\r\n      event.preventDefault()\r\n    }\r\n    return\r\n  }\r\n\r\n  switch (key) {\r\n    case '1':\r\n    case '2':\r\n    case '3':\r\n    case '4':\r\n    case '5': {\r\n      const num = Number(key) as OneToFive\r\n\r\n      if (G.currentTab === 'buildings') {\r\n        if (type === 'Particles') {\r\n          buyParticleBuilding(num)\r\n        } else if (type === 'Tesseracts') {\r\n          buyTesseractBuilding(num)\r\n        } else {\r\n          buyMax(num, type)\r\n        }\r\n      }\r\n      if (G.currentTab === 'upgrades') {\r\n        categoryUpgrades(num, false)\r\n      }\r\n      if (G.currentTab === 'runes') {\r\n        if (G.runescreen === 'runes') {\r\n          redeemShards(num)\r\n        }\r\n        if (G.runescreen === 'blessings') {\r\n          buyRuneBonusLevels('Blessings', num)\r\n        }\r\n        if (G.runescreen === 'spirits') {\r\n          buyRuneBonusLevels('Spirits', num)\r\n        }\r\n      }\r\n      if (G.currentTab === 'challenge') {\r\n        toggleChallenges(num)\r\n        challengeDisplay(num)\r\n      }\r\n      break\r\n    }\r\n\r\n    case '6':\r\n      if (G.currentTab === 'upgrades') {\r\n        categoryUpgrades(6, false)\r\n      }\r\n      if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n        buyCrystalUpgrades(1)\r\n      }\r\n      if (G.currentTab === 'challenge' && player.reincarnationCount > 0) {\r\n        toggleChallenges(6)\r\n        challengeDisplay(6)\r\n      }\r\n      break\r\n    case '7':\r\n      if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n        buyCrystalUpgrades(2)\r\n      }\r\n      if (G.currentTab === 'challenge' && player.achievements[113] === 1) {\r\n        toggleChallenges(7)\r\n        challengeDisplay(7)\r\n      }\r\n      break\r\n    case '8':\r\n      if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n        buyCrystalUpgrades(3)\r\n      }\r\n      if (G.currentTab === 'challenge' && player.achievements[120] === 1) {\r\n        toggleChallenges(8)\r\n        challengeDisplay(8)\r\n      }\r\n      break\r\n    case '9':\r\n      if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n        buyCrystalUpgrades(4)\r\n      }\r\n      if (G.currentTab === 'challenge' && player.achievements[127] === 1) {\r\n        toggleChallenges(9)\r\n        challengeDisplay(9)\r\n      }\r\n      break\r\n    case '0':\r\n      if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n        buyCrystalUpgrades(5)\r\n      }\r\n      if (G.currentTab === 'challenge' && player.achievements[134] === 1) {\r\n        toggleChallenges(10)\r\n        challengeDisplay(10)\r\n      }\r\n      break\r\n  }\r\n\r\n}\r\n\r\nexport const showExitOffline = () => {\r\n  const el = DOMCacheGetOrSet('exitOffline')\r\n  el.style.visibility = 'visible'\r\n  setTimeout(() => el.focus(), 100)\r\n}\r\n\r\n/**\r\n * Reloads shit.\r\n * @param reset if this param is passed, offline progression will not be calculated.\r\n */\r\nexport const reloadShit = async (reset = false) => {\r\n  clearTimers()\r\n\r\n  // Shows a reset button when page loading seems to stop or cause an error\r\n  const preloadDeleteGame = setTimeout(() => DOMCacheGetOrSet('preloadDeleteGame').style.display = 'block', 10000)\r\n\r\n  disableHotkeys()\r\n\r\n  // Wait a tick to continue. This is a (likely futile) attempt to see if this solves save corrupting.\r\n  // This ensures all queued tasks are executed before continuing on.\r\n  await new Promise((res) => {\r\n    setTimeout(res, 0)\r\n  })\r\n\r\n  const save =\r\n        await localforage.getItem<Blob>('Synergysave2') ??\r\n        localStorage.getItem('Synergysave2')\r\n\r\n  const saveObject = typeof save === 'string' ? save : await save?.text()\r\n\r\n  if (saveObject) {\r\n    const dec = LZString.decompressFromBase64(saveObject)\r\n    const isLZString = dec !== ''\r\n\r\n    if (isLZString) {\r\n      if (!dec) {\r\n        return Alert(i18next.t('save.loadFailed'))\r\n      }\r\n\r\n      const saveString = btoa(dec)\r\n\r\n      if (saveString === null) {\r\n        return Alert(i18next.t('save.loadFailed'))\r\n      }\r\n\r\n      localStorage.clear()\r\n      const blob = new Blob([saveString], { type: 'text/plain' })\r\n      await localforage.setItem<Blob>('Synergysave2', blob)\r\n      await Alert(i18next.t('main.transferredFromLZ'))\r\n    }\r\n\r\n    await loadSynergy()\r\n  }\r\n\r\n  if (!reset) {\r\n    await calculateOffline()\r\n  } else {\r\n    player.worlds = new QuarkHandler({ bonus: 0, quarks: 0 })\r\n    // saving is disabled during a singularity event to prevent bug\r\n    // early return here if the save fails can keep game state from properly resetting after a singularity\r\n    if (saveCheck.canSave) {\r\n      const saved = await saveSynergy()\r\n      if (!saved) {\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleTheme(true)\r\n  settingAnnotation()\r\n  toggleIconSet()\r\n  toggleauto()\r\n  htmlInserts()\r\n  createTimer()\r\n\r\n  //Reset Displays\r\n  changeTab('buildings')\r\n  changeSubTab('buildings', { page: 0 })\r\n  changeSubTab('runes', { page: 0 }) // Set 'runes' subtab back to 'runes' tab\r\n  changeSubTab('cube', { page: 0 }) // Set 'cube tribues' subtab back to 'cubes' tab\r\n  changeSubTab('traits', { page: 0 }) // set 'corruption main'\r\n  changeSubTab('singularity', { page: 0 }) // set 'singularity main'\r\n  changeSubTab('settings', { page: 0 }) // set 'statistics main'\r\n\r\n  dailyResetCheck()\r\n  setInterval(dailyResetCheck, 30000)\r\n\r\n  constantIntervals()\r\n  changeTabColor()\r\n\r\n  eventCheck()\r\n  setInterval(eventCheck, 15000)\r\n  showExitOffline()\r\n  clearTimeout(preloadDeleteGame)\r\n\r\n  if (localStorage.getItem('pleaseStar') === null) {\r\n    void Alert(i18next.t('main.starRepo'))\r\n    localStorage.setItem('pleaseStar', '')\r\n  }\r\n\r\n  // All versions of Chrome and Firefox supported by the game have this API,\r\n  // but not all versions of Edge and Safari do.\r\n  if (\r\n  /* eslint-disable @typescript-eslint/no-unnecessary-condition */\r\n    typeof navigator.storage?.persist === 'function' &&\r\n        typeof navigator.storage?.persisted === 'function'\r\n        /* eslint-enable @typescript-eslint/no-unnecessary-condition */\r\n  ) {\r\n    const persistent = await navigator.storage.persisted()\r\n\r\n    if (!persistent) {\r\n      const isPersistentNow = await navigator.storage.persist()\r\n\r\n      if (isPersistentNow) {\r\n        void Alert(i18next.t('main.dataPersistent'))\r\n      }\r\n    } else {\r\n      // eslint-disable-next-line no-console\r\n      console.log(`Storage is persistent! (persistent = ${persistent})`)\r\n    }\r\n  }\r\n\r\n  const saveType = DOMCacheGetOrSet('saveType') as HTMLInputElement\r\n  saveType.checked = localStorage.getItem('copyToClipboard') !== null\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\r\nwindow.addEventListener('load', async () => {\r\n  await i18nInit()\r\n\r\n  const ver = DOMCacheGetOrSet('versionnumber')\r\n  const addZero = (n: number) => `${n}`.padStart(2, '0')\r\n  if (ver instanceof HTMLElement) {\r\n    const textUpdate = !isNaN(lastUpdated.getTime()) ? ` [Last Update: ${addZero(lastUpdated.getHours())}:${addZero(lastUpdated.getMinutes())} UTC ${addZero(lastUpdated.getDate())}-${lastUpdated.toLocaleString('en-us', { month: 'short' })}-${lastUpdated.getFullYear()}].` : ''\r\n    ver.textContent =\r\n            `You're ${testing ? 'testing' : 'playing'} v${version} - The Alternate Reality` +\r\n            textUpdate +\r\n            ` ${testing ? i18next.t('testing.saveInLive') : ''}`\r\n  }\r\n  document.title = `Synergism v${version}`\r\n\r\n  generateEventHandlers()\r\n\r\n  void reloadShit()\r\n\r\n  corruptionButtonsAdd()\r\n  corruptionLoadoutTableCreate()\r\n})\r\n\r\nwindow.addEventListener('unload', () => {\r\n  // This fixes a bug in Chrome (who would have guessed?) that\r\n  // wouldn't properly load elements if the user scrolled down\r\n  // and reloaded a page. Why is this a bug, Chrome? Why would\r\n  // a page that is reloaded be affected by what the user did\r\n  // beforehand? How does anyone use this buggy browser???????\r\n  window.scrollTo(0, 0)\r\n})\r\n", "/**\r\n * A cache for DOM elements\r\n */\r\nexport const DOMCache = new Map<string, HTMLElement>()\r\n\r\nexport const DOMCacheGetOrSet = (id: string) => {\r\n  const cachedEl = DOMCache.get(id)\r\n  if (cachedEl) {\r\n    return cachedEl\r\n  }\r\n\r\n  const el = document.getElementById(id)\r\n\r\n  if (!el) {\r\n    throw new TypeError(`Element with id \"${id}\" was not found on page?`)\r\n  }\r\n\r\n  DOMCache.set(id, el)\r\n  return el\r\n}\r\n", "import Decimal from 'break_infinity.js'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { format } from './Synergism'\r\n\r\nexport const isDecimal = (o: unknown): o is Decimal =>\r\n  o instanceof Decimal ||\r\n    (typeof o === 'object' &&\r\n    o !== null &&\r\n    Object.keys(o).length === 2 &&\r\n    'mantissa' in o &&\r\n    'exponent' in o)\r\n\r\n\r\n/**\r\n * This function calculates the smallest integer increment/decrement that can be applied to a number that is\r\n * guaranteed to affect the numbers value\r\n * @param x\r\n * @returns {number} 1 if x < 2^53 and 2^ceil(log2(x)-53) otherwise\r\n * Since ceil(log2(x)-53) was 53 until 2^53+23, I changed it to floor(log2(x)-52)\r\n * This is incremented to 53 at 2^53-21 and is probably guaranteed thereafter. from by httpsnet\r\n */\r\nexport const smallestInc = (x = 0): number => {\r\n  if (x <= Number.MAX_SAFE_INTEGER) {\r\n    return 1\r\n  } else {\r\n    return 2 ** Math.floor(Math.log2(x) - 52)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the sum of all contents in an array\r\n * @param array {(number|string)[]}\r\n * @returns {number}\r\n */\r\nexport const sumContents = (array: number[]): number => {\r\n  array = Array.isArray(array)\r\n    ? array\r\n    : Object.values(array)\r\n\r\n  return array.reduce((a, b) => a + b, 0)\r\n}\r\n\r\n/**\r\n * Returns the product of all contents in an array\r\n * @param array {number[]}\r\n * @returns {number}\r\n */\r\n// TODO: Add a productContents for Decimal, but callable using productContents...\r\nexport const productContents = (array: number[]): number => array.reduce((a, b) => a * b)\r\n\r\n\r\nexport const sortWithIndices = (toSort: number[]) => {\r\n  return Array\r\n    .from([...toSort.keys()])\r\n    .sort((a, b) => toSort[a] < toSort[b] ? -1 : +(toSort[b] < toSort[a]))\r\n}\r\n\r\n/**\r\n * Identical to @see {DOMCacheGetOrSet} but casts the type.\r\n * @param id {string}\r\n */\r\nexport const getElementById = <T extends HTMLElement>(id: string) => DOMCacheGetOrSet(id) as T\r\n\r\n/**\r\n * Remove leading indents at the beginning of new lines in a template literal.\r\n */\r\nexport const stripIndents = (raw: TemplateStringsArray, ...args: unknown[]): string => {\r\n  const r = String.raw({ raw }, ...args)\r\n\r\n  return r\r\n    .replace(/^[^\\S\\r\\n]+/gm, '')\r\n    .trim()\r\n}\r\n\r\n/**\r\n * Pads an array (a) with param (b) (c) times\r\n * @param a array to be padded\r\n * @param b item to pad to array\r\n * @param length Length to pad array to\r\n */\r\nexport const padArray = <T>(a: T[], b: T, length: number) => {\r\n  for (let i = 0; i < length; i++) {\r\n    if (!(i in a)) {\r\n      a[i] = b\r\n    }\r\n  }\r\n\r\n  return a\r\n}\r\n\r\nexport const updateClassList = (targetElement: string, additions: string[], removals: string[]) => {\r\n  const target = DOMCacheGetOrSet(targetElement)\r\n  for (const addition of additions) {\r\n    target.classList.add(addition)\r\n  }\r\n  for (const removal of removals) {\r\n    target.classList.remove(removal)\r\n  }\r\n}\r\n\r\nexport const btoa = (s: string) => {\r\n  try {\r\n    return window.btoa(s)\r\n  } catch (err) {\r\n    // eslint-disable-next-line no-console\r\n    console.error('An error occurred:', err)\r\n    // e.code = 5\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * Creates a string of the ordinal representation of an integer.\r\n * @param int An integer, which can be negative or positive.\r\n * @returns A string which follows the conventions of ordinal numbers\r\n *          in standard English\r\n */\r\nexport const toOrdinal = (int: number):string => {\r\n  let suffix = 'th'\r\n  if (int % 10 === 1) {\r\n    suffix = (int % 100 === 11)? 'th': 'st'\r\n  }\r\n  if (int % 10 === 2) {\r\n    suffix = (int % 100 === 12)? 'th': 'nd'\r\n  }\r\n  if (int % 10 === 3) {\r\n    suffix = (int % 100 === 13)? 'th': 'rd'\r\n  }\r\n\r\n  return format(int, 0, true)+suffix\r\n}\r\n\r\nexport const formatMS = (ms: number) => Object.entries({\r\n  d: Math.floor(ms / 86400000),\r\n  h: Math.floor(ms / 3600000) % 24,\r\n  m: Math.floor(ms / 60000) % 60,\r\n  s: Math.floor(ms / 1000) % 60\r\n})\r\n  .filter(f => f[1] > 0)\r\n  .map(t => `${t[1]}${t[0]}`)\r\n  .join(' ') || '0s'\r\n\r\nexport const formatS = (s: number) => {\r\n  return formatMS(1000 * s)\r\n}\r\n\r\nexport const cleanString = (s: string): string => {\r\n  let cleaned = ''\r\n\r\n  for (let i = 0; i < s.length; i++) {\r\n    const code = s.charCodeAt(i)\r\n\r\n    cleaned += code > 255 ? '_' : s[i]\r\n  }\r\n\r\n  return cleaned\r\n}\r\n\r\nexport function assert (condition: unknown): asserts condition {\r\n  if (!condition) {\r\n    throw new TypeError('assertion failed')\r\n  }\r\n}\r\n\r\nexport function limitRange (number: number, min: number, max: number): number {\r\n  if (number < min) {\r\n    return max\r\n  } else if (number > max) {\r\n    return min\r\n  }\r\n\r\n  return number\r\n}\r\n", "import Decimal from 'break_infinity.js'\r\nimport type { GlobalVariables } from './types/Synergism'\r\n\r\nexport enum Upgrade {\r\n     coin = 'coins',\r\n     prestige = 'prestigePoints',\r\n     transcend = 'transcendPoints',\r\n     reincarnation = 'reincarnationPoints',\r\n}\r\n\r\nexport const Globals: GlobalVariables = {\r\n  runediv: [1.5, 2, 3, 5, 8, 1, 1],\r\n  runeexpbase: [1, 4, 9, 16, 1000, 1e75, 1e256],\r\n  runeMaxLvl: 40000,\r\n\r\n  // this shows the logarithm of costs. ex: upgrade one will cost 1e+6 coins, upgrade 2 1e+7, etc.\r\n  upgradeCosts: [0, 6, 7, 8, 10, 12, 20, 25, 30, 35, 45, 55, 75, 110, 150, 200, 250, 500, 750, 1000, 1500,\r\n    2, 3, 4, 5, 6, 7, 10, 13, 20, 30, 150, 400, 800, 1600, 3200, 10000, 20000, 50000, 100000, 200000,\r\n    1, 2, 3, 5, 6, 7, 42, 65, 87, 150, 300, 500, 1000, 1500, 2000, 3000, 6000, 12000, 25000, 75000,\r\n    0, 1, 2, 2, 3, 5, 6, 10, 15, 22, 30, 37, 45, 52, 60, 1900, 2500, 3000, 7482, 21397,\r\n    3, 6, 9, 12, 15, 20, 30, 6, 8, 8, 10, 13, 60, 1, 2, 4, 8, 16, 25, 40,\r\n    12, 16, 20, 30, 50, 500, 1250, 5000, 25000, 125000, 1500, 7500, 30000, 150000, 1000000, 250, 1000, 5000, 25000, 125000,\r\n    1e3, 1e6, 1e9, 1e12, 1e15],\r\n\r\n  // Mega list of Variables to be used elsewhere\r\n  crystalUpgradesCost: [6, 15, 20, 40, 100, 200, 500, 1000],\r\n  crystalUpgradeCostIncrement: [8, 15, 20, 40, 100, 200, 500, 1000],\r\n  researchBaseCosts: [1e200,\r\n    1, 1, 1, 1, 1,\r\n    1, 1e2, 1e4, 1e6, 1e8,\r\n    2, 2e2, 2e4, 2e6, 2e8,\r\n    4e4, 4e8, 10, 1e5, 1e9,\r\n    100, 100, 1e4, 2e3, 2e5,\r\n    40, 200, 50, 5000, 20000000,\r\n    777, 7777, 50000, 500000, 5000000,\r\n    2e3, 2e6, 2e9, 1e5, 1e9,\r\n    1, 1, 5, 25, 125,\r\n    2, 5, 320, 1280, 2.5e9,\r\n    10, 2e3, 4e5, 8e7, 2e9,\r\n    5, 400, 1e4, 3e6, 9e8,\r\n    100, 2500, 100, 2000, 2e5,\r\n    1, 20, 3e3, 4e5, 5e7,\r\n    10, 40, 160, 1000, 10000,\r\n    4e9, 7e9, 1e10, 1.2e10, 1.5e10,\r\n    1e12, 1e13, 3e12, 2e13, 2e13,\r\n    2e14, 6e14, 2e15, 6e15, 2e16,\r\n    1e16, 2e16, 2e17, 4e17, 1e18,\r\n    1e13, 1e14, 1e15, 7.777e18, 7.777e20,\r\n    1e16, 3e16, 1e17, 3e17, 1e20,\r\n    1e18, 3e18, 1e19, 3e19, 1e20,\r\n    1e20, 2e20, 4e20, 8e20, 1e21,\r\n    2e21, 4e21, 8e21, 2e22, 4e22,\r\n    3.2e21, 2e23, 4e23, 1e21, 7.777e32,\r\n    5e8, 5e12, 5e16, 5e20, 5e24, /*ascension tier */\r\n    1e25, 2e25, 4e25, 8e25, 1e26,\r\n    4e26, 8e26, 1e27, 2e27, 1e28,\r\n    5e9, 5e15, 5e21, 5e27, 1e28, /*challenge 11 tier */\r\n    1e29, 2e29, 4e29, 8e29, 1e27,\r\n    2e30, 4e30, 8e30, 1e31, 2e31,\r\n    5e31, 1e32, 2e32, 4e32, 8e32, /*challenge 12 tier */\r\n    1e33, 2e33, 4e33, 8e33, 1e34,\r\n    3e34, 1e35, 3e35, 6e35, 1e36,\r\n    3e36, 1e37, 3e37, 1e38, 3e38, /*challenge 13 tier */\r\n    1e39, 3e39, 1e40, 3e40, 1e50,\r\n    3e41, 1e42, 3e42, 6e42, 1e43,\r\n    3e43, 1e44, 3e44, 1e45, 3e45, /*challenge 14 tier */\r\n    2e46, 6e46, 2e47, 6e47, 1e64,\r\n    6e48, 2e49, 1e50, 1e51, 4e56\r\n  ],\r\n\r\n  researchMaxLevels: [0, 1, 1, 1, 1, 1,\r\n    10, 10, 10, 10, 10,\r\n    10, 10, 10, 10, 10,\r\n    10, 10, 1, 1, 1,\r\n    25, 25, 25, 20, 20,\r\n    10, 10, 10, 10, 10,\r\n    12, 12, 10, 10, 10,\r\n    10, 10, 10, 1, 1,\r\n    1, 1, 1, 1, 1,\r\n    1, 1, 1, 1, 1,\r\n    10, 10, 10, 10, 10,\r\n    20, 20, 20, 20, 20,\r\n    1, 5, 4, 5, 5,\r\n    10, 10, 10, 10, 10,\r\n    1, 1, 1, 1, 1,\r\n    10, 50, 50, 50, 50,\r\n    10, 1, 20, 20, 20,\r\n    20, 20, 20, 20, 10,\r\n    20, 20, 20, 20, 1,\r\n    20, 5, 5, 3, 2,\r\n    10, 10, 10, 10, 1,\r\n    10, 10, 20, 25, 25,\r\n    50, 50, 50, 50, 100,\r\n    10, 10, 10, 100, 100,\r\n    25, 25, 25, 1, 5,\r\n    10, 10, 10, 10, 1,\r\n    10, 10, 10, 1, 1,\r\n    25, 25, 25, 15, 1,\r\n    10, 10, 10, 10, 1,\r\n    10, 1, 6, 10, 1,\r\n    25, 25, 1, 15, 1,\r\n    10, 10, 10, 1, 1,\r\n    10, 10, 10, 10, 1,\r\n    25, 25, 25, 15, 1,\r\n    10, 10, 10, 1, 1,\r\n    10, 3, 6, 10, 5,\r\n    25, 25, 1, 15, 1,\r\n    20, 20, 20, 1, 1,\r\n    20, 1, 50, 50, 10,\r\n    25, 25, 25, 15, 100000\r\n  ],\r\n\r\n  ticker: 0,\r\n\r\n  costDivisor: 1,\r\n\r\n  freeAccelerator: 0,\r\n  totalAccelerator: 0,\r\n  freeAcceleratorBoost: 0,\r\n  totalAcceleratorBoost: 0,\r\n  acceleratorPower: 1.10,\r\n  acceleratorEffect: new Decimal(1),\r\n  acceleratorEffectDisplay: new Decimal(1),\r\n  generatorPower: new Decimal(1),\r\n\r\n  freeMultiplier: 0,\r\n  totalMultiplier: 0,\r\n  multiplierPower: 2,\r\n  multiplierEffect: new Decimal(1),\r\n  challengeOneLog: 3,\r\n  freeMultiplierBoost: 0,\r\n  totalMultiplierBoost: 0,\r\n\r\n  globalCoinMultiplier: new Decimal(1),\r\n  totalCoinOwned: 0,\r\n  prestigeMultiplier: new Decimal(1),\r\n  buildingPower: 1,\r\n  reincarnationMultiplier: new Decimal(1),\r\n\r\n  coinOneMulti: new Decimal(1),\r\n  coinTwoMulti: new Decimal(1),\r\n  coinThreeMulti: new Decimal(1),\r\n  coinFourMulti: new Decimal(1),\r\n  coinFiveMulti: new Decimal(1),\r\n\r\n  globalCrystalMultiplier: new Decimal(1),\r\n  globalMythosMultiplier: new Decimal(0.01),\r\n  grandmasterMultiplier: new Decimal(1),\r\n\r\n  atomsMultiplier: new Decimal(1),\r\n\r\n  mythosBuildingPower: 1,\r\n  challengeThreeMultiplier: new Decimal(1),\r\n  totalMythosOwned: 0,\r\n\r\n  prestigePointGain: new Decimal(0),\r\n  challengeFivePower: 1 / 3,\r\n\r\n  transcendPointGain: new Decimal(0),\r\n  reincarnationPointGain: new Decimal(0),\r\n\r\n  produceFirst: new Decimal(0),\r\n  produceSecond: new Decimal(0),\r\n  produceThird: new Decimal(0),\r\n  produceFourth: new Decimal(0),\r\n  produceFifth: new Decimal(0),\r\n  produceTotal: new Decimal(0),\r\n\r\n  produceFirstDiamonds: new Decimal(0),\r\n  produceSecondDiamonds: new Decimal(0),\r\n  produceThirdDiamonds: new Decimal(0),\r\n  produceFourthDiamonds: new Decimal(0),\r\n  produceFifthDiamonds: new Decimal(0),\r\n  produceDiamonds: new Decimal(0),\r\n\r\n  produceFirstMythos: new Decimal(0),\r\n  produceSecondMythos: new Decimal(0),\r\n  produceThirdMythos: new Decimal(0),\r\n  produceFourthMythos: new Decimal(0),\r\n  produceFifthMythos: new Decimal(0),\r\n  produceMythos: new Decimal(0),\r\n\r\n  produceFirstParticles: new Decimal(0),\r\n  produceSecondParticles: new Decimal(0),\r\n  produceThirdParticles: new Decimal(0),\r\n  produceFourthParticles: new Decimal(0),\r\n  produceFifthParticles: new Decimal(0),\r\n  produceParticles: new Decimal(0),\r\n\r\n  producePerSecond: new Decimal(0),\r\n  producePerSecondDiamonds: new Decimal(0),\r\n  producePerSecondMythos: new Decimal(0),\r\n  producePerSecondParticles: new Decimal(0),\r\n\r\n  uFourteenMulti: new Decimal(1),\r\n  uFifteenMulti: new Decimal(1),\r\n  tuSevenMulti: 1,\r\n  currentTab: 'buildings',\r\n\r\n  researchfiller1: 'Hover over the grid to get details about researches!',\r\n  researchfiller2: 'Level: ',\r\n\r\n  ordinals: ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth', 'ninth', 'tenth', 'eleventh', 'twelfth', 'thirteenth', 'fourteenth', 'fifteenth', 'sixteenth', 'seventeenth', 'eighteenth', 'nineteenth', 'twentieth'] as const,\r\n  cardinals: ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen', 'twenty', 'twentyone', 'twentytwo', 'twentythree', 'twentyfour', 'twentyfive', 'twentysix', 'twentyseven', 'twentyeight', 'twentynine', 'thirty', 'thirtyone', 'thirtytwo', 'thirtythree', 'thirtyfour'],\r\n\r\n  challengeBaseRequirements: [10, 20, 60, 100, 200, 125, 500, 7500, 2.0e8, 3.5e9],\r\n\r\n  prestigeamount: 1,\r\n  taxdivisor: new Decimal('1'),\r\n  taxdivisorcheck: new Decimal('1'),\r\n  runemultiplierincrease: {\r\n    one: 1,\r\n    two: 1,\r\n    three: 1,\r\n    four: 1,\r\n    five: 1\r\n  },\r\n\r\n  mythosupgrade13: new Decimal('1'),\r\n  mythosupgrade14: new Decimal('1'),\r\n  mythosupgrade15: new Decimal('1'),\r\n  challengefocus: 0,\r\n\r\n  maxexponent: 10000,\r\n\r\n  effectiveLevelMult: 1,\r\n  optimalOfferingTimer: 600,\r\n  optimalObtainiumTimer: 3600,\r\n\r\n  runeSum: 0,\r\n\r\n  globalAntMult: new Decimal('1'),\r\n  antMultiplier: new Decimal('1'),\r\n\r\n  antOneProduce: new Decimal('1'),\r\n  antTwoProduce: new Decimal('1'),\r\n  antThreeProduce: new Decimal('1'),\r\n  antFourProduce: new Decimal('1'),\r\n  antFiveProduce: new Decimal('1'),\r\n  antSixProduce: new Decimal('1'),\r\n  antSevenProduce: new Decimal('1'),\r\n  antEightProduce: new Decimal('1'),\r\n\r\n  antCostGrowth: [1e41, 3, 10, 1e2, 1e4, 1e8, 1e16, 1e32],\r\n\r\n  antUpgradeBaseCost: [100, 100, 1000, 1000, 1e5, 1e6, 1e8, 1e11, 1e15, 1e20, 1e40, 1e100],\r\n  antUpgradeCostIncreases: [10, 10, 10, 10, 100, 100, 100, 100, 1000, 1000, 1000, 1e100],\r\n\r\n  bonusant1: 0,\r\n  bonusant2: 0,\r\n  bonusant3: 0,\r\n  bonusant4: 0,\r\n  bonusant5: 0,\r\n  bonusant6: 0,\r\n  bonusant7: 0,\r\n  bonusant8: 0,\r\n  bonusant9: 0,\r\n  bonusant10: 0,\r\n  bonusant11: 0,\r\n  bonusant12: 0,\r\n\r\n  rune1level: 1,\r\n  rune2level: 1,\r\n  rune3level: 1,\r\n  rune4level: 1,\r\n  rune5level: 1,\r\n  rune1Talisman: 0,\r\n  rune2Talisman: 0,\r\n  rune3Talisman: 0,\r\n  rune4Talisman: 0,\r\n  rune5Talisman: 0,\r\n\r\n\r\n  talisman1Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman2Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman3Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman4Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman5Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman6Effect: [null, 0, 0, 0, 0, 0],\r\n  talisman7Effect: [null, 0, 0, 0, 0, 0],\r\n\r\n  talisman6Power: 0,\r\n  talisman7Quarks: 0,\r\n\r\n  runescreen: 'runes',\r\n  settingscreen: 'settings',\r\n  singularityscreen: 'shop',\r\n\r\n  talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24],\r\n  talismanResourceOfferingCosts: [100, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9],\r\n\r\n\r\n  talismanLevelCostMultiplier: [1, 4, 1e4, 1e8, 1e13, 10, 100],\r\n\r\n  talismanPositiveModifier: [null, 0.75, 1.5, 2.25, 3, 3.75, 4.5],\r\n  talismanNegativeModifier: [null, 0, 0, 0, 0, 0, 0],\r\n\r\n  commonTalismanEnhanceCost: [null, 0, 3000, 1000, 0, 0, 0, 0],\r\n  uncommonTalismanEnchanceCost: [null, 0, 10000, 3000, 1000, 0, 0, 0],\r\n  rareTalismanEnchanceCost: [null, 0, 100000, 20000, 2000, 500, 0, 0],\r\n  epicTalismanEnhanceCost: [null, 0, 2e6, 2e5, 2e4, 2000, 1000, 0],\r\n  legendaryTalismanEnchanceCost: [null, 0, 4e7, 2e6, 1e5, 20000, 2500, 200],\r\n  mythicalTalismanEnchanceCost: [null, 0, 0, 0, 0, 0, 0, 0],\r\n\r\n  talismanRespec: 1,\r\n\r\n  obtainiumGain: 0,\r\n\r\n  mirrorTalismanStats: [null, 1, 1, 1, 1, 1],\r\n  antELO: 0,\r\n  effectiveELO: 0,\r\n\r\n  timeWarp: false,\r\n\r\n  blessingMultiplier: 1,\r\n  spiritMultiplier: 1,\r\n  runeBlessings: [0, 0, 0, 0, 0, 0],\r\n  runeSpirits: [0, 0, 0, 0, 0, 0],\r\n\r\n  effectiveRuneBlessingPower: [0, 0, 0, 0, 0, 0],\r\n  effectiveRuneSpiritPower: [0, 0, 0, 0, 0, 0],\r\n\r\n  blessingBaseCost: 1e6,\r\n  spiritBaseCost: 1e20,\r\n\r\n  triggerChallenge: 0,\r\n\r\n  prevReductionValue: -1,\r\n\r\n  buildingSubTab: 'coin',\r\n  //1,000 of each before Diminishing Returns\r\n  blessingbase: [null, 1 / 500, 1 / 5000, 1 / 2000, 1 / 750, 1 / 200, 1 / 10000, 1 / 5000, 1 / 10, 1 / 10000, 1 / 1000],\r\n  blessingDRPower: [null, 1 / 3, 1 / 3, 2 / 3, 1 / 2, 2 / 3, 2, 1 / 3, 1 / 3, 1 / 16, 1 / 16],\r\n  giftbase: [1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\r\n  giftDRPower: [1 / 6, 1 / 6, 1 / 3, 1 / 4, 1 / 3, 1, 1 / 6, 1 / 6, 1 / 32, 1 / 32],\r\n  benedictionbase: [null, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\r\n  benedictionDRPower: [null, 1 / 12, 1 / 12, 1 / 6, 1 / 8, 1 / 6, 1 / 2, 1 / 12, 1 / 12, 1 / 64, 1 / 64],\r\n  //10 Million of each before Diminishing returns on first 3, 200k for second, and 10k for the last few\r\n  platonicCubeBase: [2/4e6, 1.5/4e6, 1/4e6, 1/8e4, 1/1e4, 1/1e5, 1/1e4, 1/1e4],\r\n  platonicDRPower: [1/5, 1/5, 1/5, 1/5, 1/16, 1/16, 1/4, 1/8],\r\n\r\n  cubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  tesseractBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  hypercubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  platonicBonusMultiplier: [1, 1, 1, 1, 1, 1, 1, 1],\r\n\r\n  autoOfferingCounter: 0,\r\n  researchOrderByCost: [],\r\n\r\n  viscosityPower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1, 0.05, 0, 0, 0],\r\n  lazinessMultiplier: [1, 1 / 3, 1 / 10, 1 / 40, 1 / 200, 1 / 1e5, 1 / 1e7, 1 / 1e10, 1/1e13, 1/1e16, 1/1e20, 1/1e25, 1/1e35, 1/1e50, 1/1e65, 1/1e80, 1/1e100],\r\n  hyperchallengedMultiplier: [1, 1.2, 1.5, 1.7, 3, 5, 8, 13, 21, 34, 55, 100, 400, 1600, 7777, 18888, 88888],\r\n  illiteracyPower: [1, 0.8, 0.7, 0.6, 0.5, 0.3, 0.2, 0.15, 0.10, 0.06, 0.04, 0.02, 0.01, 0.005, 0, 0, 0],\r\n  deflationMultiplier: [1, 0.3, 0.1, 0.03, 0.01, 1/1e6, 1/1e8, 1/1e10, 1/1e12, 1/1e15, 1/1e18, 1/1e25, 1/1e35, 1/1e50, 1/1e77, 0, 0],\r\n  extinctionMultiplier: [1, 0.92, 0.86, 0.8, 0.74, 0.65, 0.55, 0.5, 0.45, 0.4, 0.35, 0.3, 0.1, 0, 0, 0, 0],\r\n  droughtMultiplier: [1, 5, 25, 200, 1e4, 1e7, 1e11, 1e16, 1e22, 1e30, 1e40, 1e55, 1e80, 1e120, 1e177, 1e200, 1e250],\r\n  financialcollapsePower: [1, 0.9, 0.7, 0.6, 0.5, 0.37, 0.30, 0.23, 0.18, 0.15, 0.12, 0.09, 0.03, 0.01, 0.007, 0.0007, 0.00007],\r\n\r\n  corruptionPointMultipliers: [1, 3, 4, 5, 6, 7, 7.75, 8.5, 9.25, 10, 10.75, 11.5, 12.25, 13, 16, 20, 25, 33, 35],\r\n  ascendBuildingProduction: {\r\n    first: new Decimal('0'),\r\n    second: new Decimal('0'),\r\n    third: new Decimal('0'),\r\n    fourth: new Decimal('0'),\r\n    fifth: new Decimal('0')\r\n  },\r\n  freeUpgradeAccelerator: 0,\r\n  freeUpgradeMultiplier: 0,\r\n\r\n  acceleratorMultiplier: 1,\r\n  multiplierMultiplier: 1,\r\n\r\n  constUpgradeCosts: [null, 1, 13, 17, 237, 316, 4216, 5623, 74989, 1e10, 1e24],\r\n\r\n  globalConstantMult: new Decimal('1'),\r\n  autoTalismanTimer: 0,\r\n\r\n  autoChallengeTimerIncrement: 0,\r\n  corruptionTrigger: 1,\r\n\r\n  challenge15Rewards: {\r\n    cube1: 1,\r\n    ascensions: 1,\r\n    coinExponent: 1,\r\n    taxes: 1,\r\n    obtainium: 1,\r\n    offering: 1,\r\n    accelerator: 1,\r\n    multiplier: 1,\r\n    runeExp: 1,\r\n    runeBonus: 1,\r\n    cube2: 1,\r\n    transcendChallengeReduction: 1,\r\n    reincarnationChallengeReduction: 1,\r\n    antSpeed: 1,\r\n    bonusAntLevel: 1,\r\n    cube3: 1,\r\n    talismanBonus: 1,\r\n    globalSpeed: 1,\r\n    blessingBonus: 1,\r\n    constantBonus: 1,\r\n    cube4: 1,\r\n    spiritBonus: 1,\r\n    score: 1,\r\n    quarks: 1,\r\n    hepteractUnlocked: 0,\r\n    cube5: 1,\r\n    powder: 1,\r\n    exponent: 1,\r\n    freeOrbs: 0,\r\n    ascensionSpeed: 1\r\n  },\r\n\r\n  autoResetTimers: {\r\n    prestige: 0,\r\n    transcension: 0,\r\n    reincarnation: 0,\r\n    ascension: 0\r\n  },\r\n\r\n  timeMultiplier: 1,\r\n  upgradeMultiplier: 1,\r\n\r\n  historyCountMax: 20,\r\n\r\n  isEvent: false,\r\n  shopEnhanceVision: false,\r\n\r\n  // talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24]\r\n  // talismanResourceOfferingCosts: [0, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9]\r\n\r\n  eventClicked: false\r\n}\r\n\r\nexport const blankGlobals = { ...Globals }\r\n", "// EventTarget is lacking.\r\nimport EventEmitter from 'eventemitter3'\r\nimport type { SynergismEvents } from './types/Synergism'\r\n\r\nexport const Synergism = new EventEmitter<SynergismEvents>()\r\n", "export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}", "export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}", "export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}", "export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}", "import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}", "export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}", "export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}", "export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}", "export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}", "import _typeof from '@babel/runtime/helpers/esm/typeof';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _toArray from '@babel/runtime/helpers/esm/toArray';\n\nfunction ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$6(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar consoleLogger = {\n  type: 'logger',\n  log: function log(args) {\n    this.output('log', args);\n  },\n  warn: function warn(args) {\n    this.output('warn', args);\n  },\n  error: function error(args) {\n    this.output('error', args);\n  },\n  output: function output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\nvar Logger = function () {\n  function Logger(concreteLogger) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Logger);\n    this.init(concreteLogger, options);\n  }\n  _createClass(Logger, [{\n    key: \"init\",\n    value: function init(concreteLogger) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.prefix = options.prefix || 'i18next:';\n      this.logger = concreteLogger || consoleLogger;\n      this.options = options;\n      this.debug = options.debug;\n    }\n  }, {\n    key: \"setDebug\",\n    value: function setDebug(bool) {\n      this.debug = bool;\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return this.forward(args, 'log', '', true);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return this.forward(args, 'warn', '', true);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return this.forward(args, 'error', '');\n    }\n  }, {\n    key: \"deprecate\",\n    value: function deprecate() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n  }, {\n    key: \"forward\",\n    value: function forward(args, lvl, prefix, debugOnly) {\n      if (debugOnly && !this.debug) return null;\n      if (typeof args[0] === 'string') args[0] = \"\".concat(prefix).concat(this.prefix, \" \").concat(args[0]);\n      return this.logger[lvl](args);\n    }\n  }, {\n    key: \"create\",\n    value: function create(moduleName) {\n      return new Logger(this.logger, _objectSpread$6(_objectSpread$6({}, {\n        prefix: \"\".concat(this.prefix, \":\").concat(moduleName, \":\")\n      }), this.options));\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(options) {\n      options = options || this.options;\n      options.prefix = options.prefix || this.prefix;\n      return new Logger(this.logger, options);\n    }\n  }]);\n  return Logger;\n}();\nvar baseLogger = new Logger();\n\nvar EventEmitter = function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n    this.observers = {};\n  }\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(events, listener) {\n      var _this = this;\n      events.split(' ').forEach(function (event) {\n        _this.observers[event] = _this.observers[event] || [];\n        _this.observers[event].push(listener);\n      });\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      if (!this.observers[event]) return;\n      if (!listener) {\n        delete this.observers[event];\n        return;\n      }\n      this.observers[event] = this.observers[event].filter(function (l) {\n        return l !== listener;\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (this.observers[event]) {\n        var cloned = [].concat(this.observers[event]);\n        cloned.forEach(function (observer) {\n          observer.apply(void 0, args);\n        });\n      }\n      if (this.observers['*']) {\n        var _cloned = [].concat(this.observers['*']);\n        _cloned.forEach(function (observer) {\n          observer.apply(observer, [event].concat(args));\n        });\n      }\n    }\n  }]);\n  return EventEmitter;\n}();\n\nfunction defer() {\n  var res;\n  var rej;\n  var promise = new Promise(function (resolve, reject) {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(function (m) {\n    if (s[m]) t[m] = s[m];\n  });\n}\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n    var key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n  }\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift())\n  };\n}\nfunction setPath(object, path, newValue) {\n  var _getLastOfPath = getLastOfPath(object, path, Object),\n    obj = _getLastOfPath.obj,\n    k = _getLastOfPath.k;\n  obj[k] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  var _getLastOfPath2 = getLastOfPath(object, path, Object),\n    obj = _getLastOfPath2.obj,\n    k = _getLastOfPath2.k;\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  var _getLastOfPath3 = getLastOfPath(object, path),\n    obj = _getLastOfPath3.obj,\n    k = _getLastOfPath3.k;\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  var value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  for (var prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n}\nfunction regexEscape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, function (s) {\n      return _entityMap[s];\n    });\n  }\n  return data;\n}\nvar isIE10 = typeof window !== 'undefined' && window.navigator && typeof window.navigator.userAgentData === 'undefined' && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;\nvar chars = [' ', ',', '?', '!', ';'];\nfunction looksLikeObjectPath(key, nsSeparator, keySeparator) {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  var possibleChars = chars.filter(function (c) {\n    return nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0;\n  });\n  if (possibleChars.length === 0) return true;\n  var r = new RegExp(\"(\".concat(possibleChars.map(function (c) {\n    return c === '?' ? '\\\\?' : c;\n  }).join('|'), \")\"));\n  var matched = !r.test(key);\n  if (!matched) {\n    var ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n}\n\nfunction ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$5(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$3() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction deepFind(obj, path) {\n  var keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  var paths = path.split(keySeparator);\n  var current = obj;\n  for (var i = 0; i < paths.length; ++i) {\n    if (!current) return undefined;\n    if (typeof current[paths[i]] === 'string' && i + 1 < paths.length) {\n      return undefined;\n    }\n    if (current[paths[i]] === undefined) {\n      var j = 2;\n      var p = paths.slice(i, i + j).join(keySeparator);\n      var mix = current[p];\n      while (mix === undefined && paths.length > i + j) {\n        j++;\n        p = paths.slice(i, i + j).join(keySeparator);\n        mix = current[p];\n      }\n      if (mix === undefined) return undefined;\n      if (mix === null) return null;\n      if (path.endsWith(p)) {\n        if (typeof mix === 'string') return mix;\n        if (p && typeof mix[p] === 'string') return mix[p];\n      }\n      var joinedPath = paths.slice(i + j).join(keySeparator);\n      if (joinedPath) return deepFind(mix, joinedPath, keySeparator);\n      return undefined;\n    }\n    current = current[paths[i]];\n  }\n  return current;\n}\nvar ResourceStore = function (_EventEmitter) {\n  _inherits(ResourceStore, _EventEmitter);\n  var _super = _createSuper$3(ResourceStore);\n  function ResourceStore(data) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    _classCallCheck(this, ResourceStore);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    _this.data = data || {};\n    _this.options = options;\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n    if (_this.options.ignoreJSONStructure === undefined) {\n      _this.options.ignoreJSONStructure = true;\n    }\n    return _this;\n  }\n  _createClass(ResourceStore, [{\n    key: \"addNamespaces\",\n    value: function addNamespaces(ns) {\n      if (this.options.ns.indexOf(ns) < 0) {\n        this.options.ns.push(ns);\n      }\n    }\n  }, {\n    key: \"removeNamespaces\",\n    value: function removeNamespaces(ns) {\n      var index = this.options.ns.indexOf(ns);\n      if (index > -1) {\n        this.options.ns.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(lng, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n      var path = [lng, ns];\n      if (key && typeof key !== 'string') path = path.concat(key);\n      if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n      }\n      var result = getPath(this.data, path);\n      if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n      return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n    }\n  }, {\n    key: \"addResource\",\n    value: function addResource(lng, ns, key, value) {\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        silent: false\n      };\n      var keySeparator = this.options.keySeparator;\n      if (keySeparator === undefined) keySeparator = '.';\n      var path = [lng, ns];\n      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        value = ns;\n        ns = path[1];\n      }\n      this.addNamespaces(ns);\n      setPath(this.data, path, value);\n      if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n  }, {\n    key: \"addResources\",\n    value: function addResources(lng, ns, resources) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        silent: false\n      };\n      for (var m in resources) {\n        if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n          silent: true\n        });\n      }\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"addResourceBundle\",\n    value: function addResourceBundle(lng, ns, resources, deep, overwrite) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n        silent: false\n      };\n      var path = [lng, ns];\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        deep = resources;\n        resources = ns;\n        ns = path[1];\n      }\n      this.addNamespaces(ns);\n      var pack = getPath(this.data, path) || {};\n      if (deep) {\n        deepExtend(pack, resources, overwrite);\n      } else {\n        pack = _objectSpread$5(_objectSpread$5({}, pack), resources);\n      }\n      setPath(this.data, path, pack);\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"removeResourceBundle\",\n    value: function removeResourceBundle(lng, ns) {\n      if (this.hasResourceBundle(lng, ns)) {\n        delete this.data[lng][ns];\n      }\n      this.removeNamespaces(ns);\n      this.emit('removed', lng, ns);\n    }\n  }, {\n    key: \"hasResourceBundle\",\n    value: function hasResourceBundle(lng, ns) {\n      return this.getResource(lng, ns) !== undefined;\n    }\n  }, {\n    key: \"getResourceBundle\",\n    value: function getResourceBundle(lng, ns) {\n      if (!ns) ns = this.options.defaultNS;\n      if (this.options.compatibilityAPI === 'v1') return _objectSpread$5(_objectSpread$5({}, {}), this.getResource(lng, ns));\n      return this.getResource(lng, ns);\n    }\n  }, {\n    key: \"getDataByLanguage\",\n    value: function getDataByLanguage(lng) {\n      return this.data[lng];\n    }\n  }, {\n    key: \"hasLanguageSomeTranslations\",\n    value: function hasLanguageSomeTranslations(lng) {\n      var data = this.getDataByLanguage(lng);\n      var n = data && Object.keys(data) || [];\n      return !!n.find(function (v) {\n        return data[v] && Object.keys(data[v]).length > 0;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.data;\n    }\n  }]);\n  return ResourceStore;\n}(EventEmitter);\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor: function addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle: function handle(processors, value, key, options, translator) {\n    var _this = this;\n    processors.forEach(function (processor) {\n      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nfunction ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$2() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar checkedLoadedFor = {};\nvar Translator = function (_EventEmitter) {\n  _inherits(Translator, _EventEmitter);\n  var _super = _createSuper$2(Translator);\n  function Translator(services) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Translator);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, _assertThisInitialized(_this));\n    _this.options = options;\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n    _this.logger = baseLogger.create('translator');\n    return _this;\n  }\n  _createClass(Translator, [{\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng) {\n      if (lng) this.language = lng;\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(key) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n      if (key === undefined || key === null) {\n        return false;\n      }\n      var resolved = this.resolve(key, options);\n      return resolved && resolved.res !== undefined;\n    }\n  }, {\n    key: \"extractFromKey\",\n    value: function extractFromKey(key, options) {\n      var nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var namespaces = options.ns || this.options.defaultNS || [];\n      var wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n      var seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n      if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n        var m = key.match(this.interpolator.nestingRegexp);\n        if (m && m.length > 0) {\n          return {\n            key: key,\n            namespaces: namespaces\n          };\n        }\n        var parts = key.split(nsSeparator);\n        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n        key = parts.join(keySeparator);\n      }\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      return {\n        key: key,\n        namespaces: namespaces\n      };\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(keys, options, lastKey) {\n      var _this2 = this;\n      if (_typeof(options) !== 'object' && this.options.overloadTranslationOptionHandler) {\n        options = this.options.overloadTranslationOptionHandler(arguments);\n      }\n      if (!options) options = {};\n      if (keys === undefined || keys === null) return '';\n      if (!Array.isArray(keys)) keys = [String(keys)];\n      var returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),\n        key = _this$extractFromKey.key,\n        namespaces = _this$extractFromKey.namespaces;\n      var namespace = namespaces[namespaces.length - 1];\n      var lng = options.lng || this.language;\n      var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n      if (lng && lng.toLowerCase() === 'cimode') {\n        if (appendNamespaceToCIMode) {\n          var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n          if (returnDetails) {\n            resolved.res = \"\".concat(namespace).concat(nsSeparator).concat(key);\n            return resolved;\n          }\n          return \"\".concat(namespace).concat(nsSeparator).concat(key);\n        }\n        if (returnDetails) {\n          resolved.res = key;\n          return resolved;\n        }\n        return key;\n      }\n      var resolved = this.resolve(keys, options);\n      var res = resolved && resolved.res;\n      var resUsedKey = resolved && resolved.usedKey || key;\n      var resExactUsedKey = resolved && resolved.exactUsedKey || key;\n      var resType = Object.prototype.toString.apply(res);\n      var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n      var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n      var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n      var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n      if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n        if (!options.returnObjects && !this.options.returnObjects) {\n          if (!this.options.returnedObjectHandler) {\n            this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n          }\n          var r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, _objectSpread$4(_objectSpread$4({}, options), {}, {\n            ns: namespaces\n          })) : \"key '\".concat(key, \" (\").concat(this.language, \")' returned an object instead of string.\");\n          if (returnDetails) {\n            resolved.res = r;\n            return resolved;\n          }\n          return r;\n        }\n        if (keySeparator) {\n          var resTypeIsArray = resType === '[object Array]';\n          var copy = resTypeIsArray ? [] : {};\n          var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n          for (var m in res) {\n            if (Object.prototype.hasOwnProperty.call(res, m)) {\n              var deepKey = \"\".concat(newKeyToUse).concat(keySeparator).concat(m);\n              copy[m] = this.translate(deepKey, _objectSpread$4(_objectSpread$4({}, options), {\n                joinArrays: false,\n                ns: namespaces\n              }));\n              if (copy[m] === deepKey) copy[m] = res[m];\n            }\n          }\n          res = copy;\n        }\n      } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n        res = res.join(joinArrays);\n        if (res) res = this.extendTranslation(res, keys, options, lastKey);\n      } else {\n        var usedDefault = false;\n        var usedKey = false;\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var hasDefaultValue = Translator.hasDefaultValue(options);\n        var defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n        var defaultValue = options[\"defaultValue\".concat(defaultValueSuffix)] || options.defaultValue;\n        if (!this.isValidLookup(res) && hasDefaultValue) {\n          usedDefault = true;\n          res = defaultValue;\n        }\n        if (!this.isValidLookup(res)) {\n          usedKey = true;\n          res = key;\n        }\n        var missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n        var resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n        var updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n        if (usedKey || usedDefault || updateMissing) {\n          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n          if (keySeparator) {\n            var fk = this.resolve(key, _objectSpread$4(_objectSpread$4({}, options), {}, {\n              keySeparator: false\n            }));\n            if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n          }\n          var lngs = [];\n          var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n            for (var i = 0; i < fallbackLngs.length; i++) {\n              lngs.push(fallbackLngs[i]);\n            }\n          } else if (this.options.saveMissingTo === 'all') {\n            lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n          } else {\n            lngs.push(options.lng || this.language);\n          }\n          var send = function send(l, k, specificDefaultValue) {\n            var defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n            if (_this2.options.missingKeyHandler) {\n              _this2.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n            } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {\n              _this2.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n            }\n            _this2.emit('missingKey', l, namespace, k, res);\n          };\n          if (this.options.saveMissing) {\n            if (this.options.saveMissingPlurals && needsPluralHandling) {\n              lngs.forEach(function (language) {\n                _this2.pluralResolver.getSuffixes(language, options).forEach(function (suffix) {\n                  send([language], key + suffix, options[\"defaultValue\".concat(suffix)] || defaultValue);\n                });\n              });\n            } else {\n              send(lngs, key, defaultValue);\n            }\n          }\n        }\n        res = this.extendTranslation(res, keys, options, resolved, lastKey);\n        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = \"\".concat(namespace, \":\").concat(key);\n        if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n          if (this.options.compatibilityAPI !== 'v1') {\n            res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? \"\".concat(namespace, \":\").concat(key) : key, usedDefault ? res : undefined);\n          } else {\n            res = this.options.parseMissingKeyHandler(res);\n          }\n        }\n      }\n      if (returnDetails) {\n        resolved.res = res;\n        return resolved;\n      }\n      return res;\n    }\n  }, {\n    key: \"extendTranslation\",\n    value: function extendTranslation(res, key, options, resolved, lastKey) {\n      var _this3 = this;\n      if (this.i18nFormat && this.i18nFormat.parse) {\n        res = this.i18nFormat.parse(res, _objectSpread$4(_objectSpread$4({}, this.options.interpolation.defaultVariables), options), resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n          resolved: resolved\n        });\n      } else if (!options.skipInterpolation) {\n        if (options.interpolation) this.interpolator.init(_objectSpread$4(_objectSpread$4({}, options), {\n          interpolation: _objectSpread$4(_objectSpread$4({}, this.options.interpolation), options.interpolation)\n        }));\n        var skipOnVariables = typeof res === 'string' && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n        var nestBef;\n        if (skipOnVariables) {\n          var nb = res.match(this.interpolator.nestingRegexp);\n          nestBef = nb && nb.length;\n        }\n        var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n        if (this.options.interpolation.defaultVariables) data = _objectSpread$4(_objectSpread$4({}, this.options.interpolation.defaultVariables), data);\n        res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n        if (skipOnVariables) {\n          var na = res.match(this.interpolator.nestingRegexp);\n          var nestAft = na && na.length;\n          if (nestBef < nestAft) options.nest = false;\n        }\n        if (options.nest !== false) res = this.interpolator.nest(res, function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          if (lastKey && lastKey[0] === args[0] && !options.context) {\n            _this3.logger.warn(\"It seems you are nesting recursively key: \".concat(args[0], \" in key: \").concat(key[0]));\n            return null;\n          }\n          return _this3.translate.apply(_this3, args.concat([key]));\n        }, options);\n        if (options.interpolation) this.interpolator.reset();\n      }\n      var postProcess = options.postProcess || this.options.postProcess;\n      var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n      if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread$4({\n          i18nResolved: resolved\n        }, options) : options, this);\n      }\n      return res;\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(keys) {\n      var _this4 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var found;\n      var usedKey;\n      var exactUsedKey;\n      var usedLng;\n      var usedNS;\n      if (typeof keys === 'string') keys = [keys];\n      keys.forEach(function (k) {\n        if (_this4.isValidLookup(found)) return;\n        var extracted = _this4.extractFromKey(k, options);\n        var key = extracted.key;\n        usedKey = key;\n        var namespaces = extracted.namespaces;\n        if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && _this4.pluralResolver.shouldUseIntlApi();\n        var needsContextHandling = options.context !== undefined && (typeof options.context === 'string' || typeof options.context === 'number') && options.context !== '';\n        var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);\n        namespaces.forEach(function (ns) {\n          if (_this4.isValidLookup(found)) return;\n          usedNS = ns;\n          if (!checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {\n            checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] = true;\n            _this4.logger.warn(\"key \\\"\".concat(usedKey, \"\\\" for languages \\\"\").concat(codes.join(', '), \"\\\" won't get resolved as namespace \\\"\").concat(usedNS, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n          }\n          codes.forEach(function (code) {\n            if (_this4.isValidLookup(found)) return;\n            usedLng = code;\n            var finalKeys = [key];\n            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {\n              _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n            } else {\n              var pluralSuffix;\n              if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count, options);\n              var zeroSuffix = \"\".concat(_this4.options.pluralSeparator, \"zero\");\n              if (needsPluralHandling) {\n                finalKeys.push(key + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(key + zeroSuffix);\n                }\n              }\n              if (needsContextHandling) {\n                var contextKey = \"\".concat(key).concat(_this4.options.contextSeparator).concat(options.context);\n                finalKeys.push(contextKey);\n                if (needsPluralHandling) {\n                  finalKeys.push(contextKey + pluralSuffix);\n                  if (needsZeroSuffixLookup) {\n                    finalKeys.push(contextKey + zeroSuffix);\n                  }\n                }\n              }\n            }\n            var possibleKey;\n            while (possibleKey = finalKeys.pop()) {\n              if (!_this4.isValidLookup(found)) {\n                exactUsedKey = possibleKey;\n                found = _this4.getResource(code, ns, possibleKey, options);\n              }\n            }\n          });\n        });\n      });\n      return {\n        res: found,\n        usedKey: usedKey,\n        exactUsedKey: exactUsedKey,\n        usedLng: usedLng,\n        usedNS: usedNS\n      };\n    }\n  }, {\n    key: \"isValidLookup\",\n    value: function isValidLookup(res) {\n      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(code, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n      return this.resourceStore.getResource(code, ns, key, options);\n    }\n  }], [{\n    key: \"hasDefaultValue\",\n    value: function hasDefaultValue(options) {\n      var prefix = 'defaultValue';\n      for (var option in options) {\n        if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }]);\n  return Translator;\n}(EventEmitter);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nvar LanguageUtil = function () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      if (p[p.length - 1].toLowerCase() === 'x') return null;\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase();\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n        return p.join('-');\n      }\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isSupportedCode\",\n    value: function isSupportedCode(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n        code = this.getLanguagePartFromCode(code);\n      }\n      return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getBestMatchFromCodes\",\n    value: function getBestMatchFromCodes(codes) {\n      var _this = this;\n      if (!codes) return null;\n      var found;\n      codes.forEach(function (code) {\n        if (found) return;\n        var cleanedLng = _this.formatLanguageCode(code);\n        if (!_this.options.supportedLngs || _this.isSupportedCode(cleanedLng)) found = cleanedLng;\n      });\n      if (!found && this.options.supportedLngs) {\n        codes.forEach(function (code) {\n          if (found) return;\n          var lngOnly = _this.getLanguagePartFromCode(code);\n          if (_this.isSupportedCode(lngOnly)) return found = lngOnly;\n          found = _this.options.supportedLngs.find(function (supportedLng) {\n            if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;\n          });\n        });\n      }\n      if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n      return found;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks[\"default\"] || [];\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n      if (!found) found = fallbacks[\"default\"];\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this2 = this;\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n      var addCode = function addCode(c) {\n        if (!c) return;\n        if (_this2.isSupportedCode(c)) {\n          codes.push(c);\n        } else {\n          _this2.logger.warn(\"rejecting language code not found in supportedLngs: \".concat(c));\n        }\n      };\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this2.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n  return LanguageUtil;\n}();\n\nvar sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nvar _rulesPluralsTypes = {\n  1: function _(n) {\n    return Number(n > 1);\n  },\n  2: function _(n) {\n    return Number(n != 1);\n  },\n  3: function _(n) {\n    return 0;\n  },\n  4: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function _(n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function _(n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function _(n) {\n    return Number(n >= 2);\n  },\n  10: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function _(n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function _(n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function _(n) {\n    return Number(n !== 0);\n  },\n  14: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function _(n) {\n    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);\n  },\n  18: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function _(n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\nvar deprecatedJsonVersions = ['v1', 'v2', 'v3'];\nvar suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nfunction createRules() {\n  var rules = {};\n  sets.forEach(function (set) {\n    set.lngs.forEach(function (l) {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\nvar PluralResolver = function () {\n  function PluralResolver(languageUtils) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, PluralResolver);\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    if ((!this.options.compatibilityJSON || this.options.compatibilityJSON === 'v4') && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n    this.rules = createRules();\n  }\n  _createClass(PluralResolver, [{\n    key: \"addRule\",\n    value: function addRule(lng, obj) {\n      this.rules[lng] = obj;\n    }\n  }, {\n    key: \"getRule\",\n    value: function getRule(code) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (this.shouldUseIntlApi()) {\n        try {\n          return new Intl.PluralRules(code, {\n            type: options.ordinal ? 'ordinal' : 'cardinal'\n          });\n        } catch (_unused) {\n          return;\n        }\n      }\n      return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n    }\n  }, {\n    key: \"needsPlural\",\n    value: function needsPlural(code) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var rule = this.getRule(code, options);\n      if (this.shouldUseIntlApi()) {\n        return rule && rule.resolvedOptions().pluralCategories.length > 1;\n      }\n      return rule && rule.numbers.length > 1;\n    }\n  }, {\n    key: \"getPluralFormsOfKey\",\n    value: function getPluralFormsOfKey(code, key) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.getSuffixes(code, options).map(function (suffix) {\n        return \"\".concat(key).concat(suffix);\n      });\n    }\n  }, {\n    key: \"getSuffixes\",\n    value: function getSuffixes(code) {\n      var _this = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var rule = this.getRule(code, options);\n      if (!rule) {\n        return [];\n      }\n      if (this.shouldUseIntlApi()) {\n        return rule.resolvedOptions().pluralCategories.sort(function (pluralCategory1, pluralCategory2) {\n          return suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2];\n        }).map(function (pluralCategory) {\n          return \"\".concat(_this.options.prepend).concat(pluralCategory);\n        });\n      }\n      return rule.numbers.map(function (number) {\n        return _this.getSuffix(code, number, options);\n      });\n    }\n  }, {\n    key: \"getSuffix\",\n    value: function getSuffix(code, count) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var rule = this.getRule(code, options);\n      if (rule) {\n        if (this.shouldUseIntlApi()) {\n          return \"\".concat(this.options.prepend).concat(rule.select(count));\n        }\n        return this.getSuffixRetroCompatible(rule, count);\n      }\n      this.logger.warn(\"no plural rule found for: \".concat(code));\n      return '';\n    }\n  }, {\n    key: \"getSuffixRetroCompatible\",\n    value: function getSuffixRetroCompatible(rule, count) {\n      var _this2 = this;\n      var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n      var suffix = rule.numbers[idx];\n      if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n        if (suffix === 2) {\n          suffix = 'plural';\n        } else if (suffix === 1) {\n          suffix = '';\n        }\n      }\n      var returnSuffix = function returnSuffix() {\n        return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();\n      };\n      if (this.options.compatibilityJSON === 'v1') {\n        if (suffix === 1) return '';\n        if (typeof suffix === 'number') return \"_plural_\".concat(suffix.toString());\n        return returnSuffix();\n      } else if (this.options.compatibilityJSON === 'v2') {\n        return returnSuffix();\n      } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n        return returnSuffix();\n      }\n      return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n    }\n  }, {\n    key: \"shouldUseIntlApi\",\n    value: function shouldUseIntlApi() {\n      return !deprecatedJsonVersions.includes(this.options.compatibilityJSON);\n    }\n  }]);\n  return PluralResolver;\n}();\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar Interpolator = function () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Interpolator);\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options.interpolation && options.interpolation.format || function (value) {\n      return value;\n    };\n    this.init(options);\n  }\n  _createClass(Interpolator, [{\n    key: \"init\",\n    value: function init() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      var iOpts = options.interpolation;\n      this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n      this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n      this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n      this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n      this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n      this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n      this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;\n      this.resetRegExp();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.options) this.init(this.options);\n    }\n  }, {\n    key: \"resetRegExp\",\n    value: function resetRegExp() {\n      var regexpStr = \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix);\n      this.regexp = new RegExp(regexpStr, 'g');\n      var regexpUnescapeStr = \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);\n      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n      var nestingRegexpStr = \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix);\n      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(str, data, lng, options) {\n      var _this = this;\n      var match;\n      var value;\n      var replaces;\n      var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n      function regexSafe(val) {\n        return val.replace(/\\$/g, '$$$$');\n      }\n      var handleFormat = function handleFormat(key) {\n        if (key.indexOf(_this.formatSeparator) < 0) {\n          var path = getPathWithDefaults(data, defaultData, key);\n          return _this.alwaysFormat ? _this.format(path, undefined, lng, _objectSpread$3(_objectSpread$3(_objectSpread$3({}, options), data), {}, {\n            interpolationkey: key\n          })) : path;\n        }\n        var p = key.split(_this.formatSeparator);\n        var k = p.shift().trim();\n        var f = p.join(_this.formatSeparator).trim();\n        return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, _objectSpread$3(_objectSpread$3(_objectSpread$3({}, options), data), {}, {\n          interpolationkey: k\n        }));\n      };\n      this.resetRegExp();\n      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      var skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n      var todos = [{\n        regex: this.regexpUnescape,\n        safeValue: function safeValue(val) {\n          return regexSafe(val);\n        }\n      }, {\n        regex: this.regexp,\n        safeValue: function safeValue(val) {\n          return _this.escapeValue ? regexSafe(_this.escape(val)) : regexSafe(val);\n        }\n      }];\n      todos.forEach(function (todo) {\n        replaces = 0;\n        while (match = todo.regex.exec(str)) {\n          var matchedVar = match[1].trim();\n          value = handleFormat(matchedVar);\n          if (value === undefined) {\n            if (typeof missingInterpolationHandler === 'function') {\n              var temp = missingInterpolationHandler(str, match, options);\n              value = typeof temp === 'string' ? temp : '';\n            } else if (options && options.hasOwnProperty(matchedVar)) {\n              value = '';\n            } else if (skipOnVariables) {\n              value = match[0];\n              continue;\n            } else {\n              _this.logger.warn(\"missed to pass in variable \".concat(matchedVar, \" for interpolating \").concat(str));\n              value = '';\n            }\n          } else if (typeof value !== 'string' && !_this.useRawValueToEscape) {\n            value = makeString(value);\n          }\n          var safeValue = todo.safeValue(value);\n          str = str.replace(match[0], safeValue);\n          if (skipOnVariables) {\n            todo.regex.lastIndex += value.length;\n            todo.regex.lastIndex -= match[0].length;\n          } else {\n            todo.regex.lastIndex = 0;\n          }\n          replaces++;\n          if (replaces >= _this.maxReplaces) {\n            break;\n          }\n        }\n      });\n      return str;\n    }\n  }, {\n    key: \"nest\",\n    value: function nest(str, fc) {\n      var _this2 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var match;\n      var value;\n      var clonedOptions;\n      function handleHasOptions(key, inheritedOptions) {\n        var sep = this.nestingOptionsSeparator;\n        if (key.indexOf(sep) < 0) return key;\n        var c = key.split(new RegExp(\"\".concat(sep, \"[ ]*{\")));\n        var optionsString = \"{\".concat(c[1]);\n        key = c[0];\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        var matchedSingleQuotes = optionsString.match(/'/g);\n        var matchedDoubleQuotes = optionsString.match(/\"/g);\n        if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n          optionsString = optionsString.replace(/'/g, '\"');\n        }\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = _objectSpread$3(_objectSpread$3({}, inheritedOptions), clonedOptions);\n        } catch (e) {\n          this.logger.warn(\"failed parsing options string in nesting for key \".concat(key), e);\n          return \"\".concat(key).concat(sep).concat(optionsString);\n        }\n        delete clonedOptions.defaultValue;\n        return key;\n      }\n      while (match = this.nestingRegexp.exec(str)) {\n        var formatters = [];\n        clonedOptions = _objectSpread$3({}, options);\n        clonedOptions = clonedOptions.replace && typeof clonedOptions.replace !== 'string' ? clonedOptions.replace : clonedOptions;\n        clonedOptions.applyPostProcessor = false;\n        delete clonedOptions.defaultValue;\n        var doReduce = false;\n        if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n          var r = match[1].split(this.formatSeparator).map(function (elem) {\n            return elem.trim();\n          });\n          match[1] = r.shift();\n          formatters = r;\n          doReduce = true;\n        }\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n        if (value && match[0] === str && typeof value !== 'string') return value;\n        if (typeof value !== 'string') value = makeString(value);\n        if (!value) {\n          this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n          value = '';\n        }\n        if (doReduce) {\n          value = formatters.reduce(function (v, f) {\n            return _this2.format(v, f, options.lng, _objectSpread$3(_objectSpread$3({}, options), {}, {\n              interpolationkey: match[1].trim()\n            }));\n          }, value.trim());\n        }\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n      return str;\n    }\n  }]);\n  return Interpolator;\n}();\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction parseFormatStr(formatStr) {\n  var formatName = formatStr.toLowerCase().trim();\n  var formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    var p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    var optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      var opts = optStr.split(';');\n      opts.forEach(function (opt) {\n        if (!opt) return;\n        var _opt$split = opt.split(':'),\n          _opt$split2 = _toArray(_opt$split),\n          key = _opt$split2[0],\n          rest = _opt$split2.slice(1);\n        var val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n        if (!formatOptions[key.trim()]) formatOptions[key.trim()] = val;\n        if (val === 'false') formatOptions[key.trim()] = false;\n        if (val === 'true') formatOptions[key.trim()] = true;\n        if (!isNaN(val)) formatOptions[key.trim()] = parseInt(val, 10);\n      });\n    }\n  }\n  return {\n    formatName: formatName,\n    formatOptions: formatOptions\n  };\n}\nfunction createCachedFormatter(fn) {\n  var cache = {};\n  return function invokeFormatter(val, lng, options) {\n    var key = lng + JSON.stringify(options);\n    var formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(lng, options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n}\nvar Formatter = function () {\n  function Formatter() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Formatter);\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.NumberFormat(lng, options);\n        return function (val) {\n          return formatter.format(val);\n        };\n      }),\n      currency: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.NumberFormat(lng, _objectSpread$2(_objectSpread$2({}, options), {}, {\n          style: 'currency'\n        }));\n        return function (val) {\n          return formatter.format(val);\n        };\n      }),\n      datetime: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.DateTimeFormat(lng, _objectSpread$2({}, options));\n        return function (val) {\n          return formatter.format(val);\n        };\n      }),\n      relativetime: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.RelativeTimeFormat(lng, _objectSpread$2({}, options));\n        return function (val) {\n          return formatter.format(val, options.range || 'day');\n        };\n      }),\n      list: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.ListFormat(lng, _objectSpread$2({}, options));\n        return function (val) {\n          return formatter.format(val);\n        };\n      })\n    };\n    this.init(options);\n  }\n  _createClass(Formatter, [{\n    key: \"init\",\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n      var iOpts = options.interpolation;\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n    }\n  }, {\n    key: \"add\",\n    value: function add(name, fc) {\n      this.formats[name.toLowerCase().trim()] = fc;\n    }\n  }, {\n    key: \"addCached\",\n    value: function addCached(name, fc) {\n      this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n    }\n  }, {\n    key: \"format\",\n    value: function format(value, _format, lng, options) {\n      var _this = this;\n      var formats = _format.split(this.formatSeparator);\n      var result = formats.reduce(function (mem, f) {\n        var _parseFormatStr = parseFormatStr(f),\n          formatName = _parseFormatStr.formatName,\n          formatOptions = _parseFormatStr.formatOptions;\n        if (_this.formats[formatName]) {\n          var formatted = mem;\n          try {\n            var valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};\n            var l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n            formatted = _this.formats[formatName](mem, l, _objectSpread$2(_objectSpread$2(_objectSpread$2({}, formatOptions), options), valOptions));\n          } catch (error) {\n            _this.logger.warn(error);\n          }\n          return formatted;\n        } else {\n          _this.logger.warn(\"there was no format function for \".concat(formatName));\n        }\n        return mem;\n      }, value);\n      return result;\n    }\n  }]);\n  return Formatter;\n}();\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$1() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction removePending(q, name) {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n}\nvar Connector = function (_EventEmitter) {\n  _inherits(Connector, _EventEmitter);\n  var _super = _createSuper$1(Connector);\n  function Connector(backend, store, services) {\n    var _this;\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    _classCallCheck(this, Connector);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    _this.backend = backend;\n    _this.store = store;\n    _this.services = services;\n    _this.languageUtils = services.languageUtils;\n    _this.options = options;\n    _this.logger = baseLogger.create('backendConnector');\n    _this.waitingReads = [];\n    _this.maxParallelReads = options.maxParallelReads || 10;\n    _this.readingCalls = 0;\n    _this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    _this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    _this.state = {};\n    _this.queue = [];\n    if (_this.backend && _this.backend.init) {\n      _this.backend.init(services, options.backend, options);\n    }\n    return _this;\n  }\n  _createClass(Connector, [{\n    key: \"queueLoad\",\n    value: function queueLoad(languages, namespaces, options, callback) {\n      var _this2 = this;\n      var toLoad = {};\n      var pending = {};\n      var toLoadLanguages = {};\n      var toLoadNamespaces = {};\n      languages.forEach(function (lng) {\n        var hasAllNamespaces = true;\n        namespaces.forEach(function (ns) {\n          var name = \"\".concat(lng, \"|\").concat(ns);\n          if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {\n            _this2.state[name] = 2;\n          } else if (_this2.state[name] < 0) ; else if (_this2.state[name] === 1) {\n            if (pending[name] === undefined) pending[name] = true;\n          } else {\n            _this2.state[name] = 1;\n            hasAllNamespaces = false;\n            if (pending[name] === undefined) pending[name] = true;\n            if (toLoad[name] === undefined) toLoad[name] = true;\n            if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n          }\n        });\n        if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n      });\n      if (Object.keys(toLoad).length || Object.keys(pending).length) {\n        this.queue.push({\n          pending: pending,\n          pendingCount: Object.keys(pending).length,\n          loaded: {},\n          errors: [],\n          callback: callback\n        });\n      }\n      return {\n        toLoad: Object.keys(toLoad),\n        pending: Object.keys(pending),\n        toLoadLanguages: Object.keys(toLoadLanguages),\n        toLoadNamespaces: Object.keys(toLoadNamespaces)\n      };\n    }\n  }, {\n    key: \"loaded\",\n    value: function loaded(name, err, data) {\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      if (err) this.emit('failedLoading', lng, ns, err);\n      if (data) {\n        this.store.addResourceBundle(lng, ns, data);\n      }\n      this.state[name] = err ? -1 : 2;\n      var loaded = {};\n      this.queue.forEach(function (q) {\n        pushPath(q.loaded, [lng], ns);\n        removePending(q, name);\n        if (err) q.errors.push(err);\n        if (q.pendingCount === 0 && !q.done) {\n          Object.keys(q.loaded).forEach(function (l) {\n            if (!loaded[l]) loaded[l] = {};\n            var loadedKeys = q.loaded[l];\n            if (loadedKeys.length) {\n              loadedKeys.forEach(function (ns) {\n                if (loaded[l][ns] === undefined) loaded[l][ns] = true;\n              });\n            }\n          });\n          q.done = true;\n          if (q.errors.length) {\n            q.callback(q.errors);\n          } else {\n            q.callback();\n          }\n        }\n      });\n      this.emit('loaded', loaded);\n      this.queue = this.queue.filter(function (q) {\n        return !q.done;\n      });\n    }\n  }, {\n    key: \"read\",\n    value: function read(lng, ns, fcName) {\n      var _this3 = this;\n      var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n      var callback = arguments.length > 5 ? arguments[5] : undefined;\n      if (!lng.length) return callback(null, {});\n      if (this.readingCalls >= this.maxParallelReads) {\n        this.waitingReads.push({\n          lng: lng,\n          ns: ns,\n          fcName: fcName,\n          tried: tried,\n          wait: wait,\n          callback: callback\n        });\n        return;\n      }\n      this.readingCalls++;\n      var resolver = function resolver(err, data) {\n        _this3.readingCalls--;\n        if (_this3.waitingReads.length > 0) {\n          var next = _this3.waitingReads.shift();\n          _this3.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n        }\n        if (err && data && tried < _this3.maxRetries) {\n          setTimeout(function () {\n            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);\n          }, wait);\n          return;\n        }\n        callback(err, data);\n      };\n      var fc = this.backend[fcName].bind(this.backend);\n      if (fc.length === 2) {\n        try {\n          var r = fc(lng, ns);\n          if (r && typeof r.then === 'function') {\n            r.then(function (data) {\n              return resolver(null, data);\n            })[\"catch\"](resolver);\n          } else {\n            resolver(null, r);\n          }\n        } catch (err) {\n          resolver(err);\n        }\n        return;\n      }\n      return fc(lng, ns, resolver);\n    }\n  }, {\n    key: \"prepareLoading\",\n    value: function prepareLoading(languages, namespaces) {\n      var _this4 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = arguments.length > 3 ? arguments[3] : undefined;\n      if (!this.backend) {\n        this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n        return callback && callback();\n      }\n      if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      var toLoad = this.queueLoad(languages, namespaces, options, callback);\n      if (!toLoad.toLoad.length) {\n        if (!toLoad.pending.length) callback();\n        return null;\n      }\n      toLoad.toLoad.forEach(function (name) {\n        _this4.loadOne(name);\n      });\n    }\n  }, {\n    key: \"load\",\n    value: function load(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {}, callback);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {\n        reload: true\n      }, callback);\n    }\n  }, {\n    key: \"loadOne\",\n    value: function loadOne(name) {\n      var _this5 = this;\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      this.read(lng, ns, 'read', undefined, undefined, function (err, data) {\n        if (err) _this5.logger.warn(\"\".concat(prefix, \"loading namespace \").concat(ns, \" for language \").concat(lng, \" failed\"), err);\n        if (!err && data) _this5.logger.log(\"\".concat(prefix, \"loaded namespace \").concat(ns, \" for language \").concat(lng), data);\n        _this5.loaded(name, err, data);\n      });\n    }\n  }, {\n    key: \"saveMissing\",\n    value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n      var clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : function () {};\n      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n        this.logger.warn(\"did not save key \\\"\".concat(key, \"\\\" as the namespace \\\"\").concat(namespace, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        return;\n      }\n      if (key === undefined || key === null || key === '') return;\n      if (this.backend && this.backend.create) {\n        var opts = _objectSpread$1(_objectSpread$1({}, options), {}, {\n          isUpdate: isUpdate\n        });\n        var fc = this.backend.create.bind(this.backend);\n        if (fc.length < 6) {\n          try {\n            var r;\n            if (fc.length === 5) {\n              r = fc(languages, namespace, key, fallbackValue, opts);\n            } else {\n              r = fc(languages, namespace, key, fallbackValue);\n            }\n            if (r && typeof r.then === 'function') {\n              r.then(function (data) {\n                return clb(null, data);\n              })[\"catch\"](clb);\n            } else {\n              clb(null, r);\n            }\n          } catch (err) {\n            clb(err);\n          }\n        } else {\n          fc(languages, namespace, key, fallbackValue, clb, opts);\n        }\n      }\n      if (!languages || !languages[0]) return;\n      this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n  }]);\n  return Connector;\n}(EventEmitter);\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: true,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (_typeof(args[1]) === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n      if (_typeof(args[2]) === 'object' || _typeof(args[3]) === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng, options) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: true\n    }\n  };\n}\nfunction transformOptions(options) {\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  return options;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction noop() {}\nfunction bindMemberFunctions(inst) {\n  var mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(function (mem) {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n}\nvar I18n = function (_EventEmitter) {\n  _inherits(I18n, _EventEmitter);\n  var _super = _createSuper(I18n);\n  function I18n() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments.length > 1 ? arguments[1] : undefined;\n    _classCallCheck(this, I18n);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    _this.options = transformOptions(options);\n    _this.services = {};\n    _this.logger = baseLogger;\n    _this.modules = {\n      external: []\n    };\n    bindMemberFunctions(_assertThisInitialized(_this));\n    if (callback && !_this.isInitialized && !options.isClone) {\n      if (!_this.options.initImmediate) {\n        _this.init(options, callback);\n        return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n      }\n      setTimeout(function () {\n        _this.init(options, callback);\n      }, 0);\n    }\n    return _this;\n  }\n  _createClass(I18n, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n        if (typeof options.ns === 'string') {\n          options.defaultNS = options.ns;\n        } else if (options.ns.indexOf('translation') < 0) {\n          options.defaultNS = options.ns[0];\n        }\n      }\n      var defOpts = get();\n      this.options = _objectSpread(_objectSpread(_objectSpread({}, defOpts), this.options), transformOptions(options));\n      if (this.options.compatibilityAPI !== 'v1') {\n        this.options.interpolation = _objectSpread(_objectSpread({}, defOpts.interpolation), this.options.interpolation);\n      }\n      if (options.keySeparator !== undefined) {\n        this.options.userDefinedKeySeparator = options.keySeparator;\n      }\n      if (options.nsSeparator !== undefined) {\n        this.options.userDefinedNsSeparator = options.nsSeparator;\n      }\n      function createClassOnDemand(ClassOrObject) {\n        if (!ClassOrObject) return null;\n        if (typeof ClassOrObject === 'function') return new ClassOrObject();\n        return ClassOrObject;\n      }\n      if (!this.options.isClone) {\n        if (this.modules.logger) {\n          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n        } else {\n          baseLogger.init(null, this.options);\n        }\n        var formatter;\n        if (this.modules.formatter) {\n          formatter = this.modules.formatter;\n        } else if (typeof Intl !== 'undefined') {\n          formatter = Formatter;\n        }\n        var lu = new LanguageUtil(this.options);\n        this.store = new ResourceStore(this.options.resources, this.options);\n        var s = this.services;\n        s.logger = baseLogger;\n        s.resourceStore = this.store;\n        s.languageUtils = lu;\n        s.pluralResolver = new PluralResolver(lu, {\n          prepend: this.options.pluralSeparator,\n          compatibilityJSON: this.options.compatibilityJSON,\n          simplifyPluralSuffix: this.options.simplifyPluralSuffix\n        });\n        if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n          s.formatter = createClassOnDemand(formatter);\n          s.formatter.init(s, this.options);\n          this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n        }\n        s.interpolator = new Interpolator(this.options);\n        s.utils = {\n          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n        };\n        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n        s.backendConnector.on('*', function (event) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        if (this.modules.languageDetector) {\n          s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n          if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n        }\n        if (this.modules.i18nFormat) {\n          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n          if (s.i18nFormat.init) s.i18nFormat.init(this);\n        }\n        this.translator = new Translator(this.services, this.options);\n        this.translator.on('*', function (event) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        this.modules.external.forEach(function (m) {\n          if (m.init) m.init(_this2);\n        });\n      }\n      this.format = this.options.interpolation.format;\n      if (!callback) callback = noop;\n      if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n        var codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n      }\n      if (!this.services.languageDetector && !this.options.lng) {\n        this.logger.warn('init: no languageDetector is used and no lng is defined');\n      }\n      var storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n      storeApi.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store;\n          return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);\n        };\n      });\n      var storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n      storeApiChained.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store2;\n          (_this2$store2 = _this2.store)[fcName].apply(_this2$store2, arguments);\n          return _this2;\n        };\n      });\n      var deferred = defer();\n      var load = function load() {\n        var finish = function finish(err, t) {\n          if (_this2.isInitialized && !_this2.initializedStoreOnce) _this2.logger.warn('init: i18next is already initialized. You should call init just once!');\n          _this2.isInitialized = true;\n          if (!_this2.options.isClone) _this2.logger.log('initialized', _this2.options);\n          _this2.emit('initialized', _this2.options);\n          deferred.resolve(t);\n          callback(err, t);\n        };\n        if (_this2.languages && _this2.options.compatibilityAPI !== 'v1' && !_this2.isInitialized) return finish(null, _this2.t.bind(_this2));\n        _this2.changeLanguage(_this2.options.lng, finish);\n      };\n      if (this.options.resources || !this.options.initImmediate) {\n        load();\n      } else {\n        setTimeout(load, 0);\n      }\n      return deferred;\n    }\n  }, {\n    key: \"loadResources\",\n    value: function loadResources(language) {\n      var _this3 = this;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var usedCallback = callback;\n      var usedLng = typeof language === 'string' ? language : this.language;\n      if (typeof language === 'function') usedCallback = language;\n      if (!this.options.resources || this.options.partialBundledLanguages) {\n        if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback();\n        var toLoad = [];\n        var append = function append(lng) {\n          if (!lng) return;\n          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);\n          lngs.forEach(function (l) {\n            if (toLoad.indexOf(l) < 0) toLoad.push(l);\n          });\n        };\n        if (!usedLng) {\n          var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n          fallbacks.forEach(function (l) {\n            return append(l);\n          });\n        } else {\n          append(usedLng);\n        }\n        if (this.options.preload) {\n          this.options.preload.forEach(function (l) {\n            return append(l);\n          });\n        }\n        this.services.backendConnector.load(toLoad, this.options.ns, function (e) {\n          if (!e && !_this3.resolvedLanguage && _this3.language) _this3.setResolvedLanguage(_this3.language);\n          usedCallback(e);\n        });\n      } else {\n        usedCallback(null);\n      }\n    }\n  }, {\n    key: \"reloadResources\",\n    value: function reloadResources(lngs, ns, callback) {\n      var deferred = defer();\n      if (!lngs) lngs = this.languages;\n      if (!ns) ns = this.options.ns;\n      if (!callback) callback = noop;\n      this.services.backendConnector.reload(lngs, ns, function (err) {\n        deferred.resolve();\n        callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"use\",\n    value: function use(module) {\n      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n      if (module.type === 'backend') {\n        this.modules.backend = module;\n      }\n      if (module.type === 'logger' || module.log && module.warn && module.error) {\n        this.modules.logger = module;\n      }\n      if (module.type === 'languageDetector') {\n        this.modules.languageDetector = module;\n      }\n      if (module.type === 'i18nFormat') {\n        this.modules.i18nFormat = module;\n      }\n      if (module.type === 'postProcessor') {\n        postProcessor.addPostProcessor(module);\n      }\n      if (module.type === 'formatter') {\n        this.modules.formatter = module;\n      }\n      if (module.type === '3rdParty') {\n        this.modules.external.push(module);\n      }\n      return this;\n    }\n  }, {\n    key: \"setResolvedLanguage\",\n    value: function setResolvedLanguage(l) {\n      if (!l || !this.languages) return;\n      if (['cimode', 'dev'].indexOf(l) > -1) return;\n      for (var li = 0; li < this.languages.length; li++) {\n        var lngInLngs = this.languages[li];\n        if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n        if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n          this.resolvedLanguage = lngInLngs;\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng, callback) {\n      var _this4 = this;\n      this.isLanguageChangingTo = lng;\n      var deferred = defer();\n      this.emit('languageChanging', lng);\n      var setLngProps = function setLngProps(l) {\n        _this4.language = l;\n        _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n        _this4.resolvedLanguage = undefined;\n        _this4.setResolvedLanguage(l);\n      };\n      var done = function done(err, l) {\n        if (l) {\n          setLngProps(l);\n          _this4.translator.changeLanguage(l);\n          _this4.isLanguageChangingTo = undefined;\n          _this4.emit('languageChanged', l);\n          _this4.logger.log('languageChanged', l);\n        } else {\n          _this4.isLanguageChangingTo = undefined;\n        }\n        deferred.resolve(function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n        if (callback) callback(err, function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n      };\n      var setLng = function setLng(lngs) {\n        if (!lng && !lngs && _this4.services.languageDetector) lngs = [];\n        var l = typeof lngs === 'string' ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);\n        if (l) {\n          if (!_this4.language) {\n            setLngProps(l);\n          }\n          if (!_this4.translator.language) _this4.translator.changeLanguage(l);\n          if (_this4.services.languageDetector && _this4.services.languageDetector.cacheUserLanguage) _this4.services.languageDetector.cacheUserLanguage(l);\n        }\n        _this4.loadResources(l, function (err) {\n          done(err, l);\n        });\n      };\n      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n        setLng(this.services.languageDetector.detect());\n      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n        if (this.services.languageDetector.detect.length === 0) {\n          this.services.languageDetector.detect().then(setLng);\n        } else {\n          this.services.languageDetector.detect(setLng);\n        }\n      } else {\n        setLng(lng);\n      }\n      return deferred;\n    }\n  }, {\n    key: \"getFixedT\",\n    value: function getFixedT(lng, ns, keyPrefix) {\n      var _this5 = this;\n      var fixedT = function fixedT(key, opts) {\n        var options;\n        if (_typeof(opts) !== 'object') {\n          for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n            rest[_key3 - 2] = arguments[_key3];\n          }\n          options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n        } else {\n          options = _objectSpread({}, opts);\n        }\n        options.lng = options.lng || fixedT.lng;\n        options.lngs = options.lngs || fixedT.lngs;\n        options.ns = options.ns || fixedT.ns;\n        options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n        var keySeparator = _this5.options.keySeparator || '.';\n        var resultKey;\n        if (options.keyPrefix && Array.isArray(key)) {\n          resultKey = key.map(function (k) {\n            return \"\".concat(options.keyPrefix).concat(keySeparator).concat(k);\n          });\n        } else {\n          resultKey = options.keyPrefix ? \"\".concat(options.keyPrefix).concat(keySeparator).concat(key) : key;\n        }\n        return _this5.t(resultKey, options);\n      };\n      if (typeof lng === 'string') {\n        fixedT.lng = lng;\n      } else {\n        fixedT.lngs = lng;\n      }\n      fixedT.ns = ns;\n      fixedT.keyPrefix = keyPrefix;\n      return fixedT;\n    }\n  }, {\n    key: \"t\",\n    value: function t() {\n      var _this$translator;\n      return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var _this$translator2;\n      return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);\n    }\n  }, {\n    key: \"setDefaultNamespace\",\n    value: function setDefaultNamespace(ns) {\n      this.options.defaultNS = ns;\n    }\n  }, {\n    key: \"hasLoadedNamespace\",\n    value: function hasLoadedNamespace(ns) {\n      var _this6 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!this.isInitialized) {\n        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n        return false;\n      }\n      if (!this.languages || !this.languages.length) {\n        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n        return false;\n      }\n      var lng = this.resolvedLanguage || this.languages[0];\n      var fallbackLng = this.options ? this.options.fallbackLng : false;\n      var lastLng = this.languages[this.languages.length - 1];\n      if (lng.toLowerCase() === 'cimode') return true;\n      var loadNotPending = function loadNotPending(l, n) {\n        var loadState = _this6.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n        return loadState === -1 || loadState === 2;\n      };\n      if (options.precheck) {\n        var preResult = options.precheck(this, loadNotPending);\n        if (preResult !== undefined) return preResult;\n      }\n      if (this.hasResourceBundle(lng, ns)) return true;\n      if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n      return false;\n    }\n  }, {\n    key: \"loadNamespaces\",\n    value: function loadNamespaces(ns, callback) {\n      var _this7 = this;\n      var deferred = defer();\n      if (!this.options.ns) {\n        callback && callback();\n        return Promise.resolve();\n      }\n      if (typeof ns === 'string') ns = [ns];\n      ns.forEach(function (n) {\n        if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);\n      });\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"loadLanguages\",\n    value: function loadLanguages(lngs, callback) {\n      var deferred = defer();\n      if (typeof lngs === 'string') lngs = [lngs];\n      var preloaded = this.options.preload || [];\n      var newLngs = lngs.filter(function (lng) {\n        return preloaded.indexOf(lng) < 0;\n      });\n      if (!newLngs.length) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n      this.options.preload = preloaded.concat(newLngs);\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"dir\",\n    value: function dir(lng) {\n      if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n      if (!lng) return 'rtl';\n      var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n      var languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());\n      return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n    }\n  }, {\n    key: \"cloneInstance\",\n    value: function cloneInstance() {\n      var _this8 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var mergedOptions = _objectSpread(_objectSpread(_objectSpread({}, this.options), options), {\n        isClone: true\n      });\n      var clone = new I18n(mergedOptions);\n      if (options.debug !== undefined || options.prefix !== undefined) {\n        clone.logger = clone.logger.clone(options);\n      }\n      var membersToCopy = ['store', 'services', 'language'];\n      membersToCopy.forEach(function (m) {\n        clone[m] = _this8[m];\n      });\n      clone.services = _objectSpread({}, this.services);\n      clone.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      clone.translator = new Translator(clone.services, clone.options);\n      clone.translator.on('*', function (event) {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n        clone.emit.apply(clone, [event].concat(args));\n      });\n      clone.init(mergedOptions, callback);\n      clone.translator.options = clone.options;\n      clone.translator.backendConnector.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      return clone;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        options: this.options,\n        store: this.store,\n        language: this.language,\n        languages: this.languages,\n        resolvedLanguage: this.resolvedLanguage\n      };\n    }\n  }]);\n  return I18n;\n}(EventEmitter);\n_defineProperty(I18n, \"createInstance\", function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments.length > 1 ? arguments[1] : undefined;\n  return new I18n(options, callback);\n});\nvar instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nvar createInstance = instance.createInstance;\nvar dir = instance.dir;\nvar init = instance.init;\nvar loadResources = instance.loadResources;\nvar reloadResources = instance.reloadResources;\nvar use = instance.use;\nvar changeLanguage = instance.changeLanguage;\nvar getFixedT = instance.getFixedT;\nvar t = instance.t;\nvar exists = instance.exists;\nvar setDefaultNamespace = instance.setDefaultNamespace;\nvar hasLoadedNamespace = instance.hasLoadedNamespace;\nvar loadNamespaces = instance.loadNamespaces;\nvar loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n", "import { format, player } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { Alert, Notification, revealStuff } from './UpdateHTML'\r\nimport { Synergism } from './Events'\r\nimport { sumContents } from './Utility'\r\nimport Decimal from 'break_infinity.js'\r\nimport { CalcCorruptionStuff, calculateTimeAcceleration } from './Calculate'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\nexport const achievementpointvalues = [0,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  2, 8, 10, 2, 8, 10, 10,\r\n  2, 8, 10, 10, 10, 10, 10,\r\n  2, 4, 6, 8, 10, 10, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  1, 2, 4, 6, 8, 9, 10,\r\n  10, 10, 10, 10, 10, 10, 10,\r\n  10, 10, 10, 10, 10, 10, 10,\r\n  20, 20, 20, 40, 60, 60, 100,\r\n  20, 20, 40, 40, 60, 60, 100,\r\n  20, 20, 40, 40, 60, 60, 100,\r\n  20, 40, 40, 40, 60, 60, 100,\r\n  40, 40, 40, 60, 60, 100, 100,\r\n  40, 40, 60, 60, 100, 100, 100,\r\n  20, 40, 40, 60, 60, 100, 100,\r\n  40, 60, 100, 60, 100, 100, 40,\r\n  40, 40, 40, 40, 40, 40, 40,\r\n  40, 40, 40, 40, 100, 100, 0,\r\n  50, 75, 75, 75, 100, 100, 150,\r\n  50, 75, 75, 75, 100, 100, 150,\r\n  50, 75, 75, 75, 100, 100, 150,\r\n  10, 10, 20, 20, 30, 40, 50\r\n]\r\n\r\nexport const totalachievementpoints = achievementpointvalues.reduce((a, b) => a + b, 0)\r\n\r\nexport const areward = (i: number): string => {\r\n  // May 22, 2021: Allow achievement bonus values display directly in the description\r\n  // Using areward as const object did not allow ${player object}\r\n\r\n  //Effective score is 3rd index\r\n  const corr = CalcCorruptionStuff()\r\n\r\n  const extra: Record<number, string | Record<string, string>> = {\r\n    118: format(Math.pow(0.9925, player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]), 4),\r\n    169: format(Decimal.log(player.antPoints.add(10), 10), 2),\r\n    174: format(0.4 * Decimal.log(player.antPoints.add(1), 10), 2),\r\n    187: { x: format(Math.max(1, Math.log10(corr[3]+1) - 7), 2), y: format(Math.min(100, player.ascensionCount / 10000), 2) },\r\n    188: format(Math.min(100, player.ascensionCount / 50000), 2),\r\n    189: format(Math.min(200, player.ascensionCount / 2.5e6), 2),\r\n    193: format(Decimal.log(player.ascendShards.add(1), 10) / 4, 2),\r\n    195: format(Math.min(25000, Decimal.log(player.ascendShards.add(1), 10) / 4), 2),\r\n    196: format(Math.min(2000, Decimal.log(player.ascendShards.add(1), 10) / 50), 2),\r\n    202: format(Math.min(200, player.ascensionCount / 5e6), 2),\r\n    216: format(Math.min(200, player.ascensionCount / 1e7), 2),\r\n    223: format(Math.min(200, player.ascensionCount / 13370000), 2),\r\n    240: format(Math.min(1.5, 1 + Math.max(2, Math.log10(calculateTimeAcceleration().mult))/20), 2),\r\n    254: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\r\n    255: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\r\n    256: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\r\n    257: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\r\n    258: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\r\n    262: format(Math.min(10, Math.log10(player.ascensionCount+1)), 2),\r\n    263: format(Math.min(10, Math.log10(player.ascensionCount+1)), 2),\r\n    264: format(Math.min(40, player.ascensionCount / 2e11), 2),\r\n    265: format(Math.min(20, player.ascensionCount / 8e12), 2),\r\n    266: format(Math.min(10, player.ascensionCount / 1e14), 2),\r\n    267: format(Math.min(100, Decimal.log(player.ascendShards.add(1), 10) / 1000), 2),\r\n    270: format(Math.min(100, Decimal.log(player.ascendShards.add(1), 10) / 10000), 2),\r\n    271: format(Math.max(0, Math.min(1, (Decimal.log(player.ascendShards.add(1), 10) - 1e5) / 9e5)), 2, true)\r\n  }\r\n\r\n  const descs: number[] = [\r\n    3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 17, 18, 19,\r\n    20, 21, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35,\r\n    36, 37, 38, 43, 44, 45, 46, 47, 50, 51, 52, 53,\r\n    57, 58, 59, 60, 61, 62, 71, 72, 73, 74, 75, 76,\r\n    77, 78, 79, 80, 82, 84, 85, 86, 87, 89, 91, 92,\r\n    93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106,\r\n    107, 108, 110, 112, 115, 117, 119, 122, 124, 126,\r\n    127, 128, 129, 131, 132, 133, 134, 135, 136, 137,\r\n    140, 141, 147, 171, 172, 173, 176, 177, 178, 179,\r\n    180, 181, 182, 197, 198, 199, 200, 201, 204, 205,\r\n    206, 207, 208, 209, 211, 212, 213, 214, 215, 218,\r\n    219, 220, 221, 222, 250, 251, 253, 259, 260, 261,\r\n    274, 275, 276, 277, 278, 279, 280\r\n  ]\r\n\r\n  if (descs.includes(i) || i in extra) {\r\n    const obj = extra[i]\r\n    const map = typeof obj === 'object' ? obj : { x: obj }\r\n\r\n    return i18next.t(`achievements.rewards.${i}`, map)\r\n  }\r\n\r\n  return ''\r\n}\r\n\r\nexport const achievementAlerts = async (num: number) => {\r\n  if (player.highestSingularityCount === 0) {\r\n    if (num === 36 || num == 38 || num === 255) {\r\n      return Alert(i18next.t(`achievements.alerts.${num}`))\r\n    }\r\n  }\r\n}\r\n//${format(Decimal.log(player.ascendShards.add(1), 10) / 1000, 2)} (log(constant)/1000)%!\r\n\r\n// TODO: clean this up\r\nexport const resetachievementcheck = (i: number) => {\r\n  if (i === 1) {\r\n    if (player.prestigenoaccelerator) {\r\n      achievementaward(60)\r\n    }\r\n    if (player.prestigenomultiplier) {\r\n      achievementaward(57)\r\n    }\r\n    if (player.prestigenocoinupgrades) {\r\n      achievementaward(64)\r\n    }\r\n    if (G.prestigePointGain.gte(1)) {\r\n      achievementaward(36)\r\n\r\n    }\r\n    if (G.prestigePointGain.gte(1e6)) {\r\n      achievementaward(37)\r\n\r\n    }\r\n    if (G.prestigePointGain.gte(1e100)) {\r\n      achievementaward(38)\r\n    }\r\n    if (G.prestigePointGain.gte('1e1000')) {\r\n      achievementaward(39)\r\n\r\n    }\r\n    if (G.prestigePointGain.gte('1e10000')) {\r\n      achievementaward(40)\r\n\r\n    }\r\n    if (G.prestigePointGain.gte('1e77777')) {\r\n      achievementaward(41)\r\n\r\n    }\r\n    if (G.prestigePointGain.gte('1e250000')) {\r\n      achievementaward(42)\r\n\r\n    }\r\n  }\r\n  if (i === 2) {\r\n    if (player.transcendnoaccelerator) {\r\n      achievementaward(61)\r\n    }\r\n    if (player.transcendnomultiplier) {\r\n      achievementaward(58)\r\n    }\r\n    if (player.transcendnocoinupgrades) {\r\n      achievementaward(65)\r\n    }\r\n    if (player.transcendnocoinorprestigeupgrades) {\r\n      achievementaward(66)\r\n    }\r\n    if (G.transcendPointGain.gte(1)) {\r\n      achievementaward(43)\r\n    }\r\n    if (G.transcendPointGain.gte(1e6)) {\r\n      achievementaward(44)\r\n    }\r\n    if (G.transcendPointGain.gte(1e50)) {\r\n      achievementaward(45)\r\n    }\r\n    if (G.transcendPointGain.gte(1e308)) {\r\n      achievementaward(46)\r\n    }\r\n    if (G.transcendPointGain.gte('1e1500')) {\r\n      achievementaward(47)\r\n    }\r\n    if (G.transcendPointGain.gte('1e25000')) {\r\n      achievementaward(48)\r\n    }\r\n    if (G.transcendPointGain.gte('1e100000')) {\r\n      achievementaward(49)\r\n    }\r\n  }\r\n  if (i === 3) {\r\n    if (player.reincarnatenoaccelerator) {\r\n      achievementaward(62)\r\n    }\r\n    if (player.reincarnatenomultiplier) {\r\n      achievementaward(59)\r\n    }\r\n    if (player.reincarnatenocoinupgrades) {\r\n      achievementaward(67)\r\n    }\r\n    if (player.reincarnatenocoinorprestigeupgrades) {\r\n      achievementaward(68)\r\n    }\r\n    if (player.reincarnatenocoinprestigeortranscendupgrades) {\r\n      achievementaward(69)\r\n    }\r\n    if (player.reincarnatenocoinprestigetranscendorgeneratorupgrades) {\r\n      achievementaward(70)\r\n    }\r\n    if (G.reincarnationPointGain.gte(1)) {\r\n      achievementaward(50)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte(1e5)) {\r\n      achievementaward(51)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte(1e30)) {\r\n      achievementaward(52)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte(1e200)) {\r\n      achievementaward(53)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte('1e1500')) {\r\n      achievementaward(54)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte('1e5000')) {\r\n      achievementaward(55)\r\n\r\n    }\r\n    if (G.reincarnationPointGain.gte('1e7777')) {\r\n      achievementaward(56)\r\n\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Array of [index, bar to get achievement if greater than, achievement number]\r\n */\r\nconst challengeCompletionsBar: [number, number, number][] = [\r\n  [1, 0.5, 78], [1, 2.5, 79], [1, 4.5, 80], [1, 9.5, 81], [1, 19.5, 82], [1, 49.5, 83], [1, 74.5, 84],\r\n  [2, 0.5, 85], [2, 2.5, 86], [2, 4.5, 87], [2, 9.5, 88], [2, 19.5, 89], [2, 49.5, 90], [2, 74.5, 91],\r\n  [3, 0.5, 92], [3, 2.5, 93], [3, 4.5, 94], [3, 9.5, 95], [3, 19.5, 96], [3, 49.5, 97], [3, 74.5, 98],\r\n  [4, 0.5, 99], [4, 2.5, 100], [4, 4.5, 101], [4, 9.5, 102], [4, 19.5, 103], [4, 49.5, 104], [4, 74.5, 105],\r\n  [5, 0.5, 106], [5, 2.5, 107], [5, 4.5, 108], [5, 9.5, 109], [5, 19.5, 110], [5, 49.5, 111], [5, 74.5, 112],\r\n  [6, 0.5, 113], [6, 1.5, 114], [6, 2.5, 115], [6, 4.5, 116], [6, 9.5, 117], [6, 14.5, 118], [6, 24.5, 119],\r\n  [7, 0.5, 120], [7, 1.5, 121], [7, 2.5, 122], [7, 4.5, 123], [7, 9.5, 124], [7, 14.5, 125], [7, 24.5, 126],\r\n  [8, 0.5, 127], [8, 1.5, 128], [8, 2.5, 129], [8, 4.5, 130], [8, 9.5, 131], [8, 19.5, 132], [8, 24.5, 133],\r\n  [9, 0.5, 134], [9, 1.5, 135], [9, 2.5, 136], [9, 4.5, 137], [9, 9.5, 138], [9, 19.5, 139], [9, 24.5, 140],\r\n  [10, 0.5, 141], [10, 1.5, 142], [10, 2.5, 143], [10, 4.5, 144], [10, 9.5, 145], [10, 19.5, 146], [10, 24.5, 147],\r\n  [15, 0.5, 252]\r\n]\r\n\r\nconst challengeCompletionsNotAuto: Record<number, [string, number]> = {\r\n  1: ['1e1000', 75],\r\n  2: ['1e1000', 76],\r\n  3: ['1e99999', 77],\r\n  5: ['1e120000', 63]\r\n}\r\n\r\nexport const challengeachievementcheck = (i: number, auto?: boolean) => {\r\n  const generatorcheck = sumContents(player.upgrades.slice(101, 106))\r\n\r\n  for (const [, bar, ach] of challengeCompletionsBar.filter(([o]) => o === i)) {\r\n    if (player.challengecompletions[i] > bar && player.achievements[ach] < 1) {\r\n      achievementaward(ach)\r\n    }\r\n  }\r\n\r\n  // Challenges 1, 2, 3 check for not buying generators and getting X coins\r\n  // Challenge 5 check for not buying Acc/Acc Boosts and getting 1.00e120,000 coins\r\n  if ([1, 2, 3, 5].includes(i) && !auto) {\r\n    const [gte, ach] = challengeCompletionsNotAuto[i]\r\n    if (i === 5) {\r\n      if (player.coinsThisTranscension.gte(gte) && player.acceleratorBought === 0 && player.acceleratorBoostBought === 0) {\r\n        achievementaward(ach)\r\n      }\r\n    } else if (player.coinsThisTranscension.gte(gte) && generatorcheck === 0) {\r\n      achievementaward(ach)\r\n    }\r\n  }\r\n\r\n  if (i >= 11 && i <= 14) {\r\n    const challengeArray = [0, 1, 2, 3, 5, 10, 20, 30]\r\n    for (let j = 1; j <= 7; j++) {\r\n      if (player.challengecompletions[i] >= challengeArray[j] && player.achievements[119 + 7 * i + j] < 1) {\r\n        achievementaward(119 + 7 * i + j)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (player.challengecompletions[10] >= 50 && i === 11 && player.usedCorruptions[7] >= 5 && player.achievements[247] < 1) {\r\n    achievementaward(247)\r\n  }\r\n}\r\n\r\n// \\) \\{\\n\\s+achievementaward\\(\\d+\\)\\n\\s+\\}\r\n\r\n/**\r\n * Requirements for each building achievement\r\n * @type {(() => boolean)[]}\r\n */\r\nconst buildAchievementReq: (() => boolean)[] = [\r\n  () => (player.firstOwnedCoin >= 1 && player.achievements[1] < 0.5),\r\n  () => (player.firstOwnedCoin >= 10 && player.achievements[2] < 0.5),\r\n  () => (player.firstOwnedCoin >= 100 && player.achievements[3] < 0.5),\r\n  () => (player.firstOwnedCoin >= 1000 && player.achievements[4] < 0.5),\r\n  () => (player.firstOwnedCoin >= 5000 && player.achievements[5] < 0.5),\r\n  () => (player.firstOwnedCoin >= 10000 && player.achievements[6] < 0.5),\r\n  () => (player.firstOwnedCoin >= 20000 && player.achievements[7] < 0.5),\r\n  () => (player.secondOwnedCoin >= 1 && player.achievements[8] < 0.5),\r\n  () => (player.secondOwnedCoin >= 10 && player.achievements[9] < 0.5),\r\n  () => (player.secondOwnedCoin >= 100 && player.achievements[10] < 0.5),\r\n  () => (player.secondOwnedCoin >= 1000 && player.achievements[11] < 0.5),\r\n  () => (player.secondOwnedCoin >= 5000 && player.achievements[12] < 0.5),\r\n  () => (player.secondOwnedCoin >= 10000 && player.achievements[13] < 0.5),\r\n  () => (player.secondOwnedCoin >= 20000 && player.achievements[14] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 1 && player.achievements[15] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 10 && player.achievements[16] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 100 && player.achievements[17] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 1000 && player.achievements[18] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 5000 && player.achievements[19] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 10000 && player.achievements[20] < 0.5),\r\n  () => (player.thirdOwnedCoin >= 20000 && player.achievements[21] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 1 && player.achievements[22] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 10 && player.achievements[23] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 100 && player.achievements[24] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 1000 && player.achievements[25] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 5000 && player.achievements[26] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 10000 && player.achievements[27] < 0.5),\r\n  () => (player.fourthOwnedCoin >= 20000 && player.achievements[28] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 1 && player.achievements[29] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 10 && player.achievements[30] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 66 && player.achievements[31] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 666 && player.achievements[32] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 6666 && player.achievements[33] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 17777 && player.achievements[34] < 0.5),\r\n  () => (player.fifthOwnedCoin >= 42777 && player.achievements[35] < 0.5)\r\n]\r\n\r\nexport const buildingAchievementCheck = () => {\r\n  for (const req of buildAchievementReq) {\r\n    if (req()) {\r\n      const idx = buildAchievementReq.indexOf(req) + 1\r\n      achievementaward(idx)\r\n    }\r\n  }\r\n}\r\n\r\nexport const ascensionAchievementCheck = (i: number, score = 0) => {\r\n  if (i === 1) {\r\n    const ascendCountArray = [0, 1, 2, 10, 100, 1000, 14142, 141421, 1414213, //Column 1\r\n      1e7, 1e8, 2e9, 4e10, 8e11, 1.6e13, 1e14] //Column 2\r\n    for (let j = 1; j <= 7; j++) {\r\n      if (player.ascensionCount >= ascendCountArray[j] && player.achievements[182 + j] < 1) {\r\n        achievementaward(182 + j)\r\n      }\r\n      if (player.ascensionCount >= ascendCountArray[j + 8] && player.achievements[259 + j] < 1) {\r\n        achievementaward(259 + j)\r\n      }\r\n    }\r\n    if (player.ascensionCount >= ascendCountArray[8] && player.achievements[240] < 1) {\r\n      achievementaward(240)\r\n    }\r\n  }\r\n  if (i === 2) {\r\n    const constantArray = [0, 3.14, 1e6, 4.32e10, 6.9e21, 1.509e33, 1e66, '1.8e308', //Column 1\r\n      '1e1000', '1e5000', '1e15000', '1e50000', '1e100000', '1e300000', '1e1000000'] //Column 2\r\n    for (let j = 1; j <= 7; j++) {\r\n      if (player.ascendShards.gte(constantArray[j]) && player.achievements[189 + j] < 1) {\r\n        achievementaward(189 + j)\r\n      }\r\n      if (player.ascendShards.gte(constantArray[j + 7]) && player.achievements[266 + j] < 1) {\r\n        achievementaward(266 + j)\r\n      }\r\n    }\r\n  }\r\n  if (i === 3) {\r\n    const scoreArray = [0, 1e5, 1e6, 1e7, 1e8, 1e9, 5e9, 2.5e10, //Column 1\r\n      1e12, 1e14, 1e17, 2e18, 4e19, 1e21, 1e23] //Column 2\r\n    for (let j = 1; j <= 7; j++) {\r\n      if (score >= scoreArray[j] && player.achievements[224 + j] < 1) {\r\n        achievementaward(224 + j)\r\n      }\r\n\r\n      if (score >= scoreArray[7 + j] && player.achievements[252 + j] < 1) {\r\n        achievementaward(252 + j)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAchievementQuarks = (i: number) => {\r\n  let multiplier = 1\r\n  if (i >= 183) {\r\n    multiplier = 5\r\n  }\r\n  if (i >= 253) {\r\n    multiplier = 40\r\n  }\r\n\r\n  const globalQuarkMultiplier = player.worlds.applyBonus(1)\r\n  let actualMultiplier = multiplier * globalQuarkMultiplier\r\n  if (actualMultiplier > 100) {\r\n    actualMultiplier = Math.pow(100, 0.6) * Math.pow(actualMultiplier, 0.4)\r\n  }\r\n\r\n  return Math.floor(achievementpointvalues[i] * actualMultiplier)\r\n}\r\n\r\nexport const achievementdescriptions = (i: number) => {\r\n  const y = i18next.t(`achievements.descriptions.${i}`, { number: `${i}` })\r\n  const z = player.achievements[i] > 0.5 ? i18next.t('achievements.completed') : ''\r\n  const k = areward(i)\r\n\r\n  DOMCacheGetOrSet('achievementdescription').textContent = y + z\r\n  DOMCacheGetOrSet('achievementreward').textContent = i18next.t('achievements.rewardGainMessage', {\r\n    x: achievementpointvalues[i],\r\n    y: format(getAchievementQuarks(i), 0, true),\r\n    z: k\r\n  })\r\n\r\n  if (player.achievements[i] > 0.5) {\r\n    DOMCacheGetOrSet('achievementdescription').style.color = 'gold'\r\n  } else {\r\n    DOMCacheGetOrSet('achievementdescription').style.color = 'white'\r\n  }\r\n}\r\n\r\nexport const achievementaward = (num: number) => {\r\n  if (player.achievements[num] < 1) {\r\n    if (player.toggles[34]) {\r\n      const description = i18next.t(`achievements.descriptions.${num}`, { number: `${num}` })\r\n      void Notification(i18next.t('achievements.notification', { m: description }))\r\n    }\r\n\r\n    void achievementAlerts(num)\r\n    player.achievementPoints += achievementpointvalues[num]\r\n    player.worlds.add(getAchievementQuarks(num), false)\r\n\r\n    DOMCacheGetOrSet('achievementprogress').textContent = i18next.t('achievements.totalPoints', {\r\n      x: format(player.achievementPoints),\r\n      y: format(totalachievementpoints),\r\n      z: (100 * player.achievementPoints / totalachievementpoints).toPrecision(4)\r\n    })\r\n\r\n    player.achievements[num] = 1\r\n    revealStuff()\r\n  }\r\n\r\n  DOMCacheGetOrSet(`ach${num}`).style.backgroundColor = 'Green'\r\n  Synergism.emit('achievement', num)\r\n}\r\n\r\n", "import { player, format } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { CalcECC } from './Challenges'\r\nimport { calculateRuneLevels } from './Calculate'\r\nimport { achievementaward } from './Achievements'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\nconst talismanResourceCosts = {\r\n  shard: {\r\n    obtainium: 1e13,\r\n    offerings: 1e2,\r\n    name: 'Talisman Shard'\r\n  },\r\n  commonFragment: {\r\n    obtainium: 1e14,\r\n    offerings: 1e4,\r\n    name: 'Common Fragment'\r\n  },\r\n  uncommonFragment: {\r\n    obtainium: 1e16,\r\n    offerings: 1e5,\r\n    name: 'Uncommon Fragment'\r\n  },\r\n  rareFragment: {\r\n    obtainium: 1e18,\r\n    offerings: 1e6,\r\n    name: 'Rare Fragment'\r\n  },\r\n  epicFragment: {\r\n    obtainium: 1e20,\r\n    offerings: 1e7,\r\n    name: 'Epic Fragment'\r\n  },\r\n  legendaryFragment: {\r\n    obtainium: 1e22,\r\n    offerings: 1e8,\r\n    name: 'Legendary Fragment'\r\n  },\r\n  mythicalFragment: {\r\n    obtainium: 1e24,\r\n    offerings: 1e9,\r\n    name: 'Mythical Fragment'\r\n  }\r\n}\r\n\r\nconst num = ['One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven'] as const\r\n\r\nexport const calculateMaxTalismanLevel = (i: number) => {\r\n  let maxLevel = 30 * player.talismanRarity[i]\r\n  maxLevel += 6 * CalcECC('ascension', player.challengecompletions[13])\r\n  maxLevel += Math.floor(player.researches[200] / 400)\r\n\r\n  if (player.cubeUpgrades[67] > 0 && i === 3) {\r\n    maxLevel += 1337\r\n  }\r\n\r\n  return maxLevel\r\n}\r\n\r\nconst getTalismanResourceInfo = (type: keyof typeof talismanResourceCosts, percentage = player.buyTalismanShardPercent) => {\r\n  const obtainiumCost = talismanResourceCosts[type].obtainium\r\n  const offeringCost = talismanResourceCosts[type].offerings\r\n\r\n  const maxBuyObtainium = Math.max(1, Math.floor(player.researchPoints / obtainiumCost))\r\n  const maxBuyOffering = Math.max(1, Math.floor(player.runeshards / (offeringCost)))\r\n  const amountToBuy = Math.max(1, Math.floor(percentage / 100 * Math.min(maxBuyObtainium, maxBuyOffering)))\r\n  const canBuy = (obtainiumCost <= player.researchPoints && offeringCost <= player.runeshards) ? true : false\r\n  return {\r\n    canBuy, //Boolean, if false will not buy any fragments\r\n    buyAmount: amountToBuy, //Integer, will buy as specified above.\r\n    obtainiumCost: obtainiumCost * amountToBuy, //Integer, cost in obtainium to buy (buyAmount) resource\r\n    offeringCost: offeringCost * amountToBuy //Integer, cost in offerings to buy (buyAmount) resource\r\n  }\r\n}\r\n\r\nexport const updateTalismanCostDisplay = (type: keyof typeof talismanResourceCosts | null, percentage = player.buyTalismanShardPercent) => {\r\n  const el = DOMCacheGetOrSet('talismanFragmentCost')\r\n  if (type) {\r\n    const talismanCostInfo = getTalismanResourceInfo(type, percentage)\r\n    const TalismanName = talismanResourceCosts[type].name\r\n\r\n    el.textContent = i18next.t('runes.talismans.costToBuy', {\r\n      name: TalismanName,\r\n      buyAmount: format(talismanCostInfo.buyAmount),\r\n      obtainium: format(talismanCostInfo.obtainiumCost),\r\n      offerings: format(talismanCostInfo.offeringCost)\r\n    })\r\n  } else {\r\n    // Buy All\r\n    el.textContent = i18next.t('runes.talismans.clickBuyEveryType')\r\n  }\r\n}\r\n\r\nexport const toggleTalismanBuy = (i = player.buyTalismanShardPercent) => {\r\n  DOMCacheGetOrSet('talismanTen').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('talismanTwentyFive').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('talismanFifty').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('talismanHundred').style.backgroundColor = ''\r\n  player.buyTalismanShardPercent = i\r\n  let x = 'Ten'\r\n  if (i === 25) {\r\n    x = 'TwentyFive'\r\n  }\r\n  if (i === 50) {\r\n    x = 'Fifty'\r\n  }\r\n  if (i === 100) {\r\n    x = 'Hundred'\r\n  }\r\n\r\n  DOMCacheGetOrSet(`talisman${x}`).style.backgroundColor = 'green'\r\n}\r\n\r\nexport const updateTalismanInventory = () => {\r\n  DOMCacheGetOrSet('talismanShardInventory').textContent = format(player.talismanShards)\r\n  DOMCacheGetOrSet('commonFragmentInventory').textContent = format(player.commonFragments)\r\n  DOMCacheGetOrSet('uncommonFragmentInventory').textContent = format(player.uncommonFragments)\r\n  DOMCacheGetOrSet('rareFragmentInventory').textContent = format(player.rareFragments)\r\n  DOMCacheGetOrSet('epicFragmentInventory').textContent = format(player.epicFragments)\r\n  DOMCacheGetOrSet('legendaryFragmentInventory').textContent = format(player.legendaryFragments)\r\n  DOMCacheGetOrSet('mythicalFragmentInventory').textContent = format(player.mythicalFragments)\r\n}\r\n\r\nexport const buyAllTalismanResources = () => {\r\n  const talismanItemNames = ['shard', 'commonFragment', 'uncommonFragment', 'rareFragment', 'epicFragment', 'legendaryFragment', 'mythicalFragment'] as const\r\n  for (let index = talismanItemNames.length - 1; index >= 0; index--) {\r\n    buyTalismanResources(talismanItemNames[index])\r\n  }\r\n}\r\n\r\nexport const buyTalismanResources = (type: keyof typeof talismanResourceCosts, percentage = player.buyTalismanShardPercent) => {\r\n  const talismanResourcesData = getTalismanResourceInfo(type, percentage)\r\n\r\n  if (talismanResourcesData.canBuy) {\r\n    if (type === 'shard') {\r\n      player.talismanShards += talismanResourcesData.buyAmount\r\n    } else {\r\n      player[`${type}s` as const] += talismanResourcesData.buyAmount\r\n    }\r\n    if (type === 'mythicalFragment' && player.mythicalFragments >= 1e25 && player.achievements[239] < 1) {\r\n      achievementaward(239)\r\n    }\r\n\r\n    player.researchPoints -= talismanResourcesData.obtainiumCost\r\n    player.runeshards -= talismanResourcesData.offeringCost\r\n\r\n    // When dealing with high values, calculations can be very slightly off due to floating point precision\r\n    // and result in buying slightly (usually 1) more than the player can actually afford.\r\n    // This results in negative obtainium or offerings with further calcs somehow resulting in NaN/undefined.\r\n    // Instead of trying to work around floating point limits, just make sure nothing breaks as a result.\r\n    // The calculation being done overall is similar to the following calculation:\r\n    // 2.9992198253874083e47 - (Math.floor(2.9992198253874083e47 / 1e20) * 1e20)\r\n    // which, for most values, returns 0, but values like this example will return a negative number instead.\r\n    if (player.researchPoints < 0) {\r\n      player.researchPoints = 0\r\n    }\r\n    if (player.runeshards < 0) {\r\n      player.runeshards = 0\r\n    }\r\n  }\r\n  updateTalismanCostDisplay(type, percentage)\r\n  updateTalismanInventory()\r\n}\r\n\r\nexport const showTalismanEffect = (i: number) => {\r\n  DOMCacheGetOrSet('talismanlevelup').style.display = 'none'\r\n  DOMCacheGetOrSet('talismanEffect').style.display = 'block'\r\n  DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n  const a = DOMCacheGetOrSet('talismanSummary')\r\n  const b = DOMCacheGetOrSet('talismanBonus')\r\n  const c = DOMCacheGetOrSet('talismanRune1Effect')\r\n  const d = DOMCacheGetOrSet('talismanRune2Effect')\r\n  const e = DOMCacheGetOrSet('talismanRune3Effect')\r\n  const f = DOMCacheGetOrSet('talismanRune4Effect')\r\n  const g = DOMCacheGetOrSet('talismanRune5Effect')\r\n  const h = DOMCacheGetOrSet('talismanMythicEffect')\r\n\r\n  switch (i) {\r\n    case 0:\r\n      a.textContent = '=-=-=-= Exemption Talisman Effects =-=-=-='\r\n      b.textContent = `Taxes -${format(10 * (player.talismanRarity[0] - 1))}%`\r\n      c.textContent = `Bonus Speed Rune Levels: ${format(G.talisman1Effect[1], 2, true)}`\r\n      d.textContent = `Bonus Duplication Rune Levels: ${format(G.talisman1Effect[2], 2, true)}`\r\n      e.textContent = `Bonus Prism Rune Levels: ${format(G.talisman1Effect[3], 2, true)}`\r\n      f.textContent = `Bonus Thrift Rune Levels: ${format(G.talisman1Effect[4], 2, true)}`\r\n      g.textContent = `Bonus SI Rune Levels: ${format(G.talisman1Effect[5], 2, true)}`\r\n      h.textContent = 'Mythic Effect: +400 Duplication Rune Levels!'\r\n      break\r\n    case 1:\r\n      a.textContent = '=-=-=-= Chronos Talisman Effects =-=-=-='\r\n      b.textContent = `Gain +${format(10 * (player.talismanRarity[1] - 1))}% Global Speed Acceleration.`\r\n      c.textContent = `Bonus Speed Rune Levels: ${format(G.talisman2Effect[1], 2, true)}`\r\n      d.textContent = `Bonus Duplication Rune Levels: ${format(G.talisman2Effect[2], 2, true)}`\r\n      e.textContent = `Bonus Prism Rune Levels: ${format(G.talisman2Effect[3], 2, true)}`\r\n      f.textContent = `Bonus Thrift Rune Levels: ${format(G.talisman2Effect[4], 2, true)}`\r\n      g.textContent = `Bonus SI Rune Levels: ${format(G.talisman2Effect[5], 2, true)}`\r\n      h.textContent = 'Mythic Effect: +400 Speed Rune Levels!'\r\n      break\r\n    case 2:\r\n      a.textContent = '=-=-=-= Midas Talisman Effects =-=-=-='\r\n      b.textContent = 'Rune Blessing bonuses +' + format(10 * (player.talismanRarity[2] - 1)) + '%'\r\n      c.textContent = 'Bonus Speed Rune Levels: ' + format(G.talisman3Effect[1], 2, true)\r\n      d.textContent = 'Bonus Duplication Rune Levels: ' + format(G.talisman3Effect[2], 2, true)\r\n      e.textContent = 'Bonus Prism Rune Levels: ' + format(G.talisman3Effect[3], 2, true)\r\n      f.textContent = 'Bonus Thrift Rune Levels: ' + format(G.talisman3Effect[4], 2, true)\r\n      g.textContent = 'Bonus SI Rune Levels: ' + format(G.talisman3Effect[5], 2, true)\r\n      h.textContent = 'Mythic Effect: +400 Thrift Rune Levels!'\r\n      break\r\n    case 3:\r\n      a.textContent = '=-=-=-= Metaphysics Talisman Effects =-=-=-='\r\n      b.textContent = 'Talismans\\' Bonus Rune Levels +' + format(0.02 * (player.talismanRarity[3] - 1), 2) + ' per level'\r\n      c.textContent = 'Bonus Speed Rune Levels: ' + format(G.talisman4Effect[1], 2, true)\r\n      d.textContent = 'Bonus Duplication Rune Levels: ' + format(G.talisman4Effect[2], 2, true)\r\n      e.textContent = 'Bonus Prism Rune Levels: ' + format(G.talisman4Effect[3], 2, true)\r\n      f.textContent = 'Bonus Thrift Rune Levels: ' + format(G.talisman4Effect[4], 2, true)\r\n      g.textContent = 'Bonus SI Rune Levels: ' + format(G.talisman4Effect[5], 2, true)\r\n      h.textContent = 'Mythic Effect: +400 Prism Rune Levels!'\r\n      break\r\n    case 4:\r\n      a.textContent = '=-=-=-= Polymath Talisman Effects =-=-=-='\r\n      b.textContent = 'Rune Spirit Bonuses +' + format(1 * (player.talismanRarity[4] - 1)) + '%'\r\n      c.textContent = 'Bonus Speed Rune Levels: ' + format(G.talisman5Effect[1], 2, true)\r\n      d.textContent = 'Bonus Duplication Rune Levels: ' + format(G.talisman5Effect[2], 2, true)\r\n      e.textContent = 'Bonus Prism Rune Levels: ' + format(G.talisman5Effect[3], 2, true)\r\n      f.textContent = 'Bonus Thrift Rune Levels: ' + format(G.talisman5Effect[4], 2, true)\r\n      g.textContent = 'Bonus SI Rune Levels: ' + format(G.talisman5Effect[5], 2, true)\r\n      h.textContent = 'Mythic Effect: +400 SI Rune Levels!'\r\n      break\r\n    case 5:\r\n      a.textContent = '=-=-=-= Mortuus Est Talisman Effects =-=-=-='\r\n      b.textContent = 'Bonus Ant Levels: +' + format(2 * (player.talismanRarity[5] - 1))\r\n      c.textContent = 'Bonus Speed Rune Levels: ' + format(G.talisman6Effect[1], 2, true)\r\n      d.textContent = 'Bonus Duplication Rune Levels: ' + format(G.talisman6Effect[2], 2, true)\r\n      e.textContent = 'Bonus Prism Rune Levels: ' + format(G.talisman6Effect[3], 2, true)\r\n      f.textContent = 'Bonus Thrift Rune Levels: ' + format(G.talisman6Effect[4], 2, true)\r\n      g.textContent = 'Bonus SI Rune Levels: ' + format(G.talisman6Effect[5], 2, true)\r\n      h.textContent = 'Mythic Effect: Gain ant speed based on your total rune level!'\r\n      break\r\n    case 6:\r\n      a.textContent = '=-=-=-= Plastic Talisman Effects =-=-=-='\r\n      b.textContent = 'Gain 1x normal production (Joke)!'\r\n      c.textContent = 'Bonus Speed Rune Levels: ' + format(G.talisman7Effect[1], 2, true)\r\n      d.textContent = 'Bonus Duplication Rune Levels: ' + format(G.talisman7Effect[2], 2, true)\r\n      e.textContent = 'Bonus Prism Rune Levels: ' + format(G.talisman7Effect[3], 2, true)\r\n      f.textContent = 'Bonus Thrift Rune Levels: ' + format(G.talisman7Effect[4], 2, true)\r\n      g.textContent = 'Bonus SI Rune Levels: ' + format(G.talisman7Effect[5], 2, true)\r\n      h.textContent = 'Mythic Effect: Gain 1x your normal quark values (Joke)!'\r\n      break\r\n  }\r\n  if (player.talismanRarity[i] !== 6) {\r\n    h.textContent = 'Get Max Enhance for a Mythical bonus effect!'\r\n  }\r\n}\r\n\r\nexport const showTalismanPrices = (i: number) => {\r\n  DOMCacheGetOrSet('talismanEffect').style.display = 'none'\r\n  DOMCacheGetOrSet('talismanlevelup').style.display = 'block'\r\n  DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n  const a = DOMCacheGetOrSet('talismanShardCost')\r\n  const b = DOMCacheGetOrSet('talismanCommonFragmentCost')\r\n  const c = DOMCacheGetOrSet('talismanUncommonFragmentCost')\r\n  const d = DOMCacheGetOrSet('talismanRareFragmentCost')\r\n  const e = DOMCacheGetOrSet('talismanEpicFragmentCost')\r\n  const f = DOMCacheGetOrSet('talismanLegendaryFragmentCost')\r\n  const g = DOMCacheGetOrSet('talismanMythicalFragmentCost')\r\n\r\n  DOMCacheGetOrSet('talismanLevelUpSummary').textContent = i18next.t('runes.resourcesToLevelup')\r\n  DOMCacheGetOrSet('talismanLevelUpSummary').style.color = 'silver'\r\n\r\n  let m = G.talismanLevelCostMultiplier[i]\r\n  if (player.talismanLevels[i] >= 120) {\r\n    m *= (player.talismanLevels[i] - 90) / 30\r\n  }\r\n  if (player.talismanLevels[i] >= 150) {\r\n    m *= (player.talismanLevels[i] - 120) / 30\r\n  }\r\n  if (player.talismanLevels[i] >= 180) {\r\n    m *= (player.talismanLevels[i] - 170) / 10\r\n  }\r\n  a.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i], 3))))\r\n  b.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i] - 30, 3))))\r\n  c.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i] - 60, 3))))\r\n  d.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i] - 90, 3))))\r\n  e.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i] - 120, 3))))\r\n  f.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i] - 150, 3))))\r\n  g.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i] - 150, 3))))\r\n}\r\n\r\nexport const showEnhanceTalismanPrices = (i: number) => {\r\n  DOMCacheGetOrSet('talismanEffect').style.display = 'none'\r\n  DOMCacheGetOrSet('talismanlevelup').style.display = 'block'\r\n  DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n  const a = DOMCacheGetOrSet('talismanShardCost')\r\n  const b = DOMCacheGetOrSet('talismanCommonFragmentCost')\r\n  const c = DOMCacheGetOrSet('talismanUncommonFragmentCost')\r\n  const d = DOMCacheGetOrSet('talismanRareFragmentCost')\r\n  const e = DOMCacheGetOrSet('talismanEpicFragmentCost')\r\n  const f = DOMCacheGetOrSet('talismanLegendaryFragmentCost')\r\n  const g = DOMCacheGetOrSet('talismanMythicalFragmentCost')\r\n\r\n  DOMCacheGetOrSet('talismanLevelUpSummary').textContent = i18next.t('runes.resourcesToEnhance')\r\n  DOMCacheGetOrSet('talismanLevelUpSummary').style.color = 'gold'\r\n\r\n  const array = [G.commonTalismanEnhanceCost, G.uncommonTalismanEnchanceCost, G.rareTalismanEnchanceCost, G.epicTalismanEnhanceCost, G.legendaryTalismanEnchanceCost, G.mythicalTalismanEnchanceCost]\r\n  const index = player.talismanRarity[i]\r\n  const costArray = array[index-1]\r\n  const m = G.talismanLevelCostMultiplier[i]\r\n  a.textContent = format(m * costArray[1])\r\n  b.textContent = format(m * costArray[2])\r\n  c.textContent = format(m * costArray[3])\r\n  d.textContent = format(m * costArray[4])\r\n  e.textContent = format(m * costArray[5])\r\n  f.textContent = format(m * costArray[6])\r\n  g.textContent = format(m * costArray[7])\r\n}\r\n\r\nexport const showRespecInformation = (i: number) => {\r\n  G.talismanRespec = i\r\n  DOMCacheGetOrSet('talismanEffect').style.display = 'none'\r\n  DOMCacheGetOrSet('talismanlevelup').style.display = 'none'\r\n  DOMCacheGetOrSet('talismanrespec').style.display = 'block'\r\n\r\n  const runeName = ['Speed Rune', 'Duplication Rune', 'Prism Rune', 'Thrift Rune', 'SI Rune']\r\n  const runeModifier = ['Positive', 'Positive', 'Positive', 'Positive']\r\n  if (i <= 6) {\r\n    for (let k = 1; k <= 5; k++) {\r\n      G.mirrorTalismanStats[k] = player[`talisman${num[i]}` as const][k]\r\n    }\r\n    DOMCacheGetOrSet('confirmTalismanRespec').textContent = 'Confirm [-100,000 Offerings]'\r\n  }\r\n  if (i === 7) {\r\n    for (let k = 1; k <= 5; k++) {\r\n      G.mirrorTalismanStats[k] = 1\r\n    }\r\n    DOMCacheGetOrSet('confirmTalismanRespec').textContent = 'Confirm ALL [-400,000 Offerings]'\r\n  }\r\n  for (let j = 1; j <= 5; j++) {\r\n    if (G.mirrorTalismanStats[j] === 1) {\r\n      DOMCacheGetOrSet(`talismanRespecButton${j}`).style.border = '2px solid limegreen'\r\n      runeModifier[j-1] = 'Positive'\r\n    } else if (G.mirrorTalismanStats[j] === -1) {\r\n      DOMCacheGetOrSet(`talismanRespecButton${j}`).style.border = '2px solid crimson'\r\n      runeModifier[j-1] = 'Negative'\r\n    }\r\n    DOMCacheGetOrSet(`talismanRespecButton${j}`).textContent = runeName[j-1] + ': ' + runeModifier[j-1]\r\n  }\r\n\r\n  DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none'\r\n}\r\n\r\nexport const changeTalismanModifier = (i: number) => {\r\n  const runeName = [null, 'Speed Rune', 'Duplication Rune', 'Prism Rune', 'Thrift Rune', 'SI Rune']\r\n  const el = DOMCacheGetOrSet(`talismanRespecButton${i}`)\r\n  if (G.mirrorTalismanStats[i] === 1) {\r\n    G.mirrorTalismanStats[i] = (-1)\r\n    // TODO(@KhafraDev): i18n\r\n    el.textContent = `${runeName[i]}: Negative`\r\n    el.style.border = '2px solid crimson'\r\n  } else {\r\n    G.mirrorTalismanStats[i] = (1)\r\n    // TODO(@KhafraDev): i18n\r\n    el.textContent = `${runeName[i]}: Positive`\r\n    el.style.border = '2px solid limegreen'\r\n  }\r\n\r\n  const checkSum = G.mirrorTalismanStats.reduce((a, b) => a! + b!, 0)\r\n\r\n  if (checkSum === 1) {\r\n    DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'block'\r\n  } else {\r\n    DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none'\r\n  }\r\n\r\n}\r\n\r\nexport const respecTalismanConfirm = (i: number) => {\r\n  if (player.runeshards >= 100000 && i < 7) {\r\n    for (let j = 1; j <= 5; j++) {\r\n      player[`talisman${num[i]}` as const][j] = G.mirrorTalismanStats[j]\r\n    }\r\n    player.runeshards -= 100000\r\n    DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none'\r\n    DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n    DOMCacheGetOrSet('talismanEffect').style.display = 'block'\r\n    showTalismanEffect(i)\r\n  } else if (player.runeshards >= 400000 && i === 7) {\r\n    player.runeshards -= 400000\r\n    for (let j = 0; j < 7; j++) {\r\n      for (let k = 1; k <= 5; k++) {\r\n        player[`talisman${num[j]}` as const][k] = G.mirrorTalismanStats[k]\r\n      }\r\n    }\r\n    DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none'\r\n  }\r\n\r\n  calculateRuneLevels()\r\n}\r\n\r\nexport const respecTalismanCancel = (i: number) => {\r\n  DOMCacheGetOrSet('talismanrespec').style.display = 'none'\r\n  if (i < 7) {\r\n    DOMCacheGetOrSet('talismanEffect').style.display = 'block'\r\n    showTalismanEffect(i)\r\n  }\r\n}\r\n\r\nexport const updateTalismanAppearance = (i: number) => {\r\n  const el = DOMCacheGetOrSet(`talisman${i+1}`)\r\n  const la = DOMCacheGetOrSet(`talisman${i + 1}level`)\r\n\r\n  const rarity = player.talismanRarity[i]\r\n  if (rarity === 1) {\r\n    el.style.border = '4px solid white'\r\n    la.style.color = 'white'\r\n  }\r\n  if (rarity === 2) {\r\n    el.style.border = '4px solid limegreen'\r\n    la.style.color = 'limegreen'\r\n  }\r\n  if (rarity === 3) {\r\n    el.style.border = '4px solid lightblue'\r\n    la.style.color = 'lightblue'\r\n  }\r\n  if (rarity === 4) {\r\n    el.style.border = '4px solid plum'\r\n    la.style.color = 'plum'\r\n  }\r\n  if (rarity === 5) {\r\n    el.style.border = '4px solid orange'\r\n    la.style.color = 'orange'\r\n  }\r\n  if (rarity === 6) {\r\n    el.style.border = '4px solid crimson'\r\n    la.style.color = 'var(--crimson-text-color)'\r\n  }\r\n}\r\n\r\n// Attempt to buy a fixed number of levels (number varies based on\r\n// ascension). Returns true if any levels were bought, false otherwise.\r\nexport const buyTalismanLevels = (i: number, auto = false): boolean => {\r\n  let max = 1\r\n  if (player.ascensionCount > 0) {\r\n    max = 30\r\n  }\r\n  if (player.highestSingularityCount > 0) {\r\n    max = 180\r\n  }\r\n  let hasPurchased = false\r\n  for (let j = 1; j <= max; j++) {\r\n    let checkSum = 0\r\n    let priceMult = G.talismanLevelCostMultiplier[i]\r\n    if (player.talismanLevels[i] >= 120) {\r\n      priceMult *= (player.talismanLevels[i] - 90) / 30\r\n    }\r\n    if (player.talismanLevels[i] >= 150) {\r\n      priceMult *= (player.talismanLevels[i] - 120) / 30\r\n    }\r\n    if (player.talismanLevels[i] >= 180) {\r\n      priceMult *= (player.talismanLevels[i] - 170) / 10\r\n    }\r\n\r\n    if (player.talismanLevels[i] < calculateMaxTalismanLevel(i)) {\r\n      if (player.talismanShards >= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i], 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.commonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i] - 30, 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.uncommonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i] - 60, 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.rareFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i] - 90, 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.epicFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i] - 120, 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.legendaryFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i] - 150, 3)))) {\r\n        checkSum++\r\n      }\r\n      if (player.mythicalFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i] - 150, 3)))) {\r\n        checkSum++\r\n      }\r\n    }\r\n\r\n    if (checkSum === 7) {\r\n      player.talismanShards -= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i], 3)))\r\n      player.commonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i] - 30, 3)))\r\n      player.uncommonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i] - 60, 3)))\r\n      player.rareFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i] - 90, 3)))\r\n      player.epicFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i] - 120, 3)))\r\n      player.legendaryFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i] - 150, 3)))\r\n      player.mythicalFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i] - 150, 3)))\r\n      player.talismanLevels[i] += 1\r\n      hasPurchased = true\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n\r\n  if (!auto && hasPurchased) {\r\n    showTalismanPrices(i)\r\n    // When adding game state recalculations, update the talisman autobuyer in tack() as well\r\n    updateTalismanInventory()\r\n    calculateRuneLevels()\r\n  }\r\n\r\n  return hasPurchased\r\n}\r\n\r\nexport const buyTalismanEnhance = (i: number, auto = false): boolean => {\r\n  let checkSum = 0\r\n  if (player.talismanRarity[i] < 6) {\r\n    const priceMult = G.talismanLevelCostMultiplier[i]\r\n    const array = [G.commonTalismanEnhanceCost, G.uncommonTalismanEnchanceCost, G.rareTalismanEnchanceCost, G.epicTalismanEnhanceCost, G.legendaryTalismanEnchanceCost, G.mythicalTalismanEnchanceCost]\r\n    const index = player.talismanRarity[i] - 1\r\n    const costArray = array[index]\r\n    if (player.commonFragments >= priceMult * costArray[2]) {\r\n      checkSum++\r\n    }\r\n    if (player.uncommonFragments >= priceMult * costArray[3]) {\r\n      checkSum++\r\n    }\r\n    if (player.rareFragments >= priceMult * costArray[4]) {\r\n      checkSum++\r\n    }\r\n    if (player.epicFragments >= priceMult * costArray[5]) {\r\n      checkSum++\r\n    }\r\n    if (player.legendaryFragments >= priceMult * costArray[6]) {\r\n      checkSum++\r\n    }\r\n    if (player.mythicalFragments >= priceMult * costArray[7]) {\r\n      checkSum++\r\n    }\r\n\r\n\r\n    if (checkSum === 6) {\r\n      player.commonFragments -= (priceMult * costArray[2])\r\n      player.uncommonFragments -= (priceMult * costArray[3])\r\n      player.rareFragments -= (priceMult * costArray[4])\r\n      player.epicFragments -= (priceMult * costArray[5])\r\n      player.legendaryFragments -= (priceMult * costArray[6])\r\n      player.mythicalFragments -= (priceMult * costArray[7])\r\n      player.talismanRarity[i] += 1\r\n\r\n      // Appearance always needs updating if bought\r\n      updateTalismanAppearance(i)\r\n      if (!auto) {\r\n        showEnhanceTalismanPrices(i)\r\n        // When adding game state recalculations, update the talisman autobuyer in tack() as well\r\n        updateTalismanInventory()\r\n        calculateRuneLevels()\r\n      }\r\n\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { calculateRuneExpGiven, calculateCorruptionPoints, calculateOfferings, calculateMaxRunes, calculateRuneExpToLevel, calculateRuneLevels, calculateEffectiveIALevel } from './Calculate'\r\nimport { Globals as G } from './Variables'\r\n\r\nimport Decimal from 'break_infinity.js'\r\nimport type { resetNames } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next, { type StringMap } from 'i18next'\r\n\r\nexport const displayRuneInformation = (i: number, updatelevelup = true) => {\r\n  const m = G.effectiveLevelMult\r\n  const SILevelMult = (1 + player.researches[84] / 200 * (1 + 1 * G.effectiveRuneSpiritPower[5] * calculateCorruptionPoints()/400))\r\n  const amountPerOffering = calculateRuneExpGiven(i - 1, false, player.runelevels[i - 1])\r\n\r\n  let options: StringMap\r\n\r\n  if (i === 1) {\r\n    options = {\r\n      bonus: format(Math.floor(Math.pow(G.rune1level * m / 4, 1.25))),\r\n      percent: format((G.rune1level / 4 * m), 2, true),\r\n      boost: format(Math.floor(G.rune1level / 20 * m))\r\n    }\r\n  } else if (i === 2) {\r\n    options = {\r\n      mult1: format(Math.floor(G.rune2level * m / 10) * Math.floor(1 + G.rune2level * m / 10) / 2),\r\n      mult2: format(m * G.rune2level / 4, 1, true),\r\n      tax: (99.9 * (1 - Math.pow(6, -(G.rune2level * m) / 1000))).toPrecision(4)\r\n    }\r\n  } else if (i === 3) {\r\n    options = {\r\n      mult: format(Decimal.pow(G.rune3level * m / 2, 2).times(Decimal.pow(2, G.rune3level * m / 2 - 8)).add(1), 3),\r\n      gain: format(Math.floor(G.rune3level / 16 * m))\r\n    }\r\n  } else if (i === 4) {\r\n    options = {\r\n      delay: (G.rune4level / 8 * m).toPrecision(3),\r\n      chance: Math.min(25, G.rune4level / 16),\r\n      tax: (99 * (1 - Math.pow(4, Math.min(0, (400 - G.rune4level) / 1100)))).toPrecision(4)\r\n    }\r\n  } else if (i === 5) {\r\n    options = {\r\n      gain: format((1 + G.rune5level / 200 * m * SILevelMult), 2, true),\r\n      speed: format(1 + Math.pow(G.rune5level * m * SILevelMult, 2) / 2500),\r\n      offerings: format((G.rune5level * m * SILevelMult * 0.005), 3, true)\r\n    }\r\n  } else if (i === 6) {\r\n    options = {\r\n      percent1: format(10 + 15/75 * calculateEffectiveIALevel(), 1, true),\r\n      percent2: format(1 * calculateEffectiveIALevel(), 0, true)\r\n    }\r\n  } else if (i === 7 && updatelevelup) {\r\n    options = { exp: format(1e256 * (1 + player.singularityCount)) }\r\n  }\r\n\r\n  if (updatelevelup) {\r\n    DOMCacheGetOrSet('runeshowlevelup').textContent = i18next.t(`runes.levelup.${i}`, options!)\r\n  }\r\n\r\n  DOMCacheGetOrSet(`runeshowpower${i}`).textContent = i18next.t(`runes.power.${i}`, options!)\r\n\r\n  if (updatelevelup) {\r\n    const arr = calculateOfferingsToLevelXTimes(i - 1, player.runelevels[i - 1], player.offeringbuyamount)\r\n    let offerings = 0\r\n    let j = 0\r\n    while (j < arr.length && (offerings + arr[j] <= player.runeshards || j === 0)) {\r\n      offerings += arr[j]\r\n      j++\r\n    }\r\n    const s = j === 1 ? 'once' : `${j} times`\r\n\r\n    DOMCacheGetOrSet('runeDisplayInfo').textContent = i18next.t('runes.perOfferingText', {\r\n      exp: format(amountPerOffering),\r\n      x: format(offerings),\r\n      y: s\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport const resetofferings = (input: resetNames) => {\r\n  player.runeshards = Math.min(1e300, player.runeshards + calculateOfferings(input))\r\n}\r\n\r\nexport const unlockedRune = (runeIndexPlusOne: number) => {\r\n  // Whether or not a rune is unlocked array\r\n  const unlockedRune = [\r\n    false,\r\n    true,\r\n    player.achievements[38] > 0.5,\r\n    player.achievements[44] > 0.5,\r\n    player.achievements[102] > 0.5,\r\n    player.researches[82] > 0.5,\r\n    player.shopUpgrades.infiniteAscent,\r\n    player.platonicUpgrades[20] > 0\r\n  ]\r\n  return unlockedRune[runeIndexPlusOne]\r\n}\r\n\r\n/**\r\n * checkMaxRunes returns how many unique runes are at the maximum level.\r\n * Does not take in params, returns a number equal to number of maxed runes.\r\n */\r\nexport const checkMaxRunes = (runeIndex: number) => {\r\n  let maxed = 0\r\n  for (let i = 0; i < runeIndex; i++) {\r\n    if (!unlockedRune(i + 1) || player.runelevels[i] >= calculateMaxRunes(i + 1)) {\r\n      maxed++\r\n    }\r\n  }\r\n  return maxed\r\n}\r\n\r\nexport const redeemShards = (runeIndexPlusOne: number, auto = false, cubeUpgraded = 0) => {\r\n  // if automated && 2x10 cube upgrade bought, this will be >0.\r\n  // runeIndex, the rune being added to\r\n  const runeIndex = runeIndexPlusOne - 1\r\n\r\n  let levelsToAdd = player.offeringbuyamount\r\n  if (auto) {\r\n    levelsToAdd = Math.pow(2, player.shopUpgrades.offeringAuto)\r\n  }\r\n  if (auto && cubeUpgraded > 0) {\r\n    levelsToAdd = Math.min(1e4, calculateMaxRunes(runeIndex + 1)) // limit to max 10k levels per call so the execution doesn't take too long if things get stuck\r\n  }\r\n  let levelsAdded = 0\r\n  if (player.runeshards > 0 && player.runelevels[runeIndex] < calculateMaxRunes(runeIndex + 1) && unlockedRune(runeIndex + 1)) {\r\n    let all = 0\r\n    const maxLevel = calculateMaxRunes(runeIndex + 1)\r\n    const amountArr = calculateOfferingsToLevelXTimes(runeIndex, player.runelevels[runeIndex], levelsToAdd)\r\n    let toSpendTotal = Math.min(player.runeshards, amountArr.reduce((x, y) => x + y, 0))\r\n    if (cubeUpgraded > 0) {\r\n      toSpendTotal = Math.min(player.runeshards, cubeUpgraded)\r\n    }\r\n    const fact = calculateRuneExpGiven(runeIndex, false, player.runelevels[runeIndex], true)\r\n    const a = player.upgrades[71] / 25\r\n    const add = fact[0] - a * player.runelevels[runeIndex]\r\n    const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1)\r\n    while (toSpendTotal > 0 && levelsAdded < levelsToAdd && player.runelevels[runeIndex] < maxLevel) {\r\n      const exp = calculateRuneExpToLevel(runeIndex, player.runelevels[runeIndex]) - player.runeexp[runeIndex]\r\n      const expPerOff = (add + a * player.runelevels[runeIndex]) * mult\r\n      let toSpend = Math.min(toSpendTotal, Math.ceil(exp / expPerOff))\r\n      if (isNaN(toSpend)) {\r\n        toSpend = toSpendTotal\r\n      }\r\n      toSpendTotal -= toSpend\r\n      player.runeshards -= toSpend\r\n      player.runeexp[runeIndex] += toSpend * expPerOff\r\n      all += toSpend\r\n      while (player.runeexp[runeIndex] >= calculateRuneExpToLevel(runeIndex) && player.runelevels[runeIndex] < maxLevel) {\r\n        player.runelevels[runeIndex] += 1\r\n        levelsAdded++\r\n      }\r\n    }\r\n    for (let runeToUpdate = 0; runeToUpdate < 5; ++runeToUpdate) {\r\n      if (unlockedRune(runeToUpdate + 1)) {\r\n        if (runeToUpdate !== runeIndex) {\r\n          player.runeexp[runeToUpdate] += all * calculateRuneExpGiven(runeToUpdate, true)\r\n        }\r\n        while (player.runeexp[runeToUpdate] >= calculateRuneExpToLevel(runeToUpdate) && player.runelevels[runeToUpdate] < calculateMaxRunes(runeToUpdate + 1)) {\r\n          player.runelevels[runeToUpdate] += 1\r\n        }\r\n      }\r\n    }\r\n    displayRuneInformation(runeIndexPlusOne)\r\n  }\r\n  calculateRuneLevels()\r\n  if (player.runeshards < 0 || !player.runeshards) {\r\n    player.runeshards = 0\r\n  }\r\n}\r\n\r\nexport const calculateOfferingsToLevelXTimes = (runeIndex: number, runeLevel: number, levels: number) => {\r\n  let exp = calculateRuneExpToLevel(runeIndex, runeLevel) - player.runeexp[runeIndex]\r\n  const maxLevel = calculateMaxRunes(runeIndex + 1)\r\n  const arr = []\r\n  let sum = 0\r\n  const off = player.runeshards\r\n  let levelsAdded = 0\r\n  const fact = calculateRuneExpGiven(runeIndex, false, runeLevel, true)\r\n  const a = player.upgrades[71] / 25\r\n  const add = fact[0] - a * runeLevel\r\n  const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1)\r\n  while (levelsAdded < levels && runeLevel + levelsAdded < maxLevel && sum < off) {\r\n    const expPerOff = (add + a * (runeLevel + levelsAdded)) * mult\r\n    const amount = Math.ceil(exp / expPerOff)\r\n    sum += amount\r\n    arr.push(amount)\r\n    levelsAdded += 1\r\n    exp = calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded)\r\n            - calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded - 1)\r\n  }\r\n  return arr\r\n}\r\n", "import { player } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\n\r\nexport const calculateTesseractBlessings = () => {\r\n  // The visual updates are handled in visualUpdateCubes()\r\n  const tesseractArray = [player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    let power = 1\r\n    let mult = 1\r\n    if (tesseractArray[i] >= 1000 && i !== 5) {\r\n      power = G.giftDRPower[i]\r\n      mult *= Math.pow(1000, (1 - G.giftDRPower[i]))\r\n    }\r\n\r\n    G.tesseractBonusMultiplier[i+1] = 1 + mult * G.giftbase[i] * Math.pow(tesseractArray[i], power) * G.hypercubeBonusMultiplier[i+1]!\r\n  }\r\n}\r\n", "import { player, updateAllTick, updateAllMultiplier, format } from './Synergism'\r\nimport { CalcECC } from './Challenges'\r\nimport type { DecimalSource } from 'break_infinity.js'\r\nimport Decimal from 'break_infinity.js'\r\nimport { achievementaward } from './Achievements'\r\nimport { smallestInc } from './Utility'\r\nimport { upgradeupdate, crystalupgradedescriptions } from './Upgrades'\r\nimport { reset } from './Reset'\r\nimport { calculateSummationLinear, calculateCorruptionPoints, calculateRuneBonuses } from './Calculate'\r\nimport { Globals as G, Upgrade } from './Variables'\r\nimport type { FirstToFifth, OneToFive, ZeroToFour } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\nexport const getReductionValue = () => {\r\n  let reduction = 1\r\n  reduction += Math.min(1e15, (G.rune4level * G.effectiveLevelMult) / 160)\r\n  reduction += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200\r\n  reduction += CalcECC('transcend', player.challengecompletions[4]) / 200\r\n  reduction += Math.min(99999.9, (3 * (player.antUpgrades[7-1]! + G.bonusant7)) / 100)\r\n  return reduction\r\n}\r\n\r\nconst getCostAccelerator = (buyingTo: number): Decimal => {\r\n  --buyingTo\r\n\r\n  const originalCost = 500\r\n  let cost = new Decimal(originalCost)\r\n\r\n  cost = cost.times(Decimal.pow(4 / G.costDivisor, buyingTo))\r\n\r\n  if (buyingTo > (125 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n    const num = buyingTo - 125 - 5 * CalcECC('transcend', player.challengecompletions[4])\r\n    const factorialBit = new Decimal(num).factorial()\r\n    const multBit = Decimal.pow(4, num)\r\n    cost = cost.times(multBit.times(factorialBit))\r\n  }\r\n\r\n  if (buyingTo > (2000 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n    const sumNum = buyingTo - 2000 - 5 * CalcECC('transcend', player.challengecompletions[4])\r\n    const sumBit = sumNum * (sumNum + 1) / 2\r\n    cost = cost.times(Decimal.pow(2, sumBit))\r\n  }\r\n\r\n  if (player.currentChallenge.transcension === 4) {\r\n    const sumBit = buyingTo * (buyingTo + 1) / 2\r\n    cost = cost.times(Decimal.pow(10, sumBit))\r\n  }\r\n\r\n  if (player.currentChallenge.reincarnation === 8) {\r\n    const sumBit = buyingTo * (buyingTo + 1) / 2\r\n    cost = cost.times(Decimal.pow(1e50, sumBit))\r\n  }\r\n  const buymax = Math.pow(10, 15)\r\n  if (buyingTo > buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const QuadrillionCost = getCostAccelerator(buymax)\r\n\r\n    const newCost = QuadrillionCost.pow(Math.pow(buyingTo / buymax, 1 / diminishingExponent))\r\n    const newExtra = newCost.exponent - Math.floor(newCost.exponent)\r\n    newCost.exponent = Math.floor(newCost.exponent)\r\n    newCost.mantissa *= Math.pow(10, newExtra)\r\n    newCost.normalize()\r\n    return Decimal.max(cost, newCost)\r\n  }\r\n  return cost\r\n}\r\n\r\nexport const buyAccelerator = (autobuyer?: boolean) => {\r\n  const buyStart = player.acceleratorBought\r\n  const buymax = Math.pow(10, 15)\r\n  // If at least buymax, we will use a different formulae\r\n  if (buyStart >= buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const log10Resource = Decimal.log10(player.coins)\r\n    const log10QuadrillionCost = Decimal.log10(getCostAccelerator(buymax))\r\n\r\n    let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\r\n    let lo = buymax\r\n    while (hi - lo > 0.5) {\r\n      const mid = Math.floor(lo + (hi - lo) / 2)\r\n      if (mid === lo || mid === hi) {\r\n        break\r\n      }\r\n      if (!player.coins.gte(getCostAccelerator(mid))) {\r\n        hi = mid\r\n      } else {\r\n        lo = mid\r\n      }\r\n    }\r\n    const buyable = lo\r\n    const thisCost = getCostAccelerator(buyable)\r\n\r\n    player.acceleratorBought = buyable\r\n    player.acceleratorCost = thisCost\r\n    return\r\n  }\r\n\r\n  // Start buying at the current amount bought + 1\r\n  const buydefault = buyStart + smallestInc(buyStart)\r\n  let buyTo = buydefault\r\n\r\n  let cashToBuy = getCostAccelerator(buyTo)\r\n  while (player.coins.gte(cashToBuy)) {\r\n    // then multiply by 4 until it reaches just above the amount needed\r\n    buyTo = buyTo * 4\r\n    cashToBuy = getCostAccelerator(buyTo)\r\n  }\r\n  let stepdown = Math.floor(buyTo / 8)\r\n  while (stepdown >= smallestInc(buyTo)) {\r\n    // if step down would push it below out of expense range then divide step down by 2\r\n    if (getCostAccelerator(buyTo - stepdown).lte(player.coins)) {\r\n      stepdown = Math.floor(stepdown / 2)\r\n    } else {\r\n      buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown)\r\n    }\r\n  }\r\n\r\n  if (!autobuyer && (player.coinbuyamount as number | string) !== 'max') {\r\n    if (player.acceleratorBought + player.coinbuyamount < buyTo) {\r\n      buyTo = player.acceleratorBought + player.coinbuyamount\r\n    }\r\n  }\r\n\r\n  let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault)\r\n  let thisCost = getCostAccelerator(buyFrom)\r\n  while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\r\n    if (buyFrom >= buymax) {\r\n      buyFrom = buymax\r\n    }\r\n    player.coins = player.coins.sub(thisCost)\r\n    player.acceleratorBought = buyFrom\r\n    buyFrom = buyFrom + smallestInc(buyFrom)\r\n    thisCost = getCostAccelerator(buyFrom)\r\n    player.acceleratorCost = thisCost\r\n    if (buyFrom >= buymax) {\r\n      return\r\n    }\r\n  }\r\n\r\n  player.prestigenoaccelerator = false\r\n  player.transcendnoaccelerator = false\r\n  player.reincarnatenoaccelerator = false\r\n  updateAllTick()\r\n  if (player.acceleratorBought >= 5 && player.achievements[148] === 0) {\r\n    achievementaward(148)\r\n  }\r\n  if (player.acceleratorBought >= 25 && player.achievements[149] === 0) {\r\n    achievementaward(149)\r\n  }\r\n  if (player.acceleratorBought >= 100 && player.achievements[150] === 0) {\r\n    achievementaward(150)\r\n  }\r\n  if (player.acceleratorBought >= 666 && player.achievements[151] === 0) {\r\n    achievementaward(151)\r\n  }\r\n  if (player.acceleratorBought >= 2000 && player.achievements[152] === 0) {\r\n    achievementaward(152)\r\n  }\r\n  if (player.acceleratorBought >= 12500 && player.achievements[153] === 0) {\r\n    achievementaward(153)\r\n  }\r\n  if (player.acceleratorBought >= 100000 && player.achievements[154] === 0) {\r\n    achievementaward(154)\r\n  }\r\n}\r\n\r\nconst getCostMultiplier = (buyingTo: number): Decimal => {\r\n  --buyingTo\r\n\r\n  const originalCost = 1e4\r\n  let cost = new Decimal(originalCost)\r\n  cost = cost.times(Decimal.pow(10, buyingTo / G.costDivisor))\r\n\r\n  if (buyingTo > (75 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n    const num = buyingTo - 75 - 2 * CalcECC('transcend', player.challengecompletions[4])\r\n    const factorialBit = new Decimal(num).factorial()\r\n    const powBit = Decimal.pow(10, num)\r\n    cost = cost.times(factorialBit.times(powBit))\r\n  }\r\n\r\n  if (buyingTo > (2000 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n    const sumNum = buyingTo - 2000 - 2 * CalcECC('transcend', player.challengecompletions[4])\r\n    const sumBit = sumNum * (sumNum + 1) / 2\r\n    cost = cost.times(Decimal.pow(2, sumBit))\r\n  }\r\n  if (player.currentChallenge.transcension === 4) {\r\n    const sumBit = buyingTo * (buyingTo + 1) / 2\r\n    cost = cost.times(Decimal.pow(10, sumBit))\r\n  }\r\n  if (player.currentChallenge.reincarnation === 8) {\r\n    const sumBit = buyingTo * (buyingTo + 1) / 2\r\n    cost = cost.times(Decimal.pow(1e50, sumBit))\r\n  }\r\n  const buymax = Math.pow(10, 15)\r\n  if (buyingTo > buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const QuadrillionCost = getCostMultiplier(buymax)\r\n\r\n    const newCost = QuadrillionCost.pow(Math.pow(buyingTo / buymax, 1 / diminishingExponent))\r\n    const newExtra = newCost.exponent - Math.floor(newCost.exponent)\r\n    newCost.exponent = Math.floor(newCost.exponent)\r\n    newCost.mantissa *= Math.pow(10, newExtra)\r\n    newCost.normalize()\r\n    return Decimal.max(cost, newCost)\r\n  }\r\n  return cost\r\n}\r\n\r\nexport const buyMultiplier = (autobuyer?: boolean) => {\r\n  const buyStart = player.multiplierBought\r\n  const buymax = Math.pow(10, 15)\r\n  // If at least buymax, we will use a different formulae\r\n  if (buyStart >= buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const log10Resource = Decimal.log10(player.coins)\r\n    const log10QuadrillionCost = Decimal.log10(getCostMultiplier(buymax))\r\n\r\n    let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\r\n    let lo = buymax\r\n    while (hi - lo > 0.5) {\r\n      const mid = Math.floor(lo + (hi - lo) / 2)\r\n      if (mid === lo || mid === hi) {\r\n        break\r\n      }\r\n      if (!player.coins.gte(getCostMultiplier(mid))) {\r\n        hi = mid\r\n      } else {\r\n        lo = mid\r\n      }\r\n    }\r\n    const buyable = lo\r\n    const thisCost = getCostMultiplier(buyable)\r\n\r\n    player.multiplierBought = buyable\r\n    player.multiplierCost = thisCost\r\n    return\r\n  }\r\n\r\n  // Start buying at the current amount bought + 1\r\n  const buydefault = buyStart + smallestInc(buyStart)\r\n  let buyTo = buydefault\r\n\r\n  let cashToBuy = getCostMultiplier(buyTo)\r\n  while (player.coins.gte(cashToBuy)) {\r\n    // then multiply by 4 until it reaches just above the amount needed\r\n    buyTo = buyTo * 4\r\n    cashToBuy = getCostMultiplier(buyTo)\r\n  }\r\n  let stepdown = Math.floor(buyTo / 8)\r\n  while (stepdown >= smallestInc(buyTo)) {\r\n    // if step down would push it below out of expense range then divide step down by 2\r\n    if (getCostMultiplier(buyTo - stepdown).lte(player.coins)) {\r\n      stepdown = Math.floor(stepdown / 2)\r\n    } else {\r\n      buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown)\r\n    }\r\n  }\r\n\r\n  if (!autobuyer && (player.coinbuyamount as number | string) !== 'max') {\r\n    if (player.multiplierBought + player.coinbuyamount < buyTo) {\r\n      buyTo = player.multiplierBought + player.coinbuyamount\r\n    }\r\n  }\r\n\r\n  let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault)\r\n  let thisCost = getCostMultiplier(buyFrom)\r\n  while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\r\n    if (buyFrom >= buymax) {\r\n      buyFrom = buymax\r\n    }\r\n    player.coins = player.coins.sub(thisCost)\r\n    player.multiplierBought = buyFrom\r\n    buyFrom = buyFrom + smallestInc(buyFrom)\r\n    thisCost = getCostMultiplier(buyFrom)\r\n    player.multiplierCost = thisCost\r\n    if (buyFrom >= buymax) {\r\n      return\r\n    }\r\n  }\r\n\r\n  player.prestigenomultiplier = false\r\n  player.transcendnomultiplier = false\r\n  player.reincarnatenomultiplier = false\r\n  updateAllMultiplier()\r\n  if (player.multiplierBought >= 2 && player.achievements[155] === 0) {\r\n    achievementaward(155)\r\n  }\r\n  if (player.multiplierBought >= 20 && player.achievements[156] === 0) {\r\n    achievementaward(156)\r\n  }\r\n  if (player.multiplierBought >= 100 && player.achievements[157] === 0) {\r\n    achievementaward(157)\r\n  }\r\n  if (player.multiplierBought >= 500 && player.achievements[158] === 0) {\r\n    achievementaward(158)\r\n  }\r\n  if (player.multiplierBought >= 2000 && player.achievements[159] === 0) {\r\n    achievementaward(159)\r\n  }\r\n  if (player.multiplierBought >= 12500 && player.achievements[160] === 0) {\r\n    achievementaward(160)\r\n  }\r\n  if (player.multiplierBought >= 100000 && player.achievements[161] === 0) {\r\n    achievementaward(161)\r\n  }\r\n}\r\n\r\n/*\r\n// Uses same as Decimal prototype but does so without creating new objects\r\nDecimal.prototype.factorial = function () {\r\n  // Using Stirling's Approximation.\r\n  // https://en.wikipedia.org/wiki/Stirling%27s_approximation#Versions_suitable_for_calculators\r\n  var n = this.toNumber() + 1;\r\n  return Decimal.pow(n / Math.E * Math.sqrt(n * Math.sinh(1 / n) + 1 / (810 * Math.pow(n, 6))), n).mul(Math.sqrt(2 * Math.PI / n));\r\n};\r\n*/\r\n\r\nconst mantissaFactorialPartExtra = Math.log10(2 * Math.PI)\r\nconst exponentFactorialPartExtra = Math.log10(Math.E)\r\n\r\nconst factorialByExponent = (fact: number) => {\r\n  if (++fact === 0) {\r\n    return 0\r\n  }\r\n  return ((Math.log10(fact * Math.sqrt(fact * Math.sinh(1 / fact) + 1 / (810 * Math.pow(fact, 6)))) - exponentFactorialPartExtra) * fact) + ((mantissaFactorialPartExtra - Math.log10(fact)) / 2)\r\n}\r\n\r\nconst fact100exponent = Math.log10(9.332621544394e+157)\r\n\r\n// system of equations\r\n// 16 digits of precision\r\n// log10(1.25)xn = log10(x)+16\r\n// see: https://www.wolframalpha.com/input/?i=log10%28x%29%2B16+%3D+log10%281.25%29x\r\n// xn ~= 188.582\r\n// x ~= 188.582/n\r\nconst precision16_loss_addition_of_ones = 188.582\r\nconst known_log10s = function () {\r\n  // needed logs\r\n  const needed = [1.03, 1.25]\r\n  const nums = [1, 2, 3, 4, 5, 6, 10, 15]\r\n  for (const num of nums) {\r\n    needed.push(100 + (100 * num))\r\n    needed.push(10 + (10 * num))\r\n  }\r\n\r\n  // Gets all possible challenge 8 completion amounts\r\n  const chalcompletions = 1000\r\n  for (let i = 0; i < chalcompletions; ++i) {\r\n    needed.push(1 + (i / 2))\r\n  }\r\n\r\n  // constructing all logs\r\n  const obj: Record<number, number> = {}\r\n  for (const need of needed) {\r\n    if (typeof obj[need] === 'undefined') {\r\n      obj[need] = Math.log10(need)\r\n    }\r\n  }\r\n  return obj\r\n}()\r\n\r\nconst coinBuildingCosts = [100, 1000, 2e4, 4e5, 8e6] as const\r\nconst diamondBuildingCosts = [100, 1e5, 1e15, 1e40, 1e100] as const\r\nconst mythosAndParticleBuildingCosts = [1, 1e2, 1e4, 1e8, 1e16] as const\r\n\r\nconst getCostInternal = (originalCost: DecimalSource, buyingTo: number, type: keyof typeof buyProducerTypes, num: number, r: number): Decimal => {\r\n  // It's 0 indexed by mistake so you have to subtract 1 somewhere.\r\n  --buyingTo\r\n  const buymax = Math.pow(10, 15)\r\n  // Accounts for the multiplies by 1.25^num buyingTo times\r\n  const cost = new Decimal(originalCost)\r\n  let mlog10125 = num * buyingTo\r\n  // Accounts for the add 1s\r\n  if (buyingTo < precision16_loss_addition_of_ones / num) {\r\n    cost.mantissa += buyingTo / Math.pow(10, cost.exponent)\r\n  }\r\n  let fastFactMultBuyTo = 0\r\n  // floored r value gets used a lot in removing calculations\r\n  let fr = Math.floor(r * 1000)\r\n  if (buyingTo >= r * 1000) {\r\n    // This code is such a mess at this point, just know that this is equivalent to what it was before\r\n    ++fastFactMultBuyTo\r\n    cost.exponent -= factorialByExponent(fr)\r\n    cost.exponent += (-3 + Math.log10(1 + (num / 2))) * (buyingTo - fr)\r\n  }\r\n\r\n  fr = Math.floor(r * 5000)\r\n  if (buyingTo >= r * 5000) {\r\n    // This code is such a mess at this point, just know that this is equivalent to what it was before\r\n    ++fastFactMultBuyTo\r\n    cost.exponent -= factorialByExponent(fr)\r\n    cost.exponent += ((known_log10s[10 + num * 10] + 1) * (buyingTo - fr - 1)) + 1\r\n  }\r\n\r\n  fr = Math.floor(r * 20000)\r\n  if (buyingTo >= r * 20000) {\r\n    // This code is such a mess at this point, just know that this is equivalent to what it was before\r\n    fastFactMultBuyTo += 3\r\n    cost.exponent -= factorialByExponent(fr) * 3\r\n    cost.exponent += (known_log10s[100 + (100 * num)] + 5) * (buyingTo - fr)\r\n  }\r\n\r\n  fr = Math.floor(r * 250000)\r\n  if (buyingTo >= r * 250000) {\r\n    //1.03^x*1.03^y = 1.03^(x+y), we'll abuse this for this section of the algorithm\r\n    // 1.03^(x+y-((number of terms)250000*r))\r\n    // up to 250003 case\r\n    // assume r = 1 for this case\r\n    // (1.03^250000-250000)(1.03^250001-250000)(1.03^250002-250000)(1.03^250003) = (1.03^0*1.03^1*1.03^2*1.03^3)\r\n    // so in reality we just need to take buyingTo - fr and sum the power up to it\r\n    // (1.03^(sum from 0 to buyingTo - fr)) is the multiplier\r\n    // so (1.03^( (buyingTo-fr)(buyingTo-fr+1)/2 )\r\n    // god damn that was hard to make an algo for\r\n    cost.exponent += Math.log10(1.03) * (buyingTo - fr) * ((buyingTo - fr + 1) / 2)\r\n  }\r\n  // Applies the factorials from earlier without computing them 5 times\r\n  cost.exponent += factorialByExponent(buyingTo) * fastFactMultBuyTo\r\n  let fastFactMultBuyTo100 = 0\r\n  if ((player.currentChallenge.transcension === 4) && (type === 'Coin' || type === 'Diamonds')) {\r\n    // you would not fucking believe how long it took me to figure this out\r\n    // (100*costofcurrent + 10000)^n = (((100+buyingTo)!/100!)*100^buyingTo)^n\r\n    ++fastFactMultBuyTo100\r\n    if (buyingTo >= (1000 - (10 * player.challengecompletions[4]))) {\r\n      // and I changed this to be a summation of all the previous buys 1.25 to the sum from 1 to buyingTo\r\n      mlog10125 += (buyingTo * (buyingTo + 1) / 2)\r\n    }\r\n  }\r\n  if ((player.currentChallenge.reincarnation === 10) && (type === 'Coin' || type === 'Diamonds')) {\r\n    // you would not fucking believe how long it took me to figure this out\r\n    // (100*costofcurrent + 10000)^n = (((100+buyingTo)!/100!)*100^buyingTo)^n\r\n    ++fastFactMultBuyTo100\r\n    if (buyingTo >= (r * 25000)) {\r\n      // and I changed this to be a summation of all the previous buys 1.25 to the sum from 1 to buyingTo\r\n      mlog10125 += (buyingTo * (buyingTo + 1) / 2)\r\n    }\r\n  }\r\n  // Applies the factorial w/ formula from earlier n times to avoid multiple computations\r\n  cost.exponent += fastFactMultBuyTo100 * ((factorialByExponent(buyingTo + 100) - fact100exponent + (2 * buyingTo)) * (1.25 + (player.challengecompletions[4] / 4)))\r\n  // Applies all the Math.log10(1.25)s from earlier n times to avoid multiple computations\r\n  // log10(1.25)\r\n  cost.exponent += known_log10s[1.25] * mlog10125\r\n  fr = Math.floor(r * 1000 * player.challengecompletions[8])\r\n  if (player.currentChallenge.reincarnation === 8 && (type === 'Coin' || type === 'Diamonds' || type === 'Mythos') && buyingTo >= (1000 * player.challengecompletions[8] * r)) {\r\n    cost.exponent += ((known_log10s[2] * ((buyingTo - fr + 1) / 2)) - known_log10s[1 + (player.challengecompletions[8] / 2)]) * (buyingTo - fr)\r\n  }\r\n\r\n  const extra = cost.exponent - Math.floor(cost.exponent)\r\n  cost.exponent = Math.floor(cost.exponent)\r\n  cost.mantissa *= Math.pow(10, extra)\r\n  cost.normalize()\r\n  if (buyingTo > buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const QuadrillionCost = getCostInternal(originalCost, buymax, type, num, r)\r\n\r\n    const newCost = QuadrillionCost.pow(Math.pow(buyingTo / buymax, 1 / diminishingExponent))\r\n    const newExtra = newCost.exponent - Math.floor(newCost.exponent)\r\n    newCost.exponent = Math.floor(newCost.exponent)\r\n    newCost.mantissa *= Math.pow(10, newExtra)\r\n    newCost.normalize()\r\n    return Decimal.max(cost, newCost)\r\n  }\r\n  return cost\r\n}\r\n\r\nconst getOriginalCostAndNum = (index: OneToFive, type: keyof typeof buyProducerTypes) => {\r\n  const originalCostArray = (\r\n    type === 'Coin'\r\n      ? coinBuildingCosts\r\n      : type === 'Diamonds'\r\n        ? diamondBuildingCosts\r\n        : mythosAndParticleBuildingCosts)\r\n  const num = type === 'Coin' ? index : index * (index + 1) / 2\r\n  const originalCost = originalCostArray[index - 1 as ZeroToFour]\r\n  return [originalCost, num] as const\r\n}\r\n\r\nexport const getCost = (index: OneToFive, type: keyof typeof buyProducerTypes, buyingTo: number, r?: number) => {\r\n  const [originalCost, num] = getOriginalCostAndNum(index, type)\r\n  return getCostInternal(originalCost, buyingTo, type, num, r ?? getReductionValue())\r\n}\r\n\r\nexport const buyMax = (index: OneToFive, type: keyof typeof buyProducerTypes) => {\r\n  const zeroIndex = index-1 as ZeroToFour\r\n  const pos = G.ordinals[zeroIndex]\r\n  const [originalCost, num] = getOriginalCostAndNum(index, type)\r\n\r\n  const buymax = Math.pow(10, 15)\r\n  const coinmax = 1e99\r\n  const r = getReductionValue()\r\n  const tag = buyProducerTypes[type][0]\r\n\r\n  const posOwnedType = `${pos}Owned${type}` as const\r\n\r\n  const buyStart = player[posOwnedType]\r\n  // If at least buymax, we will use a different formulae\r\n  if (buyStart >= buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const log10Resource = Decimal.log10(player[tag])\r\n    const log10QuadrillionCost = Decimal.log10(getCostInternal(originalCost, buymax, type, num, r))\r\n\r\n    let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\r\n    let lo = buymax\r\n    while (hi - lo > 0.5) {\r\n      const mid = Math.floor(lo + (hi - lo) / 2)\r\n      if (mid === lo || mid === hi) {\r\n        break\r\n      }\r\n      if (!player[tag].gte(getCostInternal(originalCost, mid, type, num, r))) {\r\n        hi = mid\r\n      } else {\r\n        lo = mid\r\n      }\r\n    }\r\n    const buyable = lo\r\n    const thisCost = getCostInternal(originalCost, buyable, type, num, r)\r\n\r\n    player[posOwnedType] = buyable\r\n    player[`${pos}Cost${type}` as const] = thisCost\r\n    return\r\n  }\r\n\r\n  // Start buying at the current amount bought + 1\r\n  const buydefault = buyStart + smallestInc(buyStart)\r\n  let buyInc = 1\r\n\r\n  let cashToBuy = getCostInternal(originalCost, buyStart + buyInc, type, num, r)\r\n\r\n  // Degenerate Case: return maximum if coins is too large\r\n  if (cashToBuy.exponent >= coinmax || !player[tag].gte(cashToBuy)) {\r\n    return\r\n  }\r\n\r\n  while (cashToBuy.exponent < coinmax && player[tag].gte(cashToBuy)) {\r\n    // then multiply by 4 until it reaches just above the amount needed\r\n    buyInc = buyInc * 4\r\n    cashToBuy = getCostInternal(originalCost, buyStart + buyInc, type, num, r)\r\n  }\r\n  let stepdown = Math.floor(buyInc / 8)\r\n  while (stepdown >= smallestInc(buyInc)) {\r\n    // if step down would push it below out of expense range then divide step down by 2\r\n    if (getCostInternal(originalCost, buyStart + buyInc - stepdown, type, num, r).lte(player[tag])) {\r\n      stepdown = Math.floor(stepdown / 2)\r\n    } else {\r\n      buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown)\r\n    }\r\n  }\r\n\r\n  // Resolves the infamous autobuyer bug, for large values. This prevents the notion of even being able\r\n  // to go above the buymax. Future instances will also not check more than the first few lines\r\n  // meaning that the code below this cannot run if this ever runs.\r\n  if (buyStart + buyInc >= buymax) {\r\n    player[posOwnedType] = buymax\r\n    player[`${pos}Cost${type}` as const] = getCostInternal(originalCost, buymax, type, num, r)\r\n    return\r\n  }\r\n\r\n  // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\r\n  let buyFrom = Math.max(buyStart + buyInc - 6 - smallestInc(buyInc), buydefault)\r\n  let thisCost = getCostInternal(originalCost, buyFrom, type, num, r)\r\n  while (buyFrom <= buyStart + buyInc && player[tag].gte(thisCost)) {\r\n    player[tag] = player[tag].sub(thisCost)\r\n    player[posOwnedType] = buyFrom\r\n    buyFrom = buyFrom + smallestInc(buyFrom)\r\n    thisCost = getCostInternal(originalCost, buyFrom, type, num, r)\r\n    player[`${pos}Cost${type}` as const] = thisCost\r\n  }\r\n}\r\n\r\nconst buyProducerTypes = {\r\n  Diamonds: ['prestigePoints', 'crystal'],\r\n  Mythos: ['transcendPoints', 'mythos'],\r\n  Particles: ['reincarnationPoints', 'particle'],\r\n  Coin: ['coins', 'coin']\r\n} as const\r\n\r\nexport const buyProducer = (pos: FirstToFifth, type: keyof typeof buyProducerTypes, num: number, autobuyer?: boolean) => {\r\n  const [tag, amounttype] = buyProducerTypes[type]\r\n  const buythisamount = autobuyer ? 500 : player[`${amounttype}buyamount` as const]\r\n  let r = 1\r\n  r += (G.rune4level * G.effectiveLevelMult) / 160\r\n  r += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200\r\n  r += CalcECC('transcend', player.challengecompletions[4]) / 200\r\n  r += (3 * (G.bonusant7 + player.antUpgrades[7-1]!)) / 100\r\n\r\n  const posCostType = `${pos}Cost${type}` as const\r\n  const posOwnedType = `${pos}Owned${type}` as const\r\n\r\n\r\n  while (player[tag].gte(player[posCostType]) && G.ticker < buythisamount && player[posOwnedType] < Number.MAX_SAFE_INTEGER) {\r\n    player[tag] = player[tag].sub(player[posCostType])\r\n    player[posOwnedType] += 1\r\n    player[posCostType] = player[posCostType].times(Decimal.pow(1.25, num))\r\n    player[posCostType] = player[posCostType].add(1)\r\n    if (player[posOwnedType] >= (1000 * r)) {\r\n      player[posCostType] = player[posCostType].times(player[posOwnedType]).dividedBy(1000).times(1 + num / 2)\r\n    }\r\n    if (player[posOwnedType] >= (5000 * r)) {\r\n      player[posCostType] = player[posCostType].times(player[posOwnedType]).times(10).times(10 + num * 10)\r\n    }\r\n    if (player[posOwnedType] >= (20000 * r)) {\r\n      player[posCostType] = player[posCostType].times(Decimal.pow(player[posOwnedType], 3)).times(100000).times(100 + num * 100)\r\n    }\r\n    if (player[posOwnedType] >= (250000 * r)) {\r\n      player[posCostType] = player[posCostType].times(Decimal.pow(1.03, player[posOwnedType] - 250000 * r))\r\n    }\r\n    if (player.currentChallenge.transcension === 4 && (type === 'Coin' || type === 'Diamonds')) {\r\n      player[posCostType] = player[posCostType].times(Math.pow(100 * player[posOwnedType] + 10000, 1.25 + 1 / 4 * player.challengecompletions[4]))\r\n      if (player[posOwnedType] >= 1000 - (10 * player.challengecompletions[4])) {\r\n        player[posCostType] = player[posCostType].times(Decimal.pow(1.25, player[posOwnedType]))\r\n      }\r\n    }\r\n    if (player.currentChallenge.reincarnation === 8 && (type === 'Coin' || type === 'Diamonds' || type === 'Mythos') && player[posOwnedType] >= (1000 * player.challengecompletions[8] * r)) {\r\n      player[posCostType] = player[posCostType].times(Decimal.pow(2, (player[posOwnedType] - (1000 * player.challengecompletions[8] * r)) / (1 + (player.challengecompletions[8] / 2))))\r\n    }\r\n    G.ticker += 1\r\n  }\r\n  G.ticker = 0\r\n}\r\n\r\nexport const buyUpgrades = (type: Upgrade, pos: number, state?: boolean) => {\r\n  const currency = type\r\n  if (player[currency].gte(Decimal.pow(10, G.upgradeCosts[pos])) && player.upgrades[pos] === 0) {\r\n    player[currency] = player[currency].sub(Decimal.pow(10, G.upgradeCosts[pos]))\r\n    player.upgrades[pos] = 1\r\n    upgradeupdate(pos, state)\r\n  }\r\n\r\n  if (type === Upgrade.transcend) {\r\n    player.reincarnatenocoinprestigeortranscendupgrades = false\r\n    player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false\r\n  }\r\n  if (type === Upgrade.prestige) {\r\n    player.transcendnocoinorprestigeupgrades = false\r\n    player.reincarnatenocoinorprestigeupgrades = false\r\n    player.reincarnatenocoinprestigeortranscendupgrades = false\r\n    player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false\r\n  }\r\n  if (type === Upgrade.coin) {\r\n    player.prestigenocoinupgrades = false\r\n    player.transcendnocoinupgrades = false\r\n    player.transcendnocoinorprestigeupgrades = false\r\n    player.reincarnatenocoinupgrades = false\r\n    player.reincarnatenocoinorprestigeupgrades = false\r\n    player.reincarnatenocoinprestigeortranscendupgrades = false\r\n    player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false\r\n  }\r\n\r\n}\r\n\r\nexport const calculateCrystalBuy = (i: number) => {\r\n  const u = i - 1\r\n  const exponent = Decimal.log(player.prestigeShards.add(1), 10)\r\n\r\n  const toBuy = Math.floor(Math.pow(Math.max(0, 2 * (exponent - G.crystalUpgradesCost[u]) / G.crystalUpgradeCostIncrement[u] + 1 / 4), 1 / 2) + 1 / 2)\r\n  return toBuy\r\n}\r\n\r\nexport const buyCrystalUpgrades = (i: number, auto = false) => {\r\n  const u = i - 1\r\n\r\n  let c = 0\r\n  c += Math.floor(G.rune3level / 16 * G.effectiveLevelMult) * 100 / 100\r\n  if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n    c += 10\r\n  }\r\n\r\n  const toBuy = calculateCrystalBuy(i)\r\n\r\n  if (toBuy + c > player.crystalUpgrades[u]) {\r\n    player.crystalUpgrades[u] = 100 / 100 * (toBuy + c)\r\n    if (toBuy > 0) {\r\n      player.prestigeShards = player.prestigeShards.sub(Decimal.pow(10, G.crystalUpgradesCost[u] + G.crystalUpgradeCostIncrement[u] * (1 / 2 * Math.pow(toBuy - 1 / 2, 2) - 1 / 8)))\r\n      if (!auto) {\r\n        crystalupgradedescriptions(i)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const boostAccelerator = (automated?: boolean) => {\r\n  let buyamount = 1\r\n  if (player.upgrades[46] === 1) {\r\n    buyamount = automated ? 9999 : player.coinbuyamount\r\n  }\r\n\r\n  if (player.upgrades[46] < 1) {\r\n    while (player.prestigePoints.gte(player.acceleratorBoostCost) && G.ticker < buyamount) {\r\n      if (player.prestigePoints.gte(player.acceleratorBoostCost)) {\r\n        player.acceleratorBoostBought += 1\r\n        player.acceleratorBoostCost = player.acceleratorBoostCost.times(1e10).times(Decimal.pow(10, player.acceleratorBoostBought))\r\n        if (player.acceleratorBoostBought > (1000 * (1 + 2 * G.effectiveRuneBlessingPower[4]))) {\r\n          player.acceleratorBoostCost = player.acceleratorBoostCost.times(Decimal.pow(10, Math.pow(player.acceleratorBoostBought - (1000 * (1 + 2 * G.effectiveRuneBlessingPower[4])), 2) / (1 + 2 * G.effectiveRuneBlessingPower[4])))\r\n        }\r\n        player.transcendnoaccelerator = false\r\n        player.reincarnatenoaccelerator = false\r\n        if (player.upgrades[46] < 0.5) {\r\n          for (let j = 21; j < 41; j++) {\r\n            player.upgrades[j] = 0\r\n          }\r\n          reset('prestige')\r\n          player.prestigePoints = new Decimal(0)\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    const buyStart = player.acceleratorBoostBought\r\n    const buymax = Math.pow(10, 15)\r\n    // If at least buymax, we will use a different formulae\r\n    if (buyStart >= buymax) {\r\n      const diminishingExponent = 1/8\r\n\r\n      const log10Resource = Decimal.log10(player.prestigePoints)\r\n      const log10QuadrillionCost = Decimal.log10(getAcceleratorBoostCost(buymax))\r\n\r\n      let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\r\n      let lo = buymax\r\n      while (hi - lo > 0.5) {\r\n        const mid = Math.floor(lo + (hi - lo) / 2)\r\n        if (mid === lo || mid === hi) {\r\n          break\r\n        }\r\n        if (!player.prestigePoints.gte(getAcceleratorBoostCost(mid))) {\r\n          hi = mid\r\n        } else {\r\n          lo = mid\r\n        }\r\n      }\r\n      const buyable = lo\r\n      const thisCost = getAcceleratorBoostCost(buyable)\r\n\r\n      player.acceleratorBoostBought = buyable\r\n      player.acceleratorBoostCost = thisCost\r\n      return\r\n    }\r\n\r\n    // Start buying at the current amount bought + 1\r\n    const buydefault = buyStart + smallestInc(buyStart)\r\n    let buyInc = 1\r\n\r\n    let cost = getAcceleratorBoostCost(buyStart + buyInc)\r\n    while (player.prestigePoints.gte(cost)) {\r\n      buyInc *= 4\r\n      cost = getAcceleratorBoostCost(buyStart + buyInc)\r\n    }\r\n    let stepdown = Math.floor(buyInc / 8)\r\n    while (stepdown >= smallestInc(buyInc)) {\r\n      // if step down would push it below out of expense range then divide step down by 2\r\n      if (getAcceleratorBoostCost(buyStart + buyInc - stepdown).lte(player.prestigePoints)) {\r\n        stepdown = Math.floor(stepdown / 2)\r\n      } else {\r\n        buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown)\r\n      }\r\n    }\r\n    // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\r\n    let buyFrom = Math.max(buyStart + buyInc - 6 - smallestInc(buyInc), buydefault)\r\n    let thisCost = getAcceleratorBoostCost(player.acceleratorBoostBought)\r\n    while (buyFrom <= buyStart + buyInc && player.prestigePoints.gte(getAcceleratorBoostCost(buyFrom))) {\r\n      player.prestigePoints = player.prestigePoints.sub(thisCost)\r\n      if (buyFrom >= buymax) {\r\n        buyFrom = buymax\r\n      }\r\n      player.acceleratorBoostBought = buyFrom\r\n      buyFrom = buyFrom + smallestInc(buyFrom)\r\n      thisCost = getAcceleratorBoostCost(buyFrom)\r\n      player.acceleratorBoostCost = thisCost\r\n\r\n      player.transcendnoaccelerator = false\r\n      player.reincarnatenoaccelerator = false\r\n      if (buyFrom >= buymax) {\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  G.ticker = 0\r\n  if (player.acceleratorBoostBought >= 2 && player.achievements[162] === 0) {\r\n    achievementaward(162)\r\n  }\r\n  if (player.acceleratorBoostBought >= 10 && player.achievements[163] === 0) {\r\n    achievementaward(163)\r\n  }\r\n  if (player.acceleratorBoostBought >= 50 && player.achievements[164] === 0) {\r\n    achievementaward(164)\r\n  }\r\n  if (player.acceleratorBoostBought >= 200 && player.achievements[165] === 0) {\r\n    achievementaward(165)\r\n  }\r\n  if (player.acceleratorBoostBought >= 1000 && player.achievements[166] === 0) {\r\n    achievementaward(166)\r\n  }\r\n  if (player.acceleratorBoostBought >= 5000 && player.achievements[167] === 0) {\r\n    achievementaward(167)\r\n  }\r\n  if (player.acceleratorBoostBought >= 15000 && player.achievements[168] === 0) {\r\n    achievementaward(168)\r\n  }\r\n\r\n\r\n}\r\n\r\nconst getAcceleratorBoostCost = (level = 1): Decimal => {\r\n  // formula starts at 0 but buying starts at 1\r\n  level--\r\n  const buymax = Math.pow(10, 15)\r\n  const base = new Decimal(1e3)\r\n  const eff = 1 + 2 * G.effectiveRuneBlessingPower[4]\r\n  const linSum = (n: number) => n * (n + 1) / 2\r\n  const sqrSum = (n: number) => n * (n + 1) * (2 * n + 1) / 6\r\n  let cost = base\r\n  if (level > 1000 * eff) {\r\n    cost = base.times(Decimal.pow(10, 10 * level\r\n            + linSum(level) // each level increases the exponent by 1 more each time\r\n            + sqrSum(level - 1000 * eff) / eff)) // after cost delay is passed each level increases the cost by the square each time\r\n  } else {\r\n    cost = base.times(Decimal.pow(10, 10 * level + linSum(level)))\r\n  }\r\n  if (level > buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const QuadrillionCost = getAcceleratorBoostCost(buymax)\r\n\r\n    const newCost = QuadrillionCost.pow(Math.pow(level / buymax, 1 / diminishingExponent))\r\n    const newExtra = newCost.exponent - Math.floor(newCost.exponent)\r\n    newCost.exponent = Math.floor(newCost.exponent)\r\n    newCost.mantissa *= Math.pow(10, newExtra)\r\n    newCost.normalize()\r\n    return Decimal.max(cost, newCost)\r\n  }\r\n  return cost\r\n}\r\n\r\nconst getParticleCost = (originalCost: DecimalSource, buyTo: number): Decimal => {\r\n  --buyTo\r\n  originalCost = new Decimal(originalCost)\r\n  let cost = originalCost.times(Decimal.pow(2, buyTo))\r\n\r\n  const DR = (player.currentChallenge.ascension !== 15)? 325000: 1000\r\n\r\n  if (buyTo > DR) {\r\n    cost = cost.times(Decimal.pow(1.001, (buyTo - DR) * ((buyTo - DR + 1) / 2)))\r\n  }\r\n  const buymax = Math.pow(10, 15)\r\n  if (buyTo > buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const QuadrillionCost = getParticleCost(originalCost, buymax)\r\n\r\n    const newCost = QuadrillionCost.pow(Math.pow(buyTo / buymax, 1 / diminishingExponent))\r\n    const newExtra = newCost.exponent - Math.floor(newCost.exponent)\r\n    newCost.exponent = Math.floor(newCost.exponent)\r\n    newCost.mantissa *= Math.pow(10, newExtra)\r\n    newCost.normalize()\r\n    return Decimal.max(cost, newCost)\r\n  }\r\n  return cost\r\n}\r\n\r\nexport const buyParticleBuilding = (\r\n  index: OneToFive,\r\n  autobuyer = false\r\n) => {\r\n  const zeroIndex = index-1 as ZeroToFour\r\n  const originalCost = mythosAndParticleBuildingCosts[zeroIndex]\r\n  const pos = G.ordinals[zeroIndex]\r\n  const key = `${pos}OwnedParticles` as const\r\n  const buyStart = player[key]\r\n  const buymax = Math.pow(10, 15)\r\n  // If at least buymax, we will use a different formulae\r\n  if (buyStart >= buymax) {\r\n    const diminishingExponent = 1/8\r\n\r\n    const log10Resource = Decimal.log10(player.reincarnationPoints)\r\n    const log10QuadrillionCost = Decimal.log10(getParticleCost(originalCost, buymax))\r\n\r\n    let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\r\n    let lo = buymax\r\n    while (hi - lo > 0.5) {\r\n      const mid = Math.floor(lo + (hi - lo) / 2)\r\n      if (mid === lo || mid === hi) {\r\n        break\r\n      }\r\n      if (!player.reincarnationPoints.gte(getParticleCost(originalCost, mid))) {\r\n        hi = mid\r\n      } else {\r\n        lo = mid\r\n      }\r\n    }\r\n    const buyable = lo\r\n    const thisCost = getParticleCost(originalCost, buyable)\r\n\r\n    player[key] = buyable\r\n    player[`${pos}CostParticles` as const] = thisCost\r\n    return\r\n  }\r\n\r\n  // Start buying at the current amount bought + 1\r\n  const buydefault = buyStart + smallestInc(buyStart)\r\n  let buyTo = buydefault\r\n\r\n  let cashToBuy = getParticleCost(originalCost, buyTo)\r\n  while (player.reincarnationPoints.gte(cashToBuy)) {\r\n    // then multiply by 4 until it reaches just above the amount needed\r\n    buyTo = buyTo * 4\r\n    cashToBuy = getParticleCost(originalCost, buyTo)\r\n  }\r\n  let stepdown = Math.floor(buyTo / 8)\r\n  while (stepdown >= smallestInc(buyTo)) {\r\n    // if step down would push it below out of expense range then divide step down by 2\r\n    if (getParticleCost(originalCost, buyTo - stepdown).lte(player.reincarnationPoints)) {\r\n      stepdown = Math.floor(stepdown / 2)\r\n    } else {\r\n      buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown)\r\n    }\r\n  }\r\n\r\n  if (!autobuyer) {\r\n    if (player.particlebuyamount + buyStart < buyTo) {\r\n      buyTo = buyStart + player.particlebuyamount + smallestInc(player[key] + player.particlebuyamount)\r\n    }\r\n  }\r\n\r\n  // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\r\n  let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault)\r\n  let thisCost = getParticleCost(originalCost, buyFrom)\r\n  while (buyFrom <= buyTo && player.reincarnationPoints.gte(thisCost)) {\r\n    player.reincarnationPoints = player.reincarnationPoints.sub(thisCost)\r\n    player[key] = buyFrom\r\n    buyFrom = buyFrom + smallestInc(buyFrom)\r\n    thisCost = getParticleCost(originalCost, buyFrom)\r\n    player[`${pos}CostParticles` as const] = thisCost\r\n  }\r\n}\r\n\r\nexport const tesseractBuildingCosts = [1, 10, 100, 1000, 10000] as const\r\n\r\n// The nth tesseract building of tier i costs\r\n//   tesseractBuildingCosts[i-1] * n^3.\r\n// so the first n tesseract buildings of tier i costs\r\n//   cost(n) = tesseractBuildingCosts[i-1] * (n * (n+1) / 2)^2\r\n// in total. Use cost(owned+buyAmount) - cost(owned) to figure the cost of\r\n// buying multiple buildings.\r\n\r\nexport type TesseractBuildings = [number|null, number|null, number|null, number|null, number|null]\r\n\r\nconst buyTessBuildingsToCheapestPrice = (ownedBuildings: TesseractBuildings, cheapestPrice: number): [number, TesseractBuildings] => {\r\n  const buyToBuildings = ownedBuildings.map((currentlyOwned, index) => {\r\n    if (currentlyOwned === null) {\r\n      return null\r\n    }\r\n    // thisPrice >= cheapestPrice = tesseractBuildingCosts[index] * (buyTo+1)^3\r\n    // buyTo = cuberoot(cheapestPrice / tesseractBuildingCosts[index]) - 1\r\n    // If buyTo has a fractional part, we want to round UP so that this\r\n    // price costs more than the cheapest price.\r\n    // If buyTo doesn't have a fractional part, thisPrice = cheapestPrice.\r\n    const buyTo = Math.ceil(Math.pow(cheapestPrice / tesseractBuildingCosts[index], 1/3) - 1)\r\n    // It could be possible that cheapestPrice is less than the CURRENT\r\n    // price of this building, so take the max of the number of buildings\r\n    // we currently have.\r\n    return Math.max(currentlyOwned, buyTo)\r\n  }) as TesseractBuildings\r\n\r\n  let price = 0\r\n  for (let i = 0; i < ownedBuildings.length; i++) {\r\n    const buyFrom = ownedBuildings[i]\r\n    const buyTo = buyToBuildings[i]\r\n    if (buyFrom === null || buyTo === null) {\r\n      continue\r\n    }\r\n    price += tesseractBuildingCosts[i] * (Math.pow(buyTo * (buyTo + 1) / 2, 2) - Math.pow(buyFrom * (buyFrom + 1) / 2, 2))\r\n  }\r\n\r\n  return [price, buyToBuildings]\r\n}\r\n\r\n/**\r\n * Calculate the result of repeatedly buying the cheapest tesseract building,\r\n * given an initial list of owned buildings and a budget.\r\n *\r\n * This function is pure and does not rely on any global state other than\r\n * constants for ease of testing.\r\n *\r\n * For tests:\r\n * calculateInBudget([0, 0, 0, 0, 0], 100) = [3, 1, 0, 0, 0]\r\n * calculateInBudget([null, 0, 0, 0, 0], 100) = [null, 2, 0, 0, 0]\r\n * calculateInBudget([3, 1, 0, 0, 0], 64+80-1) = [4, 1, 0, 0, 0]\r\n * calculateInBudget([3, 1, 0, 0, 0], 64+80) = [4, 2, 0, 0, 0]\r\n * calculateInBudget([9, 100, 100, 0, 100], 1000) = [9, 100, 100, 1, 100]\r\n * calculateInBudget([9, 100, 100, 0, 100], 2000) = [10, 100, 100, 1, 100]\r\n *\r\n * and calculateInBudget([0, 0, 0, 0, 0], 1e46) should run in less than a\r\n * second.\r\n *\r\n * @param ownedBuildings The amount of buildings owned, or null if the building\r\n * should not be bought.\r\n * @param budget The number of tesseracts to spend.\r\n * @returns The amount of buildings owned after repeatedly buying the cheapest\r\n * building with the budget.\r\n */\r\nexport const calculateTessBuildingsInBudget = (ownedBuildings: TesseractBuildings, budget: number): TesseractBuildings => {\r\n  // Nothing is affordable.\r\n  // Also catches the case when budget <= 0, and all values are null.\r\n  let minCurrentPrice: number|null = null\r\n  for (let i = 0; i < ownedBuildings.length; i++) {\r\n    const owned = ownedBuildings[i]\r\n    if (owned === null) {\r\n      continue\r\n    }\r\n    const price = tesseractBuildingCosts[i] * Math.pow(owned + 1, 3)\r\n    if (minCurrentPrice === null || price < minCurrentPrice) {\r\n      minCurrentPrice = price\r\n    }\r\n  }\r\n\r\n  if (minCurrentPrice === null || minCurrentPrice > budget) {\r\n    return ownedBuildings\r\n  }\r\n\r\n  // Every time the cheapest building is bought, the cheapest price either\r\n  // stays constant (if there are two or more cheapest buildings), or\r\n  // increases.\r\n  //\r\n  // Additionally, given the price of a building, calculating\r\n  // - the amount of buildings needed to hit that price and\r\n  // - the cumulative cost to buy to that amount of buildings\r\n  // can be done with a constant number of floating point operations.\r\n  //\r\n  // Therefore, by binary searching over \"cheapest price when finished\", we\r\n  // are able to efficiently (O(log budget)) determine the number of buildings\r\n  // owned after repeatedly buying the cheapest building. Calculating the\r\n  // cheapest building and buying one at a time would take O(budget^(1/4))\r\n  // time - and as the budget could get very large (this is Synergism after\r\n  // all), this is probably too slow.\r\n  //\r\n  // That is, we have a function f(cheapestPrice) which returns the cost of\r\n  // buying buildings until all prices to buy are cheapestPrice or higher, and\r\n  // we want to find the maximum value of cheapestPrice such that\r\n  // f(cheapestPrice) <= budget.\r\n  // In this case, f(x) = buyTessBuildingsToCheapestPrice(ownedBuildings, x)[0].\r\n\r\n  // f(minCurrentPrice) = 0 < budget. We also know that we can definitely buy\r\n  // at least one thing.\r\n  let lo = minCurrentPrice\r\n  // Do an exponential search to find the upper bound.\r\n  let hi = lo * 2\r\n  while (buyTessBuildingsToCheapestPrice(ownedBuildings, hi)[0] <= budget) {\r\n    lo = hi\r\n    hi *= 2\r\n  }\r\n  // Invariant:\r\n  // f(lo) <= budget < f(hi).\r\n  while (hi - lo > 0.5) {\r\n    const mid = lo + (hi - lo) / 2\r\n    // It's possible to get into an infinite loop if mid here is equal to\r\n    // the boundaries, even if hi !== lo (due to floating point inaccuracy).\r\n    if (mid === lo || mid === hi) {\r\n      break\r\n    }\r\n    if (buyTessBuildingsToCheapestPrice(ownedBuildings, mid)[0] <= budget) {\r\n      lo = mid\r\n    } else {\r\n      hi = mid\r\n    }\r\n  }\r\n\r\n  // Binary search is done (with lo being the best candidate).\r\n  const [cost, buildings] = buyTessBuildingsToCheapestPrice(ownedBuildings, lo)\r\n\r\n  // Note that this has a slight edge case when 2 <= N <= 5 buildings are the\r\n  // same price, and it is optimal to buy only M < N of them at that price.\r\n  // The result of this edge case is that we can finish the binary search with\r\n  // a set of buildings which are affordable, but more buildings can still be\r\n  // bought. To fix this, we greedily buy the cheapest building one at a time,\r\n  // which should take 4 or less iterations to run out of budget.\r\n  let remainingBudget = budget - cost\r\n  const currentPrices = buildings.map((num, index) => {\r\n    if (num === null) {\r\n      return null\r\n    }\r\n    return tesseractBuildingCosts[index] * Math.pow(num+1, 3)\r\n  })\r\n\r\n  for (let iteration = 1; iteration <= 5; iteration++) {\r\n    let minimum: {price: number, index: number}|null = null\r\n    for (let index = 0; index < currentPrices.length; index++) {\r\n      const price = currentPrices[index]\r\n      if (price === null) {\r\n        continue\r\n      }\r\n      // <= is used instead of < to prioritise the higher tier buildings\r\n      // over the lower tier ones if they have the same price.\r\n      if (minimum === null || price <= minimum.price) {\r\n        minimum = { price, index }\r\n      }\r\n    }\r\n    if (minimum !== null && minimum.price <= remainingBudget) {\r\n      remainingBudget -= minimum.price\r\n            // buildings[minimum.index] should always be a number.\r\n            // In extreme situations (when buildings[minimum.index] is bigger\r\n            // than Number.MAX_SAFE_INTEGER), this below increment won't work.\r\n            // However, that requires 1e47 tesseracts to get to, which shouldn't\r\n            // ever happen.\r\n            buildings[minimum.index]!++\r\n            currentPrices[minimum.index] = tesseractBuildingCosts[minimum.index] * Math.pow(buildings[minimum.index]!+1, 3)\r\n    } else {\r\n      // Can't afford cheapest any more - break.\r\n      break\r\n    }\r\n  }\r\n\r\n  return buildings\r\n}\r\n\r\n/**\r\n * @param index Which tesseract building to get the cost of.\r\n * @param amount The amount to buy. Defaults to tesseract buy amount.\r\n * @param checkCanAfford Whether to limit the purchase amount to the number of buildings the player can afford.\r\n * @returns A pair of [number of buildings after purchase, cost of purchase].\r\n */\r\nexport const getTesseractCost = (index: OneToFive, amount?: number, checkCanAfford = true, buyFrom?: number): [number, number] => {\r\n  amount ??= player.tesseractbuyamount\r\n  buyFrom ??= player[`ascendBuilding${index}` as const].owned\r\n  const intCost = tesseractBuildingCosts[index - 1]\r\n  const subCost = intCost * Math.pow(buyFrom * (buyFrom + 1) / 2, 2)\r\n\r\n  let actualBuy: number\r\n  if (checkCanAfford) {\r\n    const buyTo = Math.floor(-1 / 2 + 1 / 2 * Math.pow(1 + 8 * Math.pow((Number(player.wowTesseracts) + subCost) / intCost, 1 / 2), 1 / 2))\r\n    actualBuy = Math.min(buyTo, buyFrom + amount)\r\n  } else {\r\n    actualBuy = buyFrom + amount\r\n  }\r\n  const actualCost = intCost * Math.pow(actualBuy * (actualBuy + 1) / 2, 2) - subCost\r\n  return [actualBuy, actualCost]\r\n}\r\n\r\nexport const buyTesseractBuilding = (index: OneToFive, amount = player.tesseractbuyamount) => {\r\n  const intCost = tesseractBuildingCosts[index - 1]\r\n  const ascendBuildingIndex = `ascendBuilding${index}` as const\r\n  // Destructuring FTW!\r\n  const [buyTo, actualCost] = getTesseractCost(index, amount)\r\n\r\n  player[ascendBuildingIndex].owned = buyTo\r\n  player.wowTesseracts.sub(actualCost)\r\n  player[ascendBuildingIndex].cost = intCost * Math.pow(1 + buyTo, 3)\r\n}\r\n\r\nexport const buyRuneBonusLevels = (type: 'Blessings' | 'Spirits', index: number) => {\r\n  const unlocked = type === 'Spirits' ? player.challengecompletions[12] > 0 : player.achievements[134] === 1\r\n  if (unlocked && isFinite(player.runeshards) && player.runeshards > 0) {\r\n    let baseCost\r\n    let baseLevels\r\n    let levelCap\r\n    if (type === 'Spirits') {\r\n      baseCost = G.spiritBaseCost\r\n      baseLevels = player.runeSpiritLevels[index]\r\n      levelCap = player.runeSpiritBuyAmount\r\n    } else {\r\n      baseCost = G.blessingBaseCost\r\n      baseLevels = player.runeBlessingLevels[index]\r\n      levelCap = player.runeBlessingBuyAmount\r\n    }\r\n\r\n    const [level, cost] = calculateSummationLinear(baseLevels, baseCost, player.runeshards, levelCap)\r\n    if (type === 'Spirits') {\r\n      player.runeSpiritLevels[index] = level\r\n    } else {\r\n      player.runeBlessingLevels[index] = level\r\n    }\r\n\r\n    player.runeshards -= cost\r\n\r\n    if (player.runeshards < 0) {\r\n      player.runeshards = 0\r\n    }\r\n\r\n    updateRuneBlessing(type, index)\r\n  }\r\n}\r\n\r\nexport const updateRuneBlessing = (type: 'Blessings' | 'Spirits', index: number) => {\r\n  if (index === 1) {\r\n    const requirementArray = [0, 1e5, 1e8, 1e11]\r\n    for (let i = 1; i <= 3; i++) {\r\n      if (player.runeBlessingLevels[1] >= requirementArray[i] && player.achievements[231 + i] < 1) {\r\n        achievementaward(231 + i)\r\n      }\r\n      if (player.runeSpiritLevels[1] >= 10 * requirementArray[i] && player.achievements[234 + i] < 1) {\r\n        achievementaward(234 + i)\r\n      }\r\n    }\r\n    if (player.runeBlessingLevels[1] >= 1e22 && player.achievements[245] < 1) {\r\n      achievementaward(245)\r\n    }\r\n  }\r\n\r\n  calculateRuneBonuses()\r\n\r\n  if (type === 'Blessings') {\r\n    const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1]\r\n    const t = (index === 5) ? 1 : 0\r\n    DOMCacheGetOrSet(`runeBlessingPower${index}Value1`).innerHTML = i18next.t('runes.blessings.blessingPower', {\r\n      reward: i18next.t(`runes.blessings.rewards.${index - 1}`),\r\n      value: format(G.runeBlessings[index]),\r\n      speed: format(1 - t + blessingMultiplierArray[index] * G.effectiveRuneBlessingPower[index], 4, true)\r\n    })\r\n  } else if (type === 'Spirits') { // eslint-disable-line @typescript-eslint/no-unnecessary-condition\r\n    const spiritMultiplierArray = [0, 1, 1, 20, 1, 100]\r\n    spiritMultiplierArray[index] *= (calculateCorruptionPoints() / 400)\r\n    const t = (index === 3) ? 1 : 0\r\n\r\n    DOMCacheGetOrSet(`runeSpiritPower${index}Value1`).innerHTML = i18next.t('runes.spirits.spiritPower', {\r\n      reward: i18next.t(`runes.spirits.rewards.${index - 1}`),\r\n      value: format(G.runeSpirits[index]),\r\n      speed: format(1 - t + spiritMultiplierArray[index] * G.effectiveRuneSpiritPower[index], 4, true)\r\n    })\r\n  }\r\n}\r\n\r\nexport const buyAllBlessings = (type: 'Blessings' | 'Spirits', percentage = 100, auto = false) => {\r\n  const unlocked = type === 'Spirits' ? player.challengecompletions[12] > 0 : player.achievements[134] === 1\r\n  if (unlocked) {\r\n    const runeshards = Math.floor(player.runeshards / 100 * percentage / 5)\r\n    for (let index = 1; index < 6; index++) {\r\n      if (isFinite(player.runeshards) && player.runeshards > 0) {\r\n        let baseCost\r\n        let baseLevels\r\n        const levelCap = 1e300\r\n        if (type === 'Spirits') {\r\n          baseCost = G.spiritBaseCost\r\n          baseLevels = player.runeSpiritLevels[index]\r\n        } else {\r\n          baseCost = G.blessingBaseCost\r\n          baseLevels = player.runeBlessingLevels[index]\r\n        }\r\n\r\n        const [level, cost] = calculateSummationLinear(baseLevels, baseCost, runeshards, levelCap)\r\n        if (level > baseLevels && (!auto || (level - baseLevels) * 10000 > baseLevels)) {\r\n          if (type === 'Spirits') {\r\n            player.runeSpiritLevels[index] = level\r\n          } else {\r\n            player.runeBlessingLevels[index] = level\r\n          }\r\n\r\n          player.runeshards -= cost\r\n\r\n          if (player.runeshards < 0) {\r\n            player.runeshards = 0\r\n          }\r\n\r\n          updateRuneBlessing(type, index)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { player } from './Synergism'\r\nimport { achievementaward } from './Achievements'\r\nimport Decimal from 'break_infinity.js'\r\nimport { upgradeupdate, clickUpgrades } from './Upgrades'\r\nimport { Globals as G, Upgrade } from './Variables'\r\nimport { buyUpgrades } from './Buy'\r\n\r\nexport const buyGenerator = (i: number, state: boolean) => {\r\n  if (i === 1 && player.prestigePoints.gte(1e12) && !player.unlocks.generation) {\r\n    player.unlocks.generation = true\r\n  }\r\n  const q = 100 + i\r\n  let type: 'transcendPoints' | 'coins' | 'prestigePoints' = 'transcendPoints'\r\n  if (q <= 110 && q >= 106) {\r\n    type = 'coins'\r\n  } else if (q <= 115) {\r\n    type = 'prestigePoints'\r\n  }\r\n\r\n  const cost = Decimal.pow(10, G.upgradeCosts[q])\r\n  const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105])\r\n\r\n  if (player.upgrades[q] === 0 && player[type].gte(cost)) {\r\n    if (achievementCheck === 0 && q >= 102 && q <= 105) {\r\n      achievementaward(q - 31)\r\n    }\r\n    player[type] = player[type].sub(cost)\r\n    player.upgrades[q] = 1\r\n    upgradeupdate(q, state)\r\n  }\r\n}\r\n\r\nexport const buyAutobuyers = (i: number, state?: boolean) => {\r\n  const q = i + 80\r\n  let type: 'prestigePoints' | 'transcendPoints' | 'reincarnationPoints' = 'reincarnationPoints'\r\n  if (q <= 87) {\r\n    type = 'prestigePoints'\r\n  } else if (q <= 93) {\r\n    type = 'transcendPoints'\r\n  }\r\n\r\n  const cost = Decimal.pow(10, G.upgradeCosts[q])\r\n  if (player.upgrades[q] === 0 && player[type].gte(cost)) {\r\n    player[type] = player[type].sub(cost)\r\n    player.upgrades[q] = 1\r\n    upgradeupdate(q, state)\r\n  }\r\n}\r\n\r\nexport const autoUpgrades = () => {\r\n  if (player.upgrades[90] > 0.5 && player.shoptoggles.generators) {\r\n\r\n    for (let i = 1; i < 6; i++) {\r\n      if (player.upgrades[100 + i] === 0 && player.prestigePoints.gte(Decimal.pow(10, G.upgradeCosts[(100 + i)]))) {\r\n        buyGenerator(i, true)\r\n      }\r\n    }\r\n    for (let j = 6; j < 11; j++) {\r\n      if (player.upgrades[100 + j] === 0 && player.coins.gte(Decimal.pow(10, G.upgradeCosts[(100 + j)]))) {\r\n        buyGenerator(j, true)\r\n      }\r\n    }\r\n    for (let k = 11; k < 16; k++) {\r\n      if (player.upgrades[100 + k] === 0 && player.prestigePoints.gte(Decimal.pow(10, G.upgradeCosts[(100 + k)]))) {\r\n        buyGenerator(k, true)\r\n      }\r\n    }\r\n    for (let l = 16; l < 21; l++) {\r\n      if (player.upgrades[100 + l] === 0 && player.transcendPoints.gte(Decimal.pow(10, G.upgradeCosts[(100 + l)]))) {\r\n        buyGenerator(l, true)\r\n      }\r\n    }\r\n  }\r\n  if (player.upgrades[91] > 0.5) {\r\n    for (let i = 1; i < 21; i++) {\r\n      if (player.upgrades[i] === 0 && player.coins.gte(Decimal.pow(10, G.upgradeCosts[i])) && player.shoptoggles.coin) {\r\n        buyUpgrades(Upgrade.coin, i, true)\r\n      }\r\n    }\r\n    for (let i = 121; i <= 125; i++) {\r\n      if (player.upgrades[i] === 0 && player.coins.gte(Decimal.pow(10, G.upgradeCosts[i])) && player.shoptoggles.coin && player.cubeUpgrades[19] > 0) {\r\n        buyUpgrades(Upgrade.coin, i, true)\r\n      }\r\n    }\r\n  }\r\n  if (player.upgrades[92] > 0.5) {\r\n    for (let i = 21; i < 38; i++) {\r\n      if (player.upgrades[i] === 0 && player.prestigePoints.gte(Decimal.pow(10, G.upgradeCosts[i])) && player.shoptoggles.prestige) {\r\n        buyUpgrades(Upgrade.prestige, i, true)\r\n      }\r\n    }\r\n    if (player.upgrades[38] === 0 && player.prestigePoints.gte(Decimal.pow(10, 50000)) && player.shoptoggles.prestige && player.achievements[120] === 1) {\r\n      buyUpgrades(Upgrade.prestige, 38, true)\r\n    }\r\n    if (player.upgrades[39] === 0 && player.prestigePoints.gte(Decimal.pow(10, 100000)) && player.shoptoggles.prestige && player.achievements[127] === 1) {\r\n      buyUpgrades(Upgrade.prestige, 39, true)\r\n    }\r\n    if (player.upgrades[40] === 0 && player.prestigePoints.gte(Decimal.pow(10, 200000)) && player.shoptoggles.prestige && player.achievements[134] === 1) {\r\n      buyUpgrades(Upgrade.prestige, 40, true)\r\n    }\r\n\r\n  }\r\n  if (player.upgrades[99] > 0.5) {\r\n    for (let i = 41; i < 61; i++) {\r\n      if (player.upgrades[i] === 0 && player.transcendPoints.gte(Decimal.pow(10, G.upgradeCosts[i])) && player.shoptoggles.transcend) {\r\n        buyUpgrades(Upgrade.transcend, i, true)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (player.cubeUpgrades[8] > 0) {\r\n    for (let i = 61; i <= 80; i++) {\r\n      if (player.upgrades[i] === 0 && player.reincarnationPoints.gte(Decimal.pow(10, G.upgradeCosts[i])) && player.shoptoggles.reincarnate) {\r\n        buyUpgrades(Upgrade.reincarnation, i, true)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (player.highestSingularityCount >= 25) {\r\n    for (let i = 81; i <= 100; i++) {\r\n      if (player.upgrades[i] === 0) {\r\n        clickUpgrades(i, true)\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { Globals as G, Upgrade } from './Variables'\r\nimport Decimal from 'break_infinity.js'\r\nimport { calculateAnts, calculateCorruptionPoints, calculateRuneLevels } from './Calculate'\r\nimport { sumContents } from './Utility'\r\nimport { buyUpgrades } from './Buy'\r\nimport { buyGenerator, buyAutobuyers } from './Automation'\r\nimport { revealStuff } from './UpdateHTML'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\nconst crystalupgdesc: Record<number, () => Record<string, string>> = {\r\n  3: () => ({\r\n    max: format(\r\n      100 * (0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] *\r\n        Math.log(player.commonFragments + 1) / Math.log(4)), 2, true\r\n    )\r\n  }),\r\n  4: () => ({\r\n    max: format(\r\n      10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) /\r\n        Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[3]\r\n    )\r\n  })\r\n}\r\n\r\nconst constantUpgDesc: Record<number, () => Record<string, string>> = {\r\n  1: () => ({ level: format(5 + player.achievements[270] + 0.1 * player.platonicUpgrades[18], 1, true) }),\r\n  2: () => ({\r\n    max: format(\r\n      10 + player.achievements[270] + player.shopUpgrades.constantEX + 100 *\r\n        (G.challenge15Rewards.exponent - 1) + 0.3 * player.platonicUpgrades[18], 2, true\r\n    )\r\n  })\r\n}\r\n\r\nconst upgradetexts = [\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => format((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 2),\r\n  () => Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10))),\r\n  () => Math.floor(player.multiplierBought / 7),\r\n  () => Math.floor(player.acceleratorBought / 10),\r\n  () => format(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)), 2),\r\n  () => format(Decimal.pow(1.02, G.freeAccelerator), 2),\r\n  () => format(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)), 2),\r\n  () => format(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)), 2),\r\n  () => format(Decimal.pow(1.15, G.freeAccelerator), 2),\r\n  () => format(Decimal.pow(1.15, G.freeAccelerator), 2),\r\n  () => format(Decimal.pow(G.acceleratorEffect, 1 / 3), 2),\r\n  () => null,\r\n  () => format(Decimal.min(1e125, player.transcendShards.add(1))),\r\n  () => format(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1))),\r\n  () => format(Decimal.pow((G.totalCoinOwned + 1) * Math.min(1e30, Math.pow(1.008, G.totalCoinOwned)), 10), 2),\r\n  () => ({ x: format(Math.floor((1 + (1 / 101 * G.freeMultiplier)))), y: format(Math.floor((5 + (1 / 101 * G.freeAccelerator)))) }),\r\n  () => ({ x: format(Math.floor((1 + (1 / 101 * G.freeMultiplier)))), y: format(Math.floor((4 + (1 / 101 * G.freeAccelerator)))) }),\r\n  () => ({ x: format(Math.floor((1 + (1 / 101 * G.freeMultiplier)))), y: format(Math.floor((3 + (1 / 101 * G.freeAccelerator)))) }),\r\n  () => ({ x: format(Math.floor((1 + (1 / 101 * G.freeMultiplier)))), y: format(Math.floor((2 + (1 / 101 * G.freeAccelerator)))) }),\r\n  () => ({ x: format(Math.floor((1 + (1 / 101 * G.freeMultiplier)))), y: format(Math.floor((1 + (1 / 101 * G.freeAccelerator)))) }),\r\n  () => null,\r\n  () => format(Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.max(0, Math.min(1750, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50))),\r\n  () => format(Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))),\r\n  () => format(Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))),\r\n  () => format(Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)))),\r\n  () => format(Math.floor(G.totalCoinOwned / 2000)),\r\n  () => format(Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)))),\r\n  () => format(G.totalAcceleratorBoost),\r\n  () => format(Math.floor(3 / 103 * G.freeMultiplier)),\r\n  () => format(Math.floor(2 / 102 * G.freeMultiplier)),\r\n  () => format(Decimal.min('1e5000', Decimal.pow(player.prestigePoints, 1 / 500)), 2),\r\n  () => format(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2), 2),\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => format(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2))),\r\n  () => format(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)), 2),\r\n  () => format(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)), 2),\r\n  () => format(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)), 2),\r\n  () => format(Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)))),\r\n  () => null,\r\n  () => format(Math.pow(1.05, player.achievementPoints) * (player.achievementPoints + 1), 2),\r\n  () => format(Math.pow((Math.min(1e25, G.totalMultiplier * G.totalAccelerator) / 1000 + 1), 8)),\r\n  () => format(Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)))),\r\n  () => null,\r\n  () => format(Math.pow(G.totalAcceleratorBoost, 2), 2),\r\n  () => format(Decimal.pow(G.globalMythosMultiplier, 0.025), 2),\r\n  () => format(Decimal.min('1e1250', Decimal.pow(G.acceleratorEffect, 1 / 125)), 2),\r\n  () => format(Decimal.min('1e2000', Decimal.pow(G.multiplierEffect, 1 / 180)), 2),\r\n  () => format((Decimal.pow('1e1000', Math.min(1000, G.buildingPower - 1))), 2),\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => Math.floor(1 / 5 * (sumContents(player.challengecompletions))),\r\n  () => format(Decimal.min('1e6000', Decimal.pow(player.reincarnationPoints.add(1), 6))),\r\n  () => format(Decimal.pow(player.reincarnationPoints.add(1), 2)),\r\n  () => null,\r\n  () => null,\r\n  () => format(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles), 2),\r\n  () => format(Math.min(2500, Math.floor(1 / 1000 * Decimal.log(G.taxdivisor, 10)))),\r\n  () => {\r\n    const a = Decimal.pow(Decimal.log(G.reincarnationPointGain.add(10), 10), 0.5)\r\n    const b = Decimal.pow(Decimal.log(G.reincarnationPointGain.add(10), 10), 0.5)\r\n    return {\r\n      x: format(Math.min(10, new Decimal(a).toNumber()), 2),\r\n      y: format(Math.min(3, new Decimal(b).toNumber()), 2)\r\n    }\r\n  },\r\n  () => format(1/3 * Math.log(player.maxobtainium + 1)/Math.log(10), 2, true),\r\n  () => null,\r\n  () => Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10])),\r\n  () => null,\r\n  () => format((1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5))), 2),\r\n  () => format((1 + 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5))), 2),\r\n  () => null,\r\n  () => format((Decimal.pow(1.004 + 4 / 100000 * player.researches[96], player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts)), 3),\r\n  () => format(1 + 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2), 2, true),\r\n  () => null,\r\n  () => null,\r\n  ...Array.from({ length: 39 }, () => () => null),\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => null,\r\n  () => format(0.333 * player.challengecompletions[10], 0),\r\n  () => format(0.333 * player.challengecompletions[10], 0)\r\n]\r\n\r\nexport const upgradeeffects = (i: number) => {\r\n  const effect = upgradetexts[i - 1]?.()\r\n  const type = typeof effect\r\n  const element = DOMCacheGetOrSet('upgradeeffect')\r\n\r\n  if (i >= 81 && i <= 119) {\r\n    element.textContent = i18next.t('upgrades.effects.81')\r\n  } else if (effect == null) {\r\n    element.textContent = i18next.t(`upgrades.effects.${i}`)\r\n  } else if (type === 'string' || type === 'number') {\r\n    element.textContent = i18next.t(`upgrades.effects.${i}`, { x: effect })\r\n  } else {\r\n    element.textContent = i18next.t(`upgrades.effects.${i}`, effect as Exclude<typeof effect, string | number>)\r\n  }\r\n}\r\n\r\nexport const upgradedescriptions = (i: number) => {\r\n  const y = i18next.t(`upgrades.descriptions.${i}`)\r\n  const z = player.upgrades[i] > 0.5 ? ' BOUGHT!' : ''\r\n\r\n  const el = DOMCacheGetOrSet('upgradedescription')\r\n  el.textContent = y + z\r\n  el.style.color = player.upgrades[i] > 0.5 ? 'gold' : 'white'\r\n\r\n  if (player.toggles[9]) {\r\n    clickUpgrades(i, false)\r\n  }\r\n\r\n  let currency = ''\r\n  let color = ''\r\n  if ((i <= 20 && i >= 1) || (i <= 110 && i >= 106) || (i <= 125 && i >= 121)) {\r\n    currency = 'Coins'\r\n    color = 'yellow'\r\n  }\r\n  if ((i <= 40 && i >= 21) || (i <= 105 && i >= 101) || (i <= 115 && i >= 111) || (i <= 87 && i >= 81)) {\r\n    currency = 'Diamonds'\r\n    color = 'cyan'\r\n  }\r\n  if ((i <= 60 && i >= 41) || (i <= 120 && i >= 116) || (i <= 93 && i >= 88)) {\r\n    currency = 'Mythos'\r\n    color = 'plum'\r\n  }\r\n  if ((i <= 80 && i >= 61) || (i <= 100 && i >= 94)) {\r\n    currency = 'Particles'\r\n    color = 'limegreen'\r\n  }\r\n\r\n  DOMCacheGetOrSet('upgradecost').textContent = 'Cost: ' + format(Decimal.pow(10, G.upgradeCosts[i])) + ' ' + currency\r\n  DOMCacheGetOrSet('upgradecost').style.color = color\r\n  upgradeeffects(i)\r\n}\r\n\r\nexport const clickUpgrades = (i: number, auto: boolean) => {\r\n  // Make sure the upgrade is locked\r\n  if (\r\n    player.upgrades[i] !== 0 ||\r\n        (i <= 40 && i >= 21 && !player.unlocks.prestige) ||\r\n        (i <= 60 && i >= 41 && !player.unlocks.transcend) ||\r\n        (i <= 80 && i >= 61 && !player.unlocks.reincarnate) ||\r\n        (i <= 120 && i >= 81 && !player.unlocks.prestige) ||\r\n        DOMCacheGetOrSet(`upg${i}`)!.style.display === 'none'\r\n  ) {\r\n    return\r\n  }\r\n\r\n  let type: Upgrade | undefined\r\n  if (i <= 20 && i >= 1) {\r\n    type = Upgrade.coin\r\n  }\r\n  if (i <= 40 && i >= 21) {\r\n    type = Upgrade.prestige\r\n  }\r\n  if (i <= 60 && i >= 41) {\r\n    type = Upgrade.transcend\r\n  }\r\n  if (i <= 80 && i >= 61) {\r\n    type = Upgrade.reincarnation\r\n  }\r\n  if (i <= 87 && i >= 81) {\r\n    type = Upgrade.prestige\r\n  }\r\n  if (i <= 93 && i >= 88) {\r\n    type = Upgrade.transcend\r\n  }\r\n  if (i <= 100 && i >= 94) {\r\n    type = Upgrade.reincarnation\r\n  }\r\n  if (type && i <= 80 && i >= 1) {\r\n    buyUpgrades(type, i, auto)\r\n  }\r\n  if (type && i <= 100 && i >= 81) {\r\n    buyAutobuyers(i - 80, auto)\r\n  }\r\n  if (i <= 120 && i >= 101) {\r\n    buyGenerator(i - 100, auto)\r\n  }\r\n  if (i <= 125 && i >= 121) {\r\n    buyUpgrades(Upgrade.coin, i, auto)\r\n  }\r\n}\r\n\r\nexport const categoryUpgrades = (i: number, auto: boolean) => {\r\n  let min = 0\r\n  let max = 0\r\n  if (i === 1) {\r\n    min = 121\r\n    max = 125\r\n    for (let i = 1; i <= 20; i++) {\r\n      clickUpgrades(i, auto)\r\n    }\r\n  }\r\n  if (i === 2) {\r\n    min = 21\r\n    max = 40\r\n  }\r\n  if (i === 3) {\r\n    min = 41\r\n    max = 60\r\n  }\r\n  if (i === 4) {\r\n    min = 101\r\n    max = 120\r\n  }\r\n  if (i === 5) {\r\n    min = 81\r\n    max = 100\r\n  }\r\n  if (i === 6) {\r\n    min = 61\r\n    max = 80\r\n  }\r\n  for (let i = min; i <= max; i++) {\r\n    clickUpgrades(i, auto)\r\n  }\r\n}\r\n\r\nconst crystalupgeffect: Record<number, () => string> = {\r\n  1: () => `Crystal production x${format(Decimal.min(Decimal.pow(10, 50 + 2 * player.crystalUpgrades[0]), Decimal.pow(1.05, player.achievementPoints * player.crystalUpgrades[0])), 2, true)}`,\r\n  2: () => `Crystal production x${format(Decimal.min(Decimal.pow(10, 100 + 5 * player.crystalUpgrades[1]), Decimal.pow(Decimal.log(player.coins.add(1), 10), player.crystalUpgrades[1] / 3)), 2, true)}`,\r\n  3: () => `Crystal production x${format(Decimal.pow(1 + Math.min(0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4), 0.001 * player.crystalUpgrades[2]), player.firstOwnedDiamonds + player.secondOwnedDiamonds + player.thirdOwnedDiamonds + player.fourthOwnedDiamonds + player.fifthOwnedDiamonds), 2, true)}`,\r\n  4: () => `Coin production multiplier exponent +${format(Math.min(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[3], 0.05 * player.crystalUpgrades[3]), 2, true)}`,\r\n  5: () => `Crystal production x${format(Decimal.pow(1.01, (player.challengecompletions[1] + player.challengecompletions[2] + player.challengecompletions[3] + player.challengecompletions[4] + player.challengecompletions[5]) * player.crystalUpgrades[4]), 2, true)}`\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\r\nconst returnCrystalUpgDesc = (i: number) => i18next.t(`upgrades.crystalUpgrades.${i}`, crystalupgdesc[i]?.())\r\nconst returnCrystalUpgEffect = (i: number) => i18next.t('buildings.crystalUpgrades.currentEffect', {\r\n  effect: i in crystalupgeffect ? crystalupgeffect[i]() : ''\r\n})\r\n\r\nexport const crystalupgradedescriptions = (i: number) => {\r\n  const p = player.crystalUpgrades[i - 1]\r\n  const c =\r\n        (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0 ? 10 : 0) +\r\n        (Math.floor(G.rune3level * G.effectiveLevelMult /16) * 100 / 100)\r\n\r\n  const q = Decimal.pow(10, (G.crystalUpgradesCost[i - 1] + G.crystalUpgradeCostIncrement[i - 1] * Math.floor(Math.pow(player.crystalUpgrades[i - 1] + 0.5 - c, 2) / 2)))\r\n  DOMCacheGetOrSet('crystalupgradedescription').textContent = returnCrystalUpgDesc(i)\r\n  DOMCacheGetOrSet('crystalupgradeslevel1').innerHTML = i18next.t('buildings.crystalUpgrades.currentLevel', {\r\n    amount: format(p, 0, true)\r\n  })\r\n  DOMCacheGetOrSet('crystalupgradescost1').innerHTML = i18next.t('buildings.crystalUpgrades.cost', { amount: format(q) })\r\n  DOMCacheGetOrSet('crystalupgradeseffect1').innerHTML = returnCrystalUpgEffect(i)\r\n}\r\n\r\n\r\nexport const upgradeupdate = (num: number, fast?: boolean) => {\r\n  const el = DOMCacheGetOrSet(`upg${num}`)\r\n  if (player.upgrades[num] > 0.5) {\r\n    el.style.backgroundColor = 'green'\r\n  } else {\r\n    el.style.backgroundColor = ''\r\n  }\r\n\r\n  const b = i18next.t(`upgrades.descriptions.${num}`)\r\n  const c = player.upgrades[num] > 0.5 ? ' BOUGHT!' : ''\r\n  if (player.upgrades[num] > 0.5) {\r\n    if (!fast) {\r\n      DOMCacheGetOrSet('upgradedescription').textContent = b + c\r\n      DOMCacheGetOrSet('upgradedescription').style.color = 'gold'\r\n    }\r\n  }\r\n\r\n  if (!fast) {\r\n    revealStuff()\r\n  }\r\n}\r\n\r\nexport const ascendBuildingDR = () => {\r\n  const sum = player.ascendBuilding1.owned + player.ascendBuilding2.owned + player.ascendBuilding3.owned + player.ascendBuilding4.owned + player.ascendBuilding5.owned\r\n\r\n  if (sum > 100000) {\r\n    return Math.pow(100000, 0.5) * Math.pow(sum, 0.5)\r\n  } else {\r\n    return sum\r\n  }\r\n}\r\n\r\nconst constUpgEffect: Record<number, () => string> = {\r\n  1: () => `Tesseract building production x${format(Decimal.pow(1.05 + 0.01 * player.achievements[270] + 0.001 * player.platonicUpgrades[18], player.constantUpgrades[1]), 2, true)}`,\r\n  2: () => `Tesseract building production x${format(Decimal.pow(1 + 0.001 * Math.min(100 + 10 * player.achievements[270] + 10 * player.shopUpgrades.constantEX + 3 * player.platonicUpgrades[18] + 1000 * (G.challenge15Rewards.exponent - 1), player.constantUpgrades[2]), ascendBuildingDR()), 2, true)}`,\r\n  3: () => `Offering gain x${format(1 + 0.02 * player.constantUpgrades[3], 2, true)}`,\r\n  4: () => `Obtainium gain x${format(1 + 0.04 * player.constantUpgrades[4], 2, true)}`,\r\n  5: () => `Ant Speed x${format(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]), 2, true)}`,\r\n  6: () => `+ ${format(2 * player.constantUpgrades[6])} free Ant Levels`,\r\n  7: () => `+${format(7 * player.constantUpgrades[7])} free Rune Levels, +${format(3 * player.constantUpgrades[7])} to Rune Cap`,\r\n  8: () => `Rune EXP x${format(1 + 1 / 10 * player.constantUpgrades[8], 2, true)}`,\r\n  9: () => `Runes effectiveness x${format(1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]), 4, true)}`,\r\n  10: () => `Cubes/Tesseracts on Ascension x${format(1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]), 4, true)}`\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\r\nconst returnConstUpgDesc = (i: number) => i18next.t(`upgrades.constantUpgrades.${i}`, constantUpgDesc[i]?.())\r\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\r\nconst returnConstUpgEffect = (i: number) => constUpgEffect[i]?.()\r\n\r\nexport const getConstUpgradeMetadata = (i: number): [number, Decimal] => {\r\n  const toBuy = Math.max(0, Math.floor(1 + Decimal.log(Decimal.max(0.01, player.ascendShards), 10) - Math.log(G.constUpgradeCosts[i]!) / Math.log(10)))\r\n  let cost: Decimal\r\n\r\n  if (toBuy > player.constantUpgrades[i]!) {\r\n    cost = Decimal.pow(10, toBuy - 1).times(G.constUpgradeCosts[i]!)\r\n  } else {\r\n    cost = Decimal.pow(10, player.constantUpgrades[i]!).times(G.constUpgradeCosts[i]!)\r\n  }\r\n\r\n  return [Math.max(1, toBuy - player.constantUpgrades[i]!), cost]\r\n}\r\n\r\nexport const constantUpgradeDescriptions = (i: number) => {\r\n  const [level, cost] = getConstUpgradeMetadata(i)\r\n  DOMCacheGetOrSet('constUpgradeDescription').textContent = returnConstUpgDesc(i)\r\n  DOMCacheGetOrSet('constUpgradeLevel2').textContent = format(player.constantUpgrades[i])\r\n  DOMCacheGetOrSet('constUpgradeCost2').textContent = format(cost) + ' [+' + format(level) + ' LVL]'\r\n  DOMCacheGetOrSet('constUpgradeEffect2').textContent = returnConstUpgEffect(i)\r\n}\r\n\r\nexport const buyConstantUpgrades = (i: number, fast = false) => {\r\n  const [level, cost] = getConstUpgradeMetadata(i)\r\n  if (player.ascendShards.gte(cost)) {\r\n        player.constantUpgrades[i]! += level\r\n        if (player.researches[175] === 0) {\r\n          player.ascendShards = player.ascendShards.sub(cost)\r\n        }\r\n        if (!fast) {\r\n          constantUpgradeDescriptions(i)\r\n        }\r\n  }\r\n  calculateAnts()\r\n  calculateRuneLevels()\r\n}\r\n", "import i18next from 'i18next'\r\nimport { format } from './Synergism'\r\nimport { Alert, Prompt } from './UpdateHTML'\r\n\r\nexport interface IUpgradeData {\r\n    name: string\r\n    description: string\r\n    level?: number\r\n    maxLevel: number\r\n    costPerLevel: number\r\n    toggleBuy?: number\r\n    effect? (this: void, n: number): {bonus: number | boolean, desc: string}\r\n    freeLevels?: number\r\n}\r\n\r\nexport abstract class DynamicUpgrade {\r\n  public name: string\r\n  readonly description: string\r\n  public level = 0\r\n  public freeLevels = 0\r\n  readonly maxLevel: number //-1 = infinitely levelable\r\n  readonly costPerLevel: number\r\n  public toggleBuy = 1 //-1 = buy MAX (or 1000 in case of infinity levels!)\r\n  readonly effect: (n: number) => {bonus: number | boolean, desc: string}\r\n\r\n  constructor(data: IUpgradeData) {\r\n    this.name = data.name\r\n    this.description = data.description\r\n    this.level = data.level ?? 0\r\n    this.freeLevels = data.freeLevels ?? 0\r\n    this.maxLevel = data.maxLevel\r\n    this.costPerLevel = data.costPerLevel\r\n    this.toggleBuy = data.toggleBuy ?? 1\r\n    this.effect = data.effect ?? function (n: number) {\r\n      return { bonus: n, desc: 'WIP not implemented' }\r\n    }\r\n  }\r\n\r\n  public async changeToggle(): Promise<void> {\r\n\r\n    // Is null unless given an explicit number\r\n    const newToggle = await Prompt(i18next.t('dynamicUpgrades.validation.setPurchaseAmount', { x: this.name }))\r\n    const newToggleAmount = Number(newToggle)\r\n\r\n    if (newToggle === null) {\r\n      return Alert(i18next.t('dynamicUpgrades.validation.toggleKept', { x: format(this.toggleBuy) }))\r\n    }\r\n\r\n    if (!Number.isInteger(newToggle)) {\r\n      return Alert(i18next.t('general.validation.fraction'))\r\n    }\r\n    if (newToggleAmount < -1) {\r\n      return Alert(i18next.t('dynamicUpgrades.validation.onlyNegativeOne'))\r\n    }\r\n    if (newToggleAmount === 0) {\r\n      return Alert(i18next.t('dynamicUpgrades.validation.notZero'))\r\n    }\r\n\r\n    this.toggleBuy = newToggleAmount\r\n    const m = newToggleAmount === -1\r\n      ? i18next.t('dynamicUpgrades.toggleMax')\r\n      : i18next.t('dynamicUpgrades.toggle', { x: format(this.toggleBuy) })\r\n\r\n    return Alert(m)\r\n  }\r\n\r\n  public getEffect(): {bonus: number | boolean, desc: string} {\r\n    const effectiveLevel = this.level + Math.min(this.level, this.freeLevels) + Math.sqrt(Math.max(0, this.freeLevels - this.level))\r\n    return this.effect(effectiveLevel)\r\n  }\r\n\r\n    abstract toString(): string\r\n    abstract updateUpgradeHTML(): void\r\n    abstract getCostTNL(): number\r\n    public abstract buyLevel(event: MouseEvent): Promise<void> | void\r\n}\r\n", "import { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport type { IUpgradeData } from './DynamicUpgrade'\r\nimport { DynamicUpgrade } from './DynamicUpgrade'\r\nimport { format, player } from './Synergism'\r\nimport type { Player } from './types/Synergism'\r\nimport { Alert, Prompt, revealStuff } from './UpdateHTML'\r\nimport { toOrdinal } from './Utility'\r\nimport i18next from 'i18next'\r\n\r\nexport const updateSingularityPenalties = (): void => {\r\n  const singularityCount = player.singularityCount\r\n  const platonic = (singularityCount > 36) ? i18next.t('singularity.penalties.platonicCosts', { multiplier: format(calculateSingularityDebuff('Platonic Costs', singularityCount), 2, true) }) : '<span class=\"grayText\">???????? ??????? ????? ??? ?????????? ?? ???</span> <span class=\"redText\">(37)</span>'\r\n  const hepteract = (singularityCount > 50) ? i18next.t('singularity.penalties.hepteractCosts', { multiplier: format(calculateSingularityDebuff('Hepteract Costs', singularityCount), 2, true) }) : '<span class=\"grayText\">????????? ????? ????? ??? ?????????? ?? ???</span> <span class=\"redText\">(51)</span>'\r\n  const str = getSingularityOridnalText(singularityCount) +\r\n      `<br>${i18next.t('singularity.penalties.globalSpeed', { divisor: format(calculateSingularityDebuff('Global Speed', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.ascensionSpeed', { divisor: format(calculateSingularityDebuff('Ascension Speed', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.offeringGain', { divisor: format(calculateSingularityDebuff('Offering', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.obtainiumGain', { divisor: format(calculateSingularityDebuff('Obtainium', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.cubeGain', { divisor: format(calculateSingularityDebuff('Cubes', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.researchCosts', { multiplier: format(calculateSingularityDebuff('Researches', singularityCount), 2, true) })}\r\n        ${i18next.t('singularity.penalties.cubeUpgradeCosts', { multiplier: format(calculateSingularityDebuff('Cube Upgrades', singularityCount), 2, true) })}\r\n        ${platonic}\r\n        ${hepteract}\r\n        ${(singularityCount >= 230) ? i18next.t('singularity.penalties.penaltySmooth') : i18next.t('singularity.penalties.penaltyRough', { num: format(calculateNextSpike(player.singularityCount), 0, true) })}\r\n        ${(player.runelevels[6] > 0) ? i18next.t('singularity.penalties.antiquitiesBought') : i18next.t('singularity.penalties.antiquitiesNotBought')}`\r\n\r\n  DOMCacheGetOrSet('singularityPenaltiesMultiline').innerHTML = str\r\n}\r\n\r\nfunction getSingularityOridnalText(singularityCount: number): string {\r\n  return `${i18next.t('general.youAreInThe')} <span style=\"color: gold\">${toOrdinal(singularityCount)} Singularity</span>`\r\n}\r\n\r\n// Need a better way of handling the ones without a special formulae than 'Default' variant\r\ntype SingularitySpecialCostFormulae = 'Default' | 'Quadratic' | 'Cubic' | 'Exponential2'\r\n\r\nexport interface ISingularityData extends Omit<IUpgradeData, 'name' | 'description'> {\r\n    goldenQuarksInvested?: number\r\n    minimumSingularity?: number\r\n    canExceedCap?: boolean\r\n    specialCostForm?: SingularitySpecialCostFormulae\r\n    qualityOfLife?: boolean\r\n}\r\n\r\n/**\r\n * Singularity Upgrades are bought in the Shop of the singularity tab, and all have their own\r\n * name, description, level and maxlevel, plus a feature to toggle buy on each.\r\n */\r\nexport class SingularityUpgrade extends DynamicUpgrade {\r\n\r\n  // Field Initialization\r\n  public goldenQuarksInvested = 0\r\n  public minimumSingularity: number\r\n  public canExceedCap: boolean\r\n  public specialCostForm: SingularitySpecialCostFormulae\r\n  public qualityOfLife: boolean\r\n\r\n  public constructor(data: ISingularityData, key: string) {\r\n    const name = i18next.t(`singularity.data.${key}.name`)\r\n    const description = i18next.t(`singularity.data.${key}.description`)\r\n\r\n    super({ ...data, name, description })\r\n    this.goldenQuarksInvested = data.goldenQuarksInvested ?? 0\r\n    this.minimumSingularity = data.minimumSingularity ?? 0\r\n    this.canExceedCap = data.canExceedCap ?? false\r\n    this.specialCostForm = data.specialCostForm ?? 'Default'\r\n    this.qualityOfLife = data.qualityOfLife ?? false\r\n  }\r\n\r\n  /**\r\n     * Given an upgrade, give a concise information regarding its data.\r\n     * @returns A string that details the name, description, level statistic, and next level cost.\r\n     */\r\n  toString(): string {\r\n    const costNextLevel = this.getCostTNL()\r\n    const maxLevel = this.maxLevel === -1\r\n      ? ''\r\n      : `/${format(this.computeMaxLevel(), 0, true)}`\r\n    const color = this.computeMaxLevel() === this.level ? 'plum' : 'white'\r\n    const minReqColor = player.highestSingularityCount < this.minimumSingularity ? 'var(--crimson-text-color)' : 'var(--green-text-color)'\r\n    const minimumSingularity = this.minimumSingularity > 0\r\n      ? `${i18next.t('general.minimum')} Singularity: ${this.minimumSingularity}`\r\n      : i18next.t('singularity.toString.noMinimum')\r\n\r\n    let freeLevelInfo = this.freeLevels > 0 ?\r\n      `<span style=\"color: orange\"> [+${format(this.freeLevels, 2, true)}]</span>` : ''\r\n\r\n    if (this.freeLevels > this.level) {\r\n      freeLevelInfo = freeLevelInfo + `<span style=\"color: var(--maroon-text-color)\"> ${i18next.t('general.softCapped')}</span>`\r\n    }\r\n\r\n    return `<span style=\"color: gold\">${this.name}</span>\r\n                <span style=\"color: lightblue\">${this.description}</span>\r\n                <span style=\"color: ${minReqColor}\">${minimumSingularity}</span>\r\n                <span style=\"color: ${color}\"> ${i18next.t('general.level')} ${format(this.level, 0, true)}${maxLevel}${freeLevelInfo}</span>\r\n                <span style=\"color: gold\">${this.getEffect().desc}</span>\r\n                ${i18next.t('singularity.toString.costNextLevel')}: ${format(costNextLevel, 0, true)} Golden Quarks.\r\n                ${i18next.t('general.spent')} Quarks: ${format(this.goldenQuarksInvested, 0, true)}`\r\n  }\r\n\r\n  public updateUpgradeHTML(): void {\r\n    DOMCacheGetOrSet('testingMultiline').innerHTML = this.toString()\r\n  }\r\n\r\n  /**\r\n     * Retrieves the cost for upgrading the singularity upgrade once. Return 0 if maxed.\r\n     * @returns A number representing how many Golden Quarks a player must have to upgrade once.\r\n     */\r\n  getCostTNL(): number {\r\n\r\n    let costMultiplier = 1\r\n    if (this.computeMaxLevel() > this.maxLevel && this.level >= this.maxLevel) {\r\n      costMultiplier *= Math.pow(4, this.level - this.maxLevel + 1)\r\n    }\r\n\r\n    if (this.specialCostForm === 'Exponential2') {\r\n      return this.costPerLevel * Math.sqrt(costMultiplier) * Math.pow(2, this.level)\r\n    }\r\n\r\n    if (this.specialCostForm === 'Cubic') {\r\n      return this.costPerLevel * costMultiplier * (Math.pow(this.level + 1, 3) - Math.pow(this.level, 3))\r\n    }\r\n\r\n    if (this.specialCostForm === 'Quadratic') {\r\n      return this.costPerLevel * costMultiplier * (Math.pow(this.level + 1, 2) - Math.pow(this.level, 2))\r\n    }\r\n\r\n    costMultiplier *= (this.maxLevel === -1 && this.level >= 100) ? this.level / 50 : 1\r\n    costMultiplier *= (this.maxLevel === -1 && this.level >= 400) ? this.level / 100 : 1\r\n\r\n    return (this.computeMaxLevel() === this.level) ? 0: Math.ceil(this.costPerLevel * (1 + this.level) * costMultiplier)\r\n  }\r\n\r\n  /**\r\n     * Buy levels up until togglebuy or maxed.\r\n     * @returns An alert indicating cannot afford, already maxed or purchased with how many\r\n     *          levels purchased\r\n     */\r\n  public async buyLevel(event: MouseEvent): Promise<void> {\r\n    let purchased = 0\r\n    let maxPurchasable = 1\r\n    let GQBudget = player.goldenQuarks\r\n\r\n    if (event.shiftKey) {\r\n      maxPurchasable = 100000\r\n      const buy = Number(await Prompt(i18next.t('singularity.goldenQuarks.spendPrompt', {\r\n        gq: format(player.goldenQuarks, 0, true)\r\n      })))\r\n\r\n      if (isNaN(buy) || !isFinite(buy) || !Number.isInteger(buy)) { // nan + Infinity checks\r\n        return Alert(i18next.t('general.validation.finite'))\r\n      }\r\n\r\n      if (buy === -1) {\r\n        GQBudget = player.goldenQuarks\r\n      } else if (buy <= 0) {\r\n        return Alert(i18next.t('general.validation.zeroOrLess'))\r\n      } else {\r\n        GQBudget = buy\r\n      }\r\n      GQBudget = Math.min(player.goldenQuarks, GQBudget)\r\n    }\r\n\r\n    if (this.maxLevel > 0) {\r\n      maxPurchasable = Math.min(maxPurchasable, this.computeMaxLevel() - this.level)\r\n    }\r\n\r\n    if (maxPurchasable === 0) {\r\n      return Alert(i18next.t('singularity.goldenQuarks.hasUpgrade'))\r\n    }\r\n\r\n    if (player.highestSingularityCount < this.minimumSingularity) {\r\n      return Alert(i18next.t('singularity.goldenQuarks.notHighEnoughLevel'))\r\n    }\r\n    while (maxPurchasable > 0) {\r\n      const cost = this.getCostTNL()\r\n      if (player.goldenQuarks < cost || GQBudget < cost) {\r\n        break\r\n      } else {\r\n        player.goldenQuarks -= cost\r\n        GQBudget -= cost\r\n        this.goldenQuarksInvested += cost\r\n        this.level += 1\r\n        purchased += 1\r\n        maxPurchasable -= 1\r\n      }\r\n      if (this.name === player.singularityUpgrades.oneMind.name) {\r\n        player.ascensionCounter = 0\r\n        player.ascensionCounterReal = 0\r\n        player.ascensionCounterRealReal = 0\r\n        void Alert(i18next.t('singularity.goldenQuarks.ascensionReset'))\r\n      }\r\n\r\n      if (this.name === player.singularityUpgrades.singCitadel2.name) {\r\n        player.singularityUpgrades.singCitadel.freeLevels = player.singularityUpgrades.singCitadel2.level\r\n      }\r\n    }\r\n\r\n    if (purchased === 0) {\r\n      return Alert(i18next.t('general.validation.moreThanPlayerHas'))\r\n    }\r\n    if (purchased > 1) {\r\n      void Alert(i18next.t('singularity.goldenQuarks.multiBuyPurchased', { levels: format(purchased) }))\r\n    }\r\n\r\n    this.updateUpgradeHTML()\r\n    updateSingularityPenalties()\r\n    updateSingularityPerks()\r\n    revealStuff()\r\n  }\r\n\r\n  public computeFreeLevelSoftcap(): number {\r\n    return Math.min(this.level, this.freeLevels) + Math.sqrt(Math.max(0, this.freeLevels - this.level))\r\n  }\r\n\r\n  public computeMaxLevel(): number {\r\n    if (!this.canExceedCap) {\r\n      return this.maxLevel\r\n    } else {\r\n      let cap = this.maxLevel\r\n      const overclockPerks = [50, 60, 75, 100, 125, 150, 175, 200, 225, 250]\r\n      for (const perk of overclockPerks) {\r\n        if (player.highestSingularityCount >= perk) {\r\n          cap += 1\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n      cap += +player.octeractUpgrades.octeractSingUpgradeCap.getEffect().bonus\r\n      return cap\r\n    }\r\n  }\r\n\r\n  public actualTotalLevels(): number {\r\n    if (player.singularityChallenges.noSingularityUpgrades.enabled && !this.qualityOfLife) {\r\n      return 0\r\n    }\r\n\r\n    if (player.singularityChallenges.limitedAscensions.enabled && this.name === player.singularityUpgrades.platonicDelta.name) {\r\n      return 0\r\n    }\r\n\r\n    const actualFreeLevels = this.computeFreeLevelSoftcap()\r\n    const linearLevels = this.level + actualFreeLevels\r\n    let polynomialLevels = 0\r\n    if (player.octeractUpgrades.octeractImprovedFree.getEffect().bonus) {\r\n      let exponent = 0.6\r\n      exponent += +player.octeractUpgrades.octeractImprovedFree2.getEffect().bonus\r\n      exponent += +player.octeractUpgrades.octeractImprovedFree3.getEffect().bonus\r\n      exponent += +player.octeractUpgrades.octeractImprovedFree4.getEffect().bonus\r\n      polynomialLevels = Math.pow(this.level * actualFreeLevels, exponent)\r\n    }\r\n\r\n    return Math.max(linearLevels, polynomialLevels)\r\n  }\r\n\r\n  public getEffect(): { bonus: number | boolean, desc: string } {\r\n    return this.effect(this.actualTotalLevels())\r\n  }\r\n\r\n  public refund(): void {\r\n    player.goldenQuarks += this.goldenQuarksInvested\r\n    this.level = 0\r\n    this.goldenQuarksInvested = 0\r\n  }\r\n}\r\n\r\nexport const singularityData: Record<keyof Player['singularityUpgrades'], ISingularityData> = {\r\n  goldenQuarks1: {\r\n    maxLevel: 15,\r\n    costPerLevel: 12,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.10 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.goldenQuarks1.effect', { n: format(10 * n, 0, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  goldenQuarks2: {\r\n    maxLevel: 75,\r\n    costPerLevel: 60,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 250) ? 1 / Math.log2(n / 62.5) : 1 - Math.min(0.5, n / 500),\r\n        get desc () {\r\n          return i18next.t('singularity.data.goldenQuarks2.effect', {\r\n            n: n > 250 ? format(100 - 100 / Math.log2(n / 62.5), 2, true) : format(Math.min(50, n / 5), 2, true)\r\n          })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  goldenQuarks3: {\r\n    maxLevel: 1000,\r\n    costPerLevel: 1000,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n * (n + 1) / 2,\r\n        get desc () {\r\n          return i18next.t('singularity.data.goldenQuarks3.effect', { n: format(n * (n + 1) / 2) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  starterPack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.starterPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  wowPass: {\r\n    maxLevel: 1,\r\n    costPerLevel: 350,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.wowPass.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  cookies: {\r\n    maxLevel: 1,\r\n    costPerLevel: 100,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.cookies.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  cookies2: {\r\n    maxLevel: 1,\r\n    costPerLevel: 500,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.cookies2.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  cookies3: {\r\n    maxLevel: 1,\r\n    costPerLevel: 24999,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.cookies3.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  cookies4: {\r\n    maxLevel: 1,\r\n    costPerLevel: 499999,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.cookies4.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  cookies5: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1.66e15,\r\n    minimumSingularity: 215,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.cookies5.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  ascensions: {\r\n    maxLevel: -1,\r\n    costPerLevel: 5,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (1 + 2 * n / 100) * (1 + Math.floor(n / 10) / 100),\r\n        get desc () {\r\n          return i18next.t('singularity.data.goldenQuarks1.effect', {\r\n            n: format((100 + 2 * n) * (1 + Math.floor(n/10) / 100) - 100, 1, true)\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  corruptionFourteen: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1000,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.corruptionFourteen.effect${n > 0 ? 'Have' : 'HaveNot'}`, {\r\n            m: n > 0 ? ':)' : ':('\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  corruptionFifteen: {\r\n    maxLevel: 1,\r\n    costPerLevel: 40000,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.corruptionFifteen.effect${n > 0 ? 'Have' : 'HaveNot'}`, {\r\n            m: n > 0 ? ':)' : ':('\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOfferings1: {\r\n    maxLevel: -1,\r\n    costPerLevel: 1,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.02 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOfferings1.effect', { n: format(2 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n\r\n  },\r\n  singOfferings2: {\r\n    maxLevel: 25,\r\n    costPerLevel: 25,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.08 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOfferings2.effect', { n: format(8 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOfferings3: {\r\n    maxLevel: 40,\r\n    costPerLevel: 500,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.04 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOfferings3.effect', { n: format(4 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singObtainium1: {\r\n    maxLevel: -1,\r\n    costPerLevel: 1,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.02 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singObtainium1.effect', { n: format(2 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singObtainium2: {\r\n    maxLevel: 25,\r\n    costPerLevel: 25,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.08 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singObtainium2.effect', { n: format(8 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singObtainium3: {\r\n    maxLevel: 40,\r\n    costPerLevel: 500,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.04 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singObtainium3.effect', { n: format(4 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singCubes1: {\r\n    maxLevel: -1,\r\n    costPerLevel: 1,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singCubes1.effect', { n: format(1 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singCubes2: {\r\n    maxLevel: 25,\r\n    costPerLevel: 25,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.08 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singCubes2.effect', { n: format(8 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singCubes3: {\r\n    maxLevel: 40,\r\n    costPerLevel: 500,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.04 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singCubes3.effect', { n: format(4 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singCitadel: {\r\n    maxLevel: -1,\r\n    costPerLevel: 500000,\r\n    minimumSingularity: 100,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (1 + 0.02 * n) * (1 + Math.floor(n / 10) / 100),\r\n        get desc () {\r\n          return i18next.t('singularity.data.singCubes2.effect', {\r\n            n: format(100 * ((1 + 0.02 * n) * (1 + Math.floor(n/10)/100) - 1))\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singCitadel2: {\r\n    maxLevel: 100,\r\n    costPerLevel: 1e14,\r\n    minimumSingularity: 210,\r\n    specialCostForm: 'Quadratic',\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (1 + 0.02 * n) * (1 + Math.floor(n / 10) / 100),\r\n        get desc () {\r\n          return i18next.t('singularity.data.singCubes3.effect', { n:\r\n                    format(100 * ((1 + 0.02 * n) * (1 + Math.floor(n/10)/100) - 1))\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractUnlock: {\r\n    maxLevel: 1,\r\n    costPerLevel: 8888,\r\n    minimumSingularity: 8,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.octeractUnlock.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singOcteractPatreonBonus: {\r\n    maxLevel: 1,\r\n    costPerLevel: 9999,\r\n    minimumSingularity: 12,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractPatreonBonus.effect', { n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  offeringAutomatic: {\r\n    maxLevel: -1,\r\n    costPerLevel: 1e14,\r\n    minimumSingularity: 222,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.offeringAutomatic.effect', { n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  intermediatePack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1,\r\n    minimumSingularity: 4,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.intermediatePack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  advancedPack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 200,\r\n    minimumSingularity: 9,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.advancedPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  expertPack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 800,\r\n    minimumSingularity: 16,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.expertPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  masterPack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 3200,\r\n    minimumSingularity: 25,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.masterPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  divinePack: {\r\n    maxLevel: 1,\r\n    costPerLevel: 12800,\r\n    minimumSingularity: 36,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.divinePack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  wowPass2: {\r\n    maxLevel: 1,\r\n    costPerLevel: 19999,\r\n    minimumSingularity: 11,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.wowPass2.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  wowPass3: {\r\n    maxLevel: 1,\r\n    costPerLevel: 3e7 - 1,\r\n    minimumSingularity: 83,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (n > 0),\r\n        get desc () {\r\n          return i18next.t(`singularity.data.wowPass3.effect${n > 0 ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  potionBuff: {\r\n    maxLevel: 10,\r\n    costPerLevel: 999,\r\n    minimumSingularity: 4,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: Math.max(1, 10 * Math.pow(n, 2)),\r\n        get desc () {\r\n          return i18next.t('singularity.data.potionBuff.effect', {\r\n            n: format(Math.max(1, 10 * Math.pow(n, 2)), 0, true)\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  potionBuff2: {\r\n    maxLevel: 10,\r\n    costPerLevel: 1e8,\r\n    minimumSingularity: 121,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: Math.max(1, 2 * n),\r\n        get desc () {\r\n          return i18next.t('singularity.data.potionBuff2.effect', { n: format(Math.max(1, 2 * n), 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  potionBuff3: {\r\n    maxLevel: 10,\r\n    costPerLevel: 1e12,\r\n    minimumSingularity: 196,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: Math.max(1, 1 + 0.5 * n),\r\n        get desc () {\r\n          return i18next.t('singularity.data.potionBuff3.effect', { n: format(Math.max(1, 1 + 0.5 * n), 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singChallengeExtension: {\r\n    maxLevel: 4,\r\n    costPerLevel: 999,\r\n    minimumSingularity: 11,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singChallengeExtension.effect', { n: 2 * n, m: n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singChallengeExtension2: {\r\n    maxLevel: 3,\r\n    costPerLevel: 29999,\r\n    minimumSingularity: 26,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singChallengeExtension2.effect', { n: 2 * n, m: n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singChallengeExtension3: {\r\n    maxLevel: 3,\r\n    costPerLevel: 749999,\r\n    minimumSingularity: 51,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singChallengeExtension3.effect', { n: 2 * n, m: n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singQuarkImprover1: {\r\n    maxLevel: 30,\r\n    costPerLevel: 1,\r\n    minimumSingularity: 177,\r\n    canExceedCap: true,\r\n    specialCostForm: 'Exponential2',\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n/200,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singQuarkImprover1.effect', { n: format(n / 2, 2, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singQuarkHepteract: {\r\n    maxLevel: 1,\r\n    costPerLevel: 14999,\r\n    minimumSingularity: 5,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n/100,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singQuarkHepteract.effect', { n: format(2 * n, 2, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singQuarkHepteract2: {\r\n    maxLevel: 1,\r\n    costPerLevel: 449999,\r\n    minimumSingularity: 30,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n/100,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singQuarkHepteract2.effect', { n: format(2 * n, 2, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singQuarkHepteract3: {\r\n    maxLevel: 1,\r\n    costPerLevel: 13370000,\r\n    minimumSingularity: 61,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n/100,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singQuarkHepteract3.effect', { n: format(2 * n, 2, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singOcteractGain: {\r\n    maxLevel: -1,\r\n    costPerLevel: 20000,\r\n    minimumSingularity: 36,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.0125 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractGain.effect', { n: format(1.25 * n, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOcteractGain2: {\r\n    maxLevel: 25,\r\n    costPerLevel: 40000,\r\n    minimumSingularity: 36,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.05 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractGain2.effect', { n: format(5 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOcteractGain3: {\r\n    maxLevel: 50,\r\n    costPerLevel: 250000,\r\n    minimumSingularity: 55,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.025 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractGain3.effect', { n: format(2.5 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOcteractGain4: {\r\n    maxLevel: 100,\r\n    costPerLevel: 750000,\r\n    minimumSingularity: 77,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.02 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractGain4.effect', { n: format(2*n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singOcteractGain5: {\r\n    maxLevel: 200,\r\n    costPerLevel: 7777777,\r\n    minimumSingularity: 100,\r\n    canExceedCap: true,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singOcteractGain5.effect', { n: format(n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  platonicTau: {\r\n    maxLevel: 1,\r\n    costPerLevel: 100000,\r\n    minimumSingularity: 29,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.platonicTau.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  platonicAlpha: {\r\n    maxLevel: 1,\r\n    costPerLevel: 2e7,\r\n    minimumSingularity: 70,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.platonicAlpha.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  platonicDelta: {\r\n    maxLevel: 1,\r\n    costPerLevel: 5e9,\r\n    minimumSingularity: 111,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.platonicDelta.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  platonicPhi: {\r\n    maxLevel: 1,\r\n    costPerLevel: 2e11,\r\n    minimumSingularity: 152,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.platonicPhi.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singFastForward: {\r\n    maxLevel: 1,\r\n    costPerLevel: 7e6 - 1,\r\n    minimumSingularity: 50,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.singFastForward.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singFastForward2: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1e11 - 1,\r\n    minimumSingularity: 150,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.singFastForward2.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  singAscensionSpeed: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1e10,\r\n    minimumSingularity: 130,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singAscensionSpeed.effect', {\r\n            n: format(1 + 0.03 * n, 2, true),\r\n            m: format(1 - 0.03 * n, 2, true)\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  singAscensionSpeed2: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1e12,\r\n    minimumSingularity: 150,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.singAscensionSpeed2.effect')\r\n        }\r\n      }\r\n    }\r\n  },\r\n  WIP: {\r\n    maxLevel: 100,\r\n    costPerLevel: 1e300,\r\n    minimumSingularity: 251,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.WIP.effect')\r\n        }\r\n      }\r\n    }\r\n  },\r\n  ultimatePen: {\r\n    maxLevel: 1,\r\n    costPerLevel: 2.22e22,\r\n    minimumSingularity: 300,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t('singularity.data.ultimatePen.effect', {\r\n            n: n ? '' : 'NOT',\r\n            m: n > 0 ? ' However, the pen just ran out of ink. How will you get more?' : ''\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  oneMind: {\r\n    maxLevel: 1,\r\n    costPerLevel: 1.66e13,\r\n    minimumSingularity: 166,\r\n    effect: (n : number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.oneMind.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  wowPass4: {\r\n    maxLevel: 1,\r\n    costPerLevel: 66666666666,\r\n    minimumSingularity: 150,\r\n    effect: (n : number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t(`singularity.data.wowPass4.effect${n ? 'Have' : 'HaveNot'}`)\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  blueberries: {\r\n    maxLevel: -1,\r\n    costPerLevel: 1e16,\r\n    minimumSingularity: 222,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('singularity.data.blueberries.effect', { n })\r\n        }\r\n      }\r\n    },\r\n    specialCostForm: 'Exponential2'\r\n  }\r\n}\r\n\r\n/**\r\n * Singularity Perks are automatically obtained and upgraded, based on player.singularityCount\r\n * They can have one or several levels with a description for each level\r\n */\r\nexport class SingularityPerk {\r\n  public readonly name: () => string\r\n  public readonly levels: number[]\r\n  public readonly description: (n: number, levels: number[]) => string\r\n\r\n  public constructor(perk: SingularityPerk) {\r\n    this.name = perk.name\r\n    this.levels = perk.levels\r\n    this.description = perk.description\r\n  }\r\n}\r\n\r\n// List of Singularity Perks based on player.highestSingularityCount\r\n// The list is ordered on first level acquisition, so be careful when inserting a new one ;)\r\nexport const singularityPerks: SingularityPerk[] = [\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.xyz')\r\n    },\r\n    levels: [1, 20, 200],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.xyz.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.xyz.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.xyz.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.unlimitedGrowth')\r\n    },\r\n    levels: [1],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.unlimitedGrowth', { amount: format(10 * player.singularityCount) })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.goldenCoins')\r\n    },\r\n    levels: [1],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.goldenCoins')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.hepteractAutocraft')\r\n    },\r\n    levels: [1],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.hepteractAutocraft')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.generousOrbs')\r\n    },\r\n    levels: [1, 2, 5, 10, 15, 20, 25, 30, 35],\r\n    description: (n: number, levels: number[]) => {\r\n      const overfluxBonus: Record<number, number> = {\r\n        8: 700, // How to read: levels[8] -> Sing 35 gives 700%\r\n        7: 500,\r\n        6: 415,\r\n        5: 360,\r\n        4: 315,\r\n        3: 280,\r\n        2: 255,\r\n        1: 230\r\n      }\r\n\r\n      for (let i = 8; i > 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.generousOrbs', { amount: overfluxBonus[i] })\r\n        }\r\n      }\r\n      return i18next.t('singularity.perks.generousOrbs', { amount: '215' })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.researchDummies')\r\n    },\r\n    levels: [1, 11],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.researchDummies.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.researchDummies.otherwise')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.superStart')\r\n    },\r\n    levels: [2, 3, 4, 7, 15],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[4]) {\r\n        return i18next.t('singularity.perks.superStart.hasLevel4')\r\n      } else if (n >= levels[3]) {\r\n        return i18next.t('singularity.perks.superStart.hasLevel3')\r\n      } else if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.superStart.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.superStart.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.superStart.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.notSoChallenging')\r\n    },\r\n    levels: [4, 7, 10, 15, 20],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[4]) {\r\n        return i18next.t('singularity.perks.notSoChallenging.hasLevel4')\r\n      } else if (n >= levels[3]) {\r\n        return i18next.t('singularity.perks.notSoChallenging.hasLevel3')\r\n      } else if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.notSoChallenging.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.notSoChallenging.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.notSoChallenging.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.automationUpgrades')\r\n    },\r\n    levels: [5, 10, 15, 25, 30, 100],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[5]) {\r\n        return i18next.t('singularity.perks.automationUpgrades.hasLevel5')\r\n      } else if (n >= levels[4]) {\r\n        return i18next.t('singularity.perks.automationUpgrades.hasLevel4')\r\n      } else if (n >= levels[3]) {\r\n        return i18next.t('singularity.perks.automationUpgrades.hasLevel3')\r\n      } else if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.automationUpgrades.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.automationUpgrades.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.automationUpgrades.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.evenMoreQuarks')\r\n    },\r\n    levels: [5, 20, 35, 50, 65, 80, 90, 100, 121, 144, 150, 160, 166, 169, 170, 175, 180, 190, 196, 200, 200, 201, 202, 203, 204, 205, 210, 212, 214, 216, 218, 220, 225, 250],\r\n    description: (n: number, levels: number[]) => {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.evenMoreQuarks.m', {\r\n            stack: i + 1,\r\n            inc: format(100 * (Math.pow(1.05, i+1) - 1), 2)\r\n          })\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.shopSpecialOffer')\r\n    },\r\n    levels: [5, 20, 51],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.shopSpecialOffer.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.shopSpecialOffer.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.shopSpecialOffer.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.potionAutogenerator')\r\n    },\r\n    levels: [6],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.potionAutogenerator')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.respecBeGone')\r\n    },\r\n    levels: [7],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.respecBeGone')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.forTheLoveOfTheAntGod')\r\n    },\r\n    levels: [10, 15, 25],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.forTheLoveOfTheAntGod.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.forTheLoveOfTheAntGod.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.forTheLoveOfTheAntGod.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.itAllAddsUp')\r\n    },\r\n    levels: [10, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 235, 240],\r\n    description: (n: number, levels: number[]) => {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.itAllAddsUp', {\r\n            div: format(1 + (i + 1) / 5, 2, true),\r\n            div2: format(1 + (i + 1) / 5, 2, true),\r\n            cap: format(1 + (i + 1) / 5, 2, true)\r\n          })\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.automagicalRunes')\r\n    },\r\n    levels: [15, 30, 40, 50],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[3]) {\r\n        return i18next.t('singularity.perks.automagicalRunes.hasLevel3')\r\n      } else if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.automagicalRunes.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.automagicalRunes.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.automagicalRunes.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.derpSmithsCornucopia')\r\n    },\r\n    levels: [18, 38, 58, 78, 88, 98, 118, 148, 178, 188, 198, 208, 218, 228, 238, 248],\r\n    description: (n: number, levels: number[]) => {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.derpSmithsCornucopia', {\r\n            counter: i+1\r\n          })\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.exaltedAchievements')\r\n    },\r\n    levels: [25],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.exaltedAchievements')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.coolQOLCubes')\r\n    },\r\n    levels: [25, 35],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.coolQOLCubes.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.coolQOLCubes.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return  i18next.t('singularity.perkNames.eternalAscensions')\r\n    },\r\n    levels: [25, 101],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.eternalAscensions.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.eternalAscensions.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.antGodsCornucopia')\r\n    },\r\n    levels: [30, 70, 100],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.antGodsCornucopia.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.antGodsCornucopia.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.antGodsCornucopia.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.overclocked')\r\n    },\r\n    levels: [50, 60, 75, 100, 125, 150, 175, 200, 225, 250],\r\n    description: (n: number, levels: number[]) => {\r\n      for (let i = levels.length - 1; i >= 0; i--) {\r\n        if (n >= levels[i]) {\r\n          return i18next.t('singularity.perks.overclocked', { i: i + 1 })\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.evenMoreQuarks.bug')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.wowCubeAutomatedShipping')\r\n    },\r\n    levels: [50, 150],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.wowCubeAutomatedShipping.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.wowCubeAutomatedShipping.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.goldenRevolution')\r\n    },\r\n    levels: [100],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.goldenRevolution', {\r\n        current: format(Math.min(100, 0.4 * player.singularityCount), 1)\r\n      })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.goldenRevolutionII')\r\n    },\r\n    levels: [100],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.goldenRevolutionII', {\r\n        current: format(Math.min(50, 0.2 * player.singularityCount), 1)\r\n      })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.goldenRevolutionIII')\r\n    },\r\n    levels: [100],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.goldenRevolutionIII', {\r\n        current: format(Math.min(500, 2 * player.singularityCount))\r\n      })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.platonicClones')\r\n    },\r\n    levels: [100, 200],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.platonicClones.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.platonicClones.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.platSigma')\r\n    },\r\n    levels: [125, 200],\r\n    description: (n: number, levels: number[]) => {\r\n      let counter = 0\r\n      for (const singCount of levels) {\r\n        if (n >= singCount) {\r\n          counter += 0.125\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.platSigma', {\r\n        counter,\r\n        current: format(Math.min(50, counter*player.singularityCount), 1)\r\n      })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.midasMilleniumAgedGold')\r\n    },\r\n    levels: [150],\r\n    description: () => {\r\n      return i18next.t('singularity.perks.midasMilleniumAgedGold')\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.goldenRevolution4')\r\n    },\r\n    levels: [160, 173, 185, 194, 204, 210, 219, 229, 240, 249],\r\n    description: (n: number, levels: number[]) => {\r\n      const perSecond = 1000000\r\n      let divisor = 0\r\n      for (const singCount of levels) {\r\n        if (n >= singCount) {\r\n          divisor += 1\r\n        }\r\n      }\r\n\r\n      return i18next.t('singularity.perks.goldenRevolution4', { gq: format(perSecond / divisor, 0, true) })\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.octeractMetagenesis')\r\n    },\r\n    levels: [200, 205],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.octeractMetagenesis.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.octeractMetagenesis.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.immaculateAlchemy')\r\n    },\r\n    levels: [200, 208, 221],\r\n    description: (n: number, levels: number[]) => {\r\n      if (n >= levels[2]) {\r\n        return i18next.t('singularity.perks.immaculateAlchemy.hasLevel2')\r\n      } else if (n >= levels[1]) {\r\n        return i18next.t('singularity.perks.immaculateAlchemy.hasLevel1')\r\n      } else {\r\n        return i18next.t('singularity.perks.immaculateAlchemy.default')\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: () => {\r\n      return i18next.t('singularity.perkNames.skrauQ')\r\n    },\r\n    levels: [200],\r\n    description: () => {\r\n      const amt = Math.pow((player.singularityCount - 179) / 20, 2)\r\n      return i18next.t('singularity.perks.skrauQ', { amt })\r\n    }\r\n  }\r\n]\r\n\r\nexport const updateSingularityPerks = (): void => {\r\n  const singularityCount = player.highestSingularityCount\r\n  const str = i18next.t('singularity.perks.update', {\r\n    ord: toOrdinal(singularityCount),\r\n    extra: getAvailablePerksDescription(singularityCount)\r\n  })\r\n\r\n  DOMCacheGetOrSet('singularityPerksMultiline').innerHTML = str\r\n}\r\n\r\nexport interface ISingularityPerkDisplayInfo {\r\n    name: string\r\n    description: string\r\n    currentLevel: number\r\n    lastUpgraded: number\r\n    nextUpgrade: number | null\r\n    acquired: number\r\n}\r\n\r\n/*\r\n* Indicate current level of the Perk and when it was reached\r\n*/\r\nconst getLastUpgradeInfo = (perk: SingularityPerk, singularityCount: number): {level: number, singularity: number, next: number | null} => {\r\n  for (let i=perk.levels.length - 1; i >= 0; i--) {\r\n    if (singularityCount >= perk.levels[i]) {\r\n      return {\r\n        level: i + 1,\r\n        singularity: perk.levels[i],\r\n        next: i < perk.levels.length - 1 ? perk.levels[i + 1] : null\r\n      }\r\n    }\r\n  }\r\n\r\n  return { level: 0, singularity: perk.levels[0], next: perk.levels[0] }\r\n}\r\n\r\nconst getAvailablePerksDescription = (singularityCount: number): string => {\r\n  let perksText = ''\r\n  let availablePerks: ISingularityPerkDisplayInfo[] = []\r\n  const nextUpgrades: number[] = []\r\n  let singularityCountForNextPerk: number | null = null\r\n  for (const perk of singularityPerks) {\r\n    const upgradeInfo = getLastUpgradeInfo(perk, singularityCount)\r\n    if (upgradeInfo.level > 0) {\r\n      availablePerks.push({\r\n        name: perk.name(),\r\n        description: perk.description(singularityCount, perk.levels),\r\n        currentLevel: upgradeInfo.level,\r\n        lastUpgraded: upgradeInfo.singularity,\r\n        nextUpgrade: upgradeInfo.next,\r\n        acquired: perk.levels[0]\r\n      })\r\n      if (upgradeInfo.next) {\r\n        nextUpgrades.push(upgradeInfo.next)\r\n      }\r\n    } else {\r\n      singularityCountForNextPerk = upgradeInfo.singularity\r\n      break\r\n    }\r\n  }\r\n\r\n  // We want to sort the perks so that the most recently upgraded or lastUpgraded are listed first\r\n  availablePerks = availablePerks.sort((p1, p2) => {\r\n    if (p1.acquired == p2.acquired && p1.lastUpgraded == p2.lastUpgraded) {\r\n      return 0\r\n    }\r\n    if (p1.lastUpgraded > p2.lastUpgraded) {\r\n      return -1\r\n    } else if (p1.lastUpgraded == p2.lastUpgraded && p1.acquired > p2.acquired) {\r\n      return -1\r\n    }\r\n    return 1\r\n  })\r\n\r\n  for (const availablePerk of availablePerks) {\r\n    perksText += '<br/>' + formatPerkDescription(availablePerk, singularityCount)\r\n  }\r\n  perksText += '<br/>'\r\n  if (singularityCountForNextPerk) {\r\n    perksText += `<br/>${i18next.t('singularity.perks.unlockedIn', { sing: singularityCountForNextPerk })}`\r\n  }\r\n  const singularityCountForNextPerkUpgrade = nextUpgrades.reduce((a, b) => Math.min(a, +b), Infinity)\r\n  if (singularityCountForNextPerkUpgrade < Infinity) {\r\n    perksText += `<br/>${i18next.t('singularity.perks.improvedIn', { sing: singularityCountForNextPerkUpgrade })}`\r\n  }\r\n  return perksText\r\n}\r\n\r\nfunction formatPerkDescription(perkData: ISingularityPerkDisplayInfo, singularityCount: number): string {\r\n  const singTolerance = getFastForwardTotalMultiplier()\r\n  const isNew = (singularityCount - perkData.lastUpgraded <= singTolerance)\r\n  const levelInfo = perkData.currentLevel > 1 ? ` - ${i18next.t('general.level')} ${perkData.currentLevel}` : ''\r\n  //const acquiredUpgraded = ' / Acq ' + perkData.acquired + ' / Upg ' + perkData.lastUpgraded;\r\n  return `<span${isNew?' class=\"newPerk\"':''} title=\"${perkData.description}\">${perkData.name}${levelInfo}</span>`\r\n}\r\n\r\n// Indicates the number of extra Singularity count gained on Singularity reset\r\nexport const getFastForwardTotalMultiplier = (): number => {\r\n  let fastForward = 0\r\n  fastForward += +player.singularityUpgrades.singFastForward.getEffect().bonus\r\n  fastForward += +player.singularityUpgrades.singFastForward2.getEffect().bonus\r\n  fastForward += +player.octeractUpgrades.octeractFastForward.getEffect().bonus\r\n\r\n  // Stop at sing 200 even if you include fast forward\r\n  fastForward = Math.max(0, Math.min(fastForward, 200 - player.singularityCount - 1))\r\n\r\n  // Please for the love of god don't allow FF during a challenge\r\n  if (player.insideSingularityChallenge) {\r\n    return 0\r\n  }\r\n\r\n  // If the next singularityCount is greater than the highestSingularityCount, fast forward to be equal to the highestSingularityCount\r\n  if (player.highestSingularityCount !== player.singularityCount && player.singularityCount + fastForward + 1 >= player.highestSingularityCount) {\r\n    return Math.max(0, Math.min(fastForward, player.highestSingularityCount - player.singularityCount - 1))\r\n  }\r\n\r\n  return fastForward\r\n}\r\n\r\nexport const getGoldenQuarkCost = (): {\r\n    cost: number\r\n    costReduction: number\r\n} => {\r\n  const baseCost = 10000\r\n\r\n  let costReduction = 10000 // We will construct our cost reduction by subtracting 10000 - this value.\r\n\r\n  costReduction *= (1 - 0.10 * Math.min(1, player.achievementPoints / 10000))\r\n  costReduction *= (1 - 0.3 * player.cubeUpgrades[60] / 10000)\r\n  costReduction *= +player.singularityUpgrades.goldenQuarks2.getEffect().bonus\r\n  costReduction *= +player.octeractUpgrades.octeractGQCostReduce.getEffect().bonus\r\n  costReduction *= (player.highestSingularityCount >= 100 ? 1 - 0.5 * player.highestSingularityCount / 250 : 1)\r\n\r\n  let perkDivisor = 1\r\n  if (player.highestSingularityCount >= 200) {\r\n    perkDivisor = 3\r\n  }\r\n  if (player.highestSingularityCount >= 208) {\r\n    perkDivisor = 5\r\n  }\r\n  if (player.highestSingularityCount >= 221) {\r\n    perkDivisor = 8\r\n  }\r\n  costReduction /= perkDivisor\r\n\r\n  costReduction = 10000 - costReduction\r\n\r\n  return {\r\n    cost: baseCost - costReduction,\r\n    costReduction\r\n  }\r\n\r\n}\r\n\r\nexport async function buyGoldenQuarks(): Promise<void> {\r\n  const goldenQuarkCost = getGoldenQuarkCost()\r\n  const maxBuy = Math.floor(+player.worlds / goldenQuarkCost.cost)\r\n  let buyAmount = null\r\n\r\n  if (maxBuy === 0) {\r\n    return Alert(i18next.t('singularity.goldenQuarks.poor'))\r\n  }\r\n\r\n  const buyPrompt = await Prompt(i18next.t('singularity.goldenQuarks.buyPrompt', {\r\n    cost: format(goldenQuarkCost.cost, 0, true),\r\n    discount: format(goldenQuarkCost.costReduction, 0, true),\r\n    max: format(maxBuy, 0, true)\r\n  }))\r\n\r\n  if (buyPrompt === null) {\r\n    // Number(null) is 0. Yeah..\r\n    return Alert(i18next.t('general.cancelled'))\r\n  }\r\n\r\n  buyAmount = Number(buyPrompt)\r\n  //Check these lol\r\n  if (Number.isNaN(buyAmount) || !Number.isFinite(buyAmount)) {\r\n    // nan + Infinity checks\r\n    return Alert(i18next.t('general.validation.finite'))\r\n  } else if (buyAmount <= 0 && buyAmount != -1) {\r\n    // 0 or less selected\r\n    return Alert(i18next.t('general.validation.zeroOrLess'))\r\n  } else if (buyAmount > maxBuy) {\r\n    return Alert(i18next.t('general.validation.goldenQuarksTooMany'))\r\n  } else if (!Number.isInteger(buyAmount)) {\r\n    // non integer\r\n    return Alert(i18next.t('general.validation.fraction'))\r\n  }\r\n\r\n  let cost\r\n\r\n  if (buyAmount === -1) {\r\n    cost = maxBuy * goldenQuarkCost.cost\r\n    player.worlds.sub(cost)\r\n    player.goldenQuarks += maxBuy\r\n  } else {\r\n    cost = buyAmount * goldenQuarkCost.cost\r\n    player.worlds.sub(cost)\r\n    player.goldenQuarks += buyAmount\r\n  }\r\n\r\n  return Alert(i18next.t('singularity.goldenQuarks.transaction', {\r\n    spent: format(maxBuy, 0, true),\r\n    cost: format(cost, 0, true)\r\n  }))\r\n}\r\n\r\nexport type SingularityDebuffs = 'Offering' | 'Obtainium' | 'Global Speed' | 'Researches' | 'Ascension Speed' | 'Cubes' | 'Cube Upgrades' |\r\n                                 'Platonic Costs' | 'Hepteract Costs'\r\n\r\nexport const calculateEffectiveSingularities = (singularityCount: number = player.singularityCount): number => {\r\n  let effectiveSingularities = singularityCount\r\n  effectiveSingularities *= Math.min(4.75, 0.75 * singularityCount / 10 + 1)\r\n\r\n  if (player.insideSingularityChallenge) {\r\n    if (player.singularityChallenges.noOcteracts.enabled) {\r\n      effectiveSingularities *= Math.pow(player.singularityChallenges.noOcteracts.completions + 1, 3)\r\n    }\r\n  }\r\n\r\n  if (singularityCount > 10) {\r\n    effectiveSingularities *= 1.5\r\n    effectiveSingularities *= Math.min(4, 1.25 * singularityCount / 10 - 0.25)\r\n  }\r\n  if (singularityCount > 25) {\r\n    effectiveSingularities *= 2.5\r\n    effectiveSingularities *= Math.min(6, 1.5 * singularityCount / 25 - 0.5)\r\n  }\r\n  if (singularityCount > 36) {\r\n    effectiveSingularities *= 4\r\n    effectiveSingularities *= Math.min(5, singularityCount / 18 - 1)\r\n    effectiveSingularities *= Math.pow(1.1, Math.min(singularityCount - 36, 64))\r\n  }\r\n  if (singularityCount > 50) {\r\n    effectiveSingularities *= 5\r\n    effectiveSingularities *= Math.min(8, 2 * singularityCount / 50 - 1)\r\n    effectiveSingularities *= Math.pow(1.1, Math.min(singularityCount - 50, 50))\r\n  }\r\n  if (singularityCount > 100) {\r\n    effectiveSingularities *= 2\r\n    effectiveSingularities *= singularityCount / 25\r\n    effectiveSingularities *= Math.pow(1.1, singularityCount - 100)\r\n  }\r\n  if (singularityCount > 150) {\r\n    effectiveSingularities *= 2\r\n    effectiveSingularities *= Math.pow(1.05, singularityCount - 150)\r\n  }\r\n  if (singularityCount > 200) {\r\n    effectiveSingularities *= 1.5\r\n    effectiveSingularities *= Math.pow(1.275, singularityCount - 200)\r\n  }\r\n  if (singularityCount > 215) {\r\n    effectiveSingularities *= 1.25\r\n    effectiveSingularities *= Math.pow(1.2, singularityCount - 215)\r\n  }\r\n  if (singularityCount > 230) {\r\n    effectiveSingularities *= 2\r\n  }\r\n\r\n  return effectiveSingularities\r\n}\r\n\r\nexport const calculateNextSpike = (singularityCount: number = player.singularityCount): number => {\r\n  const singularityPenaltyThreshold = [11, 26, 37, 51, 101, 151, 201, 216, 230]\r\n  let penaltyDebuff = 0\r\n  penaltyDebuff += player.shopUpgrades.shopSingularityPenaltyDebuff\r\n\r\n  for (const sing of singularityPenaltyThreshold) {\r\n    if (sing + penaltyDebuff > singularityCount) {\r\n      return (sing + penaltyDebuff)\r\n    }\r\n  }\r\n  return -1\r\n}\r\nexport const calculateSingularityDebuff = (debuff: SingularityDebuffs, singularityCount: number=player.singularityCount) => {\r\n  if (singularityCount === 0) {\r\n    return 1\r\n  }\r\n  if (player.runelevels[6] > 0) {\r\n    return 1\r\n  }\r\n\r\n  let constitutiveSingularityCount = singularityCount\r\n  constitutiveSingularityCount -= player.shopUpgrades.shopSingularityPenaltyDebuff\r\n\r\n  const effectiveSingularities = calculateEffectiveSingularities(constitutiveSingularityCount)\r\n\r\n  if (debuff === 'Offering') {\r\n    return Math.sqrt(Math.min(effectiveSingularities, calculateEffectiveSingularities(150)) + 1)\r\n  } else if (debuff === 'Global Speed') {\r\n    return 1 + Math.sqrt(effectiveSingularities) / 4\r\n  } else if (debuff === 'Obtainium') {\r\n    return Math.sqrt(Math.min(effectiveSingularities, calculateEffectiveSingularities(150))  + 1)\r\n  } else if (debuff === 'Researches') {\r\n    return 1 + Math.sqrt(effectiveSingularities) / 2\r\n  } else if (debuff === 'Ascension Speed') {\r\n    return (singularityCount < 150) ?\r\n      1 + Math.sqrt(effectiveSingularities) / 5:\r\n      1 + Math.pow(effectiveSingularities, 0.75) / 10000\r\n  } else if (debuff === 'Cubes') {\r\n    return (player.singularityCount < 150) ?\r\n      1 + Math.sqrt(effectiveSingularities) / 4:\r\n      1 + Math.pow(effectiveSingularities, 0.75) / 1000\r\n  } else if (debuff === 'Platonic Costs') {\r\n    return (singularityCount > 36) ? 1 + Math.pow(effectiveSingularities, 3/10) / 12 : 1\r\n  } else if (debuff === 'Hepteract Costs') {\r\n    return (singularityCount > 50) ? 1 + Math.pow(effectiveSingularities, 11/50) / 25 : 1\r\n  } else {\r\n    // Cube upgrades\r\n    return Math.cbrt(effectiveSingularities + 1)\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { calculateSummationNonLinear, calculateRuneLevels, calculateAnts } from './Calculate'\r\nimport { revealStuff, updateChallengeDisplay } from './UpdateHTML'\r\nimport { Globals as G } from './Variables'\r\nimport { updateClassList } from './Utility'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport type { IMultiBuy } from './Cubes'\r\nimport { calculateSingularityDebuff } from './singularity'\r\nimport i18next from 'i18next'\r\n\r\nconst getResearchCost = (index: number, buyAmount = 1, linGrowth = 0): IMultiBuy => {\r\n  buyAmount = Math.min(G.researchMaxLevels[index] - player.researches[index], buyAmount)\r\n  const metaData = calculateSummationNonLinear(player.researches[index], G.researchBaseCosts[index] * calculateSingularityDebuff('Researches'), player.researchPoints, linGrowth, buyAmount)\r\n  return metaData\r\n}\r\n\r\nexport const updateAutoResearch = (index: number, auto: boolean) => {\r\n  /* If Cube Upgrade 9 (1x9) is purchased, then automation behaves differently.\r\n     If not purchased, then clicking on a research icon while auto toggled will update research for you.*/\r\n  if (autoResearchEnabled() && auto && player.autoResearchMode === 'cheapest') {\r\n\r\n    player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n\r\n    // Checks if this is maxed. If so we proceed to the next research.\r\n    if (isResearchMaxed(player.autoResearch)) {\r\n      DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n      player.roombaResearchIndex = Math.min(\r\n        G.researchOrderByCost.length - 1,\r\n        player.roombaResearchIndex + 1\r\n      )\r\n    }\r\n\r\n    // Checks against researches invalid or not unlocked.\r\n    while (!isResearchUnlocked(player.autoResearch) && player.autoResearch < 200 && player.autoResearch >= 76) {\r\n      player.roombaResearchIndex += 1\r\n      player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n    }\r\n\r\n    // Researches that are unlocked work\r\n    if (isResearchUnlocked(player.autoResearch)) {\r\n      const idx = Math.max(G.researchOrderByCost[player.roombaResearchIndex], 1)\r\n      const doc = DOMCacheGetOrSet(`res${idx}`)\r\n      if (player.researches[player.autoResearch] < G.researchMaxLevels[player.autoResearch]) {\r\n        doc.classList.add('researchRoomba')\r\n      }\r\n    }\r\n\r\n    return\r\n  } else if (!auto && (!autoResearchEnabled() || player.autoResearchMode === 'manual')) {\r\n    /* We remove the old research HTML from the 'roomba' class and make the new index our 'roomba'\r\n           class. We then update the index and consequently the coloring of the background based\r\n           on what level (if any) the research has. This functionality is useless after\r\n           Cube Upgrade 9 (1x9) has been purchased. */\r\n    DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n    DOMCacheGetOrSet(`res${index}`).classList.add('researchRoomba')\r\n    player.autoResearch = index\r\n\r\n    // Research is maxed\r\n    if (player.researches[index] >= G.researchMaxLevels[index]) {\r\n      updateClassList(`res${player.autoResearch}`, ['researchMaxed'], ['researchPurchased', 'researchUnpurchased'])\r\n    } else if (player.researches[index] >= 1) {\r\n      // Research purchased above level 0 but not maxed\r\n      updateClassList(`res${player.autoResearch}`, ['researchPurchased'], ['researchUnpurchased', 'researchMaxed'])\r\n    } else {\r\n      // Research has not been purchased yet\r\n      updateClassList(`res${player.autoResearch}`, ['researchUnpurchased'], ['researchPurchased', 'researchMaxed'])\r\n    }\r\n\r\n    return\r\n  } else {\r\n    return\r\n  } //There might be code needed here. I don't quite know yet. -Platonic\r\n}\r\n\r\n/**\r\n * Should the user have access to autoResearch\r\n * @returns boolean\r\n */\r\nexport const autoResearchEnabled = (): boolean => {\r\n  return (player.cubeUpgrades[9] === 1 || player.highestSingularityCount > 10)\r\n}\r\n/**\r\n * Attempts to buy the research of the index selected. This is hopefully an improvement over buyResearch. Fuck\r\n * @param index\r\n * @param auto\r\n * @param linGrowth\r\n * @returns\r\n */\r\nexport const buyResearch = (index: number, auto = false, linGrowth = 0, hover = false): boolean => {\r\n\r\n  // Get our costs, and determine if anything is purchasable.\r\n  const buyAmount = (player.researchBuyMaxToggle || auto || hover) ? 1e5: 1\r\n  const metaData = getResearchCost(index, buyAmount, linGrowth) /* Destructuring FTW! */\r\n  const canBuy = (player.researchPoints >= metaData.cost)\r\n\r\n  if (canBuy && isResearchUnlocked(index) && !isResearchMaxed(index)) {\r\n    player.researches[index] = metaData.levelCanBuy\r\n    player.researchPoints -= metaData.cost\r\n    // Quick check after upgrading for max. This is to update any automation regardless of auto state\r\n    if (isResearchMaxed(index)) {\r\n      DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n    }\r\n\r\n    // Update the progress description\r\n    G.researchfiller2 = `Level: ${player.researches[index]}/${G.researchMaxLevels[index]}`\r\n    researchDescriptions(index, auto, linGrowth)\r\n\r\n    // Handle special cases: Researches 47-50 (2x21-2x25)\r\n    // I love the ||= operator -Platonic\r\n    player.unlocks.rrow1 ||= true\r\n    player.unlocks.rrow2 ||= true\r\n    player.unlocks.rrow3 ||= true\r\n    player.unlocks.rrow4 ||= true\r\n    if (index >= 47 && index <= 50) {\r\n      revealStuff()\r\n    }\r\n    if ((index >= 66 && index <= 70) || index === 105) {\r\n      updateChallengeDisplay()\r\n    }\r\n\r\n    // Update ants and runes.\r\n    calculateRuneLevels()\r\n    calculateAnts()\r\n  }\r\n\r\n  // Update HTML for auto stuff if auto research is ever toggled.\r\n  if (player.autoResearchToggle) {\r\n    updateAutoResearch(index, auto)\r\n  }\r\n\r\n  // Note to anyone reading this code: I forget why this needs to return a Boolean.\r\n  // -Platonic\r\n  return canBuy\r\n}\r\n\r\n/**\r\n * Calculates the max research index for the research roomba\r\n */\r\nexport const maxRoombaResearchIndex = (p = player) => {\r\n  const base = p.ascensionCount > 0 ? 140 : 125 // 125 researches pre-A + 15 from A\r\n  const c11 = p.challengecompletions[11] > 0 ? 15 : 0\r\n  const c12 = p.challengecompletions[12] > 0 ? 15 : 0\r\n  const c13 = p.challengecompletions[13] > 0 ? 15 : 0\r\n  const c14 = p.challengecompletions[14] > 0 ? 15 : 0\r\n  return base + c11 + c12 + c13 + c14\r\n}\r\n\r\nexport const isResearchUnlocked = (index: number) => {\r\n  // https://stackoverflow.com/questions/20477177/creating-an-array-of-cumulative-sum-in-javascript\r\n  const cumuSum = (sum => (value: number) => sum += value)(0)\r\n  const indices = [3 * 25, 5, 20, 10, 15, 15, 15, 15, 15, 15].map(cumuSum)\r\n  const chievos = [50, 124, 127, 134, 141, 183, 197, 204, 211, 218]\r\n  for (let i = 0; i < indices.length; i++) {\r\n    if (i === 3 && (index === 121 || index === 124 || index === 150)) {\r\n      return player.achievements[chievos[i]] > 0\r\n    }\r\n    if (index <= indices[i]) {\r\n      return player.achievements[chievos[i]] > 0\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nconst isResearchMaxed = (index: number) => G.researchMaxLevels[index] <= player.researches[index]\r\n\r\nexport const researchDescriptions = (i: number, auto = false, linGrowth = 0) => {\r\n  const buyAmount = (player.researchBuyMaxToggle || auto) ? 100000 : 1\r\n  const y = i18next.t(`researches.descriptions.${i}`)\r\n  const p = `res${i}`\r\n\r\n  if (player.toggles[38] && player.singularityCount > 0) {\r\n    buyResearch(i, false, i === 200 ? 0.01 : 0, true)\r\n  }\r\n\r\n  const metaData = getResearchCost(i, buyAmount, linGrowth)\r\n  let z = i18next.t('researches.cost', {\r\n    x: format(metaData.cost, 0, false),\r\n    y: format(metaData.levelCanBuy - player.researches[i], 0, true)\r\n  })\r\n\r\n  if (player.researches[i] === (G.researchMaxLevels[i])) {\r\n    DOMCacheGetOrSet('researchcost').style.color = 'Gold'\r\n    DOMCacheGetOrSet('researchinfo3').style.color = 'plum'\r\n    updateClassList(p, ['researchMaxed'], ['researchAvailable', 'researchPurchased', 'researchPurchasedAvailable'])\r\n    z += i18next.t('researches.maxed')\r\n  } else {\r\n    DOMCacheGetOrSet('researchcost').style.color = 'limegreen'\r\n    DOMCacheGetOrSet('researchinfo3').style.color = 'white'\r\n    if (player.researches[i] > 0) {\r\n      updateClassList(p, ['researchPurchased', 'researchPurchasedAvailable'], ['researchAvailable', 'researchMaxed', 'researchUnpurchased'])\r\n    } else {\r\n      updateClassList(p, ['researchAvailable'], ['researchPurchased', 'researchMaxed', 'researchUnpurchased'])\r\n    }\r\n  }\r\n\r\n  if (player.researchPoints < metaData.cost && player.researches[i] < (G.researchMaxLevels[i])) {\r\n    DOMCacheGetOrSet('researchcost').style.color = 'var(--crimson-text-color)'\r\n    updateClassList(p, [], ['researchMaxed', 'researchAvailable', 'researchPurchasedAvailable'])\r\n  }\r\n\r\n  DOMCacheGetOrSet('researchinfo2').textContent = y\r\n  DOMCacheGetOrSet('researchcost').textContent = z\r\n  DOMCacheGetOrSet('researchinfo3').textContent =  i18next.t('researches.level', {\r\n    x: player.researches[i],\r\n    y: G.researchMaxLevels[i]\r\n  })\r\n}\r\n\r\nexport const updateResearchBG = (j: number) => {\r\n\r\n  if (player.researches[j] > G.researchMaxLevels[j]) {\r\n    player.researchPoints += (player.researches[j] - G.researchMaxLevels[j]) * G.researchBaseCosts[j]\r\n    player.researches[j] = G.researchMaxLevels[j]\r\n  }\r\n\r\n  const k = `res${j}`\r\n  if (player.researches[j] > 0.5 && player.researches[j] < G.researchMaxLevels[j]) {\r\n    updateClassList(k, ['researchPurchased'], ['researchUnpurchased', 'researchMaxed'])\r\n  } else if (player.researches[j] > 0.5 && player.researches[j] >= G.researchMaxLevels[j]) {\r\n    updateClassList(k, ['researchMaxed'], ['researchUnpurchased', 'researchPurchased'])\r\n  } else {\r\n    updateClassList(k, ['researchUnpurchased'], ['researchPurchased', 'researchMaxed'])\r\n  }\r\n}\r\n", "import { player } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\n\r\ntype Bless = keyof typeof player['hypercubeBlessings']\r\n\r\nexport const calculateHypercubeBlessings = () => {\r\n  // The visual updates are handled in visualUpdateCubes()\r\n\r\n  // we use Object.keys here instead of a for-in loop because we need the index of the key.\r\n  const keys = Object.keys(player.hypercubeBlessings)\r\n\r\n  for (const key of keys) {\r\n    const obj = player.hypercubeBlessings[key as Bless]\r\n    const idx = keys.indexOf(key) + 1\r\n\r\n    let power = 1\r\n    let mult = 1\r\n    if (obj >= 1000) {\r\n      power = G.benedictionDRPower[idx]!\r\n      mult *= Math.pow(1000, (1 - G.benedictionDRPower[idx]!))\r\n    }\r\n\r\n    G.hypercubeBonusMultiplier[idx] = 1 + mult * G.benedictionbase[idx]! * Math.pow(obj, power) * G.platonicBonusMultiplier[4]\r\n  }\r\n}\r\n", "import { player } from './Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\nexport const toggleTheme = (initial = false, themeNumber = 1, change = false) => {\r\n  const themeButton = DOMCacheGetOrSet('theme')\r\n  const body = document.body\r\n\r\n  if (change) {\r\n    localStorage.setItem('theme', `${themeNumber}`)\r\n    body.style.setProperty('--transition', '750ms')\r\n    body.style.setProperty('--transition-extra', '600ms')\r\n  } else {\r\n    themeNumber = Number(localStorage.getItem('theme') ?? 1)\r\n  }\r\n\r\n  /* Full reset for easy out of order change */\r\n  if (!initial) { //For quicker first load\r\n    body.style.removeProperty('--header-color')\r\n    body.style.removeProperty('--bg-color')\r\n    body.style.removeProperty('--alert-color')\r\n    body.style.removeProperty('--history-lines')\r\n    body.style.removeProperty('--text-color')\r\n    body.style.removeProperty('--green-text-color')\r\n    body.style.removeProperty('--lightseagreen-text-color')\r\n    body.style.removeProperty('--crimson-text-color')\r\n    body.style.removeProperty('--red-text-color')\r\n    body.style.removeProperty('--maroon-text-color')\r\n    body.style.removeProperty('--orchid-text-color')\r\n    body.style.removeProperty('--darkorchid-text-color')\r\n    body.style.removeProperty('--darkcyan-text-color')\r\n    body.style.removeProperty('--gray-text-color')\r\n    body.style.removeProperty('--orangered-text-color')\r\n    body.style.removeProperty('--box-color')\r\n    body.style.removeProperty('--boxmain-bordercolor')\r\n    body.style.removeProperty('--button-color')\r\n    body.style.removeProperty('--hover-color')\r\n    body.style.removeProperty('--blackbtn-color')\r\n    body.style.removeProperty('--purplebtn-color')\r\n    body.style.removeProperty('--purplehover-color')\r\n    body.style.removeProperty('--buttonbuy-color')\r\n    body.style.removeProperty('--buildings-canbuy-color')\r\n    body.style.removeProperty('--buildings-hover-color')\r\n    body.style.removeProperty('--blessings-canbuy-color')\r\n    body.style.removeProperty('--blessings-hover-color')\r\n    body.style.removeProperty('--tab-color')\r\n    body.style.removeProperty('--singtab-color')\r\n    body.style.removeProperty('--hoversing-color')\r\n    body.style.removeProperty('--shoptab-color')\r\n    body.style.removeProperty('--hovershop-color')\r\n    body.style.removeProperty('--hepteract-bar-empty')\r\n    body.style.removeProperty('--hepteract-bar-red')\r\n    body.style.removeProperty('--hepteract-bar-yellow')\r\n    body.style.removeProperty('--hepteract-bar-green')\r\n    body.classList.remove('textOutline')\r\n    //body.classList.add('bodycolor');\r\n    DOMCacheGetOrSet('actualPotionShop').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('actualPotionShop').style.borderColor = ''\r\n    DOMCacheGetOrSet('themeBox').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('themeBox').style.borderColor = ''\r\n    DOMCacheGetOrSet('c15Rewards').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('c15Rewards').style.borderColor = ''\r\n    DOMCacheGetOrSet('platonicUpgradeDescriptions').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('platonicUpgradeDescriptions').style.borderColor = ''\r\n    DOMCacheGetOrSet('platonicUpgradePics').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('platonicUpgradePics').style.borderColor = ''\r\n    DOMCacheGetOrSet('actualShop').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('actualShop').style.borderColor = ''\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = ''\r\n    DOMCacheGetOrSet('heptGrid').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('heptGrid').style.borderColor = ''\r\n    DOMCacheGetOrSet('exportgame').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('importFileButton').style.backgroundColor = ''\r\n    DOMCacheGetOrSet('switchTheme2').style.borderColor = 'darkslategray'\r\n\r\n    DOMCacheGetOrSet('bonussummation').style.color = 'orangered' //CSS colors, instead of having '', will write out full color, in case someone will move CSS color into HTML\r\n    DOMCacheGetOrSet('corruptionDescription').style.color = 'darkviolet'\r\n    DOMCacheGetOrSet('versionnumber').style.color = 'fuchsia'\r\n    DOMCacheGetOrSet('singularitytab').style.color = 'red'\r\n    DOMCacheGetOrSet('traitstab').style.color = 'red'\r\n    DOMCacheGetOrSet('cubetab').style.color = 'red'\r\n    DOMCacheGetOrSet('ascTimeAccel').style.color = 'royalblue'\r\n    DOMCacheGetOrSet('buildinghotkeys').style.color = 'lightgray'\r\n    DOMCacheGetOrSet('buildinghotkeys2').style.color = 'lightgray'\r\n    DOMCacheGetOrSet('antspecies').style.color = 'royalblue' //HTML colors\r\n    DOMCacheGetOrSet('achievementcolorcode2').style.color = 'purple'\r\n    DOMCacheGetOrSet('corruptionTesseracts').style.color = 'darkviolet'\r\n    DOMCacheGetOrSet('antwelcome').style.color = 'lightslategrey'\r\n    DOMCacheGetOrSet('confirmationToggleTitle').style.color = 'pink'\r\n    DOMCacheGetOrSet('specialActionsTitle').style.color = 'pink'\r\n    DOMCacheGetOrSet('themesTitle').style.color = 'pink'\r\n    DOMCacheGetOrSet('notationTitle').style.color = 'pink'\r\n    DOMCacheGetOrSet('hepteractWelcome').style.color = 'pink'\r\n    DOMCacheGetOrSet('confirmationdisclaimer').style.color = 'plum'\r\n    DOMCacheGetOrSet('cube6Bonus').style.color = 'brown'\r\n    DOMCacheGetOrSet('tesseract6Bonus').style.color = 'brown'\r\n    DOMCacheGetOrSet('hypercube6Bonus').style.color = 'brown'\r\n    DOMCacheGetOrSet('runeshowpower5').style.color = 'tomato'\r\n    DOMCacheGetOrSet('hypercubeWelcome').style.color = '#ff004c' //Hypercube colors\r\n    DOMCacheGetOrSet('hypercubeQuantity').style.color = '#ff004c'\r\n    DOMCacheGetOrSet('hypercubeBlessingsTotal').style.color = '#ff004c'\r\n  } else {\r\n    if (themeNumber === 4) {\r\n      DOMCacheGetOrSet('logo').setAttribute('src', 'Pictures/logoLight.png')\r\n    }\r\n  }\r\n\r\n  if (themeNumber === 1) {\r\n    localStorage.removeItem('theme')\r\n    themeButton.textContent = 'Dark Mode'\r\n  } else if (themeNumber === 2) { //'Darker Mode'\r\n    body.style.setProperty('--header-color', 'black')\r\n    body.style.setProperty('--bg-color', '#0c0c0f')\r\n    body.style.setProperty('--alert-color', '#040406')\r\n    body.style.setProperty('--history-lines', '#1b1b22')\r\n    body.style.setProperty('--box-color', '#060606')\r\n    body.style.setProperty('--boxmain-bordercolor', '#d487d4')\r\n    body.style.setProperty('--button-color', '#040406')\r\n    body.style.setProperty('--hover-color', '#1b1b22')\r\n    body.style.setProperty('--purplebtn-color', '#6f006f')\r\n    body.style.setProperty('--buttonbuy-color', '#040406')\r\n    body.style.setProperty('--buildings-canbuy-color', '#2c2c44')\r\n    body.style.setProperty('--buildings-hover-color', '#3a3a58')\r\n    body.style.setProperty('--blessings-canbuy-color', '#262639')\r\n    body.style.setProperty('--blessings-hover-color', '#33334e')\r\n    body.style.setProperty('--tab-color', 'black')\r\n    body.style.setProperty('--singtab-color', '#002')\r\n    body.style.setProperty('--hoversing-color', '#00007d')\r\n    body.style.setProperty('--shoptab-color', '#6f006f')\r\n    body.style.setProperty('--hepteract-bar-empty', '#3a3a58')\r\n    body.style.setProperty('--hepteract-bar-red', 'darkred')\r\n    body.style.setProperty('--hepteract-bar-yellow', '#997a00')\r\n    body.style.setProperty('--hepteract-bar-green', 'darkgreen')\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#dd8f00'\r\n    DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#dd0'\r\n    DOMCacheGetOrSet('exportgame').style.backgroundColor = 'black' //Special cases\r\n    DOMCacheGetOrSet('importFileButton').style.backgroundColor = 'black'\r\n\r\n    themeButton.textContent = 'Darker Mode'\r\n  } else if (themeNumber === 3) { //'Lighter Dark Mode'\r\n    body.style.setProperty('--header-color', '#18171c')\r\n    body.style.setProperty('--bg-color', '#1c1b22')\r\n    body.style.setProperty('--alert-color', '#141319')\r\n    body.style.setProperty('--history-lines', '#083a3a')\r\n    body.style.setProperty('--box-color', '#141319')\r\n    body.style.setProperty('--boxmain-bordercolor', '#dda0dd')\r\n    body.style.setProperty('--button-color', '#101828')\r\n    body.style.setProperty('--hover-color', '#006')\r\n    body.style.setProperty('--blackbtn-color', '#101828')\r\n    body.style.setProperty('--buttonbuy-color', '#0b111c')\r\n    body.style.setProperty('--buildings-canbuy-color', '#2d4471')\r\n    body.style.setProperty('--buildings-hover-color', '#3c5a95')\r\n    body.style.setProperty('--blessings-canbuy-color', '#1e2e4d')\r\n    body.style.setProperty('--blessings-hover-color', '#2d4471')\r\n    body.style.setProperty('--tab-color', '#101828')\r\n    body.style.setProperty('--hoversing-color', '#005')\r\n    body.style.setProperty('--hepteract-bar-empty', '#535064')\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#ffa500'\r\n    DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#dd0'\r\n    DOMCacheGetOrSet('actualShop').style.backgroundColor = '#0c0c0f' //Special cases\r\n    DOMCacheGetOrSet('actualShop').style.borderColor = '#d487d4'\r\n    DOMCacheGetOrSet('platonicUpgradePics').style.backgroundColor = '#0c0c0f'\r\n    body.style.setProperty('--maroon-text-color', '#a90000')\r\n\r\n    themeButton.textContent = 'Lighter Dark Mode'\r\n  } else if (themeNumber === 4) { //'Light Mode'\r\n    body.classList.add('textOutline')\r\n    body.style.setProperty('--header-color', '#736e8d')\r\n    body.style.setProperty('--bg-color', '#7c7891')\r\n    body.style.setProperty('--alert-color', '#646175')\r\n    body.style.setProperty('--history-lines', '#156e71')\r\n    body.style.setProperty('--box-color', '#646175')\r\n    body.style.setProperty('--boxmain-bordercolor', '#d894d8')\r\n    body.style.setProperty('--button-color', '#136062')\r\n    body.style.setProperty('--hover-color', '#187c7f')\r\n    body.style.setProperty('--blackbtn-color', '#105254')\r\n    body.style.setProperty('--buttonbuy-color', '#4c495a')\r\n    body.style.setProperty('--buildings-canbuy-color', '#9794a8')\r\n    body.style.setProperty('--buildings-hover-color', '#b2b0bf')\r\n    body.style.setProperty('--blessings-canbuy-color', '#6c687f')\r\n    body.style.setProperty('--blessings-hover-color', '#7c7990')\r\n    body.style.setProperty('--tab-color', '#105254')\r\n    body.style.setProperty('--singtab-color', '#00d')\r\n    body.style.setProperty('--hoversing-color', '#1052B6')\r\n    body.style.setProperty('--hepteract-bar-empty', '#858199')\r\n    body.style.setProperty('--hepteract-bar-red', '#ea1741')\r\n    body.style.setProperty('--hepteract-bar-yellow', '#cc0')\r\n    body.style.setProperty('--hepteract-bar-green', 'limegreen')\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#dd8f00'\r\n    DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#dd0'\r\n    DOMCacheGetOrSet('switchTheme2').style.borderColor = '#284242' //Special Cases\r\n    body.style.setProperty('--green-text-color', 'limegreen')\r\n    body.style.setProperty('--red-text-color', '#f55')\r\n    body.style.setProperty('--maroon-text-color', '#ff5656')\r\n    body.style.setProperty('--crimson-text-color', '#f7617d')\r\n    body.style.setProperty('--orchid-text-color', '#dd7dda')\r\n    body.style.setProperty('--darkorchid-text-color', '#cf9ee8')\r\n    body.style.setProperty('--darkcyan-text-color', 'turquoise')\r\n    body.style.setProperty('--lightseagreen-text-color', 'limegreen')\r\n    body.style.setProperty('--orangered-text-color', '#f74')\r\n    body.style.setProperty('--gray-text-color', '#a5a5a5')\r\n    DOMCacheGetOrSet('achievementcolorcode2').style.color = '#dc7dff'\r\n    DOMCacheGetOrSet('corruptionDescription').style.color = '#d272ff'\r\n    DOMCacheGetOrSet('corruptionTesseracts').style.color = '#d272ff'\r\n    DOMCacheGetOrSet('antwelcome').style.color = '#b1b1b1'\r\n    DOMCacheGetOrSet('versionnumber').style.color = '#ff5aff'\r\n    DOMCacheGetOrSet('singularitytab').style.color = '#ff5252'\r\n    DOMCacheGetOrSet('traitstab').style.color = '#ff5252'\r\n    DOMCacheGetOrSet('cubetab').style.color = '#ff5252'\r\n    DOMCacheGetOrSet('antspecies').style.color = '#8da9ff'\r\n    DOMCacheGetOrSet('ascTimeAccel').style.color = '#97b0ff'\r\n    DOMCacheGetOrSet('cube6Bonus').style.color = '#a5a5a5'\r\n    DOMCacheGetOrSet('tesseract6Bonus').style.color = '#a5a5a5'\r\n    DOMCacheGetOrSet('hypercube6Bonus').style.color = '#a5a5a5'\r\n    DOMCacheGetOrSet('hypercubeWelcome').style.color = '#f58'\r\n    DOMCacheGetOrSet('hypercubeQuantity').style.color = '#f58'\r\n    DOMCacheGetOrSet('hypercubeBlessingsTotal').style.color = '#f58'\r\n    DOMCacheGetOrSet('runeshowpower5').style.color = '#ff7158'\r\n\r\n    themeButton.textContent = 'Light Mode'\r\n  } else if (themeNumber === 5) { //'Dracula Mode'\r\n    body.style.setProperty('--header-color', '#0a0a11')\r\n    body.style.setProperty('--bg-color', '#131319')\r\n    body.style.setProperty('--alert-color', '#2a1035')\r\n    body.style.setProperty('--history-lines', '#012d1c')\r\n    body.style.setProperty('--text-color', '#ac47ff')\r\n    body.style.setProperty('--maroon-text-color', '#c30000')\r\n    body.style.setProperty('--crimson-text-color', '#eb0000')\r\n    body.style.setProperty('--orchid-text-color', '#fd59f7')\r\n    body.style.setProperty('--darkorchid-text-color', '#c205ff')\r\n    body.style.setProperty('--gray-text-color', '#8f8f8f')\r\n    body.style.setProperty('--box-color', '#000000')\r\n    body.style.setProperty('--boxmain-bordercolor', '#b341e0')\r\n    body.style.setProperty('--button-color', '#21003f')\r\n    body.style.setProperty('--hover-color', '#00056a')\r\n    body.style.setProperty('--blackbtn-color', '#28002a')\r\n    body.style.setProperty('--purplebtn-color', '#5800a0')\r\n    body.style.setProperty('--purplehover-color', '#680927')\r\n    body.style.setProperty('--buttonbuy-color', '#005e00')\r\n    body.style.setProperty('--buildings-canbuy-color', '#a00')\r\n    body.style.setProperty('--buildings-hover-color', '#e00')\r\n    body.style.setProperty('--blessings-canbuy-color', '#004d00')\r\n    body.style.setProperty('--blessings-hover-color', '#800')\r\n    body.style.setProperty('--tab-color', '#1a0030')\r\n    body.style.setProperty('--singtab-color', '#000230')\r\n    body.style.setProperty('--hoversing-color', '#000463')\r\n    body.style.setProperty('--shoptab-color', '#5800a0')\r\n    body.style.setProperty('--hovershop-color', '#7400d3')\r\n    body.style.setProperty('--hepteract-bar-empty', '#4a4a60')\r\n    body.style.setProperty('--hepteract-bar-red', '#c90000')\r\n    body.style.setProperty('--hepteract-bar-yellow', '#919100')\r\n    body.style.setProperty('--hepteract-bar-green', '#007f3b')\r\n    DOMCacheGetOrSet('themeBox').style.backgroundColor = '#0a0a11' //Special cases\r\n    DOMCacheGetOrSet('themeBox').style.borderColor = '#3c006d'\r\n    DOMCacheGetOrSet('c15Rewards').style.backgroundColor = '#2e001b'\r\n    DOMCacheGetOrSet('c15Rewards').style.borderColor = '#186e83'\r\n    DOMCacheGetOrSet('platonicUpgradeDescriptions').style.backgroundColor = '#2e001b'\r\n    DOMCacheGetOrSet('platonicUpgradeDescriptions').style.borderColor = '#186e83'\r\n    DOMCacheGetOrSet('platonicUpgradePics').style.backgroundColor = '#720505'\r\n    DOMCacheGetOrSet('platonicUpgradePics').style.borderColor = '#410303'\r\n    DOMCacheGetOrSet('actualPotionShop').style.backgroundColor = '#01192c'\r\n    DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#04d481'\r\n    DOMCacheGetOrSet('actualShop').style.backgroundColor = '#11111b'\r\n    DOMCacheGetOrSet('actualShop').style.borderColor = '#038ba8'\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.backgroundColor = '#0a0a11'\r\n    DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#04d481'\r\n    DOMCacheGetOrSet('heptGrid').style.backgroundColor = '#11111b'\r\n    DOMCacheGetOrSet('heptGrid').style.borderColor = '#9b7306'\r\n    DOMCacheGetOrSet('achievementcolorcode2').style.color = '#ef00e4' //Text colors\r\n    DOMCacheGetOrSet('corruptionDescription').style.color = '#c205ff'\r\n    DOMCacheGetOrSet('corruptionTesseracts').style.color = '#c205ff'\r\n    DOMCacheGetOrSet('antwelcome').style.color = 'darkgrey'\r\n    DOMCacheGetOrSet('confirmationToggleTitle').style.color = '#eb0000'\r\n    DOMCacheGetOrSet('specialActionsTitle').style.color = '#eb0000'\r\n    DOMCacheGetOrSet('themesTitle').style.color = '#eb0000'\r\n    DOMCacheGetOrSet('notationTitle').style.color = '#eb0000'\r\n    DOMCacheGetOrSet('hepteractWelcome').style.color = '#ac47ff'\r\n    DOMCacheGetOrSet('confirmationdisclaimer').style.color = '#bb68ff'\r\n    DOMCacheGetOrSet('antspecies').style.color = '#184ff3'\r\n    DOMCacheGetOrSet('bonussummation').style.color = '#eb0000'\r\n    DOMCacheGetOrSet('buildinghotkeys').style.color = '#838383'\r\n    DOMCacheGetOrSet('buildinghotkeys2').style.color = '#838383'\r\n\r\n    themeButton.textContent = 'Dracula Mode'\r\n  }\r\n  if (change) {\r\n    setTimeout(() => {\r\n      body.style.removeProperty('--transition')\r\n      body.style.removeProperty('--transition-extra')\r\n    }, 750)\r\n  }\r\n}\r\n\r\nexport const toggleAnnotation = (setting = true) => {\r\n  const notationButton = DOMCacheGetOrSet('notation')\r\n  const current = notationButton.textContent\r\n\r\n  switch (current) {\r\n    case 'Pure Scientific':\r\n      notationButton.textContent = i18next.t('settings.notation.pureEngineering')\r\n      break\r\n    case 'Pure Engineering':\r\n      notationButton.textContent = i18next.t('settings.notation.default')\r\n      break\r\n    default:\r\n      notationButton.textContent = i18next.t('settings.notation.pureScientific')\r\n  }\r\n  if (setting) {\r\n    player.notation = current ?? 'Default'\r\n  }\r\n}\r\n\r\nexport const settingAnnotation = () => {\r\n  let userAnnotation = player.notation\r\n  const maxAnnotations = 10\r\n  const notationButton = DOMCacheGetOrSet('notation')\r\n  for (let i = 0; i < maxAnnotations; i++) {\r\n    const current = notationButton.textContent\r\n    if (current !== null && userAnnotation.toUpperCase() !== current.toUpperCase()) {\r\n      toggleAnnotation(false)\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  userAnnotation = 'DEFAULT'\r\n  for (let i = 0; i < maxAnnotations; i++) {\r\n    const current = notationButton.textContent\r\n    if (current !== null && userAnnotation !== current.toUpperCase()) {\r\n      toggleAnnotation(false)\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\n// IconSets: ['FolderName', 'FallbackSetIndex']\r\n// Make sure new sets have a UNIQUE folder name (not used in icon file names), and it is added to IconSets[][] and IconSetsRegex\r\nexport const IconSets:[string, number][] = [\r\n  ['Legacy', -1],\r\n  ['Default', 0],\r\n  ['Simplified', 1],\r\n  ['Monotonous', 1]\r\n]\r\nexport const IconSetsRegex = new RegExp('Default|Simplified|Monotonous|Legacy')\r\n\r\nexport const toggleIconSet = (changeTo = player.iconSet) => {\r\n  if ((changeTo > (IconSets.length - 1)) || (changeTo < 0)) {\r\n    changeTo = 0\r\n  }\r\n  player.iconSet = changeTo\r\n  Array.from(document.getElementsByTagName('img')).forEach(\r\n    function(img) {\r\n      img.src = img.src.replace(IconSetsRegex, IconSets[player.iconSet][0])\r\n    }\r\n  )\r\n  DOMCacheGetOrSet('iconSet').textContent = i18next.t(`settings.iconSets.${IconSets[player.iconSet][0].toLowerCase()}`)\r\n}\r\n\r\n// If no image is found falls back to designated fallback, then Legacy, then MISSINGIMAGE.png\r\n// MISSINGIMAGE.png(s) will not be replaced except on a full page reload\r\nexport function imgErrorHandler (evt: Event) {\r\n  if (!evt.target || !(evt.target instanceof HTMLImageElement)) {\r\n    return\r\n  }\r\n  const whichImg = evt.target\r\n  const iconSetName = IconSets[player.iconSet][0]\r\n  const fallbackSetNum = IconSets[player.iconSet][1]\r\n  let fallbackSetName = 'Legacy'\r\n  if ((fallbackSetNum >= 0) && (fallbackSetNum < IconSets.length - 1)) {\r\n    fallbackSetName = IconSets[fallbackSetNum][0]\r\n  }\r\n\r\n  if (whichImg.src.includes('Legacy') || !(IconSetsRegex.exec(whichImg.src))) {\r\n    // no image to fall back to\r\n    whichImg.src = './Pictures/MISSINGIMAGE.png'\r\n  } else if (whichImg.src.includes(iconSetName)) {\r\n    // first fall back attempt\r\n    whichImg.src = whichImg.src.replace(IconSetsRegex, fallbackSetName)\r\n  } else {\r\n    // fall back to Legacy\r\n    whichImg.src = whichImg.src.replace(IconSetsRegex, 'Legacy')\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { toggleCorruptionLevel } from './Toggles'\r\nimport { getElementById } from './Utility'\r\nimport { Alert, Prompt } from './UpdateHTML'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { IconSets } from './Themes'\r\nimport i18next from 'i18next'\r\n\r\n//\r\n\r\nexport const maxCorruptionLevel = () => {\r\n  let max = 0\r\n\r\n  if (player.challengecompletions[11] > 0) {\r\n    max += 5\r\n  }\r\n  if (player.challengecompletions[12] > 0) {\r\n    max += 2\r\n  }\r\n  if (player.challengecompletions[13] > 0) {\r\n    max += 2\r\n  }\r\n  if (player.challengecompletions[14] > 0) {\r\n    max += 2\r\n  }\r\n  if (player.platonicUpgrades[5] > 0) {\r\n    max += 1\r\n  }\r\n  if (player.platonicUpgrades[10] > 0) {\r\n    max += 1\r\n  }\r\n\r\n  // Overrides everything above.\r\n  if (player.singularityUpgrades.platonicTau.getEffect().bonus) {\r\n    max = Math.max(13, max)\r\n  }\r\n\r\n  if (player.singularityUpgrades.corruptionFourteen.getEffect().bonus) {\r\n    max += 1\r\n  }\r\n  max += +player.octeractUpgrades.octeractCorruption.getEffect().bonus\r\n\r\n  return max\r\n}\r\n\r\nexport const corruptionDisplay = (index: number) => {\r\n  if (DOMCacheGetOrSet('corruptionDetails').style.visibility !== 'visible') {\r\n    DOMCacheGetOrSet('corruptionDetails').style.visibility = 'visible'\r\n  }\r\n  if (DOMCacheGetOrSet('corruptionSelectedPic').style.visibility !== 'visible') {\r\n    DOMCacheGetOrSet('corruptionSelectedPic').style.visibility = 'visible'\r\n  }\r\n  G.corruptionTrigger = index\r\n  const currentExponent = ((index === 2) && player.usedCorruptions[index] >= 10) ? 1 + 0.04 * player.platonicUpgrades[17] + 2 * Math.min(1, player.platonicUpgrades[17]) : 1\r\n  const protoExponent = ((index === 2) && player.prototypeCorruptions[index] >= 10) ? 1 + 0.04 * player.platonicUpgrades[17] + 2 * Math.min(1, player.platonicUpgrades[17]) : 1\r\n  let bonusLevel = (player.singularityUpgrades.corruptionFifteen.level > 0) ? 1 : 0\r\n  bonusLevel += +player.singularityChallenges.oneChallengeCap.rewards.freeCorruptionLevel\r\n  const bonusText = (bonusLevel > 0) ? `[+${bonusLevel}]` : ''\r\n\r\n  const corruptEffectValues: number[][] = [\r\n    G.viscosityPower,\r\n    G.lazinessMultiplier,\r\n    G.hyperchallengedMultiplier,\r\n    G.illiteracyPower,\r\n    G.deflationMultiplier,\r\n    G.extinctionMultiplier,\r\n    G.droughtMultiplier,\r\n    G.financialcollapsePower,\r\n    [0]\r\n  ]\r\n\r\n  const iconExtensions: string[] = [\r\n    '/CorruptViscocity.png',\r\n    '/CorruptSpatialDilation.png',\r\n    '/CorruptHyperchallenged.png',\r\n    '/CorruptScientificIlliteracy.png',\r\n    '/CorruptDeflation.png',\r\n    '/CorruptExtinction.png',\r\n    '/CorruptDrought.png',\r\n    '/CorruptFinancialCollapse.png'\r\n  ]\r\n\r\n\r\n  let text: Record<'name' | 'description' | 'current' | 'planned' | 'multiplier' | 'spiritContribution' | 'image', string> = {\r\n    name: i18next.t('corruptions.exitCorruption.name'),\r\n    description: i18next.t('corruptions.exitCorruption.description'),\r\n    current: i18next.t('corruptions.exitCorruption.current'),\r\n    planned: i18next.t('corruptions.exitCorruption.planned'),\r\n    multiplier: i18next.t('corruptions.exitCorruption.multiplier'),\r\n    spiritContribution: '',\r\n    image: `Pictures/${IconSets[player.iconSet][0]}/CorruptExit.png`\r\n  }\r\n\r\n  if (index < 10) {\r\n    text = {\r\n      name: i18next.t(`corruptions.names.${index-1}`),\r\n      description: i18next.t(`corruptions.descriptions.${index-1}`),\r\n      current: i18next.t(`corruptions.currentLevel.${index-1}`, { level: format(player.usedCorruptions[index]) + bonusText, effect: format(corruptEffectValues[index-2][player.usedCorruptions[index]], 3) }),\r\n      planned: i18next.t(`corruptions.prototypeLevel.${index-1}`, { level: format(player.prototypeCorruptions[index]) + bonusText, effect: format(corruptEffectValues[index-2][player.prototypeCorruptions[index]], 3) }),\r\n      multiplier: i18next.t('corruptions.scoreMultiplier', { curr: format(Math.pow(G.corruptionPointMultipliers[player.usedCorruptions[index] + bonusLevel], currentExponent), 1), next: format(Math.pow(G.corruptionPointMultipliers[player.prototypeCorruptions[index] + bonusLevel], protoExponent), 1) }),\r\n      spiritContribution: i18next.t('corruptions.spiritEffect', { curr: format(4 * Math.pow(player.usedCorruptions[index] + bonusLevel, 2), 1), next: format(4 * Math.pow(player.prototypeCorruptions[index] + bonusLevel, 2), 1) }),\r\n      image: `Pictures/${IconSets[player.iconSet][0]}${iconExtensions[index-2]}`\r\n    }\r\n  }\r\n\r\n  DOMCacheGetOrSet('corruptionName').textContent = text.name\r\n  DOMCacheGetOrSet('corruptionDescription').textContent = text.description\r\n  DOMCacheGetOrSet('corruptionLevelCurrent').textContent = text.current\r\n  DOMCacheGetOrSet('corruptionLevelPlanned').textContent = text.planned\r\n  DOMCacheGetOrSet('corruptionMultiplierContribution').textContent = text.multiplier\r\n  DOMCacheGetOrSet('corruptionSpiritContribution').textContent = text.spiritContribution\r\n  DOMCacheGetOrSet('corruptionSelectedPic').setAttribute('src', text.image)\r\n\r\n  if (index < 10) {\r\n    DOMCacheGetOrSet(`corrCurrent${index}`).textContent = format(player.usedCorruptions[index])\r\n    DOMCacheGetOrSet(`corrNext${index}`).textContent = format(player.prototypeCorruptions[index])\r\n  }\r\n}\r\n\r\nexport const corruptionStatsUpdate = () => {\r\n  for (let i = 2; i <= 9; i++) {\r\n    // https://discord.com/channels/677271830838640680/706329553639047241/841749032841379901\r\n    const a = DOMCacheGetOrSet(`corrCurrent${i}`)\r\n    const b = DOMCacheGetOrSet(`corrNext${i}`)\r\n    a.textContent = format(player.usedCorruptions[i])\r\n    b.textContent = format(player.prototypeCorruptions[i])\r\n  }\r\n}\r\n\r\nexport const corruptionButtonsAdd = () => {\r\n  const rows = document.getElementsByClassName('corruptionStatRow')\r\n\r\n  for (let i = 0; i < rows.length; i++) {\r\n    const row = rows[i]\r\n\r\n    // Delete rows that already exist\r\n    for (let i = row.children.length - 1; i >= 1; i--) {\r\n      row.children[i].remove()\r\n    }\r\n\r\n    const p = document.createElement('p')\r\n    p.className = 'corrDesc'\r\n    let text = document.createTextNode(i18next.t('corruptions.current'))\r\n    p.appendChild(text)\r\n    let span = document.createElement('span')\r\n    span.id = `corrCurrent${i+2}`\r\n    span.textContent = `${player.usedCorruptions[i+2]}`\r\n    p.appendChild(span)\r\n\r\n    text = document.createTextNode(i18next.t('corruptions.next'))\r\n    p.appendChild(text)\r\n\r\n    span = document.createElement('span')\r\n    span.id = `corrNext${i+2}`\r\n    span.textContent = `${player.prototypeCorruptions[i+2]}`\r\n    p.appendChild(span)\r\n    row.appendChild(p)\r\n\r\n    let btn\r\n    btn = document.createElement('button')\r\n    btn.className = 'corrBtn corruptionMax'\r\n    btn.textContent = `+${i18next.t('corruptions.max')}`\r\n    btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, 99))\r\n    row.appendChild(btn)\r\n\r\n    btn = document.createElement('button')\r\n    btn.className = 'corrBtn corruptionUp'\r\n    btn.textContent = '+1'\r\n    btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, 1))\r\n    row.appendChild(btn)\r\n\r\n    btn = document.createElement('button')\r\n    btn.className = 'corrBtn corruptionDown'\r\n    btn.textContent = '-1'\r\n    btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, -1))\r\n    row.appendChild(btn)\r\n\r\n    btn = document.createElement('button')\r\n    btn.className = 'corrBtn corruptionReset'\r\n    btn.textContent = `-${i18next.t('corruptions.max')}`\r\n    btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, -99))\r\n    row.appendChild(btn)\r\n    row.addEventListener('click', () => corruptionDisplay(i + 2))\r\n  }\r\n}\r\n\r\nexport const corruptionLoadoutTableCreate = () => {\r\n  const corrCount = 8\r\n  const table = getElementById<HTMLTableElement>('corruptionLoadoutTable')\r\n\r\n  // Delete rows that already exist\r\n  for (let i = table.rows.length - 1; i >= 1; i--) {\r\n    table.deleteRow(i)\r\n  }\r\n\r\n  for (let i = 0; i < Object.keys(player.corruptionLoadouts).length + 1; i++) {\r\n    const row = table.insertRow()\r\n    for (let j = 0; j <= corrCount; j++) {\r\n      const cell = row.insertCell()\r\n      cell.className = `test${j}`\r\n      if (j === 0) { // First column\r\n        if (i === 0) { // First row\r\n          cell.textContent = i18next.t('corruptions.loadoutTable.next')\r\n          cell.addEventListener('click', () => void corruptionLoadoutGetExport())\r\n          cell.classList.add('corrLoadoutName')\r\n          cell.title = i18next.t('corruptions.loadoutTable.firstRowTitle')\r\n        } else {\r\n          // Custom loadout names are loaded later, via updateCorruptionLoadoutNames()\r\n          cell.title = i18next.t('corruptions.loadoutTable.otherRowTitle', { value: i })\r\n        }\r\n\r\n      } else if (j <= corrCount) {\r\n        if (i === 0) { // Next Ascension Corruption values\r\n          cell.textContent = player.prototypeCorruptions[j+1].toString()\r\n        } else { // Loadout Corruption values\r\n          cell.textContent = player.corruptionLoadouts[i][j+1].toString()\r\n        }\r\n      }\r\n    }\r\n    if (i === 0) {\r\n      // First line is special : \"Import\" and \"Zero\" buttons\r\n      let cell = row.insertCell()\r\n      let btn: HTMLButtonElement= document.createElement('button')\r\n      btn.className = 'corrImport'\r\n      btn.textContent = i18next.t('corruptions.loadoutTable.import')\r\n      btn.addEventListener('click', () => void importCorruptionsPrompt())\r\n      cell.appendChild(btn)\r\n      cell.title = i18next.t('corruptions.importLoadoutInTextFormat')\r\n\r\n      cell = row.insertCell()\r\n      btn = document.createElement('button')\r\n      btn.className = 'corrLoad'\r\n      btn.textContent = i18next.t('corruptions.loadoutTable.zero')\r\n      btn.addEventListener('click', () => corruptionLoadoutSaveLoad(false, i))\r\n      cell.appendChild(btn)\r\n      cell.title = i18next.t('corruptions.loadoutTable.zeroTitle')\r\n    } else {\r\n      let cell = row.insertCell()\r\n      let btn = document.createElement('button')\r\n      btn.className = 'corrSave'\r\n      btn.textContent = i18next.t('corruptions.loadoutTable.save')\r\n      btn.addEventListener('click', () => corruptionLoadoutSaveLoad(true, i))\r\n      cell.appendChild(btn)\r\n      cell.title = i18next.t('corruptions.loadoutTable.saveTitle')\r\n\r\n      cell = row.insertCell()\r\n      btn = document.createElement('button')\r\n      btn.className = 'corrLoad'\r\n      btn.textContent = i18next.t('corruptions.loadoutTable.load')\r\n      btn.addEventListener('click', () => corruptionLoadoutSaveLoad(false, i))\r\n      cell.appendChild(btn)\r\n    }\r\n  }\r\n}\r\n\r\nexport const corruptionLoadoutTableUpdate = (updateRow = 0) => {\r\n  const row = getElementById<HTMLTableElement>('corruptionLoadoutTable').rows[updateRow + 1].cells\r\n  for (let i = 1; i < row.length; i++) {\r\n    if (i > 8) {\r\n      break\r\n    }\r\n    row[i].textContent = ((updateRow === 0) ? player.prototypeCorruptions[i+1] : player.corruptionLoadouts[updateRow][i+1]).toString()\r\n  }\r\n}\r\n\r\nexport const corruptionLoadoutSaveLoad = (save = true, loadout = 1) => {\r\n  if (save) {\r\n    player.corruptionLoadouts[loadout] = Array.from(player.prototypeCorruptions)\r\n    corruptionLoadoutTableUpdate(loadout)\r\n  } else {\r\n    if (loadout === 0) {\r\n      player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    } else {\r\n      player.prototypeCorruptions = Array.from(player.corruptionLoadouts[loadout])\r\n    }\r\n    corruptionLoadoutTableUpdate()\r\n    corruptionStatsUpdate()\r\n  }\r\n}\r\n\r\nexport const applyCorruptions = (corruptions: string) => {\r\n  if (corruptions.includes('/') && corruptions.split('/').length === 13) {\r\n    // Converts the '/' separated string into a number[]\r\n    const newCorruptions = corruptions.split('/').map(corr => Number(corr))\r\n\r\n    for (const value of newCorruptions) {\r\n      if (\r\n        !Number.isInteger(value) ||\r\n        Number.isNaN(value) ||\r\n        value < 0 ||\r\n        value > maxCorruptionLevel()\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    player.prototypeCorruptions = newCorruptions\r\n    corruptionLoadoutTableUpdate()\r\n    corruptionStatsUpdate()\r\n    return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nasync function importCorruptionsPrompt() {\r\n  const input = await Prompt(i18next.t('corruptions.importCorruptionsPrompt.import'))\r\n\r\n  if (!applyCorruptions(`0/0/${input}/0/0/0`)) {\r\n    void Alert(i18next.t('corruptions.importCorruptionsPrompt.importError'))\r\n  }\r\n}\r\n\r\nasync function corruptionLoadoutGetNewName(loadout = 0) {\r\n  const maxChars = 9\r\n  // eslint-disable-next-line\r\n    const regex = /^[\\x00-\\xFF]*$/\r\n  const renamePrompt = await Prompt(i18next.t('corruptions.corruptionLoadoutName.loadoutPrompt', { loadNum: loadout + 1, maxChars }))\r\n\r\n  if (!renamePrompt) {\r\n    return Alert(i18next.t('corruptions.corruptionLoadoutName.errors.noName'))\r\n  } else if (renamePrompt.length > maxChars) {\r\n    return Alert(i18next.t('corruptions.corruptionLoadoutName.errors.exceedsCharacterLimit'))\r\n  } else if (!regex.test(renamePrompt)) {\r\n    return Alert(i18next.t('corruptions.corruptionLoadoutName.errors.regexError'))\r\n  } else {\r\n    player.corruptionLoadoutNames[loadout] = renamePrompt\r\n    updateCorruptionLoadoutNames()\r\n    if (renamePrompt === 'crazy') {\r\n      return Alert(i18next.t('corruptions.loadoutPrompt.errors.crazyJoke'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateCorruptionLoadoutNames = () => {\r\n  const rows = getElementById<HTMLTableElement>('corruptionLoadoutTable').rows\r\n  for (let i = 0; i < Object.keys(player.corruptionLoadouts).length; i++) {\r\n    const cells = rows[i + 2].cells  //start changes on 2nd row\r\n    if (cells[0].textContent!.length === 0) {  //first time setup\r\n\r\n      cells[0].addEventListener('click', () => void corruptionLoadoutGetNewName(i)) //get name function handles -1 for array\r\n      cells[0].classList.add('corrLoadoutName')\r\n    }\r\n    cells[0].textContent = `${player.corruptionLoadoutNames[i]}:`\r\n  }\r\n}\r\n\r\nconst corruptionLoadoutGetExport = async () => {\r\n  const str = player.prototypeCorruptions.slice(2, 10).join('/')\r\n  if ('clipboard' in navigator) {\r\n    await navigator.clipboard.writeText(str)\r\n      .catch((e: Error) => Alert(i18next.t('corruptions.loadoutExport.saveErrorNavigator', { message: e.message })))\r\n  } else {\r\n    void Alert(i18next.t('corruptions.loadoutExport.saveErrorNavigator', { message: str }))\r\n  }\r\n}\r\n\r\nexport const corruptionCleanseConfirm = () => {\r\n  const corrupt = DOMCacheGetOrSet('corruptionCleanseConfirm')\r\n  corrupt.style.visibility = 'visible'\r\n  setTimeout(() => corrupt.style.visibility = 'hidden', 10000)\r\n}\r\n\r\nexport const revealCorruptions = () => {\r\n  const corruptions = document.getElementsByClassName('corruptionStatRow') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < corruptions.length; i ++) {\r\n    corruptions[i].style.display = 'none'\r\n  }\r\n\r\n  const c11Unlocks = document.getElementsByClassName('chal11Corruption') as HTMLCollectionOf<HTMLElement>\r\n  const c12Unlocks = document.getElementsByClassName('chal12Corruption') as HTMLCollectionOf<HTMLElement>\r\n  const c13Unlocks = document.getElementsByClassName('chal13Corruption') as HTMLCollectionOf<HTMLElement>\r\n  const c14Unlocks = document.getElementsByClassName('chal14Corruption') as HTMLCollectionOf<HTMLElement>\r\n\r\n  if (player.challengecompletions[11] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\r\n    for (let i = 0; i < c11Unlocks.length; i++) {\r\n      c11Unlocks[i].style.display = 'flex'\r\n    }\r\n  }\r\n  if (player.challengecompletions[12] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\r\n    for (let i = 0; i < c12Unlocks.length; i++) {\r\n      c12Unlocks[i].style.display = 'flex'\r\n    }\r\n  }\r\n  if (player.challengecompletions[13] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\r\n    for (let i = 0; i < c13Unlocks.length; i++) {\r\n      c13Unlocks[i].style.display = 'flex'\r\n    }\r\n  }\r\n  if (player.challengecompletions[14] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\r\n    for (let i = 0; i < c14Unlocks.length; i++) {\r\n      c14Unlocks[i].style.display = 'flex'\r\n    }\r\n  }\r\n}\r\n\r\nexport function corrChallengeMinimum(index: number): number {\r\n  switch (index) {\r\n    case 2:\r\n      return 11\r\n    case 3:\r\n      return 14\r\n    case 4:\r\n      return 14\r\n    case 5:\r\n      return 13\r\n    case 6:\r\n      return 12\r\n    case 7:\r\n      return 12\r\n    case 8:\r\n      return 11\r\n    case 9:\r\n      return 13\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n", "import { player } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\n\r\nexport const calculatePlatonicBlessings = () => {\r\n  // The visual updates are handled in visualUpdateCubes()\r\n  const platonicArray = Object.values(player.platonicBlessings)\r\n  const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4]\r\n  for (let i = 0; i < platonicArray.length; i++) {\r\n    let power = 1\r\n    let mult = 1\r\n    let effectiveAmount = platonicArray[i]\r\n    if (i === 5) {\r\n      effectiveAmount = Math.min(effectiveAmount, 1e20)\r\n    }\r\n    if (i === 6 && effectiveAmount >= 1e20) {\r\n      effectiveAmount = Math.pow(effectiveAmount, 0.5) * 1e10\r\n    }\r\n    if (platonicArray[i] >= DRThreshold[i]) {\r\n      power = G.platonicDRPower[i]\r\n      mult *= Math.pow(DRThreshold[i], (1 - G.platonicDRPower[i]))\r\n    }\r\n\r\n    G.platonicBonusMultiplier[i] = 1 + mult * G.platonicCubeBase[i] * Math.pow(effectiveAmount, power)\r\n  }\r\n}\r\n", "/* Functions which Handle Quark Gains,  */\r\n\r\nimport { calculateCubeQuarkMultiplier, calculateQuarkMultiplier } from './Calculate'\r\nimport { format, player } from './Synergism'\r\nimport { Alert } from './UpdateHTML'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\n\r\nconst getBonus = async (): Promise<null | number> => {\r\n  if (!navigator.onLine) {\r\n    return null\r\n  }\r\n  if (document.visibilityState === 'hidden') {\r\n    return null\r\n  }\r\n\r\n  try {\r\n    const r = await fetch('https://synergism-quarks.khafra.workers.dev/')\r\n    const j = await r.json() as { bonus: number }\r\n\r\n    return j.bonus\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`workers.dev: ${(e as Error).message}`)\r\n  }\r\n\r\n  try {\r\n    const r = await fetch('https://api.github.com/gists/44be6ad2dcf0d44d6a29dffe1d66a84a', {\r\n      headers: {\r\n        'Accept': 'application/vnd.github.v3+json'\r\n      }\r\n    })\r\n\r\n    const t = await r.json() as { files: Record<string, { content: string }> }\r\n    const b = Number(t.files['SynergismQuarkBoost.txt'].content)\r\n\r\n    return b\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`GitHub Gist: ${(e as Error).message}`)\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport const quarkHandler = () => {\r\n  let maxTime = 90000 //In Seconds\r\n  if (player.researches[195] > 0) {\r\n    maxTime += 18000 * player.researches[195] // Research 8x20\r\n  }\r\n\r\n  //Part 2: Calculate quark gain per hour\r\n  let baseQuarkPerHour = 5\r\n\r\n  const quarkResearches = [99, 100, 125, 180, 195]\r\n  for (const el of quarkResearches) {\r\n    baseQuarkPerHour += player.researches[el]\r\n  }\r\n\r\n  baseQuarkPerHour *= +player.octeractUpgrades.octeractExportQuarks.getEffect().bonus\r\n\r\n  const quarkPerHour = baseQuarkPerHour\r\n\r\n  //Part 3: Calculates capacity of quarks on export\r\n  const capacity = Math.floor(quarkPerHour * maxTime / 3600)\r\n\r\n  //Part 4: Calculate how many quarks are to be gained.\r\n  const quarkGain = Math.floor(player.quarkstimer * quarkPerHour / 3600)\r\n\r\n  //Part 5 [June 9, 2021]: Calculate bonus awarded to cube quarks.\r\n  const cubeMult = calculateCubeQuarkMultiplier()\r\n  //Return maxTime, quarkPerHour, capacity and quarkGain as object\r\n  return {\r\n    maxTime,\r\n    perHour: quarkPerHour,\r\n    capacity,\r\n    gain: quarkGain,\r\n    cubeMult\r\n  }\r\n}\r\n\r\nexport class QuarkHandler {\r\n  /** Global quark bonus */\r\n  public BONUS = 0\r\n  /** Quark amount */\r\n  private QUARKS = 0\r\n\r\n  private static interval: ReturnType<typeof setInterval> | null = null\r\n\r\n  constructor({ bonus, quarks }: { bonus?: number, quarks: number }) {\r\n    this.QUARKS = quarks\r\n    if (bonus) {\r\n      this.BONUS = bonus\r\n    } else {\r\n      void this.getBonus()\r\n    }\r\n\r\n    if (QuarkHandler.interval === null) {\r\n      // although the values are cached for 15 mins, refresh every 5\r\n      QuarkHandler.interval = setInterval(this.getBonus.bind(this), 60 * 1000 * 5)\r\n    }\r\n  }\r\n\r\n  /*** Calculates the number of quarks to give with the current bonus. */\r\n  applyBonus(amount: number) {\r\n    const nonPatreon = calculateQuarkMultiplier()\r\n    return amount * (1 + (this.BONUS / 100)) * nonPatreon\r\n  }\r\n\r\n  /** Subtracts quarks, as the name suggests. */\r\n  add(amount: number, useBonus = true) {\r\n    this.QUARKS += useBonus ? this.applyBonus(amount) : amount\r\n    player.quarksThisSingularity += useBonus ? this.applyBonus(amount) : amount\r\n    return this\r\n  }\r\n\r\n  /** Add quarks, as suggested by the function's name. */\r\n  sub(amount: number) {\r\n    this.QUARKS -= amount\r\n    if (this.QUARKS < 0) {\r\n      this.QUARKS = 0\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  async getBonus() {\r\n    const el = DOMCacheGetOrSet('currentBonus')\r\n    if (localStorage.getItem('quarkBonus') !== null) { // is in cache\r\n      const { bonus, fetched } = JSON.parse(localStorage.getItem('quarkBonus')!) as { bonus: number, fetched: number }\r\n      if (Date.now() - fetched < 60 * 1000 * 15) { // cache is younger than 15 minutes\r\n        el.textContent = `Generous patrons give you a bonus of ${bonus}% more Quarks!`\r\n        return this.BONUS = bonus\r\n      }\r\n    } else if (!navigator.onLine) {\r\n      return el.textContent = 'Current Bonus: N/A% (offline)!'\r\n    } else if (document.hidden) {\r\n      return el.textContent = 'Current Bonus: N/A% (unfocused)!'\r\n    }\r\n\r\n    const b = await getBonus()\r\n\r\n    if (b === null) {\r\n      return\r\n    } else if (Number.isNaN(b) || typeof b !== 'number') {\r\n      return Alert('No bonus could be applied, a network error occurred! [Invalid Bonus] :(')\r\n    } else if (!Number.isFinite(b)) {\r\n      return Alert('No bonus could be applied, an error occurred. [Infinity] :(')\r\n    } else if (b < 0) {\r\n      return Alert('No bonus could be applied, an error occurred. [Zero] :(')\r\n    }\r\n\r\n    el.textContent = `Generous patrons give you a bonus of ${b}% more Quarks!`\r\n    localStorage.setItem('quarkBonus', JSON.stringify({ bonus: b, fetched: Date.now() }))\r\n    this.BONUS = b\r\n  }\r\n\r\n  public toString(val: number): string {\r\n    return format(Math.floor(this.applyBonus(val)), 0, true)\r\n  }\r\n\r\n  [Symbol.toPrimitive] = (t: string) => t === 'number' ? this.QUARKS : null\r\n}\r\n", "\r\n\r\n/* Note by Platonic, April 1 2021\r\nThis is an experimental file for making cubes their own class\r\nand make them easily re-used for later purposes.\r\nPlease do not change the *file name* or use anything developed in this\r\nfile without asking me first. You may edit this file as much as you\r\nwant, though!\r\nThank you! */\r\n\r\nimport Decimal from 'break_infinity.js'\r\nimport i18next from 'i18next'\r\nimport { achievementaward } from './Achievements'\r\nimport { calculateCubeBlessings } from './Calculate'\r\nimport { CalcECC } from './Challenges'\r\nimport { calculateHypercubeBlessings } from './Hypercubes'\r\nimport { calculatePlatonicBlessings } from './PlatonicCubes'\r\nimport { quarkHandler } from './Quark'\r\nimport { format, player } from './Synergism'\r\nimport { calculateTesseractBlessings } from './Tesseracts'\r\nimport type { Player } from './types/Synergism'\r\nimport { Prompt, Alert } from './UpdateHTML'\r\n\r\n/* Constants */\r\n\r\nconst blessings: Record<\r\n    keyof Player['cubeBlessings'],\r\n    { weight: number, pdf: (x: number) => boolean }\r\n> = {\r\n  accelerator: { weight: 4, pdf: (x: number) => 0 <= x && x <= 20 },\r\n  multiplier: { weight: 4, pdf: (x: number) => 20 < x && x <= 40 },\r\n  offering: { weight: 2, pdf: (x: number) => 40 < x && x <= 50 },\r\n  runeExp: { weight: 2, pdf: (x: number) => 50 < x && x <= 60 },\r\n  obtainium: { weight: 2, pdf: (x: number) => 60 < x && x <= 70 },\r\n  antSpeed: { weight: 2, pdf: (x: number) => 70 < x && x <= 80 },\r\n  antSacrifice: { weight: 1, pdf: (x: number) => 80 < x && x <= 85 },\r\n  antELO: { weight: 1, pdf: (x: number) => 85 < x && x <= 90 },\r\n  talismanBonus: { weight: 1, pdf: (x: number) => 90 < x && x <= 95 },\r\n  globalSpeed: { weight: 1, pdf: (x: number) => 95 < x && x <= 100 }\r\n}\r\n\r\nconst platonicBlessings: Record <\r\n    keyof Player['platonicBlessings'],\r\n    { weight: number, pdf: (x: number) => boolean }\r\n> = {\r\n  cubes: { weight: 13200, pdf: (x: number) => 0 <= x && x <= 33.000 },\r\n  tesseracts: { weight: 13200, pdf: (x: number) => 33.000 < x && x <= 66.000 },\r\n  hypercubes: { weight: 13200, pdf: (x: number) => 66.000 < x && x <= 99.000 },\r\n  platonics: { weight: 396, pdf: (x: number) => 99.000 < x && x <= 99.990 },\r\n  hypercubeBonus: { weight: 1, pdf: (x: number) => 99.990 < x && x <= 99.9925 },\r\n  taxes: { weight: 1, pdf: (x: number) => 99.9925 < x && x <= 99.995 },\r\n  scoreBonus: { weight: 1, pdf: (x: number) => 99.995 < x && x <= 99.9975 },\r\n  globalSpeed: { weight: 1, pdf: (x: number) => 99.9975 < x && x <= 100 }\r\n}\r\n\r\n/**\r\n * @description Generic class for handling cube subsets.\r\n * @example\r\n * class PlatCubes extends Currency {\r\n *   constructor() {\r\n *       super('wowPlatonicCubes', player.wowPlatonicCubes);\r\n *   }\r\n *\r\n *   async open(amount: number, value: boolean) {\r\n *       // implement open logic here\r\n *   }\r\n * }\r\n *\r\n * new PlatCubes().openCustom();\r\n */\r\nexport abstract class Cube {\r\n  /** key on the player object */\r\n  private key: keyof Player\r\n  private value: number\r\n\r\n  constructor (\r\n    type: keyof Player,\r\n    v = 0\r\n  ) {\r\n    this.key = type\r\n    this.value = v\r\n  }\r\n\r\n    /**\r\n     * @description Open a given amount of cubes\r\n     * @param amount Number of cubes to open\r\n     * @param max if true, overwrites amount and opens the max amount of cubes.\r\n     */\r\n    abstract open(amount: number, max: boolean): Promise<void> | void\r\n\r\n    /** Open a custom amount of cubes */\r\n    async openCustom() {\r\n      // TODO: Replace this with `this`?\r\n      const thisInPlayer = player[this.key] as Cube\r\n      const amount = await Prompt(i18next.t('cubes.howManyCubesOpen', { x: format(thisInPlayer, 0, true) }))\r\n\r\n      if (amount === null) {\r\n        return Alert(i18next.t('cubes.noCubesOpened'))\r\n      }\r\n\r\n      const isPercentage = amount.endsWith('%')\r\n      const cubesToOpen = amount.startsWith('-')\r\n        ? (isPercentage ? 100 + Number(amount.slice(0, -1)) : thisInPlayer.value + Number(amount))\r\n        : (isPercentage ? Number(amount.slice(0, -1)) : Number(amount))\r\n\r\n      if (Number.isNaN(cubesToOpen) || !Number.isFinite(cubesToOpen) || !Number.isInteger(cubesToOpen)) {\r\n        return Alert(i18next.t('general.validation.finiteInt'))\r\n      } else if (thisInPlayer.value < cubesToOpen) {\r\n        return Alert(i18next.t('cubes.validation.notEnough'))\r\n      } else if (cubesToOpen <= 0) {\r\n        return Alert(i18next.t('cubes.validation.negative'))\r\n      } else if (isPercentage && cubesToOpen > 100) {\r\n        return Alert(i18next.t('cubes.validation.invalidPercent', { x: cubesToOpen }))\r\n      }\r\n\r\n      if (isPercentage) {\r\n        return this.open(\r\n          Math.floor(thisInPlayer.value * (cubesToOpen / 100)),\r\n          cubesToOpen === 100\r\n        )\r\n      }\r\n\r\n      return this.open(cubesToOpen, cubesToOpen === thisInPlayer.value)\r\n    }\r\n\r\n    /** @description Check how many quarks you should have gained through opening cubes today */\r\n    checkQuarkGain(base: number, mult: number, cubes: number): number {\r\n      if (cubes < 1) {\r\n        return 0\r\n      }\r\n      // General quark multiplier from other in-game features\r\n      // Multiplier from passed parameter\r\n      const multiplier = mult * quarkHandler().cubeMult\r\n\r\n      return Math.floor(player.worlds.applyBonus(Math.log10(cubes) * base * multiplier))\r\n    }\r\n\r\n    /** @description Check how many cubes you need to gain an additional quark from opening */\r\n    checkCubesToNextQuark(base: number, mult: number, quarks: number, cubes: number): number {\r\n      // General quark multiplier from other in-game features\r\n      // Multiplier from passed parameter\r\n      const multiplier = mult * quarkHandler().cubeMult\r\n\r\n      return Math.ceil(Math.pow(10, (quarks + 1) / player.worlds.applyBonus(multiplier * base)) - cubes)\r\n    }\r\n\r\n    add(amount: number): this {\r\n      this.value = Math.min(1e300, this.value + amount)\r\n      return this\r\n    }\r\n\r\n    sub(amount: number): this {\r\n      this.value = Math.max(0, this.value - amount)\r\n      return this\r\n    }\r\n\r\n    [Symbol.toPrimitive](h: string) {\r\n      switch (h) {\r\n        case 'string': return this.value.toString()\r\n        case 'number': return this.value\r\n        default: return null\r\n      }\r\n    }\r\n}\r\n\r\nexport class WowCubes extends Cube {\r\n  constructor(amount = Number(player.wowCubes)) {\r\n    super('wowCubes', amount)\r\n  }\r\n\r\n  open(value: number, max = false) {\r\n    let toSpend = max ? Number(this) : Math.min(Number(this), value)\r\n\r\n    if (value === 1 && player.cubeBlessings.accelerator >= 2e11 && player.achievements[246] < 1) {\r\n      achievementaward(246)\r\n    }\r\n\r\n    this.sub(toSpend)\r\n    player.cubeOpenedDaily += toSpend\r\n\r\n    const quarkMult = (player.shopUpgrades.cubeToQuark) ? 1.5 : 1\r\n    const gainQuarks = Number(this.checkQuarkGain(5, quarkMult, player.cubeOpenedDaily))\r\n    const actualQuarksGain = Math.max(0, gainQuarks - player.cubeQuarkDaily)\r\n    player.cubeQuarkDaily += actualQuarksGain\r\n    player.worlds.add(actualQuarksGain, false)\r\n\r\n    toSpend *= (1 + player.researches[138] / 1000)\r\n    toSpend *= (1 + 0.8 * player.researches[168] / 1000)\r\n    toSpend *= (1 + 0.6 * player.researches[198] / 1000)\r\n\r\n    toSpend = Math.floor(toSpend)\r\n    let toSpendModulo = toSpend % 20\r\n    let toSpendDiv20 = Math.floor(toSpend / 20)\r\n\r\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[13] === 1) {\r\n      toSpendModulo += toSpendDiv20\r\n    }\r\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[23] === 1) {\r\n      toSpendModulo += toSpendDiv20\r\n    }\r\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[33] === 1) {\r\n      toSpendModulo += toSpendDiv20\r\n    }\r\n\r\n    toSpendDiv20 += 100 / 100 * Math.floor(toSpendModulo / 20)\r\n    toSpendModulo = toSpendModulo % 20\r\n\r\n    const keys = Object.keys(player.cubeBlessings) as (keyof Player['cubeBlessings'])[]\r\n\r\n    // If you're opening more than 20 cubes, it will consume all cubes until remainder mod 20, giving expected values.\r\n    for (const key of keys) {\r\n      player.cubeBlessings[key] += blessings[key].weight * toSpendDiv20 * (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])))\r\n    }\r\n\r\n    // Then, the remaining cubes will be opened, simulating the probability [RNG Element]\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n      const num = 100 * Math.random()\r\n      for (const key of keys) {\r\n        if (blessings[key].pdf(num)) {\r\n          player.cubeBlessings[key] += (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])))\r\n        }\r\n      }\r\n    }\r\n\r\n    calculateCubeBlessings()\r\n  }\r\n}\r\n\r\nexport class WowTesseracts extends Cube {\r\n  constructor(amount = Number(player.wowTesseracts)) {\r\n    super('wowTesseracts', amount)\r\n  }\r\n\r\n  open(value: number, max = false) {\r\n    const toSpend = max ? Number(this) : Math.min(Number(this), value)\r\n\r\n    player.wowTesseracts.sub(toSpend)\r\n    player.tesseractOpenedDaily += toSpend\r\n\r\n    const quarkMult = (player.shopUpgrades.tesseractToQuark) ? 1.5 : 1\r\n    const gainQuarks = Number(this.checkQuarkGain(7, quarkMult, player.tesseractOpenedDaily))\r\n    const actualQuarksGain = Math.max(0, gainQuarks - player.tesseractQuarkDaily)\r\n    player.tesseractQuarkDaily += actualQuarksGain\r\n    player.worlds.add(actualQuarksGain, false)\r\n\r\n    const toSpendModulo = toSpend % 20\r\n    const toSpendDiv20 = Math.floor(toSpend / 20)\r\n\r\n    // If you're opening more than 20 Tesseracts, it will consume all Tesseracts until remainder mod 20, giving expected values.\r\n    for (const key in player.tesseractBlessings) {\r\n      player.tesseractBlessings[key as keyof Player['tesseractBlessings']] += blessings[key as keyof typeof blessings].weight * toSpendDiv20\r\n    }\r\n    // Then, the remaining tesseract will be opened, simulating the probability [RNG Element]\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n      const num = 100 * Math.random()\r\n      for (const key in player.tesseractBlessings) {\r\n        if (blessings[key as keyof typeof blessings].pdf(num)) {\r\n          player.tesseractBlessings[key as keyof Player['tesseractBlessings']] += 1\r\n        }\r\n      }\r\n    }\r\n\r\n    calculateTesseractBlessings()\r\n    const extraCubeBlessings = Math.floor(12 * toSpend * player.researches[153])\r\n    player.wowCubes.add(extraCubeBlessings)\r\n    player.wowCubes.open(extraCubeBlessings, false)\r\n  }\r\n}\r\n\r\nexport class WowHypercubes extends Cube {\r\n  constructor(amount = Number(player.wowHypercubes)) {\r\n    super('wowHypercubes', amount)\r\n  }\r\n\r\n  open(value: number, max = false) {\r\n    const toSpend = max ? Number(this) : Math.min(Number(this), value)\r\n\r\n    player.wowHypercubes.sub(toSpend)\r\n    player.hypercubeOpenedDaily += toSpend\r\n\r\n    const quarkMult = (player.shopUpgrades.hypercubeToQuark) ? 1.5 : 1\r\n    const gainQuarks = this.checkQuarkGain(10, quarkMult, player.hypercubeOpenedDaily)\r\n    const actualQuarksGain = Math.max(0, gainQuarks - player.hypercubeQuarkDaily)\r\n    player.hypercubeQuarkDaily += actualQuarksGain\r\n    player.worlds.add(actualQuarksGain, false)\r\n\r\n    const toSpendModulo = toSpend % 20\r\n    const toSpendDiv20 = Math.floor(toSpend/20)\r\n\r\n    // If you're opening more than 20 Hypercubes, it will consume all Hypercubes until remainder mod 20, giving expected values.\r\n    for (const key in player.hypercubeBlessings) {\r\n      player.hypercubeBlessings[key as keyof Player['hypercubeBlessings']] += blessings[key as keyof typeof blessings].weight * toSpendDiv20\r\n    }\r\n    // Then, the remaining hypercubes will be opened, simulating the probability [RNG Element]\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n      const num = 100 * Math.random()\r\n      for (const key in player.hypercubeBlessings) {\r\n        if (blessings[key as keyof typeof blessings].pdf(num)) {\r\n          player.hypercubeBlessings[key as keyof Player['hypercubeBlessings']] += 1\r\n        }\r\n      }\r\n    }\r\n\r\n    calculateHypercubeBlessings()\r\n    const extraTesseractBlessings = Math.floor(100 * toSpend * player.researches[153])\r\n    player.wowTesseracts.add(extraTesseractBlessings)\r\n    player.wowTesseracts.open(extraTesseractBlessings, false)\r\n  }\r\n}\r\n\r\nexport class WowPlatonicCubes extends Cube {\r\n  constructor(amount = Number(player.wowPlatonicCubes)) {\r\n    super('wowPlatonicCubes', amount)\r\n  }\r\n\r\n  open(value: number, max = false) {\r\n    const toSpend = max ? Number(this) : Math.min(Number(this), value)\r\n\r\n    player.wowPlatonicCubes.sub(toSpend)\r\n    player.platonicCubeOpenedDaily += toSpend\r\n\r\n    const quarkMult = 1.5 // There's no platonic to quark upgrade, default as 1.5\r\n    const gainQuarks = this.checkQuarkGain(15, quarkMult, player.platonicCubeOpenedDaily)\r\n    const actualQuarksGain = Math.max(0, gainQuarks - player.platonicCubeQuarkDaily)\r\n    player.platonicCubeQuarkDaily += actualQuarksGain\r\n    player.worlds.add(actualQuarksGain, false)\r\n\r\n    let toSpendModulo = toSpend % 40000\r\n    const toSpendDiv40000 = Math.floor(toSpend / 40000)\r\n\r\n    //If you're opening more than 40,000 Platonics, it will consume all Platonics until remainder mod 40,000, giving expected values.\r\n    for (const key in player.platonicBlessings) {\r\n      player.platonicBlessings[key as keyof Player['platonicBlessings']] += platonicBlessings[key as keyof typeof platonicBlessings].weight * toSpendDiv40000\r\n      if (platonicBlessings[key as keyof typeof platonicBlessings].weight === 1 && player.cubeUpgrades[64] > 0) {\r\n        player.platonicBlessings[key as keyof Player['platonicBlessings']] += toSpendDiv40000 // Doubled!\r\n      }\r\n    }\r\n    //Then, the remaining hypercube will be opened, simulating the probability [RNG Element]\r\n    const RNGesus = ['hypercubeBonus', 'taxes', 'scoreBonus', 'globalSpeed']\r\n    for (let i = 0; i < RNGesus.length; i++) {\r\n      const num = Math.random()\r\n      if (toSpendModulo / 40000 >= num && toSpendModulo !== 0) {\r\n        player.platonicBlessings[RNGesus[i] as keyof Player['platonicBlessings']] += 1\r\n        toSpendModulo -= 1\r\n      }\r\n    }\r\n    const gainValues = [Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(396 * toSpendModulo / 40000)]\r\n    const commonDrops = ['cubes', 'tesseracts', 'hypercubes', 'platonics'] as const\r\n    for (let i = 0; i < commonDrops.length; i++) {\r\n      player.platonicBlessings[commonDrops[i]] += gainValues[i]\r\n      toSpendModulo -= gainValues[i]\r\n    }\r\n\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n      const num = 100 * Math.random()\r\n      for (const key in player.platonicBlessings) {\r\n        if (platonicBlessings[key as keyof typeof platonicBlessings].pdf(num)) {\r\n          player.platonicBlessings[key as keyof Player['platonicBlessings']] += 1\r\n        }\r\n      }\r\n    }\r\n    calculatePlatonicBlessings()\r\n    if (player.achievements[271] > 0) {\r\n      const extraHypercubes = Math.floor(toSpend * Math.max(0, Math.min(1, (Decimal.log(player.ascendShards.add(1), 10) - 1e5) / 9e5)))\r\n      player.wowHypercubes.add(extraHypercubes)\r\n      player.wowHypercubes.open(extraHypercubes, false)\r\n    }\r\n  }\r\n}\r\n", "export const version = '\"3.0.0\": April 1, 2023: Blueberries!'\r\n\r\n/**\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n * PSEUDO DO NOT CHANGE THIS LINE\r\n */\r\n// eslint-disable-next-line\r\nexport const testing: boolean = false;\r\nexport const lastUpdated = new Date(Date.UTC(2023, 3, 3, 16, 0, 6))\r\n/**\r\n * CHANGE THIS ONE INSTEAD\r\n */\r\n// eslint-disable-next-line\r\nexport const prod: boolean = false\r\n", "import { player, saveSynergy, blankSave, reloadShit, format, saveCheck } from './Synergism'\r\nimport { octeractGainPerSecond } from './Calculate'\r\nimport { testing, version } from './Config'\r\nimport { cleanString, getElementById, productContents, sumContents } from './Utility'\r\nimport LZString from 'lz-string'\r\nimport { achievementaward } from './Achievements'\r\nimport type { Player } from './types/Synergism'\r\nimport { Synergism } from './Events'\r\nimport { Alert, Confirm, Prompt } from './UpdateHTML'\r\nimport { quarkHandler } from './Quark'\r\nimport { shopData } from './Shop'\r\nimport { addTimers } from './Helper'\r\nimport { btoa } from './Utility'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport localforage from 'localforage'\r\nimport { Globals as G } from './Variables'\r\nimport { singularityData } from './singularity'\r\nimport { getEvent } from './Event'\r\nimport { synergismStage } from './Statistics'\r\nimport ClipboardJS from 'clipboard'\r\nimport i18next from 'i18next'\r\nimport { changeTab, changeSubTab } from './Tabs'\r\n\r\nconst format24 = new Intl.DateTimeFormat('EN-GB', {\r\n  year: 'numeric',\r\n  month: '2-digit',\r\n  day: '2-digit',\r\n  hour: '2-digit',\r\n  hour12: false,\r\n  minute: '2-digit',\r\n  second: '2-digit'\r\n})\r\nconst format12 = new Intl.DateTimeFormat('EN-GB', {\r\n  year: 'numeric',\r\n  month: '2-digit',\r\n  day: '2-digit',\r\n  hour: '2-digit',\r\n  hour12: true,\r\n  minute: '2-digit',\r\n  second: '2-digit'\r\n})\r\n\r\nconst hour = 3600000\r\n\r\nconst getRealTime = (type = 'default', use12 = false) => {\r\n  const format = use12 ? format12 : format24\r\n  const datePartsArr = format\r\n    .formatToParts(new Date())\r\n    .filter((x) => x.type !== 'literal')\r\n    .map(p => ({ [p.type]: p.value }))\r\n\r\n  const dateParts = Object.assign({}, ...datePartsArr) as Record<string, string>\r\n\r\n  const period = use12 ? ` ${dateParts.dayPeriod.toUpperCase()}` : ''\r\n  const weekday = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat']\r\n  switch (type) {\r\n    case 'default': return `${dateParts.year}-${dateParts.month}-${dateParts.day} ${dateParts.hour}_${dateParts.minute}_${dateParts.second}${period}`\r\n    case 'short': return `${dateParts.year}${dateParts.month}${dateParts.day}${dateParts.hour}${dateParts.minute}${dateParts.second}`\r\n    case 'year': return `${dateParts.year}`\r\n    case 'month': return `${dateParts.month}`\r\n    case 'day': return `${dateParts.day}`\r\n    case 'hour': return `${dateParts.hour}`\r\n    case 'minute': return `${dateParts.minute}`\r\n    case 'second': return `${dateParts.second}`\r\n    case 'period': return `${dateParts.dayPeriod.toUpperCase()}`\r\n    case 'weekday': return `${weekday[new Date().getUTCDay()]}`\r\n    default: return type\r\n  }\r\n}\r\n\r\nexport const updateSaveString = (input: HTMLInputElement) => {\r\n  const value = input.value.slice(0, 100)\r\n  player.saveString = value === '' ? blankSave.saveString : cleanString(value);\r\n  (DOMCacheGetOrSet('saveStringInput') as HTMLInputElement).value = player.saveString\r\n}\r\n\r\nexport const getVer = () => /[\\d?=.]+/.exec(version)?.[0] ?? version\r\n\r\nexport const saveFilename = () => {\r\n  const s = player.saveString\r\n  const t = s.replace(/\\$(.*?)\\$/g, (_, b) => {\r\n    switch (b) {\r\n      case 'VERSION': return `v${version}`\r\n      case 'TIME': return getRealTime()\r\n      case 'TIME12': return getRealTime(undefined, true)\r\n      case 'SING': return `Singularity ${player.singularityCount}`\r\n      case 'SINGS': return `${player.singularityCount}`\r\n      case 'VER': return getVer()\r\n      case 'TIMES': return getRealTime('short')\r\n      case 'YEAR': return getRealTime('year')\r\n      case 'Y': return getRealTime('year')\r\n      case 'MONTH': return getRealTime('month')\r\n      case 'M': return getRealTime('month')\r\n      case 'DAY': return getRealTime('day')\r\n      case 'D': return getRealTime('day')\r\n      case 'HOUR': return getRealTime('hour')\r\n      case 'H': return getRealTime('hour')\r\n      case 'H12': return getRealTime('hour', true)\r\n      case 'MINUTE': return getRealTime('minute')\r\n      case 'MI': return getRealTime('minute')\r\n      case 'SECOND': return getRealTime('second')\r\n      case 'S': return getRealTime('second')\r\n      case 'PERIOD': return getRealTime('period', true)\r\n      case 'P': return getRealTime('period', true)\r\n      case 'WEEKDAY': return getRealTime('weekday')\r\n      case 'W': return getRealTime('weekday')\r\n      case 'DATE': return `${Date.now()}`\r\n      case 'DATES': return `${Math.floor(Date.now() / 1000)}`\r\n      case 'QUARK': return `${Math.floor(Number(player.worlds))}`\r\n      case 'QUARKS': return format(Number(player.worlds))\r\n      case 'GQ': return `${Math.floor(player.goldenQuarks)}`\r\n      case 'GQS': return format(player.goldenQuarks)\r\n      case 'STAGE': return synergismStage(0)\r\n      default: return `${b}`\r\n    }\r\n  })\r\n\r\n  return cleanString(t)\r\n}\r\n\r\nexport const exportSynergism = async () => {\r\n  player.offlinetick = Date.now()\r\n  const quarkData = quarkHandler()\r\n\r\n  let bonusGQMultiplier = 1\r\n  bonusGQMultiplier *= 1 + player.worlds.BONUS / 100\r\n  bonusGQMultiplier *= (player.highestSingularityCount >= 100 ? 1 + player.highestSingularityCount / 50 : 1)\r\n  if (+player.singularityUpgrades.goldenQuarks3.getEffect().bonus > 0) {\r\n    player.goldenQuarks += Math.floor(player.goldenQuarksTimer / (3600 / +player.singularityUpgrades.goldenQuarks3.getEffect().bonus)) * bonusGQMultiplier\r\n    player.goldenQuarksTimer = player.goldenQuarksTimer % (3600 / +player.singularityUpgrades.goldenQuarks3.getEffect().bonus)\r\n  }\r\n  if (quarkData.gain >= 1) {\r\n    player.worlds.add(quarkData.gain)\r\n    player.quarkstimer = (player.quarkstimer % (3600 / quarkData.perHour))\r\n  }\r\n\r\n  const saved = await saveSynergy()\r\n\r\n  if (!saved) {\r\n    return\r\n  }\r\n\r\n  const toClipboard = getElementById<HTMLInputElement>('saveType').checked\r\n  const save =\r\n        await localforage.getItem<Blob>('Synergysave2') ??\r\n        localStorage.getItem('Synergysave2')\r\n  const saveString = typeof save === 'string' ? save : await save?.text()\r\n\r\n  if (saveString === undefined) {\r\n    return Alert('How?')\r\n  }\r\n\r\n  if (toClipboard) {\r\n    try {\r\n      // This can fail for two reasons:\r\n      // - TypeError (browser doesn't support this feature)\r\n      // - Failed to copy (browser limitation; Safari)\r\n      await navigator.clipboard.writeText(saveString)\r\n      DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.copiedSave')\r\n    } catch (err) {\r\n      // So we fallback to the deprecated way of doing it,\r\n      // which isn't limited by any browser.\r\n\r\n      // Old/bad browsers (legacy Edge, Safari because of limitations)\r\n      const textArea = document.createElement('textarea')\r\n\r\n      textArea.setAttribute('style', 'top: 0; left: 0; position: fixed;')\r\n      // For future Khafra: html5 attributes have no limit in length\r\n      textArea.setAttribute('data-clipboard-text', saveString)\r\n\r\n      document.body.appendChild(textArea)\r\n      textArea.focus()\r\n      textArea.select()\r\n\r\n      const clipboard = new ClipboardJS(textArea)\r\n\r\n      const cleanup = () => {\r\n        clipboard.destroy()\r\n        document.body.removeChild(textArea)\r\n      }\r\n\r\n      clipboard.on('success', () => {\r\n        DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.copiedSave')\r\n        cleanup()\r\n      })\r\n\r\n      clipboard.on('error', () => {\r\n        DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.exportFailed')\r\n        void Alert(i18next.t('importexport.unableCopySave')).finally(cleanup)\r\n      })\r\n    }\r\n  } else {\r\n    const a = document.createElement('a')\r\n    a.setAttribute('href', 'data:text/plain;charset=utf-8,' + saveString)\r\n    a.setAttribute('download', saveFilename())\r\n    a.setAttribute('id', 'downloadSave')\r\n    // \"Starting in Firefox 75, the click() function works even when the element is not attached to a DOM tree.\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\r\n    // so let's have it work on older versions of Firefox, doesn't change functionality.\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n    DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.copiedFile')\r\n  }\r\n  setTimeout(() => DOMCacheGetOrSet('exportinfo').textContent = '', 15_000)\r\n}\r\n\r\nexport const reloadDeleteGame = async () => {\r\n  await Alert(i18next.t('importexport.reloadDeletePrompt'))\r\n  await resetGame()\r\n}\r\n\r\nexport const resetGame = async () => {\r\n  const a = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16\r\n  const b = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16\r\n\r\n  const result = await Prompt(i18next.t('importexport.resetPrompt', { a, b, sum: a + b }))\r\n  if (result === null || Number(result) !== a + b) {\r\n    return Alert(i18next.t('importexport.wrongAnswer'))\r\n  }\r\n\r\n  const hold = Object.assign({}, blankSave, {\r\n    codes: Array.from(blankSave.codes)\r\n  }) as Player\r\n  //Reset Displays\r\n  changeTab('buildings')\r\n  changeSubTab('buildings', { page: 0 })\r\n  changeSubTab('runes', { page: 0 }) // Set 'runes' subtab back to 'runes' tab\r\n  changeSubTab('cube', { page: 0 }) // Set 'cube tribues' subtab back to 'cubes' tab\r\n  changeSubTab('traits', { page: 0 }) // set 'corruption main'\r\n  changeSubTab('singularity', { page: 0 }) // set 'singularity main'\r\n  changeSubTab('settings', { page: 0 }) // set 'statistics main'\r\n  //Import Game\r\n  await importSynergism(btoa(JSON.stringify(hold)), true)\r\n}\r\n\r\nexport const importSynergism = async (input: string | null, reset = false) => {\r\n  if (typeof input !== 'string') {\r\n    return Alert(i18next.t('importexport.unableImport'))\r\n  }\r\n\r\n  const d = LZString.decompressFromBase64(input)\r\n  const f = d ? JSON.parse(d) as Player : JSON.parse(atob(input)) as Player\r\n\r\n  if (\r\n    (f.exporttest === 'YES!' || f.exporttest === true) ||\r\n        (f.exporttest === false && testing) ||\r\n        (f.exporttest === 'NO!' && testing)\r\n  ) {\r\n    const saveString = btoa(JSON.stringify(f))\r\n\r\n    if (saveString === null) {\r\n      return Alert(i18next.t('importexport.unableImport'))\r\n    }\r\n\r\n    saveCheck.canSave = false\r\n    const item = new Blob([saveString], { type: 'text/plain' })\r\n    await localforage.setItem<Blob>('Synergysave2', item)\r\n\r\n    localStorage.setItem('saveScumIsCheating', Date.now().toString())\r\n\r\n    await reloadShit(reset)\r\n    saveCheck.canSave = true\r\n    return\r\n  } else {\r\n    return Alert(i18next.t('importexport.loadTestInLive'))\r\n  }\r\n}\r\n\r\nexport const promocodesInfo = (input: string) => {\r\n  const textElement = DOMCacheGetOrSet('promocodeinfo')\r\n  let textMessage = `'${input}': `\r\n  let availableUses = 0\r\n  switch (input) {\r\n    case 'daily':\r\n      if (player.dailyCodeUsed) {\r\n        textMessage += i18next.t('importexport.daily0Uses')\r\n      } else {\r\n        textMessage += i18next.t('importexport.daily1Uses')\r\n      }\r\n      break\r\n    case 'add':\r\n      availableUses = addCodeAvailableUses()\r\n      if (availableUses === 0) {\r\n        textMessage += i18next.t('importexport.add0Uses', {\r\n          x: 0,\r\n          y: format(addCodeTimeToNextUse(), 0)\r\n        })\r\n      } else if (availableUses !== 1) {\r\n        textMessage += i18next.t('importexport.addUses', { x: availableUses })\r\n      } else {\r\n        textMessage += i18next.t('importexport.add1Uses', { x: availableUses })\r\n      }\r\n\r\n      break\r\n    case 'time':\r\n      availableUses = timeCodeAvailableUses()\r\n\r\n      if (availableUses === 0) {\r\n        textMessage += i18next.t('importexport.add0Uses', {\r\n          x: 0,\r\n          y: format(timeCodeTimeToNextUse(), 0)\r\n        })\r\n      } else {\r\n        textMessage += i18next.t('importexport.timeMultiplier', {\r\n          x: availableUses,\r\n          y: format(timeCodeRewardMultiplier(), 2, true)\r\n        })\r\n      }\r\n\r\n      break\r\n    default:\r\n      textMessage = ''\r\n  }\r\n\r\n  textElement.textContent = textMessage\r\n}\r\n\r\nexport const promocodesPrompt = async () => {\r\n  const input = await Prompt(i18next.t('importexport.promocodePrompt'))\r\n  void promocodes(input)\r\n}\r\n\r\nexport const promocodes = async (input: string | null, amount?: number) => {\r\n  const el = DOMCacheGetOrSet('promocodeinfo')\r\n\r\n  if (input === null) {\r\n    return Alert(i18next.t('importexport.comeBackSoon'))\r\n  }\r\n  if (input === 'derpderp' && !player.codes.get(45) && G.isEvent && getEvent().name === 'Derpmas 2022: Gift of Gamebreak!') {\r\n\r\n    if (!player.dailyCodeUsed) {\r\n      return Alert('This event code gives you another usage of code \\'daily\\'. Please use that code and try this event code again.')\r\n    }\r\n\r\n    player.codes.set(45, true)\r\n    player.quarkstimer = quarkHandler().maxTime\r\n    player.goldenQuarksTimer = 3600 * 24\r\n    addTimers('ascension', 4 * 3600)\r\n    player.dailyCodeUsed = false\r\n\r\n    if (player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0) {\r\n      player.hepteractCrafts.quark.CAP *= 2\r\n      player.hepteractCrafts.quark.BAL += Math.min(1e13, player.hepteractCrafts.quark.CAP/2)\r\n    }\r\n    if (player.highestSingularityCount > 0) {\r\n      player.singularityUpgrades.goldenQuarks1.freeLevels += 1 + Math.floor(player.highestSingularityCount / 25)\r\n      player.singularityUpgrades.goldenQuarks2.freeLevels += 1 + Math.floor(player.highestSingularityCount / 25)\r\n      player.singularityUpgrades.goldenQuarks3.freeLevels += 1 + Math.floor(player.highestSingularityCount / 25)\r\n      if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\r\n        player.octeractUpgrades.octeractAscensionsOcteractGain.freeLevels += 0.2\r\n      }\r\n    }\r\n\r\n    return Alert(`Happy New Year 2023!!!! Your Quark timer(s) have been replenished and you have been given 4 real life hours of Ascension progress! Your daily code has also been reset for you.\r\n                      ${(player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0)? 'Derpsmith also hacked your save to expand Quark Hepteract for free, and (to a limit) automatically filled the extra amount! What a generous, handsome fella.' : ''}\r\n                      ${(player.highestSingularityCount > 0) ? 'You were also given free levels of GQ1-3!' : ''} \r\n                      ${(player.singularityUpgrades.octeractUnlock.getEffect().bonus) ? 'Finally, you were given free levels of Octeract Accumulator!': ''}`)\r\n  }\r\n  if (input === 'synergism2021' && !player.codes.get(1)) {\r\n    player.codes.set(1, true)\r\n    player.runeshards += 25\r\n    player.worlds.add(50)\r\n    el.textContent = i18next.t('importexport.promocodes.synergism2021')\r\n  } else if (input === ':unsmith:' && player.achievements[243] < 1) {\r\n    achievementaward(243)\r\n    el.textContent = i18next.t('importexport.promocodes.unsmith')\r\n  } else if (input === ':antismith:' && player.achievements[244] < 1) {\r\n    achievementaward(244)\r\n    el.textContent = i18next.t('importexport.promocodes.antismith')\r\n  } else if (input === 'Khafra' && !player.codes.get(26)) {\r\n    player.codes.set(26, true)\r\n    const quarks = Math.floor(Math.random() * (400 - 100 + 1) + 100)\r\n    player.worlds.add(quarks)\r\n    el.textContent = i18next.t('importexport.promocodes.khafra', {\r\n      x: player.worlds.applyBonus(quarks)\r\n    })\r\n  } else if (input.toLowerCase() === 'daily' && !player.dailyCodeUsed) {\r\n    player.dailyCodeUsed = true\r\n    let rewardMessage = i18next.t('importexport.promocodes.daily.message')\r\n\r\n    const rewards = dailyCodeReward()\r\n    const quarkMultiplier = 1 + Math.min(49, player.highestSingularityCount)\r\n\r\n    let actualQuarkAward = player.worlds.applyBonus(rewards.quarks * quarkMultiplier)\r\n    if (actualQuarkAward > 1e5) {\r\n      actualQuarkAward = Math.pow(1e5, 0.75) * Math.pow(actualQuarkAward, 0.25)\r\n    }\r\n    player.worlds.add(actualQuarkAward, false)\r\n    player.goldenQuarks += rewards.goldenQuarks\r\n\r\n    rewardMessage += `\\n${format(actualQuarkAward, 0, true)} Quarks`\r\n    if (rewards.goldenQuarks > 0) {\r\n      rewardMessage += `\\n${format(rewards.goldenQuarks, 0, true)} Golden Quarks`\r\n    }\r\n    await Alert(rewardMessage)\r\n\r\n    if (player.highestSingularityCount > 0) {\r\n      const upgradeDistribution: Record<\r\n            'goldenQuarks1' | 'goldenQuarks2' | 'goldenQuarks3' | 'singCubes1' | 'singCubes2' | 'singCubes3' |\r\n            'singOfferings1' | 'singOfferings2' | 'singOfferings3' |\r\n            'singObtainium1' | 'singObtainium2' | 'singObtainium3' | 'ascensions',\r\n            {value: number, pdf: (x: number) => boolean}> = {\r\n              goldenQuarks3: { value: 0.2, pdf: (x: number) => 0 <= x && x <= 1 },\r\n              goldenQuarks2: { value: 0.2, pdf: (x: number) => 1 <= x && x <= 3 },\r\n              goldenQuarks1: { value: 0.2, pdf: (x: number) => 3 <= x && x <= 10 },\r\n              singCubes3: { value: 0.25, pdf: (x: number) => 10 < x && x <= 15 },\r\n              singObtainium3: { value: 0.25, pdf: (x: number) => 15 < x && x <= 20 },\r\n              singOfferings3: { value: 0.25, pdf: (x: number) => 20 < x && x <= 25 },\r\n              singCubes2: { value: 0.5, pdf: (x: number) => 25 < x && x <= 80 },\r\n              singObtainium2: { value: 0.5, pdf: (x: number) => 80 < x && x <= 140 },\r\n              singOfferings2: { value: 0.5, pdf: (x: number) => 140 < x && x <= 200 },\r\n              singCubes1: { value: 1, pdf: (x: number) => 200 < x && x <= 400 },\r\n              singObtainium1: { value: 1, pdf: (x: number) => 400 < x && x <= 600 },\r\n              singOfferings1: { value: 1, pdf: (x: number) => 600 < x && x <= 800 },\r\n              ascensions: { value: 1, pdf: (x: number) => 800 < x && x <= 1000 }\r\n            }\r\n      let rolls = 3 * Math.sqrt(player.highestSingularityCount)\r\n      rolls += +player.octeractUpgrades.octeractImprovedDaily.getEffect().bonus\r\n      rolls += player.shopUpgrades.shopImprovedDaily2\r\n      rolls += player.shopUpgrades.shopImprovedDaily3\r\n      rolls += player.shopUpgrades.shopImprovedDaily4\r\n      rolls += (+player.singularityUpgrades.platonicPhi.getEffect().bonus *\r\n                        Math.min(50, 5 * player.singularityCounter / (3600 * 24)))\r\n      rolls += +player.octeractUpgrades.octeractImprovedDaily3.getEffect().bonus\r\n      rolls *= +player.octeractUpgrades.octeractImprovedDaily2.getEffect().bonus\r\n      rolls *= 1 + +player.octeractUpgrades.octeractImprovedDaily3.getEffect().bonus / 200\r\n\r\n      if (player.highestSingularityCount >= 200) {\r\n        rolls *= 2\r\n      }\r\n\r\n      rolls = Math.floor(rolls)\r\n\r\n      const keys = Object\r\n        .keys(player.singularityUpgrades)\r\n        .filter(key => key in upgradeDistribution) as (keyof typeof upgradeDistribution)[]\r\n\r\n      rewardMessage = i18next.t('importexport.promocodes.daily.message2')\r\n      // The same upgrade can be drawn several times, so we save the sum of the levels gained, to display them only once at the end\r\n      const freeLevels: Record<string, number> = {}\r\n      for (let i = 0; i < rolls; i++) {\r\n        const num = 1000 * Math.random()\r\n        for (const key of keys) {\r\n          if (upgradeDistribution[key].pdf(num)) {\r\n            player.singularityUpgrades[key].freeLevels += upgradeDistribution[key].value\r\n            freeLevels[key] ? freeLevels[key] += upgradeDistribution[key].value : freeLevels[key] = upgradeDistribution[key].value\r\n          }\r\n        }\r\n      }\r\n\r\n      if (player.highestSingularityCount >= 20) {\r\n        player.singularityUpgrades.goldenQuarks1.freeLevels += 0.2\r\n        freeLevels.goldenQuarks1 ? freeLevels.goldenQuarks1 += 0.2 : freeLevels.goldenQuarks1 = 0.2\r\n        player.singularityUpgrades.goldenQuarks2.freeLevels += 0.2\r\n        freeLevels.goldenQuarks2 ? freeLevels.goldenQuarks2 += 0.2 : freeLevels.goldenQuarks2 = 0.2\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 1\r\n        freeLevels.goldenQuarks3 ? freeLevels.goldenQuarks3 += 1 : freeLevels.goldenQuarks3 = 1\r\n\r\n      }\r\n\r\n      if (player.highestSingularityCount >= 200) {\r\n        player.octeractUpgrades.octeractGain.freeLevels += (player.octeractUpgrades.octeractGain.level / 100)\r\n        freeLevels.octeractGain = player.octeractUpgrades.octeractGain.level / 100\r\n      }\r\n\r\n      if (player.highestSingularityCount >= 205) {\r\n        player.octeractUpgrades.octeractGain2.freeLevels += (player.octeractUpgrades.octeractGain2.level / 100)\r\n        freeLevels.octeractGain2 = player.octeractUpgrades.octeractGain2.level / 100\r\n      }\r\n\r\n      for (const key of Object.keys(freeLevels)) {\r\n        rewardMessage += dailyCodeFormatFreeLevelMessage(key, freeLevels[key])\r\n      }\r\n      await Alert(rewardMessage)\r\n    }\r\n    return\r\n  } else if (input.toLowerCase() === 'add') {\r\n    const availableUses = addCodeAvailableUses()\r\n    const maxUses = addCodeMaxUses().total\r\n    const timeToNextUse = format(addCodeTimeToNextUse(), 0)\r\n    const timeInterval = addCodeInterval().time\r\n\r\n    if (availableUses < 1) {\r\n      el.textContent = i18next.t('importexport.noAddCodes', { x: timeToNextUse })\r\n      return\r\n    }\r\n\r\n    let attemptsUsed: string | null = null\r\n    if (amount) {\r\n      attemptsUsed = amount.toString()\r\n    } else {\r\n      attemptsUsed = await Prompt(i18next.t('importexport.useXAdds', { x: availableUses }))\r\n    }\r\n\r\n    if (attemptsUsed === null) {\r\n      return Alert(i18next.t('importexport.cancelAdd'))\r\n    }\r\n    const toUse = Number(attemptsUsed)\r\n    if (\r\n      Number.isNaN(toUse) ||\r\n            !Number.isInteger(toUse) ||\r\n            toUse <= 0\r\n    ) {\r\n      return Alert(i18next.t('general.validation.invalidNumber'))\r\n    }\r\n\r\n    const addEffects = addCodeBonuses()\r\n\r\n    const realAttemptsUsed = Math.min(availableUses, toUse)\r\n    const actualQuarks = Math.floor(addEffects.quarks * realAttemptsUsed)\r\n    const [first, second] = window.crypto.getRandomValues(new Uint8Array(2))\r\n\r\n    //Allows storage of up to (24 + 2 * calc2 levels) Add Codes, lol!\r\n    const v = Math.max(Date.now() - (maxUses - realAttemptsUsed) * timeInterval, player.rngCode + timeInterval * realAttemptsUsed)\r\n    const remaining = Math.floor((Date.now() - v) / timeInterval)\r\n    const timeToNext = Math.floor((timeInterval - (Date.now() - v - timeInterval * remaining)) / 1000)\r\n\r\n    // Calculator 3: Adds ascension timer.\r\n    const ascensionTimer = realAttemptsUsed * addEffects.ascensionTimer\r\n    const ascensionTimerText = (player.shopUpgrades.calculator3 > 0)\r\n      ? i18next.t('importexport.promocodes.add.calculator3', { x: format(ascensionTimer) })\r\n      : ''\r\n\r\n    // Calculator 5: Adds GQ export timer.\r\n    const gqTimer = realAttemptsUsed * addEffects.gqTimer\r\n    const gqTimerText = (player.shopUpgrades.calculator5 > 0)\r\n      ? i18next.t('importexport.promocodes.add.calculator5', { x: format(gqTimer) })\r\n      : ''\r\n\r\n    // Calculator 6: Octeract Generation\r\n    const octeractTime = realAttemptsUsed * addEffects.octeractTime\r\n    const octeractTimeText = (player.shopUpgrades.calculator6 > 0)\r\n      ? i18next.t('importexport.promocodes.add.calculator6', { x: format(octeractTime) })\r\n      : ''\r\n\r\n    // Midas' Millenium-Aged Gold perk\r\n    const freeLevelsText = (player.highestSingularityCount >= 150)\r\n      ? i18next.t('importexport.promocodes.add.freeLevel', {\r\n        x: format(0.01 * realAttemptsUsed, 2),\r\n        y: format(0.05 * realAttemptsUsed, 2)\r\n      })\r\n      : ''\r\n\r\n    // Calculator Maxed: you don't need to insert anything!\r\n    if (player.shopUpgrades.calculator === shopData.calculator.maxLevel) {\r\n      player.worlds.add(actualQuarks)\r\n      addTimers('ascension', ascensionTimer)\r\n      player.goldenQuarksTimer += gqTimer\r\n      addTimers('octeracts', octeractTime)\r\n\r\n      if (player.highestSingularityCount >= 150) {\r\n        player.singularityUpgrades.goldenQuarks1.freeLevels += 0.01 * realAttemptsUsed\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 0.05 * realAttemptsUsed\r\n      }\r\n\r\n      player.rngCode = v\r\n      if (amount) {\r\n        // No message when using Add x1 Special action, we refresh the info message\r\n        promocodesInfo('add')\r\n        return\r\n      } else {\r\n        return Alert(i18next.t('importexport.promocodes.add.calculatorMaxed', {\r\n          a: first,\r\n          b: second,\r\n          c: first + second,\r\n          d: player.worlds.toString(actualQuarks),\r\n          e: ascensionTimerText,\r\n          f: gqTimerText,\r\n          g: octeractTimeText,\r\n          h: freeLevelsText,\r\n          i: remaining,\r\n          j: timeToNext.toLocaleString()\r\n        }))\r\n      }\r\n    }\r\n\r\n    // If your calculator isn't maxed but has levels, it will provide the solution.\r\n    const options = {\r\n      w: player.worlds.toString(actualQuarks),\r\n      x: first,\r\n      y: second,\r\n      z: first + second\r\n    }\r\n\r\n    const promptText = (player.shopUpgrades.calculator > 0)\r\n      ? i18next.t('importexport.promocodes.add.calculatorSolution', options)\r\n      : i18next.t('importexport.promocodes.add.calculatorPrompt', options)\r\n\r\n    const addPrompt = await Prompt(promptText)\r\n\r\n    if (addPrompt === null) {\r\n      return Alert(i18next.t('importexport.promocodes.add.cancelled'))\r\n    }\r\n\r\n    player.rngCode = v\r\n\r\n    if (first + second === +addPrompt) {\r\n      player.worlds.add(actualQuarks)\r\n      addTimers('ascension', ascensionTimer)\r\n      player.goldenQuarksTimer += gqTimer\r\n      addTimers('octeracts', octeractTime)\r\n\r\n      await Alert(i18next.t('importexport.promocodes.add.reward', {\r\n        a: player.worlds.toString(actualQuarks),\r\n        b: ascensionTimerText,\r\n        c: gqTimerText,\r\n        d: octeractTimeText,\r\n        e: remaining,\r\n        f: timeToNext.toLocaleString(navigator.language)\r\n      }))\r\n    } else {\r\n      await Alert(i18next.t('importexport.promocodes.add.wrong', {\r\n        w: addPrompt,\r\n        x: first + second,\r\n        y: remaining,\r\n        z: timeToNext.toLocaleString(navigator.language)\r\n      }))\r\n    }\r\n\r\n  } else if (input === 'sub') {\r\n    const amount = 1 + window.crypto.getRandomValues(new Uint16Array(1))[0] % 16 // [1, 16]\r\n    const quarks = Number(player.worlds)\r\n    await Alert(i18next.t('importexport.promocodes.sub.subbed', { x: amount }))\r\n\r\n    if (quarks < amount) {\r\n      await Alert(i18next.t('importexport.promocodes.sub.gave', {\r\n        x: amount - quarks,\r\n        y: amount\r\n      }))\r\n    }\r\n\r\n    player.worlds.sub(quarks < amount ? amount - quarks : amount)\r\n  } else if (input === 'gamble') {\r\n    if (\r\n      typeof player.skillCode === 'number' ||\r\n            typeof localStorage.getItem('saveScumIsCheating') === 'string'\r\n    ) {\r\n      if (\r\n        (Date.now() - player.skillCode!) / 1000 < 3600 ||\r\n                (Date.now() - Number(localStorage.getItem('saveScumIsCheating'))) / 1000 < 3600\r\n      ) {\r\n        return el.textContent = i18next.t('importexport.promocodes.gamble.wait')\r\n      }\r\n    }\r\n\r\n    const confirmed = await Confirm(i18next.t('importexport.promocodes.gamble.confirm'))\r\n    if (!confirmed) {\r\n      return el.textContent = i18next.t('importexport.promocodes.gamble.cancelled')\r\n    }\r\n\r\n    const bet = Number(await Prompt(i18next.t('importexport.promocodes.gamble.betPrompt')))\r\n    if (Number.isNaN(bet) || bet <= 0) {\r\n      return el.textContent = i18next.t('general.validation.zeroOrLess')\r\n    } else if (bet > 1e4) {\r\n      return el.textContent = i18next.t('importexport.promocodes.gamble.cheaters')\r\n    } else if (Number(player.worlds) < bet) {\r\n      return el.textContent = i18next.t('general.validation.moreThanPlayerHas')\r\n    }\r\n\r\n    localStorage.setItem('saveScumIsCheating', Date.now().toString())\r\n    const dice = window.crypto.getRandomValues(new Uint8Array(1))[0] % 6 + 1 // [1, 6]\r\n\r\n    if (dice === 1) {\r\n      const won = bet * .25 // lmao\r\n      player.worlds.add(won, false)\r\n\r\n      player.skillCode = Date.now()\r\n      return el.textContent = i18next.t('importexport.promocodes.gamble.won', { x: won })\r\n    }\r\n\r\n    player.worlds.sub(bet)\r\n    el.textContent = i18next.t('importexport.promocodes.gamble.lost', { x: bet })\r\n  } else if (input === 'time') {\r\n    const availableUses = timeCodeAvailableUses()\r\n    if (availableUses === 0) {\r\n      return Alert(i18next.t('importexport.promocodes.time.wait'))\r\n    }\r\n\r\n    const rewardMult = timeCodeRewardMultiplier()\r\n\r\n    const random = Math.random() * 15000 // random time within 15 seconds\r\n    const start = Date.now()\r\n    const playerConfirmed = await Confirm(i18next.t('importexport.promocodes.time.confirm', {\r\n      x: format(2500 + 125 * player.cubeUpgrades[61], 0, true),\r\n      y: format(rewardMult, 2, true)\r\n    }))\r\n\r\n    if (playerConfirmed) {\r\n      const diff = Math.abs(Date.now() - (start + random))\r\n      player.promoCodeTiming.time = Date.now()\r\n\r\n      if (diff <= (2500 + 125 * player.cubeUpgrades[61])) {\r\n        const reward = Math.floor(Math.min(1000, (125 + 25 * player.highestSingularityCount)) * (1 + player.cubeUpgrades[61] / 50))\r\n        let actualQuarkAward = player.worlds.applyBonus(reward)\r\n\r\n        if (actualQuarkAward > 66666) {\r\n          actualQuarkAward = Math.pow(actualQuarkAward, 0.35) * Math.pow(66666, 0.65)\r\n        }\r\n\r\n        player.worlds.add(actualQuarkAward * rewardMult, false)\r\n        return Alert(i18next.t('importexport.promocodes.time.won', {\r\n          x: format(actualQuarkAward * rewardMult, 0, true)\r\n        }))\r\n      } else {\r\n        return Alert(i18next.t('importexport.promocodes.time.lost'))\r\n      }\r\n    }\r\n  } else if (input === 'spoiler') {\r\n    const perSecond = octeractGainPerSecond()\r\n    if (perSecond > 1) {\r\n      return Alert(i18next.t('importexport.promocodes.spoiler.moreThan1', { x: format(perSecond, 2, true) }))\r\n    } else {\r\n      return Alert(i18next.t('importexport.promocodes.spoiler.one', { x: format(1 / perSecond, 2, true) }))\r\n    }\r\n\r\n  } else {\r\n    el.textContent = i18next.t('importexport.promocodes.invalid')\r\n  }\r\n\r\n  const saved = await saveSynergy() // should fix refresh bug where you can continuously enter promocodes\r\n\r\n  if (!saved) {\r\n    return\r\n  }\r\n\r\n  Synergism.emit('promocode', input)\r\n\r\n  setTimeout(() => el.textContent = '', 15000)\r\n}\r\n\r\nconst addCodeSingularityPerkBonus = () : number => {\r\n  const levels = [10, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 235, 240]\r\n  let count = 0\r\n  for (let i = 0; i < levels.length; i++) {\r\n    if (player.highestSingularityCount >= levels[i]) {\r\n      count += 1\r\n      continue\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n  return 1 + count / 5\r\n}\r\n\r\nexport const addCodeMaxUses = () => {\r\n  let calc5uses = Math.floor(player.shopUpgrades.calculator5 / 10)\r\n  if (player.shopUpgrades.calculator5 === shopData.calculator5.maxLevel) {\r\n    calc5uses += 6\r\n  }\r\n\r\n  const arr = [\r\n    24,                                                                                 // base\r\n    2 * player.shopUpgrades.calculator2,                                                // PL-AT X\r\n    player.shopUpgrades.calculator4 === shopData.calculator4.maxLevel ? 32 : 0,         // PL-AT \u03B4\r\n    calc5uses,                                                                          // PL-AT \u0393\r\n    player.shopUpgrades.calculator6 === shopData.calculator6.maxLevel ? 24 : 0          // PL_AT _\r\n  ]\r\n\r\n  let maxUses = sumContents(arr)\r\n\r\n  arr.push(addCodeSingularityPerkBonus())\r\n  maxUses *= addCodeSingularityPerkBonus()\r\n\r\n  return {\r\n    list: arr,\r\n    total: Math.ceil(maxUses)\r\n  }\r\n}\r\n\r\nexport const addCodeInterval = () => {\r\n  const arr = [\r\n    hour,  // base value\r\n    (1 - 0.04 * player.shopUpgrades.calculator4),\r\n    (1 - Math.min(.6, (player.highestSingularityCount >= 125 ? player.highestSingularityCount / 800 : 0)\r\n                            + (player.highestSingularityCount >= 200 ? player.highestSingularityCount / 800 : 0))),\r\n    player.runelevels[6] > 0 ? 0.8 : 1,\r\n    1 / addCodeSingularityPerkBonus()\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    time: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const addCodeAvailableUses = (): number => {\r\n  const maxUses = addCodeMaxUses().total\r\n  const timeInterval = addCodeInterval().time\r\n\r\n  return Math.floor(Math.min(maxUses, (Date.now() - player.rngCode) / timeInterval))\r\n}\r\n\r\nexport const addCodeTimeToNextUse = (): number => {\r\n  const timeToFirst = Math.floor(addCodeInterval().time + player.rngCode - Date.now())/1000\r\n\r\n  if (timeToFirst > 0) {\r\n    return timeToFirst\r\n  } else if (addCodeAvailableUses() == addCodeMaxUses().total) {\r\n    return 0\r\n  } else {\r\n    const addTimerElapsedTime = Date.now() - player.rngCode\r\n    const remainder = addTimerElapsedTime - addCodeInterval().time * addCodeAvailableUses()\r\n\r\n    return Math.floor(addCodeInterval().time - remainder) / 1000\r\n  }\r\n}\r\n\r\nexport const addCodeBonuses = () => {\r\n  const perkRewardDivisor = addCodeSingularityPerkBonus()\r\n\r\n  let commonQuarkMult = 1 + 0.14 * player.shopUpgrades.calculator // Calculator Shop Upgrade (+14% / level)\r\n  commonQuarkMult *= (player.shopUpgrades.calculator2 === shopData.calculator2.maxLevel)? 1.25: 1 // Calculator 2 Max Level (+25%)\r\n  commonQuarkMult /= perkRewardDivisor\r\n\r\n  const sampledMult = Math.max(0.4 + 0.02 * player.shopUpgrades.calculator3, 2/5 + (window.crypto.getRandomValues(new Uint16Array(2))[0] % 128) / 640) // [0.4, 0.6], slightly biased in favor of 0.4. =)\r\n  const minMult = 0.4 + 0.02 * player.shopUpgrades.calculator3\r\n  const maxMult = 0.6\r\n\r\n  const quarkBase = commonQuarkMult * quarkHandler().perHour\r\n\r\n  // Calculator 3: Adds ascension timer.  Also includes Expert Pack multiplier.\r\n  const ascMult = (player.singularityUpgrades.expertPack.level > 0) ? 1.2 : 1\r\n  const ascensionTimer = 60 * player.shopUpgrades.calculator3 * ascMult / perkRewardDivisor\r\n\r\n  // Calculator 5: Adds GQ export timer.\r\n  const gqTimer = 6 * player.shopUpgrades.calculator5  / perkRewardDivisor\r\n\r\n  // Calculator 6: Octeract Generation\r\n  const octeractTime = player.shopUpgrades.calculator6  / perkRewardDivisor\r\n\r\n  return {\r\n    quarks: sampledMult * quarkBase, // The quarks to actually reward (if not for stats)\r\n    minQuarks: minMult * quarkBase,\r\n    maxQuarks: maxMult * quarkBase,\r\n    ascensionTimer,\r\n    gqTimer,\r\n    octeractTime\r\n  }\r\n}\r\n\r\nconst timeCodeAvailableUses = (): number => {\r\n  return ((Date.now() - player.promoCodeTiming.time) / 1000 < 900) ? 0 : 1\r\n}\r\n\r\nconst timeCodeTimeToNextUse = (): number => {\r\n  return 900 - ((Date.now() - player.promoCodeTiming.time) / 1000)\r\n}\r\n\r\nconst timeCodeRewardMultiplier = (): number => {\r\n  return Math.min(24, (Date.now() - player.promoCodeTiming.time) / (1000 * 3600))\r\n}\r\n\r\nconst dailyCodeFormatFreeLevelMessage = (upgradeKey: string, freeLevelAmount: number): string => {\r\n  const upgradeNiceName = (upgradeKey in singularityData)\r\n    ? i18next.t(`singularity.data.${upgradeKey}.name`)\r\n    : i18next.t(`octeract.data.${upgradeKey}.name`)\r\n  return `\\n+${freeLevelAmount} extra levels of '${upgradeNiceName}'`\r\n}\r\n\r\nconst dailyCodeReward = () => {\r\n  let quarks = 0\r\n  let goldenQuarks = 0\r\n\r\n  const ascended = player.ascensionCount > 0\r\n  const singularity = player.highestSingularityCount > 0\r\n  if (player.reincarnationCount > 0 || ascended || singularity) {\r\n    quarks += 20\r\n  }\r\n  if (player.challengecompletions[6] > 0 || ascended || singularity) {\r\n    quarks += 20\r\n  }  // 40\r\n  if (player.challengecompletions[7] > 0 || ascended || singularity) {\r\n    quarks += 30\r\n  } // 70\r\n  if (player.challengecompletions[8] > 0 || ascended || singularity) {\r\n    quarks += 30\r\n  } // 100\r\n  if (player.challengecompletions[9] > 0 || ascended || singularity) {\r\n    quarks += 40\r\n  } // 140\r\n  if (player.challengecompletions[10] > 0 || ascended || singularity) {\r\n    quarks += 60\r\n  } // 200\r\n  if (ascended || singularity) {\r\n    quarks += 50\r\n  } // 250\r\n  if (player.challengecompletions[11] > 0 || singularity) {\r\n    quarks += 50\r\n  } // 300\r\n  if (player.challengecompletions[12] > 0 || singularity) {\r\n    quarks += 50\r\n  } // 350\r\n  if (player.challengecompletions[13] > 0 || singularity) {\r\n    quarks += 50\r\n  } // 400\r\n  if (player.challengecompletions[14] > 0 || singularity) {\r\n    quarks += 100\r\n  } // 500\r\n  if (player.researches[200] === G.researchMaxLevels[200]) {\r\n    quarks += 250\r\n  } // 750\r\n  if (player.cubeUpgrades[50] === 100000) {\r\n    quarks += 250\r\n  } // 1000\r\n  if (player.platonicUpgrades[5] > 0) {\r\n    quarks += 250\r\n  } // 1250\r\n  if (player.platonicUpgrades[10] > 0) {\r\n    quarks += 500\r\n  } // 1750\r\n  if (player.platonicUpgrades[15] > 0) {\r\n    quarks += 750\r\n  } // 2500\r\n  if (player.challenge15Exponent > 1e18) {\r\n    quarks += Math.floor(1000 * (Math.log10(player.challenge15Exponent) - 18))\r\n  } // at least 2500\r\n  if (player.platonicUpgrades[20] > 0) {\r\n    quarks += 2500\r\n  } // at least 5k\r\n\r\n  quarks *= 1 + 0.05 * player.shopUpgrades.shopImprovedDaily\r\n  quarks = Math.floor(quarks)\r\n\r\n  if (singularity) {\r\n    goldenQuarks += 2 + 3 * player.highestSingularityCount\r\n    goldenQuarks *= 1 + 0.2 * player.shopUpgrades.shopImprovedDaily2\r\n    goldenQuarks *= 1 + 0.15 * player.shopUpgrades.shopImprovedDaily3\r\n    goldenQuarks *= 1 + player.shopUpgrades.shopImprovedDaily4\r\n  }\r\n\r\n  return {\r\n    quarks,\r\n    goldenQuarks\r\n  }\r\n}\r\n\r\nexport const handleLastModified = (lastModified: number) => {\r\n  const localStorageFirstPlayed = localStorage.getItem('firstPlayed')\r\n  const lastModifiedDate = new Date(lastModified)\r\n\r\n  if (localStorageFirstPlayed === null) {\r\n    localStorage.setItem('firstPlayed', lastModifiedDate.toISOString())\r\n    return\r\n  }\r\n\r\n  const localFirstPlayedDate = new Date(localStorageFirstPlayed)\r\n\r\n  // The larger the ms value, the newer the file.\r\n  // So if the current oldest date is newer than the last modified date\r\n  // for the new file, set the oldest date to the last modified.\r\n  if (localFirstPlayedDate.getTime() > lastModifiedDate.getTime()) {\r\n    player.firstPlayed = lastModifiedDate.toISOString()\r\n    localStorage.setItem('firstPlayed', player.firstPlayed)\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { Alert, Confirm, Prompt, revealStuff } from './UpdateHTML'\r\nimport { calculatePowderConversion, calculateSummationNonLinear, calculateTimeAcceleration } from './Calculate'\r\nimport type { Player } from './types/Synergism'\r\nimport type { IMultiBuy } from './Cubes'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\n\r\n/**\r\n * Standardization of metadata contained for each shop upgrade.\r\n */\r\nexport enum shopUpgradeTypes {\r\n    CONSUMABLE = 'consume',\r\n    UPGRADE = 'upgrade'\r\n}\r\n\r\ntype shopResetTier = 'Reincarnation' | 'Ascension' | 'Singularity' | 'SingularityVol2' | 'SingularityVol3' | 'SingularityVol4' | 'Exalt'\r\n\r\nexport interface IShopData {\r\n    price: number\r\n    priceIncrease: number\r\n    maxLevel: number\r\n    type: shopUpgradeTypes\r\n    refundable: boolean\r\n    refundMinimumLevel: number\r\n    tier: shopResetTier\r\n}\r\n\r\nexport const shopData: Record<keyof Player['shopUpgrades'], IShopData> = {\r\n  offeringPotion: {\r\n    price: 100,\r\n    priceIncrease: 0,\r\n    maxLevel: 999999999,\r\n    type: shopUpgradeTypes.CONSUMABLE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0,\r\n    tier: 'Reincarnation'\r\n  },\r\n  obtainiumPotion: {\r\n    tier: 'Reincarnation',\r\n    price: 100,\r\n    priceIncrease: 0,\r\n    maxLevel: 999999999,\r\n    type: shopUpgradeTypes.CONSUMABLE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  offeringEX: {\r\n    tier: 'Reincarnation',\r\n    price: 150,\r\n    priceIncrease: 10,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  offeringAuto: {\r\n    tier: 'Reincarnation',\r\n    price: 150,\r\n    priceIncrease: 10,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 1\r\n  },\r\n  obtainiumEX: {\r\n    tier: 'Reincarnation',\r\n    price: 150,\r\n    priceIncrease: 10,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  obtainiumAuto: {\r\n    tier: 'Reincarnation',\r\n    price: 150,\r\n    priceIncrease: 10,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 1\r\n  },\r\n  instantChallenge: {\r\n    tier: 'Reincarnation',\r\n    price: 300,\r\n    priceIncrease: 99999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  antSpeed: {\r\n    tier: 'Reincarnation',\r\n    price: 200,\r\n    priceIncrease: 25,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  cashGrab: {\r\n    tier: 'Reincarnation',\r\n    price: 100,\r\n    priceIncrease: 40,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopTalisman: {\r\n    tier: 'Reincarnation',\r\n    price: 1500,\r\n    priceIncrease: 99999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPass: {\r\n    tier: 'Ascension',\r\n    price: 500,\r\n    priceIncrease: 75,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  challengeExtension: {\r\n    tier: 'Ascension',\r\n    price: 500,\r\n    priceIncrease: 250,\r\n    maxLevel: 5,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  challengeTome: {\r\n    tier: 'Ascension',\r\n    price: 500,\r\n    priceIncrease: 250,\r\n    maxLevel: 15,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  cubeToQuark: {\r\n    tier: 'Ascension',\r\n    price: 2000,\r\n    priceIncrease: 99999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  tesseractToQuark: {\r\n    tier: 'Ascension',\r\n    price: 3500,\r\n    priceIncrease: 99999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  hypercubeToQuark: {\r\n    tier: 'Ascension',\r\n    price: 5000,\r\n    priceIncrease: 99999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPass2: {\r\n    tier: 'Ascension',\r\n    price: 2500,\r\n    priceIncrease: 250,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPass3: {\r\n    tier: 'Ascension',\r\n    price: 5000,\r\n    priceIncrease: 500,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  chronometer: {\r\n    tier: 'Ascension',\r\n    price: 2000,\r\n    priceIncrease: 500,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  infiniteAscent: {\r\n    tier: 'Ascension',\r\n    price: 50000,\r\n    priceIncrease: 9999999,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  calculator: {\r\n    tier: 'Reincarnation',\r\n    price: 1000,\r\n    priceIncrease: 500,\r\n    maxLevel: 5,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 1\r\n  },\r\n  calculator2: {\r\n    tier: 'Ascension',\r\n    price: 3000,\r\n    priceIncrease: 1000,\r\n    maxLevel: 12,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  calculator3: {\r\n    tier: 'Ascension',\r\n    price: 10000,\r\n    priceIncrease: 2000,\r\n    maxLevel: 10,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  calculator4: {\r\n    tier: 'Singularity',\r\n    price: 1e7,\r\n    priceIncrease: 1e6,\r\n    maxLevel: 10,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  calculator5: {\r\n    tier: 'SingularityVol2',\r\n    price: 1e8,\r\n    priceIncrease: 1e8,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  calculator6: {\r\n    tier: 'SingularityVol3',\r\n    price: 1e11,\r\n    priceIncrease: 2e10,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  constantEX: {\r\n    tier: 'Ascension',\r\n    price: 100000,\r\n    priceIncrease: 899999,\r\n    maxLevel: 2,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  powderEX: {\r\n    tier: 'Ascension',\r\n    price: 1000,\r\n    priceIncrease: 750,\r\n    maxLevel: 50,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  chronometer2: {\r\n    tier: 'Ascension',\r\n    price: 5000,\r\n    priceIncrease: 1500,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  chronometer3: {\r\n    tier: 'Singularity',\r\n    price: 250,\r\n    priceIncrease: 250,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPassY: {\r\n    tier: 'Ascension',\r\n    price: 10000,\r\n    priceIncrease: 1500,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: true,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPassZ: {\r\n    tier: 'Singularity',\r\n    price: 250,\r\n    priceIncrease: 250,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  challengeTome2: {\r\n    tier: 'Singularity',\r\n    price: 1000000,\r\n    priceIncrease: 1000000,\r\n    maxLevel: 5,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  instantChallenge2: {\r\n    tier: 'Singularity',\r\n    price: 20000000,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  cubeToQuarkAll: {\r\n    tier: 'SingularityVol2',\r\n    price: 2222222,\r\n    priceIncrease: 0,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  cashGrab2: {\r\n    tier: 'SingularityVol2',\r\n    price: 5000,\r\n    priceIncrease: 5000,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  chronometerZ: {\r\n    tier: 'SingularityVol2',\r\n    price: 12500,\r\n    priceIncrease: 12500,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  offeringEX2: {\r\n    tier: 'SingularityVol2',\r\n    price: 10000,\r\n    priceIncrease: 10000,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  obtainiumEX2: {\r\n    tier: 'SingularityVol2',\r\n    price: 10000,\r\n    priceIncrease: 10000,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  powderAuto: {\r\n    tier: 'SingularityVol2',\r\n    price: 5e6,\r\n    priceIncrease: 0,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPassLost: {\r\n    tier: 'SingularityVol2',\r\n    price: 1000000,\r\n    priceIncrease: 25000,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  challenge15Auto: {\r\n    tier: 'SingularityVol3',\r\n    price: 5e11,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  extraWarp: {\r\n    tier: 'SingularityVol3',\r\n    price: 1.25e11,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  autoWarp: {\r\n    tier: 'SingularityVol3',\r\n    price: 5e11,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  improveQuarkHept: {\r\n    tier: 'Ascension',\r\n    price: 2e5 - 1,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  improveQuarkHept2: {\r\n    tier: 'Singularity',\r\n    price: 2e7 - 1,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  improveQuarkHept3: {\r\n    tier: 'SingularityVol2',\r\n    price: 2e9 - 1,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  improveQuarkHept4: {\r\n    tier: 'SingularityVol3',\r\n    price: 2e11 - 1,\r\n    priceIncrease: 0,\r\n    maxLevel: 1,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopImprovedDaily: {\r\n    tier: 'Ascension',\r\n    price: 5000,\r\n    priceIncrease: 2500,\r\n    maxLevel: 20,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopImprovedDaily2: {\r\n    tier: 'Singularity',\r\n    price: 500000,\r\n    priceIncrease: 500000,\r\n    maxLevel: 10,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopImprovedDaily3: {\r\n    tier: 'SingularityVol2',\r\n    price: 5000000,\r\n    priceIncrease: 12500000,\r\n    maxLevel: 15,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopImprovedDaily4: {\r\n    tier: 'SingularityVol3',\r\n    price: 5e9,\r\n    priceIncrease: 5e9,\r\n    maxLevel: 25,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  offeringEX3: {\r\n    tier: 'SingularityVol3',\r\n    price: 1,\r\n    priceIncrease: 1.25e12,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  obtainiumEX3: {\r\n    tier: 'SingularityVol3',\r\n    price: 1,\r\n    priceIncrease: 1.25e12,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  improveQuarkHept5: {\r\n    tier: 'SingularityVol4',\r\n    price: 1,\r\n    priceIncrease: 2.5e13,\r\n    maxLevel: 100,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  chronometerInfinity: {\r\n    tier: 'SingularityVol4',\r\n    price: 1,\r\n    priceIncrease: 1.25e12,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  seasonPassInfinity: {\r\n    tier: 'SingularityVol4',\r\n    price: 1,\r\n    priceIncrease: 1.25e12,\r\n    maxLevel: 1000,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  },\r\n  shopSingularityPenaltyDebuff: {\r\n    tier: 'Exalt',\r\n    price: 1e17,\r\n    priceIncrease: 9.99e19,\r\n    maxLevel: 4,\r\n    type: shopUpgradeTypes.UPGRADE,\r\n    refundable: false,\r\n    refundMinimumLevel: 0\r\n  }\r\n}\r\n\r\n//Names of shop upgrades || Top row indicates potions, and all other upgrades are labeled in order.\r\n//If you are adding more upgrades please make sure the order of labelled upgrades is correct!\r\ntype ShopUpgradeNames = 'offeringPotion' | 'obtainiumPotion' |\r\n                        'offeringEX' | 'offeringAuto' | 'offeringEX2' | 'obtainiumEX' | 'obtainiumAuto' | 'obtainiumEX2' | 'instantChallenge' | 'instantChallenge2' |\r\n                        'antSpeed' | 'cashGrab' | 'cashGrab2' | 'shopTalisman' | 'seasonPass' | 'challengeExtension' | 'challengeTome' | 'challengeTome2' |\r\n                        'cubeToQuark' | 'tesseractToQuark' | 'cubeToQuarkAll' | 'hypercubeToQuark' | 'seasonPass2' | 'seasonPass3' | 'seasonPassY' | 'seasonPassZ' |\r\n                        'seasonPassLost' | 'chronometer' | 'chronometer2'| 'chronometer3'| 'chronometerZ' | 'infiniteAscent' | 'calculator' | 'calculator2' |\r\n                        'calculator3' | 'constantEX' | 'powderEX' | 'powderAuto' | 'challenge15Auto' | 'extraWarp' | 'autoWarp' | //And Golden Quarks\r\n                        'improveQuarkHept' | 'improveQuarkHept2' | 'improveQuarkHept3' | 'improveQuarkHept4' | 'shopImprovedDaily' |\r\n                        'shopImprovedDaily2' | 'shopImprovedDaily3' | 'shopImprovedDaily4' | 'calculator4' | 'calculator5' | 'calculator6' |\r\n                        'offeringEX3' | 'obtainiumEX3' | 'improveQuarkHept5' | 'seasonPassInfinity' | 'chronometerInfinity' | 'shopSingularityPenaltyDebuff'\r\n\r\nexport const getShopCosts = (input: ShopUpgradeNames) => {\r\n\r\n  if (shopData[input].type === shopUpgradeTypes.CONSUMABLE || shopData[input].maxLevel === 1) {\r\n    return shopData[input].price\r\n  } else {\r\n    const priceIncreaseMult = player.shopUpgrades[input]\r\n    return shopData[input].price + shopData[input].priceIncrease * priceIncreaseMult\r\n  }\r\n}\r\n\r\nexport const shopDescriptions = (input: ShopUpgradeNames) => {\r\n  const rofl = DOMCacheGetOrSet('quarkdescription')!\r\n  const lol = DOMCacheGetOrSet('quarkeffect')!\r\n  const refundable = DOMCacheGetOrSet('quarkRefundable')!\r\n\r\n  rofl.textContent = i18next.t(`shop.upgradeDescriptions.${input}`)\r\n\r\n  shopData[input].refundable ? // TODO(@KhafraDev): i18n\r\n    refundable.textContent = `This item is refundable! Will be set to level ${shopData[input].refundMinimumLevel} when refunded.`:\r\n    refundable.textContent = i18next.t('shop.cannotRefund')\r\n\r\n  switch (input) {\r\n    case 'offeringPotion':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.offeringPotion', { amount: format((7200 * player.offeringpersecond * calculateTimeAcceleration().mult * +player.singularityUpgrades.potionBuff.getEffect().bonus), 0, true) })\r\n      break\r\n    case 'obtainiumPotion':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumPotion', { amount: format((7200 * player.maxobtainiumpersecond * calculateTimeAcceleration().mult * +player.singularityUpgrades.potionBuff.getEffect().bonus), 0, true) })\r\n      break\r\n    case 'offeringEX':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.offeringEX', { amount: format(4 * player.shopUpgrades.offeringEX, 2, true) })\r\n      break\r\n    case 'offeringAuto':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.offeringAuto', { amount1: format(Math.pow(2, player.shopUpgrades.offeringAuto)), amount2: format(2 * player.shopUpgrades.offeringAuto, 2) })\r\n      break\r\n    case 'obtainiumEX':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumEX', { amount: format(4 * player.shopUpgrades.obtainiumEX, 2, true) })\r\n      break\r\n    case 'obtainiumAuto':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumAuto', { amount: format(player.shopUpgrades.obtainiumAuto * 2, 2) })\r\n      break\r\n    case 'instantChallenge':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.instantChallenge')\r\n      break\r\n    case 'antSpeed':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.antSpeed', { amount: format(Math.pow(1.2, player.shopUpgrades.antSpeed), 2) })\r\n      break\r\n    case 'cashGrab':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.cashGrab', { amount: format(player.shopUpgrades.cashGrab, 2) })\r\n      break\r\n    case 'shopTalisman':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopTalisman')\r\n      break\r\n    case 'seasonPass':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPass', { amount: format(2.25 * player.shopUpgrades.seasonPass) })\r\n      break\r\n    case 'challengeExtension':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.challengeExtension', { amount: format(2*player.shopUpgrades.challengeExtension) })\r\n      break\r\n    case 'challengeTome':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.challengeTome', { amount1: format(20*player.shopUpgrades.challengeTome), amount2: format(1 - (player.shopUpgrades.challengeTome + player.shopUpgrades.challengeTome2) / 100, 2, true) })\r\n      break\r\n    case 'cubeToQuark':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.cubeToQuark')\r\n      break\r\n    case 'tesseractToQuark':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.tesseractToQuark')\r\n      break\r\n    case 'hypercubeToQuark':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.hypercubeToQuark')\r\n      break\r\n    case 'seasonPass2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPass2', { amount: format(1.5 * player.shopUpgrades.seasonPass2) })\r\n      break\r\n    case 'seasonPass3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPass3', { amount: format(1.5 * player.shopUpgrades.seasonPass3) })\r\n      break\r\n    case 'chronometer':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.chronometer', { amount: format(1.2 * player.shopUpgrades.chronometer) })\r\n      break\r\n    case 'infiniteAscent':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.infiniteAscent')\r\n      break\r\n    case 'calculator':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator', { amount1: format(14 * player.shopUpgrades.calculator), bool1: player.shopUpgrades.calculator > 0, bool2: player.shopUpgrades.calculator === shopData.calculator.maxLevel })\r\n      break\r\n    case 'calculator2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator2', { amount1: format(2 * player.shopUpgrades.calculator2), amount2: format((player.shopUpgrades.calculator2 === shopData.calculator2.maxLevel) ? 25: 0) })\r\n      break\r\n    case 'calculator3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator3', { amount1: format(10 * player.shopUpgrades.calculator3), amount2: format(60 * player.shopUpgrades.calculator3) })\r\n      break\r\n    case 'calculator4':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator4', { amount1: format(2 * player.shopUpgrades.calculator4), amount2: player.shopUpgrades.calculator4 == 10 ? 32 : 0 })\r\n      break\r\n    case 'calculator5':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator5', { amount1: format(6 * player.shopUpgrades.calculator5), amount2: Math.floor(player.shopUpgrades.calculator5 / 10) + (player.shopUpgrades.calculator4 === shopData.calculator5.maxLevel ? 6 : 0) })\r\n      break\r\n    case 'calculator6':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.calculator6', { amount1: format(player.shopUpgrades.calculator6), amount2: player.shopUpgrades.calculator6 === shopData.calculator6.maxLevel ? 24 : 0 })\r\n      break\r\n    case 'constantEX':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.constantEX', { amount: format(player.shopUpgrades.constantEX, 0, true) })\r\n      break\r\n    case 'powderEX':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.powderEX', { amount: format(2 * player.shopUpgrades.powderEX) })\r\n      break\r\n    case 'chronometer2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.chronometer2', { amount: format(0.6 * player.shopUpgrades.chronometer2, 1) })\r\n      break\r\n    case 'chronometer3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.chronometer3', { amount: format(1.5 * player.shopUpgrades.chronometer3, 1) })\r\n      break\r\n    case 'seasonPassY':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassY', { amount: format(0.75 * player.shopUpgrades.seasonPassY, 2) })\r\n      break\r\n    case 'seasonPassZ':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassZ', { amount: format(1 * player.shopUpgrades.seasonPassZ * player.singularityCount, 0, true) })\r\n      break\r\n    case 'challengeTome2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.challengeTome2', { amount1: 20 * player.shopUpgrades.challengeTome2, amount2: format(1 - (player.shopUpgrades.challengeTome + player.shopUpgrades.challengeTome2) / 100, 2, true) })\r\n      break\r\n    case 'instantChallenge2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.instantChallenge2', { amount: format(player.shopUpgrades.instantChallenge2 * player.singularityCount, 0) })\r\n      break\r\n    case 'cashGrab2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.cashGrab2', { amount: format(0.5 * player.shopUpgrades.cashGrab2, 1) })\r\n      break\r\n    case 'cubeToQuarkAll':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.cubeToQuarkAll', { amount: format(0.2 * player.shopUpgrades.cubeToQuarkAll, 2) })\r\n      break\r\n    case 'chronometerZ':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.chronometerZ', { amount: format(0.1 * player.singularityCount * player.shopUpgrades.chronometerZ, 2) })\r\n      break\r\n    case 'offeringEX2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.offeringEX2', { amount: format(1 * player.singularityCount * player.shopUpgrades.offeringEX2, 2) })\r\n      break\r\n    case 'obtainiumEX2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumEX2', { amount: format(1 * player.singularityCount * player.shopUpgrades.obtainiumEX2, 2) })\r\n      break\r\n    case 'powderAuto':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.powderAuto', { amount: format(100 / (Math.max(1, player.shopUpgrades.powderAuto) * calculatePowderConversion().mult), 2, true) })\r\n      break\r\n    case 'seasonPassLost':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassLost', { amount: format(0.1 * player.shopUpgrades.seasonPassLost, 2) })\r\n      break\r\n    case 'challenge15Auto':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.challenge15Auto')\r\n      break\r\n    case 'extraWarp':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.extraWarp', { amount: player.shopUpgrades.extraWarp })\r\n      break\r\n    case 'autoWarp':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.autoWarp')\r\n      break\r\n    case 'improveQuarkHept':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept', { amount: 2 * player.shopUpgrades.improveQuarkHept })\r\n      break\r\n    case 'improveQuarkHept2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept2', { amount: 2 * player.shopUpgrades.improveQuarkHept2 })\r\n      break\r\n    case 'improveQuarkHept3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept3', { amount: 2 * player.shopUpgrades.improveQuarkHept3 })\r\n      break\r\n    case 'improveQuarkHept4':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept4', { amount: 2 * player.shopUpgrades.improveQuarkHept4 })\r\n      break\r\n    case 'shopImprovedDaily':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily', { amount: format(5 * player.shopUpgrades.shopImprovedDaily) })\r\n      break\r\n    case 'shopImprovedDaily2':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily2', { amount1: player.shopUpgrades.shopImprovedDaily2, amount2: player.shopUpgrades.shopImprovedDaily2 * 20 })\r\n      break\r\n    case 'shopImprovedDaily3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily3', { amount1: player.shopUpgrades.shopImprovedDaily3, amount2: player.shopUpgrades.shopImprovedDaily3 * 15 })\r\n      break\r\n    case 'shopImprovedDaily4':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily4', { amount1: player.shopUpgrades.shopImprovedDaily4, amount2: player.shopUpgrades.shopImprovedDaily4 * 100 })\r\n      break\r\n    case 'offeringEX3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.offeringEX3', { amount: format(100 * (Math.pow(1.02, player.shopUpgrades.offeringEX3) - 1), 2, true) })\r\n      break\r\n    case 'obtainiumEX3':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumEX3', { amount: format(100 * (Math.pow(1.02, player.shopUpgrades.obtainiumEX3) - 1), 2, true) })\r\n      break\r\n    case 'improveQuarkHept5':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept5', { amount: format(player.shopUpgrades.improveQuarkHept5 / 25, 2, true) })\r\n      break\r\n    case 'seasonPassInfinity':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassInfinity', { amount: format(100 * (Math.pow(1.02, player.shopUpgrades.seasonPassInfinity) - 1), 2, true) })\r\n      break\r\n    case 'chronometerInfinity':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.chronometerInfinity', { amount: format(100 * (Math.pow(1.01, player.shopUpgrades.chronometerInfinity) - 1), 2, true) })\r\n      break\r\n    case 'shopSingularityPenaltyDebuff':\r\n      lol.innerHTML = i18next.t('shop.upgradeEffects.shopSingularityPenaltyDebuff', { amount1: format(player.singularityCount), amount2: format(player.singularityCount - player.shopUpgrades.shopSingularityPenaltyDebuff) })\r\n  }\r\n\r\n}\r\n\r\n//strentax 07/21 Add function to convert code-name display to end-user friendly display of shop upgrades\r\nexport const friendlyShopName = (input: ShopUpgradeNames) => {\r\n  // TODO(i18n): add these under shop.names\r\n  const names: Record<ShopUpgradeNames, string> = {\r\n    offeringPotion: 'Offering Potion',\r\n    obtainiumPotion: 'Obtainium Potion',\r\n    offeringEX: 'Offering EX',\r\n    offeringAuto: 'Offering Auto',\r\n    obtainiumEX: 'Obtainium EX',\r\n    obtainiumAuto: 'Obtainium Auto',\r\n    instantChallenge: 'Instant Challenge Completions',\r\n    antSpeed: 'Ant Speed',\r\n    cashGrab: 'Cash Grab',\r\n    shopTalisman: 'the Plastic talisman',\r\n    seasonPass: 'Season Pass',\r\n    challengeExtension: 'Reincarnation Challenge EX',\r\n    challengeTome: 'Challenge 10 Requirement Reduce',\r\n    cubeToQuark: 'Cube Quarks +50%',\r\n    tesseractToQuark: 'Tesseract Quarks +50%',\r\n    hypercubeToQuark: 'Hypercube Quarks +50%',\r\n    seasonPass2: 'Season Pass 2',\r\n    seasonPass3: 'Season Pass 3',\r\n    chronometer: 'Chronometer 1',\r\n    infiniteAscent: 'Infinite Ascent',\r\n    calculator: 'PL-AT calculator',\r\n    calculator2: 'PL-AT X calculator',\r\n    calculator3: 'PL-AT \u03A9 calculator',\r\n    calculator4: 'PL-AT \u03B4 calculator',\r\n    calculator5: 'PL-AT \u0393 calculator',\r\n    calculator6: 'QUAAA-T calculator',\r\n    constantEX: 'Constant EX',\r\n    powderEX: 'Powder EX',\r\n    chronometer2: 'Chronometer 2',\r\n    chronometer3: 'Chronometer 3',\r\n    seasonPassY: 'Season Pass Y',\r\n    seasonPassZ: 'Season Pass Z',\r\n    challengeTome2: 'Challenge 10 Requirement Reduction 2',\r\n    instantChallenge2: 'Instant Challenge Completions 2',\r\n    cubeToQuarkAll: 'Quark Gain Cube Improvement 2',\r\n    cashGrab2: 'Cash Grab 2',\r\n    chronometerZ: 'Chronometer Z',\r\n    obtainiumEX2: 'Obtainium EX 2',\r\n    offeringEX2: 'Offering EX 2',\r\n    powderAuto: 'Automated Powder',\r\n    seasonPassLost: 'Season Pass LOST',\r\n    challenge15Auto: 'Challenge 15 Automation',\r\n    extraWarp: 'Extra Warp',\r\n    autoWarp: 'a quack powered Warps?',\r\n    improveQuarkHept: 'Quark Hepteract 1',\r\n    improveQuarkHept2: 'Quark Hepteract 2',\r\n    improveQuarkHept3: 'Quark Hepteract 3',\r\n    improveQuarkHept4: 'Quack Hepteract 4',\r\n    shopImprovedDaily: 'Improved Daily Code 1',\r\n    shopImprovedDaily2: 'Improved Daily Code 2',\r\n    shopImprovedDaily3: 'Improved Daily Code 3',\r\n    shopImprovedDaily4: 'Improved Daily Code 4',\r\n    offeringEX3: 'The final Offering Upgrade',\r\n    obtainiumEX3: 'The final Obtainium Upgrade',\r\n    improveQuarkHept5: 'The final Quark Hepteract Improver',\r\n    chronometerInfinity: 'The final Chronometer',\r\n    seasonPassInfinity: 'The final Season pass',\r\n    shopSingularityPenaltyDebuff: 'A Singularity Tenderizer'\r\n  }\r\n\r\n  return names[input]\r\n\r\n}\r\n\r\nexport const buyShopUpgrades = async (input: ShopUpgradeNames) => {\r\n  const shopItem = shopData[input]\r\n\r\n  if (player.shopUpgrades[input] >= shopItem.maxLevel) {\r\n    return player.shopConfirmationToggle\r\n      ? Alert(`You can't purchase ${friendlyShopName(input)} because you are already at the maximum ${shopItem.type === shopUpgradeTypes.UPGRADE ? 'level' : 'capacity'}!`)\r\n      : null\r\n  } else if (Number(player.worlds) < getShopCosts(input)) {\r\n    return player.shopConfirmationToggle\r\n      ? Alert(`You can't purchase ${friendlyShopName(input)} because you don't have enough Quarks!`)\r\n      : null\r\n  }\r\n\r\n  // Actually lock for HTML exploit\r\n  if (!isShopUpgradeUnlocked(input)) {\r\n    return Alert(`You do not have the right to purchase ${friendlyShopName(input)}!`)\r\n  }\r\n\r\n  let buyData:IMultiBuy\r\n  const maxBuyAmount = shopItem.maxLevel - player.shopUpgrades[input]\r\n  let buyAmount\r\n  let buyCost\r\n  switch (player.shopBuyMaxToggle) {\r\n    case false:\r\n      buyAmount = 1\r\n      buyCost = getShopCosts(input)\r\n      break\r\n    case 'TEN':\r\n      buyData = calculateSummationNonLinear(player.shopUpgrades[input], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, Math.min(10, maxBuyAmount))\r\n      buyAmount = buyData.levelCanBuy - player.shopUpgrades[input]\r\n      buyCost = buyData.cost\r\n      break\r\n    default:\r\n      buyData = calculateSummationNonLinear(player.shopUpgrades[input], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, maxBuyAmount)\r\n      buyAmount = buyData.levelCanBuy - player.shopUpgrades[input]\r\n      buyCost = buyData.cost\r\n  }\r\n\r\n  const singular = shopItem.maxLevel === 1\r\n  const merch = buyAmount.toLocaleString() + (shopItem.type === shopUpgradeTypes.UPGRADE ? ' level' : ' vial') + (buyAmount === 1 ? '' : 's')\r\n  const noRefunds = shopItem.refundable ? '' : '\\n\\n\\u26A0\\uFE0F !! No Refunds !! \\u26A0\\uFE0F'\r\n  const maxPots = shopItem.type === shopUpgradeTypes.CONSUMABLE ? '\\n\\nType -1 in Buy: ANY to buy equal amounts of both Potions.' : ''\r\n\r\n  if (player.shopBuyMaxToggle === 'ANY' && !singular) {\r\n    const buyInput = await Prompt(`You can afford to purchase up to ${merch} of ${friendlyShopName(input)} for ${buyCost.toLocaleString()} Quarks. How many would you like to buy?${maxPots + noRefunds}`)\r\n    let buyAny\r\n    if (Number(buyInput) === -1 && shopItem.type === shopUpgradeTypes.CONSUMABLE) {\r\n      const other = input === 'offeringPotion' ? 'obtainiumPotion' : 'offeringPotion'\r\n      const toSpend = Math.max(+player.worlds / 2, +player.worlds - buyCost)\r\n      const otherPot:IMultiBuy = calculateSummationNonLinear(player.shopUpgrades[other], shopData[other].price, toSpend, shopData[other].priceIncrease / shopData[other].price, shopData[other].maxLevel-player.shopUpgrades[other])\r\n      player.worlds.sub(otherPot.cost)\r\n      player.shopUpgrades[other] = otherPot.levelCanBuy\r\n      buyAny = buyAmount\r\n    } else {\r\n      buyAny = Math.floor(Number(buyInput))\r\n      if (buyAny === 0) {\r\n        return\r\n      } else if (Number.isNaN(buyAny) || !Number.isFinite(buyAny) || buyAny < 0) {\r\n        return Alert('Amount must be a finite, positive integer.')\r\n      }\r\n    }\r\n    const anyData:IMultiBuy = calculateSummationNonLinear(player.shopUpgrades[input], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, Math.min(buyAny, buyAmount))\r\n    player.worlds.sub(anyData.cost)\r\n    player.shopUpgrades[input] = anyData.levelCanBuy\r\n    revealStuff()\r\n    return\r\n  }\r\n\r\n  let p = true\r\n  if (player.shopConfirmationToggle || (!shopItem.refundable && player.shopBuyMaxToggle !== false)) {\r\n    p = await Confirm(`You are about to ${singular ? 'unlock' : `purchase ${merch} of`} ${friendlyShopName(input)} for ${buyCost.toLocaleString()} Quarks. Press 'OK' to finalize purchase.${maxPots + noRefunds}`)\r\n  }\r\n  if (p) {\r\n    player.worlds.sub(buyCost)\r\n    player.shopUpgrades[input] += buyAmount\r\n    revealStuff()\r\n  }\r\n}\r\n\r\nexport const autoBuyConsumable = (input: ShopUpgradeNames) => {\r\n  const maxBuyablePotions = Math.floor(Math.min(Number(player.worlds) / 100, Math.min(shopData[input].maxLevel - player.shopUpgrades[input], Math.pow(player.highestSingularityCount, 2) * 100)))\r\n\r\n  if (shopData[input].maxLevel <= player.shopUpgrades[input]) {\r\n    return\r\n  }\r\n  if (maxBuyablePotions <= 0) {\r\n    return\r\n  }\r\n\r\n  player.worlds.sub(100 * maxBuyablePotions)\r\n  player.shopUpgrades[input] += maxBuyablePotions\r\n}\r\n\r\nexport const useConsumable = async (input: ShopUpgradeNames, automatic = false, used = 1, spend = true) => {\r\n\r\n  const p = (player.shopConfirmationToggle && !automatic)\r\n    ? await Confirm('Would you like to use some of this potion?')\r\n    : true\r\n\r\n  if (p) {\r\n    const multiplier = +player.singularityUpgrades.potionBuff.getEffect().bonus *\r\n                           +player.singularityUpgrades.potionBuff2.getEffect().bonus *\r\n                           +player.singularityUpgrades.potionBuff3.getEffect().bonus *\r\n                           +player.octeractUpgrades.octeractAutoPotionEfficiency.getEffect().bonus *\r\n                           used\r\n\r\n    if (input === 'offeringPotion') {\r\n      if (player.shopUpgrades.offeringPotion >= used || !spend) {\r\n        player.shopUpgrades.offeringPotion -= (spend ? used: 0)\r\n        player.runeshards += Math.floor(7200 * player.offeringpersecond * calculateTimeAcceleration().mult * multiplier)\r\n        player.runeshards = Math.min(1e300, player.runeshards)\r\n      }\r\n    } else if (input === 'obtainiumPotion') {\r\n      if (player.shopUpgrades.obtainiumPotion >= used || !spend) {\r\n        player.shopUpgrades.obtainiumPotion -= (spend? used: 0)\r\n        player.researchPoints += Math.floor(7200 * player.maxobtainiumpersecond * calculateTimeAcceleration().mult * multiplier)\r\n        player.researchPoints = Math.min(1e300, player.researchPoints)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const resetShopUpgrades = async (ignoreBoolean = false) => {\r\n  let p = false\r\n  if (!ignoreBoolean) {\r\n    p = player.shopConfirmationToggle\r\n      ? await Confirm('This will fully refund most of your permanent upgrades for an upfront cost of 15 Quarks. Would you like to do this?')\r\n      : true\r\n  }\r\n\r\n  if (p || ignoreBoolean) {\r\n    const singularityQuarks = player.quarksThisSingularity\r\n    let refunds = false\r\n    for (const shopItem in shopData) {\r\n      const key = shopItem as keyof typeof shopData\r\n      const item = shopData[key]\r\n      if (item.refundable && player.shopUpgrades[key] > item.refundMinimumLevel) {\r\n        refunds = true\r\n        // Determines how many quarks one would not be refunded, based on minimum refund level\r\n        const doNotRefund = item.price * item.refundMinimumLevel +\r\n                                item.priceIncrease * (item.refundMinimumLevel) * (item.refundMinimumLevel - 1) / 2\r\n\r\n        //Refunds Quarks based on the shop level and price vals\r\n        player.worlds.add(\r\n          item.price * player.shopUpgrades[key] +\r\n                    item.priceIncrease * (player.shopUpgrades[key]) * (player.shopUpgrades[key] - 1) / 2\r\n                    - doNotRefund,\r\n          false\r\n        )\r\n\r\n        player.shopUpgrades[key] = item.refundMinimumLevel\r\n      }\r\n    }\r\n    if (refunds) {\r\n      player.worlds.sub(15)\r\n    } else if (!ignoreBoolean && player.shopConfirmationToggle) {\r\n      void Alert('Nothing to Refund!')\r\n    }\r\n    player.quarksThisSingularity = singularityQuarks\r\n  }\r\n}\r\n\r\nexport const getQuarkInvestment = (upgrade: ShopUpgradeNames) => {\r\n  if (!(upgrade in shopData) || !(upgrade in player.shopUpgrades)) {\r\n    return 0\r\n  }\r\n\r\n  const val = shopData[upgrade].price * player.shopUpgrades[upgrade] +\r\n                shopData[upgrade].priceIncrease * (player.shopUpgrades[upgrade] - 1) * (player.shopUpgrades[upgrade]) / 2\r\n\r\n  return val\r\n}\r\n\r\nexport const isShopUpgradeUnlocked = (upgrade: ShopUpgradeNames):boolean => {\r\n  switch (upgrade) {\r\n    case 'offeringPotion':\r\n      return true\r\n    case 'obtainiumPotion':\r\n      return true\r\n    case 'offeringEX':\r\n      return player.reincarnationCount > 0 || player.highestSingularityCount > 0\r\n    case 'offeringAuto':\r\n      return player.reincarnationCount > 0 || player.highestSingularityCount > 0\r\n    case 'obtainiumEX':\r\n      return player.reincarnationCount > 0 || player.highestSingularityCount > 0\r\n    case 'obtainiumAuto':\r\n      return player.reincarnationCount > 0 || player.highestSingularityCount > 0\r\n    case 'instantChallenge':\r\n      return player.reincarnationCount > 0 || player.highestSingularityCount > 0\r\n    case 'antSpeed':\r\n      return player.highestchallengecompletions[8] > 0 || player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'cashGrab':\r\n      return player.highestchallengecompletions[8] > 0 || player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'shopTalisman':\r\n      return player.highestchallengecompletions[9] > 0 || player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'seasonPass':\r\n      return player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'challengeExtension':\r\n      return player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'challengeTome':\r\n      return player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'cubeToQuark':\r\n      return player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'tesseractToQuark':\r\n      return player.highestchallengecompletions[11] > 0 || player.highestSingularityCount > 0\r\n    case 'hypercubeToQuark':\r\n      return player.highestchallengecompletions[13] > 0 || player.highestSingularityCount > 0\r\n    case 'seasonPass2':\r\n      return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\r\n    case 'seasonPass3':\r\n      return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\r\n    case 'chronometer':\r\n      return player.highestchallengecompletions[12] > 0 || player.highestSingularityCount > 0\r\n    case 'infiniteAscent':\r\n      return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\r\n    case 'calculator':\r\n      return player.ascensionCount > 0 || player.highestSingularityCount > 0\r\n    case 'calculator2':\r\n      return player.highestchallengecompletions[11] > 0 || player.highestSingularityCount > 0\r\n    case 'calculator3':\r\n      return player.highestchallengecompletions[13] > 0 || player.highestSingularityCount > 0\r\n    case 'calculator4':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'calculator5':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'calculator6':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'constantEX':\r\n      return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\r\n    case 'powderEX':\r\n      return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\r\n    case 'chronometer2':\r\n      return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\r\n    case 'chronometer3':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'seasonPassY':\r\n      return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\r\n    case 'seasonPassZ':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'challengeTome2':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'instantChallenge2':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'cashGrab2':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'cubeToQuarkAll':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'chronometerZ':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'offeringEX2':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'obtainiumEX2':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'powderAuto':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'seasonPassLost':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'challenge15Auto':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'extraWarp':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'autoWarp':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'improveQuarkHept':\r\n      return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\r\n    case 'improveQuarkHept2':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'improveQuarkHept3':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'improveQuarkHept4':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'shopImprovedDaily':\r\n      return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\r\n    case 'shopImprovedDaily2':\r\n      return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\r\n    case 'shopImprovedDaily3':\r\n      return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\r\n    case 'shopImprovedDaily4':\r\n      return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\r\n    case 'offeringEX3':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'obtainiumEX3':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'improveQuarkHept5':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'chronometerInfinity':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'seasonPassInfinity':\r\n      return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\r\n    case 'shopSingularityPenaltyDebuff':\r\n      return Boolean(player.singularityChallenges.noSingularityUpgrades.rewards.shopUpgrade)\r\n  }\r\n}\r\n", null, null, null, null, null, null, "import * as workerTimers from 'worker-timers'\r\n\r\ninterface ActiveTimer {\r\n\tid: number\r\n\ttype: 'interval' | 'timeout'\r\n}\r\n\r\nconst activeTimers: ActiveTimer[] = []\r\n\r\nexport const setInterval: typeof workerTimers['setInterval'] = (fn, delay) => {\r\n  const timer = workerTimers.setInterval(fn, delay)\r\n  activeTimers.push({ id: timer, type: 'interval' })\r\n  return timer\r\n}\r\n\r\nexport const clearInterval: typeof workerTimers['clearInterval'] = (timerId) => {\r\n  for (const timer of activeTimers) {\r\n    if (timer.type === 'interval' && timer.id === timerId) {\r\n      workerTimers.clearInterval(timerId)\r\n      activeTimers.splice(activeTimers.indexOf(timer), 1)\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport const setTimeout: typeof workerTimers['setTimeout'] = (fn, delay) => {\r\n  const timer = workerTimers.setTimeout(fn, delay)\r\n  activeTimers.push({ id: timer, type: 'timeout' })\r\n  return timer\r\n}\r\n\r\nexport const clearTimeout: typeof workerTimers['clearTimeout'] = (timerId) => {\r\n  for (const timer of activeTimers) {\r\n    if (timer.type === 'timeout' && timer.id === timerId) {\r\n      workerTimers.clearTimeout(timerId)\r\n      activeTimers.splice(activeTimers.indexOf(timer), 1)\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport const clearTimers = (): void => {\r\n  for (const { id, type } of activeTimers) {\r\n    if (type === 'interval') {\r\n      clearInterval(id)\r\n    } else {\r\n      clearTimeout(id)\r\n    }\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { calculateSigmoidExponential, calculateSigmoid, calculateAnts, calculateRuneLevels, calculateAntSacrificeELO, calculateAntSacrificeRewards } from './Calculate'\r\nimport { Globals as G } from './Variables'\r\n\r\nimport type { DecimalSource } from 'break_infinity.js'\r\nimport Decimal from 'break_infinity.js'\r\nimport { achievementaward } from './Achievements'\r\nimport { Confirm, revealStuff } from './UpdateHTML'\r\nimport { updateTalismanInventory } from './Talismans'\r\nimport { buyResearch } from './Research'\r\nimport { resetAnts } from './Reset'\r\nimport type { ResetHistoryEntryAntSacrifice } from './History'\r\nimport { Synergism } from './Events'\r\nimport type { FirstToEighth, ZeroToSeven } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { smallestInc } from './Utility'\r\nimport { setInterval, clearInterval } from './Timers'\r\nimport i18next from 'i18next'\r\n\r\nconst antspecies: Record<string, string> = {\r\n  antspecies1: 'Inceptus Formicidae',\r\n  antspecies2: 'Fortunae Formicidae',\r\n  antspecies3: 'Tributum Formicidae',\r\n  antspecies4: 'Celeritas Formicidae',\r\n  antspecies5: 'Multa Formicidae',\r\n  antspecies6: 'Sacrificium Formicidae',\r\n  antspecies7: 'Hic Formicidae',\r\n  antspecies8: 'Experientia Formicidae',\r\n  antspecies9: 'Praemoenio Formicidae',\r\n  antspecies10: 'Scientia Formicidae',\r\n  antspecies11: 'Phylacterium Formicidae',\r\n  antspecies12: 'Mortuus Est Formicidae'\r\n}\r\n\r\nexport const calculateCrumbToCoinExp = () => {\r\n  const exponent = player.currentChallenge.ascension !== 15\r\n    ? 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2-1]! + G.bonusant2) / 5000 * 500 / 499)\r\n    : 1/10000 * (100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2-1]! + G.bonusant2) / 5000 * 500 / 499))\r\n\r\n  return exponent\r\n}\r\n\r\nconst antUpgradeTexts = [\r\n  () => format(Decimal.pow(1.12 + 1 / 1000 * player.researches[101], player.antUpgrades[1-1]! + G.bonusant1), 2),\r\n  () => format(calculateCrumbToCoinExp()),\r\n  () => format(0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3-1]! + G.bonusant3), 4),\r\n  () => format(100 * (calculateSigmoidExponential(20, (player.antUpgrades[4-1]! + G.bonusant4) / 1000 * 20 / 19) - 1), 3),\r\n  () => format(100 * (calculateSigmoidExponential(40, (player.antUpgrades[5-1]! + G.bonusant5) / 1000 * 40 / 39) - 1), 3),\r\n  () => format(1 + Math.pow((player.antUpgrades[6-1]! + G.bonusant6), 0.66), 4),\r\n  () => format(Math.min(9999999, 3 * player.antUpgrades[7-1]! + 3 * G.bonusant7), 0, true),\r\n  () => format(calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8-1]! + G.bonusant8, 1.1)), 3),\r\n  () => format(1 * Math.min(1e7, (player.antUpgrades[9-1]! + G.bonusant9)), 0, true),\r\n  () => format(1 + 2 * Math.pow((player.antUpgrades[10-1]! + G.bonusant10) / 50, 0.75), 4),\r\n  () => format(1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11-1]! + G.bonusant11) / 125)), 4),\r\n  () => format(calculateSigmoid(2, player.antUpgrades[12-1]! + G.bonusant12, 69), 4)\r\n]\r\n\r\nlet repeatAnt: ReturnType<typeof setTimeout>\r\n\r\nexport const antRepeat = (i: number) => {\r\n  clearInterval(repeatAnt)\r\n  repeatAnt = setInterval(() => updateAntDescription(i), 50)\r\n}\r\n\r\nexport const updateAntDescription = (i: number) => {\r\n  if (G.currentTab !== 'ant') {\r\n    return\r\n  }\r\n  const el = DOMCacheGetOrSet('anttierdescription')\r\n  const la = DOMCacheGetOrSet('antprice')\r\n  const ti = DOMCacheGetOrSet('antquantity')\r\n  const me = DOMCacheGetOrSet('generateant')\r\n\r\n  let priceType = 'ants.costGalacticCrumbs'\r\n  let tier: FirstToEighth = 'first'\r\n  let x!: string\r\n  el.textContent = i18next.t(`ants.descriptions.${i}`)\r\n\r\n  switch (i) {\r\n    case 1:\r\n      priceType = 'ants.costParticles'\r\n      tier = 'first'\r\n      x = format(G.antOneProduce, 5)\r\n      break\r\n    case 2:\r\n      tier = 'second'\r\n      x = format(G.antTwoProduce, 5)\r\n      break\r\n    case 3:\r\n      tier = 'third'\r\n      x = format(G.antThreeProduce, 5)\r\n      break\r\n    case 4:\r\n      tier = 'fourth'\r\n      x = format(G.antFourProduce, 5)\r\n      break\r\n    case 5:\r\n      tier = 'fifth'\r\n      x = format(G.antFiveProduce, 5)\r\n      break\r\n    case 6:\r\n      tier = 'sixth'\r\n      x = format(G.antSixProduce, 5)\r\n      break\r\n    case 7:\r\n      tier = 'seventh'\r\n      x = format(G.antSevenProduce, 5)\r\n      break\r\n    case 8:\r\n      tier = 'eighth'\r\n      x = format(G.antEightProduce, 5)\r\n      break\r\n  }\r\n\r\n  me.textContent = i18next.t(`ants.generates.${i}`, { x })\r\n  la.textContent = i18next.t(priceType, { x: format(player[`${tier}CostAnts` as const]) })\r\n  ti.textContent = i18next.t('ants.owned', {\r\n    x: format(player[`${tier}OwnedAnts` as const]),\r\n    y: format(player[`${tier}GeneratedAnts` as const], 2)\r\n  })\r\n}\r\n\r\nconst getAntCost = (originalCost: Decimal, buyTo: number, index: number) => {\r\n  --buyTo\r\n\r\n  //Determine how much the cost is for buyTo\r\n  const cost = originalCost\r\n    .times(Decimal.pow(G.antCostGrowth[index-1], buyTo))\r\n    .add(1 * buyTo)\r\n\r\n  return cost\r\n}\r\n\r\nconst getAntUpgradeCost = (originalCost: Decimal, buyTo: number, index: number) => {\r\n  --buyTo\r\n\r\n  const cost = originalCost.times(Decimal.pow(G.antUpgradeCostIncreases[index-1], buyTo))\r\n  return cost\r\n}\r\n\r\n//Note to self: REWRITE THIS SHIT Kevin :3\r\nexport const buyAntProducers = (pos: FirstToEighth, originalCost: DecimalSource, index: number) => {\r\n  const sacrificeMult = antSacrificePointsToMultiplier(player.antSacrificePoints)\r\n  //This is a fucking cool function. This will buymax ants cus why not\r\n\r\n  //Things we need: the position of producers, the costvalues, and input var i\r\n  originalCost = new Decimal(originalCost)\r\n  //Initiate type of resource used\r\n  const tag = index === 1 ? 'reincarnationPoints' : 'antPoints'\r\n  const key = `${pos}OwnedAnts` as const\r\n\r\n  const buydefault = player[key] + smallestInc(player[key])\r\n  let buyTo = buydefault\r\n  let cashToBuy = getAntCost(originalCost, buyTo, index)\r\n  while (player[tag].gte(cashToBuy)) {\r\n    // Multiply by 4 until the desired amount. Iterate from there\r\n    buyTo = buyTo * 4\r\n    cashToBuy = getAntCost(originalCost, buyTo, index)\r\n  }\r\n  let stepdown = Math.floor(buyTo / 8)\r\n  while (stepdown >= smallestInc(buyTo)) {\r\n    if (getAntCost(originalCost, buyTo - stepdown, index).lte(player[tag])) {\r\n      stepdown = Math.floor(stepdown / 2)\r\n    } else {\r\n      buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown)\r\n    }\r\n  }\r\n\r\n  if (!player.antMax) {\r\n    if (buydefault < buyTo) {\r\n      buyTo = buydefault\r\n    }\r\n  }\r\n  // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\r\n  let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault)\r\n  let thisCost = getAntCost(originalCost, buyFrom, index)\r\n  while (buyFrom <= buyTo && player[tag].gte(thisCost)) {\r\n    player[tag] = player[tag].sub(thisCost)\r\n    player[key] = buyFrom\r\n    buyFrom = buyFrom + smallestInc(buyFrom)\r\n    thisCost = getAntCost(originalCost, buyFrom, index)\r\n    player[`${pos}CostAnts` as const] = thisCost\r\n  }\r\n  if (player.reincarnationPoints.lt(0)) {\r\n    player.reincarnationPoints = new Decimal('0')\r\n  }\r\n  if (player.antPoints.lt(0)) {\r\n    player.antPoints = new Decimal('0')\r\n  }\r\n  calculateAntSacrificeELO()\r\n\r\n  // Check if we award Achievement 176-182: Ant autobuy\r\n  const achRequirements = [2, 6, 20, 100, 500, 6666, 77777]\r\n  for (let j = 0; j < achRequirements.length; j++) {\r\n    if (player.achievements[176 + j] === 0 && sacrificeMult > achRequirements[j] && player[`${G.ordinals[j + 1 as ZeroToSeven]}OwnedAnts` as const] > 0) {\r\n      achievementaward(176 + j)\r\n    }\r\n  }\r\n\r\n  if (player.firstOwnedAnts > 6.9e7) {\r\n    player.firstOwnedAnts = 6.9e7\r\n  }\r\n}\r\n\r\nexport const buyAntUpgrade = (originalCost: DecimalSource, auto: boolean, index: number) => {\r\n  if (player.currentChallenge.ascension !== 11) {\r\n    originalCost = new Decimal(originalCost)\r\n    const buydefault = player.antUpgrades[index-1]! + smallestInc(player.antUpgrades[index-1]!)\r\n    let buyTo = buydefault\r\n    let cashToBuy = getAntUpgradeCost(originalCost, buyTo, index)\r\n    while (player.antPoints.gte(cashToBuy)) {\r\n      // Multiply by 4 until the desired amount. Iterate from there\r\n      buyTo = buyTo * 4\r\n      cashToBuy = getAntUpgradeCost(originalCost, buyTo, index)\r\n    }\r\n    let stepdown = Math.floor(buyTo / 8)\r\n    while (stepdown >= smallestInc(buyTo)) {\r\n      if (getAntUpgradeCost(originalCost, buyTo - stepdown, index).lte(player.antPoints)) {\r\n        stepdown = Math.floor(stepdown / 2)\r\n      } else {\r\n        buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown)\r\n      }\r\n    }\r\n    if (!player.antMax) {\r\n      if (buydefault < buyTo) {\r\n        buyTo = buydefault\r\n      }\r\n    }\r\n    // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\r\n    let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault)\r\n    let thisCost = getAntUpgradeCost(originalCost, buyFrom, index)\r\n    while (buyFrom <= buyTo && player.antPoints.gte(thisCost)) {\r\n      player.antPoints = player.antPoints.sub(thisCost)\r\n      player.antUpgrades[index-1] = buyFrom\r\n      buyFrom = buyFrom + smallestInc(buyFrom)\r\n      thisCost = getAntUpgradeCost(originalCost, buyFrom, index)\r\n    }\r\n    calculateAnts()\r\n    calculateRuneLevels()\r\n    calculateAntSacrificeELO()\r\n    if (!auto) {\r\n      antUpgradeDescription(index)\r\n    }\r\n    if (player.antUpgrades[12-1] === 1 && index === 12) {\r\n      revealStuff()\r\n    }\r\n  }\r\n}\r\n\r\nexport const antUpgradeDescription = (i: number) => {\r\n  const el = DOMCacheGetOrSet('antspecies')\r\n  const al = DOMCacheGetOrSet('antlevelbonus')\r\n  const la = DOMCacheGetOrSet('antupgradedescription')\r\n  const ti = DOMCacheGetOrSet('antupgradecost')\r\n  const me = DOMCacheGetOrSet('antupgradeeffect')\r\n\r\n  const content1 = antspecies[`antspecies${i}`]\r\n  const content2 = i18next.t(`ants.upgrades.${i}`)\r\n  const bonuslevel = G[`bonusant${i}` as keyof typeof G] as typeof G['bonusant1']\r\n\r\n  const c11 = player.currentChallenge.ascension === 11 ? 999 : 0\r\n\r\n  el.childNodes[0].textContent = content1 + ' Level ' + format(player.antUpgrades[i-1])\r\n  al.textContent = ' [+' + format(Math.min(player.antUpgrades[i-1]! + c11, bonuslevel)) + ']'\r\n  la.textContent = content2\r\n  ti.textContent = i18next.t('ants.costGalacticCrumbs', {\r\n    x: format(Decimal.pow(G.antUpgradeCostIncreases[i-1], player.antUpgrades[i-1]! * G.extinctionMultiplier[player.usedCorruptions[10]]).times(G.antUpgradeBaseCost[i-1]))\r\n  })\r\n  me.textContent = i18next.t(`ants.rewards.${i}`, {\r\n    x: antUpgradeTexts[i - 1]()\r\n  })\r\n}\r\n\r\nexport const antSacrificePointsToMultiplier = (points: number) => {\r\n  let multiplier = Math.pow(1 + points / 5000, 2)\r\n  multiplier *= (1 + 0.2 * Math.log(1 + points) / Math.log(10))\r\n  if (player.achievements[174] > 0) {\r\n    multiplier *= (1 + 0.4 * Math.log(1 + points) / Math.log(10))\r\n  }\r\n  return Math.min(1e300, multiplier)\r\n}\r\n\r\nexport const showSacrifice = () => {\r\n  const sacRewards = calculateAntSacrificeRewards()\r\n  DOMCacheGetOrSet('antSacrificeSummary').style.display = 'block'\r\n\r\n  DOMCacheGetOrSet('ELO').innerHTML = i18next.t('ants.yourAntELO', {\r\n    x: format(G.antELO, 2),\r\n    y: format(G.effectiveELO, 2, false)\r\n  })\r\n\r\n  DOMCacheGetOrSet('SacrificeMultiplier').innerHTML = i18next.t('ants.antSacMultiplier', {\r\n    y: format(antSacrificePointsToMultiplier(player.antSacrificePoints), 3, false),\r\n    x: format(antSacrificePointsToMultiplier(player.antSacrificePoints + sacRewards.antSacrificePoints), 3, false)\r\n  })\r\n\r\n  DOMCacheGetOrSet('SacrificeUpgradeMultiplier').innerHTML = i18next.t('ants.upgradeMultiplier', {\r\n    x: format(G.upgradeMultiplier, 3, true)\r\n  })\r\n\r\n  DOMCacheGetOrSet('SacrificeTimeMultiplier').innerHTML = i18next.t('ants.timeMultiplier', {\r\n    x: format(G.timeMultiplier, 3, true)\r\n  })\r\n\r\n  DOMCacheGetOrSet('antSacrificeOffering').textContent = '+' + format(sacRewards.offerings)\r\n  DOMCacheGetOrSet('antSacrificeObtainium').textContent = '+' + format(sacRewards.obtainium)\r\n  if (player.challengecompletions[9] > 0) {\r\n    DOMCacheGetOrSet('antSacrificeTalismanShard').textContent = i18next.t('ants.elo', { x: format(sacRewards.talismanShards), y: 500 })\r\n    DOMCacheGetOrSet('antSacrificeCommonFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.commonFragments), y: 750 })\r\n    DOMCacheGetOrSet('antSacrificeUncommonFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.uncommonFragments), y: 1000 })\r\n    DOMCacheGetOrSet('antSacrificeRareFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.rareFragments), y: 1500 })\r\n    DOMCacheGetOrSet('antSacrificeEpicFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.epicFragments), y: 2000 })\r\n    DOMCacheGetOrSet('antSacrificeLegendaryFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.legendaryFragments), y: 3000 })\r\n    DOMCacheGetOrSet('antSacrificeMythicalFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.mythicalFragments), y: 5000 })\r\n  }\r\n}\r\n\r\nexport const sacrificeAnts = async (auto = false) => {\r\n  let p = true\r\n\r\n  if (player.antPoints.gte('1e40')) {\r\n    if (!auto && player.toggles[32]) {\r\n      p = await Confirm(i18next.t('ants.autoReset'))\r\n    }\r\n    if (p) {\r\n      const antSacrificePointsBefore = player.antSacrificePoints\r\n\r\n      const sacRewards = calculateAntSacrificeRewards()\r\n      player.antSacrificePoints += sacRewards.antSacrificePoints\r\n      player.runeshards += sacRewards.offerings\r\n\r\n      if (player.currentChallenge.ascension !== 14) {\r\n        player.researchPoints += sacRewards.obtainium\r\n      }\r\n\r\n      const historyEntry: ResetHistoryEntryAntSacrifice = {\r\n        date: Date.now(),\r\n        seconds: player.antSacrificeTimer,\r\n        kind: 'antsacrifice',\r\n        offerings: sacRewards.offerings,\r\n        obtainium: sacRewards.obtainium,\r\n        antSacrificePointsBefore,\r\n        antSacrificePointsAfter: player.antSacrificePoints,\r\n        baseELO: G.antELO,\r\n        effectiveELO: G.effectiveELO,\r\n        crumbs: player.antPoints.toString(),\r\n        crumbsPerSecond: G.antOneProduce.toString()\r\n      }\r\n\r\n      if (player.challengecompletions[9] > 0) {\r\n        player.talismanShards = Math.min(1e300, player.talismanShards + sacRewards.talismanShards)\r\n        player.commonFragments = Math.min(1e300, player.commonFragments + sacRewards.commonFragments)\r\n        player.uncommonFragments = Math.min(1e300, player.uncommonFragments + sacRewards.uncommonFragments)\r\n        player.rareFragments = Math.min(1e300, player.rareFragments + sacRewards.rareFragments)\r\n        player.epicFragments = Math.min(1e300, player.epicFragments + sacRewards.epicFragments)\r\n        player.legendaryFragments = Math.min(1e300, player.legendaryFragments + sacRewards.legendaryFragments)\r\n        player.mythicalFragments = Math.min(1e300, player.mythicalFragments + sacRewards.mythicalFragments)\r\n      }\r\n\r\n      // Now we're safe to reset the ants.\r\n      resetAnts()\r\n      player.antSacrificeTimer = 0\r\n      player.antSacrificeTimerReal = 0\r\n      updateTalismanInventory()\r\n      if (player.autoResearch > 0 && player.autoResearchToggle) {\r\n        const linGrowth = (player.autoResearch === 200) ? 0.01 : 0\r\n        buyResearch(player.autoResearch, true, linGrowth)\r\n      }\r\n      calculateAntSacrificeELO()\r\n\r\n      Synergism.emit('historyAdd', 'ants', historyEntry)\r\n    }\r\n  }\r\n\r\n  if (player.mythicalFragments >= 1e11 && player.currentChallenge.ascension === 14 && player.achievements[248] < 1) {\r\n    achievementaward(248)\r\n  }\r\n}\r\n\r\nexport const autoBuyAnts = () => {\r\n  const canAffordUpgrade = (x: number, m: DecimalSource) => player.antPoints.gte(getAntUpgradeCost(new Decimal(G.antUpgradeBaseCost[x-1]), player.antUpgrades[x-1]! + 1, x).times(m))\r\n  const ach = [176, 176, 177, 178, 178, 179, 180, 180, 181, 182, 182, 145]\r\n  const cost = ['100', '100', '1000', '1000', '1e5', '1e6', '1e8', '1e11', '1e15', '1e20', '1e40', '1e100']\r\n  if (player.currentChallenge.ascension !== 11) {\r\n    for (let i = 1; i <= ach.length; i++) {\r\n      const check = i === 12 ? player.researches[ach[i - 1]] : player.achievements[ach[i - 1]]\r\n      if (check && canAffordUpgrade(i, 2)) {\r\n        buyAntUpgrade(cost[i - 1], true, i)\r\n      }\r\n    }\r\n  }\r\n\r\n  const _ach = [173, 176, 177, 178, 179, 180, 181, 182]\r\n  const _cost = ['1e700', '3', '100', '10000', '1e12', '1e36', '1e100', '1e300']\r\n  for (let i = 1; i <= _ach.length; i++) {\r\n    const res = i === 1 ? player.reincarnationPoints : player.antPoints\r\n    const m = i === 1 ? 1 : 2 // no multiplier on the first ant cost because it costs particles\r\n    if (player.achievements[_ach[i - 1]] && res.gte(player[`${G.ordinals[i - 1 as ZeroToSeven]}CostAnts` as const].times(m))) {\r\n      buyAntProducers(\r\n                G.ordinals[i - 1] as Parameters<typeof buyAntProducers>[0],\r\n                _cost[i - 1], i\r\n      )\r\n    }\r\n  }\r\n}\r\n", "import Decimal from 'break_infinity.js'\r\nimport { calculateCubeMultFromPowder, calculateCubeQuarkMultiplier, calculatePowderConversion, calculateQuarkMultFromPowder, forcedDailyReset } from './Calculate'\r\nimport { Cube } from './CubeExperimental'\r\nimport { format, player } from './Synergism'\r\nimport type { Player } from './types/Synergism'\r\nimport { Alert, Confirm, Prompt } from './UpdateHTML'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { calculateSingularityDebuff } from './singularity'\r\nimport type { StringMap } from 'i18next'\r\nimport i18next from 'i18next'\r\n\r\nexport interface IHepteractCraft {\r\n    BASE_CAP: number\r\n    HEPTERACT_CONVERSION: number\r\n    OTHER_CONVERSIONS: Record<string, number>\r\n    HTML_STRING: string\r\n    AUTO?: boolean\r\n    UNLOCKED?: boolean\r\n    BAL?: number\r\n    CAP?: number\r\n    DISCOUNT?: number\r\n}\r\n\r\nexport const hepteractTypeList = ['chronos', 'hyperrealism', 'quark', 'challenge',\r\n  'abyss', 'accelerator', 'acceleratorBoost', 'multiplier'] as const\r\n\r\nexport type hepteractTypes = typeof hepteractTypeList[number]\r\n\r\nexport class HepteractCraft {\r\n  /**\r\n     * Craft is unlocked or not (Default is locked)\r\n     */\r\n  UNLOCKED = false\r\n\r\n  /**\r\n     * Current Inventory (amount) of craft you possess\r\n     */\r\n  BAL = 0\r\n\r\n  /**\r\n     * Maximum Inventory (amount) of craft you can hold\r\n     * base_cap is the smallest capacity for such item.\r\n     */\r\n  CAP = 0\r\n  BASE_CAP = 0\r\n\r\n  /**\r\n     * Conversion rate of hepteract to synthesized items\r\n     */\r\n  HEPTERACT_CONVERSION = 0\r\n\r\n  /**\r\n     * Automatic crafting toggle. If on, allows crafting to be done automatically upon ascension.\r\n     */\r\n  AUTO = false\r\n\r\n  /**\r\n     * Conversion rate of additional items\r\n     * This is in the form of keys being player variables,\r\n     * values being the amount player has.\r\n     */\r\n  OTHER_CONVERSIONS: {\r\n        [key in keyof Player]?: number\r\n    }\r\n\r\n  /**\r\n     * Discount Factor (number from [0, 1))\r\n     */\r\n  DISCOUNT = 0\r\n\r\n  /**\r\n     * String Prefix used for HTML DOM manipulation\r\n     */\r\n  HTML_STRING: string\r\n\r\n  constructor(data: IHepteractCraft) {\r\n    this.BASE_CAP = data.BASE_CAP\r\n    this.HEPTERACT_CONVERSION = data.HEPTERACT_CONVERSION\r\n    this.OTHER_CONVERSIONS = data.OTHER_CONVERSIONS\r\n    this.HTML_STRING = data.HTML_STRING\r\n    this.UNLOCKED = data.UNLOCKED ?? false //This would basically always be true if this parameter is provided\r\n    this.BAL = data.BAL ?? 0\r\n    this.CAP = data.CAP ?? this.BASE_CAP // This sets cap either as previous value or keeps it to default.\r\n    this.DISCOUNT = data.DISCOUNT ?? 0\r\n    this.AUTO = data.AUTO ?? false\r\n\r\n    void this.toggleAutomatic(this.AUTO)\r\n  }\r\n\r\n  // Unlock a synthesizer craft\r\n  unlock = (hepteractName: string): this | Promise<void> => {\r\n    if (this.UNLOCKED) {\r\n      return this\r\n    }\r\n    this.UNLOCKED = true\r\n    if (player.highestSingularityCount < 5) {\r\n      return Alert(i18next.t('hepteracts.unlockedCraft', { x: hepteractName }))\r\n    } else {\r\n      return this\r\n    }\r\n  }\r\n\r\n  computeActualCap = (): number => {\r\n    let multiplier = 1\r\n    multiplier *= (player.singularityChallenges.limitedAscensions.rewards.hepteractCap) ? 2: 1\r\n\r\n    return this.CAP * multiplier\r\n  }\r\n\r\n  // Add to balance through crafting.\r\n  craft = async (max = false): Promise<HepteractCraft | void> => {\r\n    let craftAmount = null\r\n    const heptCap = this.computeActualCap()\r\n    const craftCostMulti = calculateSingularityDebuff('Hepteract Costs')\r\n    // If craft is unlocked, we return object\r\n    if (!this.UNLOCKED) {\r\n      return Alert(i18next.t('hepteracts.notUnlocked'))\r\n    }\r\n\r\n    if (heptCap - this.BAL <= 0) {\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.reachedCapacity', { x: format(heptCap, 0, true) }))\r\n      }\r\n    }\r\n\r\n    if (isNaN(player.wowAbyssals) || !isFinite(player.wowAbyssals) || player.wowAbyssals < 0) {\r\n      player.wowAbyssals = 0\r\n    }\r\n\r\n    // Calculate the largest craft amount possible, with an upper limit being craftAmount\r\n    const hepteractLimit = Math.floor((player.wowAbyssals / (this.HEPTERACT_CONVERSION * craftCostMulti)) * 1 / (1 - this.DISCOUNT))\r\n\r\n    // Create an array of how many we can craft using our conversion limits for additional items\r\n    const itemLimits: number[] = []\r\n    for (const item in this.OTHER_CONVERSIONS) {\r\n      // The type of player[item] is number | Decimal | Cube.\r\n      if (item === 'worlds') {\r\n        itemLimits.push(Math.floor((player[item as keyof Player] as number) / (this.OTHER_CONVERSIONS[item as keyof Player]!)) * 1 / (1 - this.DISCOUNT))\r\n      } else {\r\n        itemLimits.push(Math.floor((player[item as keyof Player] as number) / (craftCostMulti * this.OTHER_CONVERSIONS[item as keyof Player]!)) * 1 / (1 - this.DISCOUNT))\r\n      }\r\n    }\r\n\r\n    // Get the smallest of the array we created\r\n    const smallestItemLimit = Math.min(...itemLimits)\r\n\r\n    let amountToCraft = Math.min(smallestItemLimit, hepteractLimit, heptCap, heptCap - this.BAL)\r\n\r\n    // Return if the material is not a calculable number\r\n    if (isNaN(amountToCraft) || !isFinite(amountToCraft)) {\r\n      return Alert(i18next.t('hepteracts.executionFailed'))\r\n    }\r\n\r\n    //Prompt used here. Thank you Khafra for the already made code! -Platonic\r\n    if (!max) {\r\n      const craftingPrompt = await Prompt(i18next.t('hepteracts.craft', {\r\n        x: format(amountToCraft, 0, true),\r\n        y: Math.floor(amountToCraft / heptCap * 10000) / 100\r\n      }))\r\n\r\n      if (craftingPrompt === null) { // Number(null) is 0. Yeah..\r\n        if (player.toggles[35]) {\r\n          return Alert(i18next.t('hepteracts.cancelled'))\r\n        } else {\r\n          return //If no return, then it will just give another message\r\n        }\r\n      }\r\n      craftAmount = Number(craftingPrompt)\r\n    } else {\r\n      craftAmount = heptCap\r\n    }\r\n\r\n    //Check these lol\r\n    if (isNaN(craftAmount) || !isFinite(craftAmount) || !Number.isInteger(craftAmount)) { // nan + Infinity checks\r\n      return Alert(i18next.t('general.validation.finite'))\r\n    } else if (craftAmount <= 0) { // 0 or less selected\r\n      return Alert(i18next.t('general.validation.zeroOrLess'))\r\n    }\r\n\r\n    // Get the smallest of hepteract limit, limit found above and specified input\r\n    amountToCraft = Math.min(smallestItemLimit, hepteractLimit, craftAmount, heptCap - this.BAL)\r\n\r\n    if (max && player.toggles[35]) {\r\n      const craftYesPlz = await Confirm(i18next.t('hepteracts.craftMax', {\r\n        x: format(amountToCraft, 0, true),\r\n        y: Math.floor(amountToCraft / heptCap * 10000) / 100\r\n      }))\r\n\r\n      if (!craftYesPlz) {\r\n        return Alert(i18next.t('hepteracts.cancelled'))\r\n      }\r\n    }\r\n\r\n    this.BAL = Math.min(heptCap, this.BAL + amountToCraft)\r\n\r\n    // Subtract spent items from player\r\n    player.wowAbyssals -= amountToCraft * this.HEPTERACT_CONVERSION * craftCostMulti\r\n\r\n    if (player.wowAbyssals < 0) {\r\n      player.wowAbyssals = 0\r\n    }\r\n\r\n    for (const item in this.OTHER_CONVERSIONS) {\r\n      if (typeof player[item as keyof Player] === 'number') {\r\n        (player[item as keyof Player] as number) -= amountToCraft * craftCostMulti * this.OTHER_CONVERSIONS[item as keyof Player]!\r\n      }\r\n\r\n      if ((player[item as keyof Player] as number) < 0) {\r\n        (player[item as keyof Player] as number) = 0\r\n      } else if (player[item as keyof Player] instanceof Cube) {\r\n        (player[item as keyof Player] as Cube).sub(amountToCraft * craftCostMulti * this.OTHER_CONVERSIONS[item as keyof Player]!)\r\n      } else if (item == 'worlds') {\r\n        player.worlds.sub(amountToCraft * this.OTHER_CONVERSIONS[item]!)\r\n      }\r\n    }\r\n\r\n    if (player.toggles[35]) {\r\n      if (!max) {\r\n        return Alert(i18next.t('hepteracts.craftedHepteracts', { x: format(amountToCraft, 0, true) }))\r\n      }\r\n\r\n      return Alert(i18next.t('hepteracts.craftedHepteractsMax', { x: format(amountToCraft, 0, true) }))\r\n    }\r\n  }\r\n\r\n  // Reduce balance through spending\r\n  spend(amount: number): this {\r\n    if (!this.UNLOCKED) {\r\n      return this\r\n    }\r\n\r\n    this.BAL -= amount\r\n    return this\r\n  }\r\n\r\n  // Expand your capacity\r\n  /**\r\n     * Expansion can only happen if your current balance is full.\r\n     */\r\n  expand = async(): Promise<HepteractCraft | void> => {\r\n    const expandMultiplier = 2\r\n    const currentBalance = this.BAL\r\n    const heptCap = this.computeActualCap()\r\n    const currHeptCapNoMulti = this.CAP\r\n\r\n    if (!this.UNLOCKED) {\r\n      return Alert(i18next.t('hepteracts.notUnlocked'))\r\n    }\r\n\r\n    // Below capacity\r\n    if (this.BAL < this.CAP) {\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.notEnough'))\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n\r\n    const expandPrompt = await Confirm(i18next.t('hepteracts.expandPrompt', {\r\n      x: format(this.CAP),\r\n      y: format(heptCap),\r\n      z: format(heptCap * expandMultiplier),\r\n      a: format(expandMultiplier, 2, true)\r\n    }))\r\n\r\n    if (!expandPrompt) {\r\n      return this\r\n    }\r\n\r\n    // Avoid a double-expand exploit due to player waiting to confirm until after autocraft fires and expands\r\n    if (this.BAL !== currentBalance || this.CAP !== currHeptCapNoMulti) {\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.doubleSpent'))\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n\r\n    // Empties inventory in exchange for doubling maximum capacity.\r\n    this.BAL -= this.CAP\r\n    this.BAL = Math.max(0, this.BAL)\r\n\r\n    this.CAP = Math.min(1e300, this.CAP * expandMultiplier)\r\n\r\n    if (player.toggles[35]) {\r\n      return Alert(i18next.t('hepteracts.expandedInventory', {\r\n        x: format(heptCap * expandMultiplier, 0, true)\r\n      }))\r\n    }\r\n  }\r\n\r\n  // Add some percentage points to your discount\r\n  /**\r\n     * Discount has boundaries [0, 1), and upper limit\r\n     *  is defined by (1 - EPSILON). Craft amount is multiplied by 1 / (1 - Discount)\r\n     */\r\n  addDiscount(amount: number): this {\r\n    // If amount would put Discount to 1 or higher set to upper limit\r\n    if (this.DISCOUNT + amount > (1 - Number.EPSILON)) {\r\n      this.DISCOUNT = 1 - Number.EPSILON\r\n      return this\r\n    }\r\n\r\n    this.DISCOUNT += amount\r\n    return this\r\n  }\r\n\r\n  toggleAutomatic(newValue?: boolean): Promise<void> | this {\r\n    const HTML = DOMCacheGetOrSet(`${this.HTML_STRING}HepteractAuto`)\r\n\r\n    // When newValue is empty, current value is toggled\r\n    this.AUTO = newValue ?? !this.AUTO\r\n\r\n    HTML.textContent = this.AUTO ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\r\n    HTML.style.border = `2px solid ${this.AUTO ? 'green' : 'red'}`\r\n\r\n    return this\r\n  }\r\n\r\n  autoCraft(heptAmount: number): this {\r\n    const expandMultiplier = 2\r\n    const craftCostMulti = calculateSingularityDebuff('Hepteract Costs')\r\n    let heptCap = this.computeActualCap()\r\n\r\n    // Calculate the largest craft amount possible, with an upper limit being craftAmount\r\n    const hepteractLimitCraft = Math.floor((heptAmount / (craftCostMulti * this.HEPTERACT_CONVERSION)) * 1 / (1 - this.DISCOUNT))\r\n\r\n    // Create an array of how many we can craft using our conversion limits for additional items\r\n    const itemLimits: number[] = []\r\n    for (const item in this.OTHER_CONVERSIONS) {\r\n      // When Auto is turned on, only Quarks and hepteracts are consumed.\r\n      if (item == 'worlds') {\r\n        itemLimits.push(Math.floor((player[item as keyof Player] as number) / this.OTHER_CONVERSIONS[item as keyof Player]!) * 1 / (1 - this.DISCOUNT))\r\n      }\r\n    }\r\n\r\n    // Get the smallest of the array we created [If Empty, this will be infinite]\r\n    const smallestItemLimit = Math.min(...itemLimits)\r\n\r\n    let amountToCraft = Math.min(smallestItemLimit, hepteractLimitCraft)\r\n    let amountCrafted = 0\r\n\r\n    let craft = Math.min(heptCap - this.BAL, amountToCraft) // Always nonzero\r\n    this.BAL += craft\r\n    amountCrafted += craft\r\n    amountToCraft -= craft\r\n\r\n    while (this.BAL >= heptCap && amountToCraft >= this.CAP) {\r\n      this.BAL -= this.CAP\r\n      this.CAP *= expandMultiplier\r\n      heptCap *= expandMultiplier\r\n      craft = Math.min(heptCap - this.BAL, amountToCraft)\r\n\r\n      this.BAL += craft\r\n      amountCrafted += craft\r\n      amountToCraft -= craft\r\n    }\r\n\r\n    for (const item in this.OTHER_CONVERSIONS) {\r\n      if (item == 'worlds') {\r\n        player.worlds.sub(amountCrafted * this.OTHER_CONVERSIONS[item]!)\r\n      }\r\n    }\r\n\r\n    player.wowAbyssals -= amountCrafted * craftCostMulti * this.HEPTERACT_CONVERSION\r\n    if (player.wowAbyssals < 0) {\r\n      player.wowAbyssals = 0\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Get balance of item\r\n  get amount() {\r\n    return this.BAL\r\n  }\r\n  get capacity() {\r\n    return this.CAP\r\n  }\r\n  get discount() {\r\n    return this.DISCOUNT\r\n  }\r\n\r\n}\r\n\r\nconst hepteractEffectiveValues = {\r\n  'chronos': {\r\n    LIMIT: 1000,\r\n    DR: 1/6\r\n  },\r\n  'hyperrealism': {\r\n    LIMIT: 1000,\r\n    DR: 0.33\r\n  },\r\n  'quark': {\r\n    LIMIT: 1000,\r\n    DR: 0.5\r\n  },\r\n  'challenge': {\r\n    LIMIT: 1000,\r\n    DR: 1/6\r\n  },\r\n  'abyss': {\r\n    LIMIT: 1,\r\n    DR: 0\r\n  },\r\n  'accelerator': {\r\n    LIMIT: 1000,\r\n    DR: 0.2\r\n  },\r\n  'acceleratorBoost': {\r\n    LIMIT: 1000,\r\n    DR: 0.2\r\n  },\r\n  'multiplier': {\r\n    LIMIT: 1000,\r\n    DR: 0.2\r\n  }\r\n}\r\n\r\nexport const createHepteract = (data: IHepteractCraft) => {\r\n  return new HepteractCraft(data)\r\n}\r\n\r\nexport const hepteractEffective = (data: hepteractTypes) => {\r\n  let effectiveValue = Math.min(player.hepteractCrafts[data].BAL, hepteractEffectiveValues[data].LIMIT)\r\n  let exponentBoost = 0\r\n  if (data === 'chronos') {\r\n    exponentBoost += 1/750 * player.platonicUpgrades[19]\r\n  }\r\n  if (data === 'quark') {\r\n    exponentBoost += +player.singularityUpgrades.singQuarkHepteract.getEffect().bonus\r\n    exponentBoost += +player.singularityUpgrades.singQuarkHepteract2.getEffect().bonus\r\n    exponentBoost += +player.singularityUpgrades.singQuarkHepteract3.getEffect().bonus\r\n    exponentBoost += +player.octeractUpgrades.octeractImprovedQuarkHept.getEffect().bonus\r\n    exponentBoost += player.shopUpgrades.improveQuarkHept / 100\r\n    exponentBoost += player.shopUpgrades.improveQuarkHept2 / 100\r\n    exponentBoost += player.shopUpgrades.improveQuarkHept3 / 100\r\n    exponentBoost += player.shopUpgrades.improveQuarkHept4 / 100\r\n    exponentBoost += player.shopUpgrades.improveQuarkHept5 / 5000\r\n\r\n    const amount = player.hepteractCrafts[data].BAL\r\n    if (1000 < amount && amount <= 1000 * Math.pow(2, 10)) {\r\n      return effectiveValue * Math.pow(amount / 1000, 1/2 + exponentBoost)\r\n    } else if (1000 * Math.pow(2, 10) < amount && amount <= 1000 * Math.pow(2, 18)) {\r\n      return effectiveValue * Math.pow(Math.pow(2, 10), 1/2 + exponentBoost) *\r\n                    Math.pow(amount / (1000 * Math.pow(2, 10)), 1/4 + exponentBoost / 2)\r\n    } else if (1000 * Math.pow(2, 18) < amount && amount <= 1000 * Math.pow(2, 44)) {\r\n      return effectiveValue * Math.pow(Math.pow(2, 10), 1/2 + exponentBoost) *\r\n                    Math.pow(Math.pow(2, 8), 1/4 + exponentBoost / 2) *\r\n                    Math.pow(amount / (1000 * Math.pow(2, 18)), 1/6 + exponentBoost / 3)\r\n    } else if (1000 * Math.pow(2, 44) < amount) {\r\n      return effectiveValue * Math.pow(Math.pow(2, 10), 1/2 + exponentBoost) *\r\n                    Math.pow(Math.pow(2, 8), 1/4 + exponentBoost / 2) *\r\n                    Math.pow(Math.pow(2, 26), 1/6 + exponentBoost / 3) *\r\n                    Math.pow(amount / (1000 * Math.pow(2, 44)), 1/12 + exponentBoost / 6)\r\n    }\r\n  }\r\n  if (player.hepteractCrafts[data].BAL > hepteractEffectiveValues[data].LIMIT) {\r\n    effectiveValue *= Math.pow(player.hepteractCrafts[data].BAL / hepteractEffectiveValues[data].LIMIT, hepteractEffectiveValues[data].DR + exponentBoost)\r\n  }\r\n\r\n  return effectiveValue\r\n}\r\n\r\nexport const hepteractDescriptions = (type: hepteractTypes) => {\r\n  DOMCacheGetOrSet('hepteractUnlockedText').style.display = 'block'\r\n  DOMCacheGetOrSet('hepteractCurrentEffectText').style.display = 'block'\r\n  DOMCacheGetOrSet('hepteractBalanceText').style.display = 'block'\r\n  DOMCacheGetOrSet('powderDayWarpText').style.display = 'none'\r\n  DOMCacheGetOrSet('hepteractCostText').style.display = 'block'\r\n\r\n  const unlockedText = DOMCacheGetOrSet('hepteractUnlockedText')\r\n  const effectText = DOMCacheGetOrSet('hepteractEffectText')\r\n  const currentEffectText = DOMCacheGetOrSet('hepteractCurrentEffectText')\r\n  const balanceText = DOMCacheGetOrSet('hepteractBalanceText')\r\n  const costText = DOMCacheGetOrSet('hepteractCostText')\r\n  const bonusCapacityText = DOMCacheGetOrSet('hepteractBonusCapacity')\r\n  const craftCostMulti = calculateSingularityDebuff('Hepteract Costs')\r\n\r\n  const multiplier = player.hepteractCrafts[type].computeActualCap() / player.hepteractCrafts[type].CAP\r\n  bonusCapacityText.textContent = (player.hepteractCrafts[type].computeActualCap() / player.hepteractCrafts[type].CAP > 1) ? `Hepteract capacities are currently multiplied by ${multiplier}. Expansions cost what they would if this multiplier were 1.` : ''\r\n  let currentEffectRecord!: StringMap\r\n  let oneCost!: string | Record<string, string>\r\n\r\n  switch (type) {\r\n    case 'chronos':\r\n      currentEffectRecord = { x: format(hepteractEffective('chronos') * 6 / 100, 2, true) }\r\n      oneCost = format(1e115 * craftCostMulti, 0, false)\r\n\r\n      break\r\n    case 'hyperrealism':\r\n      currentEffectRecord = { x: format(hepteractEffective('hyperrealism') * 6 / 100, 2, true) }\r\n      oneCost = format(1e80 * craftCostMulti, 0, true)\r\n      break\r\n    case 'quark':\r\n      currentEffectRecord = { x: format(hepteractEffective('quark') * 5 / 100, 2, true) }\r\n      oneCost = '100'\r\n      break\r\n    case 'challenge':\r\n      currentEffectRecord = { x: format(hepteractEffective('challenge') * 5 / 100, 2, true) }\r\n      oneCost = {\r\n        y: format(1e11 * craftCostMulti),\r\n        z: format(1e22 * craftCostMulti)\r\n      }\r\n      break\r\n    case 'abyss':\r\n      oneCost = format(69 * craftCostMulti)\r\n      break\r\n    case 'accelerator':\r\n      currentEffectRecord = {\r\n        x: format(2000 * hepteractEffective('accelerator'), 2, true),\r\n        y: format(hepteractEffective('accelerator') * 3 / 100, 2, true)\r\n      }\r\n      oneCost = format(1e14 * craftCostMulti)\r\n      break\r\n    case 'acceleratorBoost':\r\n      currentEffectRecord = { x: format(hepteractEffective('acceleratorBoost') / 10, 2, true) }\r\n      oneCost = format(1e10 * craftCostMulti)\r\n      break\r\n    case 'multiplier':\r\n      currentEffectRecord = {\r\n        x: format(1000 * hepteractEffective('multiplier'), 2, true),\r\n        y: format(hepteractEffective('multiplier') * 3 / 100, 2, true)\r\n      }\r\n      oneCost = format(1e130 * craftCostMulti)\r\n      break\r\n  }\r\n\r\n  effectText.textContent = i18next.t(`wowCubes.hepteractForge.descriptions.${type}.effect`)\r\n  currentEffectText.textContent = i18next.t(`wowCubes.hepteractForge.descriptions.${type}.currentEffect`, currentEffectRecord)\r\n  balanceText.textContent = i18next.t('wowCubes.hepteractForge.inventory', {\r\n    x: format(player.hepteractCrafts[type].BAL, 0, true),\r\n    y: format(player.hepteractCrafts[type].computeActualCap(), 0, true)\r\n  })\r\n  const record = typeof oneCost === 'string' ? { y: oneCost } : oneCost\r\n  costText.textContent = i18next.t(`wowCubes.hepteractForge.descriptions.${type}.oneCost`, {\r\n    x: format(player.hepteractCrafts[type].HEPTERACT_CONVERSION * craftCostMulti, 0, true),\r\n    ...record\r\n  })\r\n\r\n  unlockedText.textContent = player.hepteractCrafts[type].UNLOCKED\r\n    ? i18next.t('wowCubes.hepteractForge.unlocked')\r\n    : i18next.t('wowCubes.hepteractForge.locked')\r\n}\r\n\r\n/**\r\n * Generates the description at the bottom of the page for Overflux Orb crafting\r\n */\r\nexport const hepteractToOverfluxOrbDescription = () => {\r\n  DOMCacheGetOrSet('hepteractUnlockedText').style.display = 'none'\r\n  DOMCacheGetOrSet('powderDayWarpText').style.display = 'none'\r\n  DOMCacheGetOrSet('hepteractCostText').style.display = 'block'\r\n\r\n  DOMCacheGetOrSet('hepteractCurrentEffectText').textContent = i18next.t('hepteracts.orbEffect', {\r\n    x: format(100 * (-1 + calculateCubeQuarkMultiplier()), 2, true)\r\n  })\r\n  DOMCacheGetOrSet('hepteractBalanceText').textContent = i18next.t('hepteracts.orbsPurchasedToday', {\r\n    x: format(player.overfluxOrbs, 0, true)\r\n  })\r\n  DOMCacheGetOrSet('hepteractEffectText').textContent = i18next.t('hepteracts.amalgamate')\r\n  DOMCacheGetOrSet('hepteractCostText').textContent = i18next.t('hepteracts.cost250k')\r\n}\r\n\r\n/**\r\n * Trades Hepteracts for Overflux Orbs at 250,000 : 1 ratio. If null or invalid will gracefully terminate.\r\n * @returns Alert of either purchase failure or success\r\n */\r\nexport const tradeHepteractToOverfluxOrb = async (buyMax?:boolean) => {\r\n  const maxBuy = Math.floor(player.wowAbyssals / 250000)\r\n  let toUse: number\r\n\r\n  if (buyMax) {\r\n    if (player.toggles[35]) {\r\n      const craftYesPlz = await Confirm(i18next.t('hepteracts.craftMaxOrbs', { x: format(maxBuy, 0, true) }))\r\n      if (!craftYesPlz) {\r\n        return Alert(i18next.t('hepteracts.cancelled'))\r\n      }\r\n    }\r\n    toUse = maxBuy\r\n  } else {\r\n    const hepteractInput = await Prompt(i18next.t('hepteracts.hepteractInput', { x: format(maxBuy, 0, true) }))\r\n    if (hepteractInput === null) {\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.cancelled'))\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n\r\n    toUse = Number(hepteractInput)\r\n    if (isNaN(toUse) ||\r\n            !isFinite(toUse) ||\r\n            !Number.isInteger(toUse) ||\r\n            toUse <= 0) {\r\n      return Alert(i18next.t('general.validation.invalidNumber'))\r\n    }\r\n  }\r\n\r\n  const buyAmount = Math.min(maxBuy, Math.floor(toUse))\r\n  const beforeEffect = calculateCubeQuarkMultiplier()\r\n  player.overfluxOrbs += buyAmount\r\n  player.wowAbyssals -= 250000 * buyAmount\r\n  const afterEffect = calculateCubeQuarkMultiplier()\r\n\r\n  if (player.wowAbyssals < 0) {\r\n    player.wowAbyssals = 0\r\n  }\r\n\r\n  const powderGain = player.shopUpgrades.powderAuto * calculatePowderConversion().mult * buyAmount / 100\r\n  player.overfluxPowder += powderGain\r\n\r\n  const powderText = (powderGain > 0) ? i18next.t('hepteracts.gainedPowder', { x: format(powderGain, 2, true) }) : ''\r\n  if (player.toggles[35]) {\r\n    return Alert(i18next.t('hepteracts.purchasedOrbs', {\r\n      x: format(buyAmount, 0, true),\r\n      y: format(100 * (afterEffect - beforeEffect), 2, true),\r\n      z: powderText\r\n    }))\r\n  }\r\n}\r\n\r\nexport const toggleAutoBuyOrbs = (newValue?: boolean, firstLoad = false) => {\r\n  const HTML = DOMCacheGetOrSet('hepteractToQuarkTradeAuto')\r\n\r\n  if (!firstLoad) {\r\n    // When newValue is empty, current value is toggled\r\n    player.overfluxOrbsAutoBuy = newValue ?? !player.overfluxOrbsAutoBuy\r\n  }\r\n\r\n  HTML.textContent = player.overfluxOrbsAutoBuy ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\r\n  HTML.style.border = `2px solid ${player.overfluxOrbsAutoBuy ? 'green' : 'red'}`\r\n}\r\n\r\n/**\r\n * Generates the description at the bottom of the page for Overflux Powder Properties\r\n */\r\nexport const overfluxPowderDescription = () => {\r\n  let powderEffectText: string\r\n  if (player.platonicUpgrades[16] > 0) {\r\n    powderEffectText = i18next.t('hepteracts.allCubeGainExtended', {\r\n      x: format(100 * (calculateCubeMultFromPowder() - 1), 2, true),\r\n      y: format(100 * (calculateQuarkMultFromPowder() - 1), 3, true),\r\n      z: format(2 * player.platonicUpgrades[16] * Math.min(1, player.overfluxPowder / 1e5), 2, true),\r\n      a: format(Decimal.pow(player.overfluxPowder + 1, 10 * player.platonicUpgrades[16]))\r\n    })\r\n  } else {\r\n    powderEffectText = i18next.t('hepteracts.allCubeGain', {\r\n      x: format(100 * (calculateCubeMultFromPowder() - 1), 2, true),\r\n      y: format(100 * (calculateQuarkMultFromPowder() - 1), 3, true)\r\n    })\r\n  }\r\n  DOMCacheGetOrSet('hepteractUnlockedText').style.display = 'none'\r\n  DOMCacheGetOrSet('hepteractCurrentEffectText').textContent = i18next.t('hepteracts.powderEffect', { x: powderEffectText })\r\n  DOMCacheGetOrSet('hepteractBalanceText').textContent = i18next.t('hepteracts.powderLumps', { x: format(player.overfluxPowder, 2, true) })\r\n  DOMCacheGetOrSet('hepteractEffectText').textContent = i18next.t('hepteracts.expiredOrbs', {\r\n    x: format(1 / calculatePowderConversion().mult, 1, true)\r\n  })\r\n  DOMCacheGetOrSet('hepteractCostText').style.display = 'none'\r\n\r\n  DOMCacheGetOrSet('powderDayWarpText').style.display = 'block'\r\n  DOMCacheGetOrSet('powderDayWarpText').textContent = i18next.t('hepteracts.dayWarpsRemaining', { x: player.dailyPowderResetUses })\r\n}\r\n\r\n/**\r\n * Attempts to operate a 'Day Reset' which, if successful, resets Daily Cube counters for the player.\r\n * Note by Platonic: kinda rushed job but idk if it can be improved.\r\n * @returns Alert, either for success or failure of warping\r\n */\r\nexport const overfluxPowderWarp = async (auto: boolean) => {\r\n  if (!auto) {\r\n    if (player.autoWarpCheck) {\r\n      return Alert(i18next.t('hepteracts.warpImpossible'))\r\n    }\r\n    if (player.dailyPowderResetUses <= 0) {\r\n      return Alert(i18next.t('hepteracts.machineCooldown'))\r\n    }\r\n    if (player.overfluxPowder < 25) {\r\n      return Alert(i18next.t('hepteracts.atleastPowder'))\r\n    }\r\n    const c = await Confirm(i18next.t('hepteracts.stumbleMachine'))\r\n    if (!c) {\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.walkAwayMachine'))\r\n      }\r\n    } else {\r\n      player.overfluxPowder -= 25\r\n      player.dailyPowderResetUses -= 1\r\n      forcedDailyReset()\r\n      if (player.toggles[35]) {\r\n        return Alert(i18next.t('hepteracts.useMachine'))\r\n      }\r\n    }\r\n  } else {\r\n    if (player.autoWarpCheck) {\r\n      const a = await Confirm(i18next.t('hepteracts.useAllWarpsPrompt'))\r\n      if (a) {\r\n        DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOffColon')\r\n        DOMCacheGetOrSet('warpAuto').style.border = '2px solid red'\r\n        player.autoWarpCheck = false\r\n        player.dailyPowderResetUses = 0\r\n        return Alert(i18next.t('hepteracts.machineCooldown'))\r\n      } else {\r\n        if (player.toggles[35]) {\r\n          return Alert(i18next.t('hepteracts.machineDidNotConsume'))\r\n        }\r\n      }\r\n    } else {\r\n      const a = await Confirm(i18next.t('hepteracts.boostQuarksPrompt'))\r\n      if (a) {\r\n        DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOnColon')\r\n        DOMCacheGetOrSet('warpAuto').style.border = '2px solid green'\r\n        player.autoWarpCheck = true\r\n        if (player.dailyPowderResetUses === 0) {\r\n          return Alert(i18next.t('hepteracts.machineOverdrive'))\r\n        }\r\n        return Alert(i18next.t('hepteracts.machineInOverdrive'))\r\n      } else {\r\n        if (player.toggles[35]) {\r\n          return Alert(i18next.t('hepteracts.machineUsualContinue'))\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get the HepteractCrafts which are unlocked and auto = ON\r\n * @returns Array of HepteractCraft\r\n */\r\nexport const getAutoHepteractCrafts = () => {\r\n  const autoHepteracts: HepteractCraft[] = []\r\n  for (const craftName of Object.keys(player.hepteractCrafts)) {\r\n    const craftKey = craftName as keyof Player['hepteractCrafts']\r\n    if (player.hepteractCrafts[craftKey].AUTO && player.hepteractCrafts[craftKey].UNLOCKED) {\r\n      autoHepteracts.push(player.hepteractCrafts[craftKey])\r\n    }\r\n  }\r\n  return autoHepteracts\r\n}\r\n\r\n// Hepteract of Chronos [UNLOCKED]\r\nexport const ChronosHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 1e4,\r\n  OTHER_CONVERSIONS: { 'researchPoints': 1e115 },\r\n  HTML_STRING: 'chronos',\r\n  UNLOCKED: true\r\n})\r\n\r\n// Hepteract of Hyperrealism [UNLOCKED]\r\nexport const HyperrealismHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 1e4,\r\n  OTHER_CONVERSIONS: { 'runeshards': 1e80 },\r\n  HTML_STRING: 'hyperrealism',\r\n  UNLOCKED: true\r\n})\r\n\r\n// Hepteract of Too Many Quarks [UNLOCKED]\r\nexport const QuarkHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 1e4,\r\n  OTHER_CONVERSIONS: { 'worlds': 100 },\r\n  HTML_STRING: 'quark',\r\n  UNLOCKED: true\r\n})\r\n\r\n// Hepteract of Challenge [LOCKED]\r\nexport const ChallengeHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 5e4,\r\n  OTHER_CONVERSIONS: { 'wowPlatonicCubes': 1e11, 'wowCubes': 1e22 },\r\n  HTML_STRING: 'challenge'\r\n})\r\n\r\n// Hepteract of The Abyssal [LOCKED]\r\nexport const AbyssHepteract = new HepteractCraft({\r\n  BASE_CAP: 1,\r\n  HEPTERACT_CONVERSION: 1e8,\r\n  OTHER_CONVERSIONS: { 'wowCubes': 69 },\r\n  HTML_STRING: 'abyss'\r\n})\r\n\r\n// Hepteract of Too Many Accelerator [LOCKED]\r\nexport const AcceleratorHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 1e5,\r\n  OTHER_CONVERSIONS: { 'wowTesseracts': 1e14 },\r\n  HTML_STRING: 'accelerator'\r\n})\r\n\r\n// Hepteract of Too Many Accelerator Boost [LOCKED]\r\nexport const AcceleratorBoostHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 2e5,\r\n  OTHER_CONVERSIONS: { 'wowHypercubes': 1e10 },\r\n  HTML_STRING: 'acceleratorBoost'\r\n})\r\n\r\n// Hepteract of Too Many Multiplier [LOCKED]\r\nexport const MultiplierHepteract = new HepteractCraft({\r\n  BASE_CAP: 1000,\r\n  HEPTERACT_CONVERSION: 3e5,\r\n  OTHER_CONVERSIONS: { 'researchPoints': 1e130 },\r\n  HTML_STRING: 'multiplier'\r\n})\r\n", "import { player, format, formatTimeShort } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { hepteractEffective } from './Hepteracts'\r\nimport { calculateSigmoidExponential, calculateCubeMultiplier, calculateOfferings, calculateTimeAcceleration, calculateTesseractMultiplier, calculateHypercubeMultiplier, calculatePlatonicMultiplier, calculateHepteractMultiplier, calculateAllCubeMultiplier, calculateSigmoid, calculatePowderConversion, calculateEffectiveIALevel, calculateQuarkMultFromPowder, calculateOcteractMultiplier, calculateQuarkMultiplier, calculateEventBuff, calculateSingularityQuarkMilestoneMultiplier, calculateTotalOcteractQuarkBonus, calculateAscensionSpeedMultiplier, calculateGoldenQuarkMultiplier } from './Calculate'\r\nimport { challenge15ScoreMultiplier } from './Challenges'\r\nimport type { GlobalVariables } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport Decimal from 'break_infinity.js'\r\nimport { addCodeMaxUses, addCodeInterval, addCodeAvailableUses, addCodeTimeToNextUse, addCodeBonuses } from './ImportExport'\r\n\r\nconst associated = new Map<string, string>([\r\n  ['kMisc', 'miscStats'],\r\n  ['kFreeAccel', 'acceleratorStats'],\r\n  ['kFreeMult', 'multiplierStats'],\r\n  ['kOfferingMult', 'offeringMultiplierStats'],\r\n  ['kGlobalCubeMult', 'globalCubeMultiplierStats'],\r\n  ['kQuarkMult', 'globalQuarkMultiplierStats'],\r\n  ['kGSpeedMult', 'globalSpeedMultiplierStats'],\r\n  ['kCubeMult', 'cubeMultiplierStats'],\r\n  ['kTessMult', 'tesseractMultiplierStats'],\r\n  ['kHypercubeMult', 'hypercubeMultiplierStats'],\r\n  ['kPlatMult', 'platonicMultiplierStats'],\r\n  ['kHeptMult', 'hepteractMultiplierStats'],\r\n  ['kOrbPowderMult', 'powderMultiplierStats'],\r\n  ['kOctMult', 'octeractMultiplierStats'],\r\n  ['kASCMult', 'ascensionSpeedMultiplierStats'],\r\n  ['kGQMult', 'goldenQuarkMultiplierStats'],\r\n  ['kAddStats', 'addCodeStats']\r\n])\r\n\r\nexport const displayStats = (btn: HTMLElement) => {\r\n  for (const e of Array.from(btn.parentElement!.children) as HTMLElement[]) {\r\n    const statsEl = DOMCacheGetOrSet(associated.get(e.id)!)\r\n    if (e.id !== btn.id) {\r\n      e.style.backgroundColor = ''\r\n      statsEl.style.display = 'none'\r\n      statsEl.classList.remove('activeStats')\r\n    } else {\r\n      e.style.backgroundColor = 'crimson'\r\n      statsEl.style.display = 'block'\r\n      statsEl.classList.add('activeStats')\r\n    }\r\n  }\r\n}\r\n\r\nexport const loadStatisticsUpdate = () => {\r\n  const activeStats = document.getElementsByClassName('activeStats') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < activeStats.length; i++) {\r\n    switch (activeStats[i].id) {\r\n      case 'miscStats':\r\n        loadStatisticsMiscellaneous()\r\n        break\r\n      case 'acceleratorStats':\r\n        loadStatisticsAccelerator()\r\n        break\r\n      case 'multiplierStats':\r\n        loadStatisticsMultiplier()\r\n        break\r\n      case 'offeringMultiplierStats':\r\n        loadStatisticsOfferingMultipliers()\r\n        break\r\n      case 'globalQuarkMultiplierStats':\r\n        loadQuarkMultiplier()\r\n        break\r\n      case 'globalSpeedMultiplierStats':\r\n        loadGlobalSpeedMultiplier()\r\n        break\r\n      case 'powderMultiplierStats':\r\n        loadPowderMultiplier()\r\n        break\r\n      case 'ascensionSpeedMultiplierStats':\r\n        loadStatisticsAscensionSpeedMultipliers()\r\n        break\r\n      case 'goldenQuarkMultiplierStats':\r\n        loadStatisticsGoldenQuarkMultipliers()\r\n        break\r\n      case 'addCodeStats':\r\n        loadAddCodeModifiersAndEffects()\r\n        break\r\n      default:\r\n        loadStatisticsCubeMultipliers()\r\n        break\r\n    }\r\n  }\r\n}\r\n\r\nexport const loadStatisticsMiscellaneous = () => {\r\n  DOMCacheGetOrSet('sMisc1').textContent = format(player.prestigeCount, 0, true)\r\n  DOMCacheGetOrSet('sMisc2').textContent = format(1000 * player.fastestprestige) + 'ms'\r\n  DOMCacheGetOrSet('sMisc3').textContent = format(player.maxofferings)\r\n  DOMCacheGetOrSet('sMisc4').textContent = format(G.runeSum)\r\n  DOMCacheGetOrSet('sMisc5').textContent = format(player.transcendCount, 0, true)\r\n  DOMCacheGetOrSet('sMisc6').textContent = format(1000 * player.fastesttranscend) + 'ms'\r\n  DOMCacheGetOrSet('sMisc7').textContent = format(player.reincarnationCount, 0, true)\r\n  DOMCacheGetOrSet('sMisc8').textContent = format(1000 * player.fastestreincarnate) + 'ms'\r\n  DOMCacheGetOrSet('sMisc9').textContent = format(player.maxobtainium)\r\n  DOMCacheGetOrSet('sMisc10').textContent = format(player.maxobtainiumpersecond, 2, true)\r\n  DOMCacheGetOrSet('sMisc11').textContent = format(player.obtainiumpersecond, 2, true)\r\n  DOMCacheGetOrSet('sMisc12').textContent = format(player.ascensionCount, 0, true)\r\n  DOMCacheGetOrSet('sMisc13').textContent = format(player.quarksThisSingularity, 0, true)\r\n  DOMCacheGetOrSet('sMisc14').textContent = format(player.totalQuarksEver + player.quarksThisSingularity, 0, true)\r\n  DOMCacheGetOrSet('sMisc15').textContent = formatTimeShort(player.quarkstimer) + ' / ' + formatTimeShort(90000 + 18000 * player.researches[195])\r\n  DOMCacheGetOrSet('sMisc16').textContent = synergismStage(0)\r\n}\r\n\r\nexport const loadStatisticsAccelerator = () => {\r\n  DOMCacheGetOrSet('sA1').textContent = '+' + format(G.freeUpgradeAccelerator, 0, false)\r\n  DOMCacheGetOrSet('sA2').textContent = '+' + format(G.totalAcceleratorBoost * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G.cubeBonusMultiplier[1]), 0, false)\r\n  DOMCacheGetOrSet('sA3').textContent = '+' + format(Math.floor(Math.pow(G.rune1level * G.effectiveLevelMult / 10, 1.1)), 0, true)\r\n  DOMCacheGetOrSet('sA4').textContent = 'x' + format(1 + G.rune1level * 1 / 200 * G.effectiveLevelMult, 3, true)\r\n  DOMCacheGetOrSet('sA5').textContent = 'x' + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]), 3, true)\r\n  DOMCacheGetOrSet('sA6').textContent = 'x' + format(Math.pow(1.01, player.achievements[60] + player.achievements[61] + player.achievements[62]), 3, true)\r\n  DOMCacheGetOrSet('sA7').textContent = 'x' + format(1 + 1 / 5 * player.researches[1], 3, true)\r\n  DOMCacheGetOrSet('sA8').textContent = 'x' + format(1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10], 3, true)\r\n  DOMCacheGetOrSet('sA9').textContent = 'x' + format(1 + 1 / 20 * player.researches[86], 3, true)\r\n  DOMCacheGetOrSet('sA10').textContent = 'x' + format(((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5 ? 1.25 : 1), 3, true)\r\n  DOMCacheGetOrSet('sA11').textContent = '^' + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G.viscosityPower[player.usedCorruptions[2]]), 3, true)\r\n  DOMCacheGetOrSet('sA12').textContent = format(G.freeAccelerator, 0, true)\r\n}\r\n\r\nexport const loadStatisticsMultiplier = () => {\r\n  DOMCacheGetOrSet('sM1').textContent = '+' + format(G.freeUpgradeMultiplier, 0, true)\r\n  DOMCacheGetOrSet('sM2').textContent = '+' + format(Math.floor(Math.floor(G.rune2level / 10 * G.effectiveLevelMult) * Math.floor(10 + G.rune2level / 10 * G.effectiveLevelMult) / 2) * 100 / 100, 0, true)\r\n  DOMCacheGetOrSet('sM3').textContent = 'x' + format(1 + G.rune2level / 200 * G.effectiveLevelMult, 3, true)\r\n  DOMCacheGetOrSet('sM4').textContent = 'x' + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]) * (1 + player.upgrades[34] * 3 / 100) * (1 + player.upgrades[34] * (2 / 103)), 3, true)\r\n  DOMCacheGetOrSet('sM5').textContent = 'x' + format(Math.pow(1.01, player.achievements[57] + player.achievements[58] + player.achievements[59]), 3, true)\r\n  DOMCacheGetOrSet('sM6').textContent = 'x' + format(1 + 1 / 5 * player.researches[2], 3, true)\r\n  DOMCacheGetOrSet('sM7').textContent = 'x' + format(1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15], 3, true)\r\n  DOMCacheGetOrSet('sM8').textContent = 'x' + format(1 + 1 / 20 * player.researches[87], 3, true)\r\n  DOMCacheGetOrSet('sM9').textContent = 'x' + format(calculateSigmoidExponential(40, (player.antUpgrades[4]! + G.bonusant5) / 1000 * 40 / 39), 2, true)\r\n  DOMCacheGetOrSet('sM10').textContent = 'x' + format(G.cubeBonusMultiplier[2], 3, true)\r\n  DOMCacheGetOrSet('sM11').textContent = 'x' + format(((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5 ? 1.25 : 1), 3, true)\r\n  DOMCacheGetOrSet('sM12').textContent = '^' + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G.viscosityPower[player.usedCorruptions[2]]), 3, true)\r\n  DOMCacheGetOrSet('sM13').textContent = format(G.freeMultiplier, 3, true)\r\n}\r\nexport const loadQuarkMultiplier = () => {\r\n  DOMCacheGetOrSet('sGQM1').textContent = 'x' + format(1, 3, true) //Base\r\n  DOMCacheGetOrSet('sGQM2').textContent = '+' + format(player.achievementPoints / 25000, 3, true) //AP\r\n  DOMCacheGetOrSet('sGQM3').textContent = '+' + format(player.achievements[250] > 0 ? 0.10 : 0, 3, true) //Max r8x25\r\n  DOMCacheGetOrSet('sGQM4').textContent = '+' + format(player.achievements[251] > 0 ? 0.10 : 0, 3, true) //Max w5x10\r\n  DOMCacheGetOrSet('sGQM5').textContent = '+' + format(player.platonicUpgrades[5] > 0 ? 0.20 : 0, 3, true) //ALPHA\r\n  DOMCacheGetOrSet('sGQM6').textContent = '+' + format(player.platonicUpgrades[10] > 0 ? 0.25 : 0, 3, true) //BETA\r\n  DOMCacheGetOrSet('sGQM7').textContent = '+' + format(player.platonicUpgrades[15] > 0 ? 0.30 : 0, 3, true) //OMEGA\r\n  DOMCacheGetOrSet('sGQM8').textContent = '+' + format(G.challenge15Rewards.quarks-1, 3, true) //Challenge 15 Reward\r\n  DOMCacheGetOrSet('sGQM9').textContent = 'x' + format(player.worlds.applyBonus(1 / calculateQuarkMultiplier()), 3, true) //Patreon Bonus\r\n  DOMCacheGetOrSet('sGQM10').textContent = 'x' + format((G.isEvent ? 1 + calculateEventBuff('Quarks') + calculateEventBuff('One Mind') : 1), 3, true) //Event\r\n  DOMCacheGetOrSet('sGQM11').textContent = 'x' + format(1.1 + 0.15 / 75 * calculateEffectiveIALevel(), 3, true) //IA Rune\r\n  DOMCacheGetOrSet('sGQM12').textContent = 'x' + format(player.challenge15Exponent >= 1e15 ? 1 + 5/10000 * hepteractEffective('quark') : 1, 3, true) //Quark Hepteract\r\n  DOMCacheGetOrSet('sGQM13').textContent = 'x' + format(calculateQuarkMultFromPowder(), 3, true) //Powder\r\n  DOMCacheGetOrSet('sGQM14').textContent = 'x' + format(1 + player.achievements[266] * Math.min(0.1, (player.ascensionCount) / 1e16), 3, true) // Achievement 266 [Max: 10% at 1Qa Ascensions]\r\n  DOMCacheGetOrSet('sGQM15').textContent = 'x' + format(1 + player.singularityCount / 10, 3, true) //Singularity\r\n  DOMCacheGetOrSet('sGQM16').textContent = 'x' + format(calculateSingularityQuarkMilestoneMultiplier(), 3, true) // Singularity Milestones\r\n  DOMCacheGetOrSet('sGQM17').textContent = 'x' + format(1 + 0.10 * player.cubeUpgrades[53] / 100, 3, true) // Cube Upgrade 6x3 (Cx3)\r\n  DOMCacheGetOrSet('sGQM18').textContent = 'x' + format(1 + 1/10000 * player.cubeUpgrades[68] + 0.05 * (Math.floor(player.cubeUpgrades[68] / 1000)), 3, true)\r\n  DOMCacheGetOrSet('sGQM19').textContent = 'x' + format(1 + 0.02 * player.singularityUpgrades.intermediatePack.level +           // 1.02\r\n                                                            0.04 * player.singularityUpgrades.advancedPack.level +               // 1.06\r\n                                                            0.06 * player.singularityUpgrades.expertPack.level +                 // 1.12\r\n                                                            0.08 * player.singularityUpgrades.masterPack.level +                 // 1.20\r\n                                                            0.10 * player.singularityUpgrades.divinePack.level, 3, true)\r\n  DOMCacheGetOrSet('sGQM20').textContent = 'x' + format(1 + 0.25 * +player.octeractUpgrades.octeractStarter.getEffect().bonus, 3, true)\r\n  DOMCacheGetOrSet('sGQM21').textContent = 'x' + format(+player.octeractUpgrades.octeractQuarkGain.getEffect().bonus, 3, true)\r\n  DOMCacheGetOrSet('sGQM22').textContent = 'x' + format(calculateTotalOcteractQuarkBonus(), 3, true)\r\n  DOMCacheGetOrSet('sGQM23').textContent = 'x' + format(1 + +player.singularityUpgrades.singQuarkImprover1.getEffect().bonus, 3, true)\r\n  DOMCacheGetOrSet('sGQM24').textContent = 'x' + format(1 + 1/10000 * Math.floor(player.octeractUpgrades.octeractQuarkGain.level / 199) *\r\n                                                            player.octeractUpgrades.octeractQuarkGain2.level *\r\n                                                            Math.floor(1 + Math.log10(Math.max(1, player.hepteractCrafts.quark.BAL))),\r\n  3,\r\n  true)\r\n  DOMCacheGetOrSet('sGQMT').textContent = 'x' + format(player.worlds.applyBonus(1), 3, true)\r\n}\r\n\r\nexport const loadGlobalSpeedMultiplier = () => {\r\n  const globalSpeedStats = calculateTimeAcceleration()\r\n\r\n  const preDRlist = globalSpeedStats.preList\r\n  for (let i = 0; i < preDRlist.length; i++) {\r\n    DOMCacheGetOrSet(`sGSMa${i + 1}`).textContent = `x${format(preDRlist[i], 3, true)}`\r\n  }\r\n\r\n  const drList = globalSpeedStats.drList\r\n  for (let i = 0; i < drList.length; i++) {\r\n    DOMCacheGetOrSet(`sGSMb${i + 1}`).textContent = `x${format(drList[i], 3, true)}`\r\n  }\r\n\r\n  const postDRlist = globalSpeedStats.postList\r\n  for (let i = 0; i < postDRlist.length; i++) {\r\n    DOMCacheGetOrSet(`sGSMc${i + 1}`).textContent = `x${format(postDRlist[i], 3, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sGSMT').textContent = format(globalSpeedStats.mult, 3)\r\n}\r\n\r\nexport const loadStatisticsCubeMultipliers = () => {\r\n\r\n  const arr0 = calculateAllCubeMultiplier().list\r\n  const map0: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Time Multiplier:' },\r\n    2: { acc: 2, desc: 'Sun and Moon Achievements:' },\r\n    3: { acc: 2, desc: 'Speed Achievement:' },\r\n    4: { acc: 2, desc: 'Challenge 15 All Cube Bonus:' },\r\n    5: { acc: 2, desc: 'Rune 6 - Infinite Ascent:' },\r\n    6: { acc: 2, desc: 'Platonic Beta:' },\r\n    7: { acc: 2, desc: 'Platonic Omega:' },\r\n    8: { acc: 2, desc: 'Overflux Powder:' },\r\n    9: { acc: 2, desc: 'Event:' },\r\n    10: { acc: 2, desc: 'Singularity Factor:' },\r\n    11: { acc: 2, desc: 'Wow Pass Y' },\r\n    12: { acc: 2, desc: 'Starter Pack:' },\r\n    13: { acc: 2, desc: 'Cube Flame [GQ]:' },\r\n    14: { acc: 2, desc: 'Cube Blaze [GQ]:' },\r\n    15: { acc: 2, desc: 'Cube Inferno [GQ]:' },\r\n    16: { acc: 2, desc: 'Wow Pass Z:' },\r\n    17: { acc: 2, desc: 'Cookie Upgrade 16:' },\r\n    18: { acc: 2, desc: 'Cookie Upgrade 8:' },\r\n    19: { acc: 2, desc: 'Total Octeract Bonus:' },\r\n    20: { acc: 2, desc: 'No Singularity Upgrades Challenge:' },\r\n    21: { acc: 2, desc: 'Citadel [GQ]' },\r\n    22: { acc: 2, desc: 'Citadel 2 [GQ]' },\r\n    23: { acc: 4, desc: 'Platonic DELTA' },\r\n    24: { acc: 2, desc: 'Wow Pass \u221E' }\r\n  }\r\n  for (let i = 0; i < arr0.length; i++) {\r\n    const statGCMi = DOMCacheGetOrSet(`statGCM${i + 1}`)\r\n    statGCMi.childNodes[0].textContent = map0[i + 1].desc\r\n    DOMCacheGetOrSet(`sGCM${i + 1}`).textContent = `x${format(arr0[i], map0[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sGCMT').textContent = `x${format(calculateAllCubeMultiplier().mult, 3)}`\r\n\r\n  const arr = calculateCubeMultiplier().list\r\n  const map: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Global Cube Multiplier:' },\r\n    3: { acc: 2, desc: 'Season Pass 1:' },\r\n    4: { acc: 2, desc: 'Researches (Except 8x25):' },\r\n    5: { acc: 2, desc: 'Research 8x25:' },\r\n    6: { acc: 2, desc: 'Cube Upgrades:' },\r\n    7: { acc: 2, desc: 'Constant Upgrade 10:' },\r\n    8: { acc: 2, desc: 'Achievement 189 Bonus:' },\r\n    9: { acc: 2, desc: 'Achievement 193 Bonus:' },\r\n    10: { acc: 2, desc: 'Achievement 195 Bonus:' },\r\n    11: { acc: 2, desc: 'Achievement 198-201 Bonus:' },\r\n    12: { acc: 2, desc: 'Achievement 254 Bonus:' },\r\n    13: { acc: 2, desc: 'Spirit Power:' },\r\n    14: { acc: 2, desc: 'Platonic Cubes:' },\r\n    15: { acc: 2, desc: 'Platonic 1x1:' },\r\n    16: { acc: 2, desc: 'Cookie Upgrade 13:' }\r\n  }\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const statCMi = DOMCacheGetOrSet(`statCM${i + 1}`)\r\n    statCMi.childNodes[0].textContent = map[i + 1].desc\r\n    DOMCacheGetOrSet(`sCM${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`\r\n  }\r\n  // PLAT\r\n  DOMCacheGetOrSet('sCMT').textContent = `x${format(calculateCubeMultiplier().mult, 3)}`\r\n\r\n  const arr2 = calculateTesseractMultiplier().list\r\n  const map2: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Global Cube Multiplier:' },\r\n    3: { acc: 2, desc: 'Season Pass 1:' },\r\n    4: { acc: 2, desc: 'Constant Upgrade 10:' },\r\n    5: { acc: 2, desc: 'Cube Upgrade 3x10:' },\r\n    6: { acc: 2, desc: 'Cube Upgrade 4x8:' },\r\n    7: { acc: 2, desc: 'Achievement 195 Bonus:' },\r\n    8: { acc: 2, desc: 'Achievement 202 Bonus:' },\r\n    9: { acc: 2, desc: 'Achievement 205-208 Bonus:' },\r\n    10: { acc: 2, desc: 'Achievement 255 Bonus:' },\r\n    11: { acc: 2, desc: 'Platonic Cubes:' },\r\n    12: { acc: 2, desc: 'Platonic 1x2:' }\r\n  }\r\n  for (let i = 0; i < arr2.length; i++) {\r\n    const statTeMi = DOMCacheGetOrSet(`statTeM${i + 1}`)\r\n    statTeMi.childNodes[0].textContent = map2[i + 1].desc\r\n    DOMCacheGetOrSet(`sTeM${i + 1}`).textContent = `x${format(arr2[i], map2[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sTeMT').textContent = `x${format(calculateTesseractMultiplier().mult, 3)}`\r\n\r\n  const arr3 = calculateHypercubeMultiplier().list\r\n  const map3: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Global Cube Multiplier:' },\r\n    3: { acc: 2, desc: 'Season Pass 2:' },\r\n    4: { acc: 2, desc: 'Achievement 212-215 Bonus:' },\r\n    5: { acc: 2, desc: 'Achievement 216 Bonus:' },\r\n    6: { acc: 2, desc: 'Achievement 253 Bonus:' },\r\n    7: { acc: 2, desc: 'Achievement 256 Bonus:' },\r\n    8: { acc: 2, desc: 'Achievement 265 Bonus:' },\r\n    9: { acc: 2, desc: 'Platonic Cubes:' },\r\n    10: { acc: 2, desc: 'Platonic 1x3:' },\r\n    11: { acc: 2, desc: 'Hyperreal Hepteract Bonus:' }\r\n  }\r\n  for (let i = 0; i < arr3.length; i++) {\r\n    const statHyMi = DOMCacheGetOrSet(`statHyM${i + 1}`)\r\n    statHyMi.childNodes[0].textContent = map3[i + 1].desc\r\n    DOMCacheGetOrSet(`sHyM${i + 1}`).textContent = `x${format(arr3[i], map3[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sHyMT').textContent = `x${format(calculateHypercubeMultiplier().mult, 3)}`\r\n\r\n  const arr4 = calculatePlatonicMultiplier().list\r\n  const map4: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Global Cube Multiplier:' },\r\n    3: { acc: 2, desc: 'Season Pass 2:' },\r\n    4: { acc: 2, desc: 'Achievement 196 Bonus:' },\r\n    5: { acc: 2, desc: 'Achievement 219-222 Bonus:' },\r\n    6: { acc: 2, desc: 'Achievement 223 Bonus:' },\r\n    7: { acc: 2, desc: 'Achievement 257 Bonus:' },\r\n    8: { acc: 2, desc: 'Platonic Cubes:' },\r\n    9: { acc: 2, desc: 'Platonic 1x4:' }\r\n  }\r\n  for (let i = 0; i < arr4.length; i++) {\r\n    const statPlMi = DOMCacheGetOrSet(`statPlM${i + 1}`)\r\n    statPlMi.childNodes[0].textContent = map4[i + 1].desc\r\n    DOMCacheGetOrSet(`sPlM${i + 1}`).textContent = `x${format(arr4[i], map4[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sPlMT').textContent = `x${format(calculatePlatonicMultiplier().mult, 3)}`\r\n\r\n  const arr5 = calculateHepteractMultiplier().list\r\n  const map5: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Global Cube Multiplier:' },\r\n    3: { acc: 2, desc: 'Season Pass 3:' },\r\n    4: { acc: 2, desc: 'Achievement 258 Bonus:' },\r\n    5: { acc: 2, desc: 'Achievement 264 Bonus:' },\r\n    6: { acc: 2, desc: 'Achievement 265 Bonus:' },\r\n    7: { acc: 2, desc: 'Achievement 270 Bonus:' }\r\n  }\r\n  for (let i = 0; i < arr5.length; i++) {\r\n    const statHeMi = DOMCacheGetOrSet(`statHeM${i + 1}`)\r\n    statHeMi.childNodes[0].textContent = map5[i + 1].desc\r\n    DOMCacheGetOrSet(`sHeM${i + 1}`).textContent = `x${format(arr5[i], map5[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sHeMT').textContent = `x${format(calculateHepteractMultiplier().mult, 3)}`\r\n\r\n  const octMults = calculateOcteractMultiplier()\r\n  const ascensionSpeedDesc = (player.singularityUpgrades.oneMind.getEffect().bonus) ? 'One Mind Multiplier' : 'Ascension Speed Multiplier'\r\n  const map6: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Ascension Score Multiplier:' },\r\n    2: { acc: 2, desc: 'Season Pass 3:' },\r\n    3: { acc: 2, desc: 'Season Pass Y:' },\r\n    4: { acc: 2, desc: 'Season Pass Z:' },\r\n    5: { acc: 2, desc: 'Season Pass Lost:' },\r\n    6: { acc: 2, desc: 'Cookie Upgrade 20:' },\r\n    7: { acc: 2, desc: 'Divine Pack:' },\r\n    8: { acc: 2, desc: 'Cube Flame:' },\r\n    9: { acc: 2, desc: 'Cube Blaze:' },\r\n    10: { acc: 2, desc: 'Cube Inferno:' },\r\n    11: { acc: 2, desc: 'Octeract Absinthe' },\r\n    12: { acc: 2, desc: 'Pieces of Eight' },\r\n    13: { acc: 2, desc: 'Obelisk Shaped Like an Octagon' },\r\n    14: { acc: 2, desc: 'Octahedral Synthesis' },\r\n    15: { acc: 2, desc: 'Eighth Wonder of the World' },\r\n    16: { acc: 2, desc: 'Platonic is a fat sellout' },\r\n    17: { acc: 2, desc: 'Octeracts for Dummies' },\r\n    18: { acc: 2, desc: 'Octeract Cogenesis' },\r\n    19: { acc: 2, desc: 'Octeract Trigenesis' },\r\n    20: { acc: 2, desc: 'Singularity Factor' },\r\n    21: { acc: 2, desc: 'Digital Octeract Accumulator' },\r\n    22: { acc: 2, desc: 'Event Buff' },\r\n    23: { acc: 2, desc: 'Platonic DELTA' },\r\n    24: { acc: 2, desc: 'No Singularity Upgrades Challenge' },\r\n    25: { acc: 2, desc: 'Wow Pass \u221E' },\r\n    26: { acc: 2, desc: ascensionSpeedDesc }\r\n  }\r\n  for (let i = 0; i < octMults.list.length; i++) {\r\n    const statOcMi = DOMCacheGetOrSet(`statOcM${i + 1}`)\r\n    statOcMi.childNodes[0].textContent = map6[i + 1].desc\r\n    DOMCacheGetOrSet(`sOcM${i + 1}`).textContent = `x${format(octMults.list[i], map6[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sOcMT').textContent = `x${format(octMults.mult, 3)}`\r\n}\r\n\r\nexport const loadStatisticsOfferingMultipliers = () => {\r\n  const arr = calculateOfferings('prestige', false)\r\n  const map: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 3, desc: 'Alchemy Achievement 5:' },\r\n    2: { acc: 3, desc: 'Alchemy Achievement 6:' },\r\n    3: { acc: 3, desc: 'Alchemy Achievement 7:' },\r\n    4: { acc: 3, desc: 'Diamond Upgrade 4x3:' },\r\n    5: { acc: 3, desc: 'Particle Upgrade 3x5:' },\r\n    6: { acc: 3, desc: 'Auto Offering Shop Upgrade:' },\r\n    7: { acc: 3, desc: 'Offering EX Shop Upgrade:' },\r\n    8: { acc: 3, desc: 'Cash Grab Shop Upgrade:' },\r\n    9: { acc: 3, desc: 'Research 4x10:' },\r\n    10: { acc: 3, desc: 'Sacrificium Formicidae:' },\r\n    11: { acc: 3, desc: 'Plutus Cube Tribute:' },\r\n    12: { acc: 3, desc: 'Constant Upgrade 3:' },\r\n    13: { acc: 3, desc: 'Research 6x24,8x4:' },\r\n    14: { acc: 3, desc: 'Challenge 12:' },\r\n    15: { acc: 3, desc: 'Research 8x25:' },\r\n    16: { acc: 3, desc: 'Ascension Count Achievement:' },\r\n    17: { acc: 3, desc: 'Sun and Moon Achievements:' },\r\n    18: { acc: 3, desc: 'Cube Upgrade 5x6:' },\r\n    19: { acc: 3, desc: 'Cube Upgrade 5x10:' },\r\n    20: { acc: 3, desc: 'Platonic ALPHA:' },\r\n    21: { acc: 3, desc: 'Platonic BETA:' },\r\n    22: { acc: 3, desc: 'Platonic OMEGA:' },\r\n    23: { acc: 3, desc: 'Challenge 15:' },\r\n    24: { acc: 3, desc: 'Starter Pack:' },\r\n    25: { acc: 3, desc: 'Offering Charge [GQ]:' },\r\n    26: { acc: 3, desc: 'Offering Storm [GQ]:' },\r\n    27: { acc: 3, desc: 'Offering Tempest [GQ]:' },\r\n    28: { acc: 3, desc: 'Citadel [GQ]' },\r\n    29: { acc: 3, desc: 'Citadel 2 [GQ]' },\r\n    30: { acc: 3, desc: 'Cube Upgrade Cx4:' },\r\n    31: { acc: 3, desc: 'Offering Electrolosis [OC]:' },\r\n    32: { acc: 3, desc: 'Event:' }\r\n  }\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const statOffi = DOMCacheGetOrSet(`statOff${i + 1}`)\r\n    statOffi.childNodes[0].textContent = map[i + 1].desc\r\n    DOMCacheGetOrSet(`sOff${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`\r\n  }\r\n  DOMCacheGetOrSet('sOffT').textContent = `x${format(calculateOfferings('prestige', true, true), 3)}`\r\n}\r\n\r\nexport const loadPowderMultiplier = () => {\r\n  const arr0 = calculatePowderConversion().list\r\n  const map0: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Base:' },\r\n    2: { acc: 2, desc: 'Challenge 15 Bonus:' },\r\n    3: { acc: 2, desc: 'Powder EX:' },\r\n    4: { acc: 2, desc: 'Achievement 256:' },\r\n    5: { acc: 2, desc: 'Achievement 257:' },\r\n    6: { acc: 2, desc: 'Platonic Upgrade 16 [4x1]:' },\r\n    7: { acc: 2, desc: 'Event:' }\r\n  }\r\n  for (let i = 0; i < arr0.length; i++) {\r\n    const statGCMi = DOMCacheGetOrSet(`statPoM${i + 1}`)\r\n    statGCMi.childNodes[0].textContent = map0[i + 1].desc\r\n    DOMCacheGetOrSet(`sPoM${i + 1}`).textContent = `x${format(arr0[i], map0[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sPoMT').textContent = `x${format(calculatePowderConversion().mult, 3)}`\r\n}\r\n\r\nexport const loadStatisticsAscensionSpeedMultipliers = () => {\r\n  const arr = calculateAscensionSpeedMultiplier()\r\n  const map7: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Chronometer:' },\r\n    2: { acc: 2, desc: 'Chronometer 2:' },\r\n    3: { acc: 2, desc: 'Chronometer 3:' },\r\n    4: { acc: 2, desc: 'Chronos Hepteract:' },\r\n    5: { acc: 2, desc: 'Achievement 262 Bonus:' },\r\n    6: { acc: 2, desc: 'Achievement 263 Bonus:' },\r\n    7: { acc: 2, desc: 'Platonic Omega:' },\r\n    8: { acc: 2, desc: 'Challenge 15 Reward:' },\r\n    9: { acc: 2, desc: 'Cookie Upgrade 9:' },\r\n    10: { acc: 2, desc: 'Intermediate Pack:' },\r\n    11: { acc: 2, desc: 'Chronometer Z:' },\r\n    12: { acc: 2, desc: 'Abstract Photokinetics:' },\r\n    13: { acc: 2, desc: 'Abstract Exokinetics:' },\r\n    14: { acc: 2, desc: 'Event:' },\r\n    15: { acc: 2, desc: 'Ascension Speedup 2 [GQ]:' },\r\n    16: { acc: 2, desc: 'Chronometer INF:' },\r\n    17: { acc: 2, desc: 'Limited Ascensions Penalty:' },\r\n    18: { acc: 2, desc: 'Limited Ascensions Reward:' },\r\n    19: { acc: 2, desc: 'Ascension Speedup [GQ]:' },\r\n    20: { acc: 2, desc: 'Singularity Penalty:' }\r\n  }\r\n  for (let i = 0; i < arr.list.length; i++) {\r\n    const statASMi = DOMCacheGetOrSet(`statASM${i + 1}`)\r\n    statASMi.childNodes[0].textContent = map7[i + 1].desc\r\n    DOMCacheGetOrSet(`sASM${i + 1}`).textContent = `x${format(arr.list[i], map7[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sASMT').textContent = `x${format(arr.mult, 3)}`\r\n}\r\n\r\nexport const loadStatisticsGoldenQuarkMultipliers = () => {\r\n  const arr = calculateGoldenQuarkMultiplier()\r\n  const map: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 2, desc: 'Challenge 15 Exponent:' },\r\n    2: { acc: 2, desc: 'Patreon Bonus:' },\r\n    3: { acc: 2, desc: 'Golden Quarks I:' },\r\n    4: { acc: 2, desc: 'Cookie Upgrade 19:' },\r\n    5: { acc: 2, desc: 'No Singularity Upgrades:' },\r\n    6: { acc: 2, desc: 'Event:' },\r\n    7: { acc: 2, desc: 'Singularity Fast Forwards:' },\r\n    8: { acc: 2, desc: 'Golden Revolution II:' },\r\n    9: { acc: 2, desc: 'Immaculate Alchemy:' },\r\n    10: { acc: 2, desc: 'Total Quarks Coefficient:' }\r\n  }\r\n  for (let i = 0; i < arr.list.length; i++) {\r\n    const statGQMi = DOMCacheGetOrSet(`statGQMS${i + 1}`)\r\n    statGQMi.childNodes[0].textContent = map[i + 1].desc\r\n    DOMCacheGetOrSet(`sGQMS${i + 1}`).textContent = `x${format(arr.list[i], map[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('sGQMST').textContent = `x${format(arr.mult, 3)}`\r\n}\r\n\r\nexport const loadAddCodeModifiersAndEffects = () => {\r\n  const intervalStats = addCodeInterval()\r\n  const capacityStats = addCodeMaxUses()\r\n  const availableCount = addCodeAvailableUses()\r\n  const timeToNext = addCodeTimeToNextUse()\r\n\r\n  // Add interval stats\r\n  const intervalMap: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 0, desc: 'Base:' },\r\n    2: { acc: 2, desc: 'PL-AT \u03B4 calculator:' },\r\n    3: { acc: 2, desc: 'PL-AT \u03A3 sing perk:' },\r\n    4: { acc: 2, desc: 'Ascension of Ant God:' },\r\n    5: { acc: 2, desc: 'Singularity factor:' }\r\n  }\r\n  intervalStats.list[0] /= 1000 // is originally in milliseconds, but players will expect it in seconds.\r\n\r\n  for (let i = 0; i < intervalStats.list.length; i++) {\r\n    const statAddIntervalI = DOMCacheGetOrSet(`stat+time${i + 1}`)\r\n    statAddIntervalI.childNodes[0].textContent = intervalMap[i + 1].desc\r\n    if (i == 0) {\r\n      DOMCacheGetOrSet(`s+time${i + 1}`).textContent = `${format(intervalStats.list[i], intervalMap[i + 1].acc, true)} sec`\r\n    } else {\r\n      DOMCacheGetOrSet(`s+time${i + 1}`).textContent = `x${format(intervalStats.list[i], intervalMap[i + 1].acc, true)}`\r\n    }\r\n  }\r\n\r\n  DOMCacheGetOrSet('s+timeT').textContent = `${format(intervalStats.time / 1000, 1)} sec`\r\n  if (availableCount != capacityStats.total) {\r\n    DOMCacheGetOrSet('s+next').textContent = `+1 in ${format(timeToNext, 1)} sec`  // is already in sec.\r\n  } else {\r\n    DOMCacheGetOrSet('s+next').textContent = ''\r\n  }\r\n\r\n  // Add capacity stats\r\n  const capacityMap: Record<number, { acc: number, desc: string }> = {\r\n    1: { acc: 0, desc: 'Base:' },\r\n    2: { acc: 0, desc: 'PL-AT X:' },\r\n    3: { acc: 0, desc: 'PL-AT \u03B4:' },\r\n    4: { acc: 0, desc: 'PL-AT \u0393:' },\r\n    5: { acc: 0, desc: 'PL-AT _:' },\r\n    6: { acc: 3, desc: 'Singularity factor:' }\r\n  }\r\n\r\n  for (let i = 0; i < capacityStats.list.length; i++) {\r\n    const statAddIntervalI = DOMCacheGetOrSet(`stat+cap${i + 1}`)\r\n    statAddIntervalI.childNodes[0].textContent = capacityMap[i + 1].desc\r\n    const prefix = i==0 ? '' : (i == 5 ? 'x' : '+')\r\n    DOMCacheGetOrSet(`s+cap${i + 1}`).textContent = `${prefix}${format(capacityStats.list[i], capacityMap[i + 1].acc, true)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('s+capT').textContent = `${format(availableCount, 0)} / ${format(capacityStats.total, 0)}`\r\n\r\n  // TODO:  we also want to report on the effects of each add.\r\n  const addEffectStats = addCodeBonuses()\r\n\r\n  // Quark Bonus Rate; the bonus is typically applied when actually given to the player, rather than calculated before.\r\n  const qbr = player.worlds.applyBonus(1)\r\n\r\n  DOMCacheGetOrSet('stat+eff1').childNodes[0].textContent = 'Quarks: '\r\n  if (Math.abs(addEffectStats.maxQuarks - addEffectStats.minQuarks) >= 0.5) { // b/c floating-point errors\r\n    DOMCacheGetOrSet('s+eff1').textContent = `+${format(qbr * addEffectStats.minQuarks, 3)} ~ ${format(qbr * addEffectStats.maxQuarks, 3)}`\r\n  } else {\r\n    DOMCacheGetOrSet('s+eff1').textContent = `+${format(qbr * addEffectStats.quarks, 3)}`\r\n  }\r\n\r\n  DOMCacheGetOrSet('stat+eff2').childNodes[0].textContent = 'PL-AT X - bonus ascension time: '\r\n  DOMCacheGetOrSet('s+eff2').textContent = `+${format(addEffectStats.ascensionTimer, 2)} sec`\r\n\r\n  DOMCacheGetOrSet('stat+eff3').childNodes[0].textContent = 'PL-AT \u0393 - bonus GQ export time: '\r\n  DOMCacheGetOrSet('s+eff3').textContent = `+${format(addEffectStats.gqTimer, 2)} sec` // does it need a / 1000?\r\n\r\n  DOMCacheGetOrSet('stat+eff4').childNodes[0].textContent = 'PL-AT _ - bonus octeract time: '\r\n  DOMCacheGetOrSet('s+eff4').textContent = `+${format(addEffectStats.octeractTime, 2)} sec` // does it need a / 1000?\r\n  // Might be worth converting to raw octeracts awarded.  I don't have the calculator needed to test it, though.\r\n}\r\n\r\nexport const c15RewardUpdate = () => {\r\n  const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10, 1e11, 1e15, 2e15, 4e15, 7e15, 1e16, 2e16, 3.33e16, 3.33e16, 3.33e16, 2e17, 1.5e18]\r\n    type Key = keyof GlobalVariables['challenge15Rewards']\r\n    const keys = Object.keys(G.challenge15Rewards) as Key[]\r\n    const e = player.challenge15Exponent\r\n\r\n    for (const obj in G.challenge15Rewards) {\r\n      G.challenge15Rewards[obj as Key] = 1\r\n    }\r\n    G.challenge15Rewards.freeOrbs = 0\r\n\r\n    if (e >= exponentRequirements[0]) {\r\n      //All Cube Types 1 [750]\r\n      G.challenge15Rewards[keys[0]] = 1 + 1 / 50 * Math.log(e / 175) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[1]) {\r\n      //Ascension Count [1500]\r\n      G.challenge15Rewards[keys[1]] = 1 + 1 / 20 * Math.log(e / 375) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[2]) {\r\n      //Coin Exponent [3000]\r\n      G.challenge15Rewards[keys[2]] = 1 + 1 / 150 * Math.log(e / 750) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[3]) {\r\n      //Taxes [5000]\r\n      G.challenge15Rewards[keys[3]] = Math.pow(0.98, Math.log(e / 1.25e3) / Math.log(2))\r\n    }\r\n    if (e >= exponentRequirements[4]) {\r\n      //Obtainium [7500]\r\n      G.challenge15Rewards[keys[4]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75)\r\n    }\r\n    if (e >= exponentRequirements[5]) {\r\n      //Offerings [7500]\r\n      G.challenge15Rewards[keys[5]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75)\r\n    }\r\n    if (e >= exponentRequirements[6]) {\r\n      //Accelerator Boost (Uncorruptable) [10000]\r\n      G.challenge15Rewards[keys[6]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[7]) {\r\n      //Multiplier Boost (Uncorruptable) [10000]\r\n      G.challenge15Rewards[keys[7]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[8]) {\r\n      //Rune EXP [20000]\r\n      G.challenge15Rewards[keys[8]] = 1 + Math.pow(e / 2e4, 1.5)\r\n    }\r\n    if (e >= exponentRequirements[9]) {\r\n      //Rune Effectiveness [40000]\r\n      G.challenge15Rewards[keys[9]] = 1 + 1 / 33 * Math.log(e / 1e4) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[10]) {\r\n      //All Cube Types II [60000]\r\n      G.challenge15Rewards[keys[10]] = 1 + 1 / 100 * Math.log(e / 1.5e4) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[11]) {\r\n      //Chal 1-5 Scaling [100000]\r\n      G.challenge15Rewards[keys[11]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2))\r\n    }\r\n    if (e >= exponentRequirements[12]) {\r\n      //Chal 6-10 Scaling [100000]\r\n      G.challenge15Rewards[keys[12]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2))\r\n    }\r\n    if (e >= exponentRequirements[13]) {\r\n      //Ant Speed [200k]\r\n      G.challenge15Rewards[keys[13]] = Math.pow(1 + Math.log(e / 2e5) / Math.log(2), 4)\r\n    }\r\n    if (e >= exponentRequirements[14]) {\r\n      //Ant Bonus Levels [500k]\r\n      G.challenge15Rewards[keys[14]] = 1 + 1 / 20 * Math.log(e / 1.5e5) /Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[15]) {\r\n      //All Cube Types III [1m]\r\n      G.challenge15Rewards[keys[15]] = 1 + 1 / 150 * Math.log(e / 2.5e5) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[16]) {\r\n      //Talisman Effectiveness [3m]\r\n      G.challenge15Rewards[keys[16]] = 1 + 1 / 20 * Math.log(e / 7.5e5) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[17]) {\r\n      //Global Speed [10m]\r\n      G.challenge15Rewards[keys[17]] = 1 + 1 / 20 * Math.log(e / 2.5e6) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[18]) {\r\n      //Blessing Effectiveness [30m]\r\n      G.challenge15Rewards[keys[18]] = 1 + 1 / 5 * Math.pow(e / 3e7, 1 / 4)\r\n    }\r\n    if (e >= exponentRequirements[19]) {\r\n      //Tesseract Building Speed [100m]\r\n      G.challenge15Rewards[keys[19]] = 1 + 1 / 5 * Math.pow(e / 1e8, 2 / 3)\r\n    }\r\n    if (e >= exponentRequirements[20]) {\r\n      //All Cube Types IV [500m]\r\n      G.challenge15Rewards[keys[20]] = 1 + 1 / 200 * Math.log(e / 1.25e8) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[21]) {\r\n      //Spirit Effectiveness [2b]\r\n      G.challenge15Rewards[keys[21]] = 1 + 1 / 5 * Math.pow(e / 2e9, 1 / 4)\r\n    }\r\n    if (e >= exponentRequirements[22]) {\r\n      //Ascension Score [10b]\r\n      G.challenge15Rewards[keys[22]] = 1 + 1 / 4 * Math.pow(e / 1e10, 1 / 4)\r\n      if (e >= 1e20) {\r\n        G.challenge15Rewards[keys[22]] = 1 + 1 / 4 * Math.pow(e / 1e10, 1 / 8) * Math.pow(1e10, 1 / 8)\r\n      }\r\n    }\r\n    if (e >= exponentRequirements[23]) {\r\n      //Quark Gain [100b]\r\n      G.challenge15Rewards[keys[23]] = 1 + 1 / 100 * Math.log(e * 32 / 1e11) / Math.log(2)\r\n    }\r\n    if (e >= exponentRequirements[24]) {\r\n      //Unlock Hepteract gain [1Qa]\r\n      G.challenge15Rewards[keys[24]] = 2\r\n    }\r\n    if (e >= exponentRequirements[25]) {\r\n      //Unlock Challenge hepteract [2Qa]\r\n      void player.hepteractCrafts.challenge.unlock('the Hepteract of Challenge')\r\n    }\r\n    if (e >= exponentRequirements[26]) {\r\n      //All Cube Types V [4Qa]\r\n      G.challenge15Rewards[keys[25]] = 1 + 1 / 300 * Math.log2(e / (4e15 / 1024))\r\n    }\r\n    if (e >= exponentRequirements[27]) {\r\n      //Powder Gain [7Qa]\r\n      G.challenge15Rewards[keys[26]] = 1 + 1 / 50 * Math.log2(e / (7e15 / 32))\r\n    }\r\n    if (e >= exponentRequirements[28]) {\r\n      //Unlock Abyss Hepteract [10Qa]\r\n      void player.hepteractCrafts.abyss.unlock('the Hepteract of the Abyss')\r\n    }\r\n    if (e >= exponentRequirements[29]) {\r\n      //Constant Upgrade 2 [20Qa]\r\n      G.challenge15Rewards[keys[27]] = calculateSigmoid(1.05, e, 1e18)\r\n    }\r\n    if (e >= exponentRequirements[30]) {\r\n      //Unlock ACCELERATOR HEPT [33.33Qa]\r\n      void player.hepteractCrafts.accelerator.unlock('the Hepteract of Way Too Many Accelerators')\r\n    }\r\n    if (e >= exponentRequirements[31]) {\r\n      //Unlock ACCELERATOR BOOST HEPT [33.33Qa]\r\n      void player.hepteractCrafts.acceleratorBoost.unlock('the Hepteract of Way Too Many Accelerator Boosts')\r\n    }\r\n    if (e >= exponentRequirements[32]) {\r\n      //Unlock MULTIPLIER Hept [33.33Qa]\r\n      void player.hepteractCrafts.multiplier.unlock('the Hepteract of Way Too Many Multipliers')\r\n    }\r\n    if (e >= exponentRequirements[33]) {\r\n      // FREE Daily Orbs\r\n      G.challenge15Rewards.freeOrbs = Math.floor(200 * Math.pow(e / 2e17, 0.5))\r\n    }\r\n    if (e >= exponentRequirements[34]) {\r\n      // Ascension Speed\r\n      G.challenge15Rewards.ascensionSpeed = 1 + 5/100 + 2 * Math.log2(e / 1.5e18) / 100\r\n    }\r\n\r\n\r\n    updateDisplayC15Rewards()\r\n}\r\n\r\nconst updateDisplayC15Rewards = () => {\r\n  DOMCacheGetOrSet('c15Reward0Num').textContent = format(player.challenge15Exponent, 3, true)\r\n  DOMCacheGetOrSet('c15RequiredExponentNum').textContent = format(Decimal.pow(10, player.challenge15Exponent / challenge15ScoreMultiplier()), 0, true)\r\n  const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10, 1e11, 1e15, 2e15, 4e15, 7e15, 1e16, 2e16, 3.33e16, 3.33e16, 3.33e16, 2e17, 1.5e18]\r\n  const isNum: Record<number, boolean> = { // Shit solution to a shit problem -Platonic\r\n    0: true,\r\n    1: true,\r\n    2: true,\r\n    3: true,\r\n    4: true,\r\n    5: true,\r\n    6: true,\r\n    7: true,\r\n    8: true,\r\n    9: true,\r\n    10: true,\r\n    11: true,\r\n    12: true,\r\n    13: true,\r\n    14: true,\r\n    15: true,\r\n    16: true,\r\n    17: true,\r\n    18: true,\r\n    19: true,\r\n    20: true,\r\n    21: true,\r\n    22: true,\r\n    23: true,\r\n    24: false,\r\n    25: false,\r\n    26: true,\r\n    27: true,\r\n    28: false,\r\n    29: true,\r\n    30: false,\r\n    31: false,\r\n    32: false,\r\n    33: true,\r\n    34: true\r\n  }\r\n  const values = Object.values(G.challenge15Rewards)\r\n  let keepExponent: string | number = 'None'\r\n  let skip = 0\r\n  for (let i = 0; i < exponentRequirements.length; i++) {\r\n    if (keepExponent === 'None' && player.challenge15Exponent < exponentRequirements[i]) {\r\n      keepExponent = exponentRequirements[i]\r\n    }\r\n    if (player.challenge15Exponent >= exponentRequirements[i]) {\r\n      DOMCacheGetOrSet(`c15Reward${i + 1}Num`).textContent = (isNum[i]) ?\r\n        format(100 * values[i - skip] - 100, 2, true):\r\n        'Unlocked!'\r\n\r\n      if (!isNum[i] && i !== 24) { // TODO: This sucks -Platonic\r\n        skip += 1\r\n      }\r\n\r\n      if (i === 33) {\r\n        DOMCacheGetOrSet('c15Reward34Num').textContent = format(values[i - skip], 0, true)\r\n      }\r\n    }\r\n\r\n    DOMCacheGetOrSet(`c15Reward${i + 1}`).style.display = (player.challenge15Exponent >= exponentRequirements[i])? 'block': 'none'\r\n    DOMCacheGetOrSet('c15RewardList').textContent = typeof keepExponent  === 'string'\r\n      ? 'You have unlocked all reward types from Challenge 15!'\r\n      : 'Next reward type requires ' + format(keepExponent, 0, true) + ' exponent.'\r\n  }\r\n}\r\n\r\ninterface Stage { stage: number, tier: number, name: string, unlocked: boolean, reset: boolean }\r\n\r\nexport const gameStages = (): Stage[] => {\r\n  const stages: Stage[] = [\r\n    { stage: 0, tier: 1, name: 'start', unlocked: true, reset: true },\r\n    { stage: 1, tier: 1, name: 'start-prestige', unlocked: player.unlocks.prestige, reset: player.unlocks.prestige },\r\n    { stage: 2, tier: 2, name: 'prestige-transcend', unlocked: player.unlocks.transcend, reset: player.unlocks.transcend },\r\n    { stage: 3, tier: 3, name: 'transcend-reincarnate', unlocked: player.unlocks.reincarnate, reset: player.unlocks.reincarnate },\r\n    { stage: 4, tier: 4, name: 'reincarnate-ant', unlocked: player.firstOwnedAnts !== 0, reset: player.unlocks.reincarnate },\r\n    { stage: 5, tier: 4, name: 'ant-sacrifice', unlocked: player.achievements[173] === 1, reset: player.unlocks.reincarnate },\r\n    { stage: 6, tier: 4, name: 'sacrifice-ascension', unlocked: player.achievements[183] === 1, reset: player.unlocks.reincarnate },\r\n    { stage: 7, tier: 5, name: 'ascension-challenge10', unlocked: player.ascensionCount > 1, reset: player.achievements[183] === 1 },\r\n    { stage: 8, tier: 5, name: 'challenge10-challenge11', unlocked: player.achievements[197] === 1, reset: player.achievements[183] === 1 },\r\n    { stage: 9, tier: 5, name: 'challenge11-challenge12', unlocked: player.achievements[204] === 1, reset: player.achievements[183] === 1 },\r\n    { stage: 10, tier: 5, name: 'challenge12-challenge13', unlocked: player.achievements[211] === 1, reset: player.achievements[183] === 1 },\r\n    { stage: 11, tier: 5, name: 'challenge13-challenge14', unlocked: player.achievements[218] === 1, reset: player.achievements[183] === 1 },\r\n    { stage: 12, tier: 5, name: 'challenge14-w5x10max', unlocked: player.cubeUpgrades[50] >= 100000, reset: player.achievements[183] === 1 },\r\n    { stage: 13, tier: 5, name: 'w5x10max-alpha', unlocked: player.platonicUpgrades[5] > 0, reset: player.achievements[183] === 1 },\r\n    { stage: 14, tier: 5, name: 'alpha-p2x1x10', unlocked: player.platonicUpgrades[6] >= 10, reset: player.achievements[183] === 1 },\r\n    { stage: 15, tier: 5, name: 'p2x1x10-p3x1', unlocked: player.platonicUpgrades[11] > 0, reset: player.achievements[183] === 1 },\r\n    { stage: 16, tier: 5, name: 'p3x1-beta', unlocked: player.platonicUpgrades[10] > 0, reset: player.achievements[183] === 1 },\r\n    { stage: 17, tier: 5, name: 'beta-1e15-expo', unlocked: player.challenge15Exponent >= 1e15, reset: player.achievements[183] === 1 },\r\n    { stage: 18, tier: 5, name: '1e15-expo-omega', unlocked: player.platonicUpgrades[15] > 0, reset: player.achievements[183] === 1 },\r\n    { stage: 19, tier: 5, name: 'omega-singularity', unlocked: player.singularityCount > 0 && player.runelevels[6] > 0, reset: player.achievements[183] === 1 },\r\n    { stage: 20, tier: 6, name: 'singularity-liquidation', unlocked: player.singularityUpgrades.wowPass2.level > 0, reset: player.highestSingularityCount > 0 },\r\n    { stage: 21, tier: 6, name: 'liquidation-onemind', unlocked: player.singularityUpgrades.oneMind.level > 0, reset: player.highestSingularityCount > 0 },\r\n    { stage: 22, tier: 6, name: 'onemind-bbshards', unlocked: player.singularityUpgrades.offeringAutomatic.level > 0, reset: player.highestSingularityCount > 0 },\r\n    { stage: 23, tier: 6, name: 'bbshards-pen', unlocked: player.singularityUpgrades.ultimatePen.level > 0, reset: player.highestSingularityCount > 0 },\r\n    { stage: 24, tier: 6, name: 'pen', unlocked: false, reset: player.highestSingularityCount > 0 }\r\n  ]\r\n  return stages\r\n}\r\n\r\n// Calculate which progress in the game you are playing\r\n// The progress displayed is based on Progression Chat and Questions\r\n// This will be used to determine the behavior of the profile of the autopilot function in the future\r\nexport const synergismStage = (skipTier = player.singularityCount > 0 ? 5 : 0): string => {\r\n  const stages = gameStages()\r\n  for (let i = 0; i < stages.length; i++) {\r\n    const stage = stages[i]\r\n    if (skipTier < stage.tier && (!stage.reset || !stage.unlocked)) {\r\n      return stage.name\r\n    }\r\n  }\r\n  const stagesZero = stages[0]\r\n  return stagesZero.name\r\n}\r\n", "import Decimal from 'break_infinity.js'\r\nimport { Globals as G } from './Variables'\r\nimport { player, format, formatTimeShort } from './Synergism'\r\nimport { version } from './Config'\r\nimport { CalcECC } from './Challenges'\r\nimport { calculateSigmoidExponential, calculateMaxRunes, calculateRuneExpToLevel, calculateSummationLinear, calculateRecycleMultiplier, calculateCorruptionPoints, CalcCorruptionStuff, calculateAutomaticObtainium, calculateTimeAcceleration, calcAscensionCount, calculateCubeQuarkMultiplier, calculateSummationNonLinear, calculateTotalOcteractCubeBonus, calculateTotalOcteractQuarkBonus, octeractGainPerSecond, calculateTotalOcteractObtainiumBonus, calculateTotalOcteractOfferingBonus } from './Calculate'\r\nimport { displayRuneInformation } from './Runes'\r\nimport { showSacrifice } from './Ants'\r\nimport { sumContents } from './Utility'\r\nimport { getShopCosts, isShopUpgradeUnlocked, shopData, shopUpgradeTypes } from './Shop'\r\nimport { quarkHandler } from './Quark'\r\nimport type { Player, ZeroToFour } from './types/Synergism'\r\nimport type { hepteractTypes } from './Hepteracts'\r\nimport { hepteractTypeList } from './Hepteracts'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport type { IMultiBuy } from './Cubes'\r\nimport { calculateMaxTalismanLevel } from './Talismans'\r\nimport { getGoldenQuarkCost } from './singularity'\r\nimport { loadStatisticsUpdate } from './Statistics'\r\nimport i18next from 'i18next'\r\n\r\nexport const visualUpdateBuildings = () => {\r\n  if (G.currentTab !== 'buildings') {\r\n    return\r\n  }\r\n\r\n  //When you're in Building --> Coin, update these.\r\n  if (G.buildingSubTab === 'coin') {\r\n    // For the display of Coin Buildings\r\n    const upper = ['produceFirst', 'produceSecond', 'produceThird', 'produceFourth', 'produceFifth'] as const\r\n    const names = [null, 'workers', 'investments', 'printers', 'coinMints', 'alchemies']\r\n\r\n    let totalProductionDivisor = new Decimal(G.produceTotal)\r\n    if (totalProductionDivisor.equals(0)) {\r\n      totalProductionDivisor = new Decimal(1)\r\n    }\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const place = G[upper[i - 1]]\r\n      const ith = G.ordinals[i - 1 as ZeroToFour]\r\n\r\n      DOMCacheGetOrSet(`buildtext${2 * i - 1}`).textContent = i18next.t(`buildings.names.${names[i]}`, {\r\n        amount: format(player[`${ith}OwnedCoin` as const], 0, true),\r\n        gain: format(player[`${ith}GeneratedCoin` as const])\r\n      })\r\n\r\n      DOMCacheGetOrSet(`buycoin${i}`).textContent = i18next.t('buildings.costCoins', {\r\n        coins: format(player[`${ith}CostCoin` as const])\r\n      })\r\n\r\n      const percentage = Decimal\r\n        .fromMantissaExponent(place.mantissa / totalProductionDivisor.mantissa, place.exponent - totalProductionDivisor.exponent)\r\n        .times(100)\r\n\r\n      DOMCacheGetOrSet(`buildtext${2 * i}`).textContent = i18next.t('buildings.coinsPerSecond', {\r\n        coins: format((place.dividedBy(G.taxdivisor)).times(40), 2),\r\n        percent: format(percentage, 3)\r\n      })\r\n    }\r\n\r\n    DOMCacheGetOrSet('buildtext11').textContent = i18next.t('buildings.names.accelerators', {\r\n      amount: format(player.acceleratorBought, 0, true),\r\n      gain: format(G.freeAccelerator, 0, true)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buildtext12').textContent = i18next.t('buildings.acceleratorPower', {\r\n      power: format((G.acceleratorPower - 1) * 100, 2),\r\n      mult: format(G.acceleratorEffect, 2)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buildtext13').textContent = i18next.t('buildings.names.multipliers', {\r\n      amount: format(player.multiplierBought, 0, true),\r\n      gain: format(G.freeMultiplier, 0, true)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buildtext14').textContent = i18next.t('buildings.multiplierPower', {\r\n      power: format(G.multiplierPower, 2),\r\n      mult: format(G.multiplierEffect, 2)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buildtext15').textContent = i18next.t('buildings.names.acceleratorBoost', {\r\n      amount: format(player.acceleratorBoostBought, 0, true),\r\n      gain: format(G.freeAcceleratorBoost, 0, false)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buildtext16').textContent = i18next.t('buildings.acceleratorBoost', {\r\n      amount: format(G.tuSevenMulti * (1 + player.researches[16] / 50) * (1 + CalcECC('transcend', player.challengecompletions[2]) / 100), 2)\r\n    })\r\n\r\n    DOMCacheGetOrSet('buyaccelerator').textContent = i18next.t('buildings.costCoins', { coins: format(player.acceleratorCost) })\r\n    DOMCacheGetOrSet('buymultiplier').textContent = i18next.t('buildings.costCoins', { coins: format(player.multiplierCost) })\r\n    DOMCacheGetOrSet('buyacceleratorboost').textContent = i18next.t('buildings.costDiamonds', {\r\n      diamonds: format(player.acceleratorBoostCost)\r\n    })\r\n\r\n    // update the tax text\r\n    let warning = ''\r\n    if (player.reincarnationCount > 0.5) {\r\n      warning = i18next.t('buildings.taxWarning', {\r\n        gain: format(Decimal.pow(10, G.maxexponent - Decimal.log(G.taxdivisorcheck, 10)))\r\n      })\r\n    }\r\n    DOMCacheGetOrSet('taxinfo').textContent = i18next.t('buildings.excessiveWealth', {\r\n      div: format(G.taxdivisor, 2),\r\n      warning\r\n    })\r\n  } else if (G.buildingSubTab === 'diamond') {\r\n    // For the display of Diamond Buildings\r\n    const upper = ['produceFirstDiamonds', 'produceSecondDiamonds', 'produceThirdDiamonds', 'produceFourthDiamonds', 'produceFifthDiamonds'] as const\r\n    const names = ['refineries', 'coalPlants', 'coalRigs', 'pickaxes', 'pandorasBoxes']\r\n    const perSecNames = ['crystal', 'ref', 'plants', 'rigs', 'pickaxes']\r\n\r\n    DOMCacheGetOrSet('prestigeshardinfo').textContent = i18next.t('buildings.crystalMult', {\r\n      crystals: format(player.prestigeShards, 2),\r\n      gain: format(G.prestigeMultiplier, 2)\r\n    })\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const place = G[upper[i-1]]\r\n      const ith = G.ordinals[i - 1 as ZeroToFour]\r\n\r\n      DOMCacheGetOrSet(`prestigetext${2 * i - 1}`).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\r\n        amount: format(player[`${ith}OwnedDiamonds` as const], 0, true),\r\n        gain: format(player[`${ith}GeneratedDiamonds` as const], 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`prestigetext${2 * i}`).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\r\n        amount: format((place).times(40), 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`buydiamond${i}`).textContent = i18next.t('buildings.costDiamonds', {\r\n        diamonds: format(player[`${ith}CostDiamonds` as const], 2)\r\n      })\r\n    }\r\n\r\n    if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\r\n      const p = Decimal.pow(10, Decimal.log(G.prestigePointGain.add(1), 10) - Decimal.log(player.prestigePoints.sub(1), 10))\r\n      DOMCacheGetOrSet('autoprestige').textContent = i18next.t('buildings.autoPrestige', {\r\n        name: 'Diamonds',\r\n        action: 'Prestige',\r\n        factor: format(Decimal.pow(10, player.prestigeamount)),\r\n        mult: format(p)\r\n      })\r\n    } else if (player.resettoggle1 === 2) {\r\n      DOMCacheGetOrSet('autoprestige').textContent = i18next.t('buildings.autoReincarnate', {\r\n        name: 'Prestige',\r\n        amount: player.prestigeamount,\r\n        timer: format(G.autoResetTimers.prestige, 1)\r\n      })\r\n    }\r\n  } else if (G.buildingSubTab === 'mythos') {\r\n    // For the display of Mythos Buildings\r\n    const upper = ['produceFirstMythos', 'produceSecondMythos', 'produceThirdMythos', 'produceFourthMythos', 'produceFifthMythos'] as const\r\n    const names = ['augments', 'enchantments', 'wizards', 'oracles', 'grandmasters']\r\n    const perSecNames = ['shards', 'augments', 'enchantments', 'wizards', 'oracles']\r\n\r\n    DOMCacheGetOrSet('transcendshardinfo').textContent = i18next.t('buildings.mythosYouHave', {\r\n      shards: format(player.transcendShards, 2),\r\n      mult: format(G.totalMultiplierBoost, 0, true)\r\n    })\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const place = G[upper[i-1]]\r\n      const ith = G.ordinals[i - 1 as ZeroToFour]\r\n\r\n      DOMCacheGetOrSet(`transcendtext${2 * i - 1}`).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\r\n        amount: format(player[`${ith}OwnedMythos` as const], 0, true),\r\n        gain: format(player[`${ith}GeneratedMythos` as const], 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`transcendtext${2 * i}`).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\r\n        amount: format((place).times(40), 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`buymythos${i}`).textContent = i18next.t('buildings.costMythos', {\r\n        mythos: format(player[`${ith}CostMythos` as const], 2)\r\n      })\r\n    }\r\n\r\n    if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\r\n      DOMCacheGetOrSet('autotranscend').textContent = i18next.t('buildings.autoPrestige', {\r\n        name: 'Mythos',\r\n        action: 'Prestige',\r\n        factor: format(Decimal.pow(10, player.transcendamount)),\r\n        mult: format(Decimal.pow(10, Decimal.log(G.transcendPointGain.add(1), 10) - Decimal.log(player.transcendPoints.add(1), 10)), 2)\r\n      })\r\n    }\r\n    if (player.resettoggle2 === 2) {\r\n      // TODO(@KhafraDev): i18n this\r\n      DOMCacheGetOrSet('autotranscend').textContent = `Transcend when the autotimer is at least ${player.transcendamount} real-life seconds. [Toggle number above]. Current timer: ${format(G.autoResetTimers.transcension, 1)}s.`\r\n    }\r\n  } else if (G.buildingSubTab === 'particle') {\r\n\r\n    // For the display of Particle Buildings\r\n    const upper = ['FirstParticles', 'SecondParticles', 'ThirdParticles', 'FourthParticles', 'FifthParticles'] as const\r\n    const names = ['protons', 'elements', 'pulsars', 'quasars', 'galacticNuclei']\r\n    const perSecNames = ['atoms', 'protons', 'elements', 'pulsars', 'quasars']\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const ith = G.ordinals[i - 1 as ZeroToFour]\r\n      const place = G[`produce${upper[i - 1]}` as const]\r\n\r\n      DOMCacheGetOrSet(`reincarnationtext${i}`).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\r\n        amount: format(player[`${ith}OwnedParticles` as const], 0, true),\r\n        gain: format(player[`${ith}GeneratedParticles` as const], 2)\r\n      })\r\n      DOMCacheGetOrSet(`reincarnationtext${i+5}`).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\r\n        amount: format((place).times(40), 2)\r\n      })\r\n      DOMCacheGetOrSet(`buyparticles${i}`).textContent = i18next.t('buildings.costParticles', {\r\n        particles: format(player[`${ith}CostParticles` as const], 2)\r\n      })\r\n    }\r\n\r\n    DOMCacheGetOrSet('reincarnationshardinfo').textContent = i18next.t('buildings.atomsYouHave', {\r\n      atoms: format(player.reincarnationShards, 2),\r\n      power: format(G.buildingPower, 4),\r\n      mult: format(G.reincarnationMultiplier)\r\n    })\r\n\r\n    DOMCacheGetOrSet('reincarnationCrystalInfo').textContent = i18next.t('buildings.thanksR2x14', {\r\n      mult: format(Decimal.pow(G.reincarnationMultiplier, 1 / 50), 3, false)\r\n    })\r\n\r\n    DOMCacheGetOrSet('reincarnationMythosInfo').textContent = i18next.t('buildings.thanksR2x15', {\r\n      mult: format(Decimal.pow(G.reincarnationMultiplier, 1 / 250), 3, false)\r\n    })\r\n\r\n    if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\r\n      DOMCacheGetOrSet('autoreincarnate').textContent = i18next.t('buildings.autoPrestige', {\r\n        name: 'Particles',\r\n        action: 'Reincarnate',\r\n        factor: format(Decimal.pow(10, player.reincarnationamount)),\r\n        mult: format(Decimal.pow(10, Decimal.log(G.reincarnationPointGain.add(1), 10) - Decimal.log(player.reincarnationPoints.add(1), 10)), 2)\r\n      })\r\n    } else if (player.resettoggle3 === 2) {\r\n      DOMCacheGetOrSet('autoreincarnate').textContent = i18next.t('buildings.autoReincarnate', {\r\n        name: 'Reincarnate',\r\n        amount: player.reincarnationamount,\r\n        timer: format(G.autoResetTimers.reincarnation, 1)\r\n      })\r\n    }\r\n  } else if (G.buildingSubTab === 'tesseract') { // eslint-disable-line @typescript-eslint/no-unnecessary-condition\r\n    const names = ['dot', 'vector', 'threeSpace', 'bentTime', 'hilbertSpace']\r\n    const perSecNames = ['constant', 'dot', 'vector', 'threeSpace', 'bentTime']\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      const ascendBuildingI = `ascendBuilding${i as 1|2|3|4|5}` as const\r\n\r\n      DOMCacheGetOrSet(`ascendText${i}`).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\r\n        amount: format(player[ascendBuildingI].owned, 0, true),\r\n        gain: format(player[ascendBuildingI].generated, 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`ascendText${5 + i}`).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\r\n        amount: format(((G.ascendBuildingProduction as Record<string, Decimal>)[G.ordinals[i - 1]]), 2)\r\n      })\r\n\r\n      DOMCacheGetOrSet(`buyTesseracts${i}`).textContent = i18next.t('buildings.costTesseracts', {\r\n        tesseracts: format(player[ascendBuildingI].cost, 0)\r\n      })\r\n    }\r\n\r\n    DOMCacheGetOrSet('tesseractInfo').textContent = i18next.t('buildings.tesseractsYouHave', {\r\n      tesseracts: format(player.wowTesseracts)\r\n    })\r\n\r\n    DOMCacheGetOrSet('ascendShardInfo').textContent = i18next.t('buildings.constantYouHave', {\r\n      const: format(player.ascendShards, 2),\r\n      amount: format(Math.pow(Decimal.log(player.ascendShards.add(1), 10) + 1, 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + (G.platonicBonusMultiplier[5] - 1)), 4, true)\r\n    })\r\n\r\n    if (player.resettoggle4 === 1 || player.resettoggle4 === 0) {\r\n      DOMCacheGetOrSet('autotessbuyeramount').textContent = i18next.t('buildings.autoTesseract', {\r\n        tesseracts: format(player.tesseractAutoBuyerAmount)\r\n      })\r\n    } else if (player.resettoggle4 === 2) {\r\n      DOMCacheGetOrSet('autotessbuyeramount').textContent = i18next.t('buildings.autoAscensionTesseract', {\r\n        percent: format(Math.min(100, player.tesseractAutoBuyerAmount))\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nexport const visualUpdateUpgrades = () => {}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nexport const visualUpdateAchievements = () => {}\r\n\r\nexport const visualUpdateRunes = () => {\r\n  if (G.currentTab !== 'runes') {\r\n    return\r\n  }\r\n  if (G.runescreen === 'runes') { //Placeholder and place work similarly to buildings, except for the specific Talismans.\r\n\r\n    const talismans = [\r\n      'rune1Talisman',\r\n      'rune2Talisman',\r\n      'rune3Talisman',\r\n      'rune4Talisman',\r\n      'rune5Talisman'\r\n    ] as const\r\n\r\n    DOMCacheGetOrSet('offeringCount').textContent = i18next.t('runes.offeringsYouHave', {\r\n      offerings: format(player.runeshards, 0, true)\r\n    })\r\n\r\n    for (let i = 1; i <= 7; i++) { //First one updates level, second one updates TNL, third updates orange bonus levels\r\n      let place = G[talismans[i-1]]\r\n      if (i > 5) {\r\n        place = 0\r\n      }\r\n      const runeLevel = player.runelevels[i - 1]\r\n      const maxLevel = calculateMaxRunes(i)\r\n      DOMCacheGetOrSet(`rune${i}level`).childNodes[0].textContent = i18next.t('cubes.cubeMetadata.level', {\r\n        value1: format(runeLevel),\r\n        value2: format(maxLevel)\r\n      })\r\n\r\n      if (runeLevel < maxLevel) {\r\n        DOMCacheGetOrSet(`rune${i}exp`).textContent = i18next.t('runes.TNL', { EXP: format(calculateRuneExpToLevel(i - 1) - player.runeexp[i - 1], 2) })\r\n      } else {\r\n        DOMCacheGetOrSet(`rune${i}exp`).textContent = i18next.t('runes.maxLevel')\r\n      }\r\n      if (i <= 5) {\r\n        DOMCacheGetOrSet(`bonusrune${i}`).textContent = i18next.t('runes.bonusAmount', {\r\n          x: format(7 * player.constantUpgrades[7] + Math.min(1e7, player.antUpgrades[8]! + G.bonusant9) + place)\r\n        })\r\n      } else {\r\n        DOMCacheGetOrSet(`bonusrune${i}`).textContent = i18next.t('runes.bonusNope')\r\n      }\r\n      displayRuneInformation(i, false)\r\n    }\r\n\r\n    const calculateRecycle = calculateRecycleMultiplier()\r\n    const allRuneExpAdditiveMultiplier = sumContents([\r\n      // Base amount multiplied per offering\r\n      1 * calculateRecycle,\r\n      // +1 if C1 completion\r\n      Math.min(1, player.highestchallengecompletions[1]),\r\n      // +0.10 per C1 completion\r\n      0.4 / 10 * player.highestchallengecompletions[1],\r\n      // Research 5x2\r\n      0.6 * player.researches[22],\r\n      // Research 5x3\r\n      0.3 * player.researches[23],\r\n      // Particle Upgrade 1x1\r\n      2 * player.upgrades[61]\r\n    ])\r\n\r\n    DOMCacheGetOrSet('offeringExperienceValue').textContent = i18next.t('runes.gainExp', {\r\n      amount: format(allRuneExpAdditiveMultiplier, 2, true)\r\n    })\r\n\r\n    DOMCacheGetOrSet('offeringRecycleInfo').textContent = i18next.t('runes.recycleChance', {\r\n      percent: format((1 - 1 / calculateRecycle) * 100, 2, true),\r\n      mult: format(calculateRecycle, 2, true)\r\n    })\r\n  }\r\n\r\n  if (G.runescreen === 'talismans') {\r\n    for (let i = 0; i < 7; i++) {\r\n      const maxTalismanLevel = calculateMaxTalismanLevel(i)\r\n      // TODO(@KhafraDev): i18n\r\n      DOMCacheGetOrSet(`talisman${i + 1}level`).textContent =\r\n        `${player.ascensionCount > 0 ? '' : 'Level '} ${format(player.talismanLevels[i])}/${format(maxTalismanLevel)}`\r\n    }\r\n  }\r\n\r\n  if (G.runescreen === 'blessings') {\r\n    const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1]\r\n    let t = 0\r\n    for (let i = 1; i <= 5; i++) {\r\n      DOMCacheGetOrSet(`runeBlessingLevel${i}Value`).innerHTML = i18next.t('runes.blessings.blessingLevel', {\r\n        amount: format(player.runeBlessingLevels[i])\r\n      })\r\n\r\n      DOMCacheGetOrSet(`runeBlessingPower${i}Value1`).innerHTML = i18next.t('runes.blessings.blessingPower', {\r\n        reward: i18next.t(`runes.blessings.rewards.${i - 1}`),\r\n        value: format(G.runeBlessings[i]),\r\n        speed: format(1 - t + blessingMultiplierArray[i] * G.effectiveRuneBlessingPower[i], 4, true)\r\n      })\r\n\r\n      const levelsPurchasable = calculateSummationLinear(player.runeBlessingLevels[i], G.blessingBaseCost, player.runeshards, player.runeBlessingBuyAmount)[0] - player.runeBlessingLevels[i]\r\n      levelsPurchasable > 0\r\n        ? DOMCacheGetOrSet(`runeBlessingPurchase${i}`).classList.add('runeButtonsAvailable')\r\n        : DOMCacheGetOrSet(`runeBlessingPurchase${i}`).classList.remove('runeButtonsAvailable')\r\n\r\n      DOMCacheGetOrSet(`runeBlessingPurchase${i}`).innerHTML = i18next.t('runes.blessings.increaseLevel', {\r\n        amount: format(Math.max(1, levelsPurchasable)),\r\n        offerings: format(Math.max(G.blessingBaseCost * (1 + player.runeBlessingLevels[i]), calculateSummationLinear(player.runeBlessingLevels[i], G.blessingBaseCost, player.runeshards, player.runeBlessingBuyAmount)[1]))\r\n      })\r\n\r\n      if (i === 5) {\r\n        t = 1\r\n      }\r\n    }\r\n  }\r\n\r\n  if (G.runescreen === 'spirits') {\r\n    const spiritMultiplierArray = [0, 1, 1, 20, 1, 100]\r\n    const subtract = [0, 0, 0, 1, 0, 0]\r\n    for (let i = 1; i <= 5; i++) {\r\n      spiritMultiplierArray[i] *= (calculateCorruptionPoints() / 400)\r\n\r\n      DOMCacheGetOrSet(`runeSpiritLevel${i}Value`).innerHTML = i18next.t('runes.spirits.spiritLevel', {\r\n        amount: format(player.runeSpiritLevels[i])\r\n      })\r\n\r\n      DOMCacheGetOrSet(`runeSpiritPower${i}Value1`).innerHTML = i18next.t('runes.spirits.spiritPower', {\r\n        reward: i18next.t(`runes.spirits.rewards.${i - 1}`),\r\n        value: format(G.runeSpirits[i]),\r\n        speed: format(1 - subtract[i] + spiritMultiplierArray[i] * G.effectiveRuneSpiritPower[i], 4, true)\r\n      })\r\n\r\n      const levelsPurchasable = calculateSummationLinear(player.runeSpiritLevels[i], G.spiritBaseCost, player.runeshards, player.runeSpiritBuyAmount)[0] - player.runeSpiritLevels[i]\r\n      levelsPurchasable > 0\r\n        ? DOMCacheGetOrSet(`runeSpiritPurchase${i}`).classList.add('runeButtonsAvailable')\r\n        : DOMCacheGetOrSet(`runeSpiritPurchase${i}`).classList.remove('runeButtonsAvailable')\r\n\r\n      DOMCacheGetOrSet(`runeSpiritPurchase${i}`).innerHTML = i18next.t('runes.blessings.increaseLevel', {\r\n        amount: format(Math.max(1, levelsPurchasable)),\r\n        offerings: format(Math.max(G.spiritBaseCost * (1 + player.runeSpiritLevels[i]), calculateSummationLinear(player.runeSpiritLevels[i], G.spiritBaseCost, player.runeshards, player.runeSpiritBuyAmount)[1]))\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const visualUpdateChallenges = () => {\r\n  if (G.currentTab !== 'challenge') {\r\n    return\r\n  }\r\n  if (player.researches[150] > 0) {\r\n    DOMCacheGetOrSet('autoIncrementerAmount').innerHTML = i18next.t('challenges.autoTimer', {\r\n      time: format(G.autoChallengeTimerIncrement, 2)\r\n    })\r\n  }\r\n}\r\n\r\nexport const visualUpdateResearch = () => {\r\n  if (G.currentTab !== 'research') {\r\n    return\r\n  }\r\n\r\n  if (player.researches[61] > 0) {\r\n    DOMCacheGetOrSet('automaticobtainium').textContent = i18next.t('researches.thanksToResearches', {\r\n      x: format(calculateAutomaticObtainium() * calculateTimeAcceleration().mult, 3, true)\r\n    })\r\n  }\r\n}\r\n\r\nexport const visualUpdateAnts = () => {\r\n  if (G.currentTab !== 'ant') {\r\n    return\r\n  }\r\n  DOMCacheGetOrSet('crumbcount').textContent = i18next.t('ants.youHaveGalacticCrumbs', {\r\n    x: format(player.antPoints, 2),\r\n    y: format(G.antOneProduce, 2),\r\n    z: format(Decimal.pow(Decimal.max(1, player.antPoints), 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[1]! + G.bonusant2) / 5000 * 500 / 499)))\r\n  })\r\n\r\n  const mode = player.autoAntSacrificeMode === 2 ? i18next.t('ants.modeRealTime') : i18next.t('ants.modeInGameTime')\r\n  const timer = player.autoAntSacrificeMode === 2 ? player.antSacrificeTimerReal : player.antSacrificeTimer\r\n\r\n  DOMCacheGetOrSet('autoAntSacrifice').textContent = i18next.t('ants.sacrificeWhenTimer', {\r\n    x: player.autoAntSacTimer,\r\n    y: mode,\r\n    z: format(timer, 2)\r\n  })\r\n\r\n  if (player.achievements[173] === 1) {\r\n    DOMCacheGetOrSet('antSacrificeTimer').textContent = formatTimeShort(player.antSacrificeTimer)\r\n    showSacrifice()\r\n  }\r\n}\r\n\r\ninterface cubeNames {\r\n    cube: number\r\n    tesseract: number\r\n    hypercube: number\r\n    platonicCube: number\r\n}\r\n\r\nexport const visualUpdateCubes = () => {\r\n  if (G.currentTab !== 'cube') {\r\n    return\r\n  }\r\n\r\n  const cubeMult = (player.shopUpgrades.cubeToQuark) ? 1.5 : 1\r\n  const tesseractMult = (player.shopUpgrades.tesseractToQuark) ? 1.5 : 1\r\n  const hypercubeMult = (player.shopUpgrades.hypercubeToQuark) ? 1.5 : 1\r\n  const platonicMult = 1.5\r\n\r\n  const toNextQuark: cubeNames = {\r\n    cube: Number(player.wowCubes.checkCubesToNextQuark(5, cubeMult, player.cubeQuarkDaily, player.cubeOpenedDaily)),\r\n    tesseract: Number(player.wowTesseracts.checkCubesToNextQuark(7, tesseractMult, player.tesseractQuarkDaily, player.tesseractOpenedDaily)),\r\n    hypercube: Number(player.wowHypercubes.checkCubesToNextQuark(10, hypercubeMult, player.hypercubeQuarkDaily, player.hypercubeOpenedDaily)),\r\n    platonicCube: Number(player.wowPlatonicCubes.checkCubesToNextQuark(15, platonicMult, player.platonicCubeQuarkDaily, player.platonicCubeOpenedDaily))\r\n  }\r\n\r\n  const names = Object.keys(toNextQuark) as (keyof cubeNames)[]\r\n  for (const name of names) {\r\n    DOMCacheGetOrSet(`${name}QuarksToday`).innerHTML = i18next.t(`wowCubes.quarks.${name}QuarksToday`, { amount: format(player[`${name}QuarkDaily` as const]) })\r\n    DOMCacheGetOrSet(`${name}QuarksOpenToday`).innerHTML = i18next.t(`wowCubes.quarks.${name}QuarksOpenToday`, { amount: format(player[`${name}OpenedDaily` as const]) })\r\n    DOMCacheGetOrSet(`${name}QuarksOpenRequirement`).innerHTML = i18next.t(`wowCubes.quarks.${name}QuarksOpenRequirement`, { amount: format(Math.max(1, toNextQuark[name])) })\r\n\r\n    // Change color of requirement text if 1 or less required :D\r\n    DOMCacheGetOrSet(`${name}QuarksOpenRequirement`).style.color = (Math.max(1, toNextQuark[name]) === 1)? 'gold': 'white'\r\n  }\r\n\r\n  let accuracy\r\n  switch (player.subtabNumber) {\r\n    case 0: {\r\n      if (player.autoOpenCubes) {\r\n        DOMCacheGetOrSet('openCubes').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openCubes, 0) })\r\n      }\r\n      DOMCacheGetOrSet('cubeQuantity').innerHTML = i18next.t('wowCubes.cubes.inventory', { amount: format(player.wowCubes, 0, true) })\r\n      const cubeArray = [null, player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed]\r\n\r\n      accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 1, 4, 3]\r\n      for (let i = 1; i <= 10; i++) {\r\n        let augmentAccuracy = 0\r\n        if (cubeArray[i]! >= 1000 && i !== 6) {\r\n          augmentAccuracy += 2\r\n        }\r\n        const aestheticMultiplier = (i === 1 || i === 8 || i === 9) ? 1: 100\r\n        DOMCacheGetOrSet(`cube${i}Bonus`).innerHTML = i18next.t(`wowCubes.cubes.items.${i}`, { amount: format(cubeArray[i], 0, true), bonus: format(aestheticMultiplier * (G.cubeBonusMultiplier[i]! - 1), accuracy[i]! + augmentAccuracy, true) })\r\n      }\r\n      DOMCacheGetOrSet('cubeBlessingsTotal').innerHTML = i18next.t('wowCubes.cubes.total', { amount: format(sumContents(cubeArray.slice(1) as number[]), 0, true) })\r\n      break\r\n    }\r\n    case 1: {\r\n      if (player.autoOpenTesseracts) {\r\n        DOMCacheGetOrSet('openTesseracts').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openTesseracts, 0) })\r\n      }\r\n      DOMCacheGetOrSet('tesseractQuantity').innerHTML = i18next.t('wowCubes.tesseracts.inventory', { amount: format(player.wowTesseracts, 0, true) })\r\n      const tesseractArray = [null, player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\r\n      accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\r\n      for (let i = 1; i <= 10; i++) {\r\n        let augmentAccuracy = 0\r\n        if (tesseractArray[i]! >= 1000 && i !== 6) {\r\n          augmentAccuracy += 2\r\n        }\r\n        DOMCacheGetOrSet(`tesseract${i}Bonus`).innerHTML = i18next.t(`wowCubes.tesseracts.items.${i}`, { amount: format(tesseractArray[i], 0, true), bonus: format(100 * (G.tesseractBonusMultiplier[i]! - 1), accuracy[i]! + augmentAccuracy, true) })\r\n      }\r\n      DOMCacheGetOrSet('tesseractBlessingsTotal').innerHTML = i18next.t('wowCubes.tesseracts.total', { amount: format(sumContents(tesseractArray.slice(1) as number[]), 0, true) })\r\n      break\r\n    }\r\n    case 2: {\r\n      if (player.autoOpenHypercubes) {\r\n        DOMCacheGetOrSet('openHypercubes').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openHypercubes, 0) })\r\n      }\r\n      DOMCacheGetOrSet('hypercubeQuantity').innerHTML = i18next.t('wowCubes.hypercubes.inventory', { amount: format(player.wowHypercubes, 0, true) })\r\n      const hypercubeArray = [null, player.hypercubeBlessings.accelerator, player.hypercubeBlessings.multiplier, player.hypercubeBlessings.offering, player.hypercubeBlessings.runeExp, player.hypercubeBlessings.obtainium, player.hypercubeBlessings.antSpeed, player.hypercubeBlessings.antSacrifice, player.hypercubeBlessings.antELO, player.hypercubeBlessings.talismanBonus, player.hypercubeBlessings.globalSpeed]\r\n      accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\r\n      for (let i = 1; i <= 10; i++) {\r\n        let augmentAccuracy = 0\r\n        if (hypercubeArray[i]! >= 1000) {\r\n          augmentAccuracy += 2\r\n        }\r\n        DOMCacheGetOrSet(`hypercube${i}Bonus`).innerHTML = i18next.t(`wowCubes.hypercubes.items.${i}`, { amount: format(hypercubeArray[i], 0, true), bonus: format(100 * (G.hypercubeBonusMultiplier[i]! - 1), accuracy[i]! + augmentAccuracy, true) })\r\n      }\r\n      DOMCacheGetOrSet('hypercubeBlessingsTotal').innerHTML = i18next.t('wowCubes.hypercubes.total', { amount: format(sumContents(hypercubeArray.slice(1) as number[]), 0, true) })\r\n      break\r\n    }\r\n    case 3: {\r\n      if (player.autoOpenPlatonicsCubes) {\r\n        DOMCacheGetOrSet('openPlatonicCube').textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openPlatonicsCubes, 0) })\r\n      }\r\n      DOMCacheGetOrSet('platonicQuantity').innerHTML = i18next.t('wowCubes.platonics.inventory', { amount: format(player.wowPlatonicCubes, 0, true) })\r\n      const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed]\r\n      const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4]\r\n      accuracy = [5, 5, 5, 5, 2, 3, 3, 2]\r\n      for (let i = 0; i < platonicArray.length; i++) {\r\n        let augmentAccuracy = 0\r\n        if (platonicArray[i] >= DRThreshold[i]) {\r\n          augmentAccuracy += 1\r\n        }\r\n        DOMCacheGetOrSet(`platonicCube${i+1}Bonus`).innerHTML = i18next.t(`wowCubes.platonics.items.${i+1}`, { amount: format(platonicArray[i], 0, true), bonus: format(100 * (G.platonicBonusMultiplier[i] - 1), accuracy[i] + augmentAccuracy, true) })\r\n      }\r\n      DOMCacheGetOrSet('platonicBlessingsTotal').innerHTML = i18next.t('wowCubes.platonics.total', { amount: format(sumContents(platonicArray), 0, true) })\r\n      break\r\n    }\r\n    case 4:\r\n      DOMCacheGetOrSet('cubeAmount2').textContent = `You have ${format(player.wowCubes, 0, true)} Wow! Cubes =)`\r\n      break\r\n    case 5:\r\n      break\r\n    case 6:\r\n      DOMCacheGetOrSet('hepteractQuantity').innerHTML = i18next.t('wowCubes.hepteractForge.youPossessHepteracts', {\r\n        x: format(player.wowAbyssals, 0, true)\r\n      })\r\n\r\n      //Update the grid\r\n      hepteractTypeList.forEach((type) => {\r\n        UpdateHeptGridValues(type)\r\n      })\r\n\r\n      //orbs\r\n      DOMCacheGetOrSet('heptGridOrbBalance').textContent = format(player.overfluxOrbs)\r\n      DOMCacheGetOrSet('heptGridOrbEffect').textContent = format(100 * (-1 + calculateCubeQuarkMultiplier()), 2, true) + '%'\r\n\r\n      //powder\r\n      DOMCacheGetOrSet('heptGridPowderBalance').textContent = format(player.overfluxPowder)\r\n      DOMCacheGetOrSet('heptGridPowderWarps').textContent = format(player.dailyPowderResetUses)\r\n      break\r\n    default:\r\n      // console.log(`player.subtabNumber (${player.subtabNumber}) was outside of the allowed range (${subTabsInMainTab(8).subTabList.length}) for the cube tab`);\r\n      break\r\n  }\r\n}\r\n\r\nconst UpdateHeptGridValues = (type: hepteractTypes) => {\r\n  const text = type + 'ProgressBarText'\r\n  const bar = type + 'ProgressBar'\r\n  const textEl = DOMCacheGetOrSet(text)\r\n  const barEl = DOMCacheGetOrSet(bar)\r\n  const unlocked = player.hepteractCrafts[type].UNLOCKED\r\n\r\n  if (!unlocked) {\r\n    textEl.textContent = 'LOCKED'\r\n    barEl.style.width = '100%'\r\n    barEl.style.backgroundColor = 'var(--hepteract-bar-red)'\r\n  } else {\r\n    const balance = player.hepteractCrafts[type].BAL\r\n    const cap = player.hepteractCrafts[type].computeActualCap()\r\n    const barWidth = Math.round((balance / cap) * 100)\r\n\r\n    let barColor = ''\r\n    if (barWidth < 34) {\r\n      barColor = 'var(--hepteract-bar-red)'\r\n    } else if (barWidth >= 34 && barWidth < 68) {\r\n      barColor = 'var(--hepteract-bar-yellow)'\r\n    } else {\r\n      barColor = 'var(--hepteract-bar-green)'\r\n    }\r\n\r\n    textEl.textContent = `${format(balance)} / ${format(cap)}`\r\n    barEl.style.width = `${barWidth}%`\r\n    barEl.style.backgroundColor = barColor\r\n  }\r\n}\r\n\r\nexport const visualUpdateCorruptions = () => {\r\n  if (G.currentTab !== 'traits') {\r\n    return\r\n  }\r\n\r\n  const metaData = CalcCorruptionStuff()\r\n  const ascCount = calcAscensionCount()\r\n  DOMCacheGetOrSet('autoAscend').innerHTML = player.autoAscendMode === 'c10Completions' ?\r\n    i18next.t('corruptions.autoAscend.c10Completions', { input: format(player.autoAscendThreshold), completions: format(player.challengecompletions[10]) }):\r\n    i18next.t('corruptions.autoAscend.realTime', { input: format(player.autoAscendThreshold), time: format(player.ascensionCounterRealReal) })\r\n    /*DOMCacheGetOrSet('autoAscendText').textContent = player.autoAscendMode === 'c10Completions' ? ' you\\'ve completed Sadistic Challenge I a total of ' : ' the timer is at least ';\r\n    DOMCacheGetOrSet('autoAscendMetric').textContent = format(player.autoAscendThreshold);\r\n    DOMCacheGetOrSet('autoAscendText2').textContent = player.autoAscendMode === 'c10Completions' ? ' times, Currently ' : ' seconds (Real-time), Currently ';\r\n    DOMCacheGetOrSet('autoAscendMetric2').textContent = player.autoAscendMode === 'c10Completions' ? String(player.challengecompletions[10]) : format(player.ascensionCounterRealReal);*/\r\n  DOMCacheGetOrSet('corruptionBank').innerHTML = i18next.t('corruptions.corruptionBank', { number: format(metaData[0], 0, true) })\r\n  DOMCacheGetOrSet('corruptionScore').innerHTML = i18next.t('corruptions.corruptionScore', { ascScore: format(metaData[1], 1, true), corrMult: format(metaData[2], 1, true), bonusMult: format(metaData[9], 2, true), totalScore: format(metaData[3], 1, true) })\r\n  DOMCacheGetOrSet('corruptionCubes').innerHTML = i18next.t('corruptions.corruptionCubes', { cubeAmount: format(metaData[4], 0, true) })\r\n  DOMCacheGetOrSet('corruptionTesseracts').innerHTML = i18next.t('corruptions.corruptionTesseracts', { tesseractAmount: format(metaData[5], 0, true) })\r\n  DOMCacheGetOrSet('corruptionHypercubes').innerHTML = i18next.t('corruptions.corruptionHypercubes', { hypercubeAmount: format(metaData[6], 0, true) })\r\n  DOMCacheGetOrSet('corruptionPlatonicCubes').innerHTML = i18next.t('corruptions.corruptionPlatonics', { platonicAmount: format(metaData[7], 0, true) })\r\n  DOMCacheGetOrSet('corruptionHepteracts').innerHTML = i18next.t('corruptions.corruptionHepteracts', { hepteractAmount: format(metaData[8], 0, true) })\r\n  DOMCacheGetOrSet('corruptionAntExponent').innerHTML = i18next.t('corruptions.antExponent', { exponent: format((1 - 0.9 / 90 * sumContents(player.usedCorruptions)) * G.extinctionMultiplier[player.usedCorruptions[7]], 3) })\r\n  DOMCacheGetOrSet('corruptionSpiritBonus').innerHTML = i18next.t('corruptions.spiritBonus', { multiplier: format(calculateCorruptionPoints()/400, 2, true) })\r\n  DOMCacheGetOrSet('corruptionAscensionCount').style.display = ascCount > 1 ? 'block' : 'none'\r\n\r\n  if (ascCount > 1) {\r\n    DOMCacheGetOrSet('corruptionAscensionCount').innerHTML = i18next.t('corruptions.ascensionCount', { ascCount: format(calcAscensionCount()) })\r\n  }\r\n}\r\n\r\nexport const visualUpdateSettings = () => {\r\n  if (G.currentTab !== 'settings') {\r\n    return\r\n  }\r\n\r\n  if (player.subtabNumber === 0) {\r\n    DOMCacheGetOrSet('saveString').textContent = i18next.t('settings.currently', {\r\n      x: player.saveString.replace('$VERSION$', `v${version}`)\r\n    })\r\n\r\n    const quarkData = quarkHandler()\r\n    const onExportQuarks = quarkData.gain\r\n    const maxExportQuarks = quarkData.capacity\r\n\r\n    let goldenQuarkMultiplier = 1\r\n    goldenQuarkMultiplier *= 1 + player.worlds.BONUS / 100\r\n    goldenQuarkMultiplier *= (player.highestSingularityCount >= 100 ? 1 + player.highestSingularityCount / 50 : 1)\r\n\r\n    DOMCacheGetOrSet('quarktimerdisplay').textContent = i18next.t('settings.exportQuark', {\r\n      x: format((3600 / (quarkData.perHour) - (player.quarkstimer % (3600.00001 / (quarkData.perHour)))), 2),\r\n      y: player.worlds.toString(1)\r\n    })\r\n    DOMCacheGetOrSet('quarktimeramount').textContent = i18next.t('settings.quarksOnExport', {\r\n      x: player.worlds.toString(onExportQuarks),\r\n      y: player.worlds.toString(maxExportQuarks)\r\n    })\r\n\r\n    DOMCacheGetOrSet('goldenQuarkTimerDisplay').textContent = i18next.t('settings.exportGoldenQuark', {\r\n      x: format(3600 / Math.max(1, +player.singularityUpgrades.goldenQuarks3.getEffect().bonus) - (player.goldenQuarksTimer % (3600.00001 / Math.max(1, +player.singularityUpgrades.goldenQuarks3.getEffect().bonus)))),\r\n      y: format(goldenQuarkMultiplier, 2, true)\r\n    })\r\n\r\n    DOMCacheGetOrSet('goldenQuarkTimerAmount').textContent = i18next.t('settings.goldenQuarksOnExport', {\r\n      x: format(Math.floor(player.goldenQuarksTimer * +player.singularityUpgrades.goldenQuarks3.getEffect().bonus/ 3600) * goldenQuarkMultiplier, 2),\r\n      y: format(Math.floor(168 * +player.singularityUpgrades.goldenQuarks3.getEffect().bonus * goldenQuarkMultiplier))\r\n    })\r\n  }\r\n  if (player.subtabNumber === 3) {\r\n    loadStatisticsUpdate()\r\n  }\r\n}\r\n\r\nexport const visualUpdateSingularity = () => {\r\n  if (G.currentTab !== 'singularity') {\r\n    return\r\n  }\r\n  if (player.subtabNumber === 0) {\r\n    DOMCacheGetOrSet('goldenQuarkamount').textContent = i18next.t('singularity.goldenQuarkAmount', { goldenQuarks: format(player.goldenQuarks, 0, true) })\r\n\r\n    const keys = Object.keys(player.singularityUpgrades) as (keyof Player['singularityUpgrades'])[]\r\n    const val = G.shopEnhanceVision\r\n\r\n    for (const key of keys) {\r\n      if (key === 'offeringAutomatic') {\r\n        continue\r\n      }\r\n      const singItem = player.singularityUpgrades[key]\r\n      const el = DOMCacheGetOrSet(`${String(key)}`)\r\n      if (singItem.maxLevel !== -1 && singItem.level >= singItem.computeMaxLevel()) {\r\n        el.style.filter = val ? 'brightness(.9)' : 'none'\r\n      } else if  (singItem.getCostTNL() > player.goldenQuarks || player.singularityCount < singItem.minimumSingularity) {\r\n        el.style.filter = val ? 'grayscale(.9) brightness(.8)' : 'none'\r\n      } else if (singItem.maxLevel === -1 || singItem.level < singItem.computeMaxLevel()) {\r\n        if (singItem.freeLevels > singItem.level) {\r\n          el.style.filter = val ? 'blur(1px) invert(.9) saturate(200)' : 'none'\r\n        } else {\r\n          el.style.filter = val ? 'invert(.9) brightness(1.1)' : 'none'\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (player.subtabNumber === 3) {\r\n    const keys = Object.keys(player.octeractUpgrades) as (keyof Player['octeractUpgrades'])[]\r\n    const val = G.shopEnhanceVision\r\n\r\n    for (const key of keys) {\r\n      const octItem = player.octeractUpgrades[key]\r\n      const el = DOMCacheGetOrSet(`${String(key)}`)\r\n      if (octItem.maxLevel !== -1 && octItem.level >= octItem.maxLevel) {\r\n        el.style.filter = val ? 'brightness(.9)' : 'none'\r\n      } else if  (octItem.getCostTNL() > player.wowOcteracts) {\r\n        el.style.filter = val ? 'grayscale(.9) brightness(.8)' : 'none'\r\n      } else if (octItem.maxLevel === -1 || octItem.level < octItem.maxLevel) {\r\n        if (octItem.freeLevels > octItem.level) {\r\n          el.style.filter = val ? 'blur(2px) invert(.9) saturate(200)' : 'none'\r\n        } else {\r\n          el.style.filter = val ? 'invert(.9) brightness(1.1)' : 'none'\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const shopMouseover = (value: boolean) => {\r\n  G.shopEnhanceVision = value\r\n}\r\n\r\nexport const visualUpdateOcteracts = () => {\r\n  if (G.currentTab !== 'singularity') {\r\n    return\r\n  }\r\n  DOMCacheGetOrSet('octeractAmount').innerHTML = i18next.t('octeract.amount', { octeracts: format(player.wowOcteracts, 2, true, true, true) })\r\n\r\n  const perSecond = octeractGainPerSecond()\r\n\r\n  DOMCacheGetOrSet('secondsPerOcteract').style.display = perSecond < 1 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('secondsPerOcteract').innerHTML = i18next.t('octeract.secondsPerOcteract', { seconds: format(1 / perSecond, 2, true) })\r\n  DOMCacheGetOrSet('octeractPerSeconds').style.display = perSecond >= 1 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('octeractPerSeconds').innerHTML = i18next.t('octeract.octeractsPerSecond', { octeracts: format(perSecond, 2, true) })\r\n\r\n  const cTOCB = (calculateTotalOcteractCubeBonus() - 1) * 100\r\n  const cTOQB = (calculateTotalOcteractQuarkBonus() - 1) * 100\r\n  const cTOOB = (calculateTotalOcteractOfferingBonus() - 1) * 100\r\n  const cTOOOB = (calculateTotalOcteractObtainiumBonus() - 1) * 100\r\n  DOMCacheGetOrSet('totalOcteractAmount').innerHTML = i18next.t('octeract.totalGenerated', { octeracts: format(player.totalWowOcteracts, 2, true, true, true) })\r\n  DOMCacheGetOrSet('totalOcteractCubeBonus').style.display = cTOCB >= 0.001 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('totalOcteractQuarkBonus').style.display = cTOQB >= 0.001 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('totalOcteractOfferingBonus').style.display = cTOOB >= 0.001 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('totalOcteractObtainiumBonus').style.display = cTOOOB >= 0.001 ? 'block' : 'none'\r\n  DOMCacheGetOrSet('totalOcteractCubeBonus').innerHTML = i18next.t('octeract.generatedCubeBonus', { cubeBonus: format(cTOCB, 3, true) })\r\n  DOMCacheGetOrSet('totalOcteractQuarkBonus').innerHTML = i18next.t('octeract.generatedQuarkBonus', { quarkBonus: format(cTOQB, 3, true) })\r\n  DOMCacheGetOrSet('totalOcteractOfferingBonus').innerHTML = i18next.t('octeract.generatedOfferingBonus', { offeringBonus: format(cTOOB, 3, true) })\r\n  DOMCacheGetOrSet('totalOcteractObtainiumBonus').innerHTML = i18next.t('octeract.generatedObtainiumBonus', { obtainiumBonus: format(cTOOOB, 3, true) })\r\n}\r\n\r\nexport const visualUpdateShop = () => {\r\n  if (G.currentTab !== 'shop') {\r\n    return\r\n  }\r\n  DOMCacheGetOrSet('quarkamount').textContent = i18next.t('shop.youHaveQuarks', { x: format(player.worlds, 0, true) })\r\n  DOMCacheGetOrSet('offeringpotionowned').textContent = format(player.shopUpgrades.offeringPotion, 0, true)\r\n  DOMCacheGetOrSet('obtainiumpotionowned').textContent = format(player.shopUpgrades.obtainiumPotion, 0, true)\r\n\r\n  // Create Keys with the correct type\r\n  const keys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\r\n  for (const key of keys) {\r\n    // Create a copy of shopItem instead of accessing many times\r\n    const shopItem = shopData[key]\r\n\r\n    if (shopItem.type === shopUpgradeTypes.CONSUMABLE) {\r\n      const maxBuyablePotions = Math.min(Math.floor(Number(player.worlds)/getShopCosts(key)), shopItem.maxLevel-player.shopUpgrades[key])\r\n      const el = DOMCacheGetOrSet(`buy${key.toLowerCase()}`)\r\n      switch (player.shopBuyMaxToggle) {\r\n        case false:\r\n          el.textContent = 'BUY: 100 Quarks Each'\r\n          break\r\n        case 'TEN':\r\n          el.textContent = `+${Math.min(10, maxBuyablePotions)} for ${format(getShopCosts(key)*Math.min(10, maxBuyablePotions), 0, true)} Quarks`\r\n          break\r\n        default:\r\n          el.textContent = `+${maxBuyablePotions} for ${format(getShopCosts(key)*maxBuyablePotions)} Quarks`\r\n      }\r\n    }\r\n\r\n    if (shopItem.type === shopUpgradeTypes.UPGRADE) {\r\n      if (player.shopHideToggle && player.shopUpgrades[key] >= shopItem.maxLevel && !shopItem.refundable) {\r\n        DOMCacheGetOrSet(`${key}Hide`).style.display = 'none'\r\n        continue\r\n      } else {\r\n        DOMCacheGetOrSet(`${key}Hide`).style.display = isShopUpgradeUnlocked(key) ? 'block' : 'none'\r\n      }\r\n      // Case: If max level is 1, then it can be considered a boolean \"bought\" or \"not bought\" item\r\n      if (shopItem.maxLevel === 1) {\r\n        // TODO(@KhafraDev): i18n\r\n        DOMCacheGetOrSet(`${key}Level`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel ? 'Bought!' : 'Not Bought!'\r\n      } else {\r\n        // Case: max level greater than 1, treat it as a fraction out of max level\r\n        // TODO(@KhafraDev): i18n\r\n        DOMCacheGetOrSet(`${key}Level`).textContent =\r\n          `${(player.highestSingularityCount > 0 || player.ascensionCount > 0 ? '' : 'Level ')}${format(player.shopUpgrades[key])}/${format(shopItem.maxLevel)}`\r\n      }\r\n      // Handles Button - max level needs no price indicator, otherwise it's necessary\r\n\r\n      const buyMaxAmount = shopItem.maxLevel - player.shopUpgrades[key]\r\n      let buyData:IMultiBuy\r\n\r\n      switch (player.shopBuyMaxToggle) {\r\n        case false:\r\n          DOMCacheGetOrSet(`${key}Button`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel\r\n            ? i18next.t('shop.maxed')\r\n            : i18next.t('shop.upgradeFor', { x: format(getShopCosts(key)) })\r\n          break\r\n        case 'TEN':\r\n          buyData = calculateSummationNonLinear(player.shopUpgrades[key], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, Math.min(10, buyMaxAmount))\r\n          DOMCacheGetOrSet(`${key}Button`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel\r\n            ? i18next.t('shop.maxed')\r\n            : i18next.t('shop.plusForQuarks', {\r\n              x: format(buyData.levelCanBuy - player.shopUpgrades[key], 0, true),\r\n              y: format(buyData.cost)\r\n            })\r\n          break\r\n        default:\r\n          buyData = calculateSummationNonLinear(player.shopUpgrades[key], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, buyMaxAmount)\r\n          DOMCacheGetOrSet(`${key}Button`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel\r\n            ? i18next.t('shop.maxed')\r\n            : i18next.t('shop.plusForQuarks', {\r\n              x: format(buyData.levelCanBuy - player.shopUpgrades[key], 0, true),\r\n              y: format(buyData.cost)\r\n            })\r\n      }\r\n    }\r\n  }\r\n\r\n  DOMCacheGetOrSet('buySingularityQuarksAmount').textContent = `${player.goldenQuarks < 1000 ? 'Owned: ' : ''}${format(player.goldenQuarks)}`\r\n  DOMCacheGetOrSet('buySingularityQuarksButton').textContent = `Buy! ${format(getGoldenQuarkCost().cost)} Quarks Each`\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nexport const visualUpdateEvent = () => {}\r\n", "import { sacrificeAnts } from './Ants'\r\nimport { calculateAscensionAcceleration, calculateAutomaticObtainium, calculateGoldenQuarkGain, calculateMaxRunes, calculateObtainium, calculateTimeAcceleration, octeractGainPerSecond } from './Calculate'\r\nimport { quarkHandler } from './Quark'\r\nimport { redeemShards, unlockedRune, checkMaxRunes } from './Runes'\r\nimport { player } from './Synergism'\r\nimport { visualUpdateOcteracts, visualUpdateResearch } from './UpdateVisuals'\r\nimport { Globals as G } from './Variables'\r\nimport { buyAllBlessings } from './Buy'\r\nimport { buyAllTalismanResources } from './Talismans'\r\nimport { useConsumable } from './Shop'\r\n\r\ntype TimerInput = 'prestige' | 'transcension' | 'reincarnation' | 'ascension' |\r\n                  'quarks' | 'goldenQuarks' | 'singularity' | 'octeracts' |\r\n                  'autoPotion'\r\n\r\n/**\r\n * addTimers will add (in milliseconds) time to the reset counters, and quark export timer\r\n * @param input\r\n * @param time\r\n */\r\nexport const addTimers = (input: TimerInput, time = 0) => {\r\n  const timeMultiplier = (input === 'ascension' || input === 'quarks' || input === 'goldenQuarks' ||\r\n                            input === 'singularity' || input === 'octeracts' || input === 'autoPotion') ? 1 : calculateTimeAcceleration().mult\r\n\r\n  switch (input) {\r\n    case 'prestige': {\r\n      player.prestigecounter += time * timeMultiplier\r\n      break\r\n    }\r\n    case 'transcension': {\r\n      player.transcendcounter += time * timeMultiplier\r\n      break\r\n    }\r\n    case 'reincarnation': {\r\n      player.reincarnationcounter += time * timeMultiplier\r\n      break\r\n    }\r\n    case 'ascension': { //Anything in here is affected by add code\r\n\r\n      const ascensionSpeedMulti = (player.singularityUpgrades.oneMind.getEffect().bonus) ? 10 : calculateAscensionAcceleration()\r\n      player.ascensionCounter += time * timeMultiplier * ascensionSpeedMulti\r\n      player.ascensionCounterReal += time * timeMultiplier\r\n      break\r\n    }\r\n    case 'singularity': {\r\n      player.ascensionCounterRealReal += time\r\n      player.singularityCounter += time * timeMultiplier\r\n      break\r\n    }\r\n    case 'quarks': {\r\n      // First get maximum Quark Clock (25h, up to +25 from Research 8x20)\r\n      const maxQuarkTimer = quarkHandler().maxTime\r\n      player.quarkstimer += time * timeMultiplier\r\n      // Checks if this new time is greater than maximum, in which it will default to that time.\r\n      // Otherwise returns itself.\r\n      player.quarkstimer = (player.quarkstimer > maxQuarkTimer) ? maxQuarkTimer : player.quarkstimer\r\n      break\r\n    }\r\n    case 'goldenQuarks': {\r\n      if (+player.singularityUpgrades.goldenQuarks3.getEffect().bonus === 0) {\r\n        return\r\n      } else {\r\n        player.goldenQuarksTimer += time * timeMultiplier\r\n        player.goldenQuarksTimer = (player.goldenQuarksTimer > 3600 * 168) ? 3600 * 168 : player.goldenQuarksTimer\r\n      }\r\n      break\r\n    }\r\n    case 'octeracts': {\r\n      if (!player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\r\n        return\r\n      } else {\r\n        player.octeractTimer += time * timeMultiplier\r\n      }\r\n      if (player.octeractTimer >= 1) {\r\n        const amountOfGiveaways = player.octeractTimer - (player.octeractTimer % 1)\r\n        player.octeractTimer %= 1\r\n\r\n        const perSecond = octeractGainPerSecond()\r\n        player.wowOcteracts += amountOfGiveaways * perSecond\r\n        player.totalWowOcteracts += amountOfGiveaways * perSecond\r\n\r\n        if (player.highestSingularityCount >= 160) {\r\n          const levels = [160, 173, 185, 194, 204, 210, 219, 229, 240, 249]\r\n          const frac = 1e-6\r\n          let actualLevel = 0\r\n          for (const sing of levels) {\r\n            if (player.highestSingularityCount >= sing) {\r\n              actualLevel += 1\r\n            }\r\n          }\r\n\r\n          for (let i = 0; i < amountOfGiveaways; i++) {\r\n            const quarkFraction = player.quarksThisSingularity * frac * actualLevel\r\n            player.goldenQuarks += quarkFraction * calculateGoldenQuarkGain(true)\r\n            player.quarksThisSingularity -= quarkFraction\r\n          }\r\n        }\r\n        visualUpdateOcteracts()\r\n      }\r\n      break\r\n    }\r\n    case 'autoPotion': {\r\n      if (player.highestSingularityCount < 6) {\r\n        return\r\n      } else {\r\n        // player.toggles[42] enables FAST Offering Potion Expenditure, but actually spends the potion.\r\n        // Hence, you need at least one potion to be able to use fast spend.\r\n        const toggleOfferingOn = (player.toggles[42] && player.shopUpgrades.offeringPotion > 0)\r\n        // player.toggles[43] enables FAST Obtainium Potion Expenditure, but actually spends the potion.\r\n        const toggleObtainiumOn = (player.toggles[43] && player.shopUpgrades.obtainiumPotion > 0)\r\n\r\n        player.autoPotionTimer += time * timeMultiplier\r\n        player.autoPotionTimerObtainium += time * timeMultiplier\r\n\r\n        const timerThreshold = 180 * Math.pow(1.03, -player.highestSingularityCount) / +player.octeractUpgrades.octeractAutoPotionSpeed.getEffect().bonus\r\n\r\n        const effectiveOfferingThreshold = (toggleOfferingOn ? Math.min(1, timerThreshold) / 20: timerThreshold)\r\n        const effectiveObtainiumThreshold = (toggleObtainiumOn ? Math.min(1, timerThreshold) / 20: timerThreshold)\r\n\r\n        if (player.autoPotionTimer >= effectiveOfferingThreshold) {\r\n          const amountOfPotions = ((player.autoPotionTimer) - (player.autoPotionTimer % effectiveOfferingThreshold)) / effectiveOfferingThreshold\r\n          player.autoPotionTimer %= effectiveOfferingThreshold\r\n          void useConsumable('offeringPotion', true, amountOfPotions, toggleOfferingOn)\r\n        }\r\n\r\n        if (player.autoPotionTimerObtainium >= effectiveObtainiumThreshold) {\r\n          const amountOfPotions = ((player.autoPotionTimerObtainium) - (player.autoPotionTimerObtainium % effectiveObtainiumThreshold)) / effectiveObtainiumThreshold\r\n          player.autoPotionTimerObtainium %= effectiveObtainiumThreshold\r\n          void useConsumable('obtainiumPotion', true, amountOfPotions, toggleObtainiumOn)\r\n        }\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\ntype AutoToolInput = 'addObtainium' | 'addOfferings' | 'runeSacrifice' | 'antSacrifice'\r\n\r\n/**\r\n * Assortment of tools which are used when actions are automated.\r\n * @param input\r\n * @param time\r\n */\r\nexport const automaticTools = (input: AutoToolInput, time: number) => {\r\n  const timeMultiplier = (input === 'runeSacrifice' || input === 'addOfferings') ? 1 : calculateTimeAcceleration().mult\r\n\r\n  switch (input) {\r\n    case 'addObtainium': {\r\n      // If in challenge 14, abort and do not award obtainium\r\n      if (player.currentChallenge.ascension === 14) {\r\n        break\r\n      }\r\n      //Update Obtainium Multipliers + Amount to gain\r\n      calculateObtainium()\r\n      const obtainiumGain = calculateAutomaticObtainium()\r\n      //Add Obtainium\r\n      player.researchPoints = Math.min(1e300, player.researchPoints + obtainiumGain * time * timeMultiplier)\r\n      //Update visual displays if appropriate\r\n      if (G.currentTab === 'research') {\r\n        visualUpdateResearch()\r\n      }\r\n      break\r\n    }\r\n    case 'addOfferings':\r\n      //This counter can be increased through challenge 3 reward\r\n      //As well as cube upgrade 1x2 (2).\r\n      G.autoOfferingCounter += time\r\n      //Any time this exceeds 1 it adds an offering\r\n      player.runeshards = Math.min(1e300, player.runeshards + Math.floor(G.autoOfferingCounter))\r\n      G.autoOfferingCounter %= 1\r\n      break\r\n    case 'runeSacrifice':\r\n      //Every real life second this will trigger\r\n      player.sacrificeTimer += time\r\n      if (player.sacrificeTimer >= 1 && isFinite(player.runeshards) && player.runeshards > 0) {\r\n        // Automatic purchase of Blessings\r\n        if (player.highestSingularityCount >= 15) {\r\n          let ratio = 4\r\n          if (player.toggles[36]) {\r\n            buyAllBlessings('Blessings', 100 / ratio, true)\r\n            ratio--\r\n          }\r\n          if (player.toggles[37]) {\r\n            buyAllBlessings('Spirits', 100 / ratio, true)\r\n            ratio--\r\n          }\r\n        }\r\n        if (player.autoBuyFragment && player.highestSingularityCount >= 40 && player.cubeUpgrades[51] > 0) {\r\n          buyAllTalismanResources()\r\n        }\r\n\r\n        // If you bought cube upgrade 2x10 then it sacrifices to all runes equally\r\n        if (player.cubeUpgrades[20] === 1) {\r\n          const maxi = player.highestSingularityCount >= 50 ? 7 : (player.highestSingularityCount >= 30 ? 6 : 5)\r\n          const notMaxed = (maxi - checkMaxRunes(maxi))\r\n          if (notMaxed > 0) {\r\n            const baseAmount = Math.floor(player.runeshards / notMaxed / 2)\r\n            for (let i = 0; i < maxi; i++) {\r\n              if (!(!unlockedRune(i + 1) || player.runelevels[i] >= calculateMaxRunes(i + 1))) {\r\n                redeemShards(i + 1, true, baseAmount)\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          // If you did not buy cube upgrade 2x10 it sacrifices to selected rune.\r\n          const rune = player.autoSacrifice\r\n          redeemShards(rune, true, 0)\r\n        }\r\n        //Modulo used in event of a large delta time (this could happen for a number of reasons)\r\n        player.sacrificeTimer %= 1\r\n      }\r\n      break\r\n    case 'antSacrifice': {\r\n      // Increments real and 'fake' timers. the Real timer is on real life seconds.\r\n      player.antSacrificeTimer += time * timeMultiplier\r\n      player.antSacrificeTimerReal += time\r\n\r\n      //Equal to real time iff \"Real Time\" option selected in ants tab.\r\n      const antSacrificeTimer = (player.autoAntSacrificeMode === 2) ?\r\n        player.antSacrificeTimerReal : player.antSacrificeTimer\r\n\r\n      if (antSacrificeTimer >= player.autoAntSacTimer && player.antSacrificeTimerReal > 0.1 && player.researches[124] === 1\r\n                && player.autoAntSacrifice && player.antPoints.gte('1e40')) {\r\n        void sacrificeAnts(true)\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\n", "import { player, getTimePinnedToLoadDate } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\nimport { Alert, revealStuff } from './UpdateHTML'\r\n\r\ninterface HolidayData {\r\n    name: string\r\n    color: string\r\n    url: string\r\n    everyYear: boolean\r\n    start: string\r\n    end: string\r\n    notice: number\r\n    event: boolean\r\n    buffs: {\r\n        quark?: number\r\n        goldenQuark?: number\r\n        cubes?: number\r\n        powderConversion?: number\r\n        ascensionSpeed?: number\r\n        globalSpeed?: number\r\n        ascensionScore?: number\r\n        antSacrifice?: number\r\n        offering?: number\r\n        obtainium?: number\r\n        octeract?: number\r\n        oneMind?: number\r\n    }\r\n}\r\n\r\n// Editing the event is here\r\n// can change the basic game balance by setting default to event: true, but cannot stack events\r\nconst events: Record<string, HolidayData> = {\r\n  default: {\r\n    name: 'Game Modified',\r\n    color: 'white',\r\n    url: '',\r\n    everyYear: true,\r\n    start: '1/1/2001 00:00:00',\r\n    end: '12/31/2099 23:59:59',\r\n    notice: 0,\r\n    event: false,\r\n    buffs: {\r\n      quark: -0.2,\r\n      goldenQuark: 0,\r\n      cubes: 0,\r\n      powderConversion: 0,\r\n      ascensionSpeed: 0,\r\n      globalSpeed: 0,\r\n      ascensionScore: 0,\r\n      antSacrifice: 0,\r\n      offering: 0,\r\n      obtainium: 0\r\n    }\r\n  },\r\n  // Last active event\r\n  last: {\r\n    name: 'April Showers',\r\n    color: 'turquoise',\r\n    url: 'https://youtu.be/eKpPxWAauOI',\r\n    everyYear: false,\r\n    start: '03/29/2022 00:00:00',\r\n    end: '04/03/2023 23:59:59',\r\n    notice: 20,\r\n    event: true,\r\n    buffs: {\r\n      quark: 0.25,\r\n      globalSpeed: 0.2,\r\n      ascensionSpeed: 0,\r\n      antSacrifice: 0.2,\r\n      offering: 0.25,\r\n      obtainium: 0.25,\r\n      octeract: 0.25,\r\n      powderConversion: 0,\r\n      goldenQuark: 0.1,\r\n      oneMind: 0.025\r\n    }\r\n  },\r\n  khafra: {\r\n    name: 'Thanks for Boosting the Discord',\r\n    color: 'var(--green-text-color)', //Plat please use var color instead for any of these (darkorchid, orchid, darkcyan, red, maroon, orangered, crimson, gray, green, lightseagreen)\r\n    url: 'https://www.youtube.com/watch?v=iYYRH4apXDo',\r\n    everyYear: false,\r\n    start: '12/07/2022 00:00:00',\r\n    end: '12/08/2022 23:59:59',\r\n    notice: 20,\r\n    event: true,\r\n    buffs: {\r\n      quark: .2,\r\n      globalSpeed: 0,\r\n      ascensionSpeed: 0,\r\n      antSacrifice: 0,\r\n      offering: 0,\r\n      obtainium: 0,\r\n      octeract: 0,\r\n      powderConversion: 0,\r\n      goldenQuark: 0,\r\n      oneMind: 0\r\n    }\r\n  }\r\n  /*next: {\r\n        name: 'Derpmas 2022: Daily Extravaganza!',\r\n        color: 'white',\r\n        url: 'https://www.youtube.com/watch?v=A6-vc-R9np8',\r\n        everyYear: false,\r\n        start: '12/25/2022 00:00:00',\r\n        end: '01/01/2023 23:59:59',\r\n        notice: 30,\r\n        event: true,\r\n        buffs: {\r\n            quark: 0,\r\n            globalSpeed: 0,\r\n            ascensionSpeed: 0,\r\n            antSacrifice: 0,\r\n            offering: 0,\r\n            obtainium: 0,\r\n            octeract: 0,\r\n            powderConversion: 0,\r\n            goldenQuark: 0,\r\n            oneMind: 0.05\r\n        }\r\n    }*/\r\n  // Event example\r\n  /*\r\n    newyear: {\r\n        name: '&#127881; New Year Event! &#127881;',\r\n        color: 'yellow',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '12/31/2001 00:00:00',\r\n        end: '01/02/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            ascensionSpeed: 2,\r\n            globalSpeed: 2\r\n        }\r\n    },\r\n    spring: {\r\n        name: '&#127800; Spring Event! &#127800;',\r\n        color: 'pink',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '04/01/2001 00:00:00',\r\n        end: '04/02/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            ascensionScore: 0.5,\r\n            antSacrifice: 1\r\n        }\r\n    },\r\n    summer: {\r\n        name: '&#9728 Summer Event! &#9728',\r\n        color: 'lightgoldenrodyellow',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '07/01/2001 00:00:00',\r\n        end: '07/02/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            ascensionSpeed: 1,\r\n            obtainium: 2\r\n        }\r\n    },\r\n    autumn: {\r\n        name: '&#127810; Autumn Event! &#127810;',\r\n        color: 'tomato',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '10/01/2001 00:00:00',\r\n        end: '10/02/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            cubes: 1,\r\n            offering: 2\r\n        }\r\n    },\r\n    winter: {\r\n        name: '&#10052 Winter Event! &#10052',\r\n        color: 'lightblue',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '02/01/2001 00:00:00',\r\n        end: '02/02/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            powderConversion: 2,\r\n            globalSpeed: 2\r\n        }\r\n    },\r\n    birthday: {\r\n        name: '&#127874; Synergism Birthday! &#127874;',\r\n        color: 'white',\r\n        url: '',\r\n        everyYear: true,\r\n        start: '01/05/2001 00:00:00',\r\n        end: '01/05/2001 23:59:59',\r\n        notice: 3,\r\n        event: true,\r\n        buffs: {\r\n            quark: 1,\r\n            goldenQuark: 1,\r\n            cubes: 1,\r\n            powderConversion: 1,\r\n            ascensionSpeed: 1,\r\n            globalSpeed: 1,\r\n            ascensionScore: 1,\r\n            antSacrifice: 1,\r\n            offering: 1,\r\n            obtainium: 1\r\n        }\r\n    }\r\n    */\r\n}\r\n\r\nlet nowEvent = events.default\r\n\r\nexport const getEvent = (): HolidayData => {\r\n  return nowEvent\r\n}\r\n\r\nexport const eventCheck = () => {\r\n  if (!player.dayCheck) {\r\n    return\r\n  }\r\n  const now = new Date(getTimePinnedToLoadDate())\r\n  let start: Date\r\n  let end: Date\r\n\r\n  // Disable the event if there is any fraud, such as setting a device clock in the past\r\n  /* TODO: Figure out why some people get tagged for cheating even when they are playing legitimately\r\n             I have temporarily disabled the checks. */\r\n  nowEvent = events.default\r\n  //if (now.getTime() >= player.dayCheck.getTime()) {\r\n  // Update currently valid events\r\n  for (const e in events) {\r\n    const event = events[e]\r\n    if (event.name !== 'default' && event.event) {\r\n      start = new Date(event.start)\r\n      end = new Date(event.end)\r\n      if (event.everyYear) {\r\n        const nowFullYear = now.getFullYear()\r\n        start = new Date(event.start)\r\n        end = new Date(event.end)\r\n        start.setFullYear(nowFullYear)\r\n        end.setFullYear(nowFullYear)\r\n        if (start.getTime() > end.getTime()) {\r\n          end.setFullYear(nowFullYear + 1)\r\n        }\r\n        if (now.getTime() >= start.getTime() - 31536000000 && now.getTime() <= end.getTime() - 31536000000) {\r\n          start.setFullYear(start.getFullYear() - 1)\r\n          end.setFullYear(end.getFullYear() - 1)\r\n        }\r\n        if (now.getTime() >= end.getTime() + 86400000) {\r\n          continue\r\n        }\r\n      } else if (now.getTime() >= end.getTime() + 86400000) {\r\n        continue\r\n      }\r\n      if (now.getTime() >= start.getTime() - event.notice * 86400000 && now.getTime() <= end.getTime()) {\r\n        nowEvent = event\r\n        if (now.getTime() >= start.getTime() && now.getTime() <= end.getTime()) {\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //}\r\n  const happyHolidays = DOMCacheGetOrSet('happyHolidays') as HTMLAnchorElement\r\n  const eventBuffs = DOMCacheGetOrSet('eventBuffs')\r\n  const updateIsEventCheck = G.isEvent\r\n  if (nowEvent.event) {\r\n    start = new Date(nowEvent.start)\r\n    end = new Date(nowEvent.end)\r\n    if (nowEvent.everyYear) {\r\n      const nowFullYear = now.getFullYear()\r\n      start.setFullYear(nowFullYear)\r\n      end.setFullYear(nowFullYear)\r\n      if (start.getTime() > end.getTime()) {\r\n        end.setFullYear(nowFullYear + 1)\r\n      }\r\n      if (now.getTime() >= start.getTime() - 31536000000 && now.getTime() <= end.getTime() - 31536000000) {\r\n        start.setFullYear(start.getFullYear() - 1)\r\n        end.setFullYear(end.getFullYear() - 1)\r\n      }\r\n    }\r\n    G.isEvent = now.getTime() >= start.getTime() && now.getTime() <= end.getTime()\r\n    let buffs = ''\r\n    for (let i = 0; i < eventBuffType.length; i++) {\r\n      const eventBuff = calculateEventSourceBuff(eventBuffType[i])\r\n      if (eventBuff !== 0) {\r\n        if (eventBuffType[i] === 'One Mind' && player.singularityUpgrades.oneMind.level > 0) {\r\n          buffs += `<span style=\"color: gold\">${eventBuff >= 0 ? '+' : '-'}${Math.round(Math.abs(eventBuff) * 100)}% ${eventBuffName[i]}</span> ,`\r\n        } else if (eventBuffType[i] !== 'One Mind' || player.singularityUpgrades.oneMind.level === 0) {\r\n          buffs += `${eventBuff >= 0 ? '+' : '-'}${Math.round(Math.abs(eventBuff) * 100)}% ${eventBuffName[i]}, `\r\n        }\r\n      }\r\n    }\r\n    if (buffs.length > 2) {\r\n      buffs = buffs.substring(0, buffs.length - 2)\r\n      buffs += '!'\r\n    }\r\n    DOMCacheGetOrSet('eventCurrent').textContent = G.isEvent\r\n      ? i18next.t('settings.events.activeUntil', { x: end })\r\n      : i18next.t('settings.events.starts', { x: start })\r\n    eventBuffs.innerHTML = G.isEvent ? 'Current Buffs: ' + buffs : ''\r\n    //eventBuffs.style.color = 'lime';\r\n    happyHolidays.innerHTML = nowEvent.name\r\n    happyHolidays.style.color = nowEvent.color\r\n    happyHolidays.href = nowEvent.url.length > 0 ? nowEvent.url : '#'\r\n  } else {\r\n    G.isEvent = false\r\n    DOMCacheGetOrSet('eventCurrent').innerHTML = i18next.t('settings.events.inactive')\r\n    eventBuffs.textContent = now.getTime() >= player.dayCheck.getTime() ? '' : ''\r\n    eventBuffs.style.color = 'var(--red-text-color)'\r\n    happyHolidays.innerHTML = ''\r\n    happyHolidays.href = ''\r\n  }\r\n  if (G.isEvent !== updateIsEventCheck) {\r\n    revealStuff()\r\n  }\r\n}\r\n\r\nconst eventBuffType = ['Quarks', 'Golden Quarks', 'Cubes', 'Powder Conversion', 'Ascension Speed', 'Global Speed', 'Ascension Score', 'Ant Sacrifice', 'Offering', 'Obtainium', 'Octeract', 'One Mind']\r\nconst eventBuffName = ['Quarks', 'Golden Quarks', 'Cubes from all type', 'Powder Conversion', 'Ascension Speed', 'Global Speed', 'Ascension Score', 'Ant Sacrifice rewards', 'Offering', 'Obtainium', 'Eight Dimensional Hypercubes', 'One Mind Quark Bonus']\r\n\r\nexport const calculateEventSourceBuff = (buff: string): number => {\r\n  const event = getEvent()\r\n  switch (buff) {\r\n    case 'Quarks': return event.buffs.quark ?? 0\r\n    case 'Golden Quarks': return event.buffs.goldenQuark ?? 0\r\n    case 'Cubes': return event.buffs.cubes ?? 0\r\n    case 'Powder Conversion': return event.buffs.powderConversion ?? 0\r\n    case 'Ascension Speed': return event.buffs.ascensionSpeed ?? 0\r\n    case 'Global Speed': return event.buffs.globalSpeed ?? 0\r\n    case 'Ascension Score': return event.buffs.ascensionScore ?? 0\r\n    case 'Ant Sacrifice': return event.buffs.antSacrifice ?? 0\r\n    case 'Offering': return event.buffs.offering ?? 0\r\n    case 'Obtainium': return event.buffs.obtainium ?? 0\r\n    case 'Octeract': return event.buffs.octeract ?? 0\r\n    case 'One Mind': return (player.singularityUpgrades.oneMind.level > 0) ? event.buffs.oneMind ?? 0 : 0\r\n    default: return 0\r\n  }\r\n}\r\n\r\nexport const clickSmith = (): Promise<void> => {\r\n  G.eventClicked = true\r\n  DOMCacheGetOrSet('eventClicked').style.display = 'block'\r\n  return Alert(i18next.t('event.aprilFools.clicked'))\r\n}\r\n", "import { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { player } from './Synergism'\r\nimport {\r\n  toggleBuildingScreen,\r\n  toggleRuneScreen,\r\n  toggleCubeSubTab,\r\n  toggleCorruptionLoadoutsStats,\r\n  toggleSingularityScreen,\r\n  setActiveSettingScreen\r\n} from './Toggles'\r\nimport { revealStuff, hideStuff } from './UpdateHTML'\r\nimport { assert, limitRange } from './Utility'\r\nimport { Globals as G } from './Variables'\r\n\r\nexport type TabNames = 'settings' | 'shop' | 'buildings' | 'upgrades' | 'achievements' | 'runes' | 'challenge' | 'research' | 'ant' | 'cube' | 'traits' | 'singularity' | 'event'\r\n\r\n/**\r\n * If step is provided, move the page back/forward {step} pages.\r\n * If page is provided, change the subtab to {page}\r\n */\r\ntype SubTabSwitchOptions = { step: number, page?: undefined } | { page: number, step?: undefined }\r\n\r\ninterface SubTab {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  tabSwitcher?: ((...args: any[]) => any)\r\n  subTabList: {\r\n      subTabID: string | number | boolean\r\n      unlocked: boolean\r\n      buttonID?: string\r\n  }[]\r\n}\r\n\r\nconst subtabInfo: Record<TabNames, SubTab> = {\r\n  settings: {\r\n    tabSwitcher: (...args: Parameters<typeof setActiveSettingScreen>) => setActiveSettingScreen(...args),\r\n    subTabList: [\r\n      { subTabID: 'settingsubtab', unlocked: true },\r\n      { subTabID: 'languagesubtab', unlocked: true },\r\n      { subTabID: 'creditssubtab', unlocked: true },\r\n      { subTabID: 'statisticsSubTab', unlocked: true },\r\n      { subTabID: 'resetHistorySubTab', get unlocked () {\r\n        return player.unlocks.prestige\r\n      } },\r\n      { subTabID: 'ascendHistorySubTab', get unlocked () {\r\n        return player.ascensionCount > 0\r\n      } },\r\n      { subTabID: 'singularityHistorySubTab', get unlocked () {\r\n        return player.highestSingularityCount > 0\r\n      }\r\n      },\r\n      { subTabID: 'hotkeys', unlocked: true }\r\n    ]\r\n  },\r\n  shop: { subTabList: [] },\r\n  buildings: {\r\n    tabSwitcher: (...args: Parameters<typeof toggleBuildingScreen>) => toggleBuildingScreen(...args),\r\n    subTabList: [\r\n      { subTabID: 'coin', unlocked: true, buttonID: 'switchToCoinBuilding' },\r\n      { subTabID: 'diamond', get unlocked () {\r\n        return player.unlocks.prestige\r\n      }, buttonID: 'switchToDiamondBuilding' },\r\n      { subTabID: 'mythos', get unlocked () {\r\n        return player.unlocks.transcend\r\n      }, buttonID: 'switchToMythosBuilding' },\r\n      { subTabID: 'particle', get unlocked () {\r\n        return player.unlocks.reincarnate\r\n      }, buttonID: 'switchToParticleBuilding' },\r\n      { subTabID: 'tesseract', get unlocked () {\r\n        return player.achievements[183] > 0\r\n      }, buttonID: 'switchToTesseractBuilding' }]\r\n  },\r\n  upgrades: { subTabList: [] },\r\n  achievements: { subTabList: [] },\r\n  runes: {\r\n    tabSwitcher: (...args: Parameters<typeof toggleRuneScreen>) => toggleRuneScreen(...args),\r\n    subTabList: [\r\n      { subTabID: 1, get unlocked () {\r\n        return player.unlocks.prestige\r\n      }, buttonID: 'toggleRuneSubTab1' },\r\n      { subTabID: 2, get unlocked () {\r\n        return player.achievements[134] > 0\r\n      }, buttonID: 'toggleRuneSubTab2' },\r\n      { subTabID: 3, get unlocked () {\r\n        return player.achievements[134] > 0\r\n      }, buttonID: 'toggleRuneSubTab3' },\r\n      { subTabID: 4, get unlocked () {\r\n        return player.achievements[204] > 0\r\n      }, buttonID: 'toggleRuneSubTab4' }]\r\n  },\r\n  challenge: { subTabList: [] },\r\n  research: { subTabList: [] },\r\n  ant: { subTabList: [] },\r\n  cube: {\r\n    tabSwitcher: (...args: Parameters<typeof toggleCubeSubTab>) => toggleCubeSubTab(...args),\r\n    subTabList: [\r\n      { subTabID: 1, get unlocked () {\r\n        return player.achievements[141] > 0\r\n      }, buttonID: 'switchCubeSubTab1' },\r\n      { subTabID: 2, get unlocked () {\r\n        return player.achievements[197] > 0\r\n      }, buttonID: 'switchCubeSubTab2' },\r\n      { subTabID: 3, get unlocked () {\r\n        return player.achievements[211] > 0\r\n      }, buttonID: 'switchCubeSubTab3' },\r\n      { subTabID: 4, get unlocked () {\r\n        return player.achievements[218] > 0\r\n      }, buttonID: 'switchCubeSubTab4' },\r\n      { subTabID: 5, get unlocked () {\r\n        return player.achievements[141] > 0\r\n      }, buttonID: 'switchCubeSubTab5' },\r\n      { subTabID: 6, get unlocked () {\r\n        return player.achievements[218] > 0\r\n      }, buttonID: 'switchCubeSubTab6' },\r\n      { subTabID: 7, get unlocked () {\r\n        return player.challenge15Exponent >= 1e15\r\n      }, buttonID: 'switchCubeSubTab7' }]\r\n  },\r\n  traits: {\r\n    tabSwitcher: (...args: Parameters<typeof toggleCorruptionLoadoutsStats>) => toggleCorruptionLoadoutsStats(...args),\r\n    subTabList: [\r\n      { subTabID: true, get unlocked () {\r\n        return player.achievements[141] > 0\r\n      }, buttonID: 'corrStatsBtn' },\r\n      { subTabID: false, get unlocked () {\r\n        return player.achievements[141] > 0\r\n      }, buttonID: 'corrLoadoutsBtn' }]\r\n  },\r\n  singularity: {\r\n    tabSwitcher: (...args: Parameters<typeof toggleSingularityScreen>) => toggleSingularityScreen(...args),\r\n    subTabList: [\r\n      { subTabID: 1, get unlocked () {\r\n        return player.highestSingularityCount > 0\r\n      }, buttonID: 'toggleSingularitySubTab1' },\r\n      { subTabID: 2, get unlocked () {\r\n        return player.highestSingularityCount > 0\r\n      }, buttonID: 'toggleSingularitySubTab2' },\r\n      { subTabID: 3, get unlocked () {\r\n        return player.highestSingularityCount > 0\r\n      }, buttonID: 'toggleSingularitySubTab3' },\r\n      { subTabID: 4, get unlocked () {\r\n        return Boolean(player.singularityUpgrades.octeractUnlock.getEffect().bonus)\r\n      }, buttonID: 'toggleSingularitySubTab4' },\r\n      { subTabID: 5, get unlocked () {\r\n        return player.highestSingularityCount >= 25\r\n      }, buttonID: 'toggleSingularitySubTab5' }]\r\n  },\r\n  event: { subTabList: [] }\r\n}\r\n\r\nconst tabsInfo: Record<TabNames, () => boolean> = {\r\n  settings: () => true,\r\n  shop: () => player.unlocks.reincarnate || player.highestSingularityCount > 0,\r\n  buildings: () => true,\r\n  upgrades: () => true,\r\n  achievements: () => player.unlocks.coinfour,\r\n  runes: () => player.unlocks.prestige,\r\n  challenge: () => player.unlocks.transcend,\r\n  research: () => player.unlocks.reincarnate,\r\n  ant: () => player.achievements[127] > 0,\r\n  cube: () => player.achievements[141] > 0,\r\n  traits: () => player.challengecompletions[11] > 0,\r\n  singularity: () => player.highestSingularityCount > 0,\r\n  event: () => G.isEvent\r\n} as const\r\n\r\nexport class Tab {\r\n  name: TabNames\r\n\r\n  constructor (element: HTMLElement) {\r\n    this.name = element.id.split('tab')[0] as TabNames\r\n\r\n    assert(element.id.endsWith('tab'))\r\n    assert(this.name in tabsInfo && this.name in subtabInfo)\r\n  }\r\n\r\n  get subtabs () {\r\n    return subtabInfo[this.name]\r\n  }\r\n\r\n  get unlocked () {\r\n    return tabsInfo[this.name]()\r\n  }\r\n}\r\n\r\n/**\r\n * Map each tab by its \"index\" (place in the nav row)\r\n */\r\nexport const tabs = new Map(\r\n  Array.from(document.querySelectorAll<HTMLElement>('#tabrow > button')).map((tab, index) => {\r\n    return [index + 1, new Tab(tab)]\r\n  })\r\n)\r\n\r\n/**\r\n * @param step 1 to go forward; -1 to go back\r\n * @param changeSubtab true to change the subtab, false to change the main tabs\r\n */\r\nexport const keyboardTabChange = (step: 1 | -1 = 1, changeSubtab = false) => {\r\n  if (!changeSubtab) {\r\n    player.tabnumber = limitRange(player.tabnumber + step, 1, tabs.size)\r\n  }\r\n\r\n  let tab = tabs.get(player.tabnumber)\r\n\r\n  while (!tab?.unlocked) {\r\n    player.tabnumber = limitRange(player.tabnumber + step, 1, tabs.size)\r\n    tab = tabs.get(player.tabnumber)!\r\n  }\r\n\r\n  if (changeSubtab) {\r\n    changeSubTab(tab, { step })\r\n  }\r\n\r\n  changeTab(tab)\r\n}\r\n\r\nexport const changeTab = (tabOrName: Tab | TabNames) => {\r\n  const [index, tab] = [...tabs.entries()]\r\n    .find(([, tab]) => tab.name === tabOrName || tab === tabOrName)!\r\n\r\n  G.currentTab = tab.name\r\n  player.tabnumber = index\r\n\r\n  revealStuff()\r\n  hideStuff()\r\n\r\n  ;(document.activeElement as HTMLElement | null)?.blur()\r\n\r\n  const subTabList = subtabInfo[G.currentTab].subTabList\r\n  if (tab.name !== 'settings') {\r\n    for (let i = 0; i < subTabList.length; i++) {\r\n      const id = subTabList[i].buttonID\r\n      if (id) {\r\n        const button = DOMCacheGetOrSet(id)\r\n\r\n        if (button.style.backgroundColor === 'crimson') { // handles every tab except settings and corruptions\r\n          player.subtabNumber = i\r\n          break\r\n        }\r\n        // what in the shit is this?!\r\n        if (player.tabnumber === 9 && button.style.borderColor === 'dodgerblue') { // handle corruption tab\r\n          player.subtabNumber = i\r\n          break\r\n        }\r\n      }\r\n    }\r\n  } else { // handle settings tab\r\n    // The first getElementById makes sure that it still works if other tabs start using the subtabSwitcher class\r\n    const btns = document.querySelectorAll('[id^=\"switchSettingSubTab\"]')\r\n    for (let i = 0; i < btns.length; i++) {\r\n      if (btns[i].classList.contains('buttonActive')) {\r\n        player.subtabNumber = i\r\n        break\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const changeSubTab = (tabOrName: Tab | TabNames, { page, step }: SubTabSwitchOptions) => {\r\n  const tab = typeof tabOrName === 'string'\r\n    ? [...tabs.values()].find(tab => tab.name === tabOrName)\r\n    : tabOrName\r\n\r\n  assert(tab)\r\n  const subTabs = tab.subtabs\r\n\r\n  if (!tab.unlocked || subTabs.subTabList.length === 0) {\r\n    return\r\n  }\r\n\r\n  if (page !== undefined) {\r\n    player.subtabNumber = limitRange(page, 0, subTabs.subTabList.length - 1)\r\n  } else {\r\n    player.subtabNumber = limitRange(player.subtabNumber + step, 0, subTabs.subTabList.length - 1)\r\n  }\r\n  const subTabList = subTabs.subTabList[player.subtabNumber]\r\n\r\n  if (G.currentTab === 'settings') {\r\n    // The first getElementById makes sure that it still works if other tabs start using the subtabSwitcher class\r\n    const btn = DOMCacheGetOrSet('settings').getElementsByClassName('subtabSwitcher')[0].children[player.subtabNumber]\r\n    if (subTabList.unlocked) {\r\n      subTabs.tabSwitcher?.(subTabList.subTabID, btn)\r\n    }\r\n  } else if (subTabList.unlocked) {\r\n    subTabs.tabSwitcher?.(subTabList.subTabID)\r\n  }\r\n}\r\n\r\nexport function subTabsInMainTab (name: TabNames) {\r\n  const tab = [...tabs.values()].find(tab => tab.name === name)\r\n  assert(tab)\r\n\r\n  return tab.subtabs.subTabList.length\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { calculateCubeBlessings, calculateCubicSumData, calculateSummationNonLinear } from './Calculate'\r\nimport { upgradeupdate } from './Upgrades'\r\nimport { revealStuff } from './UpdateHTML'\r\nimport { Globals as G } from './Variables'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { updateResearchBG } from './Research'\r\nimport { calculateSingularityDebuff } from './singularity'\r\nimport i18next from 'i18next'\r\n\r\nexport interface IMultiBuy {\r\n    levelCanBuy: number\r\n    cost: number\r\n}\r\n\r\nconst cubeAutomationIndices = [4, 5, 6, 7, 8, 9, 10, // row 1\r\n  20,                   // row 2\r\n  26, 27,               // row 3\r\n  48, 49]               // row 5\r\n\r\nconst researchAutomationIndices = [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, // row 2\r\n  61, 71, 72, 73, 74, 75, // row 3\r\n  124,                    // row 5\r\n  130, 135, 145, 150,     // row 6\r\n  175,                    // row 7\r\n  190]                    // row 8\r\n\r\nconst cubeBaseCost = [\r\n  200, 200, 200, 500, 500, 500, 500, 500, 2000, 40000,\r\n  5000, 1000, 10000, 20000, 40000, 10000, 4000, 1e4, 50000, 12500,\r\n  5e4, 3e4, 3e4, 4e4, 2e5, 4e5, 1e5, 177777, 1e5, 1e6,\r\n  5e5, 3e5, 2e6, 4e6, 2e6, 4e6, 1e6, 2e7, 5e7, 1e7,\r\n  5e6, 1e7, 1e8, 4e7, 2e7, 4e7, 5e7, 1e8, 5e8, 1e8,\r\n  1, 1e4, 1e8, 1e12, 1e16, 10, 1e5, 1e9, 1e13, 1e17,\r\n  1e2, 1e6, 1e10, 1e14, 1e18, 1e20, 1e30, 1e40, 1e50, 1e60\r\n]\r\n\r\nexport const cubeMaxLevel = [\r\n  3, 10, 5, 1, 1, 1, 1, 1, 1, 1,\r\n  3, 10, 1, 10, 10, 10, 5, 1, 1, 1,\r\n  5, 10, 1, 10, 10, 10, 1, 1, 5, 1,\r\n  5, 1, 1, 10, 10, 10, 10, 1, 1, 10,\r\n  5, 10, 10, 10, 10, 20, 20, 1, 1, 100000,\r\n  1, 900, 100, 900, 900, 20, 1, 1, 400, 10000,\r\n  100, 1, 1, 1, 1, 1, 1, 1000, 1, 100000\r\n]\r\n\r\nconst getCubeCost = (i: number, buyMax: boolean): IMultiBuy => {\r\n  const linGrowth = (i === 50 ? 0.01 : 0)\r\n  const cubic = i > 50\r\n  const maxLevel = getCubeMax(i)\r\n  let amountToBuy = buyMax ? 1e5: 1\r\n  const cubeUpgrade = player.cubeUpgrades[i]!\r\n  amountToBuy = Math.min(maxLevel - cubeUpgrade, amountToBuy)\r\n  const singularityMultiplier = (i <= 50) ? calculateSingularityDebuff('Cube Upgrades'): 1\r\n\r\n  let metaData:IMultiBuy\r\n\r\n  if (cubic) {\r\n    // TODO: Fix this inconsistency later.\r\n    amountToBuy = buyMax ? maxLevel: Math.min(maxLevel, cubeUpgrade + 1)\r\n    metaData = calculateCubicSumData(cubeUpgrade, cubeBaseCost[i-1],\r\n      Number(player.wowCubes), amountToBuy)\r\n  } else {\r\n    metaData = calculateSummationNonLinear(cubeUpgrade,\r\n      cubeBaseCost[i-1] * singularityMultiplier,\r\n      Number(player.wowCubes), linGrowth, amountToBuy)\r\n  }\r\n\r\n  return metaData\r\n}\r\n\r\nconst getCubeMax = (i: number) => {\r\n  let baseValue = cubeMaxLevel[i-1]\r\n\r\n  if (player.cubeUpgrades[57] > 0 && i < 50 && i % 10 === 1) {\r\n    baseValue += 1\r\n  }\r\n\r\n  return baseValue\r\n}\r\n\r\nexport const cubeUpgradeDesc = (i: number, buyMax = player.cubeUpgradesBuyMaxToggle) => {\r\n  const metaData = getCubeCost(i, buyMax)\r\n  const a = DOMCacheGetOrSet('cubeUpgradeName')\r\n  const b = DOMCacheGetOrSet('cubeUpgradeDescription')\r\n  const c = DOMCacheGetOrSet('cubeUpgradeCost')\r\n  const d = DOMCacheGetOrSet('cubeUpgradeLevel')\r\n  const maxLevel = getCubeMax(i)\r\n\r\n  a.textContent = i18next.t(`cubes.upgradeNames.${i}`)\r\n  b.textContent = i18next.t(`cubes.upgradeDescriptions.${i}`)\r\n  c.textContent = i18next.t('cubes.cubeMetadata.cost', { value1: format(metaData.cost, 0, true), value2: format(metaData.levelCanBuy-player.cubeUpgrades[i]!, 0, true) })\r\n  c.style.color = 'var(--green-text-color)'\r\n  d.textContent = i18next.t('cubes.cubeMetadata.level', { value1: format(player.cubeUpgrades[i], 0, true), value2: format(maxLevel, 0, true) })\r\n  d.style.color = 'white'\r\n\r\n  // This conditional is true only in the case where you can buy zero levels.\r\n  if (Number(player.wowCubes) < metaData.cost) {\r\n    c.style.color = 'var(--crimson-text-color)'\r\n  }\r\n  if (player.cubeUpgrades[i] === maxLevel) {\r\n    c.style.color = 'gold'\r\n    c.textContent = i18next.t('cubes.cubeMetadata.maxLevel')\r\n    d.style.color = 'plum'\r\n  }\r\n}\r\n\r\nexport const updateCubeUpgradeBG = (i: number) => {\r\n  const a = DOMCacheGetOrSet(`cubeUpg${i}`)\r\n  const maxCubeLevel = getCubeMax(i)\r\n  const cubeUpgrade = player.cubeUpgrades[i]!\r\n  if (cubeUpgrade > maxCubeLevel) {\r\n    player.wowCubes.add((cubeUpgrade - maxCubeLevel) * cubeBaseCost[i-1])\r\n    player.cubeUpgrades[i] = maxCubeLevel\r\n  }\r\n  if (player.cubeUpgrades[i] === 0) {\r\n    a.style.backgroundColor = ''\r\n  }\r\n  if (cubeUpgrade > 0 && cubeUpgrade < maxCubeLevel) {\r\n    a.style.backgroundColor = 'purple'\r\n  }\r\n  if (player.cubeUpgrades[i] === maxCubeLevel) {\r\n    a.style.backgroundColor = 'green'\r\n  }\r\n\r\n}\r\n\r\nexport const awardAutosCookieUpgrade = () => {\r\n  for (const i of cubeAutomationIndices) {\r\n    const maxLevel = getCubeMax(i)\r\n    player.cubeUpgrades[i] = maxLevel\r\n    updateCubeUpgradeBG(i)\r\n  }\r\n\r\n  calculateCubeBlessings()\r\n\r\n  for (const i of researchAutomationIndices) {\r\n    player.researches[i] = G.researchMaxLevels[i]\r\n    updateResearchBG(i)\r\n  }\r\n}\r\n\r\nexport const buyCubeUpgrades = (i: number, buyMax = player.cubeUpgradesBuyMaxToggle, auto = false) => {\r\n  // Actually lock for HTML exploit\r\n  if ((i > 50 && i <= 55 && !player.singularityUpgrades.cookies.getEffect().bonus) ||\r\n        (i > 55 && i <= 60 && !player.singularityUpgrades.cookies2.getEffect().bonus) ||\r\n        (i > 60 && i <= 65 && !player.singularityUpgrades.cookies3.getEffect().bonus) ||\r\n        (i > 65 && i <= 70 && !player.singularityUpgrades.cookies4.getEffect().bonus) ||\r\n        (i > 70 && !player.singularityUpgrades.cookies5.getEffect().bonus)) {\r\n    return\r\n  }\r\n\r\n  const metaData = getCubeCost(i, buyMax)\r\n  const maxLevel = getCubeMax(i)\r\n  if (Number(player.wowCubes) >= metaData.cost && player.cubeUpgrades[i]! < maxLevel) {\r\n    player.wowCubes.sub(100 / 100 * metaData.cost)\r\n    player.cubeUpgrades[i] = metaData.levelCanBuy\r\n  } else {\r\n    return\r\n  }\r\n\r\n  if (i === 4 && player.cubeUpgrades[4] > 0) {\r\n    for (let j = 94; j <= 98; j++) {\r\n      player.upgrades[j] = 1\r\n      upgradeupdate(j, true)\r\n    }\r\n  }\r\n  if (i === 5 && player.cubeUpgrades[5] > 0) {\r\n    player.upgrades[99] = 1\r\n    upgradeupdate(99, true)\r\n  }\r\n  if (i === 6 && player.cubeUpgrades[6] > 0) {\r\n    player.upgrades[100] = 1\r\n    upgradeupdate(100, true)\r\n  }\r\n\r\n  if (i === 51 && player.cubeUpgrades[51] > 0) {\r\n    awardAutosCookieUpgrade()\r\n  }\r\n\r\n  if (i === 57 && player.cubeUpgrades[57] > 0) {\r\n    for (let j = 1; j < player.cubeUpgrades.length; j++) {\r\n      updateCubeUpgradeBG(j)\r\n    }\r\n  }\r\n\r\n  if (!auto) {\r\n    cubeUpgradeDesc(i)\r\n    revealStuff()\r\n    calculateCubeBlessings()\r\n  }\r\n  updateCubeUpgradeBG(i)\r\n}\r\n\r\nexport const autoBuyCubeUpgrades = () => {\r\n  if (player.autoCubeUpgradesToggle && ((player.highestSingularityCount >= 50 && player.insideSingularityChallenge) || player.highestSingularityCount >= 150)) {\r\n    const cheapet = []\r\n\r\n    for (let i = 1; i < player.cubeUpgrades.length; i++) {\r\n      const maxLevel = getCubeMax(i)\r\n      if (player.cubeUpgrades[i]! < maxLevel) {\r\n        const metaData = getCubeCost(i, true)\r\n        cheapet.push([i, metaData.cost, metaData.levelCanBuy])\r\n      }\r\n    }\r\n\r\n    if (cheapet.length > 0) {\r\n      let update = false\r\n\r\n      cheapet.sort((a, b) => {\r\n        return a[1] - b[1]\r\n      })\r\n\r\n      for (const value of cheapet) {\r\n        const maxLevel = getCubeMax(value[0])\r\n        const metaData = getCubeCost(value[0], true)\r\n        if (Number(player.wowCubes) >= metaData.cost && player.cubeUpgrades[value[0]]! < maxLevel && (player.cubeUpgradesBuyMaxToggle || maxLevel === metaData.levelCanBuy)) {\r\n          buyCubeUpgrades(value[0], true, true)\r\n          update = true\r\n        }\r\n      }\r\n\r\n      if (update) {\r\n        revealStuff()\r\n        calculateCubeBlessings()\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { player, format } from './Synergism'\r\nimport { Synergism } from './Events'\r\nimport { Alert, revealStuff } from './UpdateHTML'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { calculateSingularityDebuff } from './singularity'\r\n\r\nconst platonicUpgradeDesc = [\r\n  '+0.0090% Cubes per Corruption level per level!',\r\n  '+0.018% Tesseracts per Corruption level per level!',\r\n  '+0.054% Hypercubes per Corruption level per level!',\r\n  'Gain +2.4% Platonic Cubes per level! It is that simple.',\r\n  'C10 Exponent: 1.035 --> 1.0375, Constant tax exponent +0.10, 2x faster Constant production, +20% Quarks, +10 Reincarnation Challenge Cap, +5 Ascension Challenge Cap, 2x Obtainium and Offerings, ^1.10 coin gain in C15, as well +1 Corruption Cap Level!',\r\n  'Multiplies Viscosity exponent by (1 + level/30), capacity of ^1 on Multipliers and Accelerators.',\r\n  'Raises speed below 1x to the power of ^(1 - level/30).',\r\n  'Divides Hyperchallenged by (1 + 0.4 * level), with a minimum 1x Challenge requirement multiplier!',\r\n  'Raise Obtainium to the power of (1+(0.09*log10(Obtainium owned))) and add another x2.5 multiplier (Uncorruptable), up until 1e100 Obtainium!',\r\n  'C10 Exponent: 1.0375 --> 1.04, Constant tax exponent +0.20, 10x faster Constant production, +25% Quarks, +10 Reincarnation Challenge Cap, +5 Ascension Challenge Cap, 3.5x Obtainium and Offerings, 2x All Cubes, ^1.25 ant exponent in C15, +1 Corruption Cap Level again!',\r\n  'With this upgrade, you will gain diamonds equal to particle gain on Reincarnation while using Market Deflation 11 or higher! Does not work with Cube upgrade [3x8]!',\r\n  'Gain (1 + lvl/100)x Ant multiplier per Challenge completion, ignoring corruptions to Ants.',\r\n  'Effect of Drought is raised to the power of 0.5.',\r\n  'Reduce the effect of Financial Recession in Challenge 15, multiplying the coin exponent by 1.55.',\r\n  'You begin to find the start of the abyss. Coin Exponent +0.10 in Challenge 15, Challenge 15 Score +25%, Ascension Speed +0.2% per Corruption Level (Max: 20%), +1% all Cube types per C9 Completion (Multiplicative), +30% Quarks, 1e250x Tesseract Building Multiplier, 2x Ascension Count, +30 Reincarnation Challenge Cap, +20 Ascension Challenge Cap, 6x Offerings and Obtainium (Uncorruptable)! Talk about a deep dive.',\r\n  'Increase powder conversion rate by 1% per level, gain +2% Ascension count per level and gain up to 2% more Ascension count per level based on powder, up to 100,000. This will also multiply Tesseract Building production by (Powder + 1)^(10 * level), uncapped.',\r\n  'If Viscosity Corruption is set to level 10 or higher, score multiplier is raised by an exponent. That exponent is 3 + 0.04 per level of this upgrade.',\r\n  'Raise the base percentage of Constant Upgrade 1 by 0.1% and increase the base percentage cap of Constant Upgrade 2 by 0.3% per level!',\r\n  'The diminishing return power on Chronos Hepteract changes from 0.166 to (0.166 + 0.00133 * level) [Max of 0.2333].',\r\n  'You know, maybe some things should be left unbought.'\r\n]\r\n\r\nexport interface IPlatBaseCost {\r\n    obtainium: number\r\n    offerings: number\r\n    cubes: number\r\n    tesseracts: number\r\n    hypercubes: number\r\n    platonics: number\r\n    abyssals: number\r\n    maxLevel: number\r\n    priceMult?: number\r\n}\r\n\r\nexport const platUpgradeBaseCosts: Record<number, IPlatBaseCost> = {\r\n  1: {\r\n    obtainium: 1e70,\r\n    offerings: 1e45,\r\n    cubes: 1e13,\r\n    tesseracts: 1e6,\r\n    hypercubes: 1e5,\r\n    platonics: 1e4,\r\n    abyssals: 0,\r\n    maxLevel: 250,\r\n    priceMult: 2\r\n  },\r\n  2: {\r\n    obtainium: 3e70,\r\n    offerings: 2e45,\r\n    cubes: 1e11,\r\n    tesseracts: 1e8,\r\n    hypercubes: 1e5,\r\n    platonics: 1e4,\r\n    abyssals: 0,\r\n    maxLevel: 250,\r\n    priceMult: 2\r\n  },\r\n  3: {\r\n    obtainium: 1e71,\r\n    offerings: 4e45,\r\n    cubes: 1e11,\r\n    tesseracts: 1e6,\r\n    hypercubes: 1e7,\r\n    platonics: 1e4,\r\n    abyssals: 0,\r\n    maxLevel: 250,\r\n    priceMult: 2\r\n  },\r\n  4: {\r\n    obtainium: 4e71,\r\n    offerings: 1e46,\r\n    cubes: 1e12,\r\n    tesseracts: 1e7,\r\n    hypercubes: 1e6,\r\n    platonics: 1e6,\r\n    abyssals: 0,\r\n    maxLevel: 250,\r\n    priceMult: 2\r\n  },\r\n  5: {\r\n    obtainium: 1e80,\r\n    offerings: 1e60,\r\n    cubes: 1e14,\r\n    tesseracts: 1e9,\r\n    hypercubes: 1e8,\r\n    platonics: 1e7,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  6: {\r\n    obtainium: 1e82,\r\n    offerings: 1e61,\r\n    cubes: 1e15,\r\n    tesseracts: 1e9,\r\n    hypercubes: 1e8,\r\n    platonics: 1e7,\r\n    abyssals: 0,\r\n    maxLevel: 10\r\n  },\r\n  7: {\r\n    obtainium: 1e84,\r\n    offerings: 3e62,\r\n    cubes: 2e15,\r\n    tesseracts: 2e9,\r\n    hypercubes: 2e8,\r\n    platonics: 1.5e7,\r\n    abyssals: 0,\r\n    maxLevel: 15\r\n  },\r\n  8: {\r\n    obtainium: 1e87,\r\n    offerings: 1e64,\r\n    cubes: 4e15,\r\n    tesseracts: 4e9,\r\n    hypercubes: 4e8,\r\n    platonics: 3e7,\r\n    abyssals: 0,\r\n    maxLevel: 5\r\n  },\r\n  9: {\r\n    obtainium: 1e90,\r\n    offerings: 1e66,\r\n    cubes: 1e16,\r\n    tesseracts: 1e10,\r\n    hypercubes: 1e9,\r\n    platonics: 5e7,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  10: {\r\n    obtainium: 1e93,\r\n    offerings: 1e68,\r\n    cubes: 1e18,\r\n    tesseracts: 1e12,\r\n    hypercubes: 1e11,\r\n    platonics: 1e9,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  11: {\r\n    obtainium: 2e96,\r\n    offerings: 1e70,\r\n    cubes: 2e17,\r\n    tesseracts: 2e11,\r\n    hypercubes: 2e10,\r\n    platonics: 2e8,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  12: {\r\n    obtainium: 1e100,\r\n    offerings: 1e72,\r\n    cubes: 1e18,\r\n    tesseracts: 1e12,\r\n    hypercubes: 1e11,\r\n    platonics: 1e9,\r\n    abyssals: 0,\r\n    maxLevel: 10\r\n  },\r\n  13: {\r\n    obtainium: 2e104,\r\n    offerings: 1e74,\r\n    cubes: 2e19,\r\n    tesseracts: 4e12,\r\n    hypercubes: 4e11,\r\n    platonics: 4e9,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  14: {\r\n    obtainium: 1e108,\r\n    offerings: 1e77,\r\n    cubes: 4e20,\r\n    tesseracts: 1e13,\r\n    hypercubes: 1e12,\r\n    platonics: 1e10,\r\n    abyssals: 0,\r\n    maxLevel: 1\r\n  },\r\n  15: {\r\n    obtainium: 1e115,\r\n    offerings: 1e80,\r\n    cubes: 1e23,\r\n    tesseracts: 1e15,\r\n    hypercubes: 1e14,\r\n    platonics: 1e12,\r\n    abyssals: 1,\r\n    maxLevel: 1\r\n  },\r\n  16: {\r\n    obtainium: 1e140,\r\n    offerings: 1e110,\r\n    cubes: 0,\r\n    tesseracts: 0,\r\n    hypercubes: 2.5e15,\r\n    platonics: 0,\r\n    abyssals: 0,\r\n    maxLevel: 100,\r\n    priceMult: 10\r\n  },\r\n  17: {\r\n    obtainium: 1e145,\r\n    offerings: 1e113,\r\n    cubes: 0,\r\n    tesseracts: 0,\r\n    hypercubes: 1e19,\r\n    platonics: 0,\r\n    abyssals: 2,\r\n    maxLevel: 20,\r\n    priceMult: 10\r\n  },\r\n  18: {\r\n    obtainium: 1e150,\r\n    offerings: 1e116,\r\n    cubes: 0,\r\n    tesseracts: 0,\r\n    hypercubes: 1e19,\r\n    platonics: 0,\r\n    abyssals: 4,\r\n    maxLevel: 40,\r\n    priceMult: 500\r\n  },\r\n  19: {\r\n    obtainium: 1e160,\r\n    offerings: 1e121,\r\n    cubes: 0,\r\n    tesseracts: 0,\r\n    hypercubes: 1e21,\r\n    platonics: 0,\r\n    abyssals: 64,\r\n    maxLevel: 50,\r\n    priceMult: 200\r\n  },\r\n  20: {\r\n    obtainium: 1e180,\r\n    offerings: 1e130,\r\n    cubes: 1e45,\r\n    tesseracts: 1e28,\r\n    hypercubes: 1e25,\r\n    platonics: 1e25,\r\n    abyssals: Math.pow(2, 30) - 1,\r\n    maxLevel: 1\r\n  }\r\n}\r\n\r\nconst checkPlatonicUpgrade = (index: number, auto = false): Record<keyof (IPlatBaseCost & { canBuy: boolean }), boolean> => {\r\n  let checksum = 0\r\n  const resources = ['obtainium', 'offerings', 'cubes', 'tesseracts', 'hypercubes', 'platonics', 'abyssals'] as const\r\n  const resourceNames = ['researchPoints', 'runeshards', 'wowCubes', 'wowTesseracts', 'wowHypercubes', 'wowPlatonicCubes', 'wowAbyssals'] as const\r\n  const checks: Record<string, boolean> = {\r\n    obtainium: false,\r\n    offerings: false,\r\n    cubes: false,\r\n    tesseracts: false,\r\n    hypercubes: false,\r\n    platonics: false,\r\n    abyssals: false,\r\n    canBuy: false\r\n  }\r\n  let priceMultiplier = 1\r\n  if (platUpgradeBaseCosts[index].priceMult) {\r\n    priceMultiplier = Math.pow(platUpgradeBaseCosts[index].priceMult!, Math.pow(player.platonicUpgrades[index] / (platUpgradeBaseCosts[index].maxLevel - 1), 1.25))\r\n  }\r\n  priceMultiplier *= calculateSingularityDebuff('Platonic Costs')\r\n\r\n  for (let i = 0; i < resources.length - 1; i++) {\r\n    if (auto && (resources[i] === 'obtainium' || resources[i] === 'offerings')) {\r\n      checksum++\r\n      checks[resources[i]] = true\r\n    } else if (Math.floor(platUpgradeBaseCosts[index][resources[i]] * priceMultiplier) <= (player[resourceNames[i]] as number)) {\r\n      checksum++\r\n      checks[resources[i]] = true\r\n    }\r\n  }\r\n\r\n  if (player.hepteractCrafts.abyss.BAL >= Math.floor(platUpgradeBaseCosts[index].abyssals * priceMultiplier) || platUpgradeBaseCosts[index].abyssals === 0) {\r\n    checksum ++\r\n    checks.abyssals = true\r\n  }\r\n\r\n  if (checksum === resources.length && player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\r\n    checks.canBuy = true\r\n  }\r\n  return checks\r\n}\r\n\r\nexport const createPlatonicDescription = (index: number) => {\r\n  let maxLevelAppend = ''\r\n  if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\r\n    maxLevelAppend = ' [MAX]'\r\n  }\r\n  const resourceCheck = checkPlatonicUpgrade(index)\r\n\r\n  let priceMultiplier = 1\r\n  if (platUpgradeBaseCosts[index].priceMult) {\r\n    priceMultiplier = Math.pow(platUpgradeBaseCosts[index].priceMult!, Math.pow(player.platonicUpgrades[index] / (platUpgradeBaseCosts[index].maxLevel - 1), 1.25))\r\n  }\r\n  priceMultiplier *= calculateSingularityDebuff('Platonic Costs')\r\n\r\n  DOMCacheGetOrSet('platonicUpgradeDescription').textContent = platonicUpgradeDesc[index-1]\r\n  DOMCacheGetOrSet('platonicUpgradeLevel').textContent = 'Level: ' + format(player.platonicUpgrades[index]) + '/' + format(platUpgradeBaseCosts[index].maxLevel) + maxLevelAppend\r\n  DOMCacheGetOrSet('platonicOfferingCost').textContent = format(player.runeshards) + '/' + format(platUpgradeBaseCosts[index].offerings * priceMultiplier) + ' Offerings'\r\n  DOMCacheGetOrSet('platonicObtainiumCost').textContent = format(player.researchPoints) + '/' + format(platUpgradeBaseCosts[index].obtainium * priceMultiplier) + ' Obtainium'\r\n  DOMCacheGetOrSet('platonicCubeCost').textContent = format(player.wowCubes) + '/' + format(platUpgradeBaseCosts[index].cubes * priceMultiplier) + ' Wow! Cubes'\r\n  DOMCacheGetOrSet('platonicTesseractCost').textContent = format(player.wowTesseracts) + '/' + format(platUpgradeBaseCosts[index].tesseracts * priceMultiplier) + ' Wow! Tesseracts'\r\n  DOMCacheGetOrSet('platonicHypercubeCost').textContent = format(player.wowHypercubes) + '/' + format(platUpgradeBaseCosts[index].hypercubes * priceMultiplier) + ' Wow! Hypercubes'\r\n  DOMCacheGetOrSet('platonicPlatonicCost').textContent = format(player.wowPlatonicCubes) + '/' + format(platUpgradeBaseCosts[index].platonics * priceMultiplier) + ' Platonic! Cubes'\r\n  DOMCacheGetOrSet('platonicHepteractCost').textContent = format(player.hepteractCrafts.abyss.BAL) + '/' + format(Math.floor(platUpgradeBaseCosts[index].abyssals * priceMultiplier), 0, true) + ' Hepteracts of the Abyss'\r\n\r\n  resourceCheck.offerings ?\r\n    DOMCacheGetOrSet('platonicOfferingCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicOfferingCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.obtainium ?\r\n    DOMCacheGetOrSet('platonicObtainiumCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicObtainiumCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.cubes ?\r\n    DOMCacheGetOrSet('platonicCubeCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicCubeCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.tesseracts ?\r\n    DOMCacheGetOrSet('platonicTesseractCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicTesseractCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.hypercubes ?\r\n    DOMCacheGetOrSet('platonicHypercubeCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicHypercubeCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.platonics ?\r\n    DOMCacheGetOrSet('platonicPlatonicCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicPlatonicCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  resourceCheck.abyssals ?\r\n    DOMCacheGetOrSet('platonicHepteractCost').style.color = 'lime' :\r\n    DOMCacheGetOrSet('platonicHepteractCost').style.color = 'var(--crimson-text-color)'\r\n\r\n  if (player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\r\n    DOMCacheGetOrSet('platonicUpgradeLevel').style.color = 'cyan'\r\n    resourceCheck.canBuy ?\r\n      (DOMCacheGetOrSet('platonicCanBuy').style.color = 'gold', DOMCacheGetOrSet('platonicCanBuy').textContent = '===Affordable! Click to buy!===') :\r\n      (DOMCacheGetOrSet('platonicCanBuy').style.color = 'var(--crimson-text-color)', DOMCacheGetOrSet('platonicCanBuy').textContent = '===You cannot afford this!===')\r\n  }\r\n\r\n  if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\r\n    DOMCacheGetOrSet('platonicUpgradeLevel').style.color = 'gold'\r\n    DOMCacheGetOrSet('platonicCanBuy').style.color = 'var(--orchid-text-color)'\r\n    DOMCacheGetOrSet('platonicCanBuy').textContent = '===Maxed==='\r\n  }\r\n}\r\n\r\nexport const updatePlatonicUpgradeBG = (i: number) => {\r\n  const a = DOMCacheGetOrSet(`platUpg${i}`)\r\n\r\n  const maxLevel = platUpgradeBaseCosts[i].maxLevel\r\n  if (player.platonicUpgrades[i] === 0) {\r\n    a.style.backgroundColor = ''\r\n  } else if (player.platonicUpgrades[i] > 0 && player.platonicUpgrades[i] < maxLevel) {\r\n    a.style.backgroundColor = 'purple'\r\n  } else if (player.platonicUpgrades[i] === maxLevel) {\r\n    a.style.backgroundColor = 'green'\r\n  }\r\n\r\n}\r\n\r\nexport const buyPlatonicUpgrades = (index: number, auto = false) => {\r\n  while (index > 0) {\r\n    const resourceCheck = checkPlatonicUpgrade(index, auto)\r\n    let priceMultiplier = 1\r\n    if (platUpgradeBaseCosts[index].priceMult) {\r\n      priceMultiplier = Math.pow(platUpgradeBaseCosts[index].priceMult!, Math.pow(player.platonicUpgrades[index] / (platUpgradeBaseCosts[index].maxLevel - 1), 1.25))\r\n    }\r\n    priceMultiplier *= calculateSingularityDebuff('Platonic Costs')\r\n\r\n    if (resourceCheck.canBuy) {\r\n      player.platonicUpgrades[index] += 1\r\n      // Auto Platonic Upgrades no longer claim the cost of Offerings and Obtainiums\r\n      if (!auto) {\r\n        player.researchPoints -= Math.floor(platUpgradeBaseCosts[index].obtainium * priceMultiplier)\r\n        player.runeshards -= Math.floor(platUpgradeBaseCosts[index].offerings * priceMultiplier)\r\n      }\r\n      player.wowCubes.sub(Math.floor(platUpgradeBaseCosts[index].cubes * priceMultiplier))\r\n      player.wowTesseracts.sub(Math.floor(platUpgradeBaseCosts[index].tesseracts * priceMultiplier))\r\n      player.wowHypercubes.sub(Math.floor(platUpgradeBaseCosts[index].hypercubes * priceMultiplier))\r\n      player.wowPlatonicCubes.sub(Math.floor(platUpgradeBaseCosts[index].platonics * priceMultiplier))\r\n      player.hepteractCrafts.abyss.spend(Math.floor(platUpgradeBaseCosts[index].abyssals * priceMultiplier))\r\n\r\n      Synergism.emit('boughtPlatonicUpgrade', platUpgradeBaseCosts[index])\r\n      if (index === 20 && !auto && player.singularityCount === 0) {\r\n        void Alert('While I strongly recommended you not to buy this, you did it anyway. For that, you have unlocked the rune of Grandiloquence, for you are a richass.')\r\n      }\r\n    } else {\r\n      break\r\n    }\r\n\r\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel || player.singularityCount === 0) {\r\n      break\r\n    }\r\n  }\r\n  createPlatonicDescription(index)\r\n  updatePlatonicUpgradeBG(index)\r\n  revealStuff()\r\n}\r\n\r\nexport const autoBuyPlatonicUpgrades = () => {\r\n  if (player.autoPlatonicUpgradesToggle && ((player.highestSingularityCount >= 100 && player.insideSingularityChallenge) || player.highestSingularityCount >= 200)) {\r\n    for (let i = 1; i < player.platonicUpgrades.length; i++) {\r\n      if (player.platonicUpgrades[i] < platUpgradeBaseCosts[i].maxLevel) {\r\n        const resourceCheck = checkPlatonicUpgrade(i, true)\r\n        if (resourceCheck.canBuy) {\r\n          buyPlatonicUpgrades(i, true)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { player, format, blankSave, updateAll, saveSynergy } from './Synergism'\r\nimport {\r\n  calculateOfferings, CalcCorruptionStuff, calculateCubeBlessings, calculateRuneLevels,\r\n  calculateAnts, calculateObtainium, calculateTalismanEffects, calculateAntSacrificeELO,\r\n  calcAscensionCount, calculateGoldenQuarkGain, calculatePowderConversion } from './Calculate'\r\nimport { resetofferings } from './Runes'\r\nimport { updateTalismanInventory, updateTalismanAppearance } from './Talismans'\r\nimport { calculateTesseractBlessings } from './Tesseracts'\r\nimport { Alert, revealStuff, updateChallengeDisplay } from './UpdateHTML'\r\nimport { upgradeupdate } from './Upgrades'\r\nimport { Globals as G } from './Variables'\r\nimport Decimal from 'break_infinity.js'\r\nimport { getElementById } from './Utility'\r\nimport { achievementaward, ascensionAchievementCheck, challengeachievementcheck } from './Achievements'\r\nimport { buyResearch, updateResearchBG } from './Research'\r\nimport { calculateHypercubeBlessings } from './Hypercubes'\r\nimport type {\r\n  ResetHistoryEntryPrestige,\r\n  ResetHistoryEntryTranscend,\r\n  ResetHistoryEntryReincarnate,\r\n  ResetHistoryEntryAscend,\r\n  ResetHistoryEntrySingularity\r\n} from './History'\r\nimport { challengeRequirement } from './Challenges'\r\nimport { Synergism } from './Events'\r\nimport type { Player, resetNames, OneToFive } from './types/Synergism'\r\nimport { updateClassList } from './Utility'\r\nimport { corrChallengeMinimum, corruptionStatsUpdate, maxCorruptionLevel } from './Corruptions'\r\nimport { toggleAutoChallengeModeText } from './Toggles'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { WowCubes } from './CubeExperimental'\r\nimport { importSynergism } from './ImportExport'\r\nimport { resetShopUpgrades, shopData } from './Shop'\r\nimport { QuarkHandler } from './Quark'\r\nimport { calculateSingularityDebuff, getFastForwardTotalMultiplier } from './singularity'\r\nimport { updateCubeUpgradeBG, awardAutosCookieUpgrade, autoBuyCubeUpgrades } from './Cubes'\r\nimport { autoBuyPlatonicUpgrades, updatePlatonicUpgradeBG } from './Platonic'\r\nimport { calculateTessBuildingsInBudget, buyTesseractBuilding } from './Buy'\r\nimport { getAutoHepteractCrafts } from './Hepteracts'\r\nimport type { TesseractBuildings } from './Buy'\r\nimport { sumContents } from './Utility'\r\nimport { setInterval, clearInterval } from './Timers'\r\nimport { IconSets } from './Themes'\r\nimport { changeTab, changeSubTab } from './Tabs'\r\n\r\nlet repeatreset: ReturnType<typeof setTimeout>\r\n\r\nexport const resetrepeat = (input: resetNames) => {\r\n  clearInterval(repeatreset)\r\n  repeatreset = setInterval(() => resetdetails(input), 50)\r\n}\r\n\r\nexport const resetdetails = (input: resetNames) => {\r\n  DOMCacheGetOrSet('resetofferings1').style.display = 'block'\r\n\r\n  const transcensionChallenge = player.currentChallenge.transcension\r\n  const reincarnationChallenge = player.currentChallenge.reincarnation\r\n\r\n  const offering = calculateOfferings(input)\r\n  const offeringImage = getElementById<HTMLImageElement>('resetofferings1')\r\n  const offeringText = DOMCacheGetOrSet('resetofferings2')\r\n  const currencyImage1 = getElementById<HTMLImageElement>('resetcurrency1')\r\n  const resetObtainiumImage = DOMCacheGetOrSet('resetobtainium')\r\n  const resetObtainiumText = DOMCacheGetOrSet('resetobtainium2')\r\n  const resetInfo = DOMCacheGetOrSet('resetinfo')\r\n  const resetCurrencyGain = DOMCacheGetOrSet('resetcurrency2');\r\n\r\n  (input == 'reincarnation') ?\r\n    (resetObtainiumImage.style.display = 'block', resetObtainiumText.textContent = format(Math.floor(G.obtainiumGain))):\r\n    (resetObtainiumImage.style.display = 'none', resetObtainiumText.textContent = '');\r\n\r\n  (input == 'ascensionChallenge' || input == 'ascension' || input == 'singularity')?\r\n    offeringImage.style.display = offeringText.style.display = 'none':\r\n    offeringImage.style.display = offeringText.style.display = 'block'\r\n\r\n  switch (input) {\r\n    case 'prestige':\r\n      if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png')) {\r\n        currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png'\r\n      }\r\n      currencyImage1.style.display = 'block'\r\n      resetCurrencyGain.textContent = '+' + format(G.prestigePointGain)\r\n      resetInfo.textContent = 'Coins, Coin Producers, Coin Upgrades, and Crystals are reset, but in return you gain diamonds and a few Offerings. Required: ' + format(player.coinsThisPrestige) + '/1e16 Coins || TIME SPENT: ' + format(player.prestigecounter) + ' Seconds.'\r\n      resetInfo.style.color = 'turquoise'\r\n      break\r\n    case 'transcension':\r\n      if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Mythos.png')) {\r\n        currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Mythos.png'\r\n      }\r\n      currencyImage1.style.display = 'block'\r\n      resetCurrencyGain.textContent = '+' + format(G.transcendPointGain)\r\n      resetInfo.textContent = 'Reset all Coin and Diamond Upgrades/Features, Crystal Upgrades & Producers, for Mythos/Offerings. Required: ' + format(player.coinsThisTranscension) + '/1e100 Coins || TIME SPENT: ' + format(player.transcendcounter) + ' Seconds.'\r\n      resetInfo.style.color = 'var(--orchid-text-color)'\r\n      break\r\n    case 'reincarnation':\r\n      if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Particle.png')) {\r\n        currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Particle.png'\r\n      }\r\n      currencyImage1.style.display = 'block'\r\n      resetCurrencyGain.textContent = '+' + format(G.reincarnationPointGain)\r\n      resetInfo.textContent = 'Reset ALL previous reset tiers, but you will gain Particles, Obtainium and Offerings! Required: ' + format(player.transcendShards) + '/1e300 Mythos Shards || TIME SPENT: ' + format(player.reincarnationcounter) + ' Seconds.'\r\n      resetInfo.style.color = 'limegreen'\r\n      break\r\n    case 'acceleratorBoost':\r\n      if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png')) {\r\n        currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png'\r\n      }\r\n      currencyImage1.style.display = 'block'\r\n      resetCurrencyGain.textContent = '-' + format(player.acceleratorBoostCost)\r\n      resetInfo.textContent = 'Reset Coin Producers/Upgrades, Crystals and Diamonds in order to increase the power of your Accelerators. Required: ' + format(player.prestigePoints) + '/' + format(player.acceleratorBoostCost) + ' Diamonds.'\r\n      resetInfo.style.color = 'cyan'\r\n      break\r\n    case 'transcensionChallenge':\r\n      currencyImage1.style.display = 'none'\r\n      resetCurrencyGain.textContent = '';\r\n\r\n      (transcensionChallenge !== 0)? // TODO(@KhafraDev):\r\n        (resetInfo.style.color = 'aquamarine', resetInfo.textContent = `Are you tired of being in your Challenge or stuck? Click to leave Challenge ${transcensionChallenge}. Progress: ${format(player.coinsThisTranscension)}/${format(challengeRequirement(transcensionChallenge, player.challengecompletions[transcensionChallenge]))} Coins. TIME SPENT: ${format(player.transcendcounter)} Seconds.`):\r\n        (resetInfo.style.color = 'var(--crimson-text-color)', resetInfo.textContent = 'You\\'re not in a Transcension Challenge right now. Get in one before you can leave it, duh!')\r\n      break\r\n    case 'reincarnationChallenge':\r\n      currencyImage1.style.display = 'none'\r\n      resetCurrencyGain.textContent = ''\r\n\r\n      if (reincarnationChallenge !== 0) {\r\n        const goal = reincarnationChallenge >= 9 ? 'coins' : 'transcendShards'\r\n        const goaldesc = reincarnationChallenge >= 9 ? ' Coins' : ' Mythos Shards'\r\n\r\n        resetInfo.style.color = 'silver'\r\n        resetInfo.textContent = `Are you done or tired of being in your Challenge? Click to leave Challenge ${reincarnationChallenge}. Progress: ${format(player[goal])}/${format(challengeRequirement(reincarnationChallenge, player.challengecompletions[reincarnationChallenge], reincarnationChallenge))} ${goaldesc}. TIME SPENT: ${format(player.reincarnationcounter)} Seconds.`\r\n      } else {\r\n        resetInfo.style.color = 'var(--crimson-text-color)'\r\n        resetInfo.textContent = 'You\\'re not in a Reincarnation Challenge right now. How could you leave what you are not in?'\r\n      }\r\n      break\r\n    case 'ascensionChallenge':\r\n      currencyImage1.style.display = 'none'\r\n      resetCurrencyGain.textContent = ''\r\n      resetInfo.textContent = 'Click this if you\\'re in an Ascension Challenge and want to leave. You get it already!'\r\n      resetInfo.style.color = 'gold'\r\n      break\r\n    case 'ascension':\r\n      currencyImage1.style.display = 'none'\r\n      resetCurrencyGain.textContent = ''\r\n      resetInfo.textContent = 'Ascend, C-10 is required! +' + format(CalcCorruptionStuff()[4], 0, true) + ' Wow! Cubes for doing it! Time: ' + format(player.ascensionCounter, 0, false) + ' Seconds. (Real-time ' + format(player.ascensionCounterRealReal, 0, false) + ' Seconds)'\r\n      resetInfo.style.color = 'gold'\r\n      break\r\n    case 'singularity':\r\n      currencyImage1.style.display = 'none'\r\n      resetCurrencyGain.textContent = ''\r\n      resetInfo.textContent = 'Are you willing to give up your laurels for a greater Challenge? The Ant God bribes you with ' + format(calculateGoldenQuarkGain(), 2, true) + ' Golden Quarks. Time: ' + format(player.singularityCounter, 0, false) + ' Seconds.'\r\n      resetInfo.style.color = 'lightgoldenrodyellow'\r\n  }\r\n  DOMCacheGetOrSet('resetofferings2').textContent = '+' + format(offering)\r\n}\r\n\r\nexport const updateAutoReset = (i: number) => {\r\n  let value = null\r\n  if (i === 1) {\r\n    value = parseFloat((DOMCacheGetOrSet('prestigeamount') as HTMLInputElement).value) || 0\r\n    player.prestigeamount = Math.max(value, 0)\r\n  } else if (i === 2) {\r\n    value = parseFloat((DOMCacheGetOrSet('transcendamount') as HTMLInputElement).value) || 0\r\n    player.transcendamount = Math.max(value, 0)\r\n  } else if (i === 3) {\r\n    value = parseFloat((DOMCacheGetOrSet('reincarnationamount') as HTMLInputElement).value) || 0\r\n    player.reincarnationamount = Math.max(value, 0)\r\n  } else if (i === 4) {\r\n    value = Math.floor(parseFloat((DOMCacheGetOrSet('ascensionAmount') as HTMLInputElement).value)) || 1\r\n    player.autoAscendThreshold = Math.max(value, 1)\r\n  } else if (i === 5) {\r\n    value = parseFloat((DOMCacheGetOrSet('autoAntSacrificeAmount') as HTMLInputElement).value) || 0\r\n    player.autoAntSacTimer = Math.max(value, 0)\r\n  }\r\n}\r\n\r\nexport const updateTesseractAutoBuyAmount = () => {\r\n  const value = Math.floor(parseFloat((DOMCacheGetOrSet('tesseractAmount') as HTMLInputElement).value)) || 0\r\n  player.tesseractAutoBuyerAmount = Math.max(value, 0)\r\n}\r\n\r\nexport const updateAutoCubesOpens = (i: number) => {\r\n  let value = null\r\n  if (i === 1) {\r\n    value = Number((DOMCacheGetOrSet('cubeOpensInput') as HTMLInputElement).value) || 0\r\n    player.openCubes = Math.max(Math.min(value, 100), 0)\r\n  } else if (i === 2) {\r\n    value = Number((DOMCacheGetOrSet('tesseractsOpensInput') as HTMLInputElement).value) || 0\r\n    player.openTesseracts = Math.max(Math.min(value, 100), 0)\r\n  } else if (i === 3) {\r\n    value = Number((DOMCacheGetOrSet('hypercubesOpensInput') as HTMLInputElement).value) || 0\r\n    player.openHypercubes = Math.max(Math.min(value, 100), 0)\r\n  } else if (i === 4) {\r\n    value = Number((DOMCacheGetOrSet('platonicCubeOpensInput') as HTMLInputElement).value) || 0\r\n    player.openPlatonicsCubes = Math.max(Math.min(value, 100), 0)\r\n  }\r\n}\r\n\r\nconst resetAddHistoryEntry = (input: resetNames, from = 'unknown') => {\r\n  const offeringsGiven = calculateOfferings(input)\r\n  const isChallenge = ['enterChallenge', 'leaveChallenge'].includes(from)\r\n\r\n  if (input === 'prestige') {\r\n    const historyEntry: ResetHistoryEntryPrestige = {\r\n      seconds: player.prestigecounter,\r\n      date: Date.now(),\r\n      offerings: offeringsGiven,\r\n      kind: 'prestige',\r\n      diamonds: G.prestigePointGain.toString()\r\n    }\r\n\r\n    Synergism.emit('historyAdd', 'reset', historyEntry)\r\n  } else if (input === 'transcension' || input === 'transcensionChallenge') {\r\n    // Heuristics: transcend entries are not added when entering or leaving a challenge,\r\n    // unless a meaningful gain in particles was made. This prevents spam when using the challenge automator.\r\n    const historyEntry: ResetHistoryEntryTranscend = {\r\n      seconds: player.transcendcounter,\r\n      date: Date.now(),\r\n      offerings: offeringsGiven,\r\n      kind: 'transcend',\r\n      mythos: G.transcendPointGain.toString()\r\n    }\r\n\r\n    Synergism.emit('historyAdd', 'reset', historyEntry)\r\n  } else if (input === 'reincarnation' || input === 'reincarnationChallenge') {\r\n    // Heuristics: reincarnate entries are not added when entering or leaving a challenge,\r\n    // unless a meaningful gain in particles was made. This prevents spam when using the challenge automator.\r\n    if (!isChallenge || G.reincarnationPointGain.gte(player.reincarnationPoints.div(10))) {\r\n      const historyEntry: ResetHistoryEntryReincarnate = {\r\n        seconds: player.reincarnationcounter,\r\n        date: Date.now(),\r\n        offerings: offeringsGiven,\r\n        kind: 'reincarnate',\r\n        particles: G.reincarnationPointGain.toString(),\r\n        obtainium: G.obtainiumGain\r\n      }\r\n\r\n      Synergism.emit('historyAdd', 'reset', historyEntry)\r\n    }\r\n  } else if (input === 'ascension' || input === 'ascensionChallenge') {\r\n    // Ascension entries will only be logged if C10 was completed.\r\n    if (player.challengecompletions[10] > 0) {\r\n      const corruptionMetaData = CalcCorruptionStuff()\r\n      const historyEntry: ResetHistoryEntryAscend = {\r\n        seconds: player.ascensionCounter,\r\n        date: Date.now(),\r\n        c10Completions: player.challengecompletions[10],\r\n        usedCorruptions: player.usedCorruptions.slice(0), // shallow copy,\r\n        corruptionScore: corruptionMetaData[3],\r\n        wowCubes: corruptionMetaData[4],\r\n        wowTesseracts: corruptionMetaData[5],\r\n        wowHypercubes: corruptionMetaData[6],\r\n        wowPlatonicCubes: corruptionMetaData[7],\r\n        wowHepteracts: corruptionMetaData[8],\r\n        kind: 'ascend'\r\n      }\r\n\r\n      // If we are _leaving_ an ascension challenge, log that too.\r\n      if (from !== 'enterChallenge' && player.currentChallenge.ascension !== 0) {\r\n        historyEntry.currentChallenge = player.currentChallenge.ascension\r\n      }\r\n\r\n      Synergism.emit('historyAdd', 'ascend', historyEntry)\r\n    }\r\n  }\r\n}\r\n\r\nexport const reset = (input: resetNames, fast = false, from = 'unknown') => {\r\n  // Handle adding history entries before actually resetting data, to ensure optimal accuracy.\r\n  resetAddHistoryEntry(input, from)\r\n\r\n  resetofferings(input)\r\n  resetUpgrades(1)\r\n  player.coins = new Decimal('102')\r\n  player.coinsThisPrestige = new Decimal('100')\r\n  player.firstOwnedCoin = 0\r\n  player.firstGeneratedCoin = new Decimal('0')\r\n  player.firstCostCoin = new Decimal('100')\r\n  player.secondOwnedCoin = 0\r\n  player.secondGeneratedCoin = new Decimal('0')\r\n  player.secondCostCoin = new Decimal('1e3')\r\n  player.thirdOwnedCoin = 0\r\n  player.thirdGeneratedCoin = new Decimal('0')\r\n  player.thirdCostCoin = new Decimal('2e4')\r\n  player.fourthOwnedCoin = 0\r\n  player.fourthGeneratedCoin = new Decimal('0')\r\n  player.fourthCostCoin = new Decimal('4e5')\r\n  player.fifthOwnedCoin = 0\r\n  player.fifthGeneratedCoin = new Decimal('0')\r\n  player.fifthCostCoin = new Decimal('8e6')\r\n  player.firstGeneratedDiamonds = new Decimal('0')\r\n  player.secondGeneratedDiamonds = new Decimal('0')\r\n  player.thirdGeneratedDiamonds = new Decimal('0')\r\n  player.fourthGeneratedDiamonds = new Decimal('0')\r\n  player.fifthGeneratedDiamonds = new Decimal('0')\r\n  player.multiplierCost = new Decimal('1e4')\r\n  player.multiplierBought = 0\r\n  player.acceleratorCost = new Decimal('500')\r\n  player.acceleratorBought = 0\r\n\r\n  player.prestigeCount += 1\r\n\r\n  player.prestigePoints = player.prestigePoints.add(G.prestigePointGain)\r\n  player.prestigeShards = new Decimal('0')\r\n  player.prestigenoaccelerator = true\r\n  player.prestigenomultiplier = true\r\n  player.prestigenocoinupgrades = true\r\n\r\n  // Notify new players the reset\r\n  if (player.highestSingularityCount === 0) {\r\n    if (input === 'prestige' && !player.unlocks.prestige) {\r\n      DOMCacheGetOrSet('prestigebtn').style.boxShadow = ''\r\n    }\r\n    if (input === 'transcension' && !player.unlocks.transcend) {\r\n      DOMCacheGetOrSet('transcendbtn').style.boxShadow = ''\r\n    }\r\n    if (input === 'reincarnation' && !player.unlocks.reincarnate) {\r\n      DOMCacheGetOrSet('reincarnatebtn').style.boxShadow = ''\r\n    }\r\n    if (input === 'ascension' && player.ascensionCount === 0) {\r\n      DOMCacheGetOrSet('ascendbtn').style.boxShadow = ''\r\n    }\r\n  }\r\n\r\n  player.unlocks.prestige = true\r\n\r\n  if (player.prestigecounter < player.fastestprestige) {\r\n    player.fastestprestige = player.prestigecounter\r\n  }\r\n\r\n  G.prestigePointGain = new Decimal('0')\r\n\r\n  player.prestigecounter = 0\r\n  G.autoResetTimers.prestige = 0\r\n\r\n  G.generatorPower = new Decimal(1)\r\n\r\n  const types = ['transcension', 'transcensionChallenge', 'reincarnation', 'reincarnationChallenge', 'ascension', 'ascensionChallenge']\r\n  if (types.includes(input)) {\r\n    resetUpgrades(2)\r\n    player.coinsThisTranscension = new Decimal('100')\r\n    player.firstOwnedDiamonds = 0\r\n    player.firstCostDiamonds = new Decimal('100')\r\n    player.secondOwnedDiamonds = 0\r\n    player.secondCostDiamonds = new Decimal('1e5')\r\n    player.thirdOwnedDiamonds = 0\r\n    player.thirdCostDiamonds = new Decimal('1e15')\r\n    player.fourthOwnedDiamonds = 0\r\n    player.fourthCostDiamonds = new Decimal('1e40')\r\n    player.fifthOwnedDiamonds = 0\r\n    player.fifthCostDiamonds = new Decimal('1e100')\r\n    player.firstGeneratedMythos = new Decimal('0')\r\n    player.secondGeneratedMythos = new Decimal('0')\r\n    player.thirdGeneratedMythos = new Decimal('0')\r\n    player.fourthGeneratedMythos = new Decimal('0')\r\n    player.fifthGeneratedMythos = new Decimal('0')\r\n    player.acceleratorBoostBought = 0\r\n    player.acceleratorBoostCost = new Decimal('1e3')\r\n\r\n    player.transcendCount += 1\r\n\r\n    player.prestigePoints = new Decimal('0')\r\n    player.transcendPoints = player.transcendPoints.add(G.transcendPointGain)\r\n    player.transcendShards = new Decimal('0')\r\n    player.transcendnocoinupgrades = true\r\n    player.transcendnocoinorprestigeupgrades = true\r\n    player.transcendnoaccelerator = true\r\n    player.transcendnomultiplier = true\r\n\r\n    G.transcendPointGain = new Decimal('0')\r\n\r\n    if (player.achievements[78] > 0.5) {\r\n      player.firstOwnedDiamonds += 1\r\n    }\r\n    if (player.achievements[85] > 0.5) {\r\n      player.secondOwnedDiamonds += 1\r\n    }\r\n    if (player.achievements[92] > 0.5) {\r\n      player.thirdOwnedDiamonds += 1\r\n    }\r\n    if (player.achievements[99] > 0.5) {\r\n      player.fourthOwnedDiamonds += 1\r\n    }\r\n    if (player.achievements[106] > 0.5) {\r\n      player.fifthOwnedDiamonds += 1\r\n    }\r\n\r\n    if (player.achievements[4] > 0.5) {\r\n      player.upgrades[81] = 1\r\n    }\r\n    if (player.achievements[11] > 0.5) {\r\n      player.upgrades[82] = 1\r\n    }\r\n    if (player.achievements[18] > 0.5) {\r\n      player.upgrades[83] = 1\r\n    }\r\n    if (player.achievements[25] > 0.5) {\r\n      player.upgrades[84] = 1\r\n    }\r\n    if (player.achievements[32] > 0.5) {\r\n      player.upgrades[85] = 1\r\n    }\r\n    if (player.achievements[80] > 0.5) {\r\n      player.upgrades[87] = 1\r\n    }\r\n\r\n    if (player.transcendcounter < player.fastesttranscend && player.currentChallenge.transcension === 0) {\r\n      player.fastesttranscend = player.transcendcounter\r\n    }\r\n\r\n    player.transcendcounter = 0\r\n    G.autoResetTimers.transcension = 0\r\n  }\r\n\r\n  if (input == 'reincarnation' || input == 'reincarnationChallenge') {\r\n    if (player.usedCorruptions[6] > 10 && player.platonicUpgrades[11] > 0) {\r\n      player.prestigePoints = player.prestigePoints.add(G.reincarnationPointGain)\r\n    }\r\n  }\r\n\r\n  if (input === 'reincarnation' || input === 'reincarnationChallenge' || input === 'ascension' || input === 'ascensionChallenge' || input == 'singularity') {\r\n    // Fail safe if for some reason ascension achievement isn't awarded. hacky solution but am too tired to fix right now\r\n    if (player.ascensionCount > 0 && player.achievements[183] < 1) {\r\n      ascensionAchievementCheck(1)\r\n    }\r\n\r\n    player.researchPoints = Math.min(1e300, player.researchPoints + Math.floor(G.obtainiumGain))\r\n\r\n    const opscheck = G.obtainiumGain / (1 + player.reincarnationcounter)\r\n    if (opscheck > player.obtainiumpersecond) {\r\n      player.obtainiumpersecond = opscheck\r\n    }\r\n    player.currentChallenge.transcension = 0\r\n    resetUpgrades(3)\r\n    player.coinsThisReincarnation = new Decimal('100')\r\n    player.firstOwnedMythos = 0\r\n    player.firstCostMythos = new Decimal('1')\r\n    player.secondOwnedMythos = 0\r\n    player.secondCostMythos = new Decimal('1e2')\r\n    player.thirdOwnedMythos = 0\r\n    player.thirdCostMythos = new Decimal('1e4')\r\n    player.fourthOwnedMythos = 0\r\n    player.fourthCostMythos = new Decimal('1e8')\r\n    player.fifthOwnedMythos = 0\r\n    player.fifthCostMythos = new Decimal('1e16')\r\n    player.firstGeneratedParticles = new Decimal('0')\r\n    player.secondGeneratedParticles = new Decimal('0')\r\n    player.thirdGeneratedParticles = new Decimal('0')\r\n    player.fourthGeneratedParticles = new Decimal('0')\r\n    player.fifthGeneratedParticles = new Decimal('0')\r\n\r\n    player.reincarnationCount += 1\r\n\r\n    player.transcendPoints = new Decimal('0')\r\n    player.reincarnationPoints = player.reincarnationPoints.add(G.reincarnationPointGain)\r\n    player.reincarnationShards = new Decimal('0')\r\n    player.challengecompletions[1] = 0\r\n    player.challengecompletions[2] = 0\r\n    player.challengecompletions[3] = 0\r\n    player.challengecompletions[4] = 0\r\n    player.challengecompletions[5] = 0\r\n\r\n    G.reincarnationPointGain = new Decimal('0')\r\n\r\n    if (player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.reincarnation === 0) {\r\n      player.challengecompletions[1] = player.highestchallengecompletions[1]\r\n      player.challengecompletions[2] = player.highestchallengecompletions[2]\r\n      player.challengecompletions[3] = player.highestchallengecompletions[3]\r\n      player.challengecompletions[4] = player.highestchallengecompletions[4]\r\n      player.challengecompletions[5] = player.highestchallengecompletions[5]\r\n\r\n    }\r\n\r\n    player.reincarnatenocoinupgrades = true\r\n    player.reincarnatenocoinorprestigeupgrades = true\r\n    player.reincarnatenocoinprestigeortranscendupgrades = true\r\n    player.reincarnatenocoinprestigetranscendorgeneratorupgrades = true\r\n    player.reincarnatenoaccelerator = true\r\n    player.reincarnatenomultiplier = true\r\n\r\n    if (player.reincarnationcounter < player.fastestreincarnate && player.currentChallenge.reincarnation === 0) {\r\n      player.fastestreincarnate = player.reincarnationcounter\r\n    }\r\n\r\n    calculateCubeBlessings()\r\n    player.reincarnationcounter = 0\r\n    G.autoResetTimers.reincarnation = 0\r\n\r\n    if (player.autoResearchToggle && player.autoResearch > 0.5) {\r\n      const linGrowth = (player.autoResearch === 200) ? 0.01 : 0\r\n      buyResearch(player.autoResearch, true, linGrowth)\r\n    }\r\n\r\n    calculateRuneLevels()\r\n    calculateAnts()\r\n  }\r\n\r\n  if (input === 'ascension' || input === 'ascensionChallenge' || input === 'singularity') {\r\n    const metaData = CalcCorruptionStuff()\r\n    if (player.challengecompletions[10] > 0) {\r\n      ascensionAchievementCheck(3, metaData[3])\r\n    }\r\n    // reset auto challenges\r\n    player.currentChallenge.transcension = 0\r\n    player.currentChallenge.reincarnation = 0\r\n\r\n    // The start of the auto challenge to improve QoL starts with C10\r\n    if (input === 'ascensionChallenge' && player.currentChallenge.ascension > 10 && player.highestSingularityCount >= 2 && player.autoChallengeToggles[10]) {\r\n      player.autoChallengeIndex = 10\r\n    } else {\r\n      player.autoChallengeIndex = 1\r\n    }\r\n    toggleAutoChallengeModeText('START')\r\n\r\n    G.autoChallengeTimerIncrement = 0\r\n    //reset rest\r\n    resetResearches()\r\n    resetAnts()\r\n    resetTalismans()\r\n    player.reincarnationPoints = new Decimal('0')\r\n    player.reincarnationShards = new Decimal('0')\r\n    player.obtainiumpersecond = 0\r\n    player.maxobtainiumpersecond = 0\r\n    player.offeringpersecond = 0\r\n    player.antSacrificePoints = 0\r\n    player.antSacrificeTimer = 0\r\n    player.antSacrificeTimerReal = 0\r\n    player.antUpgrades[12-1] = 0\r\n    for (let j = 61; j <= 80; j++) {\r\n      player.upgrades[j] = 0\r\n    }\r\n    for (let j = 94; j <= 100; j++) {\r\n      player.upgrades[j] = 0\r\n    }\r\n    player.firstOwnedParticles = 0\r\n    player.secondOwnedParticles = 0\r\n    player.thirdOwnedParticles = 0\r\n    player.fourthOwnedParticles = 0\r\n    player.fifthOwnedParticles = 0\r\n    player.firstCostParticles = new Decimal('1')\r\n    player.secondCostParticles = new Decimal('100')\r\n    player.thirdCostParticles = new Decimal('1e4')\r\n    player.fourthCostParticles = new Decimal('1e8')\r\n    player.fifthCostParticles = new Decimal('1e16')\r\n    player.runeexp = [0, 0, 0, 0, 0, player.runeexp[5], player.runeexp[6]]\r\n    player.runelevels = [0, 0, 0, 0, 0, player.runelevels[5], player.runelevels[6]]\r\n    player.runeshards = 0\r\n    player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n    player.runelevels[0] = 3 * player.cubeUpgrades[26]\r\n    player.runelevels[1] = 3 * player.cubeUpgrades[26]\r\n    player.runelevels[2] = 3 * player.cubeUpgrades[26]\r\n    player.runelevels[3] = 3 * player.cubeUpgrades[26]\r\n    player.runelevels[4] = 3 * player.cubeUpgrades[26]\r\n\r\n    if (player.cubeUpgrades[27] === 1) {\r\n      player.firstOwnedParticles = 1\r\n      player.secondOwnedParticles = 1\r\n      player.thirdOwnedParticles = 1\r\n      player.fourthOwnedParticles = 1\r\n      player.fifthOwnedParticles = 1\r\n    }\r\n\r\n    // If challenge 10 is incomplete, you won't get a cube no matter what\r\n    if (player.challengecompletions[10] > 0 && player.ascensionCounter > 0) {\r\n      player.ascensionCount += calcAscensionCount()\r\n      //Metadata is defined up in the top of the (i > 3.5) case\r\n      // Protect the cube from developer mistakes\r\n      if (isFinite(metaData[4]) && isFinite(metaData[5]) && isFinite(metaData[6]) && isFinite(metaData[7]) && isFinite(metaData[8])) {\r\n        player.wowCubes.add(metaData[4])\r\n        player.wowTesseracts.add(metaData[5])\r\n        player.wowHypercubes.add(metaData[6])\r\n        player.wowPlatonicCubes.add(metaData[7])\r\n        player.wowAbyssals = Math.min(1e300, player.wowAbyssals + metaData[8])\r\n      }\r\n    }\r\n\r\n    for (let j = 1; j <= 10; j++) {\r\n      player.challengecompletions[j] = 0\r\n      player.highestchallengecompletions[j] = 0\r\n    }\r\n\r\n    player.challengecompletions[6] = player.highestchallengecompletions[6] = player.cubeUpgrades[49]\r\n    player.challengecompletions[7] = player.highestchallengecompletions[7] = player.cubeUpgrades[49]\r\n    player.challengecompletions[8] = player.highestchallengecompletions[8] = player.cubeUpgrades[49]\r\n\r\n    DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n    player.roombaResearchIndex = 0\r\n    player.autoResearch = 1\r\n\r\n    for (let j = 1; j <= (200); j++) {\r\n      const k = `res${j}`\r\n      if (player.researches[j] > 0.5 && player.researches[j] < G.researchMaxLevels[j]) {\r\n        updateClassList(k, ['researchPurchased'], ['researchAvailable', 'researchMaxed', 'researchPurchasedAvailable', 'researchUnpurchased'])\r\n      } else if (player.researches[j] > 0.5 && player.researches[j] >= G.researchMaxLevels[j]) {\r\n        updateClassList(k, ['researchMaxed'], ['researchAvailable', 'researchPurchased', 'researchPurchasedAvailable', 'researchUnpurchased'])\r\n      } else {\r\n        updateClassList(k, ['researchUnpurchased'], ['researchAvailable', 'researchPurchased', 'researchPurchasedAvailable', 'researchMaxed'])\r\n      }\r\n    }\r\n\r\n    calculateAnts()\r\n    calculateRuneLevels()\r\n    calculateAntSacrificeELO()\r\n    calculateTalismanEffects()\r\n    calculateObtainium()\r\n    ascensionAchievementCheck(1)\r\n\r\n    player.ascensionCounter = 0\r\n    player.ascensionCounterReal = 0\r\n    player.ascensionCounterRealReal = 0\r\n\r\n    updateTalismanInventory()\r\n    updateTalismanAppearance(0)\r\n    updateTalismanAppearance(1)\r\n    updateTalismanAppearance(2)\r\n    updateTalismanAppearance(3)\r\n    updateTalismanAppearance(4)\r\n    updateTalismanAppearance(5)\r\n    updateTalismanAppearance(6)\r\n    calculateCubeBlessings()\r\n    calculateTesseractBlessings()\r\n    calculateHypercubeBlessings()\r\n\r\n    if (player.cubeUpgrades[4] === 1) {\r\n      player.upgrades[94] = 1\r\n      player.upgrades[95] = 1\r\n      player.upgrades[96] = 1\r\n      player.upgrades[97] = 1\r\n      player.upgrades[98] = 1\r\n    }\r\n    if (player.cubeUpgrades[5] === 1) {\r\n      player.upgrades[99] = 1\r\n    }\r\n    if (player.cubeUpgrades[6] === 1) {\r\n      player.upgrades[100] = 1\r\n    }\r\n\r\n    for (let j = 61; j <= 80; j++) {\r\n      DOMCacheGetOrSet(`upg${j}`).style.backgroundColor = ''\r\n    }\r\n    for (let j = 94; j <= 100; j++) {\r\n      if (player.upgrades[j] === 0) {\r\n        DOMCacheGetOrSet(`upg${j}`).style.backgroundColor = ''\r\n      }\r\n    }\r\n\r\n    const maxLevel = maxCorruptionLevel()\r\n    player.usedCorruptions = player.prototypeCorruptions.map((curr:number, index:number) => {\r\n      if (index >= 2 && index <= 9) {\r\n        return Math.min(maxLevel * (player.challengecompletions[corrChallengeMinimum(index)] > 0 ||\r\n                                            player.singularityUpgrades.platonicTau.getEffect().bonus ? 1: 0), curr)\r\n      }\r\n      return curr\r\n    })\r\n    player.usedCorruptions[1] = 0\r\n    player.prototypeCorruptions[1] = 0\r\n    //fix c15 ascension bug by restoring the corruptions if the player ascended instead of leaving\r\n    if (player.currentChallenge.ascension === 15 && (input === 'ascension' || input === 'ascensionChallenge')) {\r\n      player.usedCorruptions[0] = 0\r\n      player.prototypeCorruptions[0] = 0\r\n      for (let i = 2; i <= 9; i++) {\r\n        player.usedCorruptions[i] = 11\r\n      }\r\n    }\r\n\r\n    corruptionStatsUpdate()\r\n    updateSingularityMilestoneAwards(false)\r\n  }\r\n\r\n  if (input === 'ascension' || input === 'ascensionChallenge') {\r\n    // Hepteract Autocraft\r\n    const autoHepteractCrafts = getAutoHepteractCrafts()\r\n    const numberOfAutoCraftsAndOrbs = autoHepteractCrafts.length + (player.overfluxOrbsAutoBuy ? 1 : 0)\r\n    if (player.highestSingularityCount >= 1 && numberOfAutoCraftsAndOrbs > 0) {\r\n      // Computes the max number of Hepteracts to spend on each auto Hepteract craft\r\n      const heptAutoSpend = Math.floor((player.wowAbyssals / numberOfAutoCraftsAndOrbs) * (player.hepteractAutoCraftPercentage / 100))\r\n      for (const craft of autoHepteractCrafts) {\r\n        craft.autoCraft(heptAutoSpend)\r\n      }\r\n\r\n      if (player.overfluxOrbsAutoBuy) {\r\n        const orbsAmount = Math.floor(heptAutoSpend / 250000)\r\n        if (player.wowAbyssals - (250000 * orbsAmount) >= 0) {\r\n          player.overfluxOrbs += orbsAmount\r\n          player.overfluxPowder += player.shopUpgrades.powderAuto * calculatePowderConversion().mult * orbsAmount / 100\r\n          player.wowAbyssals -= 250000 * orbsAmount\r\n        }\r\n        if (player.wowAbyssals < 0) {\r\n          player.wowAbyssals = 0\r\n        }\r\n      }\r\n    }\r\n\r\n    // Autobuy tesseract buildings (Mode: PERCENTAGE)\r\n    if (player.researches[190] > 0 && player.tesseractAutoBuyerToggle === 1 && player.resettoggle4 === 2) {\r\n      const ownedBuildings: TesseractBuildings = [null, null, null, null, null]\r\n      for (let i = 1; i <= 5; i++) {\r\n        if (player.autoTesseracts[i]) {\r\n          ownedBuildings[i-1] = player[`ascendBuilding${i as OneToFive}` as const].owned\r\n        }\r\n      }\r\n      const percentageToSpend = 100 - Math.min(100, player.tesseractAutoBuyerAmount)\r\n      const budget = Number(player.wowTesseracts) * percentageToSpend / 100\r\n      const buyToBuildings = calculateTessBuildingsInBudget(ownedBuildings, budget)\r\n      // Prioritise buying buildings from highest tier to lowest,\r\n      // in case there are any off-by-ones or floating point errors.\r\n      for (let i = 5; i >= 1; i--) {\r\n        const buyFrom = ownedBuildings[i-1]\r\n        const buyTo = buyToBuildings[i-1]\r\n        if (buyFrom !== null && buyTo !== null && buyTo !== buyFrom) {\r\n          buyTesseractBuilding(i as OneToFive, buyTo - buyFrom)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Automation Platonic Upgrades\r\n    autoBuyPlatonicUpgrades()\r\n\r\n    // Automation Cube Upgrades\r\n    autoBuyCubeUpgrades()\r\n\r\n    // Auto open Cubes. If to remove !== 0, game will lag a bit if it was set to 0\r\n    if (player.highestSingularityCount >= 35) {\r\n      if (player.autoOpenCubes && player.openCubes !== 0 && player.cubeUpgrades[51] > 0) {\r\n        player.wowCubes.open(Math.floor(Number(player.wowCubes) * player.openCubes / 100), false)\r\n      }\r\n      if (player.autoOpenTesseracts && player.openTesseracts !== 0 && player.challengecompletions[11] > 0) {\r\n        if (player.tesseractAutoBuyerToggle !== 1 || player.resettoggle4 === 2) {\r\n          player.wowTesseracts.open(Math.floor(Number(player.wowTesseracts) * player.openTesseracts / 100), false)\r\n        }\r\n      }\r\n      if (player.autoOpenHypercubes && player.openHypercubes !== 0 && player.challengecompletions[13] > 0) {\r\n        player.wowHypercubes.open(Math.floor(Number(player.wowHypercubes) * player.openHypercubes / 100), false)\r\n      }\r\n      if (player.autoOpenPlatonicsCubes && player.openPlatonicsCubes !== 0 && player.challengecompletions[14] > 0) {\r\n        player.wowPlatonicCubes.open(Math.floor(Number(player.wowPlatonicCubes) * player.openPlatonicsCubes / 100), false)\r\n      }\r\n    }\r\n  }\r\n\r\n  //Always unlocks\r\n  player.unlocks.prestige = true\r\n\r\n  if (input == 'transcension' || input == 'transcensionChallenge') {\r\n    player.unlocks.transcend = true\r\n  }\r\n  if (input == 'reincarnation' || input == 'reincarnationChallenge') {\r\n    player.unlocks.reincarnate = true\r\n  }\r\n\r\n  if (input === 'singularity') {\r\n    player.unlocks.coinone = false\r\n    player.unlocks.cointwo = false\r\n    player.unlocks.cointhree = false\r\n    player.unlocks.coinfour = false\r\n    player.unlocks.generation = false\r\n    player.unlocks.prestige = false\r\n    player.unlocks.transcend = false\r\n    player.unlocks.reincarnate = false\r\n    player.unlocks.rrow1 = false\r\n    player.unlocks.rrow2 = false\r\n    player.unlocks.rrow3 = false\r\n    player.unlocks.rrow4 = false\r\n\r\n    player.ascendBuilding1.owned = 0\r\n    player.ascendBuilding1.generated = new Decimal('0')\r\n    player.ascendBuilding2.owned = 0\r\n    player.ascendBuilding2.generated = new Decimal('0')\r\n    player.ascendBuilding3.owned = 0\r\n    player.ascendBuilding3.generated = new Decimal('0')\r\n    player.ascendBuilding4.owned = 0\r\n    player.ascendBuilding4.generated = new Decimal('0')\r\n    player.ascendBuilding5.owned = 0\r\n    player.ascendBuilding5.generated = new Decimal('0')\r\n\r\n    player.constantUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n    player.wowCubes = new WowCubes(0)\r\n    player.wowTesseracts = new WowCubes(0)\r\n    player.wowHypercubes = new WowCubes(0)\r\n    player.wowTesseracts = new WowCubes(0)\r\n    player.wowAbyssals = 0\r\n\r\n    for (let index = 1; index <= 50; index++) {\r\n      player.cubeUpgrades[index] = 0\r\n    }\r\n  }\r\n\r\n  if (!fast) {\r\n    revealStuff()\r\n  }\r\n  if (input === 'transcensionChallenge' || input === 'reincarnationChallenge' || input === 'ascensionChallenge') {\r\n    updateChallengeDisplay()\r\n  }\r\n\r\n  updateAll()\r\n}\r\n\r\n/**\r\n *\r\n * Computes which achievements in 274-280 are achievable given current singularity number\r\n */\r\nexport const updateSingularityAchievements = (): void => {\r\n  if (player.highestSingularityCount >= 1) {\r\n    achievementaward(274)\r\n  }\r\n  if (player.highestSingularityCount >= 2) {\r\n    achievementaward(275)\r\n  }\r\n  if (player.highestSingularityCount >= 3) {\r\n    achievementaward(276)\r\n  }\r\n  if (player.highestSingularityCount >= 4) {\r\n    achievementaward(277)\r\n  }\r\n  if (player.highestSingularityCount >= 5) {\r\n    achievementaward(278)\r\n  }\r\n  if (player.highestSingularityCount >= 7) {\r\n    achievementaward(279)\r\n  }\r\n  if (player.highestSingularityCount >= 10) {\r\n    achievementaward(280)\r\n  }\r\n}\r\n\r\nexport const updateSingularityMilestoneAwards = (singularityReset = true): void => {\r\n  // 1 transcension, 1001 mythos\r\n  if (player.achievements[275] > 0) { // Singularity 2\r\n    if (singularityReset) {\r\n      player.prestigeCount = 1\r\n      player.transcendCount = 1\r\n    }\r\n    player.transcendPoints = new Decimal('1001')\r\n\r\n    player.unlocks.coinone = true\r\n    player.unlocks.cointwo = true\r\n    player.unlocks.cointhree = true\r\n    player.unlocks.coinfour = true\r\n    player.unlocks.prestige = true\r\n    player.unlocks.generation = true\r\n    player.unlocks.transcend = true\r\n    for (let i = 0; i < 5; i++) {\r\n      achievementaward(4 + 7 * i)\r\n    }\r\n    achievementaward(36) // 1 prestige\r\n    achievementaward(43) // 1 transcension\r\n  }\r\n  if (player.achievements[276] > 0) { // Singularity 3\r\n    if (player.currentChallenge.ascension !== 12) {\r\n      if (singularityReset) {\r\n        player.reincarnationCount = 1\r\n      }\r\n      player.reincarnationPoints = new Decimal('10')\r\n    }\r\n    player.unlocks.reincarnate = true\r\n    player.unlocks.rrow1 = true\r\n    player.researches[47] = 1\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n      for (let j = 0; j < 5; j++) {\r\n        achievementaward(78 + i + 7 * j)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      achievementaward(57 + i)\r\n      achievementaward(64 + i)\r\n      achievementaward(71 + i)\r\n    }\r\n\r\n    achievementaward(37)\r\n    achievementaward(38)\r\n    achievementaward(44)\r\n    achievementaward(50)\r\n    achievementaward(80)\r\n    achievementaward(87)\r\n\r\n  }\r\n  if (player.achievements[277] > 0) { // Singularity 4\r\n    if (player.currentChallenge.ascension !== 14) {\r\n      player.researchPoints = Math.floor(500 * calculateSingularityDebuff('Offering') * calculateSingularityDebuff('Researches'))\r\n    }\r\n    if (player.currentChallenge.ascension !== 12) {\r\n      player.reincarnationPoints = new Decimal('1e16')\r\n    }\r\n    player.challengecompletions[6] = 1\r\n    player.highestchallengecompletions[6] = 1\r\n    achievementaward(113)\r\n  }\r\n  const shopItemPerk_5 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const\r\n  const perk_5 = player.achievements[278] > 0\r\n  if (perk_5 && singularityReset) { // Singularity 5\r\n    for (const key of shopItemPerk_5) {\r\n      player.shopUpgrades[key] = 10\r\n    }\r\n    player.cubeUpgrades[7] = 1\r\n  }\r\n  if (player.achievements[279] > 0) { // Singularity 7\r\n    player.challengecompletions[7] = 1\r\n    player.highestchallengecompletions[7] = 1\r\n    achievementaward(120)\r\n    if (player.currentChallenge.ascension !== 12) {\r\n      player.reincarnationPoints = new Decimal('1e100')\r\n    }\r\n  }\r\n  if (player.achievements[280] > 0) { // Singularity 10\r\n    achievementaward(124)\r\n    achievementaward(127)\r\n    player.challengecompletions[8] = 1\r\n    player.highestchallengecompletions[8] = 1\r\n    player.cubeUpgrades[8] = 1\r\n    player.cubeUpgrades[4] = 1 // Adding these ones,\r\n    player.cubeUpgrades[5] = 1 // so they wont reset\r\n    player.cubeUpgrades[6] = 1 // on first Ascension\r\n    player.firstOwnedAnts = 1\r\n    for (let i = 0; i < 7; i++) {\r\n      achievementaward(176 + i)\r\n    }\r\n  }\r\n  if (player.highestSingularityCount > 10) { // Must be the same as autoResearchEnabled()\r\n    player.cubeUpgrades[9] = 1\r\n  }\r\n  if (player.highestSingularityCount >= 15) {\r\n    player.challengecompletions[8] = 5\r\n    player.highestchallengecompletions[8] = 5\r\n    if (player.currentChallenge.ascension !== 12) {\r\n      player.reincarnationPoints = new Decimal('2.22e2222')\r\n    }\r\n    player.fifthOwnedAnts = 1\r\n    player.cubeUpgrades[20] = 1\r\n  }\r\n  const perk_20 = player.highestSingularityCount >= 20\r\n  if (perk_20) {\r\n    const shopItemPerk_20 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const\r\n    player.challengecompletions[9] = 1\r\n    player.highestchallengecompletions[9] = 1\r\n    achievementaward(134)\r\n    player.antPoints = new Decimal('1e100')\r\n    player.antUpgrades[11] = 1\r\n    for (const key of shopItemPerk_20) {\r\n      player.shopUpgrades[key] = shopData[key].maxLevel\r\n    }\r\n  }\r\n  if (player.highestSingularityCount >= 25) {\r\n    player.eighthOwnedAnts = 1\r\n  }\r\n  if (player.highestSingularityCount >= 30) {\r\n    player.researches[130] = 1\r\n    player.researches[135] = 1\r\n    player.researches[145] = 1\r\n  }\r\n  if (player.highestSingularityCount >= 101 && singularityReset) {\r\n    player.cubeUpgrades[51] = 1\r\n    awardAutosCookieUpgrade()\r\n  }\r\n\r\n  if (player.singularityUpgrades.platonicAlpha.getEffect().bonus && player.platonicUpgrades[5] === 0) {\r\n    player.platonicUpgrades[5] = 1\r\n    updatePlatonicUpgradeBG(5)\r\n  }\r\n\r\n  if (singularityReset) {\r\n    for (let j = 1; j <= 15; j++) {\r\n      challengeachievementcheck(j)\r\n    }\r\n  }\r\n  resetUpgrades(3)\r\n  if (singularityReset) {\r\n    for (let j = 1; j < player.cubeUpgrades.length; j++) {\r\n      updateCubeUpgradeBG(j)\r\n    }\r\n  }\r\n  for (let j = 1; j < player.researches.length; j++) {\r\n    if (player.researches[j] > 0) {\r\n      updateResearchBG(j)\r\n    }\r\n  }\r\n  updateSingularityGlobalPerks()\r\n  revealStuff()\r\n}\r\n\r\n// updates singularity perks that do not get saved to player object\r\n// so that we can call on save load to fix game state\r\nexport const updateSingularityGlobalPerks = () => {\r\n\r\n  const perk_5 = player.achievements[278] > 0\r\n  const shopItemPerk_5 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const\r\n  for (const key of shopItemPerk_5) {\r\n    shopData[key].refundMinimumLevel = perk_5 ? 10 : key.endsWith('Auto') ? 1 : 0\r\n  }\r\n\r\n  const perk_20 = player.highestSingularityCount >= 20\r\n  const shopItemPerk_20 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const\r\n  for (const key of shopItemPerk_20) {\r\n    shopData[key].refundable = perk_20 ? false : true\r\n  }\r\n\r\n  const perk_51 = player.highestSingularityCount >= 51\r\n  const shopItemPerk_51 = ['seasonPass', 'seasonPass2', 'seasonPass3', 'seasonPassY', 'chronometer', 'chronometer2'] as const\r\n  for (const key of shopItemPerk_51) {\r\n    shopData[key].refundable = perk_51 ? false : true\r\n  }\r\n}\r\n\r\nexport const singularity = async (setSingNumber = -1): Promise<void> => {\r\n  if (player.runelevels[6] === 0 && setSingNumber === -1) {\r\n    return Alert('You nearly triggered a double singularity bug! Oh no! Luckily, our staff prevented this from happening.')\r\n  }\r\n\r\n  // setSingNumber is only not -1 when we are entering and exiting a challenge.\r\n  if (setSingNumber === -1) {\r\n    // get total cube blessings for history\r\n    const cubeArray = Object.values(player.cubeBlessings)\r\n    const tesseractArray = Object.values(player.tesseractBlessings)\r\n    const hypercubeArray = Object.values(player.hypercubeBlessings)\r\n    const platonicArray = Object.values(player.platonicBlessings)\r\n    // Update sing history\r\n    const historyEntry: ResetHistoryEntrySingularity = {\r\n      seconds: player.singularityCounter,\r\n      date: Date.now(),\r\n      singularityCount: player.singularityCount,\r\n      quarks: player.quarksThisSingularity,\r\n      c15Score: player.challenge15Exponent,\r\n      goldenQuarks: calculateGoldenQuarkGain(),\r\n      wowTribs: sumContents(cubeArray),\r\n      tessTribs: sumContents(tesseractArray),\r\n      hyperTribs: sumContents(hypercubeArray),\r\n      platTribs: sumContents(platonicArray),\r\n      octeracts: player.totalWowOcteracts,\r\n      quarkHept: player.hepteractCrafts.quark.BAL,\r\n      kind: 'singularity'\r\n    }\r\n    Synergism.emit('historyAdd', 'singularity', historyEntry)\r\n  }\r\n  // reset the rune instantly to hopefully prevent a double singularity\r\n  player.runelevels[6] = 0\r\n\r\n  player.goldenQuarks += calculateGoldenQuarkGain()\r\n\r\n  if (setSingNumber === -1) {\r\n    const incrementSingCount = 1 + getFastForwardTotalMultiplier()\r\n    player.singularityCount += incrementSingCount\r\n    if (player.singularityCount >= player.highestSingularityCount) {\r\n      player.highestSingularityCount = player.singularityCount\r\n\r\n      if (player.highestSingularityCount === 5) {\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 1\r\n      }\r\n      if (player.highestSingularityCount === 10) {\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 2\r\n      }\r\n    }\r\n  } else {\r\n    player.singularityCount = setSingNumber\r\n  }\r\n\r\n  player.totalQuarksEver += player.quarksThisSingularity\r\n  await resetShopUpgrades(true)\r\n  const hold = Object.assign({}, blankSave, {\r\n    codes: Array.from(blankSave.codes)\r\n  }) as Player\r\n\r\n  // Reset Displays\r\n  changeTab('buildings')\r\n  changeSubTab('buildings', { page: 0 })\r\n  changeSubTab('runes', { page: 0 }) // Set 'runes' subtab back to 'runes' tab\r\n  changeSubTab('cube', { page: 0 }) // Set 'cube tribues' subtab back to 'cubes' tab\r\n  changeSubTab('traits', { page: 0 }) // set 'corruption main'\r\n  changeSubTab('singularity', { page: 0 }) // set 'singularity main'\r\n  changeSubTab('settings', { page: 0 }) // set 'statistics main'\r\n\r\n  hold.history.singularity = player.history.singularity\r\n  hold.totalQuarksEver = player.totalQuarksEver\r\n  hold.singularityCount = player.singularityCount\r\n  hold.highestSingularityCount = player.highestSingularityCount\r\n  hold.goldenQuarks = player.goldenQuarks\r\n  hold.shopUpgrades = player.shopUpgrades\r\n  hold.worlds = new QuarkHandler({ quarks: 0, bonus: 0 })\r\n  // Exclude potentially non-latin1 characters from the save\r\n  hold.singularityUpgrades = Object.fromEntries(\r\n    Object.entries(player.singularityUpgrades).map(([key, value]) => {\r\n      return [key, {\r\n        level: value.level,\r\n        goldenQuarksInvested: value.goldenQuarksInvested,\r\n        toggleBuy: value.toggleBuy,\r\n        freeLevels: value.freeLevels\r\n      }]\r\n    })\r\n  ) as Player['singularityUpgrades']\r\n  hold.octeractUpgrades = Object.fromEntries(\r\n    Object.entries(player.octeractUpgrades).map(([key, value]) => {\r\n      return [key, {\r\n        level: value.level,\r\n        goldenQuarksInvested: value.octeractsInvested,\r\n        toggleBuy: value.toggleBuy,\r\n        freeLevels: value.freeLevels\r\n      }]\r\n    })\r\n  ) as unknown as Player['octeractUpgrades']\r\n  hold.autoChallengeToggles = player.autoChallengeToggles\r\n  hold.autoChallengeTimer = player.autoChallengeTimer\r\n  hold.saveString = player.saveString\r\n  hold.corruptionLoadouts = player.corruptionLoadouts\r\n  hold.corruptionLoadoutNames = player.corruptionLoadoutNames\r\n  hold.corruptionShowStats = player.corruptionShowStats\r\n  hold.toggles = player.toggles\r\n  hold.retrychallenges = player.retrychallenges\r\n  hold.resettoggle1 = player.resettoggle1\r\n  hold.resettoggle2 = player.resettoggle2\r\n  hold.resettoggle3 = player.resettoggle3\r\n  hold.resettoggle4 = player.resettoggle4\r\n  hold.coinbuyamount = player.coinbuyamount\r\n  hold.crystalbuyamount = player.crystalbuyamount\r\n  hold.mythosbuyamount = player.mythosbuyamount\r\n  hold.particlebuyamount = player.particlebuyamount\r\n  hold.offeringbuyamount = player.offeringbuyamount\r\n  hold.tesseractbuyamount = player.tesseractbuyamount\r\n  hold.shoptoggles = player.shoptoggles\r\n  hold.autoSacrificeToggle = player.autoSacrificeToggle\r\n  hold.autoBuyFragment = player.autoBuyFragment\r\n  hold.autoFortifyToggle = player.autoFortifyToggle\r\n  hold.autoEnhanceToggle = player.autoEnhanceToggle\r\n  hold.autoResearchToggle = player.autoResearchToggle\r\n  hold.autoResearchMode = player.autoResearchMode\r\n  hold.dailyCodeUsed = player.dailyCodeUsed\r\n  hold.runeBlessingBuyAmount = player.runeBlessingBuyAmount\r\n  hold.runeSpiritBuyAmount = player.runeSpiritBuyAmount\r\n  hold.prestigeamount = player.prestigeamount\r\n  hold.transcendamount = player.transcendamount\r\n  hold.reincarnationamount = player.reincarnationamount\r\n  hold.talismanOne = player.talismanOne\r\n  hold.talismanTwo = player.talismanTwo\r\n  hold.talismanThree = player.talismanThree\r\n  hold.talismanFour = player.talismanFour\r\n  hold.talismanFive = player.talismanFive\r\n  hold.talismanSix = player.talismanSix\r\n  hold.talismanSeven = player.talismanSeven\r\n  hold.buyTalismanShardPercent = player.buyTalismanShardPercent\r\n  hold.antMax = player.antMax\r\n  hold.autoAntSacrifice = player.autoAntSacrifice\r\n  hold.autoAntSacrificeMode = player.autoAntSacrificeMode\r\n  hold.autoAntSacTimer = player.autoAntSacTimer\r\n  hold.autoAscend = player.autoAscend\r\n  hold.autoAscendMode = player.autoAscendMode\r\n  hold.autoAscendThreshold = player.autoAscendThreshold\r\n  hold.autoResearch = 0\r\n  hold.autoTesseracts = player.autoTesseracts\r\n  hold.tesseractAutoBuyerToggle = player.tesseractAutoBuyerToggle\r\n  hold.tesseractAutoBuyerAmount = player.tesseractAutoBuyerAmount\r\n  hold.autoOpenCubes = player.autoOpenCubes\r\n  hold.openCubes = player.openCubes\r\n  hold.autoOpenTesseracts = player.autoOpenTesseracts\r\n  hold.openTesseracts = player.openTesseracts\r\n  hold.autoOpenHypercubes = player.autoOpenHypercubes\r\n  hold.openHypercubes = player.openHypercubes\r\n  hold.autoOpenPlatonicsCubes = player.autoOpenPlatonicsCubes\r\n  hold.openPlatonicsCubes = player.openPlatonicsCubes\r\n  hold.historyShowPerSecond = player.historyShowPerSecond\r\n  hold.exporttest = player.exporttest\r\n  hold.dayTimer = player.dayTimer\r\n  hold.dayCheck = player.dayCheck\r\n  hold.ascStatToggles = player.ascStatToggles\r\n  hold.hepteractAutoCraftPercentage = player.hepteractAutoCraftPercentage\r\n  hold.autoWarpCheck = player.autoWarpCheck\r\n  hold.shopBuyMaxToggle = player.shopBuyMaxToggle\r\n  hold.shopHideToggle = player.shopHideToggle\r\n  hold.shopConfirmationToggle = player.shopConfirmationToggle\r\n  hold.researchBuyMaxToggle = player.researchBuyMaxToggle\r\n  hold.cubeUpgradesBuyMaxToggle = player.cubeUpgradesBuyMaxToggle\r\n  hold.wowOcteracts = player.wowOcteracts\r\n  hold.totalWowOcteracts = player.totalWowOcteracts\r\n  hold.overfluxOrbsAutoBuy = player.overfluxOrbsAutoBuy\r\n  hold.hotkeys = player.hotkeys\r\n  hold.theme = player.theme\r\n  hold.notation = player.notation\r\n  hold.firstPlayed = player.firstPlayed\r\n  hold.autoCubeUpgradesToggle = player.autoCubeUpgradesToggle\r\n  hold.autoPlatonicUpgradesToggle = player.autoPlatonicUpgradesToggle\r\n  hold.insideSingularityChallenge = player.insideSingularityChallenge\r\n  hold.singularityChallenges = Object.fromEntries(\r\n    Object.entries(player.singularityChallenges).map(([key, value]) => {\r\n      return [key, {\r\n        completions: value.completions,\r\n        highestSingularityCompleted: value.highestSingularityCompleted,\r\n        enabled: value.enabled\r\n      }]\r\n    })\r\n  ) as Player['singularityChallenges']\r\n  hold.iconSet = player.iconSet\r\n\r\n  // Quark Hepteract craft is saved entirely. For other crafts we only save their auto setting\r\n  hold.hepteractCrafts.quark = player.hepteractCrafts.quark\r\n  for (const craftName of Object.keys(player.hepteractCrafts)) {\r\n    if (craftName !== 'quark') {\r\n      const craftKey = craftName as keyof Player['hepteractCrafts']\r\n      hold.hepteractCrafts[craftKey].AUTO = player.hepteractCrafts[craftKey].AUTO\r\n    }\r\n  }\r\n\r\n  const saveCode42 = player.codes.get(42) ?? false\r\n  const saveCode43 = player.codes.get(43) ?? false\r\n  const saveCode44 = player.codes.get(44) ?? false\r\n  const saveCode45 = player.codes.get(45) ?? false\r\n\r\n  // Import Game\r\n\r\n  /*(for (const obj in blankSave) {\r\n        const k = obj as keyof Player;\r\n        if (k in blankSave) {\r\n            player[k] = blankSave?.[k]\r\n        }\r\n    }*/\r\n  await importSynergism(btoa(JSON.stringify(hold)), true)\r\n  //Techically possible to import game during reset. But that will only \"hurt\" that imported save\r\n\r\n  // TODO: Do not enable data that has never used an event code\r\n  player.codes.set(39, true)\r\n  player.codes.set(40, true)\r\n  player.codes.set(41, true)\r\n  player.codes.set(42, saveCode42)\r\n  player.codes.set(43, saveCode43)\r\n  player.codes.set(44, saveCode44)\r\n  player.codes.set(45, saveCode45)\r\n  updateSingularityMilestoneAwards()\r\n\r\n  player.rngCode = Date.now()\r\n\r\n  // Save again at the end of singularity reset\r\n  void saveSynergy()\r\n}\r\n\r\nconst resetUpgrades = (i: number) => {\r\n  if (i > 2.5) {\r\n    for (let i = 41; i < 61; i++) {\r\n      if (i !== 46) {\r\n        player.upgrades[i] = 0\r\n      }\r\n    }\r\n\r\n    if (player.researches[41] === 0) {\r\n      player.upgrades[46] = 0\r\n    }\r\n\r\n    if (player.researches[41] < 0.5) {\r\n      player.upgrades[88] = 0\r\n    }\r\n    if (player.achievements[50] === 0) {\r\n      player.upgrades[89] = 0\r\n    }\r\n    if (player.researches[42] < 0.5) {\r\n      player.upgrades[90] = 0\r\n    }\r\n    if (player.researches[43] < 0.5) {\r\n      player.upgrades[91] = 0\r\n    }\r\n    if (player.researches[44] < 0.5) {\r\n      player.upgrades[92] = 0\r\n    }\r\n    if (player.researches[45] < 0.5) {\r\n      player.upgrades[93] = 0\r\n    }\r\n\r\n    player.upgrades[116] = 0\r\n    player.upgrades[117] = 0\r\n    player.upgrades[118] = 0\r\n    player.upgrades[119] = 0\r\n    player.upgrades[120] = 0\r\n  }\r\n\r\n  for (let j = 1; j <= 20; j++) {\r\n    player.upgrades[j] = 0\r\n  }\r\n\r\n  // both indices go up by 5, so we can put them together!\r\n  for (let j = 121, k = 106; j <= 125; j++, k++) {\r\n    player.upgrades[j] = 0\r\n    player.upgrades[k] = 0\r\n  }\r\n\r\n  if (i > 1.5) {\r\n    if (player.achievements[4] < 0.5) {\r\n      player.upgrades[81] = 0\r\n    }\r\n    if (player.achievements[11] < 0.5) {\r\n      player.upgrades[82] = 0\r\n    }\r\n    if (player.achievements[18] < 0.5) {\r\n      player.upgrades[83] = 0\r\n    }\r\n    if (player.achievements[25] < 0.5) {\r\n      player.upgrades[84] = 0\r\n    }\r\n    if (player.achievements[32] < 0.5) {\r\n      player.upgrades[85] = 0\r\n    }\r\n    if (player.achievements[87] < 0.5) {\r\n      player.upgrades[86] = 0\r\n    }\r\n    if (player.achievements[80] < 0.5) {\r\n      player.upgrades[87] = 0\r\n    }\r\n\r\n\r\n    player.upgrades[101] = 0\r\n    player.upgrades[102] = 0\r\n    player.upgrades[103] = 0\r\n    player.upgrades[104] = 0\r\n    player.upgrades[105] = 0\r\n\r\n\r\n  }\r\n\r\n  if (i > 1.5) {\r\n    for (let k = 21; k < 41; k++) {\r\n      player.upgrades[k] = 0\r\n    }\r\n\r\n    player.upgrades[111] = 0\r\n    player.upgrades[112] = 0\r\n    player.upgrades[113] = 0\r\n    player.upgrades[114] = 0\r\n    player.upgrades[115] = 0\r\n  }\r\n\r\n  if (i > 1.5) {\r\n    player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0]\r\n    player.crystalUpgradesCost = [7, 15, 20, 40, 100, 200, 500, 1000]\r\n\r\n    let m = 0\r\n    m += Math.floor(G.rune3level * G.effectiveLevelMult / 16) * 100 / 100\r\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n      m += 10\r\n    }\r\n    player.crystalUpgrades = [m, m, m, m, m, m, m, m]\r\n  }\r\n\r\n  if (player.achievements[87] > 0.5) {\r\n    player.upgrades[86] = 1\r\n  }\r\n\r\n  for (let x = 1; x <= 125; x++) {\r\n    upgradeupdate(x, true)\r\n  }\r\n}\r\n\r\nexport const resetAnts = () => {\r\n  player.firstOwnedAnts = 0\r\n  player.secondOwnedAnts = 0\r\n  player.thirdOwnedAnts = 0\r\n  player.fourthOwnedAnts = 0\r\n  player.fifthOwnedAnts = 0\r\n  player.sixthOwnedAnts = 0\r\n  player.seventhOwnedAnts = 0\r\n  player.eighthOwnedAnts = 0\r\n\r\n  player.firstGeneratedAnts = new Decimal('0')\r\n  player.secondGeneratedAnts = new Decimal('0')\r\n  player.thirdGeneratedAnts = new Decimal('0')\r\n  player.fourthGeneratedAnts = new Decimal('0')\r\n  player.fifthGeneratedAnts = new Decimal('0')\r\n  player.sixthGeneratedAnts = new Decimal('0')\r\n  player.seventhGeneratedAnts = new Decimal('0')\r\n  player.eighthGeneratedAnts = new Decimal('0')\r\n\r\n  player.firstCostAnts = new Decimal('1e700')\r\n  player.secondCostAnts = new Decimal('3')\r\n  player.thirdCostAnts = new Decimal('100')\r\n  player.fourthCostAnts = new Decimal('1e4')\r\n  player.fifthCostAnts = new Decimal('1e12')\r\n  player.sixthCostAnts = new Decimal('1e36')\r\n  player.seventhCostAnts = new Decimal('1e100')\r\n  player.eighthCostAnts = new Decimal('1e300')\r\n\r\n  if (player.cubeUpgrades[48] > 0) {\r\n    player.firstOwnedAnts = 1\r\n    player.firstCostAnts = new Decimal('1e741')\r\n  }\r\n\r\n  const ant12 = player.antUpgrades[12-1]\r\n  player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ant12]\r\n  player.antPoints = new Decimal('1')\r\n\r\n  if (player.currentChallenge.ascension === 12) {\r\n    player.antPoints = new Decimal('7')\r\n  }\r\n\r\n  calculateAnts()\r\n  calculateRuneLevels()\r\n}\r\n\r\nconst resetResearches = () => {\r\n  player.researchPoints = 0\r\n  //Array listing all the research indexes deserving of removal\r\n  const destroy = [\r\n    6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25,\r\n    26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\r\n    51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70,\r\n    76, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98,\r\n    101, 102, 103, 104, 106, 107, 108, 109, 110, 116, 117, 118, 121, 122, 123,\r\n    126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 146, 147, 148, 149,\r\n    151, 152, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 174,\r\n    176, 177, 178, 179, 181, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199\r\n  ]\r\n\r\n  if (player.highestSingularityCount < 25) {\r\n    destroy.push(138, 153, 168, 183, 198)\r\n  }\r\n\r\n  for (const item of destroy) {\r\n    player.researches[item] = 0\r\n  }\r\n}\r\n\r\nconst resetTalismans = () => {\r\n  player.talismanLevels = [0, 0, 0, 0, 0, 0, 0]\r\n  player.talismanRarity = [1, 1, 1, 1, 1, 1, 1]\r\n\r\n  player.talismanShards = 0\r\n  player.commonFragments = 0\r\n  player.uncommonFragments = 0\r\n  player.rareFragments = 0\r\n  player.epicFragments = 0\r\n  player.legendaryFragments = 0\r\n  player.mythicalFragments = 0\r\n}\r\n", "import { sacrificeAnts } from './Ants'\r\nimport { buyAccelerator, boostAccelerator, buyMultiplier } from './Buy'\r\nimport { player, resetCheck, synergismHotkeys } from './Synergism'\r\nimport { toggleAutoChallengeRun, toggleCorruptionLevel, confirmReply } from './Toggles'\r\nimport { Alert, Prompt, Confirm } from './UpdateHTML'\r\nimport { Globals as G } from './Variables'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { useConsumable } from  './Shop'\r\nimport { promocodes } from './ImportExport'\r\nimport { keyboardTabChange as kbTabChange } from './Tabs'\r\n\r\nexport const defaultHotkeys = new Map<string, [string, () => unknown, boolean]>([\r\n  ['A', ['Buy Accelerators', () => buyAccelerator(), false]],\r\n  ['B', ['Boost Accelerator', () => boostAccelerator(), false]],\r\n  ['C', ['Auto Challenge', () => {\r\n    toggleChallengeSweep()\r\n  }, false]],\r\n  ['E', ['Exit T / R Challenge', () => {\r\n    if (player.autoChallengeRunning) {\r\n      toggleChallengeSweep()\r\n    } else {\r\n      exitTranscendAndPrestigeChallenge()\r\n    }\r\n  }, false]],\r\n  ['M', ['Multipliers', () => buyMultiplier(), false]],\r\n  ['N', ['No (Cancel)', () => confirmReply(false), true]],\r\n  ['P', ['Reset Prestige', () => resetCheck('prestige'), false]],\r\n  ['R', ['Reset Reincarnate', () => resetCheck('reincarnation'), false]],\r\n  ['S', ['Sacrifice Ants', () => sacrificeAnts(), false]],\r\n  ['T', ['Reset Transcend', () => resetCheck('transcension'), false]],\r\n  ['Y', ['Yes (OK)', () => confirmReply(true), true]],\r\n  ['ARROWLEFT', ['Back a tab', () => kbTabChange(-1), false]],\r\n  ['ARROWRIGHT', ['Next tab', () => kbTabChange(1), false]],\r\n  ['ARROWUP', ['Back a subtab', () => kbTabChange(-1, true), false]],\r\n  ['ARROWDOWN', ['Next subtab', () => kbTabChange(1, true), false]],\r\n  ['SHIFT+A', ['Reset Ascend', () => resetCheck('ascension'), false]],\r\n  ['SHIFT+C', ['Cleanse Corruptions', () => toggleCorruptionLevel(10, 999), false]],\r\n  ['SHIFT+D', ['Spec. Action Add x1', () => promocodes('add', 1), false]],\r\n  ['SHIFT+E', ['Exit Asc. Challenge', () => resetCheck('ascensionChallenge'), false]], // Its already checks if inside Asc. Challenge\r\n  ['SHIFT+O', ['Use Off. Potion', () => useConsumable('offeringPotion'), false]],\r\n  ['SHIFT+P', ['Use Obt. Potion', () => useConsumable('obtainiumPotion'), false]],\r\n  ['SHIFT+S', ['Reset Singularity', () => resetCheck('singularity'), false]]\r\n])\r\n\r\nexport let hotkeysEnabled = false\r\n\r\nexport let hotkeys = new Map<string, [string, () => unknown, boolean]>(defaultHotkeys)\r\n\r\nconst toggleChallengeSweep = (): void => {\r\n  if (player.researches[150] > 0) {\r\n    toggleAutoChallengeRun()\r\n    if (!player.autoChallengeRunning) {\r\n      exitTranscendAndPrestigeChallenge()\r\n    }\r\n  }\r\n}\r\n\r\nconst exitTranscendAndPrestigeChallenge = () => {\r\n  if (player.currentChallenge.reincarnation !== 0) {\r\n    void resetCheck('reincarnationChallenge', undefined, true)\r\n  }\r\n  if (player.currentChallenge.transcension !== 0) {\r\n    void resetCheck('transcensionChallenge', undefined, true)\r\n  }\r\n}\r\n\r\nconst eventHotkeys = (event: KeyboardEvent): void => {\r\n  if (!hotkeysEnabled || !player.toggles[39]) {\r\n    // There was a race condition where a user could spam Shift + S + Enter to\r\n    // Singularity which would cause a bug when rune 7 was bought. To prevent this,\r\n    // the game disables hotkeys when on the offline progress screen, and re-\r\n    // enables them when the user leaves.\r\n    return\r\n  }\r\n\r\n  if (document.activeElement?.localName === 'input') {\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\r\n    // finally fixes the bug where hotkeys would be activated when typing in an input field\r\n    return event.stopPropagation()\r\n  }\r\n\r\n  synergismHotkeys(event, event.code.replace(/^(Digit|Numpad)/, '').toUpperCase())\r\n\r\n  let keyPrefix = ''\r\n  if (event.ctrlKey) {\r\n    keyPrefix += 'CTRL+'\r\n  }\r\n  if (event.shiftKey) {\r\n    keyPrefix += 'SHIFT+'\r\n  }\r\n  if (event.altKey) {\r\n    keyPrefix += 'ALT+'\r\n  }\r\n  const key = keyPrefix + event.key.toUpperCase()\r\n\r\n  // Disable the TAB key as it may allow unexpected operations\r\n  if (key === 'TAB') {\r\n    event.preventDefault()\r\n  }\r\n\r\n  // Disable hotkeys if notifications are occurring\r\n  if (key !== 'ENTER' && DOMCacheGetOrSet('transparentBG').style.display === 'block') {\r\n    if (hotkeys.has(key) && (!hotkeys.get(key)![2])) {\r\n      return\r\n    }\r\n  }\r\n\r\n  let hotkeyName = ''\r\n  if (hotkeys.has(key)) {\r\n    hotkeyName = '' + hotkeys.get(key)![0]\r\n        hotkeys.get(key)![1]()\r\n        event.preventDefault()\r\n  }\r\n\r\n  if (G.currentTab === 'settings' && player.subtabNumber === 6) {\r\n    DOMCacheGetOrSet('lastHotkey').textContent = key\r\n    DOMCacheGetOrSet('lastHotkeyName').textContent = hotkeyName\r\n  }\r\n}\r\n\r\nconst makeSlot = (key: string, descr: string) => {\r\n  const div = document.createElement('div')\r\n  div.classList.add('hotkeyItem')\r\n\r\n  const span = document.createElement('span')\r\n  span.id = 'actualHotkey'\r\n  span.textContent = key\r\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n  span.addEventListener('click', async (e) => {\r\n    const target = e.target as HTMLElement\r\n    const oldKey = target.textContent!.toUpperCase()\r\n    const name =\r\n            hotkeys.get(oldKey)?.[0] ??\r\n            target.nextSibling?.textContent\r\n\r\n    // new value to set key as, unformatted\r\n    const newKey = await Prompt(`\r\n        Enter the new key you want to activate ${name} with.\r\n\r\n        MDN has a list of values for \"special keys\" if you would like to use one:\r\n        https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\r\n\r\n        You can also prefix your hotkey with [Ctrl,Shift,Alt]+<key>\r\n        `)\r\n\r\n    if (typeof newKey !== 'string') {\r\n      return\r\n    }\r\n\r\n    const toSet = newKey.toUpperCase()\r\n\r\n    if (newKey.length === 0) {\r\n      return void Alert('You didn\\'t enter anything, canceled!')\r\n    }\r\n\r\n    if (!isNaN(Number(newKey))) {\r\n      return void Alert('Number keys are currently unavailable!')\r\n    }\r\n\r\n    if (hotkeys.has(toSet) || oldKey === toSet) {\r\n      return void Alert('That key is already binded to an action, use another key instead!')\r\n    } else if (hotkeys.has(oldKey)) {\r\n      const old = hotkeys.get(oldKey)!\r\n\r\n      hotkeys.set(toSet, old)\r\n      hotkeys.delete(oldKey)\r\n\r\n      const keys = Object.keys(player.hotkeys)\r\n      player.hotkeys[keys.length] = [oldKey, toSet]\r\n\r\n      target.textContent = toSet\r\n\r\n      enableHotkeys()\r\n    } else {\r\n      return void Alert(`No hotkey is triggered by ${oldKey}!`)\r\n    }\r\n  })\r\n\r\n  const p = document.createElement('p')\r\n  p.id = 'hotKeyDesc'\r\n  p.textContent = descr\r\n\r\n  div.appendChild(span)\r\n  div.appendChild(p)\r\n\r\n  return div\r\n}\r\n\r\nexport const disableHotkeys = () => hotkeysEnabled = false\r\n\r\nexport const enableHotkeys = () => {\r\n  changeHotkeys()\r\n\r\n  const hotkey = document.querySelector('.hotkeys')!\r\n\r\n  for (const child of Array.from(hotkey.children)) {\r\n    hotkey.removeChild(child)\r\n  }\r\n\r\n  for (const [key, [descr]] of [...hotkeys.entries()]) {\r\n    const div = makeSlot(key, descr)\r\n\r\n    hotkey.appendChild(div)\r\n  }\r\n\r\n  hotkeysEnabled = true\r\n}\r\n\r\nexport const changeHotkeys = () => {\r\n  hotkeys = new Map(defaultHotkeys)\r\n\r\n  for (const key in player.hotkeys) {\r\n    const oldKey = player.hotkeys[key][0]\r\n    const toSet = player.hotkeys[key][1]\r\n    if (hotkeys.has(oldKey)) {\r\n      const old = hotkeys.get(oldKey)!\r\n      hotkeys.set(toSet, old)\r\n      hotkeys.delete(oldKey)\r\n    } else {\r\n      Reflect.deleteProperty(player.hotkeys, key)\r\n    }\r\n  }\r\n}\r\n\r\nexport const resetHotkeys = async () => {\r\n  enableHotkeys()\r\n\r\n  const keys = Object.keys(player.hotkeys)\r\n  if (keys.length === 0) {\r\n    return await Alert('You haven\\'t changed the hotkey')\r\n  }\r\n\r\n  let settext = ''\r\n  const hotkey = new Map(defaultHotkeys)\r\n  for (const key in player.hotkeys) {\r\n    const oldKey = player.hotkeys[key][0]\r\n    const toSet = player.hotkeys[key][1]\r\n    if (hotkey.has(oldKey)) {\r\n      const old = hotkey.get(oldKey)!\r\n      settext += `\\t${oldKey}[${old[0]}] to ${toSet}, `\r\n      hotkey.set(toSet, old)\r\n      hotkey.delete(oldKey)\r\n    }\r\n  }\r\n\r\n  const confirmed = await Confirm(`Are you sure you want to default all the changed hotkeys?\\nBelow is a history of hotkeys you have changed\\n\\n${settext}`)\r\n  if (confirmed) {\r\n    hotkeys = new Map(defaultHotkeys)\r\n    player.hotkeys = {}\r\n    enableHotkeys()\r\n  }\r\n}\r\n\r\ndocument.addEventListener('keydown', eventHotkeys)\r\n", "import { player, saveSynergy, format, resourceGain, updateAll, getTimePinnedToLoadDate } from './Synergism'\r\nimport { sumContents, productContents } from './Utility'\r\nimport { Globals as G } from './Variables'\r\nimport { CalcECC } from './Challenges'\r\nimport Decimal from 'break_infinity.js'\r\nimport { toggleTalismanBuy, updateTalismanInventory } from './Talismans'\r\nimport { reset } from './Reset'\r\nimport { achievementaward } from './Achievements'\r\nimport type { resetNames } from './types/Synergism'\r\nimport { hepteractEffective } from './Hepteracts'\r\nimport { addTimers, automaticTools } from './Helper'\r\nimport { Alert, Prompt } from './UpdateHTML'\r\nimport { quarkHandler } from './Quark'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { calculateSingularityDebuff } from './singularity'\r\nimport { calculateEventSourceBuff } from './Event'\r\nimport { disableHotkeys, enableHotkeys } from './Hotkeys'\r\nimport { setInterval, clearInterval } from './Timers'\r\nimport { getFastForwardTotalMultiplier } from './singularity'\r\nimport i18next from 'i18next'\r\n\r\nexport const calculateTotalCoinOwned = () => {\r\n  G.totalCoinOwned =\r\n        player.firstOwnedCoin +\r\n        player.secondOwnedCoin +\r\n        player.thirdOwnedCoin +\r\n        player.fourthOwnedCoin +\r\n        player.fifthOwnedCoin\r\n}\r\n\r\nexport const calculateTotalAcceleratorBoost = () => {\r\n  let b = 0\r\n  if (player.upgrades[26] > 0.5) {\r\n    b += 1\r\n  }\r\n  if (player.upgrades[31] > 0.5) {\r\n    b += Math.floor(G.totalCoinOwned / 2000) * 100 / 100\r\n  }\r\n  if (player.achievements[7] > 0.5) {\r\n    b += Math.floor(player.firstOwnedCoin / 2000)\r\n  }\r\n  if (player.achievements[14] > 0.5) {\r\n    b += Math.floor(player.secondOwnedCoin / 2000)\r\n  }\r\n  if (player.achievements[21] > 0.5) {\r\n    b += Math.floor(player.thirdOwnedCoin / 2000)\r\n  }\r\n  if (player.achievements[28] > 0.5) {\r\n    b += Math.floor(player.fourthOwnedCoin / 2000)\r\n  }\r\n  if (player.achievements[35] > 0.5) {\r\n    b += Math.floor(player.fifthOwnedCoin / 2000)\r\n  }\r\n\r\n  b += player.researches[93] * Math.floor(1 / 20 * (G.rune1level + G.rune2level + G.rune3level + G.rune4level + G.rune5level))\r\n  b += Math.floor((0.01 + G.rune1level) * G.effectiveLevelMult / 20)\r\n  b *= (1 + 1 / 5 * player.researches[3] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\r\n  b *= (1 + 1 / 20 * player.researches[16] + 1 / 20 * player.researches[17])\r\n  b *= (1 + 1 / 20 * player.researches[88])\r\n  b *= calculateSigmoidExponential(20, (player.antUpgrades[4-1]! + G.bonusant4) / 1000 * 20 / 19)\r\n  b *= (1 + 1 / 100 * player.researches[127])\r\n  b *= (1 + 0.8 / 100 * player.researches[142])\r\n  b *= (1 + 0.6 / 100 * player.researches[157])\r\n  b *= (1 + 0.4 / 100 * player.researches[172])\r\n  b *= (1 + 0.2 / 100 * player.researches[187])\r\n  b *= (1 + 0.01 / 100 * player.researches[200])\r\n  b *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\r\n  b *= (1 + 1/1000 * hepteractEffective('acceleratorBoost'))\r\n  if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n    b *= 2\r\n  }\r\n  b = Math.min(1e100, Math.floor(b))\r\n  G.freeAcceleratorBoost = b\r\n\r\n  G.totalAcceleratorBoost = Math.floor(player.acceleratorBoostBought + G.freeAcceleratorBoost) * 100 / 100\r\n}\r\n\r\nexport const calculateAcceleratorMultiplier = () => {\r\n  G.acceleratorMultiplier = 1\r\n  G.acceleratorMultiplier *= (1 + player.achievements[60] / 100)\r\n  G.acceleratorMultiplier *= (1 + player.achievements[61] / 100)\r\n  G.acceleratorMultiplier *= (1 + player.achievements[62] / 100)\r\n  G.acceleratorMultiplier *= (1 + 1 / 5 * player.researches[1] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\r\n  G.acceleratorMultiplier *= (1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10])\r\n  G.acceleratorMultiplier *= (1 + 1 / 20 * player.researches[86])\r\n  G.acceleratorMultiplier *= (1 + 1 / 100 * player.researches[126])\r\n  G.acceleratorMultiplier *= (1 + 0.8 / 100 * player.researches[141])\r\n  G.acceleratorMultiplier *= (1 + 0.6 / 100 * player.researches[156])\r\n  G.acceleratorMultiplier *= (1 + 0.4 / 100 * player.researches[171])\r\n  G.acceleratorMultiplier *= (1 + 0.2 / 100 * player.researches[186])\r\n  G.acceleratorMultiplier *= (1 + 0.01 / 100 * player.researches[200])\r\n  G.acceleratorMultiplier *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\r\n  G.acceleratorMultiplier *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25])\r\n  if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\r\n    G.acceleratorMultiplier *= 1.25\r\n  }\r\n}\r\n\r\nexport const calculateRecycleMultiplier = () => {\r\n  // Factors where recycle bonus comes from\r\n  const recycleFactors = sumContents([\r\n    0.05 * player.achievements[80],\r\n    0.05 * player.achievements[87],\r\n    0.05 * player.achievements[94],\r\n    0.05 * player.achievements[101],\r\n    0.05 * player.achievements[108],\r\n    0.05 * player.achievements[115],\r\n    0.075 * player.achievements[122],\r\n    0.075 * player.achievements[129],\r\n    0.05 * player.upgrades[61],\r\n    0.25 * Math.min(1, G.rune4level / 400),\r\n    0.005 * player.cubeUpgrades[2]\r\n  ])\r\n\r\n  return 1 / (1 - recycleFactors)\r\n}\r\n\r\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean, runeLevel: number, returnFactors: true): number[]\r\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean, runeLevel?: number, returnFactors?: false): number\r\nexport function calculateRuneExpGiven(runeIndex: number, all = false, runeLevel = player.runelevels[runeIndex], returnFactors = false) {\r\n  // recycleMult accounted for all recycle chance, but inversed so it's a multiplier instead\r\n  const recycleMultiplier = calculateRecycleMultiplier()\r\n\r\n  // Rune multiplier that is summed instead of added\r\n  let allRuneExpAdditiveMultiplier: number | null = null\r\n  if (all) {\r\n    allRuneExpAdditiveMultiplier = sumContents([\r\n      //Challenge 3 completions\r\n      1 / 100 * player.highestchallengecompletions[3],\r\n      //Reincarnation 2x1\r\n      1 * player.upgrades[66]\r\n    ])\r\n  } else {\r\n    allRuneExpAdditiveMultiplier = sumContents([\r\n      // Base amount multiplied per offering\r\n      1,\r\n      // +1 if C1 completion\r\n      Math.min(1, player.highestchallengecompletions[1]),\r\n      // +0.10 per C1 completion\r\n      0.4 / 10 * player.highestchallengecompletions[1],\r\n      // Research 5x2\r\n      0.6 * player.researches[22],\r\n      // Research 5x3\r\n      0.3 * player.researches[23],\r\n      // Particle Upgrade 1x1\r\n      2 * player.upgrades[61],\r\n      // Particle upgrade 3x1\r\n      player.upgrades[71] * runeLevel / 25\r\n    ])\r\n  }\r\n\r\n  // Rune multiplier that gets applied to all runes\r\n  const allRuneExpMultiplier = productContents([\r\n    // Research 4x16\r\n    1 + (player.researches[91] / 20),\r\n    // Research 4x17\r\n    1 + (player.researches[92] / 20),\r\n    // Ant 8\r\n    calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8-1]! + G.bonusant8, 1.1)),\r\n    // Cube Bonus\r\n    G.cubeBonusMultiplier[4],\r\n    // Cube Upgrade Bonus\r\n    (1 + player.ascensionCounter / 1000 * player.cubeUpgrades[32]),\r\n    // Constant Upgrade Multiplier\r\n    1 + 1 / 10 * player.constantUpgrades[8],\r\n    // Challenge 15 reward multiplier\r\n    G.challenge15Rewards.runeExp\r\n  ])\r\n  // Corruption Divisor\r\n  const droughtEffect = 1 / Math.pow(G.droughtMultiplier[player.usedCorruptions[8]], 1 - 1 / 2 * player.platonicUpgrades[13])\r\n\r\n  // Rune multiplier that gets applied to specific runes\r\n  const runeExpMultiplier = [\r\n    productContents([\r\n      1 + (player.researches[78] / 50), 1 + (player.researches[111] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10), droughtEffect\r\n    ]),\r\n    productContents([\r\n      1 + (player.researches[80] / 50), 1 + (player.researches[112] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10), droughtEffect\r\n    ]),\r\n    productContents([\r\n      1 + (player.researches[79] / 50), 1 + (player.researches[113] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[8]) / 5), droughtEffect\r\n    ]),\r\n    productContents([\r\n      1 + (player.researches[77] / 50), 1 + (player.researches[114] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[6]) / 10), droughtEffect\r\n    ]),\r\n    productContents([\r\n      1 + (player.researches[83] / 20), 1 + (player.researches[115] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[9]) / 5), droughtEffect\r\n    ]),\r\n    productContents([1]),\r\n    productContents([1])\r\n  ]\r\n\r\n  const fact = [\r\n    allRuneExpAdditiveMultiplier,\r\n    allRuneExpMultiplier,\r\n    recycleMultiplier,\r\n    runeExpMultiplier[runeIndex]\r\n  ]\r\n\r\n  return returnFactors ? fact : Math.min(1e200, productContents(fact))\r\n}\r\n\r\nexport const lookupTableGen = (runeLevel: number) => {\r\n  // Rune exp required to level multipliers\r\n  const allRuneExpRequiredMultiplier = productContents([\r\n    Math.pow((runeLevel + 1) / 2, 3),\r\n    ((3.5 * runeLevel) + 100) / 500,\r\n    Math.max(1, (runeLevel - 200) / 9),\r\n    Math.max(1, (runeLevel - 400) / 12),\r\n    Math.max(1, (runeLevel - 600) / 15),\r\n    Math.max(1, Math.pow(1.03, (runeLevel - 800) / 4))\r\n  ])\r\n\r\n  return allRuneExpRequiredMultiplier\r\n}\r\n\r\nlet lookupTableRuneExp: number[] | null = null\r\n\r\n// Returns the amount of exp required to level a rune\r\nexport const calculateRuneExpToLevel = (runeIndex: number, runeLevel = player.runelevels[runeIndex]) => {\r\n  lookupTableRuneExp ??= Array.from({ length: 40000 }, (_, i) => lookupTableGen(i))\r\n\r\n  // For runes 6 and 7 we will apply a special multiplier\r\n  let multiplier = lookupTableRuneExp[runeLevel]\r\n  if (runeIndex === 5) {\r\n    multiplier = Math.pow(100, runeLevel)\r\n  }\r\n  if (runeIndex === 6) {\r\n    multiplier = Math.pow(1e25, runeLevel) * (player.highestSingularityCount + 1)\r\n  }\r\n  return multiplier * G.runeexpbase[runeIndex]\r\n}\r\n\r\nexport const calculateMaxRunes = (i: number) => {\r\n  let max = 1000\r\n\r\n  const increaseAll = 20 * (player.cubeUpgrades[16] + player.cubeUpgrades[37])\r\n        + 3 * player.constantUpgrades[7] + 80 * CalcECC('ascension', player.challengecompletions[11])\r\n        + 200 * CalcECC('ascension', player.challengecompletions[14])\r\n        + Math.floor(0.04 * player.researches[200] + 0.04 * player.cubeUpgrades[50])\r\n  const increaseMaxLevel = [\r\n    null,\r\n    10 * (player.researches[78] + player.researches[111]) + increaseAll,\r\n    10 * (player.researches[80] + player.researches[112]) + increaseAll,\r\n    10 * (player.researches[79] + player.researches[113]) + increaseAll,\r\n    10 * (player.researches[77] + player.researches[114]) + increaseAll,\r\n    10 * player.researches[115] + increaseAll,\r\n    -901,\r\n    -999\r\n  ]\r\n\r\n  max = (increaseMaxLevel[i]! > G.runeMaxLvl ? G.runeMaxLvl : max + increaseMaxLevel[i]!)\r\n  return max\r\n}\r\n\r\nexport const calculateEffectiveIALevel = () => {\r\n  return player.runelevels[5] + Math.max(0, player.runelevels[5] - 74) + Math.max(0, player.runelevels[5] - 98)\r\n}\r\n\r\nexport function calculateOfferings(input: resetNames): number\r\nexport function calculateOfferings(input: resetNames, calcMult: false, statistic?: boolean): number[]\r\nexport function calculateOfferings(input: resetNames, calcMult: true, statistic: boolean): number\r\nexport function calculateOfferings(input: resetNames, calcMult = true, statistic = false) {\r\n\r\n  if (input == 'acceleratorBoost' || input == 'ascension' || input == 'ascensionChallenge') {\r\n    return 0\r\n  }\r\n\r\n  let q = 0\r\n  let a = 0\r\n  let b = 0\r\n  let c = 0\r\n\r\n  if (input == 'reincarnation' || input == 'reincarnationChallenge') {\r\n    a += 3\r\n    if (player.achievements[52] > 0.5) {\r\n      a += (25 * Math.min(player.reincarnationcounter / 1800, 1))\r\n    }\r\n    if (player.upgrades[62] > 0.5) {\r\n      a += 1 / 50 * (sumContents(player.challengecompletions))\r\n    }\r\n    a += 0.6 * player.researches[25]\r\n    if (player.researches[95] === 1) {\r\n      a += 4\r\n    }\r\n    a += 1 / 200 * G.rune5level * G.effectiveLevelMult * (1 + player.researches[85] / 200)\r\n    a *= (1 + Math.pow(Decimal.log(player.reincarnationShards.add(1), 10), 2 / 3) / 4)\r\n    a *= Math.min(Math.pow(player.reincarnationcounter / 10 + 1, 2), 1)\r\n    if (player.reincarnationcounter >= 5) {\r\n      a *= Math.max(1, player.reincarnationcounter / 10)\r\n    }\r\n\r\n  }\r\n  if (input == 'transcension' || input == 'transcensionChallenge' || input == 'reincarnation' ||\r\n        input == 'reincarnationChallenge') {\r\n    b += 2\r\n    if (player.reincarnationCount > 0) {\r\n      b += 2\r\n    }\r\n    if (player.achievements[44] > 0.5) {\r\n      b += (15 * Math.min(player.transcendcounter / 1800, 1))\r\n    }\r\n    if (player.challengecompletions[2] > 0) {\r\n      b += 1\r\n    }\r\n    b += 0.2 * player.researches[24]\r\n    b += 1 / 200 * G.rune5level * G.effectiveLevelMult * (1 + player.researches[85] / 200)\r\n    b *= (1 + Math.pow(Decimal.log(player.transcendShards.add(1), 10), 1 / 2) / 5)\r\n    b *= (1 + CalcECC('reincarnation', player.challengecompletions[8]) / 25)\r\n    b *= Math.min(Math.pow(player.transcendcounter / 10, 2), 1)\r\n    if (player.transcendCount >= 5) {\r\n      b *= Math.max(1, player.transcendcounter / 10)\r\n    }\r\n  }\r\n  // This will always be calculated if '0' is not already returned\r\n  c += 1\r\n  if (player.transcendCount > 0 || player.reincarnationCount > 0) {\r\n    c += 1\r\n  }\r\n  if (player.reincarnationCount > 0) {\r\n    c += 2\r\n  }\r\n  if (player.achievements[37] > 0.5) {\r\n    c += (15 * Math.min(player.prestigecounter / 1800, 1))\r\n  }\r\n  if (player.challengecompletions[2] > 0) {\r\n    c += 1\r\n  }\r\n  c += 0.2 * player.researches[24]\r\n  c += 1 / 200 * G.rune5level * G.effectiveLevelMult * (1 + player.researches[85] / 200)\r\n  c *= (1 + Math.pow(Decimal.log(player.prestigeShards.add(1), 10), 1 / 2) / 5)\r\n  c *= (1 + CalcECC('reincarnation', player.challengecompletions[6]) / 50)\r\n  c *= Math.min(Math.pow(player.prestigecounter / 10, 2), 1)\r\n  if (player.prestigeCount >= 5) {\r\n    c *= Math.max(1, player.prestigecounter / 10)\r\n  }\r\n  q = a + b + c\r\n\r\n  const arr = [\r\n    1 + 10 * player.achievements[33] / 100, // Alchemy Achievement 5\r\n    1 + 15 * player.achievements[34] / 100, // Alchemy Achievement 6\r\n    1 + 25 * player.achievements[35] / 100, // Alchemy Achievement 7\r\n    1 + 20 * player.upgrades[38] / 100, // Diamond Upgrade 4x3\r\n    1 + player.upgrades[75] * 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5)), // Particle Upgrade 3x5\r\n    1 + 1 / 50 * player.shopUpgrades.offeringAuto, // Auto Offering Shop\r\n    1 + 1 / 25 * player.shopUpgrades.offeringEX, // Offering EX Shop\r\n    1 + 1 / 100 * player.shopUpgrades.cashGrab, // Cash Grab\r\n    1 + 1 / 10000 * sumContents(player.challengecompletions) * player.researches[85], // Research 4x10\r\n    1 + Math.pow((player.antUpgrades[6-1]! + G.bonusant6), .66), // Ant Upgrade:\r\n    G.cubeBonusMultiplier[3], // Brutus\r\n    1 + 0.02 * player.constantUpgrades[3], // Constant Upgrade 3\r\n    1 + 0.0003 * player.talismanLevels[3-1] * player.researches[149] + 0.0004 * player.talismanLevels[3-1] * player.researches[179], // Research 6x24,8x4\r\n    1 + 0.12 * CalcECC('ascension', player.challengecompletions[12]), // Challenge 12\r\n    1 + 0.01 / 100 * player.researches[200], // Research 8x25\r\n    1 + Math.min(1, player.ascensionCount / 1e6) * player.achievements[187], // Ascension Count Achievement\r\n    1 + .6 * player.achievements[250] + 1 * player.achievements[251], // Sun&Moon Achievements\r\n    1 + 0.05 * player.cubeUpgrades[46],  // Cube Upgrade 5x6\r\n    1 + 0.02 / 100 * player.cubeUpgrades[50],  // Cube Upgrade 5x10\r\n    1 + player.platonicUpgrades[5],  // Platonic ALPHA\r\n    1 + 2.5 * player.platonicUpgrades[10], // Platonic BETA\r\n    1 + 5 * player.platonicUpgrades[15], // Platonic OMEGA\r\n    G.challenge15Rewards.offering, // C15 Reward\r\n    1 + 5 * (player.singularityUpgrades.starterPack.getEffect().bonus ? 1 : 0), // Starter Pack Upgrade\r\n    +player.singularityUpgrades.singOfferings1.getEffect().bonus, // Offering Charge GQ Upgrade\r\n    +player.singularityUpgrades.singOfferings2.getEffect().bonus, // Offering Storm GQ Upgrade\r\n    +player.singularityUpgrades.singOfferings3.getEffect().bonus, // Offering Tempest GQ Upgrade\r\n    +player.singularityUpgrades.singCitadel.getEffect().bonus, // Citadel GQ Upgrade\r\n    +player.singularityUpgrades.singCitadel2.getEffect().bonus, // Citadel 2 GQ Upgrade\r\n    1 + player.cubeUpgrades[54] / 100, // Cube upgrade 6x4 (Cx4)\r\n    +player.octeractUpgrades.octeractOfferings1.getEffect().bonus, // Offering Electrolosis OC Upgrade\r\n    1 + calculateEventBuff('Offering') // Event\r\n  ]\r\n\r\n  if (calcMult) {\r\n    q *= productContents(arr)\r\n  } else {\r\n    return arr\r\n  }\r\n\r\n  if (statistic) {\r\n    return productContents(arr)\r\n  }\r\n\r\n  if (G.eventClicked && G.isEvent) {\r\n    q *= 1.05\r\n  }\r\n  q /= calculateSingularityDebuff('Offering')\r\n  q = Math.floor(q) * 100 / 100\r\n  if (player.currentChallenge.ascension === 15) {\r\n    q *= (1 + 7 * player.cubeUpgrades[62])\r\n  }\r\n  q *= (1 + 1/200 * player.shopUpgrades.cashGrab2)\r\n  q *= (1 + 1/100 * player.shopUpgrades.offeringEX2 * player.singularityCount)\r\n  q *= Math.pow(1.02, player.shopUpgrades.offeringEX3)\r\n  q *= calculateTotalOcteractOfferingBonus()\r\n  q = Math.min(1e300, q)\r\n\r\n  let persecond = 0\r\n  if (input === 'prestige') {\r\n    persecond = q / (1 + player.prestigecounter)\r\n  }\r\n  if (input === 'transcension' || input == 'transcensionChallenge') {\r\n    persecond = q / (1 + player.transcendcounter)\r\n  }\r\n  if (input === 'reincarnation' || input == 'reincarnationChallenge') {\r\n    persecond = q / (1 + player.reincarnationcounter)\r\n  }\r\n  if (persecond > player.offeringpersecond) {\r\n    player.offeringpersecond = persecond\r\n  }\r\n\r\n  return q\r\n}\r\n\r\nexport const calculateObtainium = () => {\r\n  G.obtainiumGain = 1\r\n  if (player.upgrades[69] > 0) {\r\n    G.obtainiumGain *= Math.min(10, new Decimal(Decimal.pow(Decimal.log(G.reincarnationPointGain.add(10), 10), 0.5)).toNumber())\r\n  }\r\n  if (player.upgrades[72] > 0) {\r\n    G.obtainiumGain *= Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2\r\n             * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10]))\r\n  }\r\n  if (player.upgrades[74] > 0) {\r\n    G.obtainiumGain *= (1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5)))\r\n  }\r\n  G.obtainiumGain *= (1 + player.researches[65] / 5)\r\n  G.obtainiumGain *= (1 + player.researches[76] / 10)\r\n  G.obtainiumGain *= (1 + player.researches[81] / 10)\r\n  G.obtainiumGain *= (1 + player.shopUpgrades.obtainiumAuto / 50)\r\n  G.obtainiumGain *= (1 + player.shopUpgrades.cashGrab / 100)\r\n  G.obtainiumGain *= (1 + G.rune5level / 200 * G.effectiveLevelMult * (1 + player.researches[84] / 200 * (1 + 1 * G.effectiveRuneSpiritPower[5] * calculateCorruptionPoints() / 400)))\r\n  G.obtainiumGain *= (1 + 0.01 * player.achievements[84] + 0.03 * player.achievements[91] + 0.05 * player.achievements[98] + 0.07\r\n         * player.achievements[105] + 0.09 * player.achievements[112] + 0.11 * player.achievements[119] + 0.13 * player.achievements[126] + 0.15\r\n         * player.achievements[133] + 0.17 * player.achievements[140] + 0.19 * player.achievements[147])\r\n  G.obtainiumGain *= (1 + 2 * Math.pow((player.antUpgrades[10-1]! + G.bonusant10) / 50, 2 / 3))\r\n  G.obtainiumGain *= (1 + player.achievements[188] * Math.min(2, player.ascensionCount / 5e6))\r\n  G.obtainiumGain *= (1 + 0.6 * player.achievements[250] + 1 * player.achievements[251])\r\n  G.obtainiumGain *= G.cubeBonusMultiplier[5]\r\n  G.obtainiumGain *= (1 + 0.04 * player.constantUpgrades[4])\r\n  G.obtainiumGain *= (1 + 0.1 * player.cubeUpgrades[47])\r\n  G.obtainiumGain *= (1 + 0.1 * player.cubeUpgrades[3])\r\n  G.obtainiumGain *= (1 + 0.5 * CalcECC('ascension', player.challengecompletions[12]))\r\n  G.obtainiumGain *= (1 + calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[4])\r\n  G.obtainiumGain *= (1 + 0.03 * Math.log(player.uncommonFragments + 1) / Math.log(4) * player.researches[144])\r\n  G.obtainiumGain *= (1 + 0.02 / 100 * player.cubeUpgrades[50])\r\n  if (player.achievements[53] > 0) {\r\n    G.obtainiumGain *= (1 + 1 / 800 * (G.runeSum))\r\n  }\r\n  if (player.achievements[128]) {\r\n    G.obtainiumGain *= 1.5\r\n  }\r\n  if (player.achievements[129]) {\r\n    G.obtainiumGain *= 1.25\r\n  }\r\n\r\n  if (player.achievements[51] > 0) {\r\n    G.obtainiumGain += 4\r\n  }\r\n  if (player.reincarnationcounter >= 2) {\r\n    G.obtainiumGain += 1 * player.researches[63]\r\n  }\r\n  if (player.reincarnationcounter >= 5) {\r\n    G.obtainiumGain += 2 * player.researches[64]\r\n  }\r\n  G.obtainiumGain *= Math.min(1, Math.pow(player.reincarnationcounter / 10, 2))\r\n  G.obtainiumGain *= (1 + 1 / 25 * player.shopUpgrades.obtainiumEX)\r\n  if (player.reincarnationCount >= 5) {\r\n    G.obtainiumGain *= Math.max(1, player.reincarnationcounter / 10)\r\n  }\r\n  G.obtainiumGain *= Math.pow(Decimal.log(player.transcendShards.add(1), 10) / 300, 2)\r\n  G.obtainiumGain = Math.pow(G.obtainiumGain, Math.min(1, G.illiteracyPower[player.usedCorruptions[5]] * (1 + 9 / 100 * player.platonicUpgrades[9] * Math.min(100, Math.log10(player.researchPoints + 10)))))\r\n  G.obtainiumGain *= (1 + 4 / 100 * player.cubeUpgrades[42])\r\n  G.obtainiumGain *= (1 + 3 / 100 * player.cubeUpgrades[43])\r\n  G.obtainiumGain *= (1 + player.platonicUpgrades[5])\r\n  G.obtainiumGain *= (1 + 1.5 * player.platonicUpgrades[9])\r\n  G.obtainiumGain *= (1 + 2.5 * player.platonicUpgrades[10])\r\n  G.obtainiumGain *= (1 + 5 * player.platonicUpgrades[15])\r\n  G.obtainiumGain *= G.challenge15Rewards.obtainium\r\n  G.obtainiumGain *= 1 + 5 * (player.singularityUpgrades.starterPack.getEffect().bonus ? 1 : 0)\r\n  G.obtainiumGain *= +player.singularityUpgrades.singObtainium1.getEffect().bonus\r\n  G.obtainiumGain *= +player.singularityUpgrades.singObtainium2.getEffect().bonus\r\n  G.obtainiumGain *= +player.singularityUpgrades.singObtainium3.getEffect().bonus\r\n  G.obtainiumGain *= (1 + player.cubeUpgrades[55] / 100) // Cube Upgrade 6x5 (Cx5)\r\n  G.obtainiumGain *= (1 + 1/200 * player.shopUpgrades.cashGrab2)\r\n  G.obtainiumGain *= (1 + 1/100 * player.shopUpgrades.obtainiumEX2 * player.singularityCount)\r\n  G.obtainiumGain *= 1 + calculateEventBuff('Obtainium')\r\n  G.obtainiumGain *= +player.singularityUpgrades.singCitadel.getEffect().bonus\r\n  G.obtainiumGain *= +player.singularityUpgrades.singCitadel2.getEffect().bonus\r\n  G.obtainiumGain *= +player.octeractUpgrades.octeractObtainium1.getEffect().bonus\r\n  G.obtainiumGain *= Math.pow(1.02, player.shopUpgrades.obtainiumEX3)\r\n  G.obtainiumGain *= calculateTotalOcteractObtainiumBonus()\r\n\r\n  if (G.eventClicked && G.isEvent) {\r\n    G.obtainiumGain *= 1.05\r\n  }\r\n\r\n  if (player.currentChallenge.ascension === 15) {\r\n    G.obtainiumGain += 1\r\n    G.obtainiumGain *= (1 + 7 * player.cubeUpgrades[62])\r\n  }\r\n\r\n  if (!isFinite(G.obtainiumGain)) {\r\n    G.obtainiumGain = 1e300\r\n  }\r\n  G.obtainiumGain = Math.min(1e300, G.obtainiumGain)\r\n  G.obtainiumGain /= calculateSingularityDebuff('Obtainium')\r\n\r\n  if (player.usedCorruptions[5] >= 15) {\r\n    G.obtainiumGain = Math.pow(G.obtainiumGain, 1/4)\r\n  }\r\n  if (player.usedCorruptions[5] >= 16) {\r\n    G.obtainiumGain = Math.pow(G.obtainiumGain, 1/3)\r\n  }\r\n\r\n  G.obtainiumGain = Math.max(1 + player.singularityCount, G.obtainiumGain)\r\n  if (player.currentChallenge.ascension === 14) {\r\n    G.obtainiumGain = 0\r\n  }\r\n  player.obtainiumpersecond = Math.min(1e300, G.obtainiumGain) / (0.1 + player.reincarnationcounter)\r\n  player.maxobtainiumpersecond = Math.max(player.maxobtainiumpersecond, player.obtainiumpersecond)\r\n}\r\n\r\nexport const calculateAutomaticObtainium = () => {\r\n  return 0.05 * (10 * player.researches[61] + 2 * player.researches[62]) * player.maxobtainiumpersecond * (1 + 4 * player.cubeUpgrades[3] / 5)\r\n}\r\n\r\n\r\n// TODO: REFACTOR THIS - May 15, 2022.\r\nexport const calculateTalismanEffects = () => {\r\n  let positiveBonus = 0\r\n  let negativeBonus = 0\r\n  if (player.achievements[135] === 1) {\r\n    positiveBonus += 0.02\r\n  }\r\n  if (player.achievements[136] === 1) {\r\n    positiveBonus += 0.02\r\n  }\r\n  positiveBonus += 0.02 * (player.talismanRarity[4-1] - 1)\r\n  positiveBonus += 3 * player.researches[106] / 100\r\n  positiveBonus += 3 * player.researches[107] / 100\r\n  positiveBonus += 3 * player.researches[116] / 200\r\n  positiveBonus += 3 * player.researches[117] / 200\r\n  positiveBonus += (G.cubeBonusMultiplier[9] - 1)\r\n  positiveBonus += 0.0004 * player.cubeUpgrades[50]\r\n  negativeBonus += 0.06 * player.researches[118]\r\n  negativeBonus += 0.0004 * player.cubeUpgrades[50]\r\n\r\n  if (player.highestSingularityCount >= 7) {\r\n    positiveBonus += negativeBonus\r\n    negativeBonus = positiveBonus\r\n  }\r\n\r\n  if (player.highestSingularityCount < 7) {\r\n    for (let i = 1; i <= 5; i++) {\r\n      if (player.talismanOne[i] === (1)) {\r\n        G.talisman1Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[1-1]]! + positiveBonus) * player.talismanLevels[1-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman1Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[1-1]]! - negativeBonus) * player.talismanLevels[1-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanTwo[i] === (1)) {\r\n        G.talisman2Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[2-1]]! + positiveBonus) * player.talismanLevels[2-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman2Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[2-1]]! - negativeBonus) * player.talismanLevels[2-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanThree[i] === (1)) {\r\n        G.talisman3Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[3-1]]! + positiveBonus) * player.talismanLevels[3-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman3Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[3-1]]! - negativeBonus) * player.talismanLevels[3-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanFour[i] === (1)) {\r\n        G.talisman4Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[4-1]]! + positiveBonus) * player.talismanLevels[4-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman4Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[4-1]]! - negativeBonus) * player.talismanLevels[4-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanFive[i] === (1)) {\r\n        G.talisman5Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[5-1]]! + positiveBonus) * player.talismanLevels[5-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman5Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[5-1]]! - negativeBonus) * player.talismanLevels[5-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanSix[i] === (1)) {\r\n        G.talisman6Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[6-1]]! + positiveBonus) * player.talismanLevels[6-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman6Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[6-1]]! - negativeBonus) * player.talismanLevels[6-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n      if (player.talismanSeven[i] === (1)) {\r\n        G.talisman7Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[7-1]]! + positiveBonus) * player.talismanLevels[7-1] * G.challenge15Rewards.talismanBonus\r\n      } else {\r\n        G.talisman7Effect[i] = (G.talismanNegativeModifier[player.talismanRarity[7-1]]! - negativeBonus) * player.talismanLevels[7-1] * (-1) * G.challenge15Rewards.talismanBonus\r\n      }\r\n\r\n    }\r\n  } else {\r\n    for (let i = 1; i <= 5; i ++) {\r\n      G.talisman1Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[1-1]]! + positiveBonus) * player.talismanLevels[1-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman2Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[2-1]]! + positiveBonus) * player.talismanLevels[2-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman3Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[3-1]]! + positiveBonus) * player.talismanLevels[3-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman4Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[4-1]]! + positiveBonus) * player.talismanLevels[4-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman5Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[5-1]]! + positiveBonus) * player.talismanLevels[5-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman6Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[6-1]]! + positiveBonus) * player.talismanLevels[6-1] * G.challenge15Rewards.talismanBonus\r\n      G.talisman7Effect[i] = (G.talismanPositiveModifier[player.talismanRarity[7-1]]! + positiveBonus) * player.talismanLevels[7-1] * G.challenge15Rewards.talismanBonus\r\n    }\r\n  }\r\n  const talismansEffects = [G.talisman1Effect, G.talisman2Effect, G.talisman3Effect, G.talisman4Effect, G.talisman5Effect, G.talisman6Effect, G.talisman7Effect]\r\n  const runesTalisman = [0, 0, 0, 0, 0, 0]\r\n  talismansEffects.forEach((talismanEffect) => {\r\n    talismanEffect.forEach((levels, runeNumber) => {\r\n      runesTalisman[runeNumber] += levels!\r\n    })\r\n  });\r\n  [, G.rune1Talisman, G.rune2Talisman, G.rune3Talisman, G.rune4Talisman, G.rune5Talisman] = runesTalisman\r\n  G.talisman6Power = 0\r\n  G.talisman7Quarks = 0\r\n  if (player.talismanRarity[1-1] === 6) {\r\n    G.rune2Talisman += 400\r\n  }\r\n  if (player.talismanRarity[2-1] === 6) {\r\n    G.rune1Talisman += 400\r\n  }\r\n  if (player.talismanRarity[3-1] === 6) {\r\n    G.rune4Talisman += 400\r\n  }\r\n  if (player.talismanRarity[4-1] === 6) {\r\n    G.rune3Talisman += 400\r\n  }\r\n  if (player.talismanRarity[5-1] === 6) {\r\n    G.rune5Talisman += 400\r\n  }\r\n  if (player.talismanRarity[6-1] === 6) {\r\n    G.talisman6Power = 2.5\r\n  }\r\n  if (player.talismanRarity[7-1] === 6) {\r\n    G.talisman7Quarks = 2\r\n  }\r\n}\r\n\r\nexport const calculateRuneLevels = () => {\r\n  calculateTalismanEffects()\r\n  if (player.currentChallenge.reincarnation !== 9) {\r\n    const antUpgrade8 = player.antUpgrades[8] ?? 0\r\n    G.rune1level = Math.max(1, player.runelevels[0] + Math.min(1e7, (antUpgrade8 + G.bonusant9)) * 1 + (G.rune1Talisman) + 7 * player.constantUpgrades[7])\r\n    G.rune2level = Math.max(1, player.runelevels[1] + Math.min(1e7, (antUpgrade8 + G.bonusant9)) * 1 + (G.rune2Talisman) + 7 * player.constantUpgrades[7])\r\n    G.rune3level = Math.max(1, player.runelevels[2] + Math.min(1e7, (antUpgrade8 + G.bonusant9)) * 1 + (G.rune3Talisman) + 7 * player.constantUpgrades[7])\r\n    G.rune4level = Math.max(1, player.runelevels[3] + Math.min(1e7, (antUpgrade8 + G.bonusant9)) * 1 + (G.rune4Talisman) + 7 * player.constantUpgrades[7])\r\n    G.rune5level = Math.max(1, player.runelevels[4] + Math.min(1e7, (antUpgrade8 + G.bonusant9)) * 1 + (G.rune5Talisman) + 7 * player.constantUpgrades[7])\r\n  }\r\n\r\n  G.runeSum = sumContents([G.rune1level, G.rune2level, G.rune3level, G.rune4level, G.rune5level])\r\n  calculateRuneBonuses()\r\n}\r\n\r\nexport const calculateRuneBonuses = () => {\r\n  G.blessingMultiplier = 1\r\n  G.spiritMultiplier = 1\r\n\r\n  G.blessingMultiplier *= (1 + 6.9 * player.researches[134] / 100)\r\n  G.blessingMultiplier *= (1 + (player.talismanRarity[3-1] - 1) / 10)\r\n  G.blessingMultiplier *= (1 + 0.10 * Math.log10(player.epicFragments + 1) * player.researches[174])\r\n  G.blessingMultiplier *= (1 + 2 * player.researches[194] / 100)\r\n  if (player.researches[160] > 0) {\r\n    G.blessingMultiplier *= Math.pow(1.25, 8)\r\n  }\r\n  G.spiritMultiplier *= (1 + 8 * player.researches[164] / 100)\r\n  if (player.researches[165] > 0 && player.currentChallenge.ascension !== 0) {\r\n    G.spiritMultiplier *= Math.pow(2, 8)\r\n  }\r\n  G.spiritMultiplier *= (1 + 0.15 * Math.log10(player.legendaryFragments + 1) * player.researches[189])\r\n  G.spiritMultiplier *= (1 + 2 * player.researches[194] / 100)\r\n  G.spiritMultiplier *= (1 + (player.talismanRarity[5-1] - 1) / 100)\r\n\r\n  for (let i = 1; i <= 5; i++) {\r\n    G.runeBlessings[i] = G.blessingMultiplier * player.runelevels[i - 1] * player.runeBlessingLevels[i]\r\n    G.runeSpirits[i] = G.spiritMultiplier * player.runelevels[i - 1] * player.runeSpiritLevels[i]\r\n  }\r\n\r\n  for (let i = 1; i <= 5; i++) {\r\n    if (G.runeBlessings[i] <= 1e30) {\r\n      G.effectiveRuneBlessingPower[i] = (Math.pow(G.runeBlessings[i], 1 / 8)) / 75 * G.challenge15Rewards.blessingBonus\r\n    } else if (G.runeBlessings[i] > 1e30) {\r\n      G.effectiveRuneBlessingPower[i] = Math.pow(10, 5 / 2) * (Math.pow(G.runeBlessings[i], 1 / 24)) / 75 * G.challenge15Rewards.blessingBonus\r\n    }\r\n\r\n    if (G.runeSpirits[i] <= 1e25) {\r\n      G.effectiveRuneSpiritPower[i] = (Math.pow(G.runeSpirits[i], 1 / 8)) / 75 * G.challenge15Rewards.spiritBonus\r\n    } else if (G.runeSpirits[i] > 1e25) {\r\n      G.effectiveRuneSpiritPower[i] = Math.pow(10, 25 / 12) * (Math.pow(G.runeSpirits[i], 1 / 24)) / 75 * G.challenge15Rewards.spiritBonus\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport const calculateAnts = () => {\r\n\r\n  let bonusLevels = 0\r\n  bonusLevels += 2 * (player.talismanRarity[6-1] - 1)\r\n  bonusLevels += CalcECC('reincarnation', player.challengecompletions[9])\r\n  bonusLevels += 2 * player.constantUpgrades[6]\r\n  bonusLevels += 12 * CalcECC('ascension', player.challengecompletions[11])\r\n  bonusLevels += Math.floor(1 / 200 * player.researches[200])\r\n  bonusLevels *= G.challenge15Rewards.bonusAntLevel\r\n  let c11 = 0\r\n  let c11bonus = 0\r\n  if (player.currentChallenge.ascension === 11) {\r\n    c11 = 999\r\n  }\r\n  if (player.currentChallenge.ascension === 11) {\r\n    c11bonus = Math.floor((4 * player.challengecompletions[8] + 23 * player.challengecompletions[9]) * Math.max(0, (1 - player.challengecompletions[11] / 10)))\r\n  }\r\n  G.bonusant1 = Math.min(player.antUpgrades[1-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant2 = Math.min(player.antUpgrades[2-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant3 = Math.min(player.antUpgrades[3-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant4 = Math.min(player.antUpgrades[4-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant5 = Math.min(player.antUpgrades[5-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant6 = Math.min(player.antUpgrades[6-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant7 = Math.min(player.antUpgrades[7-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant8 = Math.min(player.antUpgrades[8-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant9 = Math.min(player.antUpgrades[9-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant10 = Math.min(player.antUpgrades[10-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant11 = Math.min(player.antUpgrades[11-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n  G.bonusant12 = Math.min(player.antUpgrades[12-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\r\n\r\n}\r\n\r\nexport const calculateAntSacrificeELO = () => {\r\n  G.antELO = 0\r\n  G.effectiveELO = 0\r\n  const antUpgradeSum = sumContents(player.antUpgrades as number[])\r\n  if (player.antPoints.gte('1e40')) {\r\n    G.antELO += Decimal.log(player.antPoints, 10)\r\n    G.antELO += 1 / 2 * antUpgradeSum\r\n    G.antELO += 1 / 10 * player.firstOwnedAnts\r\n    G.antELO += 1 / 5 * player.secondOwnedAnts\r\n    G.antELO += 1 / 3 * player.thirdOwnedAnts\r\n    G.antELO += 1 / 2 * player.fourthOwnedAnts\r\n    G.antELO += player.fifthOwnedAnts\r\n    G.antELO += 2 * player.sixthOwnedAnts\r\n    G.antELO += 4 * player.seventhOwnedAnts\r\n    G.antELO += 8 * player.eighthOwnedAnts\r\n    G.antELO += 666 * player.researches[178]\r\n    G.antELO *= (1 + 0.01 * player.achievements[180] + 0.02 * player.achievements[181] + 0.03 * player.achievements[182])\r\n    G.antELO *= (1 + player.researches[110] / 100)\r\n    G.antELO *= (1 + 2.5 * player.researches[148] / 100)\r\n\r\n    if (player.achievements[176] === 1) {\r\n      G.antELO += 25\r\n    }\r\n    if (player.achievements[177] === 1) {\r\n      G.antELO += 50\r\n    }\r\n    if (player.achievements[178] === 1) {\r\n      G.antELO += 75\r\n    }\r\n    if (player.achievements[179] === 1) {\r\n      G.antELO += 100\r\n    }\r\n    G.antELO += 25 * player.researches[108]\r\n    G.antELO += 25 * player.researches[109]\r\n    G.antELO += 40 * player.researches[123]\r\n    G.antELO += 100 * CalcECC('reincarnation', player.challengecompletions[10])\r\n    G.antELO += 75 * player.upgrades[80]\r\n    G.antELO = 1 / 10 * Math.floor(10 * G.antELO)\r\n\r\n    G.effectiveELO += 0.5 * Math.min(3500, G.antELO)\r\n    G.effectiveELO += 0.1 * Math.min(4000, G.antELO)\r\n    G.effectiveELO += 0.1 * Math.min(6000, G.antELO)\r\n    G.effectiveELO += 0.1 * Math.min(10000, G.antELO)\r\n    G.effectiveELO += 0.2 * G.antELO\r\n    G.effectiveELO += (G.cubeBonusMultiplier[8] - 1)\r\n    G.effectiveELO += 1 * player.cubeUpgrades[50]\r\n    G.effectiveELO *= (1 + 0.03 * player.upgrades[124])\r\n  }\r\n}\r\n\r\nconst calculateAntSacrificeMultipliers = () => {\r\n  G.timeMultiplier = Math.min(1, Math.pow(player.antSacrificeTimer / 10, 2))\r\n  if (player.achievements[177] === 0) {\r\n    G.timeMultiplier *= Math.min(1000, Math.max(1, player.antSacrificeTimer / 10))\r\n  }\r\n  if (player.achievements[177] > 0) {\r\n    G.timeMultiplier *= Math.max(1, player.antSacrificeTimer / 10)\r\n  }\r\n\r\n  G.upgradeMultiplier = 1\r\n  G.upgradeMultiplier *= (1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11-1]! + G.bonusant11) / 125)))\r\n  G.upgradeMultiplier *= (1 + player.researches[103] / 20)\r\n  G.upgradeMultiplier *= (1 + player.researches[104] / 20)\r\n  if (player.achievements[132] === 1) {\r\n    G.upgradeMultiplier *= 1.25\r\n  }\r\n  if (player.achievements[137] === 1) {\r\n    G.upgradeMultiplier *= 1.25\r\n  }\r\n  G.upgradeMultiplier *= (1 + 20 / 3 * G.effectiveRuneBlessingPower[3])\r\n  G.upgradeMultiplier *= (1 + 1 / 50 * CalcECC('reincarnation', player.challengecompletions[10]))\r\n  G.upgradeMultiplier *= (1 + 1 / 50 * player.researches[122])\r\n  G.upgradeMultiplier *= (1 + 3 / 100 * player.researches[133])\r\n  G.upgradeMultiplier *= (1 + 2 / 100 * player.researches[163])\r\n  G.upgradeMultiplier *= (1 + 1 / 100 * player.researches[193])\r\n  G.upgradeMultiplier *= (1 + 1 / 10 * player.upgrades[79])\r\n  G.upgradeMultiplier *= (1 + 1 / 4 * player.upgrades[40])\r\n  G.upgradeMultiplier *= G.cubeBonusMultiplier[7]\r\n  G.upgradeMultiplier *= (1 + calculateEventBuff('Ant Sacrifice'))\r\n  G.upgradeMultiplier = Math.min(1e300, G.upgradeMultiplier)\r\n}\r\n\r\ninterface IAntSacRewards {\r\n    antSacrificePoints: number\r\n    offerings: number\r\n    obtainium: number\r\n    talismanShards: number\r\n    commonFragments: number\r\n    uncommonFragments: number\r\n    rareFragments: number\r\n    epicFragments: number\r\n    legendaryFragments: number\r\n    mythicalFragments: number\r\n}\r\n\r\nexport const calculateAntSacrificeRewards = (): IAntSacRewards => {\r\n  calculateAntSacrificeELO()\r\n  calculateAntSacrificeMultipliers()\r\n\r\n  const maxCap = 1e300\r\n  const rewardsMult = Math.min(maxCap, G.timeMultiplier * G.upgradeMultiplier)\r\n  const rewards: IAntSacRewards = {\r\n    antSacrificePoints: G.effectiveELO * rewardsMult / 85,\r\n    offerings: Math.min(maxCap, player.offeringpersecond * 0.15 * G.effectiveELO * rewardsMult / 180),\r\n    obtainium: Math.min(maxCap, player.maxobtainiumpersecond * 0.24 * G.effectiveELO * rewardsMult / 180),\r\n    talismanShards: (G.antELO > 500)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 210 * Math.pow(1 / 4 * (Math.max(0, G.effectiveELO - 500)), 2))))\r\n      : 0,\r\n    commonFragments: (G.antELO > 750)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 110 * Math.pow(1 / 9 * (Math.max(0, G.effectiveELO - 750)), 1.83))))\r\n      : 0,\r\n    uncommonFragments: (G.antELO > 1000)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 170 * Math.pow(1 / 16 * (Math.max(0, G.effectiveELO - 1000)), 1.66))))\r\n      : 0,\r\n    rareFragments: (G.antELO > 1500)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 25 * (Math.max(0, G.effectiveELO - 1500)), 1.50))))\r\n      : 0,\r\n    epicFragments: (G.antELO > 2000)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 36 * (Math.max(0, G.effectiveELO - 2000)), 1.33))))\r\n      : 0,\r\n    legendaryFragments: (G.antELO > 3000)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 230 * Math.pow(1 / 49 * (Math.max(0, G.effectiveELO - 3000)), 1.16))))\r\n      : 0,\r\n    mythicalFragments: (G.antELO > 5000)\r\n      ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 220 * Math.pow(1 / 64 * (Math.max(0, G.effectiveELO - 4150)), 1))))\r\n      : 0\r\n  }\r\n\r\n  return rewards\r\n}\r\n\r\nexport const timeWarp = async () => {\r\n  const time = await Prompt(i18next.t('calculate.timePrompt'))\r\n  const timeUse = Number(time)\r\n  if (\r\n    Number.isNaN(timeUse) ||\r\n            timeUse <= 0\r\n  ) {\r\n    return Alert(i18next.t('calculate.timePromptError'))\r\n  }\r\n\r\n  DOMCacheGetOrSet('offlineContainer').style.display = 'flex'\r\n  DOMCacheGetOrSet('offlineBlur').style.display = ''\r\n  await calculateOffline(timeUse)\r\n}\r\n\r\nexport const calculateOffline = async (forceTime = 0) => {\r\n  disableHotkeys()\r\n\r\n  G.timeWarp = true\r\n\r\n  //Variable Declarations i guess\r\n  const maximumTimer = 86400 * 3 + 7200 * 2 * player.researches[31] + 7200 * 2 * player.researches[32]\r\n  const updatedTime = Date.now()\r\n  const timeAdd = Math.min(maximumTimer, Math.max(forceTime, (updatedTime - player.offlinetick) / 1000))\r\n  const timeTick = timeAdd/200\r\n  let resourceTicks = 200\r\n\r\n  DOMCacheGetOrSet('offlineTimer').textContent = i18next.t('calculate.offlineTimer', { value: format(timeAdd, 0) })\r\n\r\n  //May 11, 2021: I've revamped calculations for this significantly. Note to May 11 Platonic: Fuck off -May 15 Platonic\r\n  //Some one-time tick things that are relatively important\r\n  toggleTalismanBuy(player.buyTalismanShardPercent)\r\n  updateTalismanInventory()\r\n\r\n  const offlineDialog = player.offlinetick > 0\r\n\r\n  player.offlinetick = (player.offlinetick < 1.5e12) ? (Date.now()) : player.offlinetick\r\n\r\n  G.timeMultiplier = calculateTimeAcceleration().mult\r\n  calculateObtainium()\r\n  const obtainiumGain = calculateAutomaticObtainium()\r\n\r\n  const resetAdd = {\r\n    prestige: timeAdd / Math.max(0.01, player.fastestprestige),\r\n    offering: Math.floor(timeAdd),\r\n    transcension: timeAdd / Math.max(0.01, player.fastesttranscend),\r\n    reincarnation: timeAdd / Math.max(0.01, player.fastestreincarnate),\r\n    obtainium: timeAdd * obtainiumGain * G.timeMultiplier\r\n  }\r\n\r\n  const timerAdd = {\r\n    prestige: timeAdd * G.timeMultiplier,\r\n    transcension: timeAdd * G.timeMultiplier,\r\n    reincarnation: timeAdd * G.timeMultiplier,\r\n    ants: timeAdd * G.timeMultiplier,\r\n    antsReal: timeAdd,\r\n    ascension: player.ascensionCounter, //Calculate this after the fact\r\n    quarks: quarkHandler().gain //Calculate this after the fact\r\n  }\r\n\r\n  addTimers('ascension', timeAdd)\r\n  addTimers('quarks', timeAdd)\r\n  addTimers('goldenQuarks', timeAdd)\r\n  addTimers('singularity', timeAdd)\r\n  addTimers('octeracts', timeTick)\r\n\r\n  player.prestigeCount += resetAdd.prestige\r\n  player.transcendCount += resetAdd.transcension\r\n  player.reincarnationCount += resetAdd.reincarnation\r\n  timerAdd.ascension = player.ascensionCounter - timerAdd.ascension\r\n  timerAdd.quarks = quarkHandler().gain - timerAdd.quarks\r\n\r\n  //200 simulated all ticks [July 12, 2021]\r\n  const runOffline = setInterval(() => {\r\n    G.timeMultiplier = calculateTimeAcceleration().mult\r\n    calculateObtainium()\r\n\r\n    //Reset Stuff lmao!\r\n    addTimers('prestige', timeTick)\r\n    addTimers('transcension', timeTick)\r\n    addTimers('reincarnation', timeTick)\r\n    addTimers('octeracts', timeTick)\r\n\r\n    resourceGain(timeTick * G.timeMultiplier)\r\n\r\n    //Auto Obtainium Stuff\r\n    if (player.researches[61] > 0 && player.currentChallenge.ascension !== 14) {\r\n      automaticTools('addObtainium', timeTick)\r\n    }\r\n\r\n    //Auto Ant Sacrifice Stuff\r\n    if (player.achievements[173] > 0) {\r\n      automaticTools('antSacrifice', timeTick)\r\n    }\r\n\r\n    //Auto Offerings\r\n    automaticTools('addOfferings', timeTick)\r\n    //Auto Rune Sacrifice Stuff\r\n    if (player.shopUpgrades.offeringAuto > 0 && player.autoSacrificeToggle) {\r\n      automaticTools('runeSacrifice', timeTick)\r\n    }\r\n\r\n    if (resourceTicks % 5 === 1) {\r\n      // 196, 191, ... , 6, 1 ticks remaining\r\n      updateAll()\r\n    }\r\n\r\n    resourceTicks -= 1\r\n    //Misc functions\r\n    if (resourceTicks < 1) {\r\n      clearInterval(runOffline)\r\n      G.timeWarp = false\r\n    }\r\n  }, 0)\r\n\r\n  DOMCacheGetOrSet('offlinePrestigeCountNumber').textContent = format(resetAdd.prestige, 0, true)\r\n  DOMCacheGetOrSet('offlinePrestigeTimer').innerHTML =\r\n      i18next.t('offlineProgress.currentPrestigeTimer', { value: format(timerAdd.prestige, 2, false) })\r\n  DOMCacheGetOrSet('offlineOfferingCount').innerHTML =\r\n      i18next.t('offlineProgress.offeringsGenerated', { value: format(resetAdd.offering, 0, true) })\r\n  DOMCacheGetOrSet('offlineTranscensionCount').innerHTML =\r\n      i18next.t('offlineProgress.transcensionCount', { value: format(resetAdd.transcension, 0, true) })\r\n  DOMCacheGetOrSet('offlineTranscensionTimer').innerHTML =\r\n      i18next.t('offlineProgress.currentTranscensionCounter', { value: format(timerAdd.transcension, 2, false) })\r\n  DOMCacheGetOrSet('offlineReincarnationCount').innerHTML =\r\n      i18next.t('offlineProgress.reincarnationCount', { value: format(resetAdd.reincarnation, 0, true) })\r\n  DOMCacheGetOrSet('offlineReincarnationTimer').innerHTML =\r\n      i18next.t('offlineProgress.currentReincarnationTimer', { value: format(timerAdd.reincarnation, 2, false) })\r\n  DOMCacheGetOrSet('offlineObtainiumCount').innerHTML =\r\n      i18next.t('offlineProgress.obtainiumGenerated', { value: format(resetAdd.obtainium, 0, true) })\r\n  DOMCacheGetOrSet('offlineAntTimer').innerHTML =\r\n      i18next.t('offlineProgress.ingameAntSacTimer', { value: format(timerAdd.ants, 2, false) })\r\n  DOMCacheGetOrSet('offlineRealAntTimer').innerHTML =\r\n      i18next.t('offlineProgress.realAntSacTimer', { value: format(timerAdd.antsReal, 2, true) })\r\n  DOMCacheGetOrSet('offlineAscensionTimer').innerHTML =\r\n      i18next.t('offlineProgress.currentAscensionTimer', { value: format(timerAdd.ascension, 2, true) })\r\n  DOMCacheGetOrSet('offlineQuarkCount').innerHTML =\r\n      i18next.t('offlineProgress.exportQuarks', { value: format(timerAdd.quarks, 0, true) })\r\n\r\n  DOMCacheGetOrSet('progressbardescription').textContent = i18next.t('calculate.offlineEarnings')\r\n\r\n  player.offlinetick = updatedTime\r\n  if (!player.loadedNov13Vers) {\r\n    if (player.challengecompletions[14] > 0 || player.highestchallengecompletions[14] > 0) {\r\n      const ascCount = player.ascensionCount\r\n      reset('ascensionChallenge')\r\n      player.ascensionCount = (ascCount + 1)\r\n    }\r\n    player.loadedNov13Vers = true\r\n  }\r\n\r\n  await saveSynergy()\r\n\r\n  updateTalismanInventory()\r\n  calculateObtainium()\r\n  calculateAnts()\r\n  calculateRuneLevels()\r\n\r\n  // allow aesthetic offline progress\r\n  if (offlineDialog) {\r\n    const el = DOMCacheGetOrSet('notification')\r\n    el.classList.add('slide-out')\r\n    el.classList.remove('slide-in')\r\n    document.body.classList.remove('scrollbar')\r\n    document.body.classList.add('loading')\r\n    DOMCacheGetOrSet('exitOffline').style.visibility = 'hidden'\r\n    DOMCacheGetOrSet('offlineContainer').style.display = 'flex'\r\n    DOMCacheGetOrSet('transparentBG').style.display = 'block'\r\n  } else {\r\n    exitOffline()\r\n  }\r\n}\r\n\r\nexport const exitOffline = () => {\r\n  document.body.classList.remove('loading')\r\n  document.body.classList.add('scrollbar')\r\n  DOMCacheGetOrSet('transparentBG').style.display = 'none'\r\n  DOMCacheGetOrSet('offlineContainer').style.display = 'none'\r\n  DOMCacheGetOrSet('offlineBlur').style.display = 'none'\r\n  enableHotkeys()\r\n}\r\n\r\nexport const calculateSigmoid = (constant: number, factor: number, divisor: number) => {\r\n  return (1 + (constant - 1) * (1 - Math.pow(2, -(factor) / (divisor))))\r\n}\r\n\r\nexport const calculateSigmoidExponential = (constant: number, coefficient: number) => {\r\n  return (1 + (constant - 1) * (1 - Math.exp(-coefficient)))\r\n}\r\n\r\nexport const calculateCubeBlessings = () => {\r\n  // The visual updates are handled in visualUpdateCubes()\r\n  const cubeArray = [\r\n    player.cubeBlessings.accelerator,\r\n    player.cubeBlessings.multiplier,\r\n    player.cubeBlessings.offering,\r\n    player.cubeBlessings.runeExp,\r\n    player.cubeBlessings.obtainium,\r\n    player.cubeBlessings.antSpeed,\r\n    player.cubeBlessings.antSacrifice,\r\n    player.cubeBlessings.antELO,\r\n    player.cubeBlessings.talismanBonus,\r\n    player.cubeBlessings.globalSpeed\r\n  ]\r\n  const powerBonus = [\r\n    player.cubeUpgrades[45] / 100,\r\n    player.cubeUpgrades[35] / 100,\r\n    player.cubeUpgrades[24] / 100,\r\n    player.cubeUpgrades[14] / 100,\r\n    player.cubeUpgrades[40] / 100,\r\n    player.cubeUpgrades[22] / 40,\r\n    player.cubeUpgrades[15] / 100,\r\n    player.cubeUpgrades[25] / 100,\r\n    player.cubeUpgrades[44] / 100,\r\n    player.cubeUpgrades[34] / 100\r\n  ]\r\n\r\n  for (let i = 1; i <= 10; i++) {\r\n    let power = 1\r\n    let mult = 1\r\n    if (cubeArray[i-1] >= 1000) {\r\n      power = G.blessingDRPower[i]!\r\n      mult *= Math.pow(1000, (1 - G.blessingDRPower[i]!) * (1 + powerBonus[i-1]))\r\n    }\r\n    if (i === 6) {\r\n      power = 2.25\r\n      mult = 1\r\n    }\r\n\r\n    G.cubeBonusMultiplier[i] = Math.min(1e300, 1 + mult * G.blessingbase[i]! * Math.pow(cubeArray[i-1], power * (1 + powerBonus[i-1])) * G.tesseractBonusMultiplier[i]!)\r\n  }\r\n  calculateRuneLevels()\r\n  calculateAntSacrificeELO()\r\n  calculateObtainium()\r\n}\r\n\r\nexport const calculateTotalOcteractCubeBonus = () => {\r\n  if (player.singularityChallenges.noOcteracts.enabled) {\r\n    return 1\r\n  }\r\n  if (player.totalWowOcteracts < 1000) {\r\n    const bonus = (1 + 2/1000 * player.totalWowOcteracts) // At 1,000 returns 3\r\n    return bonus > 1.00001 ? bonus : 1\r\n  } else {\r\n    const power = 2 + +player.singularityChallenges.noOcteracts.rewards.octeractPow\r\n    return 3 * Math.pow(Math.log10(player.totalWowOcteracts) - 2, power) // At 1,000 returns 3\r\n  }\r\n}\r\n\r\nexport const calculateTotalOcteractQuarkBonus = () => {\r\n  if (player.singularityChallenges.noOcteracts.enabled) {\r\n    return 1\r\n  }\r\n  if (player.totalWowOcteracts < 1000) {\r\n    const bonus = (1 + 0.2 / 1000 * player.totalWowOcteracts) // At 1,000 returns 1.20\r\n    return bonus > 1.00001 ? bonus : 1\r\n  } else {\r\n    return 1.1 + 0.1 * (Math.log10(player.totalWowOcteracts) - 2) // At 1,000 returns 1.20\r\n  }\r\n}\r\n\r\nexport const calculateTotalOcteractOfferingBonus = () => {\r\n  if (!player.singularityChallenges.noOcteracts.rewards.offeringBonus) {\r\n    return 1\r\n  }\r\n  return Math.pow(calculateTotalOcteractQuarkBonus(), 1.5)\r\n}\r\n\r\nexport const calculateTotalOcteractObtainiumBonus = () => {\r\n  if (!player.singularityChallenges.noOcteracts.rewards.obtainiumBonus) {\r\n    return 1\r\n  }\r\n  return Math.pow(calculateTotalOcteractQuarkBonus(), 1.4)\r\n}\r\n\r\nexport const calculateAllCubeMultiplier = () => {\r\n  const arr = [\r\n    // Ascension Time Multiplier to cubes\r\n    Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4\r\n             * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1)),\r\n    // Sun and Moon achievements\r\n    1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251],\r\n    // Speed Achievement\r\n    1 + player.achievements[240] * Math.min(0.5, Math.max(0.1, 1 / 20 * Math.log10(calculateTimeAcceleration().mult + 0.01))),\r\n    // Challenge 15: All Cube Gain bonuses 1-5\r\n    G.challenge15Rewards.cube1 * G.challenge15Rewards.cube2 * G.challenge15Rewards.cube3 * G.challenge15Rewards.cube4 * G.challenge15Rewards.cube5,\r\n    // Rune 6: Infinite Ascent\r\n    1 + 1/100 * calculateEffectiveIALevel(),\r\n    // BETA: 2x Cubes\r\n    1 + player.platonicUpgrades[10],\r\n    // OMEGA: C9 Cube Bonus\r\n    Math.pow(1.01, player.platonicUpgrades[15] * player.challengecompletions[9]),\r\n    // Powder Bonus\r\n    calculateCubeMultFromPowder(),\r\n    // Event\r\n    1 + calculateEventBuff('Cubes'),\r\n    // Singularity Factor\r\n    1 / calculateSingularityDebuff('Cubes'),\r\n    // Wow Pass Y\r\n    1 + 0.75 * player.shopUpgrades.seasonPassY / 100,\r\n    // BUY THIS! Golden Quark Upgrade\r\n    1 + 4 * (player.singularityUpgrades.starterPack.getEffect().bonus ? 1 : 0),\r\n    // Cube Flame [GQ]\r\n    +player.singularityUpgrades.singCubes1.getEffect().bonus,\r\n    // Cube Blaze [GQ]\r\n    +player.singularityUpgrades.singCubes2.getEffect().bonus,\r\n    // Cube Inferno [GQ]\r\n    +player.singularityUpgrades.singCubes3.getEffect().bonus,\r\n    // Wow Pass Z\r\n    1 + player.shopUpgrades.seasonPassZ * player.singularityCount / 100,\r\n    // Cookie Upgrade 16\r\n    1 + 1 * player.cubeUpgrades[66] * (1 - player.platonicUpgrades[15]),\r\n    // Cookie Upgrade 8 (now actually works)\r\n    1 + 0.25 * +G.isEvent * player.cubeUpgrades[58],\r\n    // Wow Octeract Bonus\r\n    calculateTotalOcteractCubeBonus(),\r\n    // No Singularity Upgrades Challenge\r\n    +player.singularityChallenges.noSingularityUpgrades.rewards.cubes,\r\n    // Singularity Citadel\r\n    +player.singularityUpgrades.singCitadel.getEffect().bonus,\r\n    // Singularity Citadel 2\r\n    +player.singularityUpgrades.singCitadel2.getEffect().bonus,\r\n    // Platonic DELTA\r\n    1 + +player.singularityUpgrades.platonicDelta.getEffect().bonus * Math.min(9, player.singularityCounter / (3600 * 24)),\r\n    // Wow Pass INF\r\n    Math.pow(1.02, player.shopUpgrades.seasonPassInfinity)\r\n    // Total Global Cube Multipliers: 19\r\n  ]\r\n\r\n  const extraMult = (G.isEvent && G.eventClicked) ? 1.05 : 1\r\n  return {\r\n    mult: productContents(arr) * extraMult,\r\n    list: arr\r\n  }\r\n}\r\n\r\nexport const calculateCubeMultiplier = (score = -1) => {\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const arr = [\r\n    // Ascension Score Multiplier\r\n    Math.pow(score / 3000, 1 / 4.1),\r\n    // Global Multiplier\r\n    calculateAllCubeMultiplier().mult,\r\n    // Season Pass 1\r\n    1 + 2.25 * player.shopUpgrades.seasonPass / 100,\r\n    // Researches (Excl 8x25)\r\n    (1 + player.researches[119] / 400) * // 5x19\r\n        (1 + player.researches[120] / 400) * // 5x20\r\n        (1 + player.researches[137] / 100) * // 6x12\r\n        (1 + 0.9 * player.researches[152] / 100) * // 7x2\r\n        (1 + 0.8 * player.researches[167] / 100) * // 7x17\r\n        (1 + 0.7 * player.researches[182] / 100) * // 8x7\r\n        (1 + 0.03 / 100 * player.researches[192] * player.antUpgrades[12-1]!) * // 8x17\r\n        (1 + 0.6 * player.researches[197] / 100),  // 8x22\r\n    // Research 8x25\r\n    1 + 0.004 / 100 * player.researches[200],\r\n    // Cube Upgrades\r\n    (1 + player.cubeUpgrades[1] / 6) * // 1x1\r\n        (1 + player.cubeUpgrades[11] / 11) * // 2x1\r\n        (1 + 0.4 * player.cubeUpgrades[30]),    // 3x10\r\n    // Constant Upgrade 10\r\n    1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\r\n    // Achievement 189 Bonus\r\n    1 + player.achievements[189] * Math.min(2, player.ascensionCount / 2.5e8),\r\n    // Achievement 193 Bonus\r\n    1 + player.achievements[193] * Decimal.log(player.ascendShards.add(1), 10) / 400,\r\n    // Achievement 195 Bonus\r\n    1 + Math.min(250, player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400),\r\n    // Achievement 198-201 Bonus\r\n    1 + 4 / 100 * (player.achievements[198] + player.achievements[199] + player.achievements[200]) + 3 / 100 * player.achievements[201],\r\n    // Achievement 254 Bonus\r\n    1 + (Math.min(0.15, 0.6/100 * Math.log10(score + 1))) * player.achievements[254],\r\n    // Spirit Power\r\n    1 + calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[2],\r\n    // Platonic Cube Opening Bonus\r\n    G.platonicBonusMultiplier[0],\r\n    // Platonic 1x1\r\n    1 + 0.000090 * sumContents(player.usedCorruptions) * player.platonicUpgrades[1],\r\n    // Cube Upgrade 63 (Cx13)\r\n    1 + Math.pow(1.03, Math.log10(Math.max(1, player.wowAbyssals))) * player.cubeUpgrades[63] - player.cubeUpgrades[63]\r\n    // Total Multipliers to cubes: 15\r\n  ]\r\n\r\n  // Decided to return a copy of list as well as the actual multiplier, instead of differentiating\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateTesseractMultiplier = (score = -1) => {\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const corrSum = sumContents(player.usedCorruptions.slice(2, 10))\r\n  const arr = [\r\n    // Ascension Score Multiplier\r\n    Math.pow(1 + Math.max(0, (score - 1e5)) / 1e4, .35),\r\n    // Global Multiplier\r\n    calculateAllCubeMultiplier().mult,\r\n    // Season Pass 1\r\n    1 + 2.25 * player.shopUpgrades.seasonPass / 100,\r\n    // 10th Const Upgrade +Tesseract%\r\n    1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\r\n    // Cube Upgrade 3x10\r\n    1 + 0.4 * player.cubeUpgrades[30],\r\n    // Cube Upgrade 4x8\r\n    1 + 1 / 200 * player.cubeUpgrades[38] * corrSum,\r\n    // Achievement 195 Bonus\r\n    1 + Math.min(250, player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400),\r\n    // Achievement 202 Bonus\r\n    1 + player.achievements[202] * Math.min(2, player.ascensionCount / 5e8),\r\n    // Achievement 205-208 Bonus\r\n    1 + 4 / 100 * (player.achievements[205] + player.achievements[206] + player.achievements[207]) + 3 / 100 * player.achievements[208],\r\n    // Achievement 255 Bonus\r\n    1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[255],\r\n    // Platonic Cube Bonus\r\n    G.platonicBonusMultiplier[1],\r\n    // Platonic Upgrade 1x2\r\n    1 + 0.00018 * corrSum * player.platonicUpgrades[2]\r\n    // Total Tesseract Multipliers: 12\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateHypercubeMultiplier = (score = -1) => {\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const arr = [\r\n    // Ascension Score Multiplier\r\n    Math.pow(1 + Math.max(0, (score - 1e9)) / 1e8, .5),\r\n    // Global Multiplier\r\n    calculateAllCubeMultiplier().mult,\r\n    // Season Pass 2\r\n    1 + 1.5 * player.shopUpgrades.seasonPass2 / 100,\r\n    // Achievement 212 - 215 Bonus\r\n    1 + 4 / 100 * (player.achievements[212] + player.achievements[213] + player.achievements[214]) + 3 / 100 * player.achievements[215],\r\n    // Achievement 216 Bonus\r\n    1 + player.achievements[216] * Math.min(2, player.ascensionCount / 1e9),\r\n    // Achievement 253 Bonus\r\n    1 + 1 / 10 * player.achievements[253],\r\n    // Achievement 256 Bonus\r\n    1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[256],\r\n    // Achievement 265 Bonus\r\n    1 + Math.min(2, player.ascensionCount / 2.5e10) * player.achievements[265],\r\n    // Platonic Cubes Opened Bonus\r\n    G.platonicBonusMultiplier[2],\r\n    // Platonic Upgrade 1x3\r\n    1 + 0.00054 * sumContents(player.usedCorruptions) * player.platonicUpgrades[3],\r\n    // Hyperreal Hepteract Bonus\r\n    1 + 0.6/1000 * hepteractEffective('hyperrealism')\r\n    // Total Hypercube Multipliers: 11\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculatePlatonicMultiplier = (score = -1) => {\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const arr = [\r\n    // Ascension Score Multiplier\r\n    Math.pow(1 + Math.max(0, score - 2.666e12) / 2.666e11, .75),\r\n    // Global Multipliers\r\n    calculateAllCubeMultiplier().mult,\r\n    // Season Pass 2\r\n    1 + 1.5 * player.shopUpgrades.seasonPass2 / 100,\r\n    // Achievement 196 Bonus\r\n    1 + Math.min(20, player.achievements[196] * 1 / 5000 * Decimal.log(player.ascendShards.add(1), 10)),\r\n    // Achievement 219-222 Bonus\r\n    1 + 4 / 100 * (player.achievements[219] + player.achievements[220] + player.achievements[221]) + 3 / 100 * player.achievements[222],\r\n    // Achievement 223 Bonus\r\n    1 + player.achievements[223] * Math.min(2, player.ascensionCount / 1.337e9),\r\n    // Achievement 257 Bonus\r\n    1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[257],\r\n    // Platonic Cube Opening Bonus\r\n    G.platonicBonusMultiplier[3],\r\n    // Platonic Upgrade 1x4\r\n    1 + 1.2 * player.platonicUpgrades[4] / 50\r\n    // Total Platonic Multipliers: 9\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateHepteractMultiplier = (score = -1) => {\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const arr = [\r\n    // Ascension Score Multiplier\r\n    Math.pow(1 + Math.max(0, score - 1.666e16) / 3.33e16, 0.85),\r\n    // Global Multiplier\r\n    calculateAllCubeMultiplier().mult,\r\n    // Season Pass 3\r\n    1 + 1.5 * player.shopUpgrades.seasonPass3 / 100,\r\n    // Achievement 258 Bonus\r\n    1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[258],\r\n    // Achievement 264 Bonus [Max: 8T Asc]\r\n    1 + Math.min(0.4, player.ascensionCount / 2e13) * player.achievements[264],\r\n    // Achievement 265 Bonus [Max: 160T Asc]\r\n    1 + Math.min(0.2, player.ascensionCount / 8e14) * player.achievements[265],\r\n    // Achievement 270 Bonus\r\n    Math.min(2, (1 + 1/1000000 * Decimal.log(player.ascendShards.add(1), 10) * player.achievements[270]))\r\n    // Total Hepteract Multipliers: 7\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const getOcteractValueMultipliers = () => {\r\n  const corruptionLevelSum = sumContents(player.usedCorruptions.slice(2, 10))\r\n  return [\r\n    1 + 1.5 * player.shopUpgrades.seasonPass3 / 100,\r\n    1 + 0.75 * player.shopUpgrades.seasonPassY / 100,\r\n    1 + player.shopUpgrades.seasonPassZ * player.singularityCount / 100,\r\n    1 + player.shopUpgrades.seasonPassLost / 1000,\r\n    // cube upgrade 70, ie Cx20\r\n    1 + +(corruptionLevelSum >= 14 * 8) * player.cubeUpgrades[70] / 10000,\r\n    1 + +(corruptionLevelSum >= 14 * 8) * +player.singularityUpgrades.divinePack.getEffect().bonus,\r\n    // next three are flame/blaze/inferno\r\n    +player.singularityUpgrades.singCubes1.getEffect().bonus,\r\n    +player.singularityUpgrades.singCubes2.getEffect().bonus,\r\n    +player.singularityUpgrades.singCubes3.getEffect().bonus,\r\n    // absinthe through eighth wonder\r\n    +player.singularityUpgrades.singOcteractGain.getEffect().bonus,\r\n    +player.singularityUpgrades.singOcteractGain2.getEffect().bonus,\r\n    +player.singularityUpgrades.singOcteractGain3.getEffect().bonus,\r\n    +player.singularityUpgrades.singOcteractGain4.getEffect().bonus,\r\n    +player.singularityUpgrades.singOcteractGain5.getEffect().bonus,\r\n    // Patreon bonus\r\n    1 + (player.worlds.BONUS / 100) * +player.singularityUpgrades.singOcteractPatreonBonus.getEffect().bonus,\r\n    // octeracts for dummies\r\n    1 + 0.2 * +player.octeractUpgrades.octeractStarter.getEffect().bonus,\r\n    // cogenesis and trigenesis\r\n    +player.octeractUpgrades.octeractGain.getEffect().bonus,\r\n    +player.octeractUpgrades.octeractGain2.getEffect().bonus,\r\n    derpsmithCornucopiaBonus(),\r\n    // digital octeract accumulator\r\n    Math.pow(1 + +player.octeractUpgrades.octeractAscensionsOcteractGain.getEffect().bonus, 1 + Math.floor(Math.log10(1 + player.ascensionCount))),\r\n    1 + calculateEventBuff('Octeract'),\r\n    1 + +player.singularityUpgrades.platonicDelta.getEffect().bonus * Math.min(9, player.singularityCounter / (3600 * 24)),\r\n    // No Singulairty Upgrades\r\n    +player.singularityChallenges.noSingularityUpgrades.rewards.cubes,\r\n    // Wow Pass INF\r\n    Math.pow(1.02, player.shopUpgrades.seasonPassInfinity)\r\n  ]\r\n}\r\n\r\nexport const octeractGainPerSecond = () => {\r\n  const SCOREREQ = 1e23\r\n  const currentScore = calculateAscensionScore().effectiveScore\r\n\r\n  const baseMultiplier = (currentScore >= SCOREREQ) ? currentScore / SCOREREQ : 0\r\n\r\n  const valueMultipliers = getOcteractValueMultipliers()\r\n\r\n  const ascensionSpeed = player.singularityUpgrades.oneMind.getEffect().bonus ? Math.pow(10, 1/2) : Math.pow(calculateAscensionAcceleration(), 1 / 2)\r\n  const oneMindModifier = player.singularityUpgrades.oneMind.getEffect().bonus ? Math.pow(calculateAscensionAcceleration() / 10, +player.octeractUpgrades.octeractOneMindImprover.getEffect().bonus): 1\r\n  const extraMult = (G.isEvent && G.eventClicked) ? 1.05 : 1\r\n  const perSecond = 1 / (24 * 3600 * 365 * 1e15) * baseMultiplier * productContents(valueMultipliers) * ascensionSpeed * oneMindModifier * extraMult\r\n  return perSecond\r\n}\r\n\r\n// This is an old calculation used only for Stats for Nerds\r\nexport const calculateOcteractMultiplier = (score = -1) => {\r\n  const SCOREREQ = 1e23\r\n  if (score < 0) {\r\n    score = calculateAscensionScore().effectiveScore\r\n  }\r\n\r\n  const arr = getOcteractValueMultipliers()\r\n\r\n  // add base score to the beginning and ascension speed mult to the end of the list\r\n  arr.unshift((score >= SCOREREQ) ? score / SCOREREQ : 0)\r\n  const ascensionSpeed = calculateAscensionAcceleration()\r\n\r\n  const ascensionSpeedMulti = (player.singularityUpgrades.oneMind.getEffect().bonus) ?\r\n    Math.pow(10, 1/2) * Math.pow(ascensionSpeed / 10, +player.octeractUpgrades.octeractOneMindImprover.getEffect().bonus) :\r\n    Math.pow(ascensionSpeed, 1/2)\r\n  arr.push(ascensionSpeedMulti)\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateTimeAcceleration = () => {\r\n  const preCorruptionArr = [\r\n    (1 + 1 / 300 * Math.log10(player.maxobtainium + 1) * player.upgrades[70]),  // Particle upgrade 2x5\r\n    (1 + player.researches[121] / 50),                                          // research 5x21\r\n    (1 + 0.015 * player.researches[136]),                                       // research 6x11\r\n    (1 + 0.012 * player.researches[151]),                                       // research 7x1\r\n    (1 + 0.009 * player.researches[166]),                                       // research 7x16\r\n    (1 + 0.006 * player.researches[181]),                                       // research 8x6\r\n    (1 + 0.003 * player.researches[196]),                                       // research 8x21\r\n    (1 + 8 * G.effectiveRuneBlessingPower[1]),                               // speed blessing\r\n    (1 + calculateCorruptionPoints() / 400 * G.effectiveRuneSpiritPower[1]), // speed SPIRIT\r\n    G.cubeBonusMultiplier[10],                                               // Chronos cube blessing\r\n    1 + player.cubeUpgrades[18] / 5,                                            // cube upgrade 2x8\r\n    calculateSigmoid(2, player.antUpgrades[12-1]! + G.bonusant12, 69),       // ant 12\r\n    (1 + 0.10 * (player.talismanRarity[2-1] - 1)),                              // Chronos Talisman bonus\r\n    G.challenge15Rewards.globalSpeed,                                        // Challenge 15 reward\r\n    1 + 0.01 * player.cubeUpgrades[52]                                          // cube upgrade 6x2 (Cx2)\r\n  ]\r\n\r\n  // Global Speed softcap + Corruption / Corruption-like effects\r\n  const corruptionArr: number[] = [\r\n    G.lazinessMultiplier[player.usedCorruptions[3]]                          // Corruption:  Spacial Dilation\r\n  ]\r\n\r\n  const corruptableTimeMult = productContents(preCorruptionArr) * corruptionArr[0] // DR applies after base corruption.\r\n\r\n  if (corruptableTimeMult > 100) {\r\n    const postSoftcap = 10 * Math.sqrt(corruptableTimeMult)\r\n    const softcapRatio = postSoftcap / corruptableTimeMult\r\n\r\n    corruptionArr.push(softcapRatio)\r\n  } else {\r\n    corruptionArr.push(1)\r\n  }\r\n\r\n  if (corruptableTimeMult < 1) {\r\n    const postPlat2x2 = Math.pow(corruptableTimeMult, 1 - player.platonicUpgrades[7] / 30)\r\n    const plat2x2Ratio = postPlat2x2 / corruptableTimeMult\r\n\r\n    corruptionArr.push(plat2x2Ratio)\r\n  } else {\r\n    corruptionArr.push(1)\r\n  }\r\n\r\n  corruptionArr.push(1.0 / calculateSingularityDebuff('Global Speed'))\r\n\r\n  // Uncorruptable effects\r\n  const postCorruptionArr = [\r\n    G.platonicBonusMultiplier[7],    // Chronos statue\r\n    1 + (player.singularityUpgrades.intermediatePack.getEffect().bonus ? 1 : 0),\r\n    1 + +player.octeractUpgrades.octeractImprovedGlobalSpeed.getEffect().bonus * player.singularityCount\r\n  ]\r\n\r\n  const timeMult = productContents(preCorruptionArr) * productContents(corruptionArr) * productContents(postCorruptionArr)\r\n\r\n\r\n  if (player.usedCorruptions[3] >= 6 && player.achievements[241] < 1) {\r\n    achievementaward(241)\r\n  }\r\n  if (timeMult > 3600 && player.achievements[242] < 1) {\r\n    achievementaward(242)\r\n  }\r\n\r\n  return {\r\n    preList: preCorruptionArr,\r\n    drList: corruptionArr,\r\n    postList: postCorruptionArr,\r\n    mult: timeMult\r\n  }\r\n}\r\n\r\nexport const calculateLimitedAscensionsDebuff = () => {\r\n  if (!player.singularityChallenges.limitedAscensions.enabled) {\r\n    return 1\r\n  } else {\r\n    let exponent = (player.ascensionCount - Math.max(0, 20 - player.singularityChallenges.limitedAscensions.completions))\r\n    exponent = Math.max(0, exponent)\r\n    return Math.pow(2, exponent)\r\n  }\r\n}\r\n\r\nexport const calculateAscensionSpeedMultiplier = () => {\r\n  const arr = [\r\n    1 + 1.2 / 100 * player.shopUpgrades.chronometer,                                                // Chronometer\r\n    1 + 0.6 / 100 * player.shopUpgrades.chronometer2,                                               // Chronometer 2\r\n    1 + 1.5 / 100 * player.shopUpgrades.chronometer3,                                               // Chronometer 3\r\n    1 + 0.6 / 1000 * hepteractEffective('chronos'),                                                 // Chronos Hepteract\r\n    1 + Math.min(0.10, 1 / 100 * Math.log10(player.ascensionCount + 1)) * player.achievements[262], // Achievement 262 Bonus\r\n    1 + Math.min(0.10, 1 / 100 * Math.log10(player.ascensionCount + 1)) * player.achievements[263], // Achievement 263 Bonus\r\n    1 + 0.002 * sumContents(player.usedCorruptions) * player.platonicUpgrades[15],                  // Platonic Omega\r\n    G.challenge15Rewards.ascensionSpeed,                                                         // Challenge 15 Reward\r\n    1 + 1 / 400 * player.cubeUpgrades[59],                                                          // Cookie Upgrade 9\r\n    1 + 0.5 * (player.singularityUpgrades.intermediatePack.getEffect().bonus ? 1 : 0),              // Intermediate Pack, Sing Shop\r\n    1 + 1 / 1000 * player.singularityCount * player.shopUpgrades.chronometerZ,                      // Chronometer Z\r\n    1 + +player.octeractUpgrades.octeractImprovedAscensionSpeed.getEffect().bonus * player.singularityCount, // Abstract Photokinetics, Oct Upg\r\n    1 + +player.octeractUpgrades.octeractImprovedAscensionSpeed2.getEffect().bonus * player.singularityCount, // Abstract Exokinetics, Oct Upg\r\n    1 + calculateEventBuff('Ascension Speed'),                                                      // Event\r\n    (player.singularityUpgrades.singAscensionSpeed2.level > 0 && player.runelevels[6] < 1) ? 6 : 1, // A mediocre ascension speedup!\r\n    Math.pow(1.01, player.shopUpgrades.chronometerInfinity),                                         // Chronometer INF\r\n    1 / calculateLimitedAscensionsDebuff(),                                                           // EXALT Debuff\r\n    Math.pow(1 + +player.singularityChallenges.limitedAscensions.rewards.ascensionSpeedMult, 1 + Math.max(0, Math.floor(Math.log10(player.ascensionCount)))) // EXALT Buff                                                                                                 // EXALT Buff\r\n  ]\r\n\r\n  // A hecking good ascension speedup!\r\n  const baseMultiplier = productContents(arr)\r\n  const exponent = (player.singularityUpgrades.singAscensionSpeed.level > 0\r\n    ? (baseMultiplier >= 1\r\n      ? 1.03\r\n      : 0.97)\r\n    : 1)\r\n  arr.push(Math.pow(baseMultiplier, exponent) / baseMultiplier)\r\n\r\n  // Singularity Penalty\r\n  arr.push(1 / calculateSingularityDebuff('Ascension Speed'))\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateAscensionAcceleration = () => {\r\n  return calculateAscensionSpeedMultiplier().mult\r\n}\r\n\r\nexport const calculateSingularityQuarkMilestoneMultiplier = () => {\r\n  let multiplier = 1\r\n  const singThresholds = [5, 20, 35, 50, 65, 80, 90, 100, 121, 144, 150, 160, 166, 169, 170, 175, 180, 190, 196, 200, 200, 201, 202, 203, 204, 205, 210, 212, 214, 216, 218, 220, 225, 250]\r\n  for (const sing of singThresholds) {\r\n    if (player.highestSingularityCount >= sing) {\r\n      multiplier *= 1.05\r\n    }\r\n  }\r\n\r\n  if (player.highestSingularityCount >= 200) {\r\n    multiplier *= Math.pow((player.highestSingularityCount - 179) / 20, 2)\r\n  }\r\n\r\n  return multiplier\r\n}\r\n\r\nexport const calculateQuarkMultiplier = () => {\r\n  let multiplier = 1\r\n  if (player.achievementPoints > 0) { // Achievement Points\r\n    multiplier += player.achievementPoints / 25000 // Cap of +0.20 at 5,000 Pts\r\n  }\r\n  if (player.achievements[250] > 0) { // Max research 8x25\r\n    multiplier += 0.10\r\n  }\r\n  if (player.achievements[251] > 0) { // Max Wow! Cube Upgrade 5x10\r\n    multiplier += 0.10\r\n  }\r\n  if (player.platonicUpgrades[5] > 0) { // Platonic ALPHA upgrade\r\n    multiplier += 0.20\r\n  }\r\n  if (player.platonicUpgrades[10] > 0) { // Platonic BETA Upgrade\r\n    multiplier += 0.25\r\n  }\r\n  if (player.platonicUpgrades[15] > 0) { // Platonic OMEGA upgrade\r\n    multiplier += 0.30\r\n  }\r\n  if (player.challenge15Exponent >= 1e11) { // Challenge 15: Exceed 1e11 exponent reward\r\n    multiplier += (G.challenge15Rewards.quarks - 1)\r\n  }\r\n  if (player.shopUpgrades.infiniteAscent) { // Purchased Infinite Ascent Rune\r\n    multiplier *= (1.1 + 0.15 / 75 * calculateEffectiveIALevel())\r\n  }\r\n  if (player.challenge15Exponent >= 1e15) { // Challenge 15: Exceed 1e15 exponent reward\r\n    multiplier *= (1 + 5/10000 * hepteractEffective('quark'))\r\n  }\r\n  if (player.overfluxPowder > 0) { // Overflux Powder [Max: 10% at 10,000]\r\n    multiplier *= calculateQuarkMultFromPowder()\r\n  }\r\n  if (player.achievements[266] > 0) { // Achievement 266 [Max: 10% at 1Qa Ascensions]\r\n    multiplier *= (1 + Math.min(0.1, (player.ascensionCount) / 1e16))\r\n  }\r\n  if (player.singularityCount > 0) { // Singularity Modifier\r\n    multiplier *= (1 + player.singularityCount / 10)\r\n  }\r\n  if (G.isEvent) {\r\n    multiplier *= 1 + calculateEventBuff('Quarks') + calculateEventBuff('One Mind')\r\n  }\r\n  if (player.cubeUpgrades[53] > 0) { // Cube Upgrade 6x3 (Cx3)\r\n    multiplier *= (1 + 0.10 * player.cubeUpgrades[53] / 100)\r\n  }\r\n  if (player.cubeUpgrades[68] > 0) { // Cube Upgrade 7x8\r\n    multiplier *= (1 + 1/10000 * player.cubeUpgrades[68] + 0.05 * (Math.floor(player.cubeUpgrades[68] / 1000)))\r\n  }\r\n\r\n  multiplier *= calculateSingularityQuarkMilestoneMultiplier()\r\n\r\n  multiplier *= +player.octeractUpgrades.octeractQuarkGain.getEffect().bonus // Oct Improver 1\r\n  multiplier *= (1 + 0.3 * + player.octeractUpgrades.octeractStarter.getEffect().bonus) // Oct Starter Pack\r\n\r\n  multiplier *= (1 + 1/10000 * Math.floor(player.octeractUpgrades.octeractQuarkGain.level / 111) *\r\n                                player.octeractUpgrades.octeractQuarkGain2.level *\r\n                                Math.floor(1 + Math.log10(Math.max(1, player.hepteractCrafts.quark.BAL)))) // Improver 2\r\n\r\n  multiplier *= (1 + 0.02 * player.singularityUpgrades.intermediatePack.level +               // 1.02\r\n                           0.04 * player.singularityUpgrades.advancedPack.level +               // 1.06\r\n                           0.06 * player.singularityUpgrades.expertPack.level +                 // 1.12\r\n                           0.08 * player.singularityUpgrades.masterPack.level +                 // 1.20\r\n                           0.10 * player.singularityUpgrades.divinePack.level)                  // 1.30\r\n\r\n  multiplier *= 1 + +player.singularityUpgrades.singQuarkImprover1.getEffect().bonus // Doohickey\r\n  multiplier *= calculateTotalOcteractQuarkBonus()\r\n\r\n  if (player.highestSingularityCount === 0) {\r\n    multiplier *= 1.25\r\n  }\r\n\r\n  return multiplier\r\n}\r\n\r\n/**\r\n *\r\n * Calculate the number of Golden Quarks earned in current singularity\r\n */\r\nexport const calculateGoldenQuarkMultiplier = (computeMultiplier = false) => {\r\n  const base = 2 * player.singularityCount + 10\r\n\r\n  let bonus = (player.singularityCount < 10) ? (200 - 10 * player.singularityCount) : 0\r\n  if (player.singularityCount === 0) {\r\n    bonus += 200\r\n  }\r\n\r\n  let perkMultiplier = 1\r\n  if (player.highestSingularityCount >= 200) {\r\n    perkMultiplier = 3\r\n  }\r\n  if (player.highestSingularityCount >= 208) {\r\n    perkMultiplier = 5\r\n  }\r\n  if (player.highestSingularityCount >= 221) {\r\n    perkMultiplier = 8\r\n  }\r\n\r\n  const arr = [\r\n    1 + Math.max(0, Math.log10(player.challenge15Exponent + 1) - 20) / 2,                           // Challenge 15 Exponent\r\n    1 + player.worlds.BONUS / 100,                                                                  // Patreon Bonus\r\n    +player.singularityUpgrades.goldenQuarks1.getEffect().bonus,                                    // Golden Quarks I\r\n    1 + 0.12 * player.cubeUpgrades[69],                                                             // Cookie Upgrade 19\r\n    +player.singularityChallenges.noSingularityUpgrades.rewards.goldenQuarks,                       // No Singularity Upgrades\r\n    1 + calculateEventBuff('Golden Quarks'),                                                        // Event\r\n    1 + getFastForwardTotalMultiplier(),                                                            // Singularity Fast Forwards\r\n    player.highestSingularityCount >= 100 ? 1 + Math.min(1, player.highestSingularityCount / 250) : 1, // Golden Revolution II\r\n    perkMultiplier                                                                                  // Immaculate Alchemy\r\n  ]\r\n\r\n  // Total Quarks Coefficient\r\n  arr.push(computeMultiplier\r\n    ? 1 / 1e5\r\n    : ((base + player.quarksThisSingularity / 1e5) * productContents(arr) + bonus) / productContents(arr)\r\n  )\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateGoldenQuarkGain = (computeMultiplier = false):number => {\r\n  return calculateGoldenQuarkMultiplier(computeMultiplier).mult\r\n}\r\n\r\nexport const calculateCorruptionPoints = () => {\r\n  let basePoints = 400\r\n  const bonusLevel = player.singularityUpgrades.corruptionFifteen.getEffect().bonus ? 1 : 0\r\n\r\n  for (let i = 1; i <= 9; i++) {\r\n    basePoints += 16 * Math.pow(player.usedCorruptions[i] + bonusLevel, 2)\r\n  }\r\n\r\n  return (basePoints)\r\n}\r\n\r\n//If you want to sum from a baseline level i to the maximum buyable level n, what would the cost be and how many levels would you get?\r\nexport const calculateSummationLinear = (\r\n  baseLevel: number,\r\n  baseCost: number,\r\n  resourceAvailable: number,\r\n  differenceCap = 1e9\r\n): [number, number] => {\r\n  const subtractCost = baseCost * baseLevel * (1 + baseLevel) / 2\r\n  const buyToLevel = Math.min(baseLevel + differenceCap, Math.floor(-1 / 2 + Math.sqrt(1 / 4 + 2 * (resourceAvailable + subtractCost) / baseCost)))\r\n  const realCost = (baseCost * buyToLevel * (1 + buyToLevel) / 2) - subtractCost\r\n\r\n  return [\r\n    buyToLevel,\r\n    realCost\r\n  ]\r\n}\r\n\r\n//If you want to sum from a baseline level baseLevel to some level where the cost per level is base * (1 + level * diffPerLevel), this finds out how many total levels you can buy.\r\nexport const calculateSummationNonLinear = (\r\n  baseLevel: number,\r\n  baseCost: number,\r\n  resourceAvailable: number,\r\n  diffPerLevel: number,\r\n  buyAmount: number\r\n): {levelCanBuy: number, cost: number} => {\r\n  const c = diffPerLevel / 2\r\n  resourceAvailable = resourceAvailable || 0\r\n  const alreadySpent = baseCost * (c * Math.pow(baseLevel, 2) + baseLevel * (1 - c))\r\n  resourceAvailable += alreadySpent\r\n  const v = resourceAvailable / baseCost\r\n  let buyToLevel = c > 0\r\n    ? Math.max(0, Math.floor((c - 1) / (2 * c) + Math.pow(Math.pow(1 - c, 2) + 4 * c * v, 1 / 2) / (2 * c)))\r\n    : Math.floor(v)\r\n\r\n  buyToLevel = Math.min(buyToLevel, buyAmount + baseLevel)\r\n  buyToLevel = Math.max(buyToLevel, baseLevel)\r\n  let totalCost = baseCost * (c * Math.pow(buyToLevel, 2) + buyToLevel * (1 - c)) - alreadySpent\r\n  if (buyToLevel == baseLevel) {\r\n    totalCost = baseCost * (1 + 2 * c * baseLevel)\r\n  }\r\n  return {\r\n    levelCanBuy: buyToLevel,\r\n    cost: totalCost\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param n A nonnegative integer\r\n * @returns The sum of the first n positive cubes, 0 if n = 0, or -1 otherwise.\r\n */\r\nexport const calculateSummationCubic = (n: number) => {\r\n\r\n  if (n < 0) {\r\n    return -1\r\n  }\r\n  if (!Number.isInteger(n)) {\r\n    return -1\r\n  }\r\n\r\n  return Math.pow(n * (n+1) / 2, 2)\r\n}\r\n\r\n/**\r\n * Solves a*n^2 + b*n + c = 0 for real solutions.\r\n * @param a Coefficient of n^2. Must be nonzero!\r\n * @param b Coefficient of n.\r\n * @param c Coefficient of constant term\r\n * @param positive Boolean which if true makes solution use positive discriminant.\r\n * @returns Positive root of the quadratic, if it exists, and positive is true, otherwise false\r\n */\r\nexport const solveQuadratic = (a: number, b: number, c:number, positive:boolean) => {\r\n  if (a < 0) {\r\n    throw new Error(String(i18next.t('calculate.quadraticImproperError')))\r\n  }\r\n  const determinant = Math.pow(b, 2) - 4 * a * c\r\n  if (determinant < 0) {\r\n    throw new Error(String(i18next.t('calculate.quadraticDeterminantError')))\r\n  }\r\n\r\n  if (determinant === 0) {\r\n    return -b / (2 * a)\r\n  }\r\n  const numeratorPos = -b + Math.sqrt(Math.pow(b, 2) - 4 * a * c)\r\n  const numeratorNeg = -b - Math.sqrt(Math.pow(b, 2) - 4 * a * c)\r\n\r\n  if (positive) {\r\n    return numeratorPos / (2 * a)\r\n  } else {\r\n    return numeratorNeg / (2 * a)\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param initialLevel\r\n * @param base\r\n * @param amountToSpend\r\n */\r\nexport const calculateCubicSumData = (initialLevel: number, baseCost: number,\r\n  amountToSpend: number, maxLevel: number) => {\r\n  if (initialLevel >= maxLevel) {\r\n    return {\r\n      levelCanBuy: maxLevel,\r\n      cost: 0\r\n    }\r\n  }\r\n  const alreadySpent = baseCost * calculateSummationCubic(initialLevel)\r\n  const totalToSpend = alreadySpent + amountToSpend\r\n\r\n  // Solves (n(n+1)/2)^2 * baseCost = totalToSpend\r\n  /* Create a det = Sqrt(totalToSpend / baseCost)\r\n    *  Simplification gives n * (n+1) = 2 * det\r\n    *  We can rewrite as n^2 + n - 2 * det = 0 and solve for n.\r\n    */\r\n  if (totalToSpend < 0) {\r\n    throw new Error(String(i18next.t('calculate.cubicSumNegativeError')))\r\n  }\r\n\r\n  const determinantRoot = Math.pow(totalToSpend / baseCost, 0.5) // Assume nonnegative!\r\n  const solution = solveQuadratic(1, 1, -2 * determinantRoot, true)\r\n\r\n  const levelToBuy = Math.max(Math.min(maxLevel, Math.floor(solution)), initialLevel)\r\n  const realCost = (levelToBuy === initialLevel)? baseCost * Math.pow(initialLevel + 1, 3) :\r\n    baseCost * calculateSummationCubic(levelToBuy) - alreadySpent\r\n\r\n  return {\r\n    levelCanBuy: levelToBuy,\r\n    cost: realCost\r\n  }\r\n}\r\n\r\n// IDEA: Rework this shit to be friendly for Stats for Nerds\r\n/* May 25, 2021 - Platonic\r\n    Reorganize this function to make sense, because right now it aint\r\n    What I did was use the separation of cube gain method on other cube types, and made some methods their\r\n    own function (specifically: calc of effective score and other global multipliers) to make it easy.\r\n*/\r\n\r\nexport const computeAscensionScoreBonusMultiplier = () => {\r\n  let multiplier = 1\r\n  multiplier *= G.challenge15Rewards.score\r\n  multiplier *= G.platonicBonusMultiplier[6]\r\n\r\n  if (player.cubeUpgrades[21] > 0) {\r\n    multiplier *= (1 + 0.05 * player.cubeUpgrades[21])\r\n  }\r\n  if (player.cubeUpgrades[31] > 0) {\r\n    multiplier *= (1 + 0.05 * player.cubeUpgrades[31])\r\n  }\r\n  if (player.cubeUpgrades[41] > 0) {\r\n    multiplier *= (1 + 0.05 * player.cubeUpgrades[41])\r\n  }\r\n  if (player.achievements[267] > 0) {\r\n    multiplier *= (1 + Math.min(1, 1/100000 * Decimal.log(player.ascendShards.add(1), 10)))\r\n  }\r\n  if (player.achievements[259] > 0) {\r\n    multiplier *= Math.max(1, Math.pow(1.01, Math.log2(player.hepteractCrafts.abyss.CAP)))\r\n  }\r\n  if (G.isEvent) {\r\n    multiplier *= 1 + calculateEventBuff('Ascension Score')\r\n  }\r\n\r\n  return multiplier\r\n}\r\n\r\nexport const calculateAscensionScore = () => {\r\n  let baseScore = 0\r\n  let corruptionMultiplier = 1\r\n  let effectiveScore = 0\r\n\r\n  let bonusLevel = player.singularityUpgrades.corruptionFifteen.getEffect().bonus ? 1 : 0\r\n  bonusLevel += +player.singularityChallenges.oneChallengeCap.rewards.freeCorruptionLevel\r\n  // Init Arrays with challenge values :)\r\n  const challengeScoreArrays1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300]\r\n  const challengeScoreArrays2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450]\r\n  const challengeScoreArrays3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750]\r\n  const challengeScoreArrays4 = [0, 10000, 10000, 10000, 10000, 10000, 2000, 3000, 4000, 5000, 7500]\r\n\r\n  challengeScoreArrays1[1] += player.cubeUpgrades[56]\r\n  challengeScoreArrays1[2] += player.cubeUpgrades[56]\r\n  challengeScoreArrays1[3] += player.cubeUpgrades[56]\r\n\r\n  // Iterate challenges 1 through 10 and award base score according to the array values\r\n  // Transcend Challenge: First Threshold at 75 completions, second at 750\r\n  // Reincarnation Challenge: First at 25, second at 60. It probably should be higher but Platonic is a dumb dumb\r\n  for (let i = 1; i <= 10; i++) {\r\n    baseScore += challengeScoreArrays1[i] * player.highestchallengecompletions[i]\r\n    if (i <= 5 && player.highestchallengecompletions[i] >= 75) {\r\n      baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 75)\r\n      if (player.highestchallengecompletions[i] >= 750) {\r\n        baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 750)\r\n      }\r\n      if (player.highestchallengecompletions[i] >= 9000) {\r\n        baseScore += challengeScoreArrays4[i] * (player.highestchallengecompletions[i] - 9000)\r\n      }\r\n    }\r\n    if (i <= 10 && i > 5 && player.highestchallengecompletions[i] >= 25) {\r\n      baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 25)\r\n      if (player.highestchallengecompletions[i] >= 60) {\r\n        baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 60)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Calculation of Challenge 10 Exponent (It gives a constant multiplier per completion)\r\n  // 1.03 +\r\n  // 0.005 from Cube 3x9 +\r\n  // 0.0025 from Platonic ALPHA (Plat 1x5)\r\n  // 0.005 from Platonic BETA (Plat 2x5)\r\n  // Max: 1.0425\r\n  baseScore *= Math.pow(1.03 + 0.005 * player.cubeUpgrades[39] + 0.0025 * (player.platonicUpgrades[5] + player.platonicUpgrades[10]), player.highestchallengecompletions[10])\r\n  // Corruption Multiplier is the product of all Corruption Score multipliers based on used corruptions\r\n  let bonusVal = player.singularityUpgrades.advancedPack.getEffect().bonus ? 0.33: 0\r\n  bonusVal += +player.singularityChallenges.oneChallengeCap.rewards.corrScoreIncrease\r\n  for (let i = 2; i < 10; i++) {\r\n    const exponent = ((i === 2) && player.usedCorruptions[i] >= 10) ? 1 + 2 * Math.min(1, player.platonicUpgrades[17]) + 0.04 * player.platonicUpgrades[17] : 1\r\n    corruptionMultiplier *= (Math.pow(G.corruptionPointMultipliers[player.usedCorruptions[i] + bonusLevel], exponent) + bonusVal)\r\n\r\n    if (player.usedCorruptions[i] >= 14 && player.singularityUpgrades.masterPack.getEffect().bonus) {\r\n      corruptionMultiplier *= 1.1\r\n    }\r\n  }\r\n\r\n  const bonusMultiplier = computeAscensionScoreBonusMultiplier()\r\n\r\n  effectiveScore = baseScore * corruptionMultiplier * bonusMultiplier\r\n  if (effectiveScore > 1e23) {\r\n    effectiveScore = Math.pow(effectiveScore, 0.5) * Math.pow(1e23, 0.5)\r\n  }\r\n\r\n  player.singularityUpgrades.expertPack.getEffect().bonus ? effectiveScore *= 1.5 : effectiveScore *= 1\r\n\r\n  return {\r\n    baseScore,\r\n    corruptionMultiplier,\r\n    bonusMultiplier,\r\n    effectiveScore\r\n  }\r\n}\r\n\r\nexport const CalcCorruptionStuff = () => {\r\n  let cubeBank = 0\r\n  let challengeModifier = 1\r\n  const scores = calculateAscensionScore()\r\n\r\n  const baseScore = scores.baseScore\r\n  const corruptionMultiplier = scores.corruptionMultiplier\r\n  const bonusMultiplier = scores.bonusMultiplier\r\n  const effectiveScore = scores.effectiveScore\r\n\r\n  for (let i = 1; i <= 10; i++) {\r\n    challengeModifier = (i >= 6) ? 2 : 1\r\n    cubeBank += challengeModifier * player.highestchallengecompletions[i]\r\n  }\r\n\r\n  const oneMindModifier = (player.singularityUpgrades.oneMind.getEffect().bonus) ? calculateAscensionAcceleration() / 10 : 1\r\n\r\n  // Calculation of Cubes :)\r\n  let cubeGain = cubeBank\r\n  cubeGain *= calculateCubeMultiplier(effectiveScore).mult\r\n  cubeGain *= oneMindModifier\r\n\r\n  const bonusCubeExponent = (player.singularityUpgrades.platonicTau.getEffect().bonus) ? 1.01 : 1\r\n  cubeGain = Math.pow(cubeGain, bonusCubeExponent)\r\n\r\n  // Calculation of Tesseracts :))\r\n  let tesseractGain = 1\r\n  if (effectiveScore >= 100000) {\r\n    tesseractGain += 0.5\r\n  }\r\n  tesseractGain *= calculateTesseractMultiplier(effectiveScore).mult\r\n  tesseractGain *= oneMindModifier\r\n\r\n  // Calculation of Hypercubes :)))\r\n  let hypercubeGain = (effectiveScore >= 1e9) ? 1 : 0\r\n  hypercubeGain *= calculateHypercubeMultiplier(effectiveScore).mult\r\n  hypercubeGain *= oneMindModifier\r\n\r\n  // Calculation of Platonic Cubes :))))\r\n  let platonicGain = (effectiveScore >= 2.666e12) ? 1 : 0\r\n  platonicGain *= calculatePlatonicMultiplier(effectiveScore).mult\r\n  platonicGain *= oneMindModifier\r\n\r\n  // Calculation of Hepteracts :)))))\r\n  let hepteractGain = (G.challenge15Rewards.hepteractUnlocked && effectiveScore >= 1.666e17 && player.achievements[255] > 0) ? 1 : 0\r\n  hepteractGain *= calculateHepteractMultiplier(effectiveScore).mult\r\n  hepteractGain *= oneMindModifier\r\n\r\n  return [\r\n    cubeBank,\r\n    Math.floor(baseScore),\r\n    corruptionMultiplier,\r\n    Math.floor(effectiveScore),\r\n    Math.floor(cubeGain),\r\n    Math.max(player.singularityCount, Math.floor(tesseractGain)),\r\n    Math.floor(hypercubeGain),\r\n    Math.floor(platonicGain),\r\n    Math.floor(hepteractGain),\r\n    bonusMultiplier\r\n  ]\r\n}\r\n\r\nexport const calcAscensionCount = () => {\r\n  let ascCount = 1\r\n\r\n  if (player.singularityChallenges.limitedAscensions.enabled) {\r\n    return ascCount\r\n  }\r\n\r\n  if (player.challengecompletions[10] > 0 && player.achievements[197] === 1) {\r\n    const { effectiveScore } = calculateAscensionScore()\r\n\r\n    if (player.ascensionCounter >= 10) {\r\n      if (player.achievements[188] > 0) {\r\n        ascCount += 99\r\n      }\r\n\r\n      ascCount *= 1 + (player.ascensionCounter / 10 - 1) * 0.2\r\n                 * (player.achievements[189] + player.achievements[202] + player.achievements[209] + player.achievements[216] + player.achievements[223])\r\n    }\r\n\r\n    ascCount *= player.achievements[187] && Math.floor(effectiveScore) > 1e8 ? (Math.log10(Math.floor(effectiveScore) + 1) - 1) : 1\r\n    ascCount *= G.challenge15Rewards.ascensions\r\n    ascCount *= (player.achievements[260] > 0 ? 1.1 : 1)\r\n    ascCount *= (player.achievements[261] > 0 ? 1.1 : 1)\r\n    ascCount *= (player.platonicUpgrades[15] > 0 ? 2 : 1)\r\n    ascCount *= (1 + 0.02 * player.platonicUpgrades[16])\r\n    ascCount *= (1 + 0.02 * player.platonicUpgrades[16] * Math.min(1, player.overfluxPowder / 100000))\r\n    ascCount *= (1 + player.singularityCount / 10)\r\n    ascCount *= +player.singularityUpgrades.ascensions.getEffect().bonus\r\n    ascCount *= +player.octeractUpgrades.octeractAscensions.getEffect().bonus\r\n    ascCount *= +player.octeractUpgrades.octeractAscensions2.getEffect().bonus\r\n    ascCount *= (player.singularityUpgrades.oneMind.getEffect().bonus) ? calculateAscensionAcceleration() / 10 : 1\r\n  }\r\n\r\n  return Math.floor(ascCount)\r\n}\r\n\r\n/**\r\n * Calculates the product of all Powder bonuses.\r\n * @returns The amount of Powder gained per Expired Orb on day reset\r\n */\r\nexport const calculatePowderConversion = () => {\r\n  const arr = [\r\n    1/100, // base\r\n    G.challenge15Rewards.powder, // Challenge 15: Powder Bonus\r\n    (1 + player.shopUpgrades.powderEX / 50), // powderEX shop upgrade, 2% per level max 20%\r\n    (1 + player.achievements[256] / 20), // Achievement 256, 5%\r\n    (1 + player.achievements[257] / 20), // Achievement 257, 5%\r\n    1 + 0.01 * player.platonicUpgrades[16], // Platonic Upgrade 4x1\r\n    1 + calculateEventBuff('Powder Conversion') // Event\r\n  ]\r\n\r\n  return {\r\n    list: arr,\r\n    mult: productContents(arr)\r\n  }\r\n}\r\n\r\nexport const calculateCubeQuarkMultiplier = () => {\r\n  return (calculateSigmoid(2, Math.pow(player.overfluxOrbs, 0.5), 40) +\r\n           calculateSigmoid(1.5, Math.pow(player.overfluxOrbs, 0.5), 160) +\r\n           calculateSigmoid(1.5, Math.pow(player.overfluxOrbs, 0.5), 640) +\r\n           calculateSigmoid(1.15, +(player.highestSingularityCount >= 1) * Math.pow(player.overfluxOrbs, 0.45), 2560) +\r\n           calculateSigmoid(1.15, +(player.highestSingularityCount >= 2) * Math.pow(player.overfluxOrbs, 0.4), 10000) +\r\n           calculateSigmoid(1.25, +(player.highestSingularityCount >= 5) * Math.pow(player.overfluxOrbs, 0.35), 40000) +\r\n           calculateSigmoid(1.25, +(player.highestSingularityCount >= 10) * Math.pow(player.overfluxOrbs, 0.32), 160000) +\r\n           calculateSigmoid(1.35, +(player.highestSingularityCount >= 15) * Math.pow(player.overfluxOrbs, 0.27), 640000) +\r\n           calculateSigmoid(1.45, +(player.highestSingularityCount >= 20) * Math.pow(player.overfluxOrbs, 0.24), 2e6) +\r\n           calculateSigmoid(1.55, +(player.highestSingularityCount >= 25) * Math.pow(player.overfluxOrbs, 0.21), 1e7) +\r\n           calculateSigmoid(1.85, +(player.highestSingularityCount >= 30) * Math.pow(player.overfluxOrbs, 0.18), 4e7) +\r\n           calculateSigmoid(3, +(player.highestSingularityCount >= 35) * Math.pow(player.overfluxOrbs, 0.15), 1e8) -\r\n           11) * (1 + 1/500 * player.shopUpgrades.cubeToQuarkAll) *\r\n           (player.autoWarpCheck ? 1 + player.dailyPowderResetUses : 1)\r\n}\r\n\r\nexport const calculateCubeMultFromPowder = () => {\r\n  return (player.overfluxPowder > 10000) ? (1 + 1/16 * Math.pow(Math.log10(player.overfluxPowder), 2)) : (1 + 1/10000 * player.overfluxPowder)\r\n}\r\n\r\nexport const calculateQuarkMultFromPowder = () => {\r\n  return (player.overfluxPowder > 10000) ? (1 + 1/40 * Math.log10(player.overfluxPowder)) : (1 + 1/100000 * player.overfluxPowder)\r\n}\r\n\r\nexport const dailyResetCheck = () => {\r\n  if (!player.dayCheck) {\r\n    return\r\n  }\r\n  const now = new Date(getTimePinnedToLoadDate())\r\n  const day = new Date(now.getFullYear(), now.getMonth(), now.getDate())\r\n  const h = now.getHours()\r\n  const m = now.getMinutes()\r\n  const s = now.getSeconds()\r\n  player.dayTimer = (60 * 60 * 24) - (60 * 60 * h) - (60 * m) - s\r\n\r\n  // Daily is not reset even if it is set to a past time.\r\n  // If the daily is not reset, the data may have been set to a future time.\r\n  if (day.getTime() - 3600000 > player.dayCheck.getTime()) {\r\n    player.dayCheck = day\r\n\r\n    forcedDailyReset(true)\r\n    player.dailyPowderResetUses = 1 + player.shopUpgrades.extraWarp\r\n    player.dailyCodeUsed = false\r\n\r\n    DOMCacheGetOrSet('cubeQuarksOpenRequirement').style.display = 'block'\r\n    if (player.challengecompletions[11] > 0) {\r\n      DOMCacheGetOrSet('tesseractQuarksOpenRequirement').style.display = 'block'\r\n    }\r\n    if (player.challengecompletions[13] > 0) {\r\n      DOMCacheGetOrSet('hypercubeQuarksOpenRequirement').style.display = 'block'\r\n    }\r\n    if (player.challengecompletions[14] > 0) {\r\n      DOMCacheGetOrSet('platonicCubeQuarksOpenRequirement').style.display = 'block'\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Resets Cube Counts and stuff. NOTE: It is intentional it does not award powder or expire orbs.\r\n */\r\nexport const forcedDailyReset = (rewards = false) => {\r\n  player.cubeQuarkDaily = 0\r\n  player.tesseractQuarkDaily = 0\r\n  player.hypercubeQuarkDaily = 0\r\n  player.platonicCubeQuarkDaily = 0\r\n  player.cubeOpenedDaily = 0\r\n  player.tesseractOpenedDaily = 0\r\n  player.hypercubeOpenedDaily = 0\r\n  player.platonicCubeOpenedDaily = 0\r\n\r\n  if (rewards) {\r\n    player.overfluxPowder += player.overfluxOrbs * calculatePowderConversion().mult\r\n    player.overfluxOrbs = G.challenge15Rewards.freeOrbs\r\n  }\r\n}\r\n\r\nexport const calculateEventBuff = (buff: string) => {\r\n  if (!G.isEvent) {\r\n    return 0\r\n  }\r\n  return calculateEventSourceBuff(buff)\r\n}\r\n\r\nexport const derpsmithCornucopiaBonus = () => {\r\n  let counter = 0\r\n  const singCounts = [18, 38, 58, 78, 88, 98, 118, 148, 178, 188, 198, 208, 218, 228, 238, 248]\r\n  for (const sing of singCounts) {\r\n    if (player.highestSingularityCount >= sing) {\r\n      counter += 1\r\n    }\r\n  }\r\n\r\n  return 1 + counter * player.highestSingularityCount / 100\r\n}\r\n", "import { player, format, formatTimeShort /*formatTimeShort*/ } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport Decimal from 'break_infinity.js'\r\nimport { CalcCorruptionStuff, calculateAscensionAcceleration, calculateTimeAcceleration } from './Calculate'\r\nimport { achievementaward, totalachievementpoints } from './Achievements'\r\nimport { displayRuneInformation } from './Runes'\r\nimport { autoResearchEnabled } from './Research'\r\nimport { visualUpdateBuildings, visualUpdateUpgrades, visualUpdateAchievements, visualUpdateRunes, visualUpdateChallenges, visualUpdateResearch, visualUpdateSettings, visualUpdateShop, visualUpdateSingularity, visualUpdateAnts, visualUpdateCubes, visualUpdateCorruptions, visualUpdateEvent } from './UpdateVisuals'\r\nimport { getMaxChallenges } from './Challenges'\r\nimport type { OneToFive, ZeroToFour, ZeroToSeven } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { updateSingularityPenalties, updateSingularityPerks } from './singularity'\r\nimport { revealCorruptions } from './Corruptions'\r\nimport i18next from 'i18next'\r\nimport type { TabNames } from './Tabs'\r\n\r\nexport const revealStuff = () => {\r\n  const example = document.getElementsByClassName('coinunlock1') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example.length; i++) {\r\n    example[i].style.display = player.unlocks.coinone ? 'block' : 'none'\r\n  }\r\n\r\n  const example2 = document.getElementsByClassName('coinunlock2') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example2.length; i++) {\r\n    example2[i].style.display = player.unlocks.cointwo ? 'block' : 'none'\r\n  }\r\n\r\n  const example3 = document.getElementsByClassName('coinunlock3') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example3.length; i++) {\r\n    example3[i].style.display = player.unlocks.cointhree ? 'block' : 'none'\r\n  }\r\n\r\n  const example4 = document.getElementsByClassName('coinunlock4') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example4.length; i++) {\r\n    example4[i].style.display = player.unlocks.coinfour ? 'block' : 'none'\r\n  }\r\n\r\n  const example5 = document.getElementsByClassName('prestigeunlock') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example5.length; i++) {\r\n    const parent = example5[i].parentElement!\r\n    if (parent.classList.contains('offlineStats')) {\r\n      example5[i].style.display = player.unlocks.prestige ? 'flex' : 'none'\r\n    } else {\r\n      example5[i].style.display = player.unlocks.prestige ? 'block' : 'none'\r\n    }\r\n  }\r\n\r\n  const example6 = document.getElementsByClassName('generationunlock') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example6.length; i++) {\r\n    example6[i].style.display = player.unlocks.generation ? 'block' : 'none'\r\n  }\r\n\r\n  const example7 = document.getElementsByClassName('transcendunlock') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example7.length; i++) {\r\n    const parent = example7[i].parentElement!\r\n    if (parent.classList.contains('offlineStats')) {\r\n      example7[i].style.display = player.unlocks.transcend ? 'flex' : 'none'\r\n    } else {\r\n      example7[i].style.display = player.unlocks.transcend ? 'block' : 'none'\r\n    }\r\n  }\r\n\r\n  const example8 = document.getElementsByClassName('reincarnationunlock') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example8.length; i++) {\r\n    const parent = example8[i].parentElement!\r\n    if (parent.classList.contains('offlineStats')) {\r\n      example8[i].style.display = player.unlocks.reincarnate ? 'flex' : 'none'\r\n    } else {\r\n      example8[i].style.display = player.unlocks.reincarnate ? 'block' : 'none'\r\n    }\r\n  }\r\n\r\n  const example9 = document.getElementsByClassName('auto') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example9.length; i++) {\r\n    example9[i].style.display = 'none'\r\n  }\r\n\r\n  const example10 = document.getElementsByClassName('reinrow1') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example10.length; i++) {\r\n    player.researches[47] === 1 ? example10[i].style.display = 'block' : example10[i].style.display = 'none'\r\n  }\r\n\r\n  const example11 = document.getElementsByClassName('reinrow2') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example11.length; i++) {\r\n    player.researches[48] === 1 ? example11[i].style.display = 'block' : example11[i].style.display = 'none'\r\n  }\r\n\r\n  const example12 = document.getElementsByClassName('reinrow3') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example12.length; i++) {\r\n    player.researches[49] === 1 ? example12[i].style.display = 'block' : example12[i].style.display = 'none'\r\n  }\r\n\r\n  const example13 = document.getElementsByClassName('reinrow4') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example13.length; i++) {\r\n    player.researches[50] === 1 ? example13[i].style.display = 'block' : example13[i].style.display = 'none'\r\n  }\r\n\r\n  const example14 = document.getElementsByClassName('chal6') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example14.length; i++) {\r\n    player.achievements[113] === 1 ? example14[i].style.display = 'block' : example14[i].style.display = 'none'\r\n  }\r\n\r\n  const example15 = document.getElementsByClassName('chal7') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example15.length; i++) {\r\n    player.achievements[120] === 1 ? example15[i].style.display = 'block' : example15[i].style.display = 'none'\r\n  }\r\n\r\n  const example16 = document.getElementsByClassName('chal7x10') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example16.length; i++) {\r\n    player.achievements[124] === 1 ? example16[i].style.display = 'block' : example16[i].style.display = 'none'\r\n  }\r\n\r\n  const example17 = document.getElementsByClassName('chal8') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example17.length; i++) {\r\n    const parent = example17[i].parentElement!\r\n    if (parent.classList.contains('offlineStats')) {\r\n      example17[i].style.display = player.achievements[127] === 1 ? 'flex' : 'none'\r\n    } else {\r\n      example17[i].style.display = player.achievements[127] === 1 ? 'block' : 'none'\r\n    }\r\n  }\r\n\r\n  const example18 = document.getElementsByClassName('chal9') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example18.length; i++) {\r\n    player.achievements[134] === 1 ? example18[i].style.display = 'block' : example18[i].style.display = 'none'\r\n  }\r\n\r\n  const example19 = document.getElementsByClassName('chal9x1') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example19.length; i++) {\r\n    player.highestchallengecompletions[9] > 0 ? example19[i].style.display = 'block' : example19[i].style.display = 'none'\r\n  }\r\n\r\n  const example20 = document.getElementsByClassName('chal10') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example20.length; i++) {\r\n    player.achievements[141] === 1 ? example20[i].style.display = 'block' : example20[i].style.display = 'none'\r\n  }\r\n\r\n  const example21 = document.getElementsByClassName('ascendunlock') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example21.length; i++) {\r\n    const parent = example21[i].parentElement!\r\n    if (parent.classList.contains('offlineStats')) {\r\n      example21[i].style.display = player.ascensionCount > 0 ? 'flex' : 'none'\r\n    } else {\r\n      example21[i].style.display = player.ascensionCount > 0 ? 'block' : 'none'\r\n    }\r\n  }\r\n\r\n  const example22 = document.getElementsByClassName('chal11') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example22.length; i++) {\r\n    player.challengecompletions[11] > 0 ? example22[i].style.display = 'block' : example22[i].style.display = 'none'\r\n  }\r\n\r\n  const example23 = document.getElementsByClassName('chal12') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example23.length; i++) {\r\n    player.challengecompletions[12] > 0 ? example23[i].style.display = 'block' : example23[i].style.display = 'none'\r\n  }\r\n\r\n  const example24 = document.getElementsByClassName('chal13') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example24.length; i++) {\r\n    player.challengecompletions[13] > 0 ? example24[i].style.display = 'block' : example24[i].style.display = 'none'\r\n  }\r\n\r\n  const example25 = document.getElementsByClassName('chal14') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example25.length; i++) {\r\n    player.challengecompletions[14] > 0 ? example25[i].style.display = 'block' : example25[i].style.display = 'none'\r\n  }\r\n\r\n  const example26 = document.getElementsByClassName('ascendunlockib') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example26.length; i++) {\r\n    example26[i].style.display = player.ascensionCount > 0 ? 'inline-block' : 'none'\r\n  }\r\n\r\n  const example27 = document.getElementsByClassName('prestigeunlockib') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example27.length; i++) {\r\n    example27[i].style.display = player.unlocks.prestige ? 'inline-block' : 'none'\r\n  }\r\n\r\n  const example28 = document.getElementsByClassName('research150') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example28.length; i++) {\r\n    example28[i].style.display = player.researches[150] > 0 ? 'block' : 'none'\r\n  }\r\n\r\n  const example29 = document.getElementsByClassName('cubeUpgrade10') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example29.length; i++) {\r\n    example29[i].style.display = player.cubeUpgrades[10] > 0 ? 'flex' : 'none'\r\n  }\r\n\r\n  const example30 = document.getElementsByClassName('cubeUpgrade19') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < example30.length; i++) {\r\n    example30[i].style.display = player.cubeUpgrades[19] > 0 ? 'block' : 'none'\r\n  }\r\n\r\n  const example31 = document.getElementsByClassName('sacrificeAnts') as HTMLCollectionOf<HTMLElement>\r\n  for (const ex of Array.from(example31)) { //Galactic Crumb Achievement 5\r\n    ex.style.display = player.achievements[173] === 1 ? 'block' : 'none'\r\n  }\r\n\r\n  const example32 = document.getElementsByClassName('hepteracts') as HTMLCollectionOf<HTMLElement>\r\n  for (const ex of Array.from(example32)) { // Ability to use and gain hepteracts //\r\n    ex.style.display = player.challenge15Exponent >= 1e15 ? 'block' : 'none'\r\n  }\r\n\r\n  const singularityHTMLs = document.getElementsByClassName('singularity') as HTMLCollectionOf<HTMLElement>\r\n  for (const HTML of Array.from(singularityHTMLs)) { // Ability to view singularity features.\r\n    const count = Number(HTML.getAttribute('count')) || 1\r\n    HTML.style.display = player.highestSingularityCount >= count ? 'block' : 'none'\r\n  }\r\n\r\n  const eventHTMLs = document.getElementsByClassName('isEvent') as HTMLCollectionOf<HTMLElement>\r\n  for (const HTML of Array.from(eventHTMLs)) {\r\n    HTML.style.display = G.isEvent ? 'block' : 'none'\r\n  }\r\n\r\n  visualUpdateShop()\r\n\r\n  const hepts = DOMCacheGetOrSet('corruptionHepteracts')\r\n  hepts.style.display = (player.achievements[255] > 0) ? 'block' : 'none'\r\n\r\n  const cookies1 = document.getElementsByClassName('assortedCookies1') as HTMLCollectionOf<HTMLElement>\r\n  const cookies2 = document.getElementsByClassName('assortedCookies2') as HTMLCollectionOf<HTMLElement>\r\n  const cookies3 = document.getElementsByClassName('assortedCookies3') as HTMLCollectionOf<HTMLElement>\r\n  const cookies4 = document.getElementsByClassName('assortedCookies4') as HTMLCollectionOf<HTMLElement>\r\n  for (const HTML of Array.from(cookies1)) {\r\n    HTML.style.display = player.singularityUpgrades.cookies.getEffect().bonus ? 'block' : 'none'\r\n  }\r\n  for (const HTML of Array.from(cookies2)) {\r\n    HTML.style.display = player.singularityUpgrades.cookies2.getEffect().bonus ? 'block' : 'none'\r\n  }\r\n  for (const HTML of Array.from(cookies3)) {\r\n    HTML.style.display = player.singularityUpgrades.cookies3.getEffect().bonus ? 'block' : 'none'\r\n  }\r\n  for (const HTML of Array.from(cookies4)) {\r\n    HTML.style.display = player.singularityUpgrades.cookies4.getEffect().bonus ? 'block' : 'none'\r\n  }\r\n\r\n  const goldenQuarks3 = document.getElementsByClassName('goldenQuark3Upg') as HTMLCollectionOf<HTMLElement>\r\n  for (const HTML of Array.from(goldenQuarks3)) {\r\n    HTML.style.display = (player.singularityUpgrades.goldenQuarks3.getEffect().bonus as number) > 0 ? 'block' : 'none'\r\n  }\r\n  if (player.upgrades[89] === 1) {\r\n    DOMCacheGetOrSet('transcendautotoggle').style.display = 'block'\r\n    DOMCacheGetOrSet('transcendamount').style.display = 'block'\r\n    DOMCacheGetOrSet('autotranscend').style.display = 'block'\r\n  } else {\r\n    DOMCacheGetOrSet('transcendautotoggle').style.display = 'none'\r\n    DOMCacheGetOrSet('transcendamount').style.display = 'none'\r\n    DOMCacheGetOrSet('autotranscend').style.display = 'none'\r\n  }\r\n\r\n  player.achievements[38] === 1 ? //Prestige Diamond Achievement 3\r\n    (DOMCacheGetOrSet('rune2area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower2').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune2area').style.display = 'none', DOMCacheGetOrSet('runeshowpower2').style.display = 'none')\r\n\r\n  if (player.achievements[43] === 1) { // Transcend Mythos Achievement 1\r\n    DOMCacheGetOrSet('prestigeautotoggle').style.display = 'block'\r\n    DOMCacheGetOrSet('prestigeamount').style.display = 'block'\r\n    DOMCacheGetOrSet('autoprestige').style.display = 'block'\r\n  } else {\r\n    DOMCacheGetOrSet('prestigeautotoggle').style.display = 'none'\r\n    DOMCacheGetOrSet('prestigeamount').style.display = 'none'\r\n    DOMCacheGetOrSet('autoprestige').style.display = 'none'\r\n  }\r\n\r\n  player.achievements[44] === 1 ? //Transcend Mythos Achievement 2\r\n    (DOMCacheGetOrSet('rune3area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower3').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune3area').style.display = 'none', DOMCacheGetOrSet('runeshowpower3').style.display = 'none')\r\n\r\n  player.achievements[102] === 1 ? //Cost+ Challenge Achievement 4\r\n    (DOMCacheGetOrSet('rune4area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower4').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune4area').style.display = 'none', DOMCacheGetOrSet('runeshowpower4').style.display = 'none')\r\n\r\n  player.achievements[119] === 1 ? //Tax+ Challenge Achievement 7\r\n    DOMCacheGetOrSet('talisman1area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman1area').style.display = 'none'\r\n\r\n  player.achievements[126] === 1 ? //No MA Challenge Achievement 7\r\n    DOMCacheGetOrSet('talisman2area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman2area').style.display = 'none'\r\n\r\n  player.achievements[133] === 1 ? //Cost++ Challenge Achievement 7\r\n    DOMCacheGetOrSet('talisman3area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman3area').style.display = 'none'\r\n\r\n  player.achievements[134] === 1 ? //No Runes Challenge Achievement 1\r\n    (DOMCacheGetOrSet('toggleRuneSubTab2').style.display = 'block', DOMCacheGetOrSet('toggleRuneSubTab3').style.display = 'block') :\r\n    (DOMCacheGetOrSet('toggleRuneSubTab2').style.display = 'none', DOMCacheGetOrSet('toggleRuneSubTab3').style.display = 'none')\r\n\r\n  player.achievements[140] === 1 ? //No Runes Challenge Achievement 7\r\n    DOMCacheGetOrSet('talisman4area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman4area').style.display = 'none'\r\n\r\n  player.achievements[147] === 1 ? //Sadistic Challenge Achievement 7\r\n    DOMCacheGetOrSet('talisman5area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman5area').style.display = 'none'\r\n\r\n  player.achievements[173] === 1 ? //Galactic Crumb Achievement 5\r\n    DOMCacheGetOrSet('sacrificeAnts').style.display = 'block' :\r\n    DOMCacheGetOrSet('sacrificeAnts').style.display = 'none'\r\n\r\n  player.researches[39] > 0 ? //3x9 Research [Crystal Building Power]\r\n    DOMCacheGetOrSet('reincarnationCrystalInfo').style.display = 'block' :\r\n    DOMCacheGetOrSet('reincarnationCrystalInfo').style.display = 'none'\r\n\r\n  player.researches[40] > 0 ? //3x10 Research [Mythos Shard Building Power]\r\n    DOMCacheGetOrSet('reincarnationMythosInfo').style.display = 'block' :\r\n    DOMCacheGetOrSet('reincarnationMythosInfo').style.display = 'none'\r\n\r\n  player.researches[46] > 0 ? //5x6 Research [Auto R.]\r\n    DOMCacheGetOrSet('reincarnateautomation').style.display = 'block' :\r\n    DOMCacheGetOrSet('reincarnateautomation').style.display = 'none'\r\n\r\n  player.researches[82] > 0 ? //2x17 Research [SI Rune Unlock]\r\n    (DOMCacheGetOrSet('rune5area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower5').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune5area').style.display = 'none', DOMCacheGetOrSet('runeshowpower5').style.display = 'none')\r\n\r\n  player.researches[124] > 0 ? //5x24 Research [AutoSac]\r\n    (DOMCacheGetOrSet('antSacrificeButtons').style.display = 'flex', DOMCacheGetOrSet('autoAntSacrifice').style.display = 'block') :\r\n    (DOMCacheGetOrSet('antSacrificeButtons').style.display = 'none', DOMCacheGetOrSet('autoAntSacrifice').style.display = 'none')\r\n  player.researches[124] > 0 || player.highestSingularityCount > 0 ? //So you can turn it off before 5x24 Research\r\n    DOMCacheGetOrSet('toggleAutoSacrificeAnt').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleAutoSacrificeAnt').style.display = 'none'\r\n\r\n  player.researches[130] > 0 ? //6x5 Research [Talisman Auto Fortify]\r\n    DOMCacheGetOrSet('toggleautofortify').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleautofortify').style.display = 'none'\r\n\r\n  player.researches[135] > 0 ? //6x10 Research [Talisman Auto Sac]\r\n    DOMCacheGetOrSet('toggleautoenhance').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleautoenhance').style.display = 'none'\r\n\r\n  for (let z = 1; z <= 5; z++) {\r\n    (player.researches[190] > 0) ? //8x15 Research [Auto Tesseracts]\r\n      DOMCacheGetOrSet(`tesseractAutoToggle${z}`).style.display = 'block' :\r\n      DOMCacheGetOrSet(`tesseractAutoToggle${z}`).style.display = 'none'\r\n  }\r\n  player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').style.display = 'block' :\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').style.display = 'none'\r\n  player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\r\n    DOMCacheGetOrSet('tesseractautobuymode').style.display = 'block' :\r\n    DOMCacheGetOrSet('tesseractautobuymode').style.display = 'none'\r\n  player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\r\n    DOMCacheGetOrSet('tesseractAmount').style.display = 'block' :\r\n    DOMCacheGetOrSet('tesseractAmount').style.display = 'none'\r\n  player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\r\n    DOMCacheGetOrSet('autotessbuyeramount').style.display = 'block' :\r\n    DOMCacheGetOrSet('autotessbuyeramount').style.display = 'none';\r\n  (player.antUpgrades[11]! > 0 || player.ascensionCount > 0) ? //Ant Talisman Unlock, Mortuus\r\n    DOMCacheGetOrSet('talisman6area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman6area').style.display = 'none'\r\n\r\n  player.shopUpgrades.offeringAuto > 0 ? //Auto Offering Shop Purchase\r\n    DOMCacheGetOrSet('toggleautosacrifice').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleautosacrifice').style.display = 'none'\r\n\r\n  player.cubeUpgrades[51] > 0 && player.highestSingularityCount >= 40 ? //Auto Fragments Buy (After Cx1)\r\n    DOMCacheGetOrSet('toggleautoBuyFragments').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleautoBuyFragments').style.display = 'none'\r\n\r\n  player.shopUpgrades.obtainiumAuto > 0 ? //Auto Research Shop Purchase\r\n    DOMCacheGetOrSet('toggleautoresearch').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleautoresearch').style.display = 'none'\r\n\r\n  DOMCacheGetOrSet('toggleautoresearchmode').style.display = player.shopUpgrades.obtainiumAuto > 0 && autoResearchEnabled() //Auto Research Shop Purchase Mode\r\n    ? 'block'\r\n    : 'none'\r\n\r\n  player.shopUpgrades.shopTalisman > 0 ? //Plastic Talisman Shop Purchase\r\n    DOMCacheGetOrSet('talisman7area').style.display = 'flex' :\r\n    DOMCacheGetOrSet('talisman7area').style.display = 'none'\r\n\r\n  player.cubeUpgrades[8] > 0 ?\r\n    DOMCacheGetOrSet('reincarnateAutoUpgrade').style.display = 'block' :\r\n    DOMCacheGetOrSet('reincarnateAutoUpgrade').style.display = 'none'\r\n\r\n  player.shopUpgrades.infiniteAscent ?\r\n    (DOMCacheGetOrSet('rune6area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower6').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune6area').style.display = 'none', DOMCacheGetOrSet('runeshowpower6').style.display = 'none')\r\n\r\n  player.platonicUpgrades[20] > 0 ?\r\n    (DOMCacheGetOrSet('rune7area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower7').style.display = 'block') :\r\n    (DOMCacheGetOrSet('rune7area').style.display = 'none', DOMCacheGetOrSet('runeshowpower7').style.display = 'none')\r\n\r\n  player.highestSingularityCount > 0 ?\r\n    (DOMCacheGetOrSet('singularitytab').style.display = 'block'):\r\n    (DOMCacheGetOrSet('singularitytab').style.display = 'none')\r\n\r\n  player.highestSingularityCount > 0 ? //Save Offerings\r\n    DOMCacheGetOrSet('saveOffToggle').style.display = 'block' :\r\n    DOMCacheGetOrSet('saveOffToggle').style.display = 'none'\r\n\r\n  // Auto Open Cubes toggle\r\n  if (player.highestSingularityCount >= 35) {\r\n    DOMCacheGetOrSet('openCubes').style.display = 'block'\r\n    DOMCacheGetOrSet('cubeOpensInput').style.display = 'block'\r\n    DOMCacheGetOrSet('openTesseracts').style.display = 'block'\r\n    DOMCacheGetOrSet('tesseractsOpensInput').style.display = 'block'\r\n    DOMCacheGetOrSet('openHypercubes').style.display = 'block'\r\n    DOMCacheGetOrSet('hypercubesOpensInput').style.display = 'block'\r\n    DOMCacheGetOrSet('openPlatonicCube').style.display = 'block'\r\n    DOMCacheGetOrSet('platonicCubeOpensInput').style.display = 'block'\r\n  } else {\r\n    DOMCacheGetOrSet('openCubes').style.display = 'none'\r\n    DOMCacheGetOrSet('cubeOpensInput').style.display = 'none'\r\n    DOMCacheGetOrSet('openTesseracts').style.display = 'none'\r\n    DOMCacheGetOrSet('tesseractsOpensInput').style.display = 'none'\r\n    DOMCacheGetOrSet('openHypercubes').style.display = 'none'\r\n    DOMCacheGetOrSet('hypercubesOpensInput').style.display = 'none'\r\n    DOMCacheGetOrSet('openPlatonicCube').style.display = 'none'\r\n    DOMCacheGetOrSet('platonicCubeOpensInput').style.display = 'none'\r\n  }\r\n\r\n  (player.highestSingularityCount >= 50 && player.singularityCount < player.highestSingularityCount) || player.highestSingularityCount >= 150 ? // Auto Cube Upgrades\r\n    DOMCacheGetOrSet('toggleAutoCubeUpgrades').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleAutoCubeUpgrades').style.display = 'none';\r\n\r\n  (player.highestSingularityCount >= 100 && player.singularityCount < player.highestSingularityCount) || player.highestSingularityCount >= 200 ? // Auto Platonic Upgrades\r\n    DOMCacheGetOrSet('toggleAutoPlatonicUpgrades').style.display = 'block' :\r\n    DOMCacheGetOrSet('toggleAutoPlatonicUpgrades').style.display = 'none'\r\n\r\n  // Singularity confirmation toggle pic\r\n  player.highestSingularityCount > 0 && player.ascensionCount > 0 ?\r\n    (DOMCacheGetOrSet('settingpic6').style.display = 'block'):\r\n    (DOMCacheGetOrSet('settingpic6').style.display = 'none')\r\n\r\n  // Hepteract Confirmations toggle\r\n  player.highestSingularityCount > 0 && player.challenge15Exponent >= 1e15 ?\r\n    (DOMCacheGetOrSet('heptnotificationpic').style.display = 'block'):\r\n    (DOMCacheGetOrSet('heptnotificationpic').style.display = 'none')\r\n\r\n  DOMCacheGetOrSet('warpAuto').style.display = player.shopUpgrades.autoWarp > 0 ? '' : 'none'\r\n\r\n  if (player.unlocks.reincarnate || player.highestSingularityCount > 0) {\r\n    DOMCacheGetOrSet('shoptab').style.display = 'block'\r\n  }\r\n\r\n  const octeractUnlocks = document.getElementsByClassName('octeracts') as HTMLCollectionOf<HTMLElement>\r\n  for (const item of Array.from(octeractUnlocks)) { // Stuff that you need octeracts to access\r\n    item.style.display = player.singularityUpgrades.octeractUnlock.getEffect().bonus ? 'block' : 'none'\r\n  }\r\n\r\n  const singChallengeUnlocks = document.getElementsByClassName('singChallenges') as HTMLCollectionOf<HTMLElement>\r\n  for (const item of Array.from(singChallengeUnlocks)) {\r\n    item.style.display = player.highestSingularityCount >= 25 ? 'block' : 'none'\r\n  }\r\n\r\n  (player.runelevels[6] > 0 || player.highestSingularityCount > 0) ?\r\n    (DOMCacheGetOrSet('singularitybtn').style.display = 'block') :\r\n    (DOMCacheGetOrSet('singularitybtn').style.display = 'none')\r\n\r\n  player.highestSingularityCount > 0 && player.ascensionCount >= 1 ?\r\n    (DOMCacheGetOrSet('totalQuarkCountStatisticSing').style.display = 'block') :\r\n    (DOMCacheGetOrSet('totalQuarkCountStatisticSing').style.display = 'none')\r\n\r\n\r\n  DOMCacheGetOrSet('ascensionStats').style.visibility = (player.achievements[197] > 0 || player.highestSingularityCount > 0) ? 'visible' : 'hidden'\r\n  DOMCacheGetOrSet('ascHyperStats').style.display = player.challengecompletions[13] > 0 ? '' : 'none'\r\n  DOMCacheGetOrSet('ascPlatonicStats').style.display = player.challengecompletions[14] > 0 ? '' : 'none'\r\n  DOMCacheGetOrSet('ascHepteractStats').style.display = player.achievements[255] > 0 ? '' : 'none'\r\n\r\n  //I'll clean this up later. Note to 2019 Platonic: Fuck you\r\n  // note to 2019 and 2020 Platonic, you're welcome\r\n  // note to 2019 and 2020 and 2021 Platonic, please never base anything on the order of elements ever again\r\n\r\n  // These are currently listed in the order they were in when this was converted to use element IDs instead of\r\n  // the ordering of the HTML elements with the class \"auto\".\r\n  const automationUnlocks: Record<string, boolean> = {\r\n    'toggle1': player.upgrades[81] === 1, // Autobuyer - Coin Buildings - Tier 1 (Worker)\r\n    'toggle2': player.upgrades[82] === 1, // Autobuyer - Coin Buildings - Tier 2 (Investments)\r\n    'toggle3': player.upgrades[83] === 1, // Autobuyer - Coin Buildings - Tier 3 (Printers)\r\n    'toggle4': player.upgrades[84] === 1, // Autobuyer - Coin Buildings - Tier 4 (Coin Mints)\r\n    'toggle5': player.upgrades[85] === 1, // Autobuyer - Coin Buildings - Tier 5 (Alchemies)\r\n    'toggle6': player.upgrades[86] === 1, // Autobuyer - Coin Buildings - Accelerator\r\n    'toggle7': player.upgrades[87] === 1, // Autobuyer - Coin Buildings - Multiplier\r\n    'toggle8': player.upgrades[88] === 1, // Autobuyer - Coin Buildings - Accelerator Boost\r\n    'toggle10': player.achievements[78] === 1, // Autobuyer - Diamond Buildings - Tier 1 (Refineries)\r\n    'toggle11': player.achievements[85] === 1, // Autobuyer - Diamond Buildings - Tier 2 (Coal Plants)\r\n    'toggle12': player.achievements[92] === 1, // Autobuyer - Diamond Buildings - Tier 3 (Coal Rigs)\r\n    'toggle13': player.achievements[99] === 1, // Autobuyer - Diamond Buildings - Tier 4 (Pickaxes)\r\n    'toggle14': player.achievements[106] === 1, // Autobuyer - Diamond Buildings - Tier 5 (Pandora's Boxes)\r\n    'toggle15': player.achievements[43] === 1, // Feature - Diamond Buildings - Auto Prestige\r\n    'toggle16': player.upgrades[94] === 1, // Autobuyer - Mythos Buildings - Tier 1 (Augments)\r\n    'toggle17': player.upgrades[95] === 1, // Autobuyer - Mythos Buildings - Tier 2 (Enchantments)\r\n    'toggle18': player.upgrades[96] === 1, // Autobuyer - Mythos Buildings - Tier 3 (Wizards)\r\n    'toggle19': player.upgrades[97] === 1, // Autobuyer - Mythos Buildings - Tier 4 (Oracles)\r\n    'toggle20': player.upgrades[98] === 1, // Autobuyer - Mythos Buildings - Tier 5 (Grandmasters)\r\n    'toggle21': player.upgrades[89] === 1, // Feature - Mythos Buildings - Auto Transcend\r\n    'toggle22': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 1 (Protons)\r\n    'toggle23': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 2 (Elements)\r\n    'toggle24': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 3 (Pulsars)\r\n    'toggle25': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 4 (Quasars)\r\n    'toggle26': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 5 (Galactic Nuclei)\r\n    'toggle27': player.researches[46] === 1, // Feature - Particle Buildings - Auto Reincarnate\r\n    'coinAutoUpgrade': player.upgrades[91] === 1, // Feature - Upgrades - Auto Buy Coin Upgrades\r\n    'prestigeAutoUpgrade': player.upgrades[92] === 1, // Feature - Upgrades - Auto Buy Diamond Upgrades\r\n    'transcendAutoUpgrade': player.upgrades[99] === 1, // Feature - Upgrades - Auto Buy Mythos Upgrades\r\n    'generatorsAutoUpgrade': player.upgrades[90] === 1, // Feature - Upgrades - Auto Buy Generator Upgrades\r\n    'toggle9': player.unlocks.prestige, // Feature - Upgrades - Hover to Buy\r\n    'toggle28': player.prestigeCount > 0.5 || player.reincarnationCount > 0.5, // Settings - Confirmations - Prestige\r\n    'toggle29': player.transcendCount > 0.5 || player.reincarnationCount > 0.5,  // Settings - Confirmations - Transcension\r\n    'toggle30': player.reincarnationCount > 0.5, // Settings - Confirmations - Reincarnation\r\n    'toggle31': player.ascensionCount > 0, // Settings - Confirmations - Ascension and Asc. Challenge\r\n    'toggle32': player.achievements[173] > 0, // Settings - Confirmations - Ant Sacrifice\r\n    'toggle33': player.highestSingularityCount > 0 && player.ascensionCount > 0, // Settings - Confirmations - Singularity\r\n    'toggle34': player.unlocks.coinfour, // Achievements - Notifications\r\n    'toggle35': player.challenge15Exponent >= 1e15 && player.highestSingularityCount > 0, // Hepteracts - Notifications\r\n    'toggle36': player.highestSingularityCount >= 15, // Auto Blessings\r\n    'toggle37': player.highestSingularityCount >= 15, // Auto Spirits\r\n    'toggle38': player.highestSingularityCount > 0, // Researchs Hover to Buy\r\n    'toggle39': player.unlocks.prestige, // Hotkeys\r\n    'toggle40': player.unlocks.prestige, // Number Hotkeys\r\n    'toggle41': player.challengecompletions[11] > 0, // Loadouts Notifx\r\n    'toggle42': player.highestSingularityCount >= 6, // Potion Autogenerator for Offering Potions\r\n    'toggle43': player.highestSingularityCount >= 6 // Potion Autogenerator for Obtainium Potions\r\n  }\r\n\r\n  Object.keys(automationUnlocks).forEach(key => {\r\n    const el = DOMCacheGetOrSet(key) as HTMLElement | null\r\n    if (el === null) {\r\n      // eslint-disable-next-line no-console\r\n      console.error(`Automation unlock failed to find element with ID '${key}'.`)\r\n      return\r\n    }\r\n\r\n    el.style.display = automationUnlocks[key] ? 'block' : 'none'\r\n  })\r\n\r\n  revealCorruptions()\r\n}\r\n\r\nexport const hideStuff = () => {\r\n\r\n  DOMCacheGetOrSet('buildings').style.display = 'none'\r\n  DOMCacheGetOrSet('buildingstab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('upgrades').style.display = 'none'\r\n  DOMCacheGetOrSet('upgradestab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('settings').style.display = 'none'\r\n\r\n  DOMCacheGetOrSet('statistics').style.display = 'none'\r\n  DOMCacheGetOrSet('achievementstab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('achievementstab').style.color = 'white'\r\n  DOMCacheGetOrSet('runes').style.display = 'none'\r\n  DOMCacheGetOrSet('runestab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('challenges').style.display = 'none'\r\n  DOMCacheGetOrSet('challengetab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('research').style.display = 'none'\r\n  DOMCacheGetOrSet('researchtab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('shop').style.display = 'none'\r\n  DOMCacheGetOrSet('shoptab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('ants').style.display = 'none'\r\n  DOMCacheGetOrSet('anttab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('cubetab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('traitstab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('cubes').style.display = 'none'\r\n  DOMCacheGetOrSet('traits').style.display = 'none'\r\n  DOMCacheGetOrSet('singularity').style.display = 'none'\r\n  DOMCacheGetOrSet('singularitytab').style.backgroundColor = ''\r\n  DOMCacheGetOrSet('event').style.display = 'none'\r\n  DOMCacheGetOrSet('eventtab').style.backgroundColor = ''\r\n\r\n  const tab = DOMCacheGetOrSet('settingstab')!\r\n  tab.style.backgroundColor = ''\r\n  tab.style.borderColor = 'white'\r\n\r\n  if (G.currentTab === 'buildings') {\r\n    DOMCacheGetOrSet('buildingstab').style.backgroundColor = 'orange'\r\n    DOMCacheGetOrSet('buildings').style.display = 'block'\r\n  }\r\n  if (G.currentTab === 'upgrades') {\r\n    DOMCacheGetOrSet('upgrades').style.display = 'block'\r\n    DOMCacheGetOrSet('upgradestab').style.backgroundColor = 'orange'\r\n    DOMCacheGetOrSet('upgradedescription').textContent = i18next.t('upgrades.hoverOverUpgrade')\r\n  }\r\n  if (G.currentTab === 'settings') {\r\n    DOMCacheGetOrSet('settings').style.display = 'block'\r\n    const tab = DOMCacheGetOrSet('settingstab')!\r\n    tab.style.backgroundColor = 'orange'\r\n    tab.style.borderColor = 'gold'\r\n  }\r\n  if (G.currentTab === 'achievements') {\r\n    DOMCacheGetOrSet('statistics').style.display = 'block'\r\n    DOMCacheGetOrSet('achievementstab').style.backgroundColor = 'white'\r\n    DOMCacheGetOrSet('achievementstab').style.color = 'black'\r\n    DOMCacheGetOrSet('achievementprogress').textContent = i18next.t('achievements.totalPoints', {\r\n      x: format(player.achievementPoints),\r\n      y: format(totalachievementpoints),\r\n      z: (100 * player.achievementPoints / totalachievementpoints).toPrecision(4)\r\n    })\r\n  } else if (G.currentTab === 'runes') {\r\n    DOMCacheGetOrSet('runes').style.display = 'block'\r\n    DOMCacheGetOrSet('runestab').style.backgroundColor = 'blue'\r\n    DOMCacheGetOrSet('runeshowlevelup').textContent = i18next.t('runes.hover')\r\n    DOMCacheGetOrSet('researchrunebonus').textContent = i18next.t('runes.thanksResearches', {\r\n      percent: format(100 * G.effectiveLevelMult - 100, 4, true)\r\n    })\r\n    displayRuneInformation(1, false)\r\n    displayRuneInformation(2, false)\r\n    displayRuneInformation(3, false)\r\n    displayRuneInformation(4, false)\r\n    displayRuneInformation(5, false)\r\n    displayRuneInformation(6, false)\r\n    displayRuneInformation(7, false)\r\n  }\r\n  if (G.currentTab === 'challenge') {\r\n    DOMCacheGetOrSet('challenges').style.display = 'block'\r\n    DOMCacheGetOrSet('challengetab').style.backgroundColor = 'purple'\r\n  }\r\n  if (G.currentTab === 'research') {\r\n    DOMCacheGetOrSet('research').style.display = 'block'\r\n    DOMCacheGetOrSet('researchtab').style.backgroundColor = 'green'\r\n  }\r\n  if (G.currentTab === 'shop') {\r\n    DOMCacheGetOrSet('shop').style.display = 'block'\r\n    DOMCacheGetOrSet('shoptab').style.backgroundColor = 'limegreen'\r\n  }\r\n  if (G.currentTab === 'ant') {\r\n    DOMCacheGetOrSet('ants').style.display = 'block'\r\n    DOMCacheGetOrSet('anttab').style.backgroundColor = 'brown'\r\n  }\r\n  if (G.currentTab === 'cube') {\r\n    DOMCacheGetOrSet('cubes').style.display = 'flex'\r\n    DOMCacheGetOrSet('cubetab').style.backgroundColor = 'white'\r\n  }\r\n  if (G.currentTab === 'traits') {\r\n    DOMCacheGetOrSet('traits').style.display = 'flex'\r\n    DOMCacheGetOrSet('traitstab').style.backgroundColor = 'white'\r\n  }\r\n\r\n  if (G.currentTab === 'singularity') {\r\n    DOMCacheGetOrSet('singularity').style.display = 'block'\r\n    DOMCacheGetOrSet('singularitytab').style.backgroundColor = 'lightgoldenrodyellow'\r\n    updateSingularityPenalties()\r\n    updateSingularityPerks()\r\n  }\r\n\r\n  if (G.currentTab === 'event') {\r\n    DOMCacheGetOrSet('event').style.display = 'block'\r\n    DOMCacheGetOrSet('eventtab').style.backgroundColor = 'gold'\r\n  }\r\n}\r\n\r\nconst visualTab: Record<TabNames, () => void> = {\r\n  buildings: visualUpdateBuildings,\r\n  upgrades: visualUpdateUpgrades,\r\n  achievements: visualUpdateAchievements,\r\n  runes: visualUpdateRunes,\r\n  challenge: visualUpdateChallenges,\r\n  research: visualUpdateResearch,\r\n  settings: visualUpdateSettings,\r\n  shop: visualUpdateShop,\r\n  ant: visualUpdateAnts,\r\n  cube: visualUpdateCubes,\r\n  traits: visualUpdateCorruptions,\r\n  singularity: visualUpdateSingularity,\r\n  event: visualUpdateEvent\r\n}\r\n\r\nexport const htmlInserts = () => {\r\n  // ALWAYS Update these, for they are the most important resources\r\n  const playerRequirements = ['coins', 'runeshards', 'prestigePoints', 'transcendPoints', 'transcendShards', 'reincarnationPoints', 'worlds', 'researchPoints'] as const\r\n  const domRequirements = ['coinDisplay', 'offeringDisplay', 'diamondDisplay', 'mythosDisplay', 'mythosshardDisplay', 'particlesDisplay', 'quarkDisplay', 'obtainiumDisplay'] as const\r\n  for (let i = 0; i < playerRequirements.length; i++) {\r\n    const text = format(player[`${playerRequirements[i]}` as const])\r\n    const dom = DOMCacheGetOrSet(`${domRequirements[i]}` as const)\r\n    if (dom.textContent !== text) {\r\n      dom.textContent = text\r\n    }\r\n  }\r\n\r\n  updateAscensionStats()\r\n\r\n  visualTab[G.currentTab]()\r\n}\r\n\r\n// TODO(not @KhafraDev): cache the elements and stop getting them every time?\r\nexport const buttoncolorchange = () => {\r\n\r\n  DOMCacheGetOrSet('prestigebtn').style.backgroundColor = player.toggles[15] && player.achievements[43] === 1 ? 'green' : ''\r\n\r\n  DOMCacheGetOrSet('transcendbtn').style.backgroundColor = player.toggles[21] && player.upgrades[89] > 0.5 && (player.currentChallenge.transcension === 0) ? 'green' : ''\r\n\r\n  DOMCacheGetOrSet('reincarnatebtn').style.backgroundColor = player.toggles[27] && player.researches[46] > 0.5 && (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) ? 'green' : ''\r\n\r\n  DOMCacheGetOrSet('acceleratorboostbtn').style.backgroundColor = player.toggles[8] && player.upgrades[88] > 0.5 ? 'green' : ''\r\n\r\n  DOMCacheGetOrSet('challengebtn').style.backgroundColor = player.currentChallenge.transcension === 0 ? '' : 'purple'\r\n\r\n  DOMCacheGetOrSet('reincarnatechallengebtn').style.backgroundColor = player.currentChallenge.reincarnation === 0 ? '' : 'purple'\r\n\r\n  DOMCacheGetOrSet('ascendChallengeBtn').style.backgroundColor = player.currentChallenge.ascension === 0 ? '' : 'purple'\r\n\r\n  DOMCacheGetOrSet('ascendbtn').style.backgroundColor = player.autoAscend && player.challengecompletions[11] > 0 && player.cubeUpgrades[10] > 0 ? 'green' : ''\r\n\r\n  DOMCacheGetOrSet('singularitybtn').style.filter = player.runelevels[6] > 0 ? '' : 'contrast(1.25) sepia(1) grayscale(0.25)'\r\n\r\n  // Notify new players the reset\r\n  if (player.toggles[33] && player.highestSingularityCount === 0) {\r\n    if (player.toggles[28] && !player.unlocks.prestige) {\r\n      DOMCacheGetOrSet('prestigebtn').style.boxShadow = player.coinsThisPrestige.gte(1e16) ? 'cyan 0px 0px 10px 2px' : ''\r\n    }\r\n    if (player.toggles[29] && !player.unlocks.transcend) {\r\n      DOMCacheGetOrSet('transcendbtn').style.boxShadow = player.coinsThisTranscension.gte(1e100) ? 'plum 0px 0px 10px 2px' : ''\r\n    }\r\n    if (player.toggles[30] && !player.unlocks.reincarnate) {\r\n      DOMCacheGetOrSet('reincarnatebtn').style.boxShadow = player.transcendShards.gte(1e300) ? 'greenyellow 0px 0px 10px 2px' : ''\r\n    }\r\n    if (player.toggles[31] && player.ascensionCount === 0) {\r\n      DOMCacheGetOrSet('ascendbtn').style.boxShadow = player.challengecompletions[10] > 0 ? 'orange 0px 0px 10px 2px' : ''\r\n    }\r\n  }\r\n\r\n  if (G.currentTab === 'buildings' && G.buildingSubTab === 'coin') {\r\n    const a = DOMCacheGetOrSet('buycoin1')\r\n    const b = DOMCacheGetOrSet('buycoin2')\r\n    const c = DOMCacheGetOrSet('buycoin3')\r\n    const d = DOMCacheGetOrSet('buycoin4')\r\n    const e = DOMCacheGetOrSet('buycoin5')\r\n    const f = DOMCacheGetOrSet('buyaccelerator')\r\n    const g = DOMCacheGetOrSet('buymultiplier')\r\n    const h = DOMCacheGetOrSet('buyacceleratorboost');\r\n    ((!player.toggles[1] || player.upgrades[81] === 0) && player.coins.gte(player.firstCostCoin))\r\n      ? a.classList.add('buildingPurchaseBtnAvailable')\r\n      : a.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[2] || player.upgrades[82] === 0) && player.coins.gte(player.secondCostCoin))\r\n      ? b.classList.add('buildingPurchaseBtnAvailable')\r\n      : b.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[3] || player.upgrades[83] === 0) && player.coins.gte(player.thirdCostCoin))\r\n      ? c.classList.add('buildingPurchaseBtnAvailable')\r\n      : c.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[4] || player.upgrades[84] === 0) && player.coins.gte(player.fourthCostCoin))\r\n      ? d.classList.add('buildingPurchaseBtnAvailable')\r\n      : d.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[5] || player.upgrades[85] === 0) && player.coins.gte(player.fifthCostCoin))\r\n      ? e.classList.add('buildingPurchaseBtnAvailable')\r\n      : e.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[6] || player.upgrades[86] === 0) && player.coins.gte(player.acceleratorCost))\r\n      ? f.classList.add('buildingPurchaseBtnAvailable')\r\n      : f.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[7] || player.upgrades[87] === 0) && player.coins.gte(player.multiplierCost))\r\n      ? g.classList.add('buildingPurchaseBtnAvailable')\r\n      : g.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[8] || player.upgrades[88] === 0) && player.prestigePoints.gte(player.acceleratorBoostCost))\r\n      ? h.classList.add('buildingPurchaseBtnAvailable')\r\n      : h.classList.remove('buildingPurchaseBtnAvailable')\r\n  }\r\n\r\n  if (G.currentTab === 'buildings' && G.buildingSubTab === 'diamond') {\r\n    const a = DOMCacheGetOrSet('buydiamond1')\r\n    const b = DOMCacheGetOrSet('buydiamond2')\r\n    const c = DOMCacheGetOrSet('buydiamond3')\r\n    const d = DOMCacheGetOrSet('buydiamond4')\r\n    const e = DOMCacheGetOrSet('buydiamond5')\r\n    const f = DOMCacheGetOrSet('buycrystalupgrade1')\r\n    const g = DOMCacheGetOrSet('buycrystalupgrade2')\r\n    const h = DOMCacheGetOrSet('buycrystalupgrade3')\r\n    const i = DOMCacheGetOrSet('buycrystalupgrade4')\r\n    const j = DOMCacheGetOrSet('buycrystalupgrade5');\r\n    ((!player.toggles[10] || player.achievements[78] === 0) && player.prestigePoints.gte(player.firstCostDiamonds))\r\n      ? a.classList.add('buildingPurchaseBtnAvailable')\r\n      : a.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[11] || player.achievements[85] === 0) && player.prestigePoints.gte(player.secondCostDiamonds))\r\n      ? b.classList.add('buildingPurchaseBtnAvailable')\r\n      : b.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[12] || player.achievements[92] === 0) && player.prestigePoints.gte(player.thirdCostDiamonds))\r\n      ? c.classList.add('buildingPurchaseBtnAvailable')\r\n      : c.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[13] || player.achievements[99] === 0) && player.prestigePoints.gte(player.fourthCostDiamonds))\r\n      ? d.classList.add('buildingPurchaseBtnAvailable')\r\n      : d.classList.remove('buildingPurchaseBtnAvailable');\r\n    ((!player.toggles[14] || player.achievements[106] === 0) && player.prestigePoints.gte(player.fifthCostDiamonds))\r\n      ? e.classList.add('buildingPurchaseBtnAvailable')\r\n      : e.classList.remove('buildingPurchaseBtnAvailable')\r\n    let k = 0\r\n    k += Math.floor(G.rune3level / 16 * G.effectiveLevelMult) * 100 / 100\r\n    if (player.upgrades[73] === 1 && player.currentChallenge.reincarnation !== 0) {\r\n      k += 10\r\n    }\r\n\r\n    (player.achievements[79] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[0] + G.crystalUpgradeCostIncrement[0] * Math.floor(Math.pow(player.crystalUpgrades[0] + 0.5 - k, 2) / 2))))) ? f.style.backgroundColor = 'purple' : f.style.backgroundColor = '';\r\n    (player.achievements[86] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[1] + G.crystalUpgradeCostIncrement[1] * Math.floor(Math.pow(player.crystalUpgrades[1] + 0.5 - k, 2) / 2))))) ? g.style.backgroundColor = 'purple' : g.style.backgroundColor = '';\r\n    (player.achievements[93] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[2] + G.crystalUpgradeCostIncrement[2] * Math.floor(Math.pow(player.crystalUpgrades[2] + 0.5 - k, 2) / 2))))) ? h.style.backgroundColor = 'purple' : h.style.backgroundColor = '';\r\n    (player.achievements[100] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[3] + G.crystalUpgradeCostIncrement[3] * Math.floor(Math.pow(player.crystalUpgrades[3] + 0.5 - k, 2) / 2))))) ? i.style.backgroundColor = 'purple' : i.style.backgroundColor = '';\r\n    (player.achievements[107] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G.crystalUpgradesCost[4] + G.crystalUpgradeCostIncrement[4] * Math.floor(Math.pow(player.crystalUpgrades[4] + 0.5 - k, 2) / 2))))) ? j.style.backgroundColor = 'purple' : j.style.backgroundColor = ''\r\n  }\r\n\r\n  if (G.currentTab === 'runes') {\r\n    if (G.runescreen === 'runes') {\r\n      for (let i = 1; i <= 7; i++) {\r\n        player.runeshards > 0.5\r\n          ? DOMCacheGetOrSet(`activaterune${i}`).classList.add('runeButtonAvailable')\r\n          : DOMCacheGetOrSet(`activaterune${i}`).classList.remove('runeButtonAvailable')\r\n      }\r\n    }\r\n    if (G.runescreen === 'talismans') {\r\n      const a = DOMCacheGetOrSet('buyTalismanItem1')\r\n      const b = DOMCacheGetOrSet('buyTalismanItem2')\r\n      const c = DOMCacheGetOrSet('buyTalismanItem3')\r\n      const d = DOMCacheGetOrSet('buyTalismanItem4')\r\n      const e = DOMCacheGetOrSet('buyTalismanItem5')\r\n      const f = DOMCacheGetOrSet('buyTalismanItem6')\r\n      const g = DOMCacheGetOrSet('buyTalismanItem7')\r\n      const arr = [a, b, c, d, e, f, g]\r\n      for (let i = 0; i < arr.length; i++) {\r\n        (player.researchPoints > G.talismanResourceObtainiumCosts[i] && player.runeshards > G.talismanResourceOfferingCosts[i])\r\n          ? arr[i].classList.add('talisminBtnAvailable')\r\n          : arr[i].classList.remove('talisminBtnAvailable')\r\n      }\r\n    }\r\n  }\r\n\r\n  if (G.currentTab === 'buildings' && G.buildingSubTab === 'mythos') {\r\n    for (let i = 1; i <= 5; i++) {\r\n      const toggle = player.toggles[i + 15]\r\n      const mythos = player[`${G.ordinals[i - 1 as ZeroToFour]}CostMythos` as const];\r\n      (!toggle || !player.upgrades[93 + i]) && player.transcendPoints.gte(mythos)\r\n        ? DOMCacheGetOrSet(`buymythos${i}`).classList.add('buildingPurchaseBtnAvailable')\r\n        : DOMCacheGetOrSet(`buymythos${i}`).classList.remove('buildingPurchaseBtnAvailable')\r\n    }\r\n  }\r\n\r\n  if (G.currentTab === 'buildings' && G.buildingSubTab === 'particle') {\r\n    for (let i = 1; i <= 5; i++) {\r\n      const costParticles = player[`${G.ordinals[i - 1 as ZeroToFour]}CostParticles` as const]\r\n      player.reincarnationPoints.gte(costParticles)\r\n        ? DOMCacheGetOrSet(`buyparticles${i}`).classList.add('buildingPurchaseBtnAvailable')\r\n        : DOMCacheGetOrSet(`buyparticles${i}`).classList.remove('buildingPurchaseBtnAvailable')\r\n    }\r\n  }\r\n\r\n  if (G.currentTab === 'buildings' && G.buildingSubTab === 'tesseract') {\r\n    for (let i = 1; i <= 5; i++) {\r\n      const ascendBuilding = player[`ascendBuilding${i as OneToFive}` as const].cost\r\n      Number(player.wowTesseracts) >= ascendBuilding\r\n        ? DOMCacheGetOrSet(`buyTesseracts${i}`).classList.add('buildingPurchaseBtnAvailable')\r\n        : DOMCacheGetOrSet(`buyTesseracts${i}`).classList.remove('buildingPurchaseBtnAvailable')\r\n    }\r\n    for (let i = 1; i <= 8; i++) {\r\n      (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]!).times(G.constUpgradeCosts[i]!)))\r\n        ? DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.add('constUpgradeAvailable')\r\n        : DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeAvailable')\r\n    }\r\n    for (let i = 9; i <= 10; i++) {\r\n      if (player.constantUpgrades[i]! >= 1) {\r\n        DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.add('constUpgradeSingle')\r\n        DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeSingleAvailable')\r\n      } else if (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]!).times(G.constUpgradeCosts[i]!))) {\r\n        DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.add('constUpgradeSingleAvailable')\r\n      } else {\r\n        DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeSingleAvailable')\r\n        DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeSingle')\r\n      }\r\n    }\r\n  }\r\n\r\n  if (G.currentTab === 'ant') {\r\n    (player.reincarnationPoints.gte(player.firstCostAnts)) ? DOMCacheGetOrSet('anttier1').classList.add('antTierBtnAvailable') : DOMCacheGetOrSet('anttier1').classList.remove('antTierBtnAvailable')\r\n    for (let i = 2; i <= 8; i++) {\r\n      const costAnts = player[`${G.ordinals[(i - 1) as ZeroToSeven]}CostAnts` as const]\r\n      player.antPoints.gte(costAnts)\r\n        ? DOMCacheGetOrSet(`anttier${i}`).classList.add('antTierBtnAvailable')\r\n        : DOMCacheGetOrSet(`anttier${i}`).classList.remove('antTierBtnAvailable')\r\n    }\r\n    for (let i = 1; i <= 12; i++) {\r\n      player.antPoints.gte(Decimal.pow(G.antUpgradeCostIncreases[i-1], player.antUpgrades[i-1]! * G.extinctionMultiplier[player.usedCorruptions[10]]).times(G.antUpgradeBaseCost[i-1]))\r\n        ? DOMCacheGetOrSet(`antUpgrade${i}`).classList.add('antUpgradeBtnAvailable')\r\n        : DOMCacheGetOrSet(`antUpgrade${i}`).classList.remove('antUpgradeBtnAvailable')\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateChallengeDisplay = () => {\r\n  //Sets background colors on load/challenge initiation\r\n  for (let k = 1; k <= 15; k++) {\r\n    const el = DOMCacheGetOrSet(`challenge${k}`)\r\n    el.classList.remove('challengeActive')\r\n    if (player.currentChallenge.transcension === k) {\r\n      el.classList.add('challengeActive')\r\n    }\r\n    if (player.currentChallenge.reincarnation === k) {\r\n      el.classList.add('challengeActive')\r\n    }\r\n    if (player.currentChallenge.ascension === k) {\r\n      el.classList.add('challengeActive')\r\n    }\r\n  }\r\n  //Corrects HTML on retry challenges button\r\n  if (player.retrychallenges) {\r\n    DOMCacheGetOrSet('retryChallenge').textContent = i18next.t('challenges.retryChallengesOn')\r\n  } else {\r\n    DOMCacheGetOrSet('retryChallenge').textContent = i18next.t('challenges.retryChallengesOff')\r\n  }\r\n  for (let k = 1; k <= 15; k++) {\r\n    updateChallengeLevel(k)\r\n  }\r\n}\r\n\r\nexport const updateChallengeLevel = (k: number) => {\r\n  const el = DOMCacheGetOrSet(`challenge${k}level`)\r\n  const maxChallenges = getMaxChallenges(k)\r\n\r\n  if (k === 15) {\r\n    el.textContent = format(player.challenge15Exponent, 0, true)\r\n  } else {\r\n    el.textContent = `${player.challengecompletions[k]}/${maxChallenges}`\r\n  }\r\n}\r\n\r\nexport const updateAchievementBG = () => {\r\n  //When loading/importing, the game needs to correctly update achievement backgrounds.\r\n  for (let i = 1; i <= 280; i++) { //Initiates by setting all to default\r\n    DOMCacheGetOrSet(`ach${i}`).style.backgroundColor = ''\r\n  }\r\n  const fixDisplay1 = document.getElementsByClassName('purpleach') as HTMLCollectionOf<HTMLElement>\r\n  const fixDisplay2 = document.getElementsByClassName('redach') as HTMLCollectionOf<HTMLElement>\r\n  for (let i = 0; i < fixDisplay1.length; i++) {\r\n    fixDisplay1[i].style.backgroundColor = 'purple' //Sets the appropriate achs to purple\r\n  }\r\n  for (let i = 0; i < fixDisplay2.length; i++) {\r\n    fixDisplay2[i].style.backgroundColor = 'maroon' //Sets the appropriate achs to maroon (red)\r\n  }\r\n  for (let i = 1; i < player.achievements.length; i++) {\r\n    if (player.achievements[i] > 0.5) {\r\n      achievementaward(i) //This sets all completed ach to green\r\n    }\r\n  }\r\n}\r\n\r\nexport const showCorruptionStatsLoadouts = () => {\r\n  if (player.corruptionShowStats) {\r\n    DOMCacheGetOrSet('corruptionStats').style.display = 'flex'\r\n    DOMCacheGetOrSet('corruptionLoadouts').style.display = 'none'\r\n    DOMCacheGetOrSet('corrStatsBtn').style.borderColor = 'dodgerblue'\r\n    DOMCacheGetOrSet('corrLoadoutsBtn').style.borderColor = 'white'\r\n  } else {\r\n    DOMCacheGetOrSet('corruptionStats').style.display = 'none'\r\n    DOMCacheGetOrSet('corruptionLoadouts').style.display = 'flex'\r\n    DOMCacheGetOrSet('corrStatsBtn').style.borderColor = 'white'\r\n    DOMCacheGetOrSet('corrLoadoutsBtn').style.borderColor = 'dodgerblue'\r\n  }\r\n}\r\n\r\nconst updateAscensionStats = () => {\r\n  const t = player.ascensionCounter\r\n  const [cubes, tess, hyper, platonic, hepteract] = CalcCorruptionStuff().slice(4)\r\n  const addedAsterisk = (player.singularityUpgrades.oneMind.getEffect().bonus)\r\n  const fillers: Record<string, string> = {\r\n    'ascLen': formatTimeShort((player.ascStatToggles[6] ? player.ascensionCounter : player.ascensionCounterReal), 0),\r\n    'ascCubes': format(cubes * (player.ascStatToggles[1] ? 1 : 1 / t), 2),\r\n    'ascTess': format(tess * (player.ascStatToggles[2] ? 1 : 1 / t), 3),\r\n    'ascHyper': format(hyper * (player.ascStatToggles[3] ? 1 : 1 / t), 4),\r\n    'ascPlatonic': format(platonic * (player.ascStatToggles[4] ? 1 : 1 / t), 5),\r\n    'ascHepteract': format(hepteract * (player.ascStatToggles[5] ? 1 : 1 / t), 3),\r\n    'ascC10': `${format(player.challengecompletions[10])}`,\r\n    'ascTimeAccel': `${format(calculateTimeAcceleration().mult, 3)}x`,\r\n    'ascAscensionTimeAccel': `${format(calculateAscensionAcceleration(), 3)}x${addedAsterisk ? '*' : ''}`,\r\n    'ascSingularityCount': format(player.singularityCount),\r\n    'ascSingLen': formatTimeShort(player.singularityCounter)\r\n  }\r\n  for (const key in fillers) {\r\n    const dom = DOMCacheGetOrSet(key)\r\n    if (dom.textContent !== fillers[key]) {\r\n      dom.textContent = fillers[key]\r\n    }\r\n  }\r\n}\r\n\r\nconst tabColors: Record<string, string> = {\r\n  buildings: 'yellow',\r\n  upgrades: 'yellow',\r\n  achievements: 'white',\r\n  runes: 'cyan',\r\n  challenges: 'plum',\r\n  researches: 'green',\r\n  ants: 'brown',\r\n  cubes: 'purple',\r\n  traits: 'orange',\r\n  settings: 'white',\r\n  shop: 'limegreen'\r\n}\r\n\r\nexport const changeTabColor = () => {\r\n  const tab = DOMCacheGetOrSet('tabBorder')\r\n  const color = G.currentTab in tabColors\r\n    ? tabColors[G.currentTab]\r\n    : 'yellow'\r\n\r\n  tab.style.backgroundColor = color\r\n}\r\n\r\nconst ConfirmCB = (text: string, cb: (value: boolean) => void) => {\r\n  const conf = DOMCacheGetOrSet('confirmationBox')\r\n  const confWrap = DOMCacheGetOrSet('confirmWrapper')\r\n  const popup = DOMCacheGetOrSet('confirm')\r\n  const overlay = DOMCacheGetOrSet('transparentBG')\r\n  const ok = DOMCacheGetOrSet('ok_confirm')\r\n  const cancel = DOMCacheGetOrSet('cancel_confirm')\r\n\r\n  DOMCacheGetOrSet('alertWrapper').style.display = 'none'\r\n  DOMCacheGetOrSet('promptWrapper').style.display = 'none'\r\n\r\n  conf.style.display = 'block'\r\n  confWrap.style.display = 'block'\r\n  overlay.style.display = 'block'\r\n    popup.querySelector('p')!.textContent = text\r\n    popup.focus()\r\n\r\n    // IF you clean up the typing here also clean up PromptCB\r\n    const listener = ({ target }: MouseEvent | { target: HTMLElement }) => {\r\n      const targetEl = target as HTMLButtonElement\r\n      ok.removeEventListener('click', listener)\r\n      cancel.removeEventListener('click', listener)\r\n      popup.removeEventListener('keyup', kbListener)\r\n\r\n      conf.style.display = 'none'\r\n      confWrap.style.display = 'none'\r\n      overlay.style.display = 'none'\r\n\r\n      if (targetEl === ok) {\r\n        cb(true)\r\n      } else {\r\n        cb(false)\r\n      }\r\n    }\r\n\r\n    const kbListener = (e: KeyboardEvent) => {\r\n      if (e.key === 'Enter' || e.key === ' ') {\r\n        return listener({ target: ok })\r\n      } else if (e.key === 'Escape') {\r\n        return listener({ target: cancel })\r\n      }\r\n\r\n      return e.preventDefault()\r\n    }\r\n\r\n    ok.addEventListener('click', listener)\r\n    cancel.addEventListener('click', listener)\r\n    popup.addEventListener('keyup', kbListener)\r\n}\r\n\r\nconst AlertCB = (text: string, cb: (value: undefined) => void) => {\r\n  const conf = DOMCacheGetOrSet('confirmationBox')\r\n  const alertWrap = DOMCacheGetOrSet('alertWrapper')\r\n  const overlay = DOMCacheGetOrSet('transparentBG')\r\n  const popup = DOMCacheGetOrSet('alert')\r\n  const ok = DOMCacheGetOrSet('ok_alert')\r\n\r\n  DOMCacheGetOrSet('confirmWrapper').style.display = 'none'\r\n  DOMCacheGetOrSet('promptWrapper').style.display = 'none'\r\n\r\n  conf.style.display = 'block'\r\n  alertWrap.style.display = 'block'\r\n  overlay.style.display = 'block'\r\n    popup.querySelector('p')!.textContent = text\r\n    popup.focus()\r\n\r\n    const listener = () => {\r\n      ok.removeEventListener('click', listener)\r\n      popup.removeEventListener('keyup', kbListener)\r\n\r\n      conf.style.display = 'none'\r\n      alertWrap.style.display = 'none'\r\n      overlay.style.display = 'none'\r\n      cb(undefined)\r\n    }\r\n\r\n    const kbListener = (e: KeyboardEvent) => (e.key === 'Enter' || e.key === ' ') && listener()\r\n\r\n    ok.addEventListener('click', listener)\r\n    popup.addEventListener('keyup', kbListener)\r\n}\r\n\r\nexport const PromptCB = (text: string, cb: (value: string | null) => void) => {\r\n  const conf = DOMCacheGetOrSet('confirmationBox')\r\n  const confWrap = DOMCacheGetOrSet('promptWrapper')\r\n  const overlay = DOMCacheGetOrSet('transparentBG')\r\n  const popup = DOMCacheGetOrSet('prompt')\r\n  const ok = DOMCacheGetOrSet('ok_prompt')\r\n  const cancel = DOMCacheGetOrSet('cancel_prompt')\r\n\r\n  DOMCacheGetOrSet('alertWrapper').style.display = 'none'\r\n  DOMCacheGetOrSet('confirmWrapper').style.display = 'none'\r\n\r\n  conf.style.display = 'block'\r\n  confWrap.style.display = 'block'\r\n  overlay.style.display = 'block'\r\n    popup.querySelector('label')!.textContent = text\r\n    popup.querySelector('input')!.focus()\r\n\r\n    // kinda disgusting types but whatever\r\n    const listener = ({ target }: MouseEvent | { target: HTMLElement }) => {\r\n      const targetEl = target as HTMLButtonElement\r\n      const el = targetEl.parentNode!.querySelector('input')!\r\n\r\n      ok.removeEventListener('click', listener)\r\n      cancel.removeEventListener('click', listener)\r\n        popup.querySelector('input')!.removeEventListener('keyup', kbListener)\r\n\r\n        conf.style.display = 'none'\r\n        confWrap.style.display = 'none'\r\n        overlay.style.display = 'none'\r\n\r\n        if (targetEl.id === ok.id) {\r\n          cb(el.value)\r\n        } else {\r\n          cb(null)\r\n        } // canceled\r\n\r\n        el.value = el.textContent = ''\r\n        popup.querySelector('input')!.blur()\r\n    }\r\n\r\n    const kbListener = (e: KeyboardEvent) => {\r\n      if (e.key === 'Enter') {\r\n        return listener({ target: ok })\r\n      } else if (e.key === 'Escape') {\r\n        return listener({ target: cancel })\r\n      }\r\n\r\n      return e.preventDefault()\r\n    }\r\n\r\n    ok.addEventListener('click', listener)\r\n    cancel.addEventListener('click', listener)\r\n    popup.querySelector('input')!.addEventListener('keyup', kbListener)\r\n}\r\n\r\nlet closeNotification: ReturnType<typeof setTimeout>\r\nlet closedNotification: ReturnType<typeof setTimeout>\r\n\r\nconst NotificationCB = (text: string, time = 30000, cb: () => void) => {\r\n  const notification = DOMCacheGetOrSet('notification')\r\n  const textNode = document.querySelector<HTMLElement>('#notification > p')!\r\n  const x = DOMCacheGetOrSet('notifx')\r\n\r\n  textNode.textContent = text\r\n  notification.style.display = 'block'\r\n  notification.classList.remove('slide-out')\r\n  notification.classList.add('slide-in')\r\n\r\n  const closed = () => {\r\n    notification.style.display = 'none'\r\n    textNode.textContent = ''\r\n    closedNotification = 0\r\n  }\r\n\r\n  const close = () => {\r\n    notification.classList.add('slide-out')\r\n    notification.classList.remove('slide-in')\r\n\r\n    closeNotification = 0\r\n    x.removeEventListener('click', close)\r\n    closedNotification = setTimeout(closed, 1000)\r\n    cb()\r\n  }\r\n\r\n  x.addEventListener('click', close)\r\n  // Reset the close timer if reopened before closed\r\n  if (closeNotification > 0) {\r\n    clearTimeout(closeNotification)\r\n  }\r\n  if (closedNotification > 0) {\r\n    clearTimeout(closedNotification)\r\n  }\r\n  // automatically close out after <time> ms\r\n  closeNotification = setTimeout(close, time)\r\n}\r\n\r\n/*** Promisified version of the AlertCB function. */\r\n// eslint-disable-next-line no-promise-executor-return\r\nexport const Alert = (text: string): Promise<undefined> => new Promise(res => AlertCB(text, res))\r\n/*** Promisified version of the PromptCB function. */\r\n// eslint-disable-next-line no-promise-executor-return\r\nexport const Prompt = (text: string): Promise<string | null> => new Promise(res => PromptCB(text, res))\r\n/*** Promisified version of the ConfirmCB function */\r\n// eslint-disable-next-line no-promise-executor-return\r\nexport const Confirm = (text: string): Promise<boolean> => new Promise(res => ConfirmCB(text, res))\r\n/*** Promisified version of the NotificationCB function */\r\n// eslint-disable-next-line no-promise-executor-return\r\nexport const Notification = (text: string, time?: number): Promise<void> => new Promise(res => NotificationCB(text, time, res))\r\n\r\n/**\r\n * Create a popunder under an element.\r\n * @example\r\n * popunder(document.querySelector('.currencyContainer'), () => player.coins);\r\n * @param el Element to create the popunder under\r\n * @param v function that returns the value to format\r\n */\r\n/*const popunder = (\r\n    el: HTMLElement,\r\n    v: () => Parameters<typeof format>[0]\r\n) => {\r\n    const id: 'khafraIsAwesome' = 'khafraIsAwesome' as const; // DO NOT CHANGE!\r\n    el.addEventListener('mouseenter', (ev) => {\r\n        const isOnPage = DOMCacheGetOrSet(id);\r\n        if (isOnPage !== null)\r\n            document.body.removeChild(isOnPage);\r\n\r\n        const hover = ev.target as HTMLElement;\r\n        const popunder = document.createElement('div');\r\n        popunder.setAttribute('id', id);\r\n        popunder.textContent =  format(v(), undefined, undefined, false);\r\n\r\n        popunder.style.setProperty('position', 'absolute');\r\n        popunder.style.setProperty('text-align', 'center');\r\n        popunder.style.setProperty('height', `${hover.offsetHeight}px`);\r\n        popunder.style.setProperty('width', `${hover.offsetWidth}px`);\r\n        popunder.style.setProperty('top', `${hover.offsetTop + hover.offsetHeight}px`);\r\n        popunder.style.setProperty('left', `${hover.offsetLeft}px`);\r\n        popunder.style.setProperty('background-color', 'red');\r\n\r\n        document.body.appendChild(popunder);\r\n    });\r\n\r\n    el.addEventListener('mouseleave', () => {\r\n        const isOnPage = DOMCacheGetOrSet(id);\r\n        if (isOnPage !== null)\r\n            document.body.removeChild(isOnPage);\r\n    });\r\n}\r\n\r\nObject.defineProperty(window, 'popunder', { value: popunder });*/\r\n", "import { updateChallengeDisplay, showCorruptionStatsLoadouts, Prompt, Alert } from './UpdateHTML'\r\nimport { player, format, resetCheck } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { visualUpdateCubes, visualUpdateOcteracts } from './UpdateVisuals'\r\nimport { calculateRuneLevels } from './Calculate'\r\nimport { reset, resetrepeat } from './Reset'\r\nimport { autoResearchEnabled } from './Research'\r\nimport { achievementaward } from './Achievements'\r\nimport { getChallengeConditions } from './Challenges'\r\nimport { corruptionDisplay, corruptionLoadoutTableUpdate, maxCorruptionLevel } from './Corruptions'\r\nimport type { BuildingSubtab, Player } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport i18next from 'i18next'\r\nimport { subTabsInMainTab } from './Tabs'\r\n\r\nexport const toggleSettings = (toggle: HTMLElement) => {\r\n  const toggleId = toggle.getAttribute('toggleId') ?? 1\r\n  if (player.toggles[+toggleId]) {\r\n    player.toggles[+toggleId] = false\r\n  } else {\r\n    player.toggles[+toggleId] = true\r\n  }\r\n  const format = toggle.getAttribute('format')\r\n\r\n  if (format === '$' || format === '[$]') {\r\n    const text = player.toggles[+toggleId] ? i18next.t('general.on') : i18next.t('general.off')\r\n    toggle.textContent = format === '[$]' ? `[${text}]` : text\r\n  } else if (format === 'Auto Catalyze: $') {\r\n    const text = player.toggles[+toggleId] ? i18next.t('shop.autoCatalyzeOn') : i18next.t('shop.autoCatalyzeOff')\r\n    toggle.textContent = text\r\n  } else if (format === 'Hover-to-Buy [$]') {\r\n    const text = player.toggles[+toggleId] ? i18next.t('researches.hoverToBuyOn') : i18next.t('researches.hoverToBuyOff')\r\n    toggle.textContent = text\r\n  } else if (format === 'Auto: $') {\r\n    const text = player.toggles[+toggleId] ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\r\n    toggle.textContent = text\r\n  } else if (format) {\r\n    const finishedString = format.replace('$', player.toggles[+toggleId] ? 'ON' : 'OFF')\r\n    toggle.textContent = finishedString\r\n  } else {\r\n    toggle.textContent = player.toggles[+toggleId]\r\n      ? i18next.t('general.autoOnBracket')\r\n      : i18next.t('general.autoOffBracket')\r\n  }\r\n\r\n  toggle.style.border = '2px solid ' + (player.toggles[+toggleId] ? 'green' : 'red')\r\n}\r\n\r\nexport const toggleChallenges = (i: number, auto = false) => {\r\n  if ((i <= 5)) {\r\n    if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2) {\r\n      player.currentChallenge.transcension = i\r\n      reset('transcensionChallenge', false, 'enterChallenge')\r\n      player.transcendCount -= 1\r\n    }\r\n    if (!player.currentChallenge.reincarnation && !document.querySelector('.resetbtn.hover')) {\r\n      resetrepeat('transcensionChallenge')\r\n    }\r\n  }\r\n  if ((i >= 6 && i < 11)) {\r\n    if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2) {\r\n      player.currentChallenge.reincarnation = i\r\n      reset('reincarnationChallenge', false, 'enterChallenge')\r\n      player.reincarnationCount -= 1\r\n    }\r\n    if (!document.querySelector('.resetbtn.hover')) {\r\n      resetrepeat('reincarnationChallenge')\r\n    }\r\n  }\r\n  if (i >= 11 && ((!auto && !player.toggles[31]) || player.challengecompletions[10] > 0 || (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0 && player.currentChallenge.ascension === 0))) {\r\n    if (player.currentChallenge.ascension === 15) {\r\n      void resetCheck('ascensionChallenge', false, true)\r\n    }\r\n    player.currentChallenge.ascension = i\r\n    reset('ascensionChallenge', false, 'enterChallenge')\r\n  }\r\n  updateChallengeDisplay()\r\n  getChallengeConditions(i)\r\n\r\n  if (i <= 10 && !auto && player.autoChallengeRunning) {\r\n    toggleAutoChallengeRun()\r\n  }\r\n\r\n  if (player.currentChallenge.transcension !== 0 && player.currentChallenge.reincarnation !== 0 && player.currentChallenge.ascension !== 0 && player.achievements[238] < 1) {\r\n    achievementaward(238)\r\n  }\r\n}\r\n\r\ntype ToggleBuy = 'coin' | 'crystal' | 'mythos' | 'particle' | 'offering' | 'tesseract'\r\n\r\nexport const toggleBuyAmount = (quantity: 1 | 10 | 100 | 1000 | 10000 | 100000, type: ToggleBuy) => {\r\n  player[`${type}buyamount` as const] = quantity\r\n  const a = ['one', 'ten', 'hundred', 'thousand', '10k', '100k'][quantity.toString().length - 1]\r\n\r\n  DOMCacheGetOrSet(`${type}${a}`).style.backgroundColor = 'Green'\r\n  if (quantity !== 1) {\r\n    DOMCacheGetOrSet(`${type}one`).style.backgroundColor = ''\r\n  }\r\n  if (quantity !== 10) {\r\n    DOMCacheGetOrSet(`${type}ten`).style.backgroundColor = ''\r\n  }\r\n  if (quantity !== 100) {\r\n    DOMCacheGetOrSet(`${type}hundred`).style.backgroundColor = ''\r\n  }\r\n  if (quantity !== 1000) {\r\n    DOMCacheGetOrSet(`${type}thousand`).style.backgroundColor = ''\r\n  }\r\n  if (quantity !== 10000) {\r\n    DOMCacheGetOrSet(`${type}10k`).style.backgroundColor = ''\r\n  }\r\n  if (quantity !== 100000) {\r\n    DOMCacheGetOrSet(`${type}100k`).style.backgroundColor = ''\r\n  }\r\n}\r\n\r\ntype upgradeAutos = 'coin' | 'prestige' | 'transcend' | 'generators' | 'reincarnate'\r\n\r\n/**\r\n * Updates Auto Upgrade Border Colors if applicable, or updates the status of an upgrade toggle as optional.\r\n * @param toggle Targets a specific upgrade toggle if provided\r\n */\r\nexport const toggleShops = (toggle?: upgradeAutos) => {\r\n  // toggle provided: we do not want to update every button\r\n  if (toggle) {\r\n    player.shoptoggles[toggle] = !player.shoptoggles[toggle]\r\n    DOMCacheGetOrSet(`${toggle}AutoUpgrade`).style.borderColor = player.shoptoggles[toggle] ? 'green' : 'red'\r\n\r\n    if (player.shoptoggles[toggle]) {\r\n      DOMCacheGetOrSet(`${toggle}AutoUpgrade`).textContent = i18next.t('general.autoOnColon')\r\n    } else {\r\n      DOMCacheGetOrSet(`${toggle}AutoUpgrade`).textContent = i18next.t('general.autoOffColon')\r\n    }\r\n  } else {\r\n    const keys = Object.keys(player.shoptoggles) as (keyof Player['shoptoggles'])[]\r\n    for (const key of keys) {\r\n      const color = player.shoptoggles[key]? 'green': 'red'\r\n\r\n      if (player.shoptoggles[key]) {\r\n        DOMCacheGetOrSet(`${key}AutoUpgrade`).textContent = i18next.t('general.autoOnColon')\r\n      } else {\r\n        DOMCacheGetOrSet(`${key}AutoUpgrade`).textContent = i18next.t('general.autoOffColon')\r\n      }\r\n\r\n      DOMCacheGetOrSet(`${key}AutoUpgrade`).style.borderColor = color\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleautoreset = (i: number) => {\r\n  if (i === 1) {\r\n    if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\r\n      player.resettoggle1 = 2\r\n      DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    } else {\r\n      player.resettoggle1 = 1\r\n      DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n  } else if (i === 2) {\r\n    if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\r\n      player.resettoggle2 = 2\r\n      DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    } else {\r\n      player.resettoggle2 = 1\r\n      DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n  } else if (i === 3) {\r\n    if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\r\n      player.resettoggle3 = 2\r\n      DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeTime')\r\n    } else {\r\n      player.resettoggle3 = 1\r\n      DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n  } else if (i === 4) {\r\n    if (player.resettoggle4 === 1 || player.resettoggle4 === 0) {\r\n      player.resettoggle4 = 2\r\n      DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modePercentage')\r\n    } else {\r\n      player.resettoggle4 = 1\r\n      DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modeAmount')\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleautobuytesseract = () => {\r\n  if (player.tesseractAutoBuyerToggle === 1 || player.tesseractAutoBuyerToggle === 0) {\r\n    player.tesseractAutoBuyerToggle = 2\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOff')\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid red'\r\n\r\n  } else {\r\n    player.tesseractAutoBuyerToggle = 1\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOn')\r\n    DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid green'\r\n  }\r\n}\r\n\r\nexport const toggleauto = () => {\r\n  const toggles = Array.from<HTMLElement>(document.querySelectorAll('.auto[toggleid]'))\r\n  for (const toggle of toggles) {\r\n    const format = toggle.getAttribute('format')\r\n    const toggleId = toggle.getAttribute('toggleId') ?? 1\r\n\r\n    if (format === '$') {\r\n      const text = player.toggles[+toggleId] ? i18next.t('general.on') : i18next.t('general.off')\r\n      toggle.textContent = text\r\n    } else if (format === 'Auto Catalyze: $') {\r\n      const text = player.toggles[+toggleId] ? i18next.t('shop.autoCatalyzeOn') : i18next.t('shop.autoCatalyzeOff')\r\n      toggle.textContent = text\r\n    } else if (format === 'Hover-to-Buy [$]') {\r\n      const text = player.toggles[+toggleId] ? i18next.t('researches.hoverToBuyOn') : i18next.t('researches.hoverToBuyOff')\r\n      toggle.textContent = text\r\n    } else if (format === 'Auto: $') {\r\n      const text = player.toggles[+toggleId] ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\r\n      toggle.textContent = text\r\n    } else if (format) {\r\n      const finishedString = format.replace('$', player.toggles[+toggleId] ? 'ON' : 'OFF')\r\n      toggle.textContent = finishedString\r\n    } else {\r\n      toggle.textContent = player.toggles[+toggleId]\r\n        ? i18next.t('general.autoOnBracket')\r\n        : i18next.t('general.autoOffBracket')\r\n    }\r\n\r\n    toggle.style.border = '2px solid ' + (player.toggles[+toggleId] ? 'green' : 'red')\r\n  }\r\n\r\n  const tesseractAutos = Array.from<HTMLElement>(document.querySelectorAll('*[id^=\"tesseractAutoToggle\"]'))\r\n\r\n  for (let j = 0; j < tesseractAutos.length; j++) {\r\n    const auto = tesseractAutos[j]\r\n\r\n    if (player.autoTesseracts[j + 1]) {\r\n      auto.textContent = i18next.t('general.autoOnBracket')\r\n      auto.style.border = '2px solid green'\r\n    } else {\r\n      auto.textContent = i18next.t('general.autoOffBracket')\r\n      auto.style.border = '2px solid red'\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleResearchBuy = () => {\r\n  if (player.researchBuyMaxToggle) {\r\n    player.researchBuyMaxToggle = false\r\n    DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeOne')\r\n  } else {\r\n    player.researchBuyMaxToggle = true\r\n    DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeMax')\r\n  }\r\n}\r\n\r\nexport const toggleAutoResearch = () => {\r\n  const el = DOMCacheGetOrSet('toggleautoresearch')\r\n  if (player.autoResearchToggle || player.shopUpgrades.obtainiumAuto < 1) {\r\n    player.autoResearchToggle = false\r\n    el.textContent = i18next.t('researches.automaticOff')\r\n    DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n    player.autoResearch = 0\r\n  } else {\r\n    player.autoResearchToggle = true\r\n    el.textContent = i18next.t('researches.automaticOn')\r\n  }\r\n\r\n  if (player.autoResearchToggle && autoResearchEnabled() && player.autoResearchMode === 'cheapest') {\r\n    player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n  }\r\n\r\n}\r\n\r\nexport const toggleAutoResearchMode = () => {\r\n  const el = DOMCacheGetOrSet('toggleautoresearchmode')\r\n  if (player.autoResearchMode === 'cheapest' || !autoResearchEnabled()) {\r\n    player.autoResearchMode = 'manual'\r\n    el.textContent = i18next.t('researches.autoModeManual')\r\n  } else {\r\n    player.autoResearchMode = 'cheapest'\r\n    el.textContent = i18next.t('researches.autoModeCheapest')\r\n  }\r\n  DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba')\r\n\r\n  if (player.autoResearchToggle && autoResearchEnabled() && player.autoResearchMode === 'cheapest') {\r\n    player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n  }\r\n}\r\n\r\nexport const toggleAutoSacrifice = (index: number) => {\r\n  const el = DOMCacheGetOrSet('toggleautosacrifice')\r\n  if (index === 0) {\r\n    if (player.autoSacrificeToggle) {\r\n      player.autoSacrificeToggle = false\r\n      el.textContent = i18next.t('runes.blessings.autoRuneOff')\r\n      el.style.border = '2px solid red'\r\n      player.autoSacrifice = 0\r\n    } else {\r\n      player.autoSacrificeToggle = true\r\n      player.saveOfferingToggle = false\r\n      el.textContent = i18next.t('runes.blessings.autoRuneOn')\r\n      el.style.border = '2px solid green'\r\n      DOMCacheGetOrSet('saveOffToggle').textContent = i18next.t('toggles.saveOfferingsOff')\r\n      DOMCacheGetOrSet('saveOffToggle').style.color = 'white'\r\n    }\r\n  } else if (player.autoSacrificeToggle && player.shopUpgrades.offeringAuto > 0.5) {\r\n    if (player.autoSacrifice === index) {\r\n      player.autoSacrifice = 0\r\n    } else {\r\n      player.autoSacrifice = index\r\n    }\r\n  }\r\n  for (let i = 1; i <= 5; i++) {\r\n    DOMCacheGetOrSet(`rune${i}`).style.backgroundColor = player.autoSacrifice === i ? 'orange' : ''\r\n  }\r\n  calculateRuneLevels()\r\n}\r\n\r\nexport const toggleAutoBuyFragment = () => {\r\n  const el = DOMCacheGetOrSet('toggleautoBuyFragments')\r\n  if (player.autoBuyFragment) {\r\n    el.textContent = i18next.t('runes.talismans.autoBuyOff')\r\n    el.style.border = '2px solid orange'\r\n    el.style.color = 'white'\r\n  } else {\r\n    el.textContent = i18next.t('runes.talismans.autoBuyOn')\r\n    el.style.border = '2px solid white'\r\n    el.style.color = 'orange'\r\n  }\r\n\r\n  player.autoBuyFragment = !player.autoBuyFragment\r\n}\r\n\r\nexport const toggleBuildingScreen = (input: BuildingSubtab) => {\r\n  G.buildingSubTab = input\r\n  const screen: Record<string, { screen: string, button: string, subtabNumber: number }> = {\r\n    'coin': {\r\n      screen: 'coinBuildings',\r\n      button: 'switchToCoinBuilding',\r\n      subtabNumber: 0\r\n    },\r\n    'diamond': {\r\n      screen: 'prestige',\r\n      button: 'switchToDiamondBuilding',\r\n      subtabNumber: 1\r\n    },\r\n    'mythos': {\r\n      screen: 'transcension',\r\n      button: 'switchToMythosBuilding',\r\n      subtabNumber: 2\r\n    },\r\n    'particle': {\r\n      screen: 'reincarnation',\r\n      button: 'switchToParticleBuilding',\r\n      subtabNumber: 3\r\n    },\r\n    'tesseract': {\r\n      screen: 'ascension',\r\n      button: 'switchToTesseractBuilding',\r\n      subtabNumber: 4\r\n    }\r\n  }\r\n  for (const key in screen) {\r\n    DOMCacheGetOrSet(screen[key].screen).style.display = 'none'\r\n    DOMCacheGetOrSet(screen[key].button).style.backgroundColor = ''\r\n  }\r\n  DOMCacheGetOrSet(screen[G.buildingSubTab].screen).style.display = 'flex'\r\n  DOMCacheGetOrSet(screen[G.buildingSubTab].button).style.backgroundColor = 'crimson'\r\n  player.subtabNumber = screen[G.buildingSubTab].subtabNumber\r\n}\r\n\r\nexport const toggleRuneScreen = (index: number) => {\r\n  const screens = ['runes', 'talismans', 'blessings', 'spirits']\r\n  G.runescreen = screens[index - 1]\r\n\r\n  for (let i = 1; i <= 4; i++) {\r\n    const a = DOMCacheGetOrSet(`toggleRuneSubTab${i}`)\r\n    const b = DOMCacheGetOrSet(`runeContainer${i}`)\r\n    if (i === index) {\r\n      a.style.border = '2px solid gold'\r\n      a.style.backgroundColor = 'crimson'\r\n      b.style.display = 'flex'\r\n    } else {\r\n      a.style.border = '2px solid silver'\r\n      a.style.backgroundColor = ''\r\n      b.style.display = 'none'\r\n    }\r\n  }\r\n  player.subtabNumber = index - 1\r\n}\r\n\r\nexport const toggleautofortify = () => {\r\n  const el = DOMCacheGetOrSet('toggleautofortify')\r\n  if (player.autoFortifyToggle) {\r\n    el.textContent = i18next.t('runes.autoFortifyOff')\r\n    el.style.border = '2px solid red'\r\n  } else {\r\n    el.textContent = i18next.t('runes.autoFortifyOn')\r\n    el.style.border = '2px solid green'\r\n  }\r\n\r\n  player.autoFortifyToggle = !player.autoFortifyToggle\r\n}\r\n\r\nexport const toggleautoenhance = () => {\r\n  const el = DOMCacheGetOrSet('toggleautoenhance')\r\n  if (player.autoEnhanceToggle) {\r\n    el.textContent = i18next.t('runes.autoEnhanceOff')\r\n    el.style.border = '2px solid red'\r\n  } else {\r\n    el.textContent = i18next.t('runes.autoEnhanceOn')\r\n    el.style.border = '2px solid green'\r\n  }\r\n\r\n  player.autoEnhanceToggle = !player.autoEnhanceToggle\r\n}\r\n\r\nexport const toggleSaveOff = () => {\r\n  const el = DOMCacheGetOrSet('saveOffToggle')\r\n  const et = DOMCacheGetOrSet('toggleautosacrifice')\r\n  if (player.saveOfferingToggle) {\r\n    player.autoSacrificeToggle = true\r\n    el.textContent = i18next.t('toggles.saveOfferingsOff')\r\n    el.style.color = 'white'\r\n    et.textContent = 'Auto Runes: ON'\r\n    et.style.border = '2px solid green'\r\n  } else {\r\n    player.autoSacrificeToggle = false\r\n    el.textContent = i18next.t('toggles.saveOfferingsOn')\r\n    el.style.color = 'yellow'\r\n    et.textContent = 'Auto Runes: OFF'\r\n    et.style.border = '2px solid red'\r\n  }\r\n\r\n  player.saveOfferingToggle = !player.saveOfferingToggle\r\n}\r\n\r\nexport const toggleSingularityScreen = (index: number) => {\r\n  const screens = ['shop', 'penalties', 'perks', 'octeracts', 'challenges']\r\n  G.singularityscreen = screens[index - 1]\r\n\r\n  for (let i = 1; i <= 5; i++) {\r\n    const a = DOMCacheGetOrSet(`toggleSingularitySubTab${i}`)\r\n    const b = DOMCacheGetOrSet(`singularityContainer${i}`)\r\n    if (i === index) {\r\n      a.style.backgroundColor = 'crimson'\r\n      b.style.display = 'block'\r\n    } else {\r\n      a.style.backgroundColor = ''\r\n      b.style.display = 'none'\r\n    }\r\n  }\r\n  player.subtabNumber = index - 1\r\n\r\n  if (player.subtabNumber === 3) {\r\n    visualUpdateOcteracts()\r\n  }\r\n}\r\n\r\ninterface ChadContributor {\r\n    login: string\r\n    id: number\r\n    node_id: string\r\n    avatar_url: string\r\n    gravatar_id: string\r\n    url: string\r\n    html_url: string\r\n    followers_url: string\r\n    following_url: string\r\n    gists_url: string\r\n    starred_url: string\r\n    subscriptions_url: string\r\n    organizations_url: string\r\n    repos_url: string\r\n    events_url: string\r\n    received_events_url: string\r\n    type: string\r\n    site_admin: boolean\r\n    contributions: number\r\n}\r\n\r\nexport const setActiveSettingScreen = async (subtab: string, clickedButton: HTMLButtonElement) => {\r\n  const subtabEl = DOMCacheGetOrSet(subtab)\r\n  if (subtabEl.classList.contains('subtabActive')) {\r\n    return\r\n  }\r\n\r\n  const switcherEl = clickedButton.parentNode!\r\n  switcherEl.querySelectorAll('.buttonActive').forEach(b => b.classList.remove('buttonActive'))\r\n  clickedButton.classList.add('buttonActive')\r\n\r\n    subtabEl.parentNode!.querySelectorAll('.subtabActive').forEach(subtab => subtab.classList.remove('subtabActive'))\r\n    subtabEl.classList.add('subtabActive')\r\n\r\n    if (subtab === 'creditssubtab') {\r\n      const credits = DOMCacheGetOrSet('creditList')\r\n      const artists = DOMCacheGetOrSet('artistList')\r\n\r\n      if (credits.childElementCount > 0 || artists.childElementCount > 0) {\r\n        return\r\n      } else if (!navigator.onLine || document.hidden) {\r\n        return\r\n      }\r\n\r\n      try {\r\n        const r = await fetch('https://api.github.com/repos/pseudo-corp/SynergismOfficial/contributors', {\r\n          headers: {\r\n            'Accept': 'application/vnd.github.v3+json'\r\n          }\r\n        })\r\n        const j = await r.json() as ChadContributor[]\r\n\r\n        for (const contributor of j) {\r\n          const div = document.createElement('div')\r\n          div.classList.add('credit')\r\n\r\n          const img = new Image(32, 32)\r\n          img.src = contributor.avatar_url\r\n          img.alt = contributor.login\r\n\r\n          const a = document.createElement('a')\r\n          a.href = `https://github.com/Pseudo-Corp/SynergismOfficial/commits?author=${contributor.login}`\r\n          a.textContent = contributor.login\r\n          a.target = '_blank'\r\n          a.rel = 'noopener noreferrer nofollow'\r\n\r\n          div.appendChild(img)\r\n          div.appendChild(a)\r\n\r\n          credits.appendChild(div)\r\n        }\r\n      } catch (e) {\r\n        const err = e as Error\r\n        credits.appendChild(document.createTextNode(err.toString()))\r\n      }\r\n\r\n      try {\r\n        const r = await fetch('https://api.github.com/gists/01917ff476d25a141c5bad38340cd756', {\r\n          headers: {\r\n            'Accept': 'application/vnd.github.v3+json'\r\n          }\r\n        })\r\n\r\n        const j = await r.json() as { files: Record<string, { content: string }> }\r\n        const f = JSON.parse(j.files['synergism_artists.json'].content) as string[]\r\n\r\n        for (const user of f) {\r\n          const p = document.createElement('p')\r\n          p.textContent = user\r\n\r\n          artists.appendChild(p)\r\n        }\r\n      } catch (e) {\r\n        const err = e as Error\r\n        credits.appendChild(document.createTextNode(err.toString()))\r\n      }\r\n    }\r\n}\r\n\r\nexport const toggleShopConfirmation = () => {\r\n  const el = DOMCacheGetOrSet('toggleConfirmShop')\r\n  el.textContent = player.shopConfirmationToggle\r\n    ? i18next.t('shop.shopConfirmationOff')\r\n    : i18next.t('shop.shopConfirmationOn')\r\n\r\n  player.shopConfirmationToggle = !player.shopConfirmationToggle\r\n}\r\n\r\nexport const toggleBuyMaxShop = (event: MouseEvent) => {\r\n  const el = DOMCacheGetOrSet('toggleBuyMaxShopText')\r\n  if (event.shiftKey) {\r\n    el.textContent = i18next.t('shop.buyAny')\r\n    player.shopBuyMaxToggle = 'ANY'\r\n    return\r\n  }\r\n\r\n  switch (player.shopBuyMaxToggle) {\r\n    case false:\r\n      el.innerHTML = i18next.t('shop.buy10')\r\n      player.shopBuyMaxToggle = 'TEN'\r\n      break\r\n    case 'TEN':\r\n      el.innerHTML = i18next.t('shop.buyMax')\r\n      player.shopBuyMaxToggle = true\r\n      break\r\n    default:\r\n      el.innerHTML = i18next.t('shop.buy1')\r\n      player.shopBuyMaxToggle = false\r\n  }\r\n}\r\n\r\nexport const toggleHideShop = () => {\r\n  const el = DOMCacheGetOrSet('toggleHideShop')\r\n  el.textContent = player.shopHideToggle\r\n    ? i18next.t('shop.hideMaxedOff')\r\n    : i18next.t('shop.hideMaxedOn')\r\n\r\n  player.shopHideToggle = !player.shopHideToggle\r\n}\r\n\r\nexport const toggleAntMaxBuy = () => {\r\n  const el = DOMCacheGetOrSet('toggleAntMax')\r\n  el.textContent = player.antMax\r\n    ? i18next.t('general.buyMaxOff')\r\n    : i18next.t('general.buyMaxOn')\r\n\r\n  player.antMax = !player.antMax\r\n}\r\n\r\nexport const toggleAntAutoSacrifice = (mode = 0) => {\r\n  if (mode === 0) {\r\n    const el = DOMCacheGetOrSet('toggleAutoSacrificeAnt')\r\n    if (player.autoAntSacrifice) {\r\n      player.autoAntSacrifice = false\r\n      el.textContent = i18next.t('ants.autoSacrificeOff')\r\n    } else {\r\n      player.autoAntSacrifice = true\r\n      el.textContent = i18next.t('ants.autoSacrificeOn')\r\n    }\r\n  } else if (mode === 1) {\r\n    const el = DOMCacheGetOrSet('autoSacrificeAntMode')\r\n    if (player.autoAntSacrificeMode === 1 || player.autoAntSacrificeMode === 0) {\r\n      player.autoAntSacrificeMode = 2\r\n      el.textContent = i18next.t('ants.modeRealTime')\r\n    } else {\r\n      player.autoAntSacrificeMode = 1\r\n      el.textContent = i18next.t('ants.modeInGameTime')\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleMaxBuyCube = () => {\r\n  const el = DOMCacheGetOrSet('toggleCubeBuy')\r\n  if (player.cubeUpgradesBuyMaxToggle) {\r\n    player.cubeUpgradesBuyMaxToggle = false\r\n    el.textContent = i18next.t('toggles.upgradeOneLevelWow')\r\n  } else {\r\n    player.cubeUpgradesBuyMaxToggle = true\r\n    el.textContent = i18next.t('toggles.upgradeMaxIfPossible')\r\n  }\r\n}\r\n\r\nexport const autoCubeUpgradesToggle = (toggle = true) => {\r\n  if (toggle) {\r\n    player.autoCubeUpgradesToggle = !player.autoCubeUpgradesToggle\r\n  }\r\n  const el = DOMCacheGetOrSet('toggleAutoCubeUpgrades')\r\n  if (player.autoCubeUpgradesToggle) {\r\n    el.textContent = i18next.t('toggles.autoUpgradeOn')\r\n    el.style.border = '2px solid green'\r\n  } else {\r\n    el.textContent = i18next.t('toggles.autoUpgradeOff')\r\n    el.style.border = '2px solid red'\r\n  }\r\n}\r\n\r\nexport const autoPlatonicUpgradesToggle = (toggle = true) => {\r\n  if (toggle) {\r\n    player.autoPlatonicUpgradesToggle = !player.autoPlatonicUpgradesToggle\r\n  }\r\n  const el = DOMCacheGetOrSet('toggleAutoPlatonicUpgrades')\r\n  if (player.autoPlatonicUpgradesToggle) {\r\n    el.textContent = i18next.t('toggles.autoUpgradeOn')\r\n    el.style.border = '2px solid green'\r\n  } else {\r\n    el.textContent = i18next.t('toggles.autoUpgradeOff')\r\n    el.style.border = '2px solid red'\r\n  }\r\n}\r\n\r\nexport const toggleCubeSubTab = (i: number) => {\r\n  const numSubTabs = subTabsInMainTab('cube')\r\n\r\n  for (let j = 1; j <= numSubTabs; j++) {\r\n    const cubeTab = DOMCacheGetOrSet(`cubeTab${j}`)\r\n    if (cubeTab.style.display === 'flex' && j !== i) {\r\n      cubeTab.style.display = 'none'\r\n    }\r\n    if (cubeTab.style.display === 'none' && j === i) {\r\n      cubeTab.style.display = 'flex'\r\n      player.subtabNumber = j - 1\r\n    }\r\n    DOMCacheGetOrSet(`switchCubeSubTab${j}`).style.backgroundColor = i === j ? 'crimson' : ''\r\n  }\r\n\r\n  visualUpdateCubes()\r\n}\r\n\r\nexport const updateAutoChallenge = (i: number) => {\r\n  switch (i) {\r\n    case 1: {\r\n      const t = parseFloat((DOMCacheGetOrSet('startAutoChallengeTimerInput') as HTMLInputElement).value) || 0\r\n      player.autoChallengeTimer.start = Math.max(t, 0)\r\n      DOMCacheGetOrSet('startTimerValue').innerHTML = i18next.t('challenges.timeStartSweep', {\r\n        time: format(player.autoChallengeTimer.start, 2, true)\r\n      })\r\n      return\r\n    }\r\n    case 2: {\r\n      const u = parseFloat((DOMCacheGetOrSet('exitAutoChallengeTimerInput') as HTMLInputElement).value) || 0\r\n      player.autoChallengeTimer.exit = Math.max(u, 0)\r\n\r\n      DOMCacheGetOrSet('exitTimerValue').innerHTML = i18next.t('challenges.timeExitChallenge', {\r\n        time: format(player.autoChallengeTimer.exit, 2, true)\r\n      })\r\n\r\n      return\r\n    }\r\n    case 3: {\r\n      const v = parseFloat((DOMCacheGetOrSet('enterAutoChallengeTimerInput') as HTMLInputElement).value) || 0\r\n      player.autoChallengeTimer.enter = Math.max(v, 0)\r\n\r\n      DOMCacheGetOrSet('enterTimerValue').innerHTML = i18next.t('challenges.timeEnterChallenge', {\r\n        time: format(player.autoChallengeTimer.enter, 2, true)\r\n      })\r\n\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleAutoChallengesIgnore = (i: number) => {\r\n  if (i <= 15) {\r\n    player.autoChallengeToggles[i] = !player.autoChallengeToggles[i]\r\n\r\n    const el = DOMCacheGetOrSet('toggleAutoChallengeIgnore')\r\n    el.style.border = player.autoChallengeToggles[i] ? '2px solid green' : '2px solid red'\r\n\r\n    if (i >= 11 && i <= 15) {\r\n      if (player.autoChallengeToggles[i]) {\r\n        el.textContent = i18next.t('challenges.autoAscRunChalOn', { x: i })\r\n      } else {\r\n        el.textContent = i18next.t('challenges.autoAscRunChalOff', { x: i })\r\n      }\r\n    } else {\r\n      if (player.autoChallengeToggles[i]) {\r\n        el.textContent = i18next.t('challenges.autoRunChalOn', { x: i })\r\n      } else {\r\n        el.textContent = i18next.t('challenges.autoRunChalOff', { x: i })\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleAutoChallengeRun = () => {\r\n  const el = DOMCacheGetOrSet('toggleAutoChallengeStart')\r\n  if (player.autoChallengeRunning) {\r\n    el.style.border = '2px solid red'\r\n    el.textContent = i18next.t('challenges.autoChallengeSweepOff')\r\n    G.autoChallengeTimerIncrement = 0\r\n    toggleAutoChallengeModeText('OFF')\r\n  } else {\r\n    el.style.border = '2px solid gold'\r\n    el.textContent = i18next.t('challenges.autoChallengeSweepOn')\r\n    toggleAutoChallengeModeText('START')\r\n    G.autoChallengeTimerIncrement = 0\r\n  }\r\n\r\n  player.autoChallengeRunning = !player.autoChallengeRunning\r\n}\r\n\r\nexport const toggleAutoChallengeModeText = (i: string) => {\r\n  const a = DOMCacheGetOrSet('autoChallengeType')\r\n\r\n  a.textContent = i18next.t(`challenges.mode${i[0] + i.slice(1).toLowerCase()}`)\r\n}\r\n\r\nexport const toggleAutoAscend = (mode = 0) => {\r\n  if (mode === 0) {\r\n    const a = DOMCacheGetOrSet('ascensionAutoEnable')\r\n    if (player.autoAscend) {\r\n      a.style.border = '2px solid red'\r\n      a.textContent = i18next.t('corruptions.autoAscend.off')\r\n    } else {\r\n      a.style.border = '2px solid green'\r\n      a.textContent = i18next.t('corruptions.autoAscend.on')\r\n    }\r\n\r\n    player.autoAscend = !player.autoAscend\r\n  } else if (mode === 1 && player.highestSingularityCount >= 25) {\r\n    const a = DOMCacheGetOrSet('ascensionAutoToggle')\r\n    if (player.autoAscendMode === 'c10Completions') {\r\n      player.autoAscendMode = 'realAscensionTime'\r\n      a.textContent = i18next.t('corruptions.autoAscend.modeRealTime')\r\n    } else {\r\n      player.autoAscendMode = 'c10Completions'\r\n      a.textContent = i18next.t('corruptions.autoAscend.modeCompletions')\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleautoopensCubes = (i: number) => {\r\n  if (player.highestSingularityCount >= 35) {\r\n    if (i === 1) {\r\n      const oc = DOMCacheGetOrSet('openCubes')\r\n      const oci = DOMCacheGetOrSet('cubeOpensInput')\r\n      if (player.autoOpenCubes) {\r\n        oc.textContent = i18next.t('wowCubes.autoOff')\r\n        oc.style.border = '1px solid red'\r\n        oci.style.border = '1px solid red'\r\n      } else {\r\n        oc.textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openCubes, 0) })\r\n        oc.style.border = '1px solid green'\r\n        oci.style.border = '1px solid green'\r\n      }\r\n\r\n      player.autoOpenCubes = !player.autoOpenCubes\r\n    } else if (i === 2) {\r\n      const oc = DOMCacheGetOrSet('openTesseracts')\r\n      const oci = DOMCacheGetOrSet('tesseractsOpensInput')\r\n      if (player.autoOpenTesseracts) {\r\n        oc.textContent = i18next.t('wowCubes.autoOff')\r\n        oc.style.border = '1px solid red'\r\n        oci.style.border = '1px solid red'\r\n      } else {\r\n        oc.textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openTesseracts, 0) })\r\n        oc.style.border = '1px solid green'\r\n        oci.style.border = '1px solid green'\r\n      }\r\n\r\n      player.autoOpenTesseracts = !player.autoOpenTesseracts\r\n    } else if (i === 3) {\r\n      const oc = DOMCacheGetOrSet('openHypercubes')\r\n      const oci = DOMCacheGetOrSet('hypercubesOpensInput')\r\n      if (player.autoOpenHypercubes) {\r\n        oc.textContent = i18next.t('wowCubes.autoOff')\r\n        oc.style.border = '1px solid red'\r\n        oci.style.border = '1px solid red'\r\n      } else {\r\n        oc.textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openHypercubes, 0) })\r\n        oc.style.border = '1px solid green'\r\n        oci.style.border = '1px solid green'\r\n      }\r\n\r\n      player.autoOpenHypercubes = !player.autoOpenHypercubes\r\n    } else if (i === 4) {\r\n      const oc = DOMCacheGetOrSet('openPlatonicCube')\r\n      const oci = DOMCacheGetOrSet('platonicCubeOpensInput')\r\n      if (player.autoOpenPlatonicsCubes) {\r\n        oc.textContent = i18next.t('wowCubes.autoOff')\r\n        oc.style.border = '1px solid red'\r\n        oci.style.border = '1px solid red'\r\n      } else {\r\n        oc.textContent = i18next.t('wowCubes.autoOn', { percent: format(player.openPlatonicsCubes, 0) })\r\n        oc.style.border = '1px solid green'\r\n        oci.style.border = '1px solid green'\r\n      }\r\n\r\n      player.autoOpenPlatonicsCubes = !player.autoOpenPlatonicsCubes\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateRuneBlessingBuyAmount = (i: number) => {\r\n  switch (i) {\r\n    case 1: {\r\n      const t = Math.floor(parseFloat((DOMCacheGetOrSet('buyRuneBlessingInput') as HTMLInputElement).value)) || 1\r\n      player.runeBlessingBuyAmount = Math.max(t, 1)\r\n      DOMCacheGetOrSet('buyRuneBlessingToggle').innerHTML = i18next.t('runes.blessings.buyUpTo', {\r\n        amount: format(player.runeBlessingBuyAmount)\r\n      })\r\n      return\r\n    }\r\n    case 2: {\r\n      const u = Math.floor(parseFloat((DOMCacheGetOrSet('buyRuneSpiritInput') as HTMLInputElement).value)) || 1\r\n      player.runeSpiritBuyAmount = Math.max(u, 1)\r\n      DOMCacheGetOrSet('buyRuneSpiritToggleValue').innerHTML = i18next.t('runes.spirits.buyUpTo', {\r\n        amount: format(player.runeSpiritBuyAmount)\r\n      })\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleAutoTesseracts = (i: number) => {\r\n  const el = DOMCacheGetOrSet(`tesseractAutoToggle${i}`)\r\n  if (player.autoTesseracts[i]) {\r\n    el.textContent = i18next.t('general.autoOffBracket')\r\n    el.style.border = '2px solid red'\r\n  } else {\r\n    el.textContent = i18next.t('general.autoOnBracket')\r\n    el.style.border = '2px solid green'\r\n  }\r\n\r\n  player.autoTesseracts[i] = !player.autoTesseracts[i]\r\n}\r\n\r\nexport const toggleCorruptionLevel = (index: number, value: number) => {\r\n  const current = player.prototypeCorruptions[index]\r\n  const maxCorruption = maxCorruptionLevel()\r\n  if (value > 0 && current < maxCorruption && 0 < index && index <= 9) {\r\n    player.prototypeCorruptions[index] += Math.min(maxCorruption - current, value)\r\n  }\r\n  if (value < 0 && current > 0 && 0 < index && index <= 9) {\r\n    player.prototypeCorruptions[index] -= Math.min(current, -value)\r\n  }\r\n  player.prototypeCorruptions[index] = Math.min(maxCorruption, Math.max(0, player.prototypeCorruptions[index]))\r\n  if (value === 999 && player.currentChallenge.ascension !== 15) {\r\n    for (let i = 0; i <= 9; i++) {\r\n      player.usedCorruptions[i] = 0\r\n      player.prototypeCorruptions[i] = 0\r\n      if (i > 1) {\r\n        corruptionDisplay(i)\r\n      }\r\n    }\r\n\r\n    corruptionDisplay(G.corruptionTrigger)\r\n    DOMCacheGetOrSet('corruptionCleanseConfirm').style.visibility = 'hidden'\r\n\r\n    if (player.currentChallenge.ascension === 15) {\r\n      void resetCheck('ascensionChallenge', false, true)\r\n    }\r\n  }\r\n  corruptionDisplay(index)\r\n  corruptionLoadoutTableUpdate()\r\n}\r\n\r\nexport const toggleCorruptionLoadoutsStats = (stats: boolean) => {\r\n  player.corruptionShowStats = stats\r\n  showCorruptionStatsLoadouts()\r\n}\r\n\r\nexport const toggleAscStatPerSecond = (id: number) => {\r\n  const el = DOMCacheGetOrSet(`unit${id}`) as HTMLElement | null\r\n  if (el === null) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(id, 'platonic needs to fix')\r\n    return\r\n  }\r\n\r\n  el.textContent = player.ascStatToggles[id] ? '/s' : ''\r\n  if (id === 6) {\r\n    el.textContent = ''\r\n  }\r\n  player.ascStatToggles[id] = !player.ascStatToggles[id]\r\n}\r\n\r\nexport const toggleHepteractAutoPercentage = async(): Promise<void> => {\r\n  const amount = await Prompt(i18next.t('wowCubes.hepteractForge.autoCraftPercentagePrompt'))\r\n\r\n  if (amount === null) {\r\n    if (player.toggles[35]) {\r\n      return Alert(i18next.t('toggles.percentKeptAt', { x: player.hepteractAutoCraftPercentage }))\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n\r\n  const isPercentage = amount.endsWith('%')\r\n  const rawPercentage = isPercentage ? Number(amount.slice(0, -1)) : Number(amount)\r\n\r\n  if (Number.isNaN(rawPercentage) || !Number.isFinite(rawPercentage) || !Number.isInteger(rawPercentage)) {\r\n    return Alert(i18next.t('general.validation.finiteInt'))\r\n  } else if (rawPercentage < 0 || rawPercentage > 100) {\r\n    return Alert(i18next.t('toggles.percentBetweenInclusive', { x: 0, y: 100 }))\r\n  } else if (rawPercentage === player.hepteractAutoCraftPercentage && player.toggles[35]) {\r\n    return Alert(i18next.t('toggles.percentKeptAt', { x: player.hepteractAutoCraftPercentage }))\r\n  }\r\n\r\n  player.hepteractAutoCraftPercentage = rawPercentage\r\n  DOMCacheGetOrSet('autoHepteractPercentage').textContent = i18next.t('wowCubes.hepteractForge.autoSetting', {\r\n    x: `${player.hepteractAutoCraftPercentage}`\r\n  })\r\n  if (player.toggles[35]) {\r\n    return Alert(i18next.t('toggles.onAscensionHepteractsCraft', {\r\n      x: player.hepteractAutoCraftPercentage\r\n    }))\r\n  }\r\n}\r\n\r\nexport const confirmReply = (confirm = true) => {\r\n  if (DOMCacheGetOrSet('alertWrapper').style.display === 'block') {\r\n    (DOMCacheGetOrSet('ok_alert') as HTMLButtonElement).click()\r\n  }\r\n  if (DOMCacheGetOrSet('confirmWrapper').style.display === 'block' || DOMCacheGetOrSet('promptWrapper').style.display === 'block') {\r\n    if (confirm) {\r\n      (DOMCacheGetOrSet('ok_confirm') as HTMLButtonElement).click()\r\n    } else {\r\n      (DOMCacheGetOrSet('cancel_confirm') as HTMLButtonElement).click()\r\n    }\r\n  }\r\n}\r\n", "import Decimal from 'break_infinity.js'\r\nimport { player, format, resetCheck } from './Synergism'\r\nimport { toggleAutoChallengeModeText, toggleChallenges } from './Toggles'\r\nimport { Globals as G } from './Variables'\r\nimport { calculateRuneLevels } from './Calculate'\r\nimport { hepteractEffective } from './Hepteracts'\r\nimport { productContents } from './Utility'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { autoResearchEnabled } from './Research'\r\nimport i18next from 'i18next'\r\n\r\nexport const getMaxChallenges = (i: number) => {\r\n  let maxChallenge = 0\r\n  //Transcension Challenges\r\n  if (i <= 5) {\r\n    if (player.singularityChallenges.oneChallengeCap.enabled) {\r\n      return 1\r\n    }\r\n    //Start with base 25 max completions\r\n    maxChallenge = 25\r\n    //Check Research 5x5 ('Infinite' T. Challenges)\r\n    if (player.researches[105] > 0) {\r\n      return 9001\r\n    }\r\n    //Max T. Challenge depends on researches 3x16 to 3x20\r\n    maxChallenge += 5 * player.researches[65 + i]\r\n    return maxChallenge\r\n  }\r\n  //Reincarnation Challenges\r\n  if (i <= 10 && i > 5) {\r\n    if (player.singularityChallenges.oneChallengeCap.enabled) {\r\n      return 1\r\n    }\r\n    //Start with base of 40 max completions\r\n    maxChallenge = 40\r\n    //Cube Upgrade 2x9: +4/level\r\n    maxChallenge += 4 * player.cubeUpgrades[29]\r\n    //Shop Upgrade \"Challenge Extension\": +2/level\r\n    maxChallenge += 2 * player.shopUpgrades.challengeExtension\r\n    //Platonic Upgrade 5 (ALPHA): +10\r\n    if (player.platonicUpgrades[5] > 0) {\r\n      maxChallenge += 10\r\n    }\r\n    //Platonic Upgrade 10 (BETA): +10\r\n    if (player.platonicUpgrades[10] > 0) {\r\n      maxChallenge += 10\r\n    }\r\n    //Platonic Upgrade 15 (OMEGA): +30\r\n    if (player.platonicUpgrades[15] > 0) {\r\n      maxChallenge += 30\r\n    }\r\n\r\n    maxChallenge += 2 * +player.singularityUpgrades.singChallengeExtension.getEffect().bonus\r\n    maxChallenge += 2 * +player.singularityUpgrades.singChallengeExtension2.getEffect().bonus\r\n    maxChallenge += 2 * +player.singularityUpgrades.singChallengeExtension3.getEffect().bonus\r\n\r\n    maxChallenge += +player.singularityChallenges.oneChallengeCap.rewards.capIncrease\r\n    return maxChallenge\r\n  }\r\n  //Ascension Challenge\r\n  if (i <= 15 && i > 10) {\r\n    //Challenge 15 has no formal cap, so return 9001.\r\n    if (i === 15) {\r\n      return 0\r\n    }\r\n    if (player.singularityChallenges.oneChallengeCap.enabled) {\r\n      return 1\r\n    }\r\n    //Start with base of 30 max completions\r\n    maxChallenge = 30\r\n    //Platonic Upgrade 5 (ALPHA): +5\r\n    if (player.platonicUpgrades[5] > 0) {\r\n      maxChallenge += 5\r\n    }\r\n    //Platonic Upgrade 10 (BETA): +5\r\n    if (player.platonicUpgrades[10] > 0) {\r\n      maxChallenge += 5\r\n    }\r\n    //Platonic Upgrade 15 (OMEGA): +20\r\n    if (player.platonicUpgrades[15] > 0) {\r\n      maxChallenge += 20\r\n    }\r\n\r\n    maxChallenge += +player.singularityUpgrades.singChallengeExtension.getEffect().bonus\r\n    maxChallenge += +player.singularityUpgrades.singChallengeExtension2.getEffect().bonus\r\n    maxChallenge += +player.singularityUpgrades.singChallengeExtension3.getEffect().bonus\r\n    return maxChallenge\r\n  }\r\n\r\n  return maxChallenge\r\n}\r\n\r\nexport const challengeDisplay = (i: number, changefocus = true) => {\r\n  let quarksMultiplier = 1\r\n\r\n  if (changefocus) {\r\n    G.challengefocus = i\r\n    DOMCacheGetOrSet('oneChallengeDetails').style.display = 'flex'\r\n    DOMCacheGetOrSet('startChallenge').style.display = 'block'\r\n    DOMCacheGetOrSet('retryChallenge').style.display = 'block'\r\n    G.triggerChallenge = i\r\n  }\r\n\r\n  const maxChallenges = getMaxChallenges(i)\r\n  if (i <= 5 && changefocus) {\r\n    if (player.challengecompletions[i] >= 100) {\r\n      DOMCacheGetOrSet('completionSoftcap').innerHTML = i18next.t('challenges.perCompletionBonus', {\r\n        x: 100,\r\n        y: format(CalcECC('transcend', player.challengecompletions[i]), 2, true)\r\n      })\r\n    } else {\r\n      DOMCacheGetOrSet('completionSoftcap').textContent = i18next.t('challenges.perCompletionBonusEmpty')\r\n    }\r\n  }\r\n\r\n\r\n  if (i > 5 && i <= 10) {\r\n    quarksMultiplier = 10\r\n    if (player.challengecompletions[i] >= 25 && changefocus) {\r\n      DOMCacheGetOrSet('completionSoftcap').innerHTML = i18next.t('challenges.perCompletionBonus', {\r\n        x: 25,\r\n        y: format(CalcECC('reincarnation', player.challengecompletions[i]), 2, true)\r\n      })\r\n    } else {\r\n      DOMCacheGetOrSet('completionSoftcap').textContent = i18next.t('challenges.perCompletionBonusEmpty')\r\n    }\r\n  }\r\n  if (i > 10) {\r\n    if (player.challengecompletions[i] >= 10) {\r\n      DOMCacheGetOrSet('completionSoftcap').innerHTML = i18next.t('challenges.perCompletionBonus', {\r\n        x: 10,\r\n        y: format(CalcECC('ascension', player.challengecompletions[i]), 2, true)\r\n      })\r\n    } else {\r\n      DOMCacheGetOrSet('completionSoftcap').textContent = i18next.t('challenges.perCompletionBonusEmpty')\r\n    }\r\n  }\r\n  let descriptor = ''\r\n  const a = DOMCacheGetOrSet('challengeName')\r\n  const b = DOMCacheGetOrSet('challengeFlavor')\r\n  const c = DOMCacheGetOrSet('challengeRestrictions')\r\n  const d = DOMCacheGetOrSet('challengeGoal')\r\n  const e = DOMCacheGetOrSet('challengePer1').childNodes[0]\r\n  const f = DOMCacheGetOrSet('challengePer2').childNodes[0]\r\n  const g = DOMCacheGetOrSet('challengePer3').childNodes[0]\r\n  const h = DOMCacheGetOrSet('challengeFirst1')\r\n  const j = DOMCacheGetOrSet('challengeQuarkBonus')\r\n  const k = DOMCacheGetOrSet('startChallenge')\r\n  const l = DOMCacheGetOrSet('challengeCurrent1')\r\n  const m = DOMCacheGetOrSet('challengeCurrent2')\r\n  const n = DOMCacheGetOrSet('challengeCurrent3')\r\n\r\n  if (i === G.challengefocus) {\r\n    const completions = `${player.challengecompletions[i]}/${format(maxChallenges)}`\r\n    const special = (i >= 6 && i <= 10) || i === 15\r\n    const goal = format(challengeRequirement(i, player.challengecompletions[i], special ? i : 0))\r\n\r\n    let current1 = ''\r\n    let current2 = ''\r\n    let current3 = ''\r\n\r\n    switch (i) {\r\n      case 1: {\r\n        current1 = current2 = format(10 * CalcECC('transcend', player.challengecompletions[1]))\r\n        current3 = format(0.04 * CalcECC('transcend', player.challengecompletions[1]), 2, true)\r\n        break\r\n      }\r\n      case 2: {\r\n        current1 = current2 = format(5 * CalcECC('transcend', player.challengecompletions[2]))\r\n        break\r\n      }\r\n      case 3: {\r\n        current1 = format(0.04 * player.challengecompletions[3], 2, true)\r\n        current2 = format(0.5 * CalcECC('transcend', player.challengecompletions[3]), 2, true)\r\n        current3 = format(0.01 * CalcECC('transcend', player.challengecompletions[3]), 2, true)\r\n        break\r\n      }\r\n      case 4: {\r\n        current1 = format(5 * CalcECC('transcend', player.challengecompletions[4]))\r\n        current2 = format(2 * CalcECC('transcend', player.challengecompletions[4]))\r\n        current3 = format(0.5 * CalcECC('transcend', player.challengecompletions[4]), 2, true)\r\n        break\r\n      }\r\n      case 5: {\r\n        current1 = format(0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100, 2, true)\r\n        current2 = format(Math.pow(10, CalcECC('transcend', player.challengecompletions[5])))\r\n        break\r\n      }\r\n      case 6: {\r\n        current1 = format(Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6])), 3, true)\r\n        current2 = format(10 * CalcECC('reincarnation', player.challengecompletions[6]))\r\n        current3 = format(2 * CalcECC('reincarnation', player.challengecompletions[6]))\r\n        break\r\n      }\r\n      case 7: {\r\n        current1 = format(1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7]), 2, true)\r\n        current2 = current3 = format(10 * CalcECC('reincarnation', player.challengecompletions[7]))\r\n        break\r\n      }\r\n      case 8: {\r\n        current1 = format(0.25 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true)\r\n        current2 = format(20 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true)\r\n        current3 = format(4 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true)\r\n        break\r\n      }\r\n      case 9: {\r\n        current1 = format(CalcECC('reincarnation', player.challengecompletions[9]))\r\n        current2 = format(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])), 2, true)\r\n        current3 = format(20 * CalcECC('reincarnation', player.challengecompletions[9]), 2, true)\r\n        break\r\n      }\r\n      case 10: {\r\n        current1 = format(100 * CalcECC('reincarnation', player.challengecompletions[10]))\r\n        current2 = format(2 * CalcECC('reincarnation', player.challengecompletions[10]))\r\n        current3 = format(10 * CalcECC('reincarnation', player.challengecompletions[10]), 2, true)\r\n        break\r\n      }\r\n      case 11: {\r\n        current1 = format(12 * CalcECC('ascension', player.challengecompletions[11]))\r\n        current2 = format(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])))\r\n        current3 = format(80 * CalcECC('ascension', player.challengecompletions[11]))\r\n        break\r\n      }\r\n      case 12: {\r\n        current1 = format(50 * CalcECC('ascension', player.challengecompletions[12]))\r\n        current2 = format(12 * CalcECC('ascension', player.challengecompletions[12]))\r\n        current3 = format(CalcECC('ascension', player.challengecompletions[12]))\r\n        break\r\n      }\r\n      case 13: {\r\n        current1 = format(100 - 100 * Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13])), 3, true)\r\n        current2 = format(6 * CalcECC('ascension', player.challengecompletions[13]))\r\n        current3 = format(3 * CalcECC('ascension', player.challengecompletions[13]))\r\n        break\r\n      }\r\n      case 14: {\r\n        current1 = format(50 * CalcECC('ascension', player.challengecompletions[14]))\r\n        current2 = format(1 * player.challengecompletions[14])\r\n        current3 = format(200 * CalcECC('ascension', player.challengecompletions[14]))\r\n        break\r\n      }\r\n    }\r\n\r\n    a.textContent = i18next.t(`challenges.${i}.name`, {\r\n      value: completions,\r\n      completions: player.challengecompletions[i],\r\n      max: maxChallenges\r\n    })\r\n    b.textContent = i18next.t(`challenges.${i}.flavor`)\r\n    c.textContent = i18next.t(`challenges.${i}.restrictions`)\r\n    d.textContent = i18next.t(`challenges.${i}.goal`, { value: goal })\r\n    e.textContent = i18next.t(`challenges.${i}.per.1`)\r\n    f.textContent = i18next.t(`challenges.${i}.per.2`)\r\n    g.textContent = i18next.t(`challenges.${i}.per.3`)\r\n    h.textContent = i18next.t(`challenges.${i}.first`)\r\n    k.textContent = i18next.t(`challenges.${i}.start`)\r\n    l.textContent = i18next.t(`challenges.${i}.current.1`, { value: current1 })\r\n    m.textContent = i18next.t(`challenges.${i}.current.2`, { value: current2 })\r\n    n.textContent = i18next.t(`challenges.${i}.current.3`, { value: current3 })\r\n  }\r\n\r\n  if (i === 15 && G.challengefocus === 15 && maxChallenges === 0) {\r\n    d.textContent = i18next.t('challenges.15.noGoal')\r\n  }\r\n\r\n  const scoreArray1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300]\r\n  const scoreArray2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450]\r\n  const scoreArray3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750]\r\n  const scoreArray4 = [0, 10000, 10000, 10000, 10000, 10000, 2000, 3000, 4000, 5000, 7500]\r\n  let scoreDisplay = 0\r\n  if (i <= 5) {\r\n    if (player.highestchallengecompletions[i] >= 9000) {\r\n      scoreDisplay = scoreArray4[i]\r\n    } else if (player.highestchallengecompletions[i] >= 750) {\r\n      scoreDisplay = scoreArray3[i]\r\n    } else if (player.highestchallengecompletions[i] >= 75) {\r\n      scoreDisplay = scoreArray2[i]\r\n    } else {\r\n      scoreDisplay = scoreArray1[i]\r\n    }\r\n  }\r\n  if (i > 5 && i <= 10) {\r\n    if (player.highestchallengecompletions[i] >= 60) {\r\n      scoreDisplay = scoreArray3[i]\r\n    } else if (player.highestchallengecompletions[i] >= 25) {\r\n      scoreDisplay = scoreArray2[i]\r\n    } else {\r\n      scoreDisplay = scoreArray1[i]\r\n    }\r\n  }\r\n  if (changefocus) {\r\n    j.textContent = ''\r\n  }\r\n  if (player.ascensionCount === 0) {\r\n    descriptor = 'Quarks'\r\n    j.style.color = 'cyan'\r\n  }\r\n  if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount < 1) {\r\n    j.textContent = i18next.t(descriptor ? 'challenges.firstTimeBonusQuarks' : 'challenges.firstTimeBonus', {\r\n      x: Math.floor(quarksMultiplier * player.highestchallengecompletions[i] / 10 + 1 + player.cubeUpgrades[1] + player.cubeUpgrades[11] + player.cubeUpgrades[21] + player.cubeUpgrades[31] + player.cubeUpgrades[41])\r\n    })\r\n  }\r\n  if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount >= 1) {\r\n    j.textContent = i18next.t('challenges.ascensionBankAdd', {\r\n      x: i > 5 ? 2 : 1,\r\n      y: scoreDisplay\r\n    })\r\n  }\r\n  if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < 10 && i > 10) {\r\n    j.textContent = i18next.t('challenges.hypercubeOneTimeBonus')\r\n  }\r\n\r\n  if (changefocus) {\r\n    const el = DOMCacheGetOrSet('toggleAutoChallengeIgnore')\r\n    el.style.display = i <= (autoAscensionChallengeSweepUnlock() ? 15 : 10) && player.researches[150] > 0 ? 'block' : 'none'\r\n    el.style.border = player.autoChallengeToggles[i] ? '2px solid green' : '2px solid red'\r\n\r\n    if (i >= 11 && i <= 15) {\r\n      if (player.autoChallengeToggles[i]) {\r\n        el.textContent = i18next.t('challenges.autoAscRunChalOn', { x: i })\r\n      } else {\r\n        el.textContent = i18next.t('challenges.autoAscRunChalOff', { x: i })\r\n      }\r\n    } else {\r\n      if (player.autoChallengeToggles[i]) {\r\n        el.textContent = i18next.t('challenges.autoRunChalOn', { x: i })\r\n      } else {\r\n        el.textContent = i18next.t('challenges.autoRunChalOff', { x: i })\r\n      }\r\n    }\r\n  }\r\n\r\n  const ella = DOMCacheGetOrSet('toggleAutoChallengeStart');\r\n  (player.autoChallengeRunning) ?\r\n    (ella.textContent = i18next.t('challenges.autoChallengeSweepOn'), ella.style.border = '2px solid gold') :\r\n    (ella.textContent = i18next.t('challenges.autoChallengeSweepOff'), ella.style.border = '2px solid red')\r\n}\r\n\r\nexport const getChallengeConditions = (i?: number) => {\r\n  if (player.currentChallenge.reincarnation === 9) {\r\n    G.rune1level = 1\r\n    G.rune2level = 1\r\n    G.rune3level = 1\r\n    G.rune4level = 1\r\n    G.rune5level = 1\r\n    player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0]\r\n  }\r\n  G.prestigePointGain = new Decimal('0')\r\n  if (typeof i === 'number') {\r\n    if (i >= 6) {\r\n      G.transcendPointGain = new Decimal('0')\r\n    }\r\n    if (i >= 11) {\r\n      G.reincarnationPointGain = new Decimal('0')\r\n    }\r\n  }\r\n  calculateRuneLevels()\r\n}\r\n\r\nexport const toggleRetryChallenges = () => {\r\n  DOMCacheGetOrSet('retryChallenge').textContent = player.retrychallenges\r\n    ? i18next.t('challenges.retryChallengesOff')\r\n    : i18next.t('challenges.retryChallengesOn')\r\n\r\n  player.retrychallenges = !player.retrychallenges\r\n}\r\n\r\nexport const highestChallengeRewards = (chalNum: number, highestValue: number) => {\r\n  let multiplier = 1 / 10\r\n  if (chalNum >= 6) {\r\n    multiplier = 1\r\n  }\r\n  if (player.ascensionCount === 0) {\r\n    player.worlds.add(1 + Math.floor(highestValue * multiplier) * 100 / 100)\r\n  }\r\n  // Addresses a bug where auto research does not work even if you unlock research\r\n  if (autoResearchEnabled() && player.ascensionCount === 0 && chalNum >= 6 && chalNum <= 10) {\r\n    player.roombaResearchIndex = 0\r\n    player.autoResearch = G.researchOrderByCost[player.roombaResearchIndex]\r\n  }\r\n}\r\n\r\n//Works to mitigate the difficulty of calculating challenge multipliers when considering softcapping\r\nexport const calculateChallengeRequirementMultiplier = (\r\n  type: 'transcend' | 'reincarnation' | 'ascension',\r\n  completions: number,\r\n  special = 0\r\n) => {\r\n  let requirementMultiplier = Math.max(\r\n    1,\r\n    G.hyperchallengedMultiplier[player.usedCorruptions[4]] / (1 + player.platonicUpgrades[8] / 2.5)\r\n  )\r\n  if (type === 'ascension') {\r\n    //Normalize back to 1 if looking at ascension challenges in particular.\r\n    requirementMultiplier = 1\r\n  }\r\n  switch (type) {\r\n    case 'transcend':\r\n      requirementMultiplier *= G.challenge15Rewards.transcendChallengeReduction;\r\n\r\n      (completions >= 75) ?\r\n        requirementMultiplier *= Math.pow(1 + completions, 12) / Math.pow(75, 8) :\r\n        requirementMultiplier *= Math.pow(1 + completions, 2)\r\n\r\n      if (completions >= 1000) {\r\n        requirementMultiplier *= 10 * Math.pow(completions / 1000, 3)\r\n      }\r\n      if (completions >= 9000) {\r\n        requirementMultiplier *= 1337\r\n      }\r\n      if (completions >= 9001) {\r\n        requirementMultiplier *= (completions - 8999)\r\n      }\r\n      return (requirementMultiplier)\r\n    case 'reincarnation':\r\n      if (completions >= 100 && (special === 9 || special === 10)) {\r\n        requirementMultiplier *= Math.pow(1.05, (completions - 100) * (1 + (completions - 100) / 20))\r\n      }\r\n      if (completions >= 90) {\r\n        if (special === 6) {\r\n          requirementMultiplier *= 100\r\n        } else if (special == 7) {\r\n          requirementMultiplier *= 50\r\n        } else if (special == 8) {\r\n          requirementMultiplier *= 10\r\n        } else {\r\n          requirementMultiplier *= 4\r\n        }\r\n      }\r\n      if (completions >= 80) {\r\n        if (special === 6) {\r\n          requirementMultiplier *= 50\r\n        } else if (special === 7) {\r\n          requirementMultiplier *= 20\r\n        } else if (special === 8) {\r\n          requirementMultiplier *= 4\r\n        } else {\r\n          requirementMultiplier *= 2\r\n        }\r\n      }\r\n      if (completions >= 70) {\r\n        if (special === 6) {\r\n          // Multiplier is reduced significantly for challenges requiring mythos shards\r\n          requirementMultiplier *= 20\r\n        } else if (special === 7) {\r\n          requirementMultiplier *= 10\r\n        } else if (special === 8) {\r\n          requirementMultiplier *= 2\r\n        } else {\r\n          requirementMultiplier *= 1\r\n        }\r\n      }\r\n      if (completions >= 60) {\r\n        if (special === 9 || special === 10) {\r\n          requirementMultiplier *= Math.pow(1000, (completions - 60) * (1 - 0.01 * player.shopUpgrades.challengeTome - 0.01 * player.shopUpgrades.challengeTome2) / 10)\r\n        }\r\n      }\r\n      if (completions >= 25) {\r\n        requirementMultiplier *= Math.pow(1 + completions, 5) / 625\r\n      }\r\n      if (completions < 25) {\r\n        requirementMultiplier *= Math.min(Math.pow(1 + completions, 2), Math.pow(1.3797, completions))\r\n      }\r\n      requirementMultiplier *= G.challenge15Rewards.reincarnationChallengeReduction\r\n      return requirementMultiplier\r\n    case 'ascension':\r\n      if (special !== 15) {\r\n        (completions >= 10) ?\r\n          requirementMultiplier *= (2 * (1 + completions) - 10) :\r\n          requirementMultiplier *= (1 + completions)\r\n      } else {\r\n        requirementMultiplier *= Math.pow(1000, completions)\r\n      }\r\n      return (requirementMultiplier)\r\n  }\r\n}\r\n\r\n/**\r\n * Works to mitigate the difficulty of calculating challenge reward multipliers when considering softcapping\r\n */\r\nexport const CalcECC = (type: 'transcend' | 'reincarnation' | 'ascension', completions: number) => { // ECC stands for \"Effective Challenge Completions\"\r\n  let effective = 0\r\n  switch (type) {\r\n    case 'transcend':\r\n      effective += Math.min(100, completions)\r\n      effective += 1 / 20 * (Math.min(1000, Math.max(100, completions)) - 100)\r\n      effective += 1 / 100 * (Math.max(1000, completions) - 1000)\r\n      return (effective)\r\n    case 'reincarnation':\r\n      effective += Math.min(25, completions)\r\n      effective += 1 / 2 * (Math.min(75, Math.max(25, completions)) - 25)\r\n      effective += 1 / 10 * (Math.max(75, completions) - 75)\r\n      return (effective)\r\n    case 'ascension':\r\n      effective += Math.min(10, completions)\r\n      effective += 1 / 2 * (Math.max(10, completions) - 10)\r\n      return (effective)\r\n  }\r\n}\r\n\r\nexport const challengeRequirement = (challenge: number, completion: number, special = 0) => {\r\n  const base = G.challengeBaseRequirements[challenge-1]\r\n  if (challenge <= 5) {\r\n    return Decimal.pow(10, base * calculateChallengeRequirementMultiplier('transcend', completion, special))\r\n  } else if (challenge <= 10) {\r\n    let c10Reduction = 0\r\n    if (challenge === 10) {\r\n      c10Reduction = (1e8 * (player.researches[140] + player.researches[155] + player.researches[170] + player.researches[185]) + 2e7 * (player.shopUpgrades.challengeTome + player.shopUpgrades.challengeTome2))\r\n    }\r\n    return Decimal.pow(10, (base - c10Reduction) * calculateChallengeRequirementMultiplier('reincarnation', completion, special))\r\n  } else if (challenge <= 14) {\r\n    return calculateChallengeRequirementMultiplier('ascension', completion, special)\r\n  } else if (challenge === 15) {\r\n    return Decimal.pow(10, 1 * Math.pow(10, 30) * calculateChallengeRequirementMultiplier('ascension', completion, special))\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n\r\n/**\r\n * Function that handles the autochallenge feature.\r\n * Currently includes ability to enter a challenge, leave a challenge\r\n * and start a challenge loop with specified challenges from index 1 to 10.\r\n * @param dt\r\n * @returns none\r\n */\r\nexport const runChallengeSweep = (dt: number) => {\r\n  // Do not run if any of these conditions hold\r\n  if (\r\n    player.researches[150] === 0 || // Research 6x25 is 0\r\n        !player.autoChallengeRunning // Auto challenge is toggled off\r\n  ) {\r\n    return\r\n  }\r\n\r\n  // Increment auto challenge timer\r\n  G.autoChallengeTimerIncrement += dt\r\n\r\n  // Determine what Action you can take with the current state of the savefile\r\n  let action = 'none'\r\n  if (player.currentChallenge.reincarnation !== 0 ||\r\n        player.currentChallenge.transcension !== 0) {\r\n    // If you are in a challenge, you'd only want the automation to exit the challenge\r\n    action = 'exit'\r\n  } else if (player.autoChallengeIndex === 1) {\r\n    // If the index is set to 1, then you are at the start of a loop\r\n    action = 'start'\r\n  } else {\r\n    // If neither of the above are true, automation will want to enter a challenge\r\n    action = 'enter'\r\n  }\r\n\r\n  // In order to earn C15 Exponent, stop runChallengeSweep() 5 seconds before the auto ascension\r\n  // runs during the C15, Auto Challenge Sweep, Autcension and Mode: Real Time.\r\n  if (autoAscensionChallengeSweepUnlock() && player.currentChallenge.ascension === 15 && player.shopUpgrades.challenge15Auto === 0 &&\r\n        (action === 'start' || action === 'enter') && player.autoAscend && player.challengecompletions[11] > 0 && player.cubeUpgrades[10] > 0 &&\r\n        player.autoAscendMode === 'realAscensionTime' && player.ascensionCounterRealReal >= Math.max(0.1, player.autoAscendThreshold - 5)) {\r\n    action = 'wait'\r\n    toggleAutoChallengeModeText('WAIT')\r\n    return\r\n  }\r\n\r\n  // Action: Exit challenge\r\n  if (G.autoChallengeTimerIncrement >= player.autoChallengeTimer.exit && action === 'exit') {\r\n\r\n    // Determine if you're in a reincarnation or transcension challenge\r\n    const challengeType = player.currentChallenge.reincarnation !== 0 ? 'reincarnation' : 'transcension'\r\n\r\n    // Reset our autochallenge timer\r\n    G.autoChallengeTimerIncrement = 0\r\n\r\n    // Increment our challenge index for when we enter (or start) next challenge\r\n    const nowChallenge = player.autoChallengeIndex\r\n    const nextChallenge = getNextChallenge(nowChallenge + 1)\r\n\r\n    // Reset based on challenge type\r\n    if (challengeType === 'transcension') {\r\n      void resetCheck('transcensionChallenge', undefined, true)\r\n    }\r\n    if (challengeType === 'reincarnation') {\r\n      void resetCheck('reincarnationChallenge', undefined, true)\r\n    }\r\n\r\n    // If you don't need to start all the challenges, the challenges will end.\r\n    if (nextChallenge <= 10) {\r\n      /* If the next challenge is before the current challenge,\r\n               it will be in 'START' mode, otherwise it will be in 'ENTER' mode. */\r\n      if (nextChallenge < nowChallenge) {\r\n        player.autoChallengeIndex = 1\r\n        toggleAutoChallengeModeText('START')\r\n      } else {\r\n        player.autoChallengeIndex = nextChallenge\r\n        toggleAutoChallengeModeText('ENTER')\r\n      }\r\n    }\r\n    return\r\n  }\r\n\r\n  // Action: Enter a challenge (not inside one)\r\n  if ((G.autoChallengeTimerIncrement >= player.autoChallengeTimer.start && action === 'start') || (G.autoChallengeTimerIncrement >= player.autoChallengeTimer.enter && action === 'enter')) {\r\n\r\n    // Reset our autochallenge timer\r\n    G.autoChallengeTimerIncrement = 0\r\n\r\n    // This calculates which challenge this algorithm will run first, based on\r\n    // the first challenge which has automation toggled ON\r\n    const nowChallenge = player.autoChallengeIndex\r\n    const nextChallenge = getNextChallenge(nowChallenge)\r\n\r\n    // Do not start the challenge if all the challenges have been completed.\r\n    if (nextChallenge === 11) {\r\n      return\r\n    }\r\n\r\n    // Set our index to calculated starting challenge and run the challenge\r\n    player.autoChallengeIndex = nextChallenge\r\n    toggleChallenges(player.autoChallengeIndex, true)\r\n\r\n    // Sets Mode to \"EXIT\" as displayed in the challenge tab\r\n    toggleAutoChallengeModeText('EXIT')\r\n    return\r\n  }\r\n}\r\n\r\n// Look for the next uncompleted challenge.\r\nexport const getNextChallenge = (startChallenge: number, maxSkip = false, min = 1, max = 10) => {\r\n  let nextChallenge = startChallenge\r\n  /* Calculate the smallest challenge index we want to enter.\r\n       Our minimum is the current index, but if that challenge is fully completed\r\n       or toggled off we shouldn't run it, so we increment upwards in these cases. */\r\n  for (let index = nextChallenge; index <= max; index++) {\r\n    if (!player.autoChallengeToggles[index] ||\r\n            (!maxSkip && index !== 15 && player.highestchallengecompletions[index] >= getMaxChallenges(index))) {\r\n      nextChallenge += 1\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n\r\n  /* If the above algorithm sets the index above 10, the loop is complete\r\n       and thus do not need to enter more challenges. This sets our index to 1\r\n       so in the next iteration it knows we want to start a loop. */\r\n  if (nextChallenge > max) {\r\n    // If the challenge reaches 11 or higher, return it to 1 and check again.\r\n    nextChallenge = min\r\n    for (let index = nextChallenge; index <= max; index++) {\r\n      if (!player.autoChallengeToggles[index] ||\r\n                (!maxSkip && index !== 15 && player.highestchallengecompletions[index] >= getMaxChallenges(index))) {\r\n        nextChallenge += 1\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return nextChallenge\r\n}\r\n\r\nexport const autoAscensionChallengeSweepUnlock = () => {\r\n  return player.highestSingularityCount >= 101 && player.shopUpgrades.instantChallenge2 > 0\r\n}\r\n\r\nexport const challenge15ScoreMultiplier = () => {\r\n  const arr = [\r\n    1 + 5/10000 * hepteractEffective('challenge'), // Challenge Hepteract\r\n    1 + 0.25 * player.platonicUpgrades[15] // Omega Upgrade\r\n  ]\r\n  return productContents(arr)\r\n}\r\n", "import { player, format, formatTimeShort } from './Synergism'\r\nimport type { DecimalSource } from 'break_infinity.js'\r\nimport Decimal from 'break_infinity.js'\r\nimport { antSacrificePointsToMultiplier } from './Ants'\r\nimport { Synergism } from './Events'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { Globals as G } from './Variables'\r\nimport { applyCorruptions } from './Corruptions'\r\nimport { Notification } from './UpdateHTML'\r\nimport { IconSets } from './Themes'\r\nimport i18next from 'i18next'\r\n\r\n// The categories are the different tables & storages for each type.\r\nexport type Category = 'ants' | 'reset' | 'ascend' | 'singularity'\r\n// The kinds are the different contents.\r\nexport type Kind = 'antsacrifice' | 'prestige' | 'transcend' | 'reincarnate' | 'ascend' | 'singularity'\r\n\r\n// Common to every kind\r\ninterface ResetHistoryEntryBase {\r\n    date: number\r\n    seconds: number\r\n    kind: Kind\r\n}\r\n\r\nexport type ResetHistoryEntryAntSacrifice = ResetHistoryEntryBase & {\r\n    antSacrificePointsAfter: number\r\n    antSacrificePointsBefore: number\r\n    baseELO: number\r\n    crumbs: string\r\n    crumbsPerSecond: string\r\n    effectiveELO: number\r\n    obtainium: number\r\n    offerings: number\r\n    kind: 'antsacrifice'\r\n}\r\n\r\nexport type ResetHistoryEntryPrestige = ResetHistoryEntryBase & {\r\n    offerings: number\r\n    diamonds: string\r\n    kind: 'prestige'\r\n}\r\nexport type ResetHistoryEntryTranscend = ResetHistoryEntryBase & {\r\n    offerings: number\r\n    mythos: string\r\n    kind: 'transcend'\r\n}\r\nexport type ResetHistoryEntryReincarnate = ResetHistoryEntryBase & {\r\n    offerings: number\r\n    particles: string\r\n    obtainium: number\r\n    kind: 'reincarnate'\r\n}\r\n\r\nexport type ResetHistoryEntryAscend = ResetHistoryEntryBase & {\r\n    c10Completions: number\r\n    usedCorruptions: number[]\r\n    corruptionScore: number\r\n    wowCubes: number\r\n    wowTesseracts: number\r\n    wowHypercubes: number\r\n    wowPlatonicCubes: number\r\n    wowHepteracts: number\r\n    currentChallenge?: number\r\n    kind: 'ascend'\r\n}\r\n\r\nexport interface ResetHistoryEntrySingularity extends ResetHistoryEntryBase {\r\n    singularityCount: number\r\n    quarks: number\r\n    goldenQuarks: number\r\n    wowTribs: number\r\n    tessTribs: number\r\n    hyperTribs: number\r\n    platTribs: number\r\n    octeracts: number\r\n    c15Score: number\r\n    quarkHept: number\r\n    kind: 'singularity'\r\n}\r\n\r\n// The set of common fields (in practice this is equal to the Base).\r\nexport type ResetHistoryEntryUnion =\r\n    ResetHistoryEntryAntSacrifice\r\n    | ResetHistoryEntryPrestige\r\n    | ResetHistoryEntryTranscend\r\n    | ResetHistoryEntryReincarnate\r\n    | ResetHistoryEntryAscend\r\n    | ResetHistoryEntrySingularity\r\n\r\n// The intersection of all of these types is invalid (\"never\") because of the conflicting `kind` field declarations.\r\n// Luckily, we can filter the more specific `kind` fields and still end up with a valid type declaration by using\r\n// the `kind` field from the base.\r\n// Fun fact: This exact field name also happens to be the example in the TypeScript documentation.\r\ntype RemoveKindField<T> = {\r\n    [K in keyof T as Exclude<K, 'kind'>]: T[K]\r\n}\r\n\r\n// The intersection of all possible fields we can possibly find in a history row. We'll keep the kind field from the\r\n// base, which is a simple string.\r\ntype ResetHistoryEntryIntersect =\r\n    ResetHistoryEntryBase\r\n    & Partial<RemoveKindField<ResetHistoryEntryAntSacrifice>>\r\n    & Partial<RemoveKindField<ResetHistoryEntryPrestige>>\r\n    & Partial<RemoveKindField<ResetHistoryEntryTranscend>>\r\n    & Partial<RemoveKindField<ResetHistoryEntryReincarnate>>\r\n    & Partial<RemoveKindField<ResetHistoryEntryAscend>>\r\n    & Partial<RemoveKindField<ResetHistoryEntrySingularity>>\r\n\r\n// The subset of keys that we'll directly print out using generic code.\r\nexport type ResetHistoryGainType = keyof Pick<ResetHistoryEntryIntersect,\r\n    'offerings'\r\n    | 'obtainium'\r\n    | 'particles'\r\n    | 'diamonds'\r\n    | 'mythos'\r\n    | 'wowCubes'\r\n    | 'wowTesseracts'\r\n    | 'wowHypercubes'\r\n    | 'wowPlatonicCubes'\r\n    | 'wowHepteracts'\r\n    | 'singularityCount'\r\n    | 'quarks'\r\n    | 'goldenQuarks'\r\n    | 'wowTribs'\r\n    | 'tessTribs'\r\n    | 'hyperTribs'\r\n    | 'platTribs'\r\n    | 'octeracts'\r\n    | 'c15Score'\r\n    | 'quarkHept'>\r\n\r\n// A formatter that allows formatting a string. The string should be in a form parsable by break_infinity.js.\r\nconst formatDecimalSource = (numOrStr: DecimalSource) => {\r\n  return format(typeof numOrStr === 'string' ? new Decimal(numOrStr) : numOrStr)\r\n}\r\n\r\n// A formatter that, if given a number, allows the data to be divided by the amount of seconds spent.\r\nconst conditionalFormatPerSecond = (numOrStr: DecimalSource, data: ResetHistoryEntryBase) => {\r\n  // Strings (decimals) are currently not supported.\r\n  if (typeof numOrStr === 'string') {\r\n    return formatDecimalSource(numOrStr)\r\n  }\r\n\r\n  if (typeof (numOrStr) === 'number' && player.historyShowPerSecond && data.seconds !== 0) {\r\n    if (numOrStr === 0) { // work around format(0, 3) return 0 instead of 0.000, for consistency\r\n      return '0.000/s'\r\n    }\r\n    // Use \"long\" display for smaller numbers, but once it exceeds 1000, use the \"short\" display.\r\n    // This'll keep decimals intact until 1000 instead of 10 without creating unwieldy numbers between e6-e13.\r\n    return format(numOrStr / data.seconds, 3, numOrStr < 1000) + '/s'\r\n  }\r\n  return format(numOrStr)\r\n}\r\n\r\n// Metadata and formatting tools for simple table cells (gains).\r\nconst historyGains: Record<\r\n    ResetHistoryGainType,\r\n    {\r\n        img: string\r\n        imgTitle: string\r\n        formatter?: (str: DecimalSource, data: ResetHistoryEntryUnion) => string\r\n        onlyif?: (data: ResetHistoryEntryUnion) => boolean\r\n    }\r\n> = {\r\n  offerings: {\r\n    img: 'Offering.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Offerings'\r\n  },\r\n  obtainium: {\r\n    img: 'Obtainium.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Obtainium'\r\n  },\r\n  particles: {\r\n    img: 'Particle.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Particles'\r\n  },\r\n  diamonds: {\r\n    img: 'Diamond.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Diamonds'\r\n  },\r\n  mythos: {\r\n    img: 'Mythos.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Mythos'\r\n  },\r\n  wowTesseracts: {\r\n    img: 'TinyWow4.png',\r\n    formatter: conditionalFormatPerSecond,\r\n    imgTitle: 'Wow! Tesseracts'\r\n  },\r\n  wowHypercubes: {\r\n    img: 'TinyWow5.png',\r\n    formatter: conditionalFormatPerSecond,\r\n    imgTitle: 'Wow! Hypercubes',\r\n    onlyif: () => player.challengecompletions[13] > 0\r\n  },\r\n  wowCubes: {\r\n    img: 'TinyWow3.png',\r\n    formatter: conditionalFormatPerSecond,\r\n    imgTitle: 'Wow! Cubes'\r\n  },\r\n  wowPlatonicCubes: {\r\n    img: 'TinyWow6.png',\r\n    formatter: conditionalFormatPerSecond,\r\n    imgTitle: 'Platonic Cubes',\r\n    onlyif: () => player.challengecompletions[14] > 0\r\n  },\r\n  wowHepteracts: {\r\n    img: 'TinyWow7.png',\r\n    formatter: conditionalFormatPerSecond,\r\n    imgTitle: 'Hepteracts',\r\n    onlyif: () => player.achievements[255] > 0\r\n  },\r\n  singularityCount: {\r\n    img: 'TinyS.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Singularity Count',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  quarks: {\r\n    img: 'Quark.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Quarks',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  goldenQuarks: {\r\n    img: 'GoldenQuark.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Golden Quarks',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  wowTribs: {\r\n    img: 'TinyWow3.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Cube Tributes',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  tessTribs: {\r\n    img: 'TinyWow4.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Tesseract Gifts',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  hyperTribs: {\r\n    img: 'TinyWow5.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Hypercube Bendictions',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  platTribs: {\r\n    img: 'TinyWow6.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Platonics Opened',\r\n    onlyif: () => player.highestSingularityCount > 0\r\n  },\r\n  octeracts: {\r\n    img: 'TinyWow8.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Octeracts',\r\n    onlyif: () => (player.singularityUpgrades.octeractUnlock.getEffect().bonus as number) > 0\r\n  },\r\n  c15Score: {\r\n    img: 'TinyChallenge15.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'C15 score',\r\n    onlyif: () => player.singularityCount > 0\r\n  },\r\n  quarkHept: {\r\n    img: 'TinyQuarkHept.png',\r\n    formatter: formatDecimalSource,\r\n    imgTitle: 'Quark Hept',\r\n    onlyif: () => player.singularityCount > 0\r\n  }\r\n}\r\n\r\n// Order in which to display the above\r\nconst historyGainsOrder: ResetHistoryGainType[] = [\r\n  'offerings', 'obtainium',\r\n  'particles', 'diamonds', 'mythos',\r\n  'wowCubes', 'wowTesseracts', 'wowHypercubes', 'wowPlatonicCubes', 'wowHepteracts',\r\n  'singularityCount', 'quarks', 'goldenQuarks', 'wowTribs', 'tessTribs',\r\n  'hyperTribs', 'platTribs', 'octeracts', 'c15Score', 'quarkHept'\r\n]\r\n\r\n// The various kinds and their associated images.\r\nconst historyKinds: Record<Kind, { img: string }> = {\r\n  'antsacrifice': { img: 'SacrificeNoBorder.png' },\r\n  'prestige': { img: 'TinyP.png' },\r\n  'transcend': { img: 'TinyT.png' },\r\n  'reincarnate': { img: 'TinyR.png' },\r\n  'ascend': { img: 'TinyA.png' },\r\n  'singularity': { img: 'TinyS.png' }\r\n}\r\n\r\n// List of categories and the IDs of the associated table in the DOM.\r\nconst resetHistoryTableMapping: Record<Category, string> = {\r\n  'ants': 'historyAntsTable',\r\n  'reset': 'historyResetTable',\r\n  'ascend': 'historyAscendTable',\r\n  'singularity': 'historySingularityTable'\r\n}\r\n\r\n// Images associated with the various corruptions.\r\nconst resetHistoryCorruptionImages = [\r\n  'CorruptViscocity.png',\r\n  'CorruptSpatialDilation.png',\r\n  'CorruptHyperchallenged.png',\r\n  'CorruptScientificIlliteracy.png',\r\n  'CorruptDeflation.png',\r\n  'CorruptExtinction.png',\r\n  'CorruptDrought.png',\r\n  'CorruptFinancialCollapse.png'\r\n]\r\n\r\nconst resetHistoryCorruptionTitles = [\r\n  'Viscosity [Accelerators and Multipliers]',\r\n  'Spacial Dilation [Time]',\r\n  'Hyperchallenged [Challenge Requirements]',\r\n  'Scientific Illiteracy [Obtainium]',\r\n  'Market Deflation [Diamonds]',\r\n  'Extinction [Ants]',\r\n  'Drought [Offering EXP]',\r\n  'Financial Recession [Coins]'\r\n]\r\n\r\n// A formatting aid that removes the mantissa from a formatted string. Converts \"2.5e1000\" to \"e1000\".\r\nconst extractStringExponent = (str: string) => {\r\n  let m: RegExpMatchArray | null\r\n  return (m = /e\\+?(.+)/.exec(str)) !== null ? `e${m[1]}` : str\r\n}\r\n\r\n// Add an entry to the history. This can be called via the event system.\r\nconst resetHistoryAdd = (category: Category, data: ResetHistoryEntryUnion) => {\r\n  while (player.history[category].length > (G.historyCountMax - 1)) {\r\n    player.history[category].shift()\r\n  }\r\n\r\n  player.history[category].push(data)\r\n  resetHistoryPushNewRow(category, data)\r\n}\r\n\r\nSynergism.on('historyAdd', resetHistoryAdd)\r\n\r\n// Add a row to the table, shifting out old ones as required.\r\nconst resetHistoryPushNewRow = (category: Category, data: ResetHistoryEntryUnion) => {\r\n  const row = resetHistoryRenderRow(category, data)\r\n  const table = DOMCacheGetOrSet(resetHistoryTableMapping[category])\r\n  const tbody = table.querySelector('tbody')!\r\n  tbody.insertBefore(row, tbody.childNodes[0])\r\n  while (tbody.childNodes.length > G.historyCountMax) {\r\n    tbody.removeChild(tbody.lastChild!)\r\n  }\r\n\r\n  if (category === 'ascend') {\r\n    const loadCorruptionsButtons = Array.from(row.getElementsByClassName('ascendHistoryLoadCorruptions'))\r\n    for (const btn of loadCorruptionsButtons) {\r\n      btn.addEventListener('click', (e) => clickHandlerForLoadCorruptionsButton((e.target as HTMLElement)))\r\n    }\r\n  }\r\n}\r\n\r\n// Render a table row.\r\nconst resetHistoryRenderRow = (\r\n  _category: Category,\r\n  data: ResetHistoryEntryUnion\r\n) => {\r\n  let colsUsed = 1\r\n  const row = document.createElement('tr')\r\n  let rowContentHtml = ''\r\n\r\n  const kindMeta = historyKinds[data.kind]\r\n\r\n  const localDate = new Date(data.date).toLocaleString()\r\n  rowContentHtml += `<td class=\"history-seconds\" title=\"${localDate}\"><img alt=\"${data.kind}\" src=\"Pictures/${IconSets[player.iconSet][0]}/${kindMeta.img}\">${formatTimeShort(data.seconds, 60)}</td>`\r\n\r\n  // Carefully loop through everything we need to print in the right order, and add it to the gains array if present.\r\n  const gains: string[] = []\r\n  const dataIntersection = data as ResetHistoryEntryIntersect\r\n  historyGainsOrder.forEach((listable) => {\r\n    if (Object.prototype.hasOwnProperty.call(data, listable)) {\r\n      const gainInfo = historyGains[listable]\r\n      if (gainInfo.onlyif && !gainInfo.onlyif(data)) {\r\n        return\r\n      }\r\n      const formatter = gainInfo.formatter ?? (() => { /* If no formatter is specified, don't display. */ })\r\n      const str = `<img alt=\"${gainInfo.imgTitle}\" src=\"Pictures/${IconSets[player.iconSet][0]}/${gainInfo.img}\" title=\"${gainInfo.imgTitle}\">${formatter(dataIntersection[listable]!, data)}`\r\n\r\n      gains.push(str)\r\n    }\r\n  })\r\n\r\n  // Kind-dependent rendering goes here. TypeScript will automatically cast to the appropriate structure based on\r\n  // the kind check.\r\n  const extra: string[] = []\r\n  if (data.kind === 'antsacrifice') {\r\n    const oldMulti = antSacrificePointsToMultiplier(data.antSacrificePointsBefore)\r\n    const newMulti = antSacrificePointsToMultiplier(data.antSacrificePointsAfter)\r\n    const diff = newMulti - oldMulti\r\n    extra.push(\r\n      `<span title=\"Ant Multiplier: ${format(oldMulti, 3, false)}--&gt;${format(newMulti, 3, false)}\"><img src=\"Pictures/${IconSets[player.iconSet][0]}/Multiplier.png\" alt=\"Ant Multiplier\">+${format(diff, 3, false)}</span>`,\r\n      `<span title=\"+${formatDecimalSource(data.crumbsPerSecond)} crumbs/s\"><img src=\"Pictures/${IconSets[player.iconSet][0]}/TinyCrumbs.png\" alt=\"Crumbs\">${extractStringExponent(formatDecimalSource(data.crumbs))}</span>`,\r\n      `<span title=\"${format(data.baseELO)} base\"><img src=\"Pictures/${IconSets[player.iconSet][0]}/TinyELO.png\" alt=\"ELO\">${format(data.effectiveELO)}</span>`\r\n    )\r\n  } else if (data.kind === 'ascend') {\r\n    extra.push(\r\n      `<img alt=\"C10\" src=\"Pictures/${IconSets[player.iconSet][0]}/TinyChallenge10.png\" title=\"Challenge 10 completions\">${data.c10Completions}`\r\n    )\r\n\r\n    const corruptions = resetHistoryFormatCorruptions(data)\r\n\r\n    extra.push(corruptions[0])\r\n    extra.push(corruptions[1])\r\n    extra.push(corruptions[2])\r\n  }\r\n\r\n  // This rendering is done this way so that all rows should have the same number of columns, which makes rows\r\n  // equal size and prevents bad rendering. We do 2 of these so that the history doesn't shift when\r\n  // hypercubes or platcubes get added as players unlock them.\r\n  // The 6 and 4 numbers are arbitrary but should never be less than the actual amount of columns that can be\r\n  // realistically displayed; you can increase them if more gains are added.\r\n\r\n  // Render the gains plus the gains filler\r\n  colsUsed += gains.length\r\n  rowContentHtml += gains.reduce((acc, value) => {\r\n    return `${acc}<td class=\"history-gain\">${value}</td>`\r\n  }, '')\r\n  rowContentHtml += `<td class=\"history-filler\" colspan=\"${7 - colsUsed}\"></td>`\r\n\r\n  // Render the other stuff\r\n  rowContentHtml += extra.reduce((acc, value) => {\r\n    return `${acc}<td class=\"history-extra\">${value}</td>`\r\n  }, '')\r\n  rowContentHtml += `<td class=\"history-filler\" colspan=\"${4 - extra.length}\"></td>`\r\n\r\n  row.innerHTML = rowContentHtml\r\n  return row\r\n}\r\n\r\n// Render a category into a given table.\r\nconst resetHistoryRenderFullTable = (categoryToRender: Category, targetTable: HTMLElement) => {\r\n  const tbody = targetTable.querySelector('tbody')!\r\n  tbody.innerHTML = ''\r\n\r\n  if (player.history[categoryToRender].length > 0) {\r\n    for (let i = player.history[categoryToRender].length - 1; i >= 0; --i) {\r\n      const row = resetHistoryRenderRow(categoryToRender, player.history[categoryToRender][i])\r\n      tbody.appendChild(row)\r\n    }\r\n  }\r\n\r\n  if (categoryToRender === 'ascend') {\r\n    const loadCorruptionsButtons = Array.from(document.getElementsByClassName('ascendHistoryLoadCorruptions'))\r\n    for (const btn of loadCorruptionsButtons) {\r\n      btn.addEventListener('click', (e) => clickHandlerForLoadCorruptionsButton((e.target as HTMLElement)))\r\n    }\r\n  }\r\n}\r\n\r\nfunction clickHandlerForLoadCorruptionsButton(btn: HTMLElement) {\r\n  const corruptions = btn.getAttribute('data-corr')\r\n  if (corruptions) {\r\n    applyCorruptions(corruptions)\r\n    void Notification(i18next.t('corruptions.loadoutApplied'), 5000)\r\n  }\r\n}\r\n\r\n// Render every category into their associated table.\r\nexport const resetHistoryRenderAllTables = () => {\r\n  (Object.keys(resetHistoryTableMapping) as Category[]).forEach(\r\n    key => resetHistoryRenderFullTable(key, DOMCacheGetOrSet(resetHistoryTableMapping[key]))\r\n  )\r\n}\r\n\r\n// Toggle the \"per second\" display for the ascension table.\r\nexport const resetHistoryTogglePerSecond = () => {\r\n  player.historyShowPerSecond = !player.historyShowPerSecond\r\n  resetHistoryRenderAllTables()\r\n  const button = DOMCacheGetOrSet('historyTogglePerSecondButton')\r\n  if (player.historyShowPerSecond) {\r\n    button.textContent = i18next.t('history.perSecondOn')\r\n  } else {\r\n    button.textContent = i18next.t('history.perSecondOff')\r\n  }\r\n  button.style.borderColor = player.historyShowPerSecond ? 'green' : 'red'\r\n}\r\n\r\n// Helper function to format the corruption display in the ascension table.\r\nconst resetHistoryFormatCorruptions = (data: ResetHistoryEntryAscend): [string, string, string] => {\r\n  let score = 'Score: ' + format(data.corruptionScore, 0, false)\r\n  let corruptions = ''\r\n  let loadout = ''\r\n  let corrs = 0\r\n  for (let i = 0; i < resetHistoryCorruptionImages.length; ++i) {\r\n    const corruptionIdx = i + 2\r\n    if (corruptionIdx in data.usedCorruptions && data.usedCorruptions[corruptionIdx] !== 0) {\r\n      corruptions += `<img alt=\"${corrs > 0 ? '/' : ''}\" src=\"Pictures/${IconSets[player.iconSet][0]}/${resetHistoryCorruptionImages[i]}\" title=\"${resetHistoryCorruptionTitles[i]}\">${data.usedCorruptions[corruptionIdx]}`\r\n    } else {\r\n      corruptions += `<span>${corrs > 0 ? '/0' : '0'}</span>`\r\n    }\r\n    corrs++\r\n  }\r\n  if (corruptions) {\r\n    loadout += `<button class=\"corrLoad ascendHistoryLoadCorruptions\" data-corr=\"${data.usedCorruptions.join('/')}\">Load</button>`\r\n  }\r\n  if (data.currentChallenge !== undefined) {\r\n    score += ` / C${data.currentChallenge}`\r\n  }\r\n\r\n  return [score, corruptions, loadout]\r\n}\r\n", "import { player } from './Synergism'\r\nimport { Globals as G } from './Variables'\r\nimport { sumContents } from './Utility'\r\n\r\nimport Decimal from 'break_infinity.js'\r\nimport { CalcECC } from './Challenges'\r\nimport { achievementaward } from './Achievements'\r\n\r\nexport const calculatetax = () => {\r\n  let exp = 1\r\n  let compareB = new Decimal(0)\r\n  let compareC = new Decimal(0)\r\n  G.produceFirst = (player.firstGeneratedCoin.add(player.firstOwnedCoin)).times(G.globalCoinMultiplier).times(G.coinOneMulti)\r\n    .times(player.firstProduceCoin)\r\n  G.produceSecond = (player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G.globalCoinMultiplier).times(G.coinTwoMulti)\r\n    .times(player.secondProduceCoin)\r\n  G.produceThird = (player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G.globalCoinMultiplier).times(G.coinThreeMulti)\r\n    .times(player.thirdProduceCoin)\r\n  G.produceFourth = (player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G.globalCoinMultiplier).times(G.coinFourMulti)\r\n    .times(player.fourthProduceCoin)\r\n  G.produceFifth = (player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G.globalCoinMultiplier).times(G.coinFiveMulti)\r\n    .times(player.fifthProduceCoin)\r\n  G.produceTotal = G.produceFirst.add(G.produceSecond).add(G.produceThird).add(G.produceFourth)\r\n    .add(G.produceFifth)\r\n\r\n  if (G.produceFirst.lte(.0001)) {\r\n    G.produceFirst = new Decimal(0)\r\n  }\r\n  if (G.produceSecond.lte(.0001)) {\r\n    G.produceSecond = new Decimal(0)\r\n  }\r\n  if (G.produceThird.lte(.0001)) {\r\n    G.produceThird = new Decimal(0)\r\n  }\r\n  if (G.produceFourth.lte(.0001)) {\r\n    G.produceFourth = new Decimal(0)\r\n  }\r\n  if (G.produceFifth.lte(.0001)) {\r\n    G.produceFifth = new Decimal(0)\r\n  }\r\n\r\n  G.producePerSecond = G.produceTotal.times(40)\r\n\r\n  if (player.currentChallenge.reincarnation === 6) {\r\n    exp = 3 * Math.pow((1 + player.challengecompletions[6] / 25), 2)\r\n  }\r\n  if (player.currentChallenge.reincarnation === 9) {\r\n    exp = 0.005\r\n  }\r\n  if (player.currentChallenge.ascension === 15) {\r\n    exp = 0.000005\r\n  }\r\n  //im doing this to spite xander, basically changes w5x9 to not impact tax scaling in c13 || Sean#7236\r\n  const c13effcompletions = Math.max(0, sumContents(player.challengecompletions) - player.challengecompletions[11] - player.challengecompletions[12] - player.challengecompletions[13] - player.challengecompletions[14] - player.challengecompletions[15] - 3 * player.cubeUpgrades[49] - ((player.singularityCount >= 15)?4:0) - ((player.singularityCount >= 20)?1:0))\r\n  if (player.currentChallenge.ascension === 13) {\r\n    exp *= 700 * (1 + 1 / 6 * player.challengecompletions[13])\r\n    exp *= Math.pow(1.05, c13effcompletions)\r\n  }\r\n  if (player.challengecompletions[6] > 0) {\r\n    exp /= 1.075\r\n  }\r\n  let exponent = 1\r\n  exponent *= exp\r\n  exponent *= (1 - 1 / 20 * player.researches[51] - 1 / 40 * player.researches[52] - 1 / 80 * player.researches[53] - 1 / 160 * player.researches[54] - 1 / 320 * player.researches[55])\r\n  exponent *= (1 - 0.05 / 1800 * (player.achievements[45] + player.achievements[46] + 2 * player.achievements[47]) * Math.min(player.prestigecounter, 1800))\r\n  exponent *= Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6]))\r\n  exponent *= (0.001 + .999 * (Math.pow(6, -(G.rune2level * G.effectiveLevelMult) / 1000)))\r\n  exponent *= (0.01 + .99 * (Math.pow(4, Math.min(0, (400 - G.rune4level) / 1100))))\r\n  exponent *= (1 - 0.04 * player.achievements[82] - 0.04 * player.achievements[89] - 0.04 * player.achievements[96] - 0.04 * player.achievements[103] - 0.04 * player.achievements[110] - 0.0566 * player.achievements[117] - 0.0566 * player.achievements[124] - 0.0566 * player.achievements[131])\r\n  exponent *= Math.pow(0.9925, player.achievements[118] * (player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]))\r\n  exponent *= (0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[2]! + G.bonusant3))\r\n  exponent *= 1 / Math.pow((1 + Decimal.log(player.ascendShards.add(1), 10)), 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + (G.platonicBonusMultiplier[5]-1))\r\n  exponent *= (1 - 0.10 * (player.talismanRarity[1-1] - 1))\r\n  exponent *= Math.pow(0.98, 3 / 5 * Math.log(1 + player.rareFragments) / Math.log(10) * player.researches[159])\r\n  exponent *= Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13]))\r\n  exponent *= (1 - 0.666 * player.researches[200] / 100000)\r\n  exponent *= (1 - 0.666 * player.cubeUpgrades[50] / 100000)\r\n  exponent *= G.challenge15Rewards.taxes\r\n  if (player.upgrades[121] > 0) {\r\n    exponent *= 0.5\r\n  }\r\n  // Cap the calculation overflow bug || httpsnet\r\n  if (exponent < 1e-300) {\r\n    exponent = 1e-300\r\n  }\r\n  G.maxexponent = Math.floor(275 / (Decimal.log(1.01, 10) * exponent)) - 1\r\n  const a2 = Math.min(G.maxexponent, Math.floor(Decimal.log(G.produceTotal.add(1), 10)))\r\n\r\n  if (player.currentChallenge.ascension === 13 && G.maxexponent <= 99999 && player.achievements[249] < 1) {\r\n    //i don't think it makes sense to give the achievement as soon as the challenge is opened\r\n    //as soon as the challenge is opened you don't have enough tax reducers to have max exponent above 100000\r\n    //so for the achievement description to make sense i think it should require at least 1 challenge completion || Dorijanko\r\n    if (c13effcompletions >= 1) {\r\n      achievementaward(249)\r\n    }\r\n  }\r\n\r\n  if (a2 >= 1) {\r\n    compareB = Decimal.pow(a2, 2).div(550)\r\n  }\r\n\r\n  compareC = Decimal.pow(G.maxexponent, 2).div(550)\r\n\r\n  G.taxdivisor = Decimal.pow(1.01, Decimal.mul(compareB, exponent))\r\n  G.taxdivisorcheck = Decimal.pow(1.01, Decimal.mul(compareC, exponent))\r\n}\r\n", "// August 22, 2022: Creation of Exportable Statistics.\r\n\r\nimport { totalachievementpoints } from './Achievements'\r\nimport { calculateAscensionAcceleration, calculateGoldenQuarkGain, calculateMaxRunes, calculateTimeAcceleration, calculateTotalOcteractCubeBonus, calculateTotalOcteractQuarkBonus, octeractGainPerSecond } from './Calculate'\r\nimport { getMaxChallenges } from './Challenges'\r\nimport { version } from './Config'\r\nimport { saveFilename } from './ImportExport'\r\nimport { friendlyShopName, isShopUpgradeUnlocked, shopData, shopUpgradeTypes } from './Shop'\r\nimport { calculateEffectiveSingularities } from './singularity'\r\nimport { format, player } from './Synergism'\r\nimport type { Player } from './types/Synergism'\r\nimport { Alert } from './UpdateHTML'\r\nimport { formatS, sumContents } from './Utility'\r\nimport { Globals as G } from './Variables'\r\nimport ClipboardJS from 'clipboard'\r\nimport i18next from 'i18next'\r\n\r\nexport const generateExportSummary = async():Promise<void> => {\r\n  const titleText = '===== SUMMARY STATS ====='\r\n  const time = `Time Generated: ${(new Date()).toString()}`\r\n  const ver = `Version: ${version}`\r\n\r\n  const subCategoryDivisor = '-----+-----\\n'\r\n\r\n  const firstPlayed = `First Played: ${player.firstPlayed}\\n`\r\n\r\n  let resources = '===== RESOURCES =====\\n'\r\n  resources = resources + (player.reincarnationCount > 0 || player.highestSingularityCount > 0 ? `Quarks: ${format(Number(player.worlds), 0, true)}\\n` : '')\r\n  resources = resources + (player.highestSingularityCount > 0 ? `Golden Quarks: ${format(player.goldenQuarks, 2, true)}\\n` : '')\r\n  resources = resources + subCategoryDivisor\r\n  resources = resources + `Coins: ${format(player.coins, 2, true)}\\n`\r\n  if (player.prestigeCount > 0 || player.highestSingularityCount > 0) {\r\n    resources = resources + `Diamonds: ${format(player.prestigePoints, 2, true)}\\n`\r\n    resources = resources + `Crystals: ${format(player.prestigeShards, 2, true)}\\n`\r\n    resources = resources + `Offerings: ${format(player.runeshards, 0, true)}\\n`\r\n  }\r\n  if (player.transcendCount > 0 || player.highestSingularityCount > 0) {\r\n    resources = resources + `Mythos: ${format(player.transcendPoints, 2, true)}\\n`\r\n    resources = resources + `Mythos Shards: ${format(player.transcendShards, 2, true)}\\n`\r\n  }\r\n  if (player.reincarnationCount > 0 || player.highestSingularityCount > 0) {\r\n    resources = resources + `Particles: ${format(player.reincarnationPoints, 2, true)}\\n`\r\n    resources = resources + `Atoms: ${format(player.reincarnationShards, 2, true)}\\n`\r\n    resources = resources + `Obtainium: ${format(player.researchPoints, 0, true)}\\n`\r\n  }\r\n  if (player.ascensionCount > 0 || player.highestSingularityCount > 0) {\r\n    const cubeArray = [null, player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed]\r\n    const tesseractArray = [null, player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\r\n    const hypercubeArray = [null, player.hypercubeBlessings.accelerator, player.hypercubeBlessings.multiplier, player.hypercubeBlessings.offering, player.hypercubeBlessings.runeExp, player.hypercubeBlessings.obtainium, player.hypercubeBlessings.antSpeed, player.hypercubeBlessings.antSacrifice, player.hypercubeBlessings.antELO, player.hypercubeBlessings.talismanBonus, player.hypercubeBlessings.globalSpeed]\r\n    const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed]\r\n    const cubeSum = format(sumContents(cubeArray.slice(1) as number[]), 0, true)\r\n    const tesseractSum = format(sumContents(tesseractArray.slice(1) as number[]), 0, true)\r\n    const hypercubeSum = format(sumContents(hypercubeArray.slice(1) as number[]), 0, true)\r\n    const platonicSum = format(sumContents(platonicArray), 0, true)\r\n\r\n    resources = resources + subCategoryDivisor\r\n    resources = resources + `Wow! Cubes: ${format(Number(player.wowCubes), 0, true)} -+- Total Tributes: ${cubeSum}\\n`\r\n    resources = resources + `Wow! Tesseracts: ${format(Number(player.wowTesseracts), 0, true)} -+- Total Gifts: ${tesseractSum}\\n`\r\n    resources = resources + `Wow! Hypercubes: ${format(Number(player.wowHypercubes), 0, true)} -+- Total Benedictions: ${hypercubeSum}\\n`\r\n    resources = resources + `Wow! Platonic Cubes: ${format(Number(player.wowPlatonicCubes), 0, true)} -+- Total Plats Opened: ${platonicSum}\\n`\r\n    resources = resources + `Wow! Hepteracts: ${format(player.wowAbyssals, 0, true)}\\n`\r\n    if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\r\n      resources = resources + `Wow! Octeracts: ${format(player.wowOcteracts, 0, true)}\\n`\r\n    }\r\n  }\r\n\r\n  // Octeract Subportion!\r\n  let octeract = ''\r\n  if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\r\n    octeract = '===== OCTERACTS =====\\n'\r\n    octeract = octeract + `Current Octeracts: ${format(player.wowOcteracts, 2, true)}\\n`\r\n    octeract = octeract + `Current Per Second: ${format(octeractGainPerSecond(), 2, true)}\\n`\r\n    octeract = octeract + `Total Generated Octeracts: ${format(player.totalWowOcteracts, 2, true)}\\n`\r\n    octeract = octeract + `Octeract Cube Bonus: ${format(100 * (calculateTotalOcteractCubeBonus() - 1), 2, true)}%\\n`\r\n    octeract = octeract + `Octeract Quark Bonus: ${format(100 * (calculateTotalOcteractQuarkBonus() - 1), 2, true)}%\\n`\r\n  }\r\n\r\n  // Singularity Subportion!\r\n  let singularity = ''\r\n  if (player.highestSingularityCount > 0) {\r\n    singularity = '===== SINGULARITY =====\\n'\r\n    singularity = singularity + `Current Singularity: ${player.singularityCount}\\n`\r\n    singularity = singularity + `Highest Singularity Reached: ${player.highestSingularityCount}\\n`\r\n    singularity = singularity + `Golden Quarks: ${format(player.goldenQuarks, 2, true)}\\n`\r\n    singularity = singularity + `+Golden Quarks on Singularity: ${format(calculateGoldenQuarkGain(), 2, true)}\\n`\r\n    singularity = singularity + `Time in Singularity: ${formatS(player.singularityCounter)}\\n`\r\n    singularity = singularity + `Effective Singularity [for penalties]: ${format(calculateEffectiveSingularities(), 2, true)}\\n`\r\n    singularity = singularity + `Antiquity of Ant God Upgraded: ${(player.runelevels[6] > 0) ? '\u2714': '\u2716'}\\n`\r\n  }\r\n\r\n  // Ascension Subportion!\r\n  let ascension = ''\r\n  if (player.ascensionCount > 0 || player.highestSingularityCount > 0) {\r\n    ascension = '===== ASCENSION ===== \\n'\r\n    ascension = ascension + `Ascension Count: ${format(player.ascensionCount, 0, true)}\\n`\r\n    ascension = ascension + `Ascension Timer: ${formatS(player.ascensionCounter)}\\n`\r\n    ascension = ascension + `Real Life Ascension Timer: ${formatS(player.ascensionCounterReal)}\\n`\r\n    ascension = ascension + `Truly Real Life Ascension Timer: ${formatS(player.ascensionCounterRealReal)}\\n`\r\n    ascension = ascension + `Ascension Speed Multiplier: ${format(calculateAscensionAcceleration(), 2, true)}\\n`\r\n    ascension = ascension + `Challenge 11 Completions: ${player.challengecompletions[11]}/${getMaxChallenges(11)}\\n`\r\n    ascension = ascension + `Challenge 12 Completions: ${player.challengecompletions[12]}/${getMaxChallenges(12)}\\n`\r\n    ascension = ascension + `Challenge 13 Completions: ${player.challengecompletions[13]}/${getMaxChallenges(13)}\\n`\r\n    ascension = ascension + `Challenge 14 Completions: ${player.challengecompletions[14]}/${getMaxChallenges(14)}\\n`\r\n    if (player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0) {\r\n      ascension = ascension + `Challenge 15 Exponent: ${format(player.challenge15Exponent, 2, true)}\\n`\r\n      ascension = ascension + `Research [8x25] MAXED: ${(player.researches[200] === 1e5) ? '\u2714' : '\u2716'}\\n`\r\n      ascension = ascension + `Cube [w5x10] MAXED: ${(player.cubeUpgrades[50] === 1e5) ? '\u2714' : '\u2716'}\\n`\r\n      ascension = ascension + `Platonic \u03B1: ${player.platonicUpgrades[5] > 0 ? '\u2714' : '\u2716'}\\n`\r\n      ascension = ascension + `Platonic \u03B2: ${player.platonicUpgrades[10] > 0 ? '\u2714' : '\u2716'}\\n`\r\n      ascension = ascension + `Platonic \u03A9: ${player.platonicUpgrades[15] > 0 ? '\u2714' : '\u2716'}\\n`\r\n    }\r\n    if (player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0) {\r\n      ascension = ascension + '----- HEPTERACTS -----\\n'\r\n      ascension = ascension + `Chronos Hepteract: ${format(player.hepteractCrafts.chronos.BAL, 0, true)}/${format(player.hepteractCrafts.chronos.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Hyperreal Hepteract: ${format(player.hepteractCrafts.hyperrealism.BAL, 0, true)}/${format(player.hepteractCrafts.hyperrealism.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Quark Hepteract: ${format(player.hepteractCrafts.quark.BAL, 0, true)}/${format(player.hepteractCrafts.quark.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Challenge Hepteract: ${format(player.hepteractCrafts.challenge.BAL, 0, true)}/${format(player.hepteractCrafts.challenge.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Abyss Hepteract: ${format(player.hepteractCrafts.abyss.BAL, 0, true)}/${format(player.hepteractCrafts.abyss.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Accelerators Hepteract: ${format(player.hepteractCrafts.accelerator.BAL, 0, true)}/${format(player.hepteractCrafts.accelerator.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Accelerator Boosts Hepteract: ${format(player.hepteractCrafts.acceleratorBoost.BAL, 0, true)}/${format(player.hepteractCrafts.acceleratorBoost.CAP, 0, true)}\\n`\r\n      ascension = ascension + `Multipliers Hepteract: ${format(player.hepteractCrafts.multiplier.BAL, 0, true)}/${format(player.hepteractCrafts.multiplier.CAP, 0, true)}\\n`\r\n      ascension = ascension + '----- POWDER & ORBS -----\\n'\r\n      ascension = ascension + `Orbs: ${format(player.overfluxOrbs, 0, true)}\\n`\r\n      ascension = ascension + `Powder: ${format(player.overfluxPowder, 2, true)}\\n`\r\n    }\r\n  }\r\n\r\n  // Reincarnation Portion!\r\n  let reincarnation = ''\r\n  if (player.reincarnationCount > 0 || player.highestSingularityCount > 0) {\r\n    reincarnation = '===== REINCARNATION =====\\n'\r\n    reincarnation = reincarnation + `Reincarnation Count: ${format(player.reincarnationCount, 0, true)}\\n`\r\n    reincarnation = reincarnation + `Reincarnation Timer: ${formatS(player.reincarnationcounter)}\\n`\r\n    reincarnation = reincarnation + `Fastest Reincarnation: ${formatS(player.fastestreincarnate)}\\n`\r\n    reincarnation = reincarnation + `Global Speed Multiplier: ${format(calculateTimeAcceleration().mult, 2, true)}\\n`\r\n    reincarnation = reincarnation + `Challenge 6 Completions: ${player.highestchallengecompletions[6]}/${getMaxChallenges(6)}\\n`\r\n    reincarnation = reincarnation + `Challenge 7 Completions: ${player.highestchallengecompletions[7]}/${getMaxChallenges(7)}\\n`\r\n    reincarnation = reincarnation + `Challenge 8 Completions: ${player.highestchallengecompletions[8]}/${getMaxChallenges(8)}\\n`\r\n    reincarnation = reincarnation + `Challenge 9 Completions: ${player.highestchallengecompletions[9]}/${getMaxChallenges(9)}\\n`\r\n    reincarnation = reincarnation + `Challenge 10 Completions: ${player.highestchallengecompletions[10]}/${getMaxChallenges(10)}\\n`\r\n  }\r\n\r\n  // Transcension Portion!\r\n  let transcension = ''\r\n  if (player.transcendCount > 0 || player.highestSingularityCount > 0) {\r\n    transcension = '===== TRANSCENSION =====\\n'\r\n    transcension = transcension + `Transcension Count: ${format(player.transcendCount, 0, true)}\\n`\r\n    transcension = transcension + `Transcension Timer: ${formatS(player.transcendcounter)}\\n`\r\n    transcension = transcension + `Fastest Transcension: ${formatS(player.fastesttranscend)}\\n`\r\n    transcension = transcension + `Challenge 1 Completions: ${player.highestchallengecompletions[1]}/${getMaxChallenges(1)}\\n`\r\n    transcension = transcension + `Challenge 2 Completions: ${player.highestchallengecompletions[2]}/${getMaxChallenges(2)}\\n`\r\n    transcension = transcension + `Challenge 3 Completions: ${player.highestchallengecompletions[3]}/${getMaxChallenges(3)}\\n`\r\n    transcension = transcension + `Challenge 4 Completions: ${player.highestchallengecompletions[4]}/${getMaxChallenges(4)}\\n`\r\n    transcension = transcension + `Challenge 5 Completions: ${player.highestchallengecompletions[5]}/${getMaxChallenges(5)}\\n`\r\n  }\r\n\r\n  // Prestige Portion!\r\n  let prestige = ''\r\n  if (player.prestigeCount > 0 || player.highestSingularityCount > 0) {\r\n    prestige = '===== PRESTIGE & RUNES =====\\n'\r\n    prestige = prestige + `Prestige Count: ${format(player.prestigeCount, 0, true)}\\n`\r\n    prestige = prestige + `Prestige Timer: ${formatS(player.prestigecounter)}\\n`\r\n    prestige = prestige + `Fastest Prestige: ${formatS(player.fastestprestige)}\\n`\r\n    prestige = prestige + i18next.t('achievements.totalPoints', {\r\n      x: format(player.achievementPoints),\r\n      y: format(totalachievementpoints),\r\n      z: (100 * player.achievementPoints / totalachievementpoints).toPrecision(4)\r\n    }) + '\\n'\r\n    prestige = prestige + `Speed Rune: Level ${format(player.runelevels[0], 0, true)}/${format(calculateMaxRunes(1))} [Bonus: ${format(G.rune1level - player.runelevels[0], 0, true)}]\\n`\r\n    if (player.achievements[38] > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Duplication Rune: Level ${format(player.runelevels[1], 0, true)}/${format(calculateMaxRunes(2))} [Bonus: ${format(G.rune2level - player.runelevels[1], 0, true)}]\\n`\r\n    }\r\n    if (player.achievements[44] > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Prism Rune: Level ${format(player.runelevels[2], 0, true)}/${format(calculateMaxRunes(3))} [Bonus: ${format(G.rune3level - player.runelevels[2], 0, true)}]\\n`\r\n    }\r\n    if (player.achievements[102] > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Thrift Rune: Level ${format(player.runelevels[3], 0, true)}/${format(calculateMaxRunes(4))} [Bonus: ${format(G.rune4level - player.runelevels[3], 0, true)}]\\n`\r\n    }\r\n    if (player.researches[82] > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Superior Intellect: Level ${format(player.runelevels[4], 0, true)}/${format(calculateMaxRunes(5))} [Bonus: ${format(G.rune5level - player.runelevels[4], 0, true)}]\\n`\r\n    }\r\n    if (player.shopUpgrades.infiniteAscent > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Infinite Ascent: Level ${format(player.runelevels[5], 0, true)}/${format(calculateMaxRunes(6))}\\n`\r\n    }\r\n    if (player.platonicUpgrades[20] > 0 || player.highestSingularityCount > 0) {\r\n      prestige = prestige + `Antiquities: Level ${format(player.runelevels[6], 0, true)}/${format(calculateMaxRunes(7))}\\n`\r\n    }\r\n  }\r\n\r\n  // Create Shop Stuffs\r\n  let shopUpgradeStats = '\\n'\r\n  if (player.reincarnationCount > 0 || player.highestSingularityCount > 0) {\r\n    shopUpgradeStats = '===== SHOP UPGRADES =====\\n - [\u2605]: Upgrade is MAXED - \\n - [\u2714]: Upgrade is unlocked - \\n - [\u2716]: Upgrade is locked - \\n'\r\n    const shopUpgrade = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\r\n    let totalShopUpgradeCount = 0\r\n    let totalShopUpgradeUnlocked = 0\r\n    let totalShopUpgradeMax = 0\r\n    let totalQuarksSpent = 0\r\n\r\n    for (const key of shopUpgrade) {\r\n\r\n      const shopUpg = player.shopUpgrades[key]\r\n      let upgradeText = ''\r\n\r\n      if (shopData[key].type !== shopUpgradeTypes.CONSUMABLE) {\r\n        totalShopUpgradeCount += 1\r\n        if (isShopUpgradeUnlocked(key)) {\r\n          totalShopUpgradeUnlocked += 1\r\n        }\r\n        if (shopUpg === shopData[key].maxLevel) {\r\n          totalShopUpgradeMax += 1\r\n        }\r\n      }\r\n\r\n      totalQuarksSpent += shopData[key].price * shopUpg +\r\n                                shopData[key].priceIncrease * shopUpg * (shopUpg - 1) / 2\r\n\r\n      upgradeText = upgradeText + (isShopUpgradeUnlocked(key) ?\r\n        (shopUpg === shopData[key].maxLevel ? '[\u2605]' : '[\u2714]'):\r\n        '[\u2716]')\r\n\r\n      upgradeText = upgradeText + ` ${friendlyShopName(key)}:`\r\n      upgradeText = upgradeText + ` ${(shopData[key].type !== shopUpgradeTypes.CONSUMABLE) ?\r\n        `Level ${shopUpg}/${shopData[key].maxLevel}`:\r\n        `${shopUpg}/${shopData[key].maxLevel}`}`\r\n\r\n      upgradeText = upgradeText + '\\n'\r\n      shopUpgradeStats = shopUpgradeStats + upgradeText\r\n    }\r\n    shopUpgradeStats = shopUpgradeStats + subCategoryDivisor\r\n    shopUpgradeStats = shopUpgradeStats + `Upgrades Unlocked: ${totalShopUpgradeUnlocked}/${totalShopUpgradeCount}\\n`\r\n    shopUpgradeStats = shopUpgradeStats + `Upgrades MAXED ${totalShopUpgradeMax}/${totalShopUpgradeCount}\\n`\r\n    shopUpgradeStats = shopUpgradeStats + `Quarks Spent in Shop: ${format(totalQuarksSpent, 0, true)}\\n`\r\n    shopUpgradeStats = shopUpgradeStats + subCategoryDivisor\r\n  }\r\n\r\n  // Create Singularity Stuffs\r\n  let singularityUpgradeStats = '\\n'\r\n  if (player.highestSingularityCount > 0) {\r\n    singularityUpgradeStats = '===== SINGULARITY UPGRADES =====\\n - [\u2605]: Upgrade is MAXED - \\n - [\u221E]: Upgrade is infinite - \\n - [\u2714]: Upgrade is unlocked - \\n - [\u2716]: Upgrade is locked - \\n'\r\n    const singUpgrade = Object.keys(player.singularityUpgrades) as (keyof Player['singularityUpgrades'])[]\r\n    let totalSingUpgradeCount = -1 // One upgrade cannot ever be leveled, by design, so subtract that from the actual count\r\n    let totalSingInfiniteLevel = 0\r\n    let totalSingUpgradeUnlocked = 0\r\n    let totalSingUpgradeMax = 0\r\n    let totalGoldenQuarksSpent = 0\r\n    for (const key of singUpgrade) {\r\n      let upgradeText = ''\r\n      const singUpg = player.singularityUpgrades[key]\r\n\r\n      totalSingUpgradeCount += 1\r\n      if (singUpg.maxLevel === -1) {\r\n        totalSingInfiniteLevel += 1\r\n      }\r\n      if (singUpg.level === singUpg.maxLevel) {\r\n        totalSingUpgradeMax += 1\r\n      }\r\n      if (player.singularityCount >= singUpg.minimumSingularity) {\r\n        totalSingUpgradeUnlocked += 1\r\n      }\r\n\r\n      totalGoldenQuarksSpent += singUpg.goldenQuarksInvested\r\n\r\n      let unicodeSymbol = '[\u2716]'\r\n      if (player.singularityCount >= singUpg.minimumSingularity) {\r\n        if (singUpg.maxLevel === -1) {\r\n          unicodeSymbol = '[\u221E]'\r\n        } else if (singUpg.level === singUpg.maxLevel) {\r\n          unicodeSymbol = '[\u2605]'\r\n        } else {\r\n          unicodeSymbol = '[\u2714]'\r\n        }\r\n      }\r\n\r\n      upgradeText = upgradeText + unicodeSymbol\r\n      upgradeText = upgradeText + ` ${singUpg.name}:`\r\n      upgradeText = upgradeText + (singUpg.maxLevel === -1 ?\r\n        ` Level ${singUpg.level}`:\r\n        ` Level ${singUpg.level}/${singUpg.maxLevel}`)\r\n      upgradeText = upgradeText + (singUpg.freeLevels > 0 ?\r\n        ` [+${format(singUpg.computeFreeLevelSoftcap(), 2, true)}]`:\r\n        '')\r\n\r\n      upgradeText = upgradeText + (singUpg.freeLevels > 0 ?\r\n        ` =+= Effective Level: ${format(singUpg.actualTotalLevels(), 2, true)}`:\r\n        '')\r\n\r\n      upgradeText =  upgradeText + '\\n'\r\n      singularityUpgradeStats = singularityUpgradeStats + upgradeText\r\n    }\r\n    singularityUpgradeStats = singularityUpgradeStats + subCategoryDivisor\r\n    singularityUpgradeStats = singularityUpgradeStats + `Upgrades Unlocked: ${totalSingUpgradeUnlocked}/${totalSingUpgradeCount}\\n`\r\n    singularityUpgradeStats = singularityUpgradeStats + `Upgrades MAXED: ${totalSingUpgradeMax}/${totalSingUpgradeCount - totalSingInfiniteLevel}\\n`\r\n    singularityUpgradeStats = singularityUpgradeStats + `Golden Quarks Spent on Upgrades: ${format(totalGoldenQuarksSpent, 0, true)}\\n`\r\n    singularityUpgradeStats = singularityUpgradeStats + subCategoryDivisor\r\n  }\r\n\r\n  // Create Octeract Stuff\r\n  let octeractUpgradeStats =  '\\n'\r\n  if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\r\n    octeractUpgradeStats =  '===== OCTERACT UPGRADES =====\\n - [\u2605]: Upgrade is MAXED - \\n - [\u221E]: Upgrade is infinite - \\n - [ ]: Upgrade INCOMPLETE - \\n'\r\n    const octUpgrade = Object.keys(player.octeractUpgrades) as (keyof Player['octeractUpgrades'])[]\r\n    let totalOctUpgradeCount = 0\r\n    let totalOctUpgradeMax = 0\r\n    let totalOcteractsSpent = 0\r\n\r\n    for (const key of octUpgrade) {\r\n      let upgradeText = ''\r\n      const octUpg = player.octeractUpgrades[key]\r\n\r\n      if (octUpg.maxLevel !== -1) {\r\n        totalOctUpgradeCount += 1\r\n      }\r\n      if (octUpg.level === octUpg.maxLevel) {\r\n        totalOctUpgradeMax += 1\r\n      }\r\n      totalOcteractsSpent += octUpg.octeractsInvested\r\n\r\n      let unicodeSymbol = '[ ]'\r\n      if (octUpg.maxLevel === -1) {\r\n        unicodeSymbol = '[\u221E]'\r\n      } else if (octUpg.level === octUpg.maxLevel) {\r\n        unicodeSymbol = '[\u2605]'\r\n      }\r\n\r\n      upgradeText = upgradeText + unicodeSymbol\r\n      upgradeText = upgradeText + octUpg.name + ':'\r\n      upgradeText = upgradeText + (octUpg.maxLevel === -1 ?\r\n        ` Level ${octUpg.level}`:\r\n        ` Level ${octUpg.level}/${octUpg.maxLevel}`)\r\n      upgradeText = upgradeText + (octUpg.freeLevels > 0 ?\r\n        ` [+${format(octUpg.computeFreeLevelSoftcap(), 2, true)}]`:\r\n        '')\r\n\r\n      upgradeText = upgradeText + (octUpg.freeLevels > 0 ?\r\n        ` =+= Effective Level: ${format(octUpg.actualTotalLevels(), 2, true)}`:\r\n        '')\r\n\r\n      upgradeText =  upgradeText + '\\n'\r\n      octeractUpgradeStats = octeractUpgradeStats + upgradeText\r\n    }\r\n    octeractUpgradeStats = octeractUpgradeStats + subCategoryDivisor\r\n    octeractUpgradeStats = octeractUpgradeStats + `Upgrades MAXED: ${totalOctUpgradeMax}/${totalOctUpgradeCount}\\n`\r\n    octeractUpgradeStats = octeractUpgradeStats + `Octeracts Spent on Upgrades: ${format(totalOcteractsSpent, 0, true)}\\n`\r\n    octeractUpgradeStats = octeractUpgradeStats + subCategoryDivisor\r\n  }\r\n\r\n\r\n  const returnString = titleText + '\\n' + time + '\\n' + ver + '\\n' + firstPlayed +\r\n                        resources + octeract + singularity + ascension +\r\n                        reincarnation + transcension + prestige +\r\n                        shopUpgradeStats + singularityUpgradeStats + octeractUpgradeStats\r\n\r\n\r\n  try {\r\n    await navigator.clipboard.writeText(returnString)\r\n  } catch (err) {\r\n    // So we fallback to the deprecated way of doing it,\r\n    // which isn't limited by any browser other than Safari\r\n    // because Apple is ran by a monkey in a human skin suit.\r\n\r\n    // Old/bad browsers (legacy Edge, Safari because of limitations)\r\n    const textArea = document.createElement('textarea')\r\n\r\n    textArea.setAttribute('style', 'top: 0; left: 0; position: fixed;')\r\n    textArea.setAttribute('data-clipboard-text', returnString)\r\n\r\n    document.body.appendChild(textArea)\r\n    textArea.focus()\r\n    textArea.select()\r\n\r\n    const clipboard = new ClipboardJS(textArea)\r\n\r\n    const cleanup = () => {\r\n      clipboard.destroy()\r\n      document.body.removeChild(textArea)\r\n    }\r\n\r\n    clipboard.on('success', () => {\r\n            document.getElementById('exportinfo')!.textContent = 'Copied save to clipboard!'\r\n            cleanup()\r\n    })\r\n\r\n    clipboard.on('error', () => {\r\n      void Alert('Unable to write the save to clipboard.').finally(cleanup)\r\n    })\r\n  }\r\n\r\n  const a = document.createElement('a')\r\n  a.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(returnString))\r\n  a.setAttribute('download', `Statistics-${saveFilename()}`)\r\n  a.setAttribute('id', 'downloadSave')\r\n  // \"Starting in Firefox 75, the click() function works even when the element is not attached to a DOM tree.\"\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\r\n  // so let's have it work on older versions of Firefox, doesn't change functionality.\r\n  document.body.appendChild(a)\r\n  a.click()\r\n  document.body.removeChild(a)\r\n\r\n  return Alert('Summary Stats saved to clipboard! We also gave you a file, for easy sharing, if that is available on your browser.')\r\n}\r\n", "import { toggleAscStatPerSecond, toggleBuyAmount, toggleAutoTesseracts, toggleSettings, toggleautoreset, toggleautobuytesseract, toggleShops, toggleAutoSacrifice, toggleAutoBuyFragment, toggleautoenhance, toggleautofortify, updateRuneBlessingBuyAmount, toggleSaveOff, toggleChallenges, toggleAutoChallengesIgnore, toggleAutoChallengeRun, updateAutoChallenge, toggleResearchBuy, toggleAutoResearch, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleMaxBuyCube, toggleautoopensCubes, toggleCorruptionLevel, toggleAutoAscend, toggleShopConfirmation, toggleAutoResearchMode, toggleBuyMaxShop, toggleHideShop, toggleHepteractAutoPercentage, autoCubeUpgradesToggle, autoPlatonicUpgradesToggle } from './Toggles'\r\nimport { resetrepeat, updateAutoReset, updateTesseractAutoBuyAmount, updateAutoCubesOpens } from './Reset'\r\nimport { player, resetCheck, saveSynergy } from './Synergism'\r\nimport { boostAccelerator, buyAccelerator, buyMultiplier, buyProducer, buyCrystalUpgrades, buyParticleBuilding, buyTesseractBuilding, buyRuneBonusLevels, buyAllBlessings } from './Buy'\r\nimport { crystalupgradedescriptions, constantUpgradeDescriptions, buyConstantUpgrades, upgradedescriptions, clickUpgrades, categoryUpgrades } from './Upgrades'\r\nimport { achievementdescriptions, achievementpointvalues } from './Achievements'\r\nimport { displayRuneInformation, redeemShards } from './Runes'\r\nimport { toggleTalismanBuy, buyTalismanResources, buyAllTalismanResources, showTalismanPrices, buyTalismanLevels, buyTalismanEnhance, showRespecInformation, respecTalismanConfirm, respecTalismanCancel, changeTalismanModifier, updateTalismanCostDisplay, showTalismanEffect, showEnhanceTalismanPrices } from './Talismans'\r\nimport { challengeDisplay, toggleRetryChallenges } from './Challenges'\r\nimport { buyResearch, researchDescriptions } from './Research'\r\nimport { antRepeat, sacrificeAnts, buyAntProducers, updateAntDescription, antUpgradeDescription, buyAntUpgrade } from './Ants'\r\nimport { buyCubeUpgrades, cubeUpgradeDesc } from './Cubes'\r\nimport { buyPlatonicUpgrades, createPlatonicDescription } from './Platonic'\r\nimport { corruptionCleanseConfirm, corruptionDisplay } from './Corruptions'\r\nimport { exportSynergism, updateSaveString, promocodes, promocodesPrompt, promocodesInfo, importSynergism, resetGame, reloadDeleteGame, handleLastModified } from './ImportExport'\r\nimport { resetHistoryTogglePerSecond } from './History'\r\nimport { resetShopUpgrades, shopDescriptions, buyShopUpgrades, useConsumable, shopData, shopUpgradeTypes } from './Shop'\r\nimport { Globals as G } from './Variables'\r\nimport { changeTabColor, Confirm } from './UpdateHTML'\r\nimport { hepteractDescriptions, hepteractToOverfluxOrbDescription, tradeHepteractToOverfluxOrb, overfluxPowderDescription, overfluxPowderWarp, toggleAutoBuyOrbs } from './Hepteracts'\r\nimport { exitOffline, forcedDailyReset, timeWarp } from './Calculate'\r\nimport type { OneToFive, Player } from './types/Synergism'\r\nimport { displayStats } from './Statistics'\r\nimport { testing } from './Config'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { toggleAnnotation, toggleTheme, toggleIconSet, imgErrorHandler } from './Themes'\r\nimport { buyGoldenQuarks } from './singularity'\r\nimport { resetHotkeys } from './Hotkeys'\r\nimport { generateExportSummary } from './Summary'\r\nimport { shopMouseover } from './UpdateVisuals'\r\nimport i18next from 'i18next'\r\nimport { clickSmith } from './Event'\r\nimport { changeTab, changeSubTab } from './Tabs'\r\n\r\n/* STYLE GUIDE */\r\n/*\r\n    1) When adding event handlers please put it in respective tabs, in the correct subcategory.\r\n    Generally it would be preferred to put it in the lowest spot.\r\n    2) Please put any Mouseover events before Click events, if two event handlers are needed for an element.\r\n    3) Do *NOT* add event handlers to index.html. You may only add them in js/ts files!\r\n    4) Using for loops: be careful about passing arguments. If necessary, please use a currying function (See: Line 80-90)\r\n    5) If you are documenting a new tab or subtab, please comment out the order in which you add event handlers.\r\n    6) It is strongly recommended you only add event handlers in the generateEventHandlers() function, but if you are\r\n    creating new elements through js/ts you may do so outside of this file (E.g. corruptions)\r\n\r\n    Platonic and/or Khafra have the right to close PRs that do not conform to this style guide\r\n\r\n    If you are editing this script, please update the below time:\r\n    Last Edited: June 10, 2021 3:04 AM UTC-8\r\n*/\r\n\r\n/* eslint-disable @typescript-eslint/no-misused-promises */\r\n\r\nexport const generateEventHandlers = () => {\r\n  const ordinals = ['null', 'first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth'] as const\r\n\r\n  if (testing) {\r\n    const warp = document.createElement('button')\r\n    const dayReset = document.createElement('button')\r\n    warp.textContent = 'Click here to warp time! [TESTING ONLY]'\r\n    warp.setAttribute('style', 'width: auto; height: 30px; border: 6px solid gold;')\r\n    warp.addEventListener('click', () => timeWarp())\r\n    dayReset.textContent = 'Click to force a new day! [TESTING ONLY]'\r\n    dayReset.setAttribute('style', 'width: auto; height: 30px; border: 6px solid orange;')\r\n    dayReset.addEventListener('click', () => forcedDailyReset())\r\n\r\n    const consumables = DOMCacheGetOrSet('actualConsumables')\r\n    consumables.appendChild(warp)\r\n    consumables.appendChild(dayReset)\r\n  }\r\n  // Offline Button\r\n  DOMCacheGetOrSet('exitOffline').addEventListener('click', () => exitOffline())\r\n  DOMCacheGetOrSet('offlineContainer').addEventListener('dblclick', () => exitOffline())\r\n  // UPPER UI ELEMENTS\r\n  //Prelude: Cube/Tesseract/Hypercube/Platonic display UIs (Onclicks)\r\n  DOMCacheGetOrSet('ascCubeStats').addEventListener('click', () => toggleAscStatPerSecond(1))\r\n  DOMCacheGetOrSet('ascTessStats').addEventListener('click', () => toggleAscStatPerSecond(2))\r\n  DOMCacheGetOrSet('ascHyperStats').addEventListener('click', () => toggleAscStatPerSecond(3))\r\n  DOMCacheGetOrSet('ascPlatonicStats').addEventListener('click', () => toggleAscStatPerSecond(4))\r\n  DOMCacheGetOrSet('ascHepteractStats').addEventListener('click', () => toggleAscStatPerSecond(5))\r\n  DOMCacheGetOrSet('ascTimeTakenStats').addEventListener('click', () => toggleAscStatPerSecond(6))\r\n  //Part 1: Reset Tiers\r\n  //Onmouseover Events\r\n  DOMCacheGetOrSet('prestigebtn').addEventListener('mouseover', () => resetrepeat('prestige'))\r\n  DOMCacheGetOrSet('transcendbtn').addEventListener('mouseover', () => resetrepeat('transcension'))\r\n  DOMCacheGetOrSet('reincarnatebtn').addEventListener('mouseover', () => resetrepeat('reincarnation'))\r\n  DOMCacheGetOrSet('acceleratorboostbtn').addEventListener('mouseover', () => resetrepeat('acceleratorBoost'))\r\n  DOMCacheGetOrSet('challengebtn').addEventListener('mouseover', () => resetrepeat('transcensionChallenge'))\r\n  DOMCacheGetOrSet('reincarnatechallengebtn').addEventListener('mouseover', () => resetrepeat('reincarnationChallenge'))\r\n  DOMCacheGetOrSet('ascendChallengeBtn').addEventListener('mouseover', () => resetrepeat('ascensionChallenge'))\r\n  DOMCacheGetOrSet('ascendbtn').addEventListener('mouseover', () => resetrepeat('ascension'))\r\n  DOMCacheGetOrSet('singularitybtn').addEventListener('mouseover', () => resetrepeat('singularity'))\r\n\r\n  for (const resetButton of Array.from(document.getElementsByClassName('resetbtn'))) {\r\n    resetButton.addEventListener('mouseover', () => {\r\n      resetButton.classList.add('hover')\r\n    })\r\n\r\n    resetButton.addEventListener('mouseout', () => {\r\n      resetButton.classList.remove('hover')\r\n\r\n      if (player.currentChallenge.reincarnation) {\r\n        resetrepeat('reincarnationChallenge')\r\n      } else if (player.currentChallenge.transcension) {\r\n        resetrepeat('transcensionChallenge')\r\n      }\r\n    })\r\n  }\r\n\r\n  //Onclick Events (this is particularly bad)\r\n  DOMCacheGetOrSet('prestigebtn').addEventListener('click', () => resetCheck('prestige'))\r\n  DOMCacheGetOrSet('transcendbtn').addEventListener('click', () => resetCheck('transcension'))\r\n  DOMCacheGetOrSet('reincarnatebtn').addEventListener('click', () => resetCheck('reincarnation'))\r\n  DOMCacheGetOrSet('acceleratorboostbtn').addEventListener('click', () => boostAccelerator())\r\n  DOMCacheGetOrSet('challengebtn').addEventListener('click', () => resetCheck('transcensionChallenge', undefined, true))\r\n  DOMCacheGetOrSet('reincarnatechallengebtn').addEventListener('click', () => resetCheck('reincarnationChallenge', undefined, true))\r\n  DOMCacheGetOrSet('ascendChallengeBtn').addEventListener('click', () => resetCheck('ascensionChallenge'))\r\n  DOMCacheGetOrSet('ascendbtn').addEventListener('click', () => resetCheck('ascension'))\r\n  DOMCacheGetOrSet('singularitybtn').addEventListener('click', () => resetCheck('singularity'))\r\n  //Part 2: Tabs (sucks)\r\n  //Onmouseover Events\r\n  DOMCacheGetOrSet('buildingstab').addEventListener('click', () => changeTab('buildings'))\r\n  DOMCacheGetOrSet('upgradestab').addEventListener('click', () => changeTab('upgrades'))\r\n  DOMCacheGetOrSet('settingstab').addEventListener('click', () => changeTab('settings'))\r\n  DOMCacheGetOrSet('achievementstab').addEventListener('click', () => changeTab('achievements'))\r\n  DOMCacheGetOrSet('runestab').addEventListener('click', () => changeTab('runes'))\r\n  DOMCacheGetOrSet('challengetab').addEventListener('click', () => changeTab('challenge'))\r\n  DOMCacheGetOrSet('researchtab').addEventListener('click', () => changeTab('research'))\r\n  DOMCacheGetOrSet('shoptab').addEventListener('click', () => changeTab('shop'))\r\n  DOMCacheGetOrSet('anttab').addEventListener('click', () => changeTab('ant'))\r\n  DOMCacheGetOrSet('cubetab').addEventListener('click', () => changeTab('cube'))\r\n  DOMCacheGetOrSet('traitstab').addEventListener('click', () => changeTab('traits'))\r\n  DOMCacheGetOrSet('singularitytab').addEventListener('click', () => changeTab('singularity'))\r\n  DOMCacheGetOrSet('eventtab').addEventListener('click', () => changeTab('event'))\r\n\r\n  // BUILDINGS TAB\r\n  //Part 1: Upper portion (Subtab toggle)\r\n  const buildingTypes = ['Coin', 'Diamond', 'Mythos', 'Particle', 'Tesseract']\r\n  for (let index = 0; index < buildingTypes.length; index++) {\r\n    DOMCacheGetOrSet(`switchTo${buildingTypes[index]}Building`).addEventListener('click', () => changeSubTab('buildings', { page: index }))\r\n\r\n  }\r\n  //Part 2: Building Amount Toggles\r\n  const buildingTypesAlternate = ['coin', 'crystal', 'mythos', 'particle', 'tesseract', 'offering'] as const\r\n  const buildingOrds = ['one', 'ten', 'hundred', 'thousand', '10k', '100k']\r\n  const buildingOrdsToNum = [1, 10, 100, 1000, 10000, 100000] as const\r\n  for (let index = 0; index < buildingOrds.length; index++) {\r\n    for (let index2 = 0; index2 < buildingTypesAlternate.length; index2++) {\r\n      DOMCacheGetOrSet(buildingTypesAlternate[index2]+buildingOrds[index]).addEventListener('click', () =>\r\n        toggleBuyAmount(\r\n          buildingOrdsToNum[index],\r\n          buildingTypesAlternate[index2]\r\n        )\r\n      )\r\n    }\r\n  }\r\n  //Part 3: Building Purchasers + Upgrades\r\n  // Accelerator, Multiplier, Accelerator Boost\r\n  DOMCacheGetOrSet('buyaccelerator').addEventListener('click', () => buyAccelerator())\r\n  DOMCacheGetOrSet('buymultiplier').addEventListener('click', () => buyMultiplier())\r\n  DOMCacheGetOrSet('buyacceleratorboost').addEventListener('click', () => boostAccelerator())\r\n\r\n  // Coin, Diamond and Mythos Buildings\r\n  const buildingTypesAlternate2 = ['coin', 'diamond', 'mythos']\r\n  const buildingTypesAlternate3 = ['Coin', 'Diamonds', 'Mythos'] as const //TODO: A cleaner way to implement this dumb shit\r\n  for (let index = 0; index < 3; index++) {\r\n    for (let index2 = 1; index2 <= 5; index2++) {\r\n      DOMCacheGetOrSet(`buy${buildingTypesAlternate2[index]}${index2}`).addEventListener('click', () =>\r\n        buyProducer(ordinals[index2 as OneToFive], buildingTypesAlternate3[index], index === 0 ? index2 : index2 * (index2+1) / 2))\r\n    }\r\n  }\r\n\r\n  // Crystal Upgrades (Mouseover and Onclick)\r\n  for (let index = 1; index <= 5; index++) {\r\n\r\n    DOMCacheGetOrSet(`buycrystalupgrade${index}`).addEventListener('mouseover', () => crystalupgradedescriptions(index))\r\n    DOMCacheGetOrSet(`buycrystalupgrade${index}`).addEventListener('click', () => buyCrystalUpgrades(index))\r\n\r\n  }\r\n\r\n  // Particle Buildings\r\n  for (let index = 0; index < 5; index++) {\r\n    DOMCacheGetOrSet(`buyparticles${index+1}`).addEventListener('click', () => buyParticleBuilding(\r\n            index+1 as OneToFive\r\n    ))\r\n  }\r\n\r\n  // Tesseract Buildings\r\n  for (let index = 0; index < 5; index++) {\r\n    DOMCacheGetOrSet(`buyTesseracts${index+1}`).addEventListener('click', () => buyTesseractBuilding(index+1 as OneToFive))\r\n    DOMCacheGetOrSet(`tesseractAutoToggle${index+1}`).addEventListener('click', () => toggleAutoTesseracts(index+1))\r\n\r\n  }\r\n\r\n  // Constant Upgrades\r\n  for (let index = 0; index < 10; index++) {\r\n\r\n    DOMCacheGetOrSet(`buyConstantUpgrade${index+1}`).addEventListener('mouseover', () => constantUpgradeDescriptions(index+1))\r\n    DOMCacheGetOrSet(`buyConstantUpgrade${index+1}`).addEventListener('click', () => buyConstantUpgrades(index+1))\r\n\r\n  }\r\n\r\n  //Part 4: Toggles\r\n  // I'm just addressing all global toggles here\r\n  const toggles = document.querySelectorAll<HTMLElement>('.auto[toggleid]')\r\n  toggles.forEach(b => b.addEventListener('click', () => toggleSettings(b)))\r\n  // Toggles auto reset type (between TIME and AMOUNT for 3 first Tiers, and between PERCENTAGE and AMOUNT for Tesseracts)\r\n  DOMCacheGetOrSet('prestigeautotoggle').addEventListener('click', () => toggleautoreset(1))\r\n  DOMCacheGetOrSet('transcendautotoggle').addEventListener('click', () => toggleautoreset(2))\r\n  DOMCacheGetOrSet('reincarnateautotoggle').addEventListener('click', () => toggleautoreset(3))\r\n  DOMCacheGetOrSet('tesseractautobuymode').addEventListener('click', () => toggleautoreset(4))\r\n  // Toggles auto reset amount required to trigger\r\n  DOMCacheGetOrSet('prestigeamount').addEventListener('blur', () => updateAutoReset(1))\r\n  DOMCacheGetOrSet('transcendamount').addEventListener('blur', () => updateAutoReset(2))\r\n  DOMCacheGetOrSet('reincarnationamount').addEventListener('blur', () => updateAutoReset(3))\r\n  DOMCacheGetOrSet('ascensionAmount').addEventListener('blur', () => updateAutoReset(4))\r\n  DOMCacheGetOrSet('autoAntSacrificeAmount').addEventListener('blur', () => updateAutoReset(5))\r\n  // Tesseract-specific of the above. I don't know why I didn't standardize names here.\r\n  DOMCacheGetOrSet('tesseractautobuytoggle').addEventListener('click', () => toggleautobuytesseract())\r\n  DOMCacheGetOrSet('tesseractAmount').addEventListener('blur', () => updateTesseractAutoBuyAmount())\r\n  // Auto Opening of Cubes\r\n  DOMCacheGetOrSet('cubeOpensInput').addEventListener('blur', () => updateAutoCubesOpens(1))\r\n  DOMCacheGetOrSet('tesseractsOpensInput').addEventListener('blur', () => updateAutoCubesOpens(2))\r\n  DOMCacheGetOrSet('hypercubesOpensInput').addEventListener('blur', () => updateAutoCubesOpens(3))\r\n  DOMCacheGetOrSet('platonicCubeOpensInput').addEventListener('blur', () => updateAutoCubesOpens(4))\r\n  DOMCacheGetOrSet('openCubes').addEventListener('click', () => toggleautoopensCubes(1))\r\n  DOMCacheGetOrSet('openTesseracts').addEventListener('click', () => toggleautoopensCubes(2))\r\n  DOMCacheGetOrSet('openHypercubes').addEventListener('click', () => toggleautoopensCubes(3))\r\n  DOMCacheGetOrSet('openPlatonicCube').addEventListener('click', () => toggleautoopensCubes(4))\r\n\r\n\r\n  // UPGRADES TAB\r\n  // For all upgrades in the Upgrades Tab (125) count, we have the same mouseover event. So we'll work on those first.\r\n  for (let index = 1; index <= 125; index++) {\r\n    //Onmouseover events ()\r\n    DOMCacheGetOrSet(`upg${index}`).addEventListener('mouseover', () => upgradedescriptions(index))\r\n  }\r\n\r\n  // Generates all upgrade button events\r\n  for (let index = 1; index <= 125; index++) {\r\n    DOMCacheGetOrSet(`upg${index}`).addEventListener('click', () => clickUpgrades(index, false))\r\n  }\r\n\r\n  for (let index = 1; index <= 6; index++) {\r\n    DOMCacheGetOrSet(`upgrades${index}`).addEventListener('click', () => categoryUpgrades(index, false))\r\n  }\r\n\r\n  // Next part: Shop-specific toggles\r\n  DOMCacheGetOrSet('coinAutoUpgrade').addEventListener('click', () => toggleShops('coin'))\r\n  DOMCacheGetOrSet('prestigeAutoUpgrade').addEventListener('click', () => toggleShops('prestige'))\r\n  DOMCacheGetOrSet('transcendAutoUpgrade').addEventListener('click', () => toggleShops('transcend'))\r\n  DOMCacheGetOrSet('generatorsAutoUpgrade').addEventListener('click', () => toggleShops('generators'))\r\n  DOMCacheGetOrSet('reincarnateAutoUpgrade').addEventListener('click', () => toggleShops('reincarnate'))\r\n\r\n  // ACHIEVEMENTS TAB\r\n  // TODO: Remove 1 indexing\r\n  for (let index = 1; index <= achievementpointvalues.length - 1 ; index++) {\r\n\r\n    //Onmouseover events (Achievement descriptions)\r\n    DOMCacheGetOrSet(`ach${index}`).addEventListener('mouseover', () => achievementdescriptions(index))\r\n\r\n  }\r\n\r\n  // RUNES TAB [And all corresponding subtabs]\r\n  // Part 0: Upper UI portion\r\n  //Auto sacrifice toggle button\r\n  DOMCacheGetOrSet('toggleautosacrifice').addEventListener('click', () => toggleAutoSacrifice(0))\r\n  //Toggle subtabs of Runes tab\r\n  for (let index = 0; index < 4; index++) {\r\n\r\n    DOMCacheGetOrSet(`toggleRuneSubTab${index+1}`).addEventListener('click', () => changeSubTab('runes', { page: index }))\r\n\r\n  }\r\n\r\n  // Part 1: Runes Subtab\r\n  for (let index = 0; index < 7; index++) {\r\n\r\n    DOMCacheGetOrSet(`rune${index+1}`).addEventListener('mouseover', () => displayRuneInformation(index+1))\r\n    DOMCacheGetOrSet(`rune${index+1}`).addEventListener('click', () => toggleAutoSacrifice(index+1))\r\n\r\n    DOMCacheGetOrSet(`activaterune${index+1}`).addEventListener('mouseover', () => displayRuneInformation(index+1))\r\n    DOMCacheGetOrSet(`activaterune${index+1}`).addEventListener('click', () => redeemShards(index+1))\r\n\r\n  }\r\n\r\n  // Part 2: Talismans Subtab\r\n  const talismanBuyPercents = [10, 25, 50, 100]\r\n  const talismanBuyPercentsOrd = ['Ten', 'TwentyFive', 'Fifty', 'Hundred']\r\n\r\n  for (let index = 0; index < talismanBuyPercents.length; index++) {\r\n\r\n    DOMCacheGetOrSet(`talisman${talismanBuyPercentsOrd[index]}`).addEventListener('click', () => toggleTalismanBuy(talismanBuyPercents[index]))\r\n\r\n  }\r\n\r\n  DOMCacheGetOrSet('toggleautoBuyFragments').addEventListener('click', () => toggleAutoBuyFragment())\r\n  DOMCacheGetOrSet('toggleautoenhance').addEventListener('click', () => toggleautoenhance())\r\n  DOMCacheGetOrSet('toggleautofortify').addEventListener('click', () => toggleautofortify())\r\n\r\n  //Talisman Fragments/Shards\r\n  const talismanItemNames = ['shard', 'commonFragment', 'uncommonFragment', 'rareFragment', 'epicFragment', 'legendaryFragment', 'mythicalFragment'] as const\r\n  for (let index = 0; index < talismanItemNames.length; index++) {\r\n\r\n    DOMCacheGetOrSet(`buyTalismanItem${index+1}`).addEventListener('mouseover', () => updateTalismanCostDisplay(talismanItemNames[index]))\r\n    DOMCacheGetOrSet(`buyTalismanItem${index+1}`).addEventListener('click', () => buyTalismanResources(talismanItemNames[index]))\r\n\r\n  }\r\n\r\n  DOMCacheGetOrSet('buyTalismanAll').addEventListener('mouseover', () => updateTalismanCostDisplay(null))\r\n  DOMCacheGetOrSet('buyTalismanAll').addEventListener('click', () => buyAllTalismanResources())\r\n\r\n\r\n  for (let index = 0; index < 7; index++) {\r\n\r\n    DOMCacheGetOrSet(`talisman${index+1}`).addEventListener('click', () => showTalismanEffect(index))\r\n    DOMCacheGetOrSet(`leveluptalisman${index+1}`).addEventListener('mouseover', () => showTalismanPrices(index))\r\n    DOMCacheGetOrSet(`leveluptalisman${index+1}`).addEventListener('click', () => buyTalismanLevels(index))\r\n    DOMCacheGetOrSet(`enhancetalisman${index+1}`).addEventListener('mouseover', () => showEnhanceTalismanPrices(index))\r\n    DOMCacheGetOrSet(`enhancetalisman${index+1}`).addEventListener('click', () => buyTalismanEnhance(index))\r\n    DOMCacheGetOrSet(`respectalisman${index+1}`).addEventListener('click', () => showRespecInformation(index))\r\n\r\n  }\r\n\r\n  DOMCacheGetOrSet('respecAllTalismans').addEventListener('click', () => showRespecInformation(7))\r\n  DOMCacheGetOrSet('confirmTalismanRespec').addEventListener('click', () => respecTalismanConfirm(G.talismanRespec))\r\n  DOMCacheGetOrSet('cancelTalismanRespec').addEventListener('click', () => respecTalismanCancel(G.talismanRespec))\r\n\r\n  for (let index = 0; index < 5; index++) {\r\n\r\n    DOMCacheGetOrSet(`talismanRespecButton${index+1}`).addEventListener('click', () => changeTalismanModifier(index+1))\r\n\r\n  }\r\n\r\n  //Part 3: Blessings and Spirits\r\n  for (let index = 0; index < 5; index++) {\r\n\r\n    DOMCacheGetOrSet(`runeBlessingPurchase${index+1}`).addEventListener('click', () => buyRuneBonusLevels('Blessings', index+1))\r\n    DOMCacheGetOrSet(`runeSpiritPurchase${index+1}`).addEventListener('click', () => buyRuneBonusLevels('Spirits', index+1))\r\n\r\n  }\r\n  DOMCacheGetOrSet('buyRuneBlessingInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(1))\r\n  DOMCacheGetOrSet('buyRuneSpiritInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(2))\r\n\r\n  DOMCacheGetOrSet('buyAllBlessings').addEventListener('click', () => buyAllBlessings('Blessings'))\r\n  DOMCacheGetOrSet('buyAllSpirits').addEventListener('click', () => buyAllBlessings('Spirits'))\r\n\r\n  // CHALLENGES TAB\r\n  //Part 1: Challenges\r\n  // Challenge 1-15 buttons\r\n  for (let index = 0; index < 15; index++) {\r\n\r\n    DOMCacheGetOrSet(`challenge${index+1}`).addEventListener('click', () => challengeDisplay(index+1))\r\n    DOMCacheGetOrSet(`challenge${index+1}`).addEventListener('dblclick', () => {\r\n      challengeDisplay(index+1)\r\n      toggleChallenges(G.triggerChallenge, false)\r\n    })\r\n\r\n  }\r\n  //Part 2: QoL Buttons\r\n  // Individual buttons (Start, Retry)\r\n  DOMCacheGetOrSet('startChallenge').addEventListener('click', () => toggleChallenges(G.triggerChallenge, false))\r\n  DOMCacheGetOrSet('retryChallenge').addEventListener('click', () => toggleRetryChallenges())\r\n  // Autochallenge buttons\r\n  DOMCacheGetOrSet('toggleAutoChallengeIgnore').addEventListener('click', () => toggleAutoChallengesIgnore(G.triggerChallenge))\r\n  DOMCacheGetOrSet('toggleAutoChallengeStart').addEventListener('click', () => toggleAutoChallengeRun())\r\n  DOMCacheGetOrSet('startAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(1))\r\n  DOMCacheGetOrSet('exitAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(2))\r\n  DOMCacheGetOrSet('enterAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(3))\r\n\r\n  // RESEARCH TAB\r\n  //Part 1: Researches\r\n  // There are 200 researches, ideally in rewrite 200 would instead be length of research list/array\r\n  for (let index = 1; index < 200; index++) {\r\n\r\n    //Eliminates listeners on index.html 1404-1617\r\n    DOMCacheGetOrSet(`res${index}`).addEventListener('click', () => buyResearch(index))\r\n    DOMCacheGetOrSet(`res${index}`).addEventListener('mouseover', () => researchDescriptions(index))\r\n  }\r\n  //Research 200 is special, uses more params\r\n  DOMCacheGetOrSet('res200').addEventListener('click', () => buyResearch(200, false, 0.01))\r\n  DOMCacheGetOrSet('res200').addEventListener('mouseover', () => researchDescriptions(200, false, 0.01))\r\n\r\n  //Part 2: QoL buttons\r\n  DOMCacheGetOrSet('toggleresearchbuy').addEventListener('click', () => toggleResearchBuy())\r\n  DOMCacheGetOrSet('toggleautoresearch').addEventListener('click', () => toggleAutoResearch())\r\n  DOMCacheGetOrSet('toggleautoresearchmode').addEventListener('click', () => toggleAutoResearchMode())\r\n\r\n  // ANTHILL TAB\r\n  //Part 1: Ant Producers (Tiers 1-8)\r\n  const antProducerCostVals = ['null', '1e700', '3', '100', '10000', '1e12', '1e36', '1e100', '1e300']\r\n  for (let index = 1; index <= 8 ; index++) {\r\n\r\n    //Onmouse Events\r\n    DOMCacheGetOrSet(`anttier${index}`).addEventListener('mouseover', () => updateAntDescription(index))\r\n    DOMCacheGetOrSet(`anttier${index}`).addEventListener('mouseover', () => antRepeat(index))\r\n    //Onclick Events\r\n    DOMCacheGetOrSet(`anttier${index}`).addEventListener('click', () => buyAntProducers(\r\n        ordinals[index] as Parameters<typeof buyAntProducers>[0],\r\n        antProducerCostVals[index], index)\r\n    )\r\n  }\r\n  //Part 2: Ant Upgrades (1-12)\r\n  const antUpgradeCostVals = ['null', '100', '100', '1000', '1000', '1e5', '1e6', '1e8', '1e11', '1e15', '1e20', '1e40', '1e100']\r\n  for (let index = 1; index <= 12; index++) {\r\n\r\n    //Onmouse Event\r\n    DOMCacheGetOrSet(`antUpgrade${index}`).addEventListener('mouseover', () => antUpgradeDescription(index))\r\n    //Onclick Event\r\n    DOMCacheGetOrSet(`antUpgrade${index}`).addEventListener('click', () => buyAntUpgrade(antUpgradeCostVals[index], false, index))\r\n\r\n  }\r\n  //Part 3: Sacrifice\r\n  DOMCacheGetOrSet('antSacrifice').addEventListener('click', () => sacrificeAnts())\r\n\r\n  //Part 4: QoL Buttons\r\n  DOMCacheGetOrSet('toggleAntMax').addEventListener('click', () => toggleAntMaxBuy())\r\n  DOMCacheGetOrSet('toggleAutoSacrificeAnt').addEventListener('click', () => toggleAntAutoSacrifice(0))\r\n  DOMCacheGetOrSet('autoSacrificeAntMode').addEventListener('click', () => toggleAntAutoSacrifice(1))\r\n\r\n  // WOW! Cubes Tab\r\n  //Part 0: Subtab UI\r\n  for (let index = 0; index < 7; index++) {\r\n\r\n    DOMCacheGetOrSet(`switchCubeSubTab${index+1}`).addEventListener('click', () => changeSubTab('cube', { page: index }))\r\n\r\n  }\r\n\r\n  //Part 1: Cube Upgrades\r\n  for (let index = 1; index < player.cubeUpgrades.length; index++) {\r\n\r\n    DOMCacheGetOrSet(`cubeUpg${index}`).addEventListener('mouseover', () => cubeUpgradeDesc(index))\r\n    DOMCacheGetOrSet(`cubeUpg${index}`).addEventListener('click', () => buyCubeUpgrades(index))\r\n\r\n  }\r\n\r\n  // Toggle\r\n  DOMCacheGetOrSet('toggleCubeBuy').addEventListener('click', () => toggleMaxBuyCube())\r\n  DOMCacheGetOrSet('toggleAutoCubeUpgrades').addEventListener('click', () => autoCubeUpgradesToggle())\r\n\r\n  //Part 2: Cube Opening Buttons\r\n  //Wow Cubes\r\n  DOMCacheGetOrSet('open1Cube').addEventListener('click', () => player.wowCubes.open(1, false))\r\n  DOMCacheGetOrSet('open20Cube').addEventListener('click', () => player.wowCubes.open(Math.floor(Number(player.wowCubes) / 10), false))\r\n  DOMCacheGetOrSet('open1000Cube').addEventListener('click', () => player.wowCubes.open(Math.floor(Number(player.wowCubes) / 2), false))\r\n  DOMCacheGetOrSet('openCustomCube').addEventListener('click', () => player.wowCubes.openCustom())\r\n  DOMCacheGetOrSet('openMostCube').addEventListener('click', () => player.wowCubes.open(0, true))\r\n  //Wow Tesseracts\r\n  DOMCacheGetOrSet('open1Tesseract').addEventListener('click', () => player.wowTesseracts.open(1, false))\r\n  DOMCacheGetOrSet('open20Tesseract').addEventListener('click', () => player.wowTesseracts.open(Math.floor(Number(player.wowTesseracts) / 10), false))\r\n  DOMCacheGetOrSet('open1000Tesseract').addEventListener('click', () => player.wowTesseracts.open(Math.floor(Number(player.wowTesseracts) / 2), false))\r\n  DOMCacheGetOrSet('openCustomTesseract').addEventListener('click', () => player.wowTesseracts.openCustom())\r\n  DOMCacheGetOrSet('openMostTesseract').addEventListener('click', () => player.wowTesseracts.open(1, true))\r\n  //Wow Hypercubes\r\n  DOMCacheGetOrSet('open1Hypercube').addEventListener('click', () => player.wowHypercubes.open(1, false))\r\n  DOMCacheGetOrSet('open20Hypercube').addEventListener('click', () => player.wowHypercubes.open(Math.floor(Number(player.wowHypercubes) / 10), false))\r\n  DOMCacheGetOrSet('open1000Hypercube').addEventListener('click', () => player.wowHypercubes.open(Math.floor(Number(player.wowHypercubes) / 2), false))\r\n  DOMCacheGetOrSet('openCustomHypercube').addEventListener('click', () => player.wowHypercubes.openCustom())\r\n  DOMCacheGetOrSet('openMostHypercube').addEventListener('click', () => player.wowHypercubes.open(1, true))\r\n  //Wow Platonic Cubes\r\n  DOMCacheGetOrSet('open1PlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1, false))\r\n  DOMCacheGetOrSet('open40kPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(Math.floor(Number(player.wowPlatonicCubes) / 10), false))\r\n  DOMCacheGetOrSet('open1mPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(Math.floor(Number(player.wowPlatonicCubes) / 2), false))\r\n  DOMCacheGetOrSet('openCustomPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.openCustom())\r\n  DOMCacheGetOrSet('openMostPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1, true))\r\n\r\n  DOMCacheGetOrSet('saveOffToggle').addEventListener('click', () => toggleSaveOff())\r\n  //Part 3: Platonic Upgrade Section\r\n  const platonicUpgrades = document.getElementsByClassName('platonicUpgradeImage')\r\n  for (let index = 0; index < platonicUpgrades.length; index++) {\r\n\r\n    platonicUpgrades[index].addEventListener('mouseover', () => createPlatonicDescription(index+1))\r\n    platonicUpgrades[index].addEventListener('click', () => buyPlatonicUpgrades(index+1))\r\n\r\n  }\r\n  DOMCacheGetOrSet('toggleAutoPlatonicUpgrades').addEventListener('click', () => autoPlatonicUpgradesToggle())\r\n\r\n  //Part 4: Hepteract Subtab\r\n  DOMCacheGetOrSet('chronosHepteract').addEventListener('mouseover', () => hepteractDescriptions('chronos'))\r\n  DOMCacheGetOrSet('hyperrealismHepteract').addEventListener('mouseover', () => hepteractDescriptions('hyperrealism'))\r\n  DOMCacheGetOrSet('quarkHepteract').addEventListener('mouseover', () => hepteractDescriptions('quark'))\r\n  DOMCacheGetOrSet('challengeHepteract').addEventListener('mouseover', () => hepteractDescriptions('challenge'))\r\n  DOMCacheGetOrSet('abyssHepteract').addEventListener('mouseover', () => hepteractDescriptions('abyss'))\r\n  DOMCacheGetOrSet('acceleratorHepteract').addEventListener('mouseover', () => hepteractDescriptions('accelerator'))\r\n  DOMCacheGetOrSet('acceleratorBoostHepteract').addEventListener('mouseover', () => hepteractDescriptions('acceleratorBoost'))\r\n  DOMCacheGetOrSet('multiplierHepteract').addEventListener('mouseover', () => hepteractDescriptions('multiplier'))\r\n\r\n\r\n  DOMCacheGetOrSet('chronosHepteractCraft').addEventListener('click', () => player.hepteractCrafts.chronos.craft())\r\n  DOMCacheGetOrSet('hyperrealismHepteractCraft').addEventListener('click', () => player.hepteractCrafts.hyperrealism.craft())\r\n  DOMCacheGetOrSet('quarkHepteractCraft').addEventListener('click', () => player.hepteractCrafts.quark.craft())\r\n  DOMCacheGetOrSet('challengeHepteractCraft').addEventListener('click', () => player.hepteractCrafts.challenge.craft())\r\n  DOMCacheGetOrSet('abyssHepteractCraft').addEventListener('click', () => player.hepteractCrafts.abyss.craft())\r\n  DOMCacheGetOrSet('acceleratorHepteractCraft').addEventListener('click', () => player.hepteractCrafts.accelerator.craft())\r\n  DOMCacheGetOrSet('acceleratorBoostHepteractCraft').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.craft())\r\n  DOMCacheGetOrSet('multiplierHepteractCraft').addEventListener('click', () => player.hepteractCrafts.multiplier.craft())\r\n\r\n  DOMCacheGetOrSet('chronosHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.chronos.craft(true))\r\n  DOMCacheGetOrSet('hyperrealismHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.hyperrealism.craft(true))\r\n  DOMCacheGetOrSet('quarkHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.quark.craft(true))\r\n  DOMCacheGetOrSet('challengeHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.challenge.craft(true))\r\n  DOMCacheGetOrSet('abyssHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.abyss.craft(true))\r\n  DOMCacheGetOrSet('acceleratorHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.accelerator.craft(true))\r\n  DOMCacheGetOrSet('acceleratorBoostHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.craft(true))\r\n  DOMCacheGetOrSet('multiplierHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.multiplier.craft(true))\r\n\r\n  DOMCacheGetOrSet('chronosHepteractCap').addEventListener('click', () => player.hepteractCrafts.chronos.expand())\r\n  DOMCacheGetOrSet('hyperrealismHepteractCap').addEventListener('click', () => player.hepteractCrafts.hyperrealism.expand())\r\n  DOMCacheGetOrSet('quarkHepteractCap').addEventListener('click', () => player.hepteractCrafts.quark.expand())\r\n  DOMCacheGetOrSet('challengeHepteractCap').addEventListener('click', () => player.hepteractCrafts.challenge.expand())\r\n  DOMCacheGetOrSet('abyssHepteractCap').addEventListener('click', () => player.hepteractCrafts.abyss.expand())\r\n  DOMCacheGetOrSet('acceleratorHepteractCap').addEventListener('click', () => player.hepteractCrafts.accelerator.expand())\r\n  DOMCacheGetOrSet('acceleratorBoostHepteractCap').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.expand())\r\n  DOMCacheGetOrSet('multiplierHepteractCap').addEventListener('click', () => player.hepteractCrafts.multiplier.expand())\r\n\r\n  DOMCacheGetOrSet('chronosHepteractAuto').addEventListener('click', () => player.hepteractCrafts.chronos.toggleAutomatic())\r\n  DOMCacheGetOrSet('hyperrealismHepteractAuto').addEventListener('click', () => player.hepteractCrafts.hyperrealism.toggleAutomatic())\r\n  DOMCacheGetOrSet('quarkHepteractAuto').addEventListener('click', () => player.hepteractCrafts.quark.toggleAutomatic())\r\n  DOMCacheGetOrSet('challengeHepteractAuto').addEventListener('click', () => player.hepteractCrafts.challenge.toggleAutomatic())\r\n  DOMCacheGetOrSet('abyssHepteractAuto').addEventListener('click', () => player.hepteractCrafts.abyss.toggleAutomatic())\r\n  DOMCacheGetOrSet('acceleratorHepteractAuto').addEventListener('click', () => player.hepteractCrafts.accelerator.toggleAutomatic())\r\n  DOMCacheGetOrSet('acceleratorBoostHepteractAuto').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.toggleAutomatic())\r\n  DOMCacheGetOrSet('multiplierHepteractAuto').addEventListener('click', () => player.hepteractCrafts.multiplier.toggleAutomatic())\r\n\r\n  DOMCacheGetOrSet('hepteractToQuark').addEventListener('mouseover', () => hepteractToOverfluxOrbDescription())\r\n  DOMCacheGetOrSet('hepteractToQuarkTrade').addEventListener('click', () => tradeHepteractToOverfluxOrb())\r\n  DOMCacheGetOrSet('hepteractToQuarkTradeMax').addEventListener('click', () => tradeHepteractToOverfluxOrb(true))\r\n  DOMCacheGetOrSet('hepteractToQuarkTradeAuto').addEventListener('click', () => toggleAutoBuyOrbs())\r\n  DOMCacheGetOrSet('overfluxPowder').addEventListener('mouseover', () => overfluxPowderDescription())\r\n  DOMCacheGetOrSet('powderDayWarp').addEventListener('click', () => overfluxPowderWarp(false))\r\n  DOMCacheGetOrSet('warpAuto').addEventListener('click', () => overfluxPowderWarp(true))\r\n\r\n  DOMCacheGetOrSet('hepteractAutoPercentageButton').addEventListener('click', () => toggleHepteractAutoPercentage())\r\n\r\n  // CORRUPTION TAB\r\n  //Part 0: Subtabs\r\n  DOMCacheGetOrSet('corrStatsBtn').addEventListener('click', () => changeSubTab('traits', { page: 0 }))\r\n  DOMCacheGetOrSet('corrLoadoutsBtn').addEventListener('click', () => changeSubTab('traits', { page: 1 }))\r\n\r\n  //Part 1: Displays\r\n  DOMCacheGetOrSet('corruptionDisplays').addEventListener('click', () => corruptionDisplay(10))\r\n  DOMCacheGetOrSet('corruptionCleanse').addEventListener('click', () => corruptionCleanseConfirm())\r\n  DOMCacheGetOrSet('corruptionCleanseConfirm').addEventListener('click', () => toggleCorruptionLevel(10, 999))\r\n\r\n  //Extra toggle\r\n  DOMCacheGetOrSet('ascensionAutoEnable').addEventListener('click', () => toggleAutoAscend(0))\r\n  DOMCacheGetOrSet('ascensionAutoToggle').addEventListener('click', () => toggleAutoAscend(1))\r\n\r\n  // SETTNGS TAB\r\n  // Part 0: Subtabs\r\n  const settingSubTabs = Array.from<HTMLElement>(document.querySelectorAll('[id^=\"switchSettingSubTab\"]'))\r\n  for (const subtab of settingSubTabs) {\r\n    subtab.addEventListener('click', () => changeSubTab('settings', { page: settingSubTabs.indexOf(subtab) }))\r\n  }\r\n\r\n  const t = Array.from(document.querySelectorAll<HTMLElement>('button.statsNerds'))\r\n  for (const s of t) {\r\n    s.addEventListener('click', (e) => displayStats(e.target as HTMLElement))\r\n  }\r\n\r\n  DOMCacheGetOrSet('summaryGeneration').addEventListener('click', () => generateExportSummary())\r\n\r\n  // Various functions\r\n  DOMCacheGetOrSet('exportgame').addEventListener('click', () => exportSynergism())\r\n  DOMCacheGetOrSet('saveStringInput').addEventListener('blur', e => updateSaveString(e.target as HTMLInputElement))\r\n  DOMCacheGetOrSet('savegame').addEventListener('click', () => saveSynergy(true))\r\n  DOMCacheGetOrSet('deleteGame').addEventListener('click', () => resetGame())\r\n  DOMCacheGetOrSet('preloadDeleteGame').addEventListener('click', () => reloadDeleteGame())\r\n  DOMCacheGetOrSet('promocodes').addEventListener('click', () => promocodesPrompt())\r\n  DOMCacheGetOrSet('addCode').addEventListener('click', () => promocodes('add'))\r\n  DOMCacheGetOrSet('addCode').addEventListener('mouseover', () => promocodesInfo('add'))\r\n  DOMCacheGetOrSet('addCodeOne').addEventListener('click', () => promocodes('add', 1))\r\n  DOMCacheGetOrSet('addCodeOne').addEventListener('mouseover', () => promocodesInfo('add'))\r\n  DOMCacheGetOrSet('dailyCode').addEventListener('click', () => promocodes('daily'))\r\n  DOMCacheGetOrSet('dailyCode').addEventListener('mouseover', () => promocodesInfo('daily'))\r\n  DOMCacheGetOrSet('timeCode').addEventListener('click', () => promocodes('time'))\r\n  DOMCacheGetOrSet('timeCode').addEventListener('mouseover', () => promocodesInfo('time'))\r\n  DOMCacheGetOrSet('historyTogglePerSecondButton').addEventListener('click', () => resetHistoryTogglePerSecond())\r\n  DOMCacheGetOrSet('resetHotkeys').addEventListener('click', () => resetHotkeys())\r\n  DOMCacheGetOrSet('notation').addEventListener('click', () => toggleAnnotation())\r\n  DOMCacheGetOrSet('iconSet').addEventListener('click', () => toggleIconSet(player.iconSet + 1))\r\n\r\n  // SHOP TAB\r\n\r\n  /*\r\n\r\nTODO: Fix this entire tab it's utter shit\r\n\r\n*/\r\n\r\n  // Part 1: The Settings\r\n  /*Respec The Upgrades*/ DOMCacheGetOrSet('resetShopUpgrades').addEventListener('click', () => resetShopUpgrades())\r\n  /*Toggle Shop Confirmations*/ DOMCacheGetOrSet('toggleConfirmShop').addEventListener('click', () => toggleShopConfirmation())\r\n  /*Toggle Shop Buy Max*/ DOMCacheGetOrSet('toggleBuyMaxShop').addEventListener('click', (event) => toggleBuyMaxShop(event))\r\n  /*Toggle Hide Permanent Maxed*/ DOMCacheGetOrSet('toggleHideShop').addEventListener('click', () => toggleHideShop())\r\n\r\n  // Part 2: Potions\r\n  /*Offering Potion*/\r\n  DOMCacheGetOrSet('offeringPotions').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\r\n  DOMCacheGetOrSet('offeringpotionowned').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\r\n  DOMCacheGetOrSet('buyofferingpotion').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\r\n  DOMCacheGetOrSet('useofferingpotion').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\r\n  DOMCacheGetOrSet('buyofferingpotion').addEventListener('click', () => buyShopUpgrades('offeringPotion'))\r\n  //DOMCacheGetOrSet('offeringPotions').addEventListener('click', () => buyShopUpgrades(\"offeringPotion\"))  //Allow clicking of image to buy also\r\n  DOMCacheGetOrSet('useofferingpotion').addEventListener('click', () => useConsumable('offeringPotion'))\r\n  DOMCacheGetOrSet('toggle42').addEventListener('click', () => {\r\n    player.autoPotionTimer = 0\r\n  })\r\n  /*Obtainium Potion*/\r\n  DOMCacheGetOrSet('obtainiumPotions').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\r\n  DOMCacheGetOrSet('obtainiumpotionowned').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\r\n  DOMCacheGetOrSet('buyobtainiumpotion').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\r\n  DOMCacheGetOrSet('useobtainiumpotion').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\r\n  DOMCacheGetOrSet('buyobtainiumpotion').addEventListener('click', () => buyShopUpgrades('obtainiumPotion'))\r\n  //DOMCacheGetOrSet('obtainiumPotions').addEventListener('click', () => buyShopUpgrades(\"obtainiumPotion\"))  //Allow clicking of image to buy also\r\n  DOMCacheGetOrSet('useobtainiumpotion').addEventListener('click', () => useConsumable('obtainiumPotion'))\r\n  DOMCacheGetOrSet('toggle43').addEventListener('click', () => {\r\n    player.autoPotionTimerObtainium = 0\r\n  })\r\n  /* Permanent Upgrade Images */\r\n  const shopKeys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\r\n  for (const key of shopKeys) {\r\n    const shopItem = shopData[key]\r\n    if (shopItem.type === shopUpgradeTypes.UPGRADE) {\r\n      DOMCacheGetOrSet(`${key}`).addEventListener('mouseover', () => shopDescriptions(key))\r\n      DOMCacheGetOrSet(`${key}Level`).addEventListener('mouseover', () => shopDescriptions(key))\r\n      DOMCacheGetOrSet(`${key}Button`).addEventListener('mouseover', () => shopDescriptions(key))\r\n      //DOMCacheGetOrSet(`${key}`).addEventListener('click', () => buyShopUpgrades(key))  //Allow clicking of image to buy also\r\n      DOMCacheGetOrSet(`${key}Button`).addEventListener('click', () => buyShopUpgrades(key))\r\n    }\r\n  }\r\n  DOMCacheGetOrSet('buySingularityQuarksButton').addEventListener('click', () => buyGoldenQuarks())\r\n  // SINGULARITY TAB\r\n  const singularityUpgrades = Object.keys(player.singularityUpgrades) as (keyof Player['singularityUpgrades'])[]\r\n  for (const key of singularityUpgrades) {\r\n    if (key === 'offeringAutomatic') {\r\n      continue\r\n    }\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('mouseover', () => player.singularityUpgrades[`${String(key)}`].updateUpgradeHTML())\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('click', (event) => player.singularityUpgrades[`${String(key)}`].buyLevel(event))\r\n  }\r\n  DOMCacheGetOrSet('actualSingularityUpgradeContainer').addEventListener('mouseover', () => shopMouseover(true))\r\n  DOMCacheGetOrSet('actualSingularityUpgradeContainer').addEventListener('mouseout', () => shopMouseover(false))\r\n\r\n  // Octeract Upgrades\r\n  const octeractUpgrades = Object.keys(player.octeractUpgrades) as (keyof Player['octeractUpgrades'])[]\r\n  for (const key of octeractUpgrades) {\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('mouseover', () => player.octeractUpgrades[`${String(key)}`].updateUpgradeHTML())\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('click', (event) => player.octeractUpgrades[`${String(key)}`].buyLevel(event))\r\n  }\r\n\r\n  DOMCacheGetOrSet('octeractUpgradeContainer').addEventListener('mouseover', () => shopMouseover(true))\r\n  DOMCacheGetOrSet('octeractUpgradeContainer').addEventListener('mouseout', () => shopMouseover(false))\r\n\r\n  // EXALT\r\n  const singularityChallenges = Object.keys(player.singularityChallenges) as (keyof Player['singularityChallenges'])[]\r\n  for (const key of singularityChallenges) {\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('mouseover', () => player.singularityChallenges[`${String(key)}`].updateChallengeHTML())\r\n    DOMCacheGetOrSet(`${String(key)}`).addEventListener('click', () => player.singularityChallenges[`${String(key)}`].challengeEntryHandler())\r\n  }\r\n\r\n  //Toggle subtabs of Singularity tab\r\n  for (let index = 0; index < 5; index++) {\r\n    DOMCacheGetOrSet(`toggleSingularitySubTab${index+1}`).addEventListener('click', () => changeSubTab('singularity', { page: index }))\r\n  }\r\n\r\n  const tabs = document.querySelectorAll<HTMLElement>('#tabrow > button')\r\n  tabs.forEach(b => b.addEventListener('click', () => changeTabColor()))\r\n\r\n  // EVENT TAB (Replace as events are created)\r\n  DOMCacheGetOrSet('unsmith').addEventListener('click', () => clickSmith())\r\n\r\n  // Import button\r\n  DOMCacheGetOrSet('importfile').addEventListener('change', async e => {\r\n    const element = e.target as HTMLInputElement\r\n    const file = element.files![0]\r\n    let save = ''\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Blob/text\r\n    // not available in (bad) browsers like Safari 11\r\n    if (typeof Blob.prototype.text === 'function') {\r\n      save = await file.text()\r\n    } else {\r\n      const reader = new FileReader()\r\n      reader.readAsText(file)\r\n      const text = await new Promise<string>(res => {\r\n        reader.addEventListener('load', () => res(reader.result!.toString()))\r\n      })\r\n\r\n      save = text\r\n    }\r\n\r\n    element.value = ''\r\n    handleLastModified(file.lastModified)\r\n\r\n    return importSynergism(save)\r\n  })\r\n\r\n  for (let i = 1; i <= 5; i++) {\r\n    DOMCacheGetOrSet(`switchTheme${i}`).addEventListener('click', () => toggleTheme(false, i, true))\r\n  }\r\n\r\n  DOMCacheGetOrSet('saveType').addEventListener('click', async (event) => {\r\n    const element = event.target as HTMLInputElement\r\n\r\n    if (!element.checked) {\r\n      localStorage.removeItem('copyToClipboard')\r\n      event.stopPropagation()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    const confirmed = await Confirm(i18next.t('save.saveToClipboard'))\r\n\r\n    if (confirmed) {\r\n      element.checked = !element.checked\r\n      localStorage.setItem('copyToClipboard', '')\r\n    } else {\r\n      localStorage.removeItem('copyToClipboard')\r\n    }\r\n  })\r\n\r\n  // Window\r\n  window.addEventListener('error', imgErrorHandler, { capture: true })\r\n}\r\n", "import { format, player, formatTimeShort } from './Synergism'\r\nimport { Alert, Prompt } from './UpdateHTML'\r\nimport type { IUpgradeData } from './DynamicUpgrade'\r\nimport { DynamicUpgrade } from './DynamicUpgrade'\r\nimport type { Player } from './types/Synergism'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { octeractGainPerSecond } from './Calculate'\r\nimport i18next from 'i18next'\r\n\r\nexport interface IOcteractData extends Omit<IUpgradeData, 'name' | 'description'> {\r\n    costFormula (this: void, level: number, baseCost: number): number\r\n    octeractsInvested?: number\r\n    qualityOfLife?: boolean\r\n}\r\n\r\nexport class OcteractUpgrade extends DynamicUpgrade {\r\n  readonly costFormula: (level: number, baseCost: number) => number\r\n  public octeractsInvested = 0\r\n  public qualityOfLife: boolean\r\n\r\n  constructor(data: IOcteractData, key: string) {\r\n    const name = i18next.t(`octeract.data.${key}.name`)\r\n    const description = i18next.t(`octeract.data.${key}.description`)\r\n    super({ ... data, name, description })\r\n    this.costFormula = data.costFormula\r\n    this.octeractsInvested = data.octeractsInvested ?? 0\r\n    this.qualityOfLife = data.qualityOfLife ?? false\r\n  }\r\n\r\n  getCostTNL(): number {\r\n\r\n    if (this.level === this.maxLevel) {\r\n      return 0\r\n    }\r\n\r\n    return this.costFormula(this.level, this.costPerLevel)\r\n  }\r\n\r\n  /**\r\n     * Buy levels up until togglebuy or maxed.\r\n     * @returns An alert indicating cannot afford, already maxed or purchased with how many\r\n     *          levels purchased\r\n     */\r\n  public async buyLevel(event: MouseEvent): Promise<void> {\r\n    let purchased = 0\r\n    let maxPurchasable = 1\r\n    let OCTBudget = player.wowOcteracts\r\n\r\n    if (event.shiftKey) {\r\n      maxPurchasable = 1000000\r\n      const buy = Number(await Prompt(`${i18next.t('octeract.buyLevel.buyPrompt', { n: format(player.wowOcteracts, 0, true) })}`))\r\n\r\n      if (isNaN(buy) || !isFinite(buy) || !Number.isInteger(buy)) { // nan + Infinity checks\r\n        return Alert(i18next.t('general.validation.finite'))\r\n      }\r\n\r\n      if (buy === -1) {\r\n        OCTBudget = player.wowOcteracts\r\n      } else if (buy <= 0) {\r\n        return Alert(i18next.t('octeract.buyLevel.cancelPurchase'))\r\n      } else {\r\n        OCTBudget = buy\r\n      }\r\n      OCTBudget = Math.min(player.wowOcteracts, OCTBudget)\r\n    }\r\n\r\n    if (this.maxLevel > 0) {\r\n      maxPurchasable = Math.min(maxPurchasable, this.maxLevel - this.level)\r\n    }\r\n\r\n    if (maxPurchasable === 0) {\r\n      return Alert(i18next.t('octeract.buyLevel.alreadyMax'))\r\n    }\r\n\r\n    while (maxPurchasable > 0) {\r\n      const cost = this.getCostTNL()\r\n      if (player.wowOcteracts < cost || OCTBudget < cost) {\r\n        break\r\n      } else {\r\n        player.wowOcteracts -= cost\r\n        OCTBudget -= cost\r\n        this.octeractsInvested += cost\r\n        this.level += 1\r\n        purchased += 1\r\n        maxPurchasable -= 1\r\n      }\r\n    }\r\n\r\n    if (purchased === 0) {\r\n      return Alert(i18next.t('octeract.buyLevel.cannotAfford'))\r\n    }\r\n    if (purchased > 1) {\r\n      return Alert(`${i18next.t('octeract.buyLevel.multiBuy', { n: format(purchased) })}`)\r\n    }\r\n\r\n    this.updateUpgradeHTML()\r\n  }\r\n\r\n  /**\r\n     * Given an upgrade, give a concise information regarding its data.\r\n     * @returns A string that details the name, description, level statistic, and next level cost.\r\n     */\r\n  toString(): string {\r\n    const costNextLevel = this.getCostTNL()\r\n    const maxLevel = this.maxLevel === -1\r\n      ? ''\r\n      : `/${format(this.maxLevel, 0, true)}`\r\n    const isMaxLevel = this.maxLevel === this.level\r\n    const color = isMaxLevel ? 'plum' : 'white'\r\n\r\n    let freeLevelInfo = this.freeLevels > 0 ?\r\n      `<span style=\"color: orange\"> [+${format(this.freeLevels, 1, true)}]</span>` : ''\r\n\r\n    if (this.freeLevels > this.level) {\r\n      freeLevelInfo = freeLevelInfo + `<span style=\"color: var(--maroon-text-color)\">${i18next.t('general.softCapped')}</span>`\r\n    }\r\n\r\n    const isAffordable = costNextLevel <= player.wowOcteracts\r\n    let affordTime = ''\r\n    if (!isMaxLevel && !isAffordable) {\r\n      const octPerSecond = octeractGainPerSecond()\r\n      affordTime = octPerSecond > 0 ? formatTimeShort((costNextLevel - player.wowOcteracts) / octPerSecond) : `${i18next.t('general.infinity')}`\r\n    }\r\n    const affordableInfo = isMaxLevel ? `<span style=\"color: plum\"> ${i18next.t('general.maxed')}</span>` :\r\n      isAffordable ? `<span style=\"color: var(--green-text-color)\"> ${i18next.t('general.affordable')}</span>` :\r\n        `<span style=\"color: yellow\"> ${i18next.t('octeract.toString.becomeAffordable', { n: affordTime })}</span>`\r\n\r\n    return `<span style=\"color: gold\">${this.name}</span>\r\n                <span style=\"color: lightblue\">${this.description}</span>\r\n                <span style=\"color: ${color}\"> ${i18next.t('general.level')} ${format(this.level, 0, true)}${maxLevel}${freeLevelInfo}</span>\r\n                <span style=\"color: gold\">${this.getEffect().desc}</span>\r\n                ${i18next.t('octeract.toString.costNextLevel')} ${format(costNextLevel, 2, true, true, true)} Octeracts${affordableInfo}\r\n                ${i18next.t('general.spent')} Octeracts: ${format(this.octeractsInvested, 2, true, true, true)}`\r\n  }\r\n\r\n  public updateUpgradeHTML(): void {\r\n    DOMCacheGetOrSet('singularityOcteractsMultiline').innerHTML = this.toString()\r\n    DOMCacheGetOrSet('octeractAmount').innerHTML = i18next.t('octeract.amount', { octeracts: format(player.wowOcteracts, 2, true, true, true) })\r\n  }\r\n\r\n  public computeFreeLevelSoftcap(): number {\r\n    return Math.min(this.level, this.freeLevels) + Math.sqrt(Math.max(0, this.freeLevels - this.level))\r\n  }\r\n\r\n  public actualTotalLevels(): number {\r\n    if (player.singularityChallenges.noOcteracts.enabled && !this.qualityOfLife) {\r\n      return 0\r\n    }\r\n    const actualFreeLevels = this.computeFreeLevelSoftcap()\r\n    const linearLevels = this.level + actualFreeLevels\r\n    return linearLevels // There is currently no 'improvement' to oct free upgrades.\r\n  }\r\n\r\n  public getEffect(): { bonus: number | boolean, desc: string } {\r\n    return this.effect(this.actualTotalLevels())\r\n  }\r\n\r\n  public refund(): void {\r\n    player.wowOcteracts += this.octeractsInvested\r\n    this.level = 0\r\n    this.octeractsInvested = 0\r\n  }\r\n\r\n}\r\n\r\nexport const octeractData: Record<keyof Player['octeractUpgrades'], IOcteractData> = {\r\n  octeractStarter: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * (level + 1)\r\n    },\r\n    maxLevel: 1,\r\n    costPerLevel: 1e-15,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractStarter.effect', { n: (n > 0) ? '' : 'not' })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractGain: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * (Math.pow(level + 1, 6) - Math.pow(level, 6))\r\n    },\r\n    maxLevel: 1e8,\r\n    costPerLevel: 1e-8,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.011 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractGain.effect', { n: format(n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractGain2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(10, Math.pow(level, 0.5) / 3)\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractGain2.effect', { n: format(n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractQuarkGain: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      if (level < 1000) {\r\n        return baseCost * (Math.pow(level + 1, 7) - Math.pow(level, 7))\r\n      } else {\r\n        const fasterMult = (level >= 10000) ? (Math.pow(10, (level - 10000) / 250)) : 1\r\n        const fasterMult2 = (level >= 15000) ? (Math.pow(10, (level - 15000) / 250)) : 1\r\n        return baseCost * (Math.pow(1001, 7) - Math.pow(1000, 7)) * Math.pow(10, level / 1000) * fasterMult * fasterMult2\r\n      }\r\n    },\r\n    maxLevel: 20000,\r\n    costPerLevel: 1e-7,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.011 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractQuarkGain.effect', { n: format(1.1*n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractQuarkGain2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e20, level)\r\n    },\r\n    maxLevel: 5,\r\n    costPerLevel: 1e22,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractQuarkGain2.effect', { n: n > 0 ? '' : 'NOT' })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractCorruption: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(10, level * 10)\r\n    },\r\n    maxLevel: 2,\r\n    costPerLevel: 10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractCorruption.effect', { n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractGQCostReduce: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(2, level)\r\n    },\r\n    maxLevel: 50,\r\n    costPerLevel: 1e-9,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 - n/100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractGQCostReduce.effect', { n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractExportQuarks: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 100,\r\n    costPerLevel: 1,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 4 * n/10 + 1,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractExportQuarks.effect', { n: format(40 * n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedDaily: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1.6, level)\r\n    },\r\n    maxLevel: 50,\r\n    costPerLevel: 1e-3,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedDaily.effect', { n })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  octeractImprovedDaily2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(2, level)\r\n    },\r\n    maxLevel: 50,\r\n    costPerLevel: 1e-2,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedDaily2.effect', { n })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  octeractImprovedDaily3: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(20, level)\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e20,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedDaily3.effect', { n: `${n} +${0.5 * n}%` })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  octeractImprovedQuarkHept: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e6, level)\r\n    },\r\n    maxLevel: 3,\r\n    costPerLevel: 1/10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n / 100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedQuarkHept.effect', { n: format(n/100, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedGlobalSpeed: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 1000,\r\n    costPerLevel: 1e-5,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n/100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedGlobalSpeed.effect', { n: format(n, 0, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedAscensionSpeed: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e9, level / 100)\r\n    },\r\n    maxLevel: 100,\r\n    costPerLevel: 100,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n / 2000,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedAscensionSpeed.effect', { n: format(n/20, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedAscensionSpeed2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e12, level / 250)\r\n    },\r\n    maxLevel: 250,\r\n    costPerLevel: 1e5,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n / 2000,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedAscensionSpeed2.effect', { n: format(n/50, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedFree: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 1,\r\n    costPerLevel: 100,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n > 0,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedFree.effect', { n: (n > 0) ? '' : 'NOT' })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedFree2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 1,\r\n    costPerLevel: 1e7,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 0.05 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedFree2.effect', { n: format(n / 20, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedFree3: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 1,\r\n    costPerLevel: 1e17,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 0.05 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedFree3.effect', { n: format(n/20, 2, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractImprovedFree4: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e20, level / 40)\r\n    },\r\n    maxLevel: 40,\r\n    costPerLevel: 1e20,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 0.001 * n + ((n > 0)? 0.01: 0),\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractImprovedFree4.effect', { n: format(0.001 * n + ((n > 0)? 0.01: 0), 3, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractSingUpgradeCap: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e3, level)\r\n    },\r\n    maxLevel: 10,\r\n    costPerLevel: 1e10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractSingUpgradeCap.effect', { n })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  octeractOfferings1: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      if (level < 25) {\r\n        return baseCost * Math.pow(level + 1, 5)\r\n      } else {\r\n        return baseCost * 1e15 * Math.pow(10, level / 25 - 1)\r\n      }\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e-15,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractOfferings1.effect', { n: format(n) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractObtainium1: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      if (level < 25) {\r\n        return baseCost * Math.pow(level + 1, 5)\r\n      } else {\r\n        return baseCost * 1e15 * Math.pow(10, level / 25 - 1)\r\n      }\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e-15,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 0.01 * n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractObtainium1.effect', { n: format(n) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractAscensions: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(level + 1, 3)\r\n    },\r\n    maxLevel: 1000000,\r\n    costPerLevel: 1,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (1 + n / 100) * (1 + 2 * Math.floor(n / 10) / 100),\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAscensions.effect', { n: format((100 + n) * (1 + 2 * Math.floor(n/10) / 100) - 100, 1, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractAscensions2: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(10, Math.pow(level, 0.5) / 3)\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e12,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: (1 + n / 100) * (1 + 2 * Math.floor(n / 10) / 100),\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAscensions2.effect', { n: format((100 + n) * (1 + 2 * Math.floor(n/10) / 100) - 100, 1, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractAscensionsOcteractGain: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(40, level)\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1000,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n / 100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAscensionsOcteractGain.effect', { n: format(n, 1, true) })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractFastForward: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(1e8, level)\r\n    },\r\n    maxLevel: 2,\r\n    costPerLevel: 1e8,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractFastForward.effect', { n100: 100 * n, n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractAutoPotionSpeed: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(10, level)\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e-10,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 4 * n / 100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAutoPotionSpeed.effect', { n: 4 * n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractAutoPotionEfficiency: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      return baseCost * Math.pow(10, level)\r\n    },\r\n    maxLevel: 100,\r\n    costPerLevel: 1e-10 * Math.pow(10, 0.5),\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 1 + 2 * n / 100,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAutoPotionEfficiency.effect', { n: 2 * n })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  octeractOneMindImprover: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      const fasterMult = (level >= 10) ? (Math.pow(1e3, level - 10)) : 1\r\n      return baseCost * Math.pow(1e5, level) * fasterMult\r\n    },\r\n    maxLevel: 16,\r\n    costPerLevel: 1e25,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: 0.55 + n / 150,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractOneMindImprover.effect', { n: format(0.55 + n / 150, 3, true) })\r\n        }\r\n      }\r\n    },\r\n    qualityOfLife: true\r\n  },\r\n  octeractAmbrosiaLuck: {\r\n    costFormula: (level: number, baseCost: number) => {\r\n      const useLevel = level + 1\r\n      return baseCost * (Math.pow(10, useLevel) - Math.pow(10, useLevel - 1))\r\n    },\r\n    maxLevel: -1,\r\n    costPerLevel: 1e60 / 9,\r\n    effect: (n: number) => {\r\n      return {\r\n        bonus: n,\r\n        get desc () {\r\n          return i18next.t('octeract.data.octeractAmbrosiaLuck.effect', { n: format(n) })\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n", "import i18next from 'i18next'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport { calculateGoldenQuarkGain } from './Calculate'\r\nimport { singularity } from './Reset'\r\nimport { player } from './Synergism'\r\nimport type { Player } from './types/Synergism'\r\nimport { Alert, Confirm } from './UpdateHTML'\r\nimport { toOrdinal } from './Utility'\r\n\r\nexport interface ISingularityChallengeData {\r\n    baseReq: number\r\n    maxCompletions: number\r\n    unlockSingularity: number\r\n    HTMLTag: string\r\n    singularityRequirement: (baseReq: number, completions: number) => number\r\n    effect: (n: number) => Record<string, number | boolean>\r\n    completions?: number\r\n    enabled?: boolean\r\n    highestSingularityCompleted?: number\r\n}\r\n\r\nexport class SingularityChallenge {\r\n  public name\r\n  public description\r\n  public rewardDescription\r\n  public baseReq\r\n  public completions\r\n  public maxCompletions\r\n  public unlockSingularity\r\n  public HTMLTag\r\n  public highestSingularityCompleted\r\n  public enabled\r\n  public singularityRequirement\r\n  public effect\r\n  public constructor(data: ISingularityChallengeData, key: string) {\r\n    const name = i18next.t(`singularityChallenge.data.${key}.name`)\r\n    const description = i18next.t(`singularityChallenge.data.${key}.description`)\r\n    const rewardDescription = i18next.t(`singularityChallenge.data.${key}.rewardDescription`)\r\n    this.name = name\r\n    this.description = description\r\n    this.rewardDescription = rewardDescription\r\n    this.baseReq = data.baseReq\r\n    this.completions = data.completions ?? 0\r\n    this.maxCompletions = data.maxCompletions\r\n    this.unlockSingularity = data.unlockSingularity\r\n    this.HTMLTag = data.HTMLTag\r\n    this.highestSingularityCompleted = data.highestSingularityCompleted ?? 0\r\n    this.enabled = data.enabled ?? false\r\n    this.singularityRequirement = data.singularityRequirement\r\n    this.effect = data.effect\r\n\r\n    this.updateIconHTML()\r\n    this.updateChallengeCompletions()\r\n  }\r\n\r\n  public computeSingularityRquirement() {\r\n    return this.singularityRequirement(this.baseReq, this.completions)\r\n  }\r\n\r\n  public updateChallengeCompletions() {\r\n    let updateVal = 0\r\n    while (this.singularityRequirement(this.baseReq, updateVal) <= this.highestSingularityCompleted) {\r\n      updateVal += 1\r\n    }\r\n\r\n    this.completions = Math.min(this.maxCompletions, updateVal)\r\n  }\r\n\r\n  public challengeEntryHandler() {\r\n    if (!this.enabled) {\r\n      return this.enableChallenge()\r\n    } else {\r\n      return this.exitChallenge((player.runelevels[6] > 0))\r\n    }\r\n  }\r\n\r\n  public async enableChallenge() {\r\n    if (player.highestSingularityCount < this.unlockSingularity) {\r\n      return Alert(i18next.t('singularityChallenge.enterChallenge.lowSingularity'))\r\n    }\r\n    const confirmation = await(Confirm(i18next.t('singularityChallenge.enterChallenge.confirmation', { name: this.name })))\r\n\r\n    if (!confirmation) {\r\n      return Alert(i18next.t('singularityChallenge.enterChallenge.decline'))\r\n    }\r\n\r\n    if (!player.insideSingularityChallenge) {\r\n      const setSingularity = this.computeSingularityRquirement()\r\n      const holdSingTimer = player.singularityCounter\r\n      const holdQuarkExport = player.quarkstimer\r\n      const holdGoldenQuarkExport = player.goldenQuarksTimer\r\n      const goldenQuarkGain = calculateGoldenQuarkGain()\r\n      const currentGQ = player.goldenQuarks\r\n      this.enabled = true\r\n      player.insideSingularityChallenge = true\r\n      await singularity(setSingularity)\r\n      player.singularityCounter = holdSingTimer\r\n      player.goldenQuarks = currentGQ + goldenQuarkGain\r\n      player.quarkstimer = holdQuarkExport\r\n      player.goldenQuarksTimer = holdGoldenQuarkExport\r\n\r\n      this.updateChallengeHTML()\r\n      return Alert(i18next.t('singularityChallenge.enterChallenge.acceptSuccess', { name: this.name, tier: this.completions + 1, singReq: this.computeSingularityRquirement() }))\r\n    } else {\r\n      return Alert(i18next.t('singularityChallenge.exitChallenge.acceptFailure'))\r\n    }\r\n  }\r\n\r\n  public async exitChallenge(success: boolean) {\r\n    if (!success) {\r\n      const extra = (player.runelevels[6] === 0) ? i18next.t('singularityChallenge.exitChallenge.incompleteWarning') : ''\r\n      const confirmation = await(Confirm(i18next.t('singularityChallenge.exitChallenge.confirmation', { name: this.name, tier: this.completions + 1, warning: extra })))\r\n      if (!confirmation) {\r\n        return Alert(i18next.t('singularityChallenge.exitChallenge.decline'))\r\n      }\r\n\r\n    }\r\n\r\n    this.enabled = false\r\n    player.insideSingularityChallenge = false\r\n    const highestSingularityHold = player.highestSingularityCount\r\n    const holdSingTimer = player.singularityCounter\r\n    const holdQuarkExport = player.quarkstimer\r\n    const holdGoldenQuarkExport = player.goldenQuarksTimer\r\n    this.updateIconHTML()\r\n    if (success) {\r\n      this.highestSingularityCompleted = player.singularityCount\r\n      this.updateChallengeCompletions()\r\n      await singularity(highestSingularityHold)\r\n      player.singularityCounter = holdSingTimer\r\n      return Alert(i18next.t('singularityChallenge.exitChallenge.acceptSuccess', { tier: toOrdinal(this.completions), name: this.name }))\r\n    } else {\r\n      await singularity(highestSingularityHold)\r\n      player.singularityCounter = holdSingTimer\r\n      player.quarkstimer = holdQuarkExport\r\n      player.goldenQuarksTimer = holdGoldenQuarkExport\r\n      return Alert(i18next.t('singularityChallenge.exitChallenge.acceptFailure'))\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Given a Singularity Challenge, give a concise information regarding its data.\r\n     * @returns A string that details the name, description, metadata.\r\n     */\r\n  toString(): string {\r\n\r\n    const color = (this.completions === this.maxCompletions) ? 'var(--orchid-text-color)' : 'white'\r\n    const enabled = (this.enabled) ? `<span style=\"color: var(--red-text-color)\">${i18next.t('general.enabled')}</span>` : ''\r\n    return `<span style=\"color: gold\">${this.name}</span> ${enabled}\r\n                <span style=\"color: lightblue\">${this.description}</span>\r\n                <span style=\"color: pink\">${i18next.t('singularityChallenge.toString.canEnter', { unlockSing: this.unlockSingularity, highestSing: player.highestSingularityCount })}</span>\r\n                ${i18next.t('singularityChallenge.toString.tiersCompleted')}: <span style=\"color: ${color}\">${this.completions}/${this.maxCompletions}</span>\r\n                <span style=\"color: gold\">${i18next.t('singularityChallenge.toString.currentTierSingularity')} <span style=\"color: var(--orchid-text-color)\">${this.singularityRequirement(this.baseReq, this.completions)}</span></span>\r\n                <span>${this.rewardDescription}</span>`\r\n  }\r\n\r\n  public updateChallengeHTML(): void {\r\n    DOMCacheGetOrSet('singularityChallengesMultiline').innerHTML = this.toString()\r\n  }\r\n\r\n  public updateIconHTML(): void {\r\n    const color = (this.enabled) ? 'orchid' : ''\r\n    DOMCacheGetOrSet(`${this.HTMLTag}`).style.backgroundColor = color\r\n  }\r\n\r\n  public get rewards() {\r\n    return this.effect(this.completions)\r\n  }\r\n\r\n}\r\n\r\nexport const singularityChallengeData: Record<keyof Player['singularityUpgrades'], ISingularityChallengeData> = {\r\n  noSingularityUpgrades: {\r\n    baseReq: 1,\r\n    maxCompletions: 30,\r\n    unlockSingularity: 25,\r\n    HTMLTag: 'noSingularityUpgrades',\r\n    singularityRequirement: (baseReq: number, completions: number) => {\r\n      return baseReq + 8 * completions\r\n    },\r\n    effect: (n: number) => {\r\n      return {\r\n        cubes: 1 + 0.5 * n,\r\n        goldenQuarks: 1 + 0.12 * +(n > 0),\r\n        shopUpgrade: (n >= 20)\r\n      }\r\n    }\r\n  },\r\n  oneChallengeCap: {\r\n    baseReq: 10,\r\n    maxCompletions: 25,\r\n    unlockSingularity: 40,\r\n    HTMLTag: 'oneChallengeCap',\r\n    singularityRequirement: (baseReq: number, completions: number) => {\r\n      return baseReq + 11 * completions\r\n    },\r\n    effect: (n: number) => {\r\n      return {\r\n        corrScoreIncrease: 0.03 * n,\r\n        capIncrease: 3 * +(n > 0),\r\n        freeCorruptionLevel: (n >= 20)\r\n      }\r\n    }\r\n  },\r\n  noOcteracts: {\r\n    baseReq: 75,\r\n    maxCompletions: 10,\r\n    unlockSingularity: 100,\r\n    HTMLTag: 'noOcteracts',\r\n    singularityRequirement: (baseReq: number, completions: number) => {\r\n      return baseReq + 13 * completions\r\n    },\r\n    effect: (n: number) => {\r\n      return {\r\n        octeractPow: 0.02 * n,\r\n        offeringBonus: (n > 0),\r\n        obtainiumBonus: (n === 10)\r\n      }\r\n    }\r\n  },\r\n  limitedAscensions: {\r\n    baseReq: 10,\r\n    maxCompletions: 25,\r\n    unlockSingularity: 50,\r\n    HTMLTag: 'limitedAscensions',\r\n    singularityRequirement: (baseReq: number, completions: number) => {\r\n      return baseReq + 10 * completions\r\n    },\r\n    effect: (n: number) => {\r\n      return {\r\n        ascensionSpeedMult: 0.1 * n / 100,\r\n        hepteractCap: (n > 0),\r\n        calculatorUnlock: (n >= 25)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n", "import { player, resetCheck, blankSave } from './Synergism'\r\nimport { testing } from './Config'\r\nimport type { Player } from './types/Synergism'\r\nimport Decimal from 'break_infinity.js'\r\nimport { calculateMaxRunes, calculateTimeAcceleration } from './Calculate'\r\nimport { buyResearch } from './Research'\r\nimport { c15RewardUpdate } from './Statistics'\r\nimport type { LegacyShopUpgrades, PlayerSave } from './types/LegacySynergism'\r\nimport { padArray } from './Utility'\r\nimport { AbyssHepteract, AcceleratorBoostHepteract, AcceleratorHepteract, ChallengeHepteract, ChronosHepteract, createHepteract, HyperrealismHepteract, MultiplierHepteract, QuarkHepteract } from './Hepteracts'\r\nimport { WowCubes, WowHypercubes, WowPlatonicCubes, WowTesseracts } from './CubeExperimental'\r\nimport { Alert } from './UpdateHTML'\r\nimport { getQuarkInvestment, shopData } from './Shop'\r\nimport type { ISingularityData } from './singularity'\r\nimport { singularityData, SingularityUpgrade } from './singularity'\r\nimport type { IOcteractData } from './Octeracts'\r\nimport { octeractData, OcteractUpgrade } from './Octeracts'\r\nimport type { ISingularityChallengeData } from './SingularityChallenges'\r\nimport { SingularityChallenge, singularityChallengeData } from './SingularityChallenges'\r\nimport i18next from 'i18next'\r\n\r\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\r\n\r\n/**\r\n * Given player data, it checks, on load if variables are undefined\r\n * or set incorrectly, and corrects it. This should be where all new\r\n * variable declarations for `player` should go!\r\n * @param data\r\n */\r\nexport const checkVariablesOnLoad = (data: PlayerSave) => {\r\n  if (data.currentChallenge?.transcension === undefined) {\r\n    player.currentChallenge = {\r\n      transcension: 0,\r\n      reincarnation: 0,\r\n      ascension: 0\r\n    }\r\n  }\r\n\r\n  data.shopUpgrades ??= { ...blankSave.shopUpgrades }\r\n  data.ascStatToggles ??= { ...blankSave.ascStatToggles }\r\n\r\n  if (typeof data.promoCodeTiming === 'object' && data.promoCodeTiming != null) {\r\n    for (const key of Object.keys(data.promoCodeTiming)) {\r\n      const k = key as keyof typeof data.promoCodeTiming\r\n      player.promoCodeTiming[k] = data.promoCodeTiming[k]\r\n    }\r\n  } else {\r\n    player.promoCodeTiming.time = Date.now() - (60 * 1000 * 15)\r\n  }\r\n\r\n  // backwards compatibility for v1.0101 (and possibly older) saves\r\n  if (!Array.isArray(data.challengecompletions) && data.challengecompletions != null) {\r\n    player.challengecompletions = Object.values(data.challengecompletions)\r\n    padArray(player.challengecompletions, 0, blankSave.challengecompletions.length)\r\n  }\r\n\r\n  // backwards compatibility for v1.0101 (and possibly older) saves\r\n  if (!Array.isArray(data.highestchallengecompletions)) {\r\n    // if highestchallengecompletions is every added onto, this will need to be padded.\r\n    player.highestchallengecompletions = Object.values(data.highestchallengecompletions as unknown as object) as number[]\r\n  }\r\n\r\n  if (data.wowCubes === undefined) {\r\n    player.wowCubes = new WowCubes()\r\n    player.wowTesseracts = new WowTesseracts(0)\r\n    player.wowHypercubes = new WowHypercubes(0)\r\n    player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  }\r\n  if (data.shoptoggles?.reincarnate === undefined) {\r\n    player.shoptoggles.reincarnate = true\r\n  }\r\n  if (data.ascendBuilding1 === undefined) {\r\n    player.ascendBuilding1 = {\r\n      cost: 1,\r\n      owned: 0,\r\n      generated: new Decimal('0'),\r\n      multiplier: 0.01\r\n    }\r\n    player.ascendBuilding2 = {\r\n      cost: 10,\r\n      owned: 0,\r\n      generated: new Decimal('0'),\r\n      multiplier: 0.01\r\n    }\r\n    player.ascendBuilding3 = {\r\n      cost: 100,\r\n      owned: 0,\r\n      generated: new Decimal('0'),\r\n      multiplier: 0.01\r\n    }\r\n    player.ascendBuilding4 = {\r\n      cost: 1000,\r\n      owned: 0,\r\n      generated: new Decimal('0'),\r\n      multiplier: 0.01\r\n    }\r\n    player.ascendBuilding5 = {\r\n      cost: 10000,\r\n      owned: 0,\r\n      generated: new Decimal('0'),\r\n      multiplier: 0.01\r\n    }\r\n  }\r\n  if (data.tesseractbuyamount === undefined) {\r\n    player.tesseractbuyamount = 1\r\n  }\r\n  if (data.tesseractBlessings === undefined) {\r\n    player.tesseractBlessings = {\r\n      accelerator: 0,\r\n      multiplier: 0,\r\n      offering: 0,\r\n      runeExp: 0,\r\n      obtainium: 0,\r\n      antSpeed: 0,\r\n      antSacrifice: 0,\r\n      antELO: 0,\r\n      talismanBonus: 0,\r\n      globalSpeed: 0\r\n    }\r\n    player.hypercubeBlessings = {\r\n      accelerator: 0,\r\n      multiplier: 0,\r\n      offering: 0,\r\n      runeExp: 0,\r\n      obtainium: 0,\r\n      antSpeed: 0,\r\n      antSacrifice: 0,\r\n      antELO: 0,\r\n      talismanBonus: 0,\r\n      globalSpeed: 0\r\n    }\r\n  }\r\n  if (data.prototypeCorruptions === undefined) {\r\n    player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  }\r\n  if (data.constantUpgrades === undefined) {\r\n    player.ascendShards = new Decimal('0')\r\n    player.constantUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  }\r\n  if (data.roombaResearchIndex === undefined) {\r\n    player.roombaResearchIndex = 0\r\n  }\r\n  if (data.history === undefined) {\r\n    player.history = { ants: [], ascend: [], reset: [], singularity: [] }\r\n  }\r\n  if (data.autoChallengeRunning === undefined) {\r\n    player.autoChallengeRunning = false\r\n    player.autoChallengeIndex = 1\r\n    player.autoChallengeToggles = [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false]\r\n    player.autoChallengeStartExponent = 10\r\n    player.autoChallengeTimer = {\r\n      start: 10,\r\n      exit: 2,\r\n      enter: 2\r\n    }\r\n  }\r\n  if (data.autoAscend === undefined) {\r\n    player.autoAscend = false\r\n    player.autoAscendMode = 'c10Completions'\r\n    player.autoAscendThreshold = 1\r\n  }\r\n  if (data.runeBlessingLevels === undefined) {\r\n    player.runeBlessingLevels = [0, 0, 0, 0, 0, 0]\r\n    player.runeSpiritLevels = [0, 0, 0, 0, 0, 0]\r\n    player.runeBlessingBuyAmount = 0\r\n    player.runeSpiritBuyAmount = 0\r\n  }\r\n  if (data.autoBuyFragment === undefined) {\r\n    player.autoBuyFragment = false\r\n    player.saveOfferingToggle = false\r\n  }\r\n\r\n  if (data.autoTesseracts === undefined) {\r\n    player.autoTesseracts = [false, false, false, false, false, false]\r\n  }\r\n\r\n  if (data.autoOpenCubes === undefined) {\r\n    player.autoOpenCubes = false\r\n    player.openCubes = 0\r\n  }\r\n  if (data.autoOpenTesseracts === undefined) {\r\n    player.autoOpenTesseracts = false\r\n    player.openTesseracts = 0\r\n  }\r\n  if (data.autoOpenHypercubes === undefined) {\r\n    player.autoOpenHypercubes = false\r\n    player.openHypercubes = 0\r\n  }\r\n  if (data.autoOpenPlatonicsCubes === undefined) {\r\n    player.autoOpenPlatonicsCubes = false\r\n    player.openPlatonicsCubes = 0\r\n  }\r\n\r\n  if (player.prototypeCorruptions[0] === null || player.prototypeCorruptions[0] === undefined) {\r\n    player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  }\r\n\r\n  if (player.corruptionLoadouts === undefined) {\r\n    player.corruptionLoadouts = { ...blankSave.corruptionLoadouts }\r\n    player.corruptionShowStats = true\r\n  }\r\n\r\n  const corruptionLoadouts = Object.keys(\r\n    blankSave.corruptionLoadouts\r\n  ) as (`${keyof Player['corruptionLoadouts']}`)[]\r\n\r\n  for (const key of corruptionLoadouts.map(k => Number(k))) {\r\n    if (player.corruptionLoadouts[key] !== undefined) {\r\n      continue\r\n    }\r\n\r\n    player.corruptionLoadouts[key] = blankSave.corruptionLoadouts[key]\r\n  }\r\n\r\n  if (player.corruptionLoadoutNames.length < blankSave.corruptionLoadoutNames.length) {\r\n    const diff = blankSave.corruptionLoadoutNames.slice(player.corruptionLoadoutNames.length)\r\n\r\n    player.corruptionLoadoutNames.push(...diff)\r\n  }\r\n\r\n  for (let i = 0; i <= 4; i++) {\r\n    if (player.runelevels[i] > calculateMaxRunes(i + 1)) {\r\n      player.runelevels[i] = 0\r\n    }\r\n  }\r\n\r\n  if (data.shopUpgrades.challengeExtension === undefined) {\r\n    player.shopUpgrades.challengeExtension = 0\r\n    player.shopUpgrades.challengeTome = 0\r\n    player.shopUpgrades.seasonPass = 0\r\n    player.shopUpgrades.cubeToQuark = 0\r\n    player.shopUpgrades.tesseractToQuark = 0\r\n    player.shopUpgrades.hypercubeToQuark = 0\r\n  }\r\n  if (data.cubeUpgrades == null || data.cubeUpgrades[19] === 0 || player.cubeUpgrades[19] === 0) {\r\n    for (let i = 121; i <= 125; i++) {\r\n      player.upgrades[i] = 0\r\n    }\r\n  }\r\n\r\n  // assign the save's toggles to the player toggles\r\n  // will overwrite player.toggles keys that exist on both objects,\r\n  // but new keys will default to the values on the player object\r\n  Object.assign(player.toggles, data.toggles)\r\n\r\n  for (const key in blankSave.toggles) {\r\n    if (player.toggles[key] === undefined) {\r\n      player.toggles[key] = blankSave.toggles[key]\r\n    }\r\n  }\r\n\r\n  if (data.dayCheck === undefined) {\r\n    player.dayCheck = null\r\n    player.dayTimer = 0\r\n    player.cubeQuarkDaily = 0\r\n    player.tesseractQuarkDaily = 0\r\n    player.hypercubeQuarkDaily = 0\r\n    player.cubeOpenedDaily = 0\r\n    player.tesseractOpenedDaily = 0\r\n    player.hypercubeOpenedDaily = 0\r\n  }\r\n\r\n  player.singularityUpgrades = {\r\n    goldenQuarks1: new SingularityUpgrade(singularityData.goldenQuarks1, 'goldenQuarks1'),\r\n    goldenQuarks2: new SingularityUpgrade(singularityData.goldenQuarks2, 'goldenQuarks2'),\r\n    goldenQuarks3: new SingularityUpgrade(singularityData.goldenQuarks3, 'goldenQuarks3'),\r\n    starterPack: new SingularityUpgrade(singularityData.starterPack, 'starterPack'),\r\n    wowPass: new SingularityUpgrade(singularityData.wowPass, 'wowPass'),\r\n    cookies: new SingularityUpgrade(singularityData.cookies, 'cookies'),\r\n    cookies2: new SingularityUpgrade(singularityData.cookies2, 'cookies2'),\r\n    cookies3: new SingularityUpgrade(singularityData.cookies3, 'cookies3'),\r\n    cookies4: new SingularityUpgrade(singularityData.cookies4, 'cookies4'),\r\n    cookies5: new SingularityUpgrade(singularityData.cookies5, 'cookies5'),\r\n    ascensions: new SingularityUpgrade(singularityData.ascensions, 'ascensions'),\r\n    corruptionFourteen: new SingularityUpgrade(singularityData.corruptionFourteen, 'corruptionFourteen'),\r\n    corruptionFifteen: new SingularityUpgrade(singularityData.corruptionFifteen, 'corruptionFifteen'),\r\n    singOfferings1: new SingularityUpgrade(singularityData.singOfferings1, 'singOfferings1'),\r\n    singOfferings2: new SingularityUpgrade(singularityData.singOfferings2, 'singOfferings2'),\r\n    singOfferings3: new SingularityUpgrade(singularityData.singOfferings3, 'singOfferings3'),\r\n    singObtainium1: new SingularityUpgrade(singularityData.singObtainium1, 'singObtainium1'),\r\n    singObtainium2: new SingularityUpgrade(singularityData.singObtainium2, 'singObtainium2'),\r\n    singObtainium3: new SingularityUpgrade(singularityData.singObtainium3, 'singObtainium3'),\r\n    singCubes1: new SingularityUpgrade(singularityData.singCubes1, 'singCubes1'),\r\n    singCubes2: new SingularityUpgrade(singularityData.singCubes2, 'singCubes2'),\r\n    singCubes3: new SingularityUpgrade(singularityData.singCubes3, 'singCubes3'),\r\n    singCitadel: new SingularityUpgrade(singularityData.singCitadel, 'singCitadel'),\r\n    singCitadel2: new SingularityUpgrade(singularityData.singCitadel2, 'singCitadel2'),\r\n    octeractUnlock: new SingularityUpgrade(singularityData.octeractUnlock, 'octeractUnlock'),\r\n    singOcteractPatreonBonus: new SingularityUpgrade(singularityData.singOcteractPatreonBonus, 'singOcteractPatreonBonus'),\r\n    intermediatePack: new SingularityUpgrade(singularityData.intermediatePack, 'intermediatePack'),\r\n    advancedPack: new SingularityUpgrade(singularityData.advancedPack, 'advancedPack'),\r\n    expertPack: new SingularityUpgrade(singularityData.expertPack, 'expertPack'),\r\n    masterPack: new SingularityUpgrade(singularityData.masterPack, 'masterPack'),\r\n    divinePack: new SingularityUpgrade(singularityData.divinePack, 'divinePack'),\r\n    wowPass2: new SingularityUpgrade(singularityData.wowPass2, 'wowPass2'),\r\n    potionBuff: new SingularityUpgrade(singularityData.potionBuff, 'potionBuff'),\r\n    potionBuff2: new SingularityUpgrade(singularityData.potionBuff2, 'potionBuff2'),\r\n    potionBuff3: new SingularityUpgrade(singularityData.potionBuff3, 'potionBuff3'),\r\n    singChallengeExtension: new SingularityUpgrade(singularityData.singChallengeExtension, 'singChallengeExtension'),\r\n    singChallengeExtension2: new SingularityUpgrade(singularityData.singChallengeExtension2, 'singChallengeExtension2'),\r\n    singChallengeExtension3: new SingularityUpgrade(singularityData.singChallengeExtension3, 'singChallengeExtension3'),\r\n    singQuarkImprover1: new SingularityUpgrade(singularityData.singQuarkImprover1, 'singQuarkImprover1'),\r\n    singQuarkHepteract: new SingularityUpgrade(singularityData.singQuarkHepteract, 'singQuarkHepteract'),\r\n    singQuarkHepteract2: new SingularityUpgrade(singularityData.singQuarkHepteract2, 'singQuarkHepteract2'),\r\n    singQuarkHepteract3: new SingularityUpgrade(singularityData.singQuarkHepteract3, 'singQuarkHepteract3'),\r\n    singOcteractGain: new SingularityUpgrade(singularityData.singOcteractGain, 'singOcteractGain'),\r\n    singOcteractGain2: new SingularityUpgrade(singularityData.singOcteractGain2, 'singOcteractGain2'),\r\n    singOcteractGain3: new SingularityUpgrade(singularityData.singOcteractGain3, 'singOcteractGain3'),\r\n    singOcteractGain4: new SingularityUpgrade(singularityData.singOcteractGain4, 'singOcteractGain4'),\r\n    singOcteractGain5: new SingularityUpgrade(singularityData.singOcteractGain5, 'singOcteractGain5'),\r\n    wowPass3: new SingularityUpgrade(singularityData.wowPass3, 'wowPass3'),\r\n    ultimatePen: new SingularityUpgrade(singularityData.ultimatePen, 'ultimatePen'),\r\n    platonicTau: new SingularityUpgrade(singularityData.platonicTau, 'platonicTau'),\r\n    platonicAlpha: new SingularityUpgrade(singularityData.platonicAlpha, 'platonicAlpha'),\r\n    platonicDelta: new SingularityUpgrade(singularityData.platonicDelta, 'platonicDelta'),\r\n    platonicPhi: new SingularityUpgrade(singularityData.platonicPhi, 'platonicPhi'),\r\n    singFastForward: new SingularityUpgrade(singularityData.singFastForward, 'singFastForward'),\r\n    singFastForward2: new SingularityUpgrade(singularityData.singFastForward2, 'singFastForward2'),\r\n    singAscensionSpeed: new SingularityUpgrade(singularityData.singAscensionSpeed, 'singAscensionSpeed'),\r\n    singAscensionSpeed2: new SingularityUpgrade(singularityData.singAscensionSpeed2, 'singAscensionSpeed2'),\r\n    oneMind: new SingularityUpgrade(singularityData.oneMind, 'oneMind'),\r\n    wowPass4: new SingularityUpgrade(singularityData.wowPass4, 'wowPass4'),\r\n    offeringAutomatic: new SingularityUpgrade(singularityData.offeringAutomatic, 'offeringAutomatic'),\r\n    blueberries: new SingularityUpgrade(singularityData.blueberries, 'blueberries')\r\n  }\r\n\r\n  player.octeractUpgrades = {\r\n    octeractStarter: new OcteractUpgrade(octeractData.octeractStarter, 'octeractStarter'),\r\n    octeractGain: new OcteractUpgrade(octeractData.octeractGain, 'octeractGain'),\r\n    octeractGain2: new OcteractUpgrade(octeractData.octeractGain2, 'octeractGain2'),\r\n    octeractQuarkGain: new OcteractUpgrade(octeractData.octeractQuarkGain, 'octeractQuarkGain'),\r\n    octeractQuarkGain2: new OcteractUpgrade(octeractData.octeractQuarkGain2, 'octeractQuarkGain2'),\r\n    octeractCorruption: new OcteractUpgrade(octeractData.octeractCorruption, 'octeractCorruption'),\r\n    octeractGQCostReduce: new OcteractUpgrade(octeractData.octeractGQCostReduce, 'octeractGQCostReduce'),\r\n    octeractExportQuarks: new OcteractUpgrade(octeractData.octeractExportQuarks, 'octeractExportQuarks'),\r\n    octeractImprovedDaily: new OcteractUpgrade(octeractData.octeractImprovedDaily, 'octeractImprovedDaily'),\r\n    octeractImprovedDaily2: new OcteractUpgrade(octeractData.octeractImprovedDaily2, 'octeractImprovedDaily2'),\r\n    octeractImprovedDaily3: new OcteractUpgrade(octeractData.octeractImprovedDaily3, 'octeractImprovedDaily3'),\r\n    octeractImprovedQuarkHept: new OcteractUpgrade(octeractData.octeractImprovedQuarkHept, 'octeractImprovedQuarkHept'),\r\n    octeractImprovedGlobalSpeed: new OcteractUpgrade(octeractData.octeractImprovedGlobalSpeed, 'octeractImprovedGlobalSpeed'),\r\n    octeractImprovedAscensionSpeed: new OcteractUpgrade(octeractData.octeractImprovedAscensionSpeed, 'octeractImprovedAscensionSpeed'),\r\n    octeractImprovedAscensionSpeed2: new OcteractUpgrade(octeractData.octeractImprovedAscensionSpeed2, 'octeractImprovedAscensionSpeed2'),\r\n    octeractImprovedFree: new OcteractUpgrade(octeractData.octeractImprovedFree, 'octeractImprovedFree'),\r\n    octeractImprovedFree2: new OcteractUpgrade(octeractData.octeractImprovedFree2, 'octeractImprovedFree2'),\r\n    octeractImprovedFree3: new OcteractUpgrade(octeractData.octeractImprovedFree3, 'octeractImprovedFree3'),\r\n    octeractImprovedFree4: new OcteractUpgrade(octeractData.octeractImprovedFree4, 'octeractImprovedFree4'),\r\n    octeractSingUpgradeCap: new OcteractUpgrade(octeractData.octeractSingUpgradeCap, 'octeractSingUpgradeCap'),\r\n    octeractOfferings1: new OcteractUpgrade(octeractData.octeractOfferings1, 'octeractOfferings1'),\r\n    octeractObtainium1: new OcteractUpgrade(octeractData.octeractObtainium1, 'octeractObtainium1'),\r\n    octeractAscensions: new OcteractUpgrade(octeractData.octeractAscensions, 'octeractAscensions'),\r\n    octeractAscensions2: new OcteractUpgrade(octeractData.octeractAscensions2, 'octeractAscensions2'),\r\n    octeractAscensionsOcteractGain: new OcteractUpgrade(octeractData.octeractAscensionsOcteractGain, 'octeractAscensionsOcteractGain'),\r\n    octeractFastForward: new OcteractUpgrade(octeractData.octeractFastForward, 'octeractFastForward'),\r\n    octeractAutoPotionSpeed: new OcteractUpgrade(octeractData.octeractAutoPotionSpeed, 'octeractAutoPotionSpeed'),\r\n    octeractAutoPotionEfficiency: new OcteractUpgrade(octeractData.octeractAutoPotionEfficiency, 'octeractAutoPotionEfficiency'),\r\n    octeractOneMindImprover: new OcteractUpgrade(octeractData.octeractOneMindImprover, 'octeractOneMindImprover'),\r\n    octeractAmbrosiaLuck: new OcteractUpgrade(octeractData.octeractAmbrosiaLuck, 'octeractAmbrosiaLuck')\r\n  }\r\n\r\n  player.singularityChallenges = {\r\n    noSingularityUpgrades: new SingularityChallenge(singularityChallengeData.noSingularityUpgrades, 'noSingularityUpgrades'),\r\n    oneChallengeCap: new SingularityChallenge(singularityChallengeData.oneChallengeCap, 'oneChallengeCap'),\r\n    noOcteracts: new SingularityChallenge(singularityChallengeData.noOcteracts, 'noOcteracts'),\r\n    limitedAscensions: new SingularityChallenge(singularityChallengeData.limitedAscensions, 'limitedAscensions')\r\n  }\r\n\r\n  if (data.loadedOct4Hotfix === undefined || !player.loadedOct4Hotfix) {\r\n    player.loadedOct4Hotfix = true\r\n    // Only process refund if the save's researches array is already updated to v2\r\n    if (player.researches.length > 200) {\r\n      player.researchPoints += player.researches[200] * 1e56\r\n      player.researches[200] = 0\r\n      buyResearch(200, true, 0.01)\r\n      player.researchPoints += player.researches[195] * 1e60\r\n      player.worlds.add(250 * player.researches[195])\r\n      player.researches[195] = 0\r\n      player.wowCubes.add(player.cubeUpgrades[50] * 5e10)\r\n      player.cubeUpgrades[50] = 0\r\n    }\r\n  }\r\n\r\n  if (player.ascStatToggles === undefined || data.ascStatToggles === undefined) {\r\n    player.ascStatToggles = {\r\n      1: false,\r\n      2: false,\r\n      3: false,\r\n      4: false\r\n    }\r\n  }\r\n  if (player.ascStatToggles[4] === undefined || !('ascStatToggles' in data) || data.ascStatToggles[4] === undefined) {\r\n    player.ascStatToggles[4] = false\r\n  }\r\n\r\n  if (player.usedCorruptions[0] > 0 ||\r\n        (Array.isArray(data.usedCorruptions) && data.usedCorruptions[0] > 0)) {\r\n    player.prototypeCorruptions[0] = 0\r\n    player.usedCorruptions[0] = 0\r\n  }\r\n  if (player.antSacrificeTimerReal === undefined) {\r\n    player.antSacrificeTimerReal = player.antSacrificeTimer / calculateTimeAcceleration().mult\r\n  }\r\n  if (player.subtabNumber === undefined || data.subtabNumber === undefined) {\r\n    player.subtabNumber = 0\r\n  }\r\n  if (data.wowPlatonicCubes === undefined) {\r\n    player.wowPlatonicCubes = new WowPlatonicCubes(0)\r\n    player.wowAbyssals = 0\r\n  }\r\n  if (data.platonicBlessings === undefined) {\r\n    const ascCount = player.ascensionCount\r\n    if (player.currentChallenge.ascension !== 0 && player.currentChallenge.ascension !== 15) {\r\n      void resetCheck('ascensionChallenge', false, true)\r\n    }\r\n    if (player.currentChallenge.ascension === 15) {\r\n      void resetCheck('ascensionChallenge', false, true)\r\n      player.challenge15Exponent = 0\r\n      c15RewardUpdate()\r\n    }\r\n    player.ascensionCount = ascCount\r\n    player.challengecompletions[15] = 0\r\n    player.highestchallengecompletions[15] = 0\r\n    player.platonicBlessings = {\r\n      cubes: 0,\r\n      tesseracts: 0,\r\n      hypercubes: 0,\r\n      platonics: 0,\r\n      hypercubeBonus: 0,\r\n      taxes: 0,\r\n      scoreBonus: 0,\r\n      globalSpeed: 0\r\n    }\r\n    player.platonicUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    player.challenge15Exponent = 0\r\n    player.loadedNov13Vers = false\r\n  }\r\n  if (player.researches.some(k => typeof k !== 'number')) {\r\n    for (let i = 0; i < 200; i++) {\r\n      player.researches[i + 1] = player.researches[i + 1] || 0\r\n    }\r\n  }\r\n  if (data.loadedDec16Vers === false || data.loadedDec16Vers === undefined) {\r\n    if (player.currentChallenge.ascension === 15) {\r\n      void resetCheck('ascensionChallenge', false, true)\r\n      player.challenge15Exponent = 0\r\n      c15RewardUpdate()\r\n    }\r\n    player.challenge15Exponent = 0\r\n    c15RewardUpdate()\r\n    player.loadedDec16Vers = true\r\n  }\r\n\r\n  // in old versions of the game (pre 2.5.0), the import function will only work\r\n  // if this variable = \"YES!\". Don't ask Platonic why.\r\n  if (typeof data.exporttest === 'string') {\r\n    player.exporttest = !testing\r\n  } else {\r\n    player.exporttest = !!data.exporttest\r\n  }\r\n\r\n  const shop = data.shopUpgrades as LegacyShopUpgrades | Player['shopUpgrades']\r\n  if (shop && 'offeringTimerLevel' in shop) {\r\n    player.shopUpgrades = {\r\n      offeringPotion: shop.offeringPotion,\r\n      obtainiumPotion: shop.obtainiumPotion,\r\n      offeringEX: 0,\r\n      offeringAuto: Math.min(1, Number(shop.offeringAutoLevel)),\r\n      obtainiumEX: 0,\r\n      obtainiumAuto: Math.min(1, Number(shop.obtainiumAutoLevel)), //Number(shop.obtainiumAutoLevel),\r\n      instantChallenge: Number(shop.instantChallengeBought),\r\n      antSpeed: 0,\r\n      cashGrab: 0,\r\n      shopTalisman: Number(shop.talismanBought),\r\n      seasonPass: 0,\r\n      challengeExtension: shop.challengeExtension,\r\n      challengeTome: 0, // This was shop.challenge10Tomes\r\n      cubeToQuark: Number(shop.cubeToQuarkBought),\r\n      tesseractToQuark: Number(shop.tesseractToQuarkBought),\r\n      hypercubeToQuark: Number(shop.hypercubeToQuarkBought),\r\n      seasonPass2: 0,\r\n      seasonPass3: 0,\r\n      chronometer: 0,\r\n      infiniteAscent: 0,\r\n      calculator: 0,\r\n      calculator2: 0,\r\n      calculator3: 0,\r\n      calculator4: 0,\r\n      calculator5: 0,\r\n      calculator6: 0,\r\n      constantEX: 0,\r\n      powderEX: 0,\r\n      chronometer2: 0,\r\n      chronometer3: 0,\r\n      seasonPassY: 0,\r\n      seasonPassZ: 0,\r\n      challengeTome2: 0,\r\n      instantChallenge2: 0,\r\n      cashGrab2: 0,\r\n      cubeToQuarkAll: 0,\r\n      obtainiumEX2: 0,\r\n      offeringEX2: 0,\r\n      powderAuto: 0,\r\n      chronometerZ: 0,\r\n      seasonPassLost: 0,\r\n      challenge15Auto: 0,\r\n      extraWarp: 0,\r\n      autoWarp: 0,\r\n      improveQuarkHept: 0,\r\n      improveQuarkHept2: 0,\r\n      improveQuarkHept3: 0,\r\n      improveQuarkHept4: 0,\r\n      shopImprovedDaily: 0,\r\n      shopImprovedDaily2: 0,\r\n      shopImprovedDaily3: 0,\r\n      shopImprovedDaily4: 0,\r\n      offeringEX3: 0,\r\n      obtainiumEX3: 0,\r\n      improveQuarkHept5: 0,\r\n      seasonPassInfinity: 0,\r\n      chronometerInfinity: 0,\r\n      shopSingularityPenaltyDebuff: 0\r\n    }\r\n\r\n    player.worlds.add(150 * shop.offeringTimerLevel + 25/2 * (shop.offeringTimerLevel - 1) * shop.offeringTimerLevel, false)\r\n    player.worlds.add(150 * shop.obtainiumTimerLevel + 25/2 * (shop.obtainiumTimerLevel - 1) * shop.obtainiumTimerLevel, false)\r\n    player.worlds.add(150 * shop.offeringAutoLevel + 25/2 * (shop.offeringAutoLevel - 1) * shop.offeringAutoLevel - 150 * Math.min(1, shop.offeringAutoLevel), false)\r\n    player.worlds.add(150 * shop.obtainiumAutoLevel + 25/2 * (shop.obtainiumAutoLevel - 1) * shop.obtainiumAutoLevel - 150 * Math.min(1, shop.obtainiumAutoLevel), false)\r\n    player.worlds.add(100 * shop.cashGrabLevel + 100/2 * (shop.cashGrabLevel - 1) * shop.cashGrabLevel, false)\r\n    player.worlds.add(200 * shop.antSpeedLevel + 80/2 * (shop.antSpeedLevel - 1) * shop.antSpeedLevel, false)\r\n\r\n    const tomes = shop.challenge10Tomes ?? shop.challengeTome\r\n    player.worlds.add(500 * tomes + 250/2 * (tomes - 1) * (tomes), false)\r\n\r\n    player.worlds.add(\r\n      typeof shop.seasonPass === 'number'\r\n        ? 500 * shop.seasonPass + 250/2 * (shop.seasonPass - 1) * shop.seasonPass\r\n        : 500 * shop.seasonPassLevel + 250/2 * (shop.seasonPassLevel - 1) * shop.seasonPassLevel,\r\n      false\r\n    )\r\n  }\r\n\r\n  if (player.shopUpgrades.seasonPass2 === undefined) {\r\n    player.shopUpgrades.seasonPass2 = 0\r\n    player.shopUpgrades.seasonPass3 = 0\r\n    player.shopUpgrades.chronometer = 0\r\n    player.shopUpgrades.infiniteAscent = 0\r\n  }\r\n\r\n  if (player.runeexp[5] === undefined) {\r\n    player.runeexp[5] = player.runeexp[6] = 0\r\n    player.runelevels[5] = player.runelevels[6] = 0\r\n  }\r\n\r\n  // resets all hepteract values on the player object\r\n  player.hepteractCrafts = {\r\n    chronos: ChronosHepteract,\r\n    hyperrealism: HyperrealismHepteract,\r\n    quark: QuarkHepteract,\r\n    challenge: ChallengeHepteract,\r\n    abyss: AbyssHepteract,\r\n    accelerator: AcceleratorHepteract,\r\n    acceleratorBoost: AcceleratorBoostHepteract,\r\n    multiplier: MultiplierHepteract\r\n  }\r\n\r\n  // if the player has hepteracts, we need to overwrite the player values\r\n  // with the ones the save has.\r\n  if (data.hepteractCrafts != null) {\r\n    for (const item in blankSave.hepteractCrafts) {\r\n      const k = item as keyof Player['hepteractCrafts']\r\n      // if more crafts are added, some keys might not exist in the save\r\n      if (data.hepteractCrafts[k]) {\r\n        player.hepteractCrafts[k] = createHepteract({ ...player.hepteractCrafts[k], ...data.hepteractCrafts[k] })\r\n      }\r\n    }\r\n  }\r\n\r\n  if (data.platonicCubeOpenedDaily === undefined) {\r\n    player.platonicCubeOpenedDaily = 0\r\n    player.platonicCubeQuarkDaily = 0\r\n  }\r\n\r\n  if (data.shopUpgrades.calculator === undefined) {\r\n    player.shopUpgrades.calculator = 0\r\n    player.shopUpgrades.calculator2 = 0\r\n    player.shopUpgrades.calculator3 = 0\r\n    player.shopUpgrades.constantEX = 0\r\n  }\r\n\r\n  while (player.achievements[280] === undefined) {\r\n    player.achievements.push(0)\r\n  }\r\n\r\n  if (data.overfluxOrbs === undefined) {\r\n    player.overfluxOrbs = 0\r\n  }\r\n  if (data.overfluxOrbsAutoBuy === undefined) {\r\n    player.overfluxOrbsAutoBuy = false\r\n  }\r\n  if (data.overfluxPowder === undefined) {\r\n    player.overfluxPowder = 0\r\n    player.shopUpgrades.powderEX = 0\r\n    player.dailyPowderResetUses = 1\r\n  }\r\n\r\n  if (data.ascStatToggles[5] === undefined) {\r\n    player.ascStatToggles[5] = false\r\n  }\r\n\r\n  while (player.platonicUpgrades[20] === undefined) {\r\n    player.platonicUpgrades.push(0)\r\n  }\r\n\r\n  if (data.loadedV253 === undefined) {\r\n    player.loadedV253 = true\r\n    player.worlds.add(10000 * player.shopUpgrades.calculator + 10000 / 2 * (player.shopUpgrades.calculator - 1) * (player.shopUpgrades.calculator), false)\r\n    player.worlds.add(10000 * player.shopUpgrades.calculator2 + 5000 / 2 * (player.shopUpgrades.calculator2 - 1) * (player.shopUpgrades.calculator2), false)\r\n    player.worlds.add(25000 * player.shopUpgrades.calculator3 + 25000 / 2 * (player.shopUpgrades.calculator3 - 1) * (player.shopUpgrades.calculator3), false)\r\n    player.shopUpgrades.calculator = 0\r\n    player.shopUpgrades.calculator2 = 0\r\n    player.shopUpgrades.calculator3 = 0\r\n    player.wowAbyssals += 1e8 * player.platonicUpgrades[16] // Refund based off of abyss hepteracts spent\r\n    void Alert(i18next.t('general.updateAlerts.june282021'))\r\n  }\r\n\r\n  if (data.loadedV255 === undefined) {\r\n    player.loadedV255 = true\r\n    player.worlds.add(1000 * player.shopUpgrades.powderEX + 1000 / 2 * (player.shopUpgrades.powderEX - 1) * (player.shopUpgrades.powderEX), false)\r\n    player.shopUpgrades.powderEX = 0\r\n    void Alert(i18next.t('general.updateAlerts.july22021'))\r\n    player.firstCostAnts = new Decimal('1e700')\r\n    player.firstOwnedAnts = 0\r\n  }\r\n\r\n  if (data.autoResearchMode === undefined) {\r\n    player.autoResearchMode = 'manual'\r\n  }\r\n\r\n  if (data.singularityCount === undefined) {\r\n    player.singularityCount = 0\r\n    player.goldenQuarks = 0\r\n\r\n    player.quarksThisSingularity = 0\r\n    player.quarksThisSingularity += +player.worlds\r\n    const keys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\r\n    for (const key of keys) {\r\n      player.quarksThisSingularity += getQuarkInvestment(key)\r\n    }\r\n  }\r\n\r\n  if (data.totalQuarksEver === undefined) {\r\n    player.totalQuarksEver = 0\r\n  }\r\n\r\n  if (data.hotkeys === undefined) {\r\n    player.hotkeys = {}\r\n    player.theme = 'Dark Mode'\r\n    player.notation = 'Default'\r\n  }\r\n\r\n  // Update (read: check) for undefined shop upgrades. Also checks above max level.\r\n  const shopKeys = Object.keys(blankSave.shopUpgrades) as (keyof Player['shopUpgrades'])[]\r\n  for (const shopUpgrade of shopKeys) {\r\n    if (player.shopUpgrades[shopUpgrade] === undefined) {\r\n      player.shopUpgrades[shopUpgrade] = 0\r\n    }\r\n    if (player.shopUpgrades[shopUpgrade] > shopData[shopUpgrade].maxLevel) {\r\n      player.shopUpgrades[shopUpgrade] = shopData[shopUpgrade].maxLevel\r\n    }\r\n  }\r\n\r\n  if (data.singularityUpgrades != null) {\r\n    for (const item in blankSave.singularityUpgrades) {\r\n      const k = item as keyof Player['singularityUpgrades']\r\n      // if more crafts are added, some keys might not exist in the save\r\n      let updatedData:ISingularityData\r\n      if (data.singularityUpgrades[k]) {\r\n        const { level, goldenQuarksInvested, toggleBuy, freeLevels } = data.singularityUpgrades[k]\r\n\r\n        updatedData = {\r\n          maxLevel: singularityData[k].maxLevel,\r\n          costPerLevel: singularityData[k].costPerLevel,\r\n\r\n          level,\r\n          goldenQuarksInvested,\r\n          toggleBuy,\r\n          freeLevels,\r\n          minimumSingularity: singularityData[k].minimumSingularity,\r\n          effect: singularityData[k].effect,\r\n          canExceedCap: singularityData[k].canExceedCap,\r\n          specialCostForm: singularityData[k].specialCostForm,\r\n          qualityOfLife: singularityData[k].qualityOfLife\r\n        }\r\n        player.singularityUpgrades[k] = new SingularityUpgrade(updatedData, k.toString())\r\n\r\n        if (player.singularityUpgrades[k].minimumSingularity > player.highestSingularityCount) {\r\n          player.singularityUpgrades[k].refund()\r\n        }\r\n\r\n        const cost = player.singularityUpgrades[k].level * (player.singularityUpgrades[k].level + 1) *\r\n                             player.singularityUpgrades[k].costPerLevel / 2\r\n        if (player.singularityUpgrades[k].maxLevel !== -1 &&\r\n                    player.singularityUpgrades[k].level <= player.singularityUpgrades[k].maxLevel &&\r\n                    player.singularityUpgrades[k].goldenQuarksInvested !== cost &&\r\n                    player.singularityUpgrades[k].specialCostForm === 'Default') {\r\n          player.singularityUpgrades[k].refund()\r\n        }\r\n      } else {\r\n        player.singularityUpgrades[k].name = `[NEW!] ${player.singularityUpgrades[k].name}`\r\n      }\r\n    }\r\n  }\r\n\r\n  if (data.octeractUpgrades != null) { // TODO: Make this more DRY -Platonic, July 15 2022\r\n    for (const item in blankSave.octeractUpgrades) {\r\n      const k = item as keyof Player['octeractUpgrades']\r\n      let updatedData:IOcteractData\r\n      if (data.octeractUpgrades[k]) {\r\n        const { level, octeractsInvested, toggleBuy, freeLevels } = data.octeractUpgrades[k]\r\n        updatedData = {\r\n          maxLevel: octeractData[k].maxLevel,\r\n          costPerLevel: octeractData[k].costPerLevel,\r\n          level,\r\n          octeractsInvested,\r\n          toggleBuy,\r\n          effect: octeractData[k].effect,\r\n          costFormula: octeractData[k].costFormula,\r\n          freeLevels,\r\n          qualityOfLife: octeractData[k].qualityOfLife\r\n        }\r\n        player.octeractUpgrades[k] = new OcteractUpgrade(updatedData, k.toString())\r\n\r\n        if (player.octeractUpgrades[k].maxLevel !== -1 &&\r\n                    player.octeractUpgrades[k].level > player.octeractUpgrades[k].maxLevel) {\r\n          player.octeractUpgrades[k].refund()\r\n        }\r\n      } else {\r\n        player.octeractUpgrades[k].name = `[NEW!] ${player.octeractUpgrades[k].name}`\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  if (data.singularityChallenges != null) {\r\n    for (const item in blankSave.singularityChallenges) {\r\n      const k = item as keyof Player['singularityChallenges']\r\n      let updatedData:ISingularityChallengeData\r\n      if (data.singularityChallenges[k]) {\r\n\r\n        // This is a HOTFIX. Please do not remove unless you can think of a better way\r\n        if (data.loadedV2927Hotfix1 === undefined && k === 'noSingularityUpgrades') {\r\n          const comps = data.singularityChallenges[k].completions\r\n          if (comps > 0) {\r\n            data.singularityChallenges[k].highestSingularityCompleted = 4 * comps - 3\r\n          }\r\n        }\r\n\r\n        const { completions, highestSingularityCompleted, enabled } = data.singularityChallenges[k]\r\n        updatedData = {\r\n          baseReq: singularityChallengeData[k].baseReq,\r\n          completions,\r\n          maxCompletions: singularityChallengeData[k].maxCompletions,\r\n          unlockSingularity: singularityChallengeData[k].unlockSingularity,\r\n          HTMLTag: singularityChallengeData[k].HTMLTag,\r\n          highestSingularityCompleted,\r\n          enabled,\r\n          singularityRequirement: singularityChallengeData[k].singularityRequirement,\r\n          effect: singularityChallengeData[k].effect\r\n        }\r\n        player.singularityChallenges[k] = new SingularityChallenge(updatedData, k.toString())\r\n      }\r\n    }\r\n  }\r\n\r\n  while (player.cubeUpgrades.length < 71) {\r\n    player.cubeUpgrades.push(0)\r\n  }\r\n\r\n  if (data.dailyCodeUsed === undefined) {\r\n    player.dailyCodeUsed = false\r\n  }\r\n\r\n  if (player.usedCorruptions[1] > 0 || player.prototypeCorruptions[1] > 0) {\r\n    player.usedCorruptions[1] = 0\r\n    player.prototypeCorruptions[1] = 0\r\n  }\r\n\r\n  if (data.goldenQuarksTimer === undefined || player.goldenQuarksTimer === undefined) {\r\n    player.goldenQuarksTimer = 90000\r\n  }\r\n\r\n  if (data.hepteractAutoCraftPercentage === undefined) {\r\n    player.hepteractAutoCraftPercentage = 50\r\n  }\r\n\r\n  if (data.autoWarpCheck === undefined || player.shopUpgrades.autoWarp === 0) {\r\n    player.autoWarpCheck = false\r\n  }\r\n\r\n  if (data.loadedV297Hotfix1 === undefined) {\r\n    player.loadedV297Hotfix1 = true\r\n\r\n    player.singularityUpgrades.singCubes1.refund()\r\n    player.singularityUpgrades.singObtainium1.refund()\r\n    player.singularityUpgrades.singOfferings1.refund()\r\n    player.singularityUpgrades.ascensions.refund()\r\n\r\n    if (player.codes.get(40) && player.singularityCount > 0) {\r\n      player.singularityUpgrades.singCubes1.freeLevels += 5\r\n      player.singularityUpgrades.singOfferings1.freeLevels += 5\r\n      player.singularityUpgrades.singObtainium1.freeLevels += 5\r\n      player.singularityUpgrades.ascensions.freeLevels += 5\r\n    }\r\n\r\n    if (player.singularityCount > 0) {\r\n      void Alert(i18next.t('general.updateAlerts.v297hotfix1Sing'))\r\n    } else {\r\n      void Alert(i18next.t('general.updateAlerts.v297hotfix1NoSing'))\r\n    }\r\n  }\r\n\r\n  if (data.shopBuyMaxToggle === undefined) {\r\n    player.shopBuyMaxToggle = false\r\n    player.shopConfirmationToggle = true\r\n  }\r\n\r\n  if (data.wowOcteracts === undefined) {\r\n    player.wowOcteracts = 0\r\n    player.octeractTimer = 0\r\n  }\r\n\r\n  if (data.shopHideToggle === undefined) {\r\n    player.shopHideToggle = false\r\n  }\r\n\r\n  if (data.researchBuyMaxToggle === undefined) {\r\n    player.researchBuyMaxToggle = false\r\n  }\r\n\r\n  if (data.cubeUpgradesBuyMaxToggle === undefined) {\r\n    player.cubeUpgradesBuyMaxToggle = false\r\n  }\r\n\r\n  if (data.ascensionCounterRealReal === undefined) {\r\n    player.ascensionCounterRealReal = 0\r\n  }\r\n\r\n  if (data.totalWowOcteracts === undefined) {\r\n    player.totalWowOcteracts = 0\r\n  }\r\n\r\n  if (data.highestSingularityCount === undefined) {\r\n    player.highestSingularityCount = player.singularityCount\r\n    if (player.singularityCount > 0) {\r\n      player.goldenQuarks += 200\r\n      player.goldenQuarks += 100 * Math.min(10, player.singularityCount)\r\n\r\n      if (player.singularityCount >= 5) {\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 1\r\n      }\r\n\r\n      if (player.singularityCount >= 10) {\r\n        player.singularityUpgrades.goldenQuarks3.freeLevels += 2\r\n      }\r\n    }\r\n  }\r\n\r\n  if (data.autoPotionTimer === undefined) {\r\n    player.autoPotionTimer = 0\r\n  }\r\n  if (data.autoPotionTimerObtainium === undefined) {\r\n    player.autoPotionTimerObtainium = 0\r\n  }\r\n  if (data.insideSingularityChallenge === undefined) {\r\n    player.insideSingularityChallenge = false\r\n  }\r\n\r\n  if (data.loadedV2930Hotfix1 === undefined) {\r\n    if (player.singularityCount > 230) {\r\n      player.singularityCount = 230\r\n    }\r\n    if (player.highestSingularityCount > 230) {\r\n      player.highestSingularityCount = 230\r\n      void Alert(i18next.t('general.updateAlerts.sing230Balancing'))\r\n    }\r\n    player.loadedV2930Hotfix1 = true\r\n  }\r\n\r\n  if (data.loadedV2931Hotfix1 === undefined) {\r\n    player.loadedV2931Hotfix1 = true\r\n    player.shopUpgrades.obtainiumEX3 = Math.min(1000, player.shopUpgrades.obtainiumEX3 * 2)\r\n    player.shopUpgrades.offeringEX3 = Math.min(1000, player.shopUpgrades.offeringEX3 * 2)\r\n    player.shopUpgrades.seasonPassInfinity = Math.min(1000, player.shopUpgrades.seasonPassInfinity * 2)\r\n    player.shopUpgrades.chronometerInfinity = Math.min(1000, player.shopUpgrades.chronometerInfinity * 2)\r\n    player.shopUpgrades.improveQuarkHept5 = Math.min(100, player.shopUpgrades.improveQuarkHept5 * 2)\r\n    player.singularityUpgrades.offeringAutomatic.refund()\r\n    void Alert(i18next.t('general.updateAlerts.december22xxxx'))\r\n  }\r\n\r\n  if (data.loadedV21003Hotfix1 === undefined) {\r\n    player.loadedV21003Hotfix1 = true\r\n    player.singularityUpgrades.blueberries.refund()\r\n    void Alert(i18next.t('general.updateAlerts.january42023'))\r\n  }\r\n\r\n  if (data.loadedV21007Hotfix1 === undefined) {\r\n    player.loadedV21007Hotfix1 = true\r\n    if (player.octeractUpgrades.octeractQuarkGain.level >= 10000) {\r\n      player.octeractUpgrades.octeractQuarkGain.refund()\r\n    }\r\n  }\r\n\r\n  const oldest = localStorage.getItem('firstPlayed')\r\n\r\n  if (data.firstPlayed == undefined) {\r\n    // If the save is from before v2.9.7 staticians\r\n    player.firstPlayed = oldest ?? new Date().toISOString()\r\n  } else if (data.firstPlayed?.includes('Before')) {\r\n    // The first version with player.firstPlayed set the date to\r\n    // \"Before {date.toString}\"\r\n    player.firstPlayed = oldest ?? new Date().toISOString()\r\n  } else {\r\n    // Otherwise just set the firstPlayed time to either the oldest\r\n    // stored, or the date in the save being loaded.\r\n    player.firstPlayed = oldest ?? data.firstPlayed\r\n  }\r\n\r\n  if (data.autoCubeUpgradesToggle === undefined) {\r\n    player.autoCubeUpgradesToggle = false\r\n    player.autoPlatonicUpgradesToggle = false\r\n  }\r\n}\r\n", "import type { Module } from 'i18next'\r\n\r\nexport default {\r\n  type: 'postProcessor',\r\n  name: 'ColorText',\r\n  process: (value: string): string => {\r\n    if (!value.includes('<<')) {\r\n      return value\r\n    }\r\n\r\n    return value.replace(/<<(.*?)\\|(.*?)>>/g, '<span style=\"color:$1\">$2</span>')\r\n  }\r\n} as Module\r\n", "import i18next, { type Resource } from 'i18next'\r\nimport { prod } from './Config'\r\nimport { DOMCacheGetOrSet } from './Cache/DOM'\r\nimport ColorTextPlugin from './Plugins/ColorText'\r\nimport { Confirm } from './UpdateHTML'\r\n\r\n// For 'flag': https://emojipedia.org/emoji-flag-sequence/\r\n// Searching \"flag <country>\" in their search bar will help verify the code.\r\nconst supported: Record<string, { name: string, flag: string }> = {\r\n  // Define language properties and mappings here.\r\n  en: { name: 'English', flag: '\uD83C\uDDFA\uD83C\uDDF8' }, // Or '\uD83C\uDDFA\uD83C\uDDF8 / \uD83C\uDDEC\uD83C\uDDE7', no name?\r\n  zh: { name: 'Chinese', flag: '\uD83C\uDDE8\uD83C\uDDF3' },\r\n  fr: { name: 'French', flag: '\uD83C\uDFF3\uFE0F' },\r\n  de: { name: 'German', flag: '\uD83C\uDDE9\uD83C\uDDEA' },\r\n  pl: { name: 'Polish', flag: '\uD83C\uDDF5\uD83C\uDDF1' },\r\n  es: { name: 'Spanish', flag: '\uD83C\uDDEA\uD83C\uDDF8' },\r\n  ru: { name: 'Russian', flag: '\uD83C\uDDF7\uD83C\uDDFA' }\r\n}\r\n\r\nconst languageCache = new Map<string, { translation: Resource }>()\r\n\r\nexport const init = async (): Promise<void> => {\r\n  const resources: Record<string, Resource> = {}\r\n  const language = localStorage.getItem('language') ?? 'en'\r\n\r\n  const response = await fetch(`./translations/${language}.json`)\r\n  const file = await response.json() as Resource\r\n\r\n  languageCache.set(language, { translation: file })\r\n  resources[language] = { translation: file }\r\n\r\n  if (language !== 'en') {\r\n    // We always need to load English, to use as a fallback\r\n    const response = await fetch('./translations/en.json')\r\n    const file = await response.json() as Resource\r\n\r\n    languageCache.set('en', { translation: file })\r\n    resources.en = { translation: file }\r\n  }\r\n\r\n  await i18next.use(ColorTextPlugin).init({\r\n    lng: language,\r\n    fallbackLng: 'en',\r\n    debug: !prod,\r\n    resources,\r\n    postProcess: ['ColorText'],\r\n    // crowdin returns an empty string when a translation for\r\n    // a language isn't present\r\n    returnEmptyString: false,\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  })\r\n\r\n  buildLanguageTab()\r\n  translateHTML()\r\n}\r\n\r\nfunction buildLanguageButton(langID: string, name: string, flag: string) {\r\n  const mainButton = document.createElement('button')\r\n  mainButton.id = `language_${langID}`\r\n  mainButton.className = 'language-select'\r\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n  mainButton.addEventListener('click', async () => {\r\n    if (!languageCache.has(langID)) {\r\n      const response = await fetch(`./translations/${langID}.json`)\r\n      const file = await response.json() as Resource\r\n\r\n      languageCache.set(langID, { translation: file })\r\n      i18next.addResourceBundle(langID, 'translation', file)\r\n    }\r\n\r\n    // i18next.addResourceBundle\r\n    await i18next.changeLanguage(langID)\r\n    localStorage.setItem('language', langID)\r\n\r\n    const shouldReload = await Confirm(i18next.t('general.languageChange'))\r\n\r\n    if (shouldReload) {\r\n      location.reload()\r\n    }\r\n  })\r\n\r\n  const flagSpan = document.createElement('span')\r\n  flagSpan.className = 'lang-flag'\r\n  flagSpan.textContent = flag\r\n  mainButton.appendChild(flagSpan)\r\n\r\n  const nameSpan = document.createElement('span')\r\n  nameSpan.className = 'lang-name'\r\n  nameSpan.textContent = name\r\n  mainButton.appendChild(nameSpan)\r\n\r\n  return mainButton\r\n}\r\n\r\nfunction buildLanguageTab() {\r\n  const langSelector = DOMCacheGetOrSet('languageOptions')\r\n  for (const langID in supported) {\r\n    const langButton = buildLanguageButton(langID, supported[langID].name, supported[langID].flag)\r\n    langSelector.appendChild(langButton)\r\n  }\r\n}\r\n\r\nfunction translateHTML () {\r\n  const i18n = document.querySelectorAll('*[i18n]')\r\n\r\n  for (const element of Array.from(i18n)) {\r\n    const key = element.getAttribute('i18n')!\r\n    const value = i18next.t(key)\r\n\r\n    if (value.includes('<span')) {\r\n      element.innerHTML = value\r\n    } else {\r\n      element.textContent = value\r\n    }\r\n  }\r\n}\r\n\r\n"],
  "mappings": "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",
  "names": []
}
